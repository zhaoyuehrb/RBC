%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:56:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGGCGCCGCGGGUCAGGCAGCUGCGUGCGCGUCUCCUCCAGGCAGCAAGGGGAACCCGAGGCCGCCGGCGCCCGGACCAUGUCGUCUCCGGGGCCGUCGCAGCCGCCGGCCGAGGACCCGCCCUGGCCCGCGCGCCUCCUGCGUGCGCCUCUGGGGCUGCUGCGGCUGGACCCCAGCG\
) } def
/len { sequence length } bind def

/coor [
[147.42266846 357.09426880]
[137.38009644 345.95217896]
[134.57139587 331.21746826]
[139.81092834 317.16232300]
[151.57954407 307.86181641]
[166.46511841 306.01251221]
[180.14987183 312.14904785]
[174.40962219 298.29083252]
[168.66937256 284.43264771]
[162.92910767 270.57446289]
[157.18885803 256.71627808]
[151.33052063 242.90757751]
[145.35449219 229.14941406]
[139.37847900 215.39123535]
[133.40246582 201.63307190]
[127.42645264 187.87490845]
[121.45043182 174.11672974]
[117.39347839 171.55587769]
[114.91508484 166.40834045]
[115.51417542 159.78533936]
[110.01136017 145.83116150]
[104.50854492 131.87698364]
[99.00573730 117.92280579]
[79.86440277 106.00974274]
[85.70859528 80.62418365]
[74.23624420 70.96059418]
[62.76388550 61.29699707]
[51.29153061 51.63339996]
[39.81917953 41.96980286]
[28.34682274 32.30620956]
[6.75849867 35.15678024]
[-8.87103271 15.41215420]
[-23.65292549 12.86349773]
[-38.43481827 10.31484222]
[-47.44789124 11.94251156]
[-53.44641495 7.59442091]
[-68.18264008 4.79376459]
[-82.91886139 1.99310863]
[-97.65509033 -0.80754763]
[-112.39131165 -3.60820389]
[-127.23362732 -5.77748871]
[-142.15498352 -7.31145096]
[-157.07633972 -8.84541321]
[-171.99769592 -10.37937546]
[-181.54127502 1.74183607]
[-196.13050842 6.75759983]
[-211.11003113 3.06740308]
[-221.69992065 -8.15122509]
[-224.52099609 -23.31846237]
[-218.67306519 -37.59449768]
[-206.02217102 -46.42390060]
[-190.60516357 -46.98923874]
[-177.34156799 -39.11011887]
[-170.46374512 -25.30073547]
[-155.54238892 -23.76677322]
[-140.62101746 -22.23281097]
[-125.69966125 -20.69884872]
[-132.87605286 -33.87076950]
[-127.21414185 -47.76115799]
[-112.87451935 -52.16287613]
[-100.39441681 -43.84138870]
[-98.94465637 -28.91161346]
[-109.59066010 -18.34442902]
[-94.85443115 -15.54377270]
[-80.11820984 -12.74311638]
[-65.38198090 -9.94246006]
[-50.64575958 -7.14180374]
[-35.88616180 -4.46705055]
[-21.10426903 -1.91839468]
[-6.32237673 0.63026106]
[4.10159206 -10.15588188]
[1.04975200 -24.84214211]
[-2.00208807 -39.52840424]
[-5.05392838 -54.21466446]
[-9.87459850 -62.00221634]
[-8.03024673 -69.17762756]
[-10.83090305 -83.91385651]
[-13.63155937 -98.65007782]
[-16.43221474 -113.38630676]
[-19.23287201 -128.12252808]
[-22.03352737 -142.85874939]
[-36.56089020 -147.84385681]
[-46.63729858 -159.43530273]
[-49.55224609 -174.51504517]
[-44.52162552 -189.02671814]
[-32.89865494 -199.06674194]
[-17.80984688 -201.93440247]
[-3.31402087 -196.85832214]
[6.68952084 -185.20393372]
[9.50987625 -170.10621643]
[4.38838243 -155.62637329]
[-7.29730272 -145.65940857]
[-4.49664640 -130.92318726]
[-1.69599044 -116.18695831]
[1.10466576 -101.45073700]
[3.90532184 -86.71450806]
[6.70597792 -71.97828674]
[9.63233280 -57.26650620]
[12.68417358 -42.58024597]
[15.73601341 -27.89398384]
[18.78785324 -13.20772171]
[38.14851379 0.37433705]
[38.01041794 20.83385468]
[49.48277283 30.49744987]
[60.95512772 40.16104507]
[72.42748260 49.82464218]
[83.89983368 59.48823547]
[95.37219238 69.15183258]
[110.30609894 70.55835724]
[123.38101196 63.20670319]
[136.45591736 55.85505295]
[144.69285583 42.34714890]
[159.57884216 42.85367966]
[172.65374756 35.50202560]
[185.72865295 28.15037346]
[198.80355835 20.79871941]
[204.76789856 13.84807587]
[212.16505432 13.43534374]
[225.36357117 6.30799055]
[238.56208801 -0.81936288]
[242.84451294 -16.03239441]
[256.67056274 -23.68851662]
[271.83746338 -19.24548721]
[279.34698486 -5.33927584]
[274.74383545 9.77980804]
[260.75900269 17.14188004]
[245.68943787 12.37915325]
[232.49092102 19.50650597]
[219.29240417 26.63385963]
[206.15521240 33.87362671]
[193.08030701 41.22528076]
[180.00540161 48.57693481]
[166.93049622 55.92858505]
[159.62876892 68.91065216]
[143.80757141 68.92996216]
[130.73266602 76.28160858]
[117.65775299 83.63326263]
[121.01258087 100.17498779]
[112.95991516 112.41999054]
[118.46272278 126.37416840]
[123.96553802 140.32833862]
[129.46835327 154.28251648]
[135.20860291 168.14071655]
[141.18461609 181.89888000]
[147.16062927 195.65705872]
[153.13665771 209.41522217]
[159.11267090 223.17338562]
[165.08868408 236.93156433]
[171.39294434 243.57543945]
[171.04705811 250.97601318]
[176.78730774 264.83419800]
[182.52755737 278.69238281]
[188.26780701 292.55059814]
[194.00805664 306.40878296]
[203.22476196 314.06442261]
[203.10623169 324.72647095]
[210.68003845 337.67395020]
[218.25386047 350.62142944]
[225.82766724 363.56890869]
[233.40147400 376.51641846]
[240.97528076 389.46389771]
[248.65934753 402.34625244]
[256.45309448 415.16253662]
[264.35598755 427.91183472]
[272.36743164 440.59320068]
[287.12857056 447.73745728]
[288.05200195 464.11059570]
[274.18777466 472.86929321]
[259.79821777 465.00338745]
[259.68606567 448.60461426]
[251.67463684 435.92327881]
[245.42912292 431.93807983]
[243.63681030 422.95629883]
[235.84306335 410.14001465]
[229.66648865 406.04876709]
[228.02780151 397.03768921]
[220.45399475 384.09020996]
[212.88017273 371.14273071]
[205.30636597 358.19525146]
[197.73255920 345.24777222]
[190.15875244 332.30026245]
[186.77836609 346.91439819]
[176.30947876 357.65698242]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 154]
[8 153]
[9 152]
[10 151]
[11 150]
[12 148]
[13 147]
[14 146]
[15 145]
[16 144]
[17 143]
[20 142]
[21 141]
[22 140]
[23 139]
[25 108]
[26 107]
[27 106]
[28 105]
[29 104]
[30 103]
[32 70]
[33 69]
[34 68]
[36 67]
[37 66]
[38 65]
[39 64]
[40 63]
[41 57]
[42 56]
[43 55]
[44 54]
[71 101]
[72 100]
[73 99]
[74 98]
[76 97]
[77 96]
[78 95]
[79 94]
[80 93]
[81 92]
[109 137]
[110 136]
[111 135]
[113 133]
[114 132]
[115 131]
[116 130]
[118 129]
[119 128]
[120 127]
[156 181]
[157 180]
[158 179]
[159 178]
[160 177]
[161 176]
[162 174]
[163 173]
[164 171]
[165 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
