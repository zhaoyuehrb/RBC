%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:44:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGUGACCACAGGUGUCCCCGUCGUGCUCACCUGCACCGGCUGCGAGGAGCAGGGAGCUCCUCAAAGAGCUCAGGAACGGACAGGACAUGGACACAGUGGUCUUUGAAGACGUGGUUGUGGAUUUCACGCUGGAGGAGUGGGCCUUGCUGAAUCCUGCUCAGAGAAAACUCUACAGAGAUGUCAUGC\
) } def
/len { sequence length } bind def

/coor [
[210.01445007 168.49989319]
[199.63429260 161.14286804]
[191.73432922 151.14685059]
[186.96166992 139.31433105]
[185.71179199 126.59889984]
[171.06433105 123.36589813]
[156.41688538 120.13290405]
[141.76943970 116.89990997]
[127.12199402 113.66690826]
[112.47454834 110.43391418]
[102.28576660 116.10143280]
[90.92220306 113.49349976]
[84.22424316 103.95047760]
[69.63285828 100.47317505]
[55.04148102 96.99587250]
[40.45009995 93.51856995]
[25.85872269 90.04126740]
[11.26734161 86.56396484]
[-2.08807874 94.58085632]
[-16.83627701 90.84651947]
[-24.39685059 78.06475830]
[-38.98823166 74.58745575]
[-53.57960892 71.11015320]
[-68.79750824 75.43752289]
[-79.38441467 64.96055603]
[-93.97579193 61.48325348]
[-108.59571838 58.12798691]
[-123.24316406 54.89499283]
[-137.80236816 64.57570648]
[-154.53132629 60.81538010]
[-163.19894409 46.41366196]
[-177.89837646 43.42586899]
[-192.59779358 40.43807983]
[-207.29722595 37.45029068]
[-211.40402222 38.99381256]
[-215.38540649 39.12463379]
[-218.80940247 38.05806351]
[-221.35951233 36.12842941]
[-222.86373901 33.74060059]
[-237.33078003 29.77766991]
[-251.79782104 25.81473923]
[-266.26486206 21.85180855]
[-282.33428955 31.85683823]
[-300.31124878 27.04164314]
[-308.92761230 10.90636158]
[-323.51901245 7.42905903]
[-338.11038208 3.95175672]
[-352.70175171 0.47445455]
[-367.29315186 -3.00284767]
[-381.88452148 -6.48014975]
[-396.47589111 -9.95745182]
[-410.83917236 -2.81068969]
[-425.32064819 -9.71474838]
[-428.81140137 -25.37342644]
[-418.63363647 -37.77472305]
[-402.59481812 -37.40542984]
[-392.99859619 -24.54883194]
[-378.40722656 -21.07152939]
[-363.81585693 -17.59422684]
[-349.22445679 -14.11692524]
[-334.63308716 -10.63962269]
[-320.04171753 -7.16232109]
[-305.45031738 -3.68501854]
[-297.24020386 -11.64054298]
[-286.09158325 -14.66747284]
[-274.75225830 -11.89958572]
[-266.07546997 -3.91396666]
[-262.30194092 7.38477039]
[-247.83488464 11.34770107]
[-233.36785889 15.31063271]
[-218.90081787 19.27356339]
[-204.30943298 22.75086594]
[-189.61001587 25.73865509]
[-174.91058350 28.72644424]
[-160.21115112 31.71423531]
[-150.55818176 23.16160774]
[-137.54685974 21.71491241]
[-125.90982819 28.12608910]
[-120.01016235 40.24754333]
[-105.36271667 43.48054123]
[-98.13905334 41.84884262]
[-90.49848938 46.89187622]
[-75.90711212 50.36917877]
[-61.73288345 45.79309082]
[-50.10230637 56.51877213]
[-35.51092911 59.99607468]
[-20.91954803 63.47337723]
[-8.40689278 55.47531509]
[6.44037724 58.79393387]
[14.74464417 71.97258759]
[29.33602333 75.44989014]
[43.92740250 78.92719269]
[58.51878357 82.40449524]
[73.11016083 85.88179779]
[87.70154572 89.35910034]
[103.63774872 84.14920807]
[115.70754242 95.78646088]
[130.35499573 99.01946259]
[145.00244141 102.25245667]
[159.64988708 105.48545837]
[174.29733276 108.71845245]
[188.94477844 111.95145416]
[198.66049194 97.33354187]
[213.20838928 87.57633209]
[230.35073853 84.14814758]
[247.46321106 87.54632568]
[261.93652344 97.22521210]
[271.57440186 111.68360138]
[274.92672729 128.69754028]
[289.71780396 131.19247437]
[304.50885010 133.68742371]
[319.29989624 136.18235779]
[334.09094238 138.67730713]
[346.88107300 129.78627014]
[361.84576416 132.52720642]
[370.24319458 144.77542114]
[385.03424072 147.27037048]
[399.82528687 149.76530457]
[414.61636353 152.26023865]
[429.40740967 154.75518799]
[444.19845581 157.25012207]
[458.98950195 159.74507141]
[473.82019043 161.99250793]
[488.68634033 163.99180603]
[503.55252075 165.99110413]
[518.41870117 167.99041748]
[526.69097900 160.88943481]
[537.28912354 159.55213928]
[546.67163086 164.18139648]
[551.83679199 173.02624512]
[566.62786865 175.52119446]
[581.41888428 178.01612854]
[596.20996094 180.51106262]
[611.04064941 182.75849915]
[625.90679932 184.75781250]
[640.77294922 186.75711060]
[655.63909912 188.75642395]
[666.36883545 177.70294189]
[681.37438965 175.11717224]
[694.86572266 181.78417969]
[701.76165771 194.95930481]
[716.62780762 196.95860291]
[731.49401855 198.95790100]
[747.99768066 195.07666016]
[756.29595947 209.86096191]
[744.38659668 221.92761230]
[729.49468994 213.82406616]
[714.62854004 211.82476807]
[699.76239014 209.82545471]
[689.63061523 220.71057129]
[674.85729980 223.57635498]
[661.06805420 217.11805725]
[653.63983154 203.62257385]
[638.77368164 201.62327576]
[623.90747070 199.62397766]
[609.04132080 197.62466431]
[604.75439453 199.77040100]
[599.07171631 199.23193359]
[593.71502686 195.30212402]
[578.92395020 192.80718994]
[564.13293457 190.31224060]
[549.34185791 187.81730652]
[531.78289795 195.88731384]
[516.41937256 182.85658264]
[501.55322266 180.85726929]
[486.68704224 178.85797119]
[471.82089233 176.85865784]
[467.53393555 179.00439453]
[461.85128784 178.46592712]
[456.49456787 174.53611755]
[441.70352173 172.04118347]
[426.91247559 169.54623413]
[412.12139893 167.05130005]
[397.33035278 164.55636597]
[382.53930664 162.06141663]
[367.74826050 159.56648254]
[355.79776001 168.38243103]
[340.76196289 166.06291199]
[331.59600830 153.46835327]
[316.80496216 150.97341919]
[302.01391602 148.47846985]
[287.22286987 145.98353577]
[272.43179321 143.48858643]
[266.66333008 154.70793152]
[257.95706177 163.86225891]
[247.01004028 170.20397949]
[234.70294189 173.21122742]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 102]
[6 101]
[7 100]
[8 99]
[9 98]
[10 97]
[13 95]
[14 94]
[15 93]
[16 92]
[17 91]
[18 90]
[21 87]
[22 86]
[23 85]
[25 83]
[26 82]
[27 80]
[28 79]
[31 75]
[32 74]
[33 73]
[34 72]
[39 71]
[40 70]
[41 69]
[42 68]
[45 63]
[46 62]
[47 61]
[48 60]
[49 59]
[50 58]
[51 57]
[109 183]
[110 182]
[111 181]
[112 180]
[113 179]
[116 176]
[117 175]
[118 174]
[119 173]
[120 172]
[121 171]
[122 170]
[123 167]
[124 166]
[125 165]
[126 164]
[130 162]
[131 161]
[132 160]
[133 159]
[134 156]
[135 155]
[136 154]
[137 153]
[141 149]
[142 148]
[143 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
