%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:10:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAUGACGUAAAAAGGCCGCGCUGUACUGCGGCUUGUGCCGCUUCCGCAAGAAGGUUUCCUGGCCUGUUGCAGCCAUGGUGCAUUGCAGUUGCGUGUUGUUCAGAAAGUAUGGAAAUUUCAUCGAUAAGCUAAGACUCUUCACCAGGGGAGGAUCCGGUGGAAUGGGUUAUCCUC\
) } def
/len { sequence length } bind def

/coor [
[-89.52267456 520.30743408]
[-89.52267456 505.30743408]
[-89.52267456 490.30743408]
[-89.52267456 475.30743408]
[-89.52267456 460.30743408]
[-89.52267456 445.30743408]
[-89.52267456 430.30743408]
[-89.52267456 415.30743408]
[-89.52267456 400.30743408]
[-96.21720123 396.92611694]
[-102.97984314 410.31515503]
[-109.74269867 423.70410156]
[-123.13153076 416.94104004]
[-116.36889648 403.55252075]
[-109.60625458 390.16348267]
[-116.30078125 386.78216553]
[-128.37348938 395.68438721]
[-140.44619751 404.58660889]
[-152.51890564 413.48886108]
[-164.59161377 422.39108276]
[-176.66432190 431.29330444]
[-188.73703003 440.19555664]
[-200.80973816 449.09777832]
[-202.92370605 464.76004028]
[-215.54386902 474.27355957]
[-231.18290710 471.99414062]
[-240.56246948 459.27410889]
[-238.11781311 443.66003418]
[-225.29933167 434.41546631]
[-209.71197510 437.02505493]
[-197.63926697 428.12283325]
[-185.56655884 419.22061157]
[-173.49385071 410.31835938]
[-161.42114258 401.41613770]
[-149.34843445 392.51391602]
[-137.27572632 383.61169434]
[-125.20301056 374.70944214]
[-112.39990997 368.74734497]
[-100.03325653 368.00570679]
[-89.89913177 371.59094238]
[-83.28048706 378.06164551]
[-75.47689819 365.25134277]
[-67.67330933 352.44104004]
[-66.87636566 345.07058716]
[-59.61725616 339.47521973]
[-51.58879852 326.80462646]
[-43.56033707 314.13403320]
[-35.53187943 301.46343994]
[-27.50341988 288.79284668]
[-19.47496223 276.12225342]
[-22.97482109 261.69012451]
[-15.01331902 248.72598267]
[0.14816462 245.15286255]
[8.17662334 232.48226929]
[2.52113152 218.72895813]
[6.09082127 204.10975647]
[17.72031593 194.28080750]
[33.08507156 193.17152405]
[41.11352921 180.50093079]
[49.14198685 167.83033752]
[57.17044830 155.15974426]
[65.19890594 142.48916626]
[73.22736359 129.81857300]
[81.25582123 117.14797974]
[89.28427887 104.47739410]
[73.83588409 99.18729401]
[63.45676422 81.99066925]
[58.27122116 67.91551208]
[53.08567429 53.84035110]
[47.90012741 39.76519394]
[42.46698380 25.78374290]
[36.78793716 11.90035725]
[31.10888672 -1.98302877]
[25.42983818 -15.86641502]
[10.48273277 -20.46185112]
[2.02992129 -33.61798859]
[4.06256294 -49.12290573]
[15.62090683 -59.65564728]
[31.24745750 -60.24298096]
[43.56383133 -50.60758591]
[46.75461960 -35.29899597]
[39.31322479 -21.54546356]
[44.99227524 -7.66207743]
[50.67132187 6.22130871]
[56.35037231 20.10469437]
[60.35702896 22.75395393]
[62.72531509 27.96178436]
[61.97528839 34.57964706]
[67.16083527 48.65480804]
[72.34638214 62.72996521]
[77.53192902 76.80512238]
[84.80413818 78.63951111]
[99.34855652 82.30828857]
[106.62076569 84.14266968]
[117.86191559 74.21108246]
[123.08099365 59.27549744]
[137.74185181 56.64710999]
[148.98301697 46.71552277]
[160.22416687 36.78393555]
[171.46531677 26.85234642]
[182.70648193 16.92075920]
[181.11550903 5.10292482]
[185.39636230 -5.89788151]
[194.37240601 -13.37812424]
[205.72897339 -15.56001377]
[216.60961914 -12.01299381]
[228.19427490 -21.54167747]
[239.77893066 -31.07036209]
[251.36357117 -40.59904480]
[249.45864868 -55.90834808]
[256.15356445 -69.80733490]
[269.31195068 -77.86089325]
[284.73507690 -77.49915314]
[297.50146484 -68.83754730]
[303.53738403 -54.63996887]
[300.91677856 -39.43680573]
[290.47592163 -28.07933807]
[275.54644775 -24.19168854]
[260.89227295 -29.01439285]
[249.30760193 -19.48570824]
[237.72296143 -9.95702457]
[226.13830566 -0.42834058]
[225.48524475 17.84433746]
[211.46319580 30.06937027]
[192.63806152 28.16191483]
[181.39691162 38.09350204]
[170.15576172 48.02508926]
[158.91459656 57.95667648]
[147.67344666 67.88826752]
[143.25840759 82.11347961]
[127.79350281 85.45223999]
[116.55235291 95.38382721]
[130.78894043 90.65946960]
[145.69418335 92.34280396]
[158.51852417 100.12332153]
[166.89624023 112.56573486]
[169.28190613 127.37480927]
[165.23544312 141.81871033]
[155.50329590 153.23295593]
[141.88075256 159.51199341]
[126.88075256 159.49749756]
[113.27036285 153.19216919]
[103.56027985 141.75912476]
[99.54172516 127.30744171]
[101.95487213 112.50585175]
[93.92641449 125.17643738]
[85.89795685 137.84703064]
[77.86949921 150.51762390]
[69.84103394 163.18821716]
[61.81258011 175.85879517]
[53.78411865 188.52938843]
[45.75566101 201.19998169]
[51.31423569 215.56689453]
[47.39310455 230.28009033]
[35.69850922 239.75112915]
[20.84721375 240.51072693]
[12.81875420 253.18132019]
[16.06266022 268.41662598]
[7.74016380 281.15203857]
[-6.80437183 284.15072632]
[-14.83283043 296.82131958]
[-22.86128998 309.49191284]
[-30.88974762 322.16250610]
[-38.91820908 334.83306885]
[-46.94666672 347.50366211]
[-54.86299896 360.24462891]
[-62.66659164 373.05493164]
[-70.47018433 385.86523438]
[-74.52267456 400.30743408]
[-74.52267456 415.30743408]
[-74.52267456 430.30743408]
[-74.52267456 445.30743408]
[-74.52267456 460.30743408]
[-74.52267456 475.30743408]
[-74.52267456 490.30743408]
[-74.52267456 505.30743408]
[-74.52267456 520.30743408]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 177]
[2 176]
[3 175]
[4 174]
[5 173]
[6 172]
[7 171]
[8 170]
[9 169]
[16 37]
[17 36]
[18 35]
[19 34]
[20 33]
[21 32]
[22 31]
[23 30]
[41 168]
[42 167]
[43 166]
[45 165]
[46 164]
[47 163]
[48 162]
[49 161]
[50 160]
[53 157]
[54 156]
[58 152]
[59 151]
[60 150]
[61 149]
[62 148]
[63 147]
[64 146]
[65 145]
[67 91]
[68 90]
[69 89]
[70 88]
[71 85]
[72 84]
[73 83]
[74 82]
[94 132]
[95 131]
[97 129]
[98 128]
[99 127]
[100 126]
[101 125]
[106 122]
[107 121]
[108 120]
[109 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
