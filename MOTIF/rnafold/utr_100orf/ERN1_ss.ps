%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:30:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCCUAGUCAGUUCUGCGUCCGCUGAGGCUCGGUCACCGCCUCGCUGUCGUCGCGGCGCCCCCGCCCCGUCCUCUGUCCGUACCGCCCCCGGAGCCAGGGCCGAGUCCUCGCCAUGCCGGCCCGGCGGCUGCUGCUGCUGCUGACGCUGCUGCUGCCCGGCCUCGGGAUUUUUGGAAGUACCAGCACAGUGACGCUUCCUGAAACCUUGUUGU\
) } def
/len { sequence length } bind def

/coor [
[321.66137695 338.73608398]
[325.76391602 329.73880005]
[315.55364990 318.75015259]
[305.34338379 307.76150513]
[294.89361572 297.00033569]
[284.20944214 286.47189331]
[273.52526855 275.94342041]
[266.55621338 273.48812866]
[262.76296997 265.18112183]
[252.23451233 254.49694824]
[241.70603943 243.81277466]
[231.17758179 233.12860107]
[220.99707031 233.97314453]
[211.83932495 228.97062683]
[206.84265137 219.56037903]
[207.86926270 208.73483276]
[197.65898132 197.74620056]
[187.44869995 186.75755310]
[177.23843384 175.76890564]
[167.02815247 164.78025818]
[152.69673157 160.72323608]
[148.97132874 145.34689331]
[138.76104736 134.35824585]
[87.98632050 135.01417542]
[77.80692291 101.42701721]
[64.05639648 95.43344116]
[50.30586624 89.43986511]
[36.55533600 83.44628906]
[22.76118469 77.55381012]
[8.92415237 71.76273346]
[-4.91288042 65.97166443]
[-18.74991226 60.18058777]
[-32.58694458 54.38951492]
[-46.42397690 48.59844208]
[-60.26100922 42.80736923]
[-58.00984955 57.39048004]
[-62.98185349 73.32405090]
[-75.49729919 87.73232269]
[-94.85327148 97.73165131]
[-109.53758240 100.79286194]
[-118.21302795 113.73018646]
[-133.14862061 116.62551117]
[-145.42890930 108.27507019]
[-160.11322021 111.33628082]
[-171.97589111 122.65923309]
[-187.63494873 117.78830719]
[-190.98170471 101.73429108]
[-178.57330322 91.01218414]
[-163.17443848 96.65196991]
[-148.49012756 93.59075928]
[-140.56935120 81.02903748]
[-125.72098541 77.71534729]
[-112.59880066 86.10855103]
[-97.91448975 83.04734039]
[-97.91448975 68.04734039]
[-112.59880066 64.98612976]
[-127.28310394 61.92491150]
[-141.96742249 58.86370087]
[-157.36627197 64.50348663]
[-169.77468872 53.78137970]
[-166.42793274 37.72736740]
[-150.76887512 32.85644150]
[-138.90620422 44.17938995]
[-124.22189331 47.24060059]
[-109.53758240 50.30181503]
[-94.85327148 53.36302948]
[-90.74388885 47.08903885]
[-103.29187012 38.87026978]
[-117.76539612 34.93111038]
[-118.49141693 19.94869232]
[-104.46657562 14.62856007]
[-95.07309723 26.32228851]
[-82.52511597 34.54105759]
[-78.41573334 28.26706886]
[-87.08938599 16.02910614]
[-95.76303864 3.79114389]
[-104.61540985 -8.31817245]
[-113.64459229 -20.29623222]
[-122.67376709 -32.27429199]
[-131.70294189 -44.25235367]
[-147.07922363 -42.99792480]
[-160.68200684 -50.27583694]
[-168.17068481 -63.76372910]
[-167.15565491 -79.15766144]
[-157.96081543 -91.54549408]
[-143.52018738 -96.97431183]
[-128.44174194 -93.71179199]
[-117.53694916 -82.79900360]
[-114.28549194 -67.71817017]
[-119.72489166 -53.28153229]
[-110.69570923 -41.30347061]
[-101.66652679 -29.32541084]
[-92.63735199 -17.34735107]
[-88.11845398 -15.80824471]
[-84.51748657 -11.41535187]
[-83.52507782 -4.88251019]
[-74.85142517 7.35545206]
[-66.17777252 19.59341431]
[-54.46993637 28.97033501]
[-40.63290405 34.76140976]
[-26.79587173 40.55248260]
[-12.95883942 46.34355545]
[0.87819314 52.13462830]
[14.71522522 57.92570114]
[28.55225754 63.71677780]
[35.93437958 63.39947891]
[42.54891205 69.69576263]
[56.29944229 75.68933868]
[70.04997253 81.68290710]
[83.80049896 87.67648315]
[97.32185364 81.18240356]
[101.23957825 66.70305634]
[105.15730286 52.22371292]
[98.44892120 37.65054321]
[105.78850555 23.38484764]
[121.54573822 20.37004280]
[133.63302612 30.91883278]
[132.77804565 46.93908691]
[119.63664246 56.14143753]
[115.71891785 70.62078094]
[111.80119324 85.10012817]
[118.41236115 88.64167023]
[131.63468933 95.72475433]
[138.24584961 99.26629639]
[148.12913513 87.98265839]
[158.01242065 76.69901276]
[167.89570618 65.41536713]
[177.77899170 54.13172150]
[187.66227722 42.84807587]
[190.31927490 26.66560364]
[205.75564575 21.12932396]
[218.09178162 31.93449020]
[214.63732910 47.96567154]
[198.94592285 52.73136520]
[189.06263733 64.01500702]
[179.17935181 75.29865265]
[169.29606628 86.58229828]
[159.41278076 97.86594391]
[149.52949524 109.14958954]
[149.74969482 124.14797211]
[159.95996094 135.13661194]
[175.02169800 139.97962952]
[178.01679993 154.56999207]
[188.22708130 165.55862427]
[198.43734741 176.54727173]
[208.64762878 187.53591919]
[218.85789490 198.52456665]
[238.37370300 203.57984924]
[241.86175537 222.60014343]
[252.39021301 233.28430176]
[262.91867065 243.96847534]
[273.44714355 254.65264893]
[284.05374146 265.25924683]
[294.73791504 275.78771973]
[305.42208862 286.31616211]
[310.46984863 287.62750244]
[314.14370728 290.45974731]
[316.09451294 294.03543091]
[316.33203125 297.55123901]
[326.54229736 308.53988647]
[336.75256348 319.52850342]
[357.14300537 315.77786255]
[375.52621460 325.05862427]
[384.49365234 343.44161987]
[380.54586792 363.36849976]
[391.53451538 373.57876587]
[402.52316284 383.78903198]
[410.93795776 387.33676147]
[413.59677124 394.23077393]
[424.43435669 404.60125732]
[435.27194214 414.97174072]
[446.10949707 425.34222412]
[461.42950439 429.29293823]
[465.27572632 443.68240356]
[476.11328125 454.05288696]
[486.95086670 464.42337036]
[497.78842163 474.79385376]
[508.62600708 485.16433716]
[519.46356201 495.53482056]
[535.03942871 495.36050415]
[545.88256836 506.03204346]
[545.95275879 520.88232422]
[556.79028320 531.25280762]
[572.58325195 530.65429688]
[584.11682129 541.45947266]
[584.54833984 557.25787354]
[573.62176514 568.67657471]
[557.81970215 568.94104004]
[546.51721191 557.89434814]
[546.41979980 542.09039307]
[535.58227539 531.71990967]
[520.74328613 532.30358887]
[509.60470581 521.94079590]
[509.09310913 506.37240601]
[498.25552368 496.00192261]
[487.41793823 485.63140869]
[476.58038330 475.26092529]
[465.74279785 464.89044189]
[454.90521240 454.51995850]
[440.36041260 451.31100464]
[435.73901367 436.17980957]
[424.90142822 425.80929565]
[414.06387329 415.43881226]
[403.22628784 405.06832886]
[392.31289673 394.77767944]
[381.32424927 384.56741333]
[370.33560181 374.35711670]
[361.60647583 378.47680664]
[352.01394653 379.78955078]
[342.44076538 378.15670776]
[333.77322388 373.71148682]
[326.81924438 366.84826660]
[322.23291016 358.18771362]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 161]
[3 160]
[4 159]
[5 155]
[6 154]
[7 153]
[9 152]
[10 151]
[11 150]
[12 149]
[16 147]
[17 146]
[18 145]
[19 144]
[20 143]
[22 141]
[23 140]
[25 110]
[26 109]
[27 108]
[28 107]
[29 105]
[30 104]
[31 103]
[32 102]
[33 101]
[34 100]
[35 99]
[39 54]
[40 53]
[43 50]
[44 49]
[55 66]
[56 65]
[57 64]
[58 63]
[74 98]
[75 97]
[76 96]
[77 93]
[78 92]
[79 91]
[80 90]
[111 121]
[112 120]
[113 119]
[124 139]
[125 138]
[126 137]
[127 136]
[128 135]
[129 134]
[165 207]
[166 206]
[167 205]
[169 204]
[170 203]
[171 202]
[172 201]
[174 199]
[175 198]
[176 197]
[177 196]
[178 195]
[179 194]
[182 191]
[183 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
