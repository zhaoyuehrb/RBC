%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:26:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCACUCGCUGGUGGUGGGCGCGCCGUGCUGAGCUCUGGCUGUCAGUGUGUUCGCCCGCGUCCCCUCCGCGCUCUCCGCUUGUGGAUAACUAGCUGCUGGUUGAUCGCACUAUGACUCUGGAAGAAGUCCGCGGCCAGGACACAGUUCCGGAAAGCACAGCCAGGAUGCAGGGUGCCGGGAAAGCGCUGCAUGAGUUGCUGCUGUCGGCGC\
) } def
/len { sequence length } bind def

/coor [
[103.98190308 111.59288025]
[99.15590668 125.79534149]
[102.04183960 141.35110474]
[90.62114716 150.91232300]
[85.79515076 165.11477661]
[80.96914673 179.31724548]
[76.14315033 193.51969910]
[71.31715393 207.72215271]
[66.49115753 221.92460632]
[67.12004089 238.86688232]
[51.01396179 244.16128540]
[41.46786880 230.15026855]
[52.28870010 217.09860229]
[57.11469650 202.89614868]
[61.94069672 188.69369507]
[66.76669312 174.49124146]
[71.59268951 160.28878784]
[76.41868591 146.08633423]
[73.18756104 131.54641724]
[84.95344543 120.96933746]
[89.77944183 106.76688385]
[90.44923401 91.78184509]
[86.90956116 77.20546722]
[83.36988831 62.62909698]
[72.59455872 51.04449844]
[77.10998535 36.85083008]
[73.57031250 22.27445412]
[70.03063965 7.69807911]
[59.82318878 4.59458685]
[51.88539886 -2.41245461]
[47.60519791 -12.00846386]
[47.69368744 -22.43463898]
[52.06788635 -31.81023598]
[59.87775803 -38.47183228]
[56.99248505 -53.19172668]
[54.10721207 -67.91161346]
[51.22194290 -82.63150787]
[48.33666992 -97.35140228]
[45.45139694 -112.07128906]
[42.56612396 -126.79118347]
[39.68085098 -141.51107788]
[36.79557800 -156.23095703]
[14.44414806 -170.69668579]
[13.86359882 -196.84765625]
[2.60750294 -206.76231384]
[-8.64859295 -216.67695618]
[-19.90468788 -226.59161377]
[-31.16078377 -236.50627136]
[-42.41688156 -246.42091370]
[-57.88679123 -249.73638916]
[-62.32324219 -263.95492554]
[-73.57933807 -273.86959839]
[-84.83543396 -283.78424072]
[-96.16503143 -293.61483765]
[-107.56748962 -303.36077881]
[-123.08505249 -306.44555664]
[-127.73270416 -320.59649658]
[-139.13516235 -330.34246826]
[-150.60986328 -340.00326538]
[-162.15617371 -349.57839966]
[-178.48733521 -343.08792114]
[-195.76820374 -345.74923706]
[-209.25180054 -356.73995972]
[-215.28054810 -372.96240234]
[-212.27815247 -389.91598511]
[-224.10441589 -399.14309692]
[-235.93069458 -408.37017822]
[-247.75695801 -417.59729004]
[-259.58322144 -426.82437134]
[-271.54556274 -435.87438965]
[-283.64132690 -444.74526978]
[-299.65267944 -443.73736572]
[-310.31640625 -455.72338867]
[-307.45217896 -471.50869751]
[-293.25720215 -478.98416138]
[-278.62063599 -472.41522217]
[-274.77041626 -456.84103394]
[-262.67468262 -447.97012329]
[-257.90188599 -447.79788208]
[-253.18666077 -444.62557983]
[-250.35612488 -438.65066528]
[-238.52986145 -429.42355347]
[-226.70358276 -420.19647217]
[-214.87731934 -410.96936035]
[-203.05105591 -401.74224854]
[-191.91830444 -407.71554565]
[-179.30688477 -409.03958130]
[-167.08662415 -405.48245239]
[-157.08280945 -397.53872681]
[-150.80355835 -386.36080933]
[-149.21249390 -373.59194946]
[-152.58105469 -361.12469482]
[-141.03474426 -351.54956055]
[-133.87937927 -349.69955444]
[-129.38920593 -341.74493408]
[-117.98674011 -331.99896240]
[-103.28475952 -329.61126709]
[-97.82152557 -314.76324463]
[-86.41905975 -305.01727295]
[-79.29203796 -303.06094360]
[-74.92078400 -295.04034424]
[-63.66468811 -285.12570190]
[-52.40859222 -275.21102905]
[-37.74378967 -272.60473633]
[-32.50222778 -257.67700195]
[-21.24613380 -247.76235962]
[-9.99003696 -237.84771729]
[1.26605833 -227.93305969]
[12.52215385 -218.01840210]
[23.77824974 -208.10375977]
[28.41468048 -210.51728821]
[33.42200089 -212.01673889]
[38.62186813 -212.54869080]
[43.82907867 -212.09420776]
[48.85816956 -210.66947937]
[53.53002167 -208.32524109]
[64.63725281 -218.40638733]
[75.74449158 -228.48753357]
[86.85172272 -238.56866455]
[97.95895386 -248.64981079]
[109.06619263 -258.73095703]
[120.17342377 -268.81207275]
[118.11002350 -285.60012817]
[126.37760162 -300.16543579]
[141.54562378 -306.86563110]
[157.55632019 -303.24133301]
[168.51222229 -313.48672485]
[179.46813965 -323.73211670]
[190.42404175 -333.97750854]
[189.40306091 -349.58172607]
[198.69277954 -362.16088867]
[213.90687561 -365.77548218]
[227.86170959 -358.71884155]
[233.96824646 -344.32284546]
[229.34317017 -329.38488770]
[216.17028809 -320.95822144]
[200.66943359 -323.02160645]
[189.71353149 -312.77621460]
[178.75761414 -302.53082275]
[167.80171204 -292.28543091]
[170.66966248 -279.24636841]
[166.68826294 -266.38977051]
[156.79531860 -257.10540771]
[143.50169373 -253.89637756]
[130.25456238 -257.70483398]
[119.14733124 -247.62370300]
[108.04009247 -237.54257202]
[96.93286133 -227.46142578]
[85.82563019 -217.38029480]
[74.71839142 -207.29914856]
[63.61116028 -197.21801758]
[66.42045593 -188.95756531]
[66.53066254 -180.17057800]
[63.89212799 -171.72276306]
[58.72791672 -164.45846558]
[51.51546860 -159.11624146]
[54.40074158 -144.39634705]
[57.28601456 -129.67645264]
[60.17128754 -114.95656586]
[63.05656052 -100.23667145]
[65.94183350 -85.51677704]
[68.82710266 -70.79689026]
[71.71237946 -56.07699585]
[74.59764862 -41.35710526]
[91.51934052 -31.70461082]
[95.95503235 -12.42176342]
[84.60701752 4.15840673]
[88.14669037 18.73478127]
[91.68636322 33.31115723]
[102.20851135 43.85315704]
[97.94625854 59.08942413]
[101.48593140 73.66580200]
[105.02560425 88.24217224]
[146.13044739 99.17023468]
[154.54507446 111.58773041]
[162.95968628 124.00522614]
[171.37431335 136.42272949]
[179.78892517 148.84022522]
[196.70019531 149.16412354]
[209.95454407 159.40248108]
[214.44950867 175.36358643]
[208.60430908 190.70343018]
[217.20286560 202.99427795]
[225.80143738 215.28511047]
[234.39999390 227.57594299]
[243.08981323 239.80242920]
[251.87042236 251.96389771]
[267.41552734 255.92994690]
[273.87530518 270.61499023]
[266.29437256 284.75393677]
[250.48818970 287.50054932]
[238.58189392 276.74789429]
[239.70896912 260.74450684]
[230.92835999 248.58303833]
[224.46427917 245.00012207]
[222.10916138 236.17451477]
[213.51058960 223.88368225]
[204.91203308 211.59283447]
[196.31346130 199.30200195]
[183.00032043 200.30313110]
[170.83337402 194.54904175]
[163.03639221 183.44602966]
[161.73348999 169.83276367]
[167.37142944 157.25483704]
[158.95681763 144.83734131]
[150.54219055 132.41984558]
[142.12757874 120.00234985]
[133.71295166 107.58485413]
[126.28019714 108.58686066]
[120.58298492 122.46280670]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 21]
[2 20]
[4 18]
[5 17]
[6 16]
[7 15]
[8 14]
[9 13]
[22 173]
[23 172]
[24 171]
[26 169]
[27 168]
[28 167]
[34 164]
[35 163]
[36 162]
[37 161]
[38 160]
[39 159]
[40 158]
[41 157]
[42 156]
[44 110]
[45 109]
[46 108]
[47 107]
[48 106]
[49 105]
[51 103]
[52 102]
[53 101]
[54 99]
[55 98]
[57 96]
[58 95]
[59 93]
[60 92]
[65 85]
[66 84]
[67 83]
[68 82]
[69 81]
[70 78]
[71 77]
[116 151]
[117 150]
[118 149]
[119 148]
[120 147]
[121 146]
[122 145]
[126 140]
[127 139]
[128 138]
[129 137]
[174 208]
[175 207]
[176 206]
[177 205]
[178 204]
[182 199]
[183 198]
[184 197]
[185 196]
[186 194]
[187 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
