%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:35:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUCCUCCUUUCGCAGAUUGGAAACCGCGGGCUAUCCUGCUGGGAGGUUGUGGCCGAGGCAGUAGCUCGCUACUGAUGGCCUCCUGGGGUGGAGAAAAGCGGGGAGGGGCUGAGGGGUCUCCGAAGCCGGCAGUCUACGCCACGAGGAAGACCCCUAGCGUCGGGAGCCAGGGGG\
) } def
/len { sequence length } bind def

/coor [
[79.72544861 141.25915527]
[69.54461670 135.86566162]
[62.16019440 148.92208862]
[54.77577209 161.97851562]
[57.46630859 174.61381531]
[51.02207184 185.34489441]
[39.37547302 188.68513489]
[31.76048660 201.60844421]
[24.14549828 214.53175354]
[27.87983894 229.65434265]
[19.97306252 242.65193176]
[5.53297853 246.11886597]
[-2.08200836 259.04217529]
[-4.91374540 275.75796509]
[-21.76017761 277.66427612]
[-28.25555420 262.00393677]
[-15.00531960 251.42718506]
[-7.39033270 238.50387573]
[-11.35454750 224.19232178]
[-3.81596541 210.97776794]
[11.22218800 206.91676331]
[18.83717537 193.99345398]
[26.45216179 181.07014465]
[25.64796638 163.55291748]
[41.71934509 154.59408569]
[49.10376740 141.53765869]
[56.48818970 128.48123169]
[50.16902924 114.87725067]
[35.42876816 112.09792328]
[20.68850708 109.31858826]
[5.94824457 106.53926086]
[-8.79201698 103.75993347]
[-23.53227997 100.98059845]
[-38.27254105 98.20127106]
[-53.01280212 95.42193604]
[-59.41631317 97.25965881]
[-64.94594574 95.78684998]
[-68.22280884 92.27350616]
[-82.85514069 88.97277832]
[-97.48748016 85.67205811]
[-112.11981201 82.37133789]
[-126.75214386 79.07061005]
[-135.40361023 87.27887726]
[-146.83007812 90.24700928]
[-158.14999390 87.34648895]
[-166.56636047 79.41387939]
[-170.05781555 68.51393890]
[-184.56379700 64.69598389]
[-199.06976318 60.87802887]
[-214.74015808 65.71235657]
[-226.57633972 54.36172867]
[-222.40226746 38.50268936]
[-206.51185608 34.44966507]
[-195.25181580 46.37205887]
[-180.74583435 50.19001389]
[-166.23986816 54.00797272]
[-151.04145813 43.84447861]
[-132.92306519 48.05903244]
[-123.45142365 64.43827820]
[-108.81909180 67.73899841]
[-94.18675232 71.03972626]
[-79.55442047 74.34044647]
[-64.92208099 77.64116669]
[-50.23347092 80.68167877]
[-35.49320984 83.46100616]
[-20.75294876 86.24034119]
[-6.01268625 89.01966858]
[8.72757530 91.79899597]
[23.46783638 94.57833099]
[38.20809937 97.35765839]
[52.94836044 100.13699341]
[54.59854889 89.41210175]
[58.63682175 79.44820404]
[64.80345917 70.76373291]
[72.72941589 63.79901505]
[81.95815277 58.89401627]
[91.97183990 56.27190781]
[102.22029877 56.02922821]
[112.15127563 58.13307571]
[121.24015808 62.42532349]
[129.01770020 68.63352966]
[140.97851562 59.58151627]
[152.93933105 50.52950287]
[164.90013123 41.47748947]
[171.23501587 26.97990799]
[186.05279541 25.46903992]
[198.01361084 16.41702843]
[209.97442627 7.36501598]
[216.30929565 -7.13256693]
[231.12707520 -8.64343452]
[243.08789062 -17.69544601]
[255.04870605 -26.74745941]
[267.00952148 -35.79947281]
[278.97033691 -44.85148239]
[277.74810791 -55.50490952]
[281.04937744 -65.62230682]
[288.20999146 -73.38566589]
[297.87887573 -77.42960358]
[308.27264404 -77.08126068]
[317.50427246 -72.47132874]
[329.92990112 -80.87393188]
[337.02737427 -95.01380920]
[351.90457153 -95.73390198]
[364.33020020 -104.13650513]
[367.18679810 -122.84028625]
[382.52633667 -133.36346436]
[400.38232422 -129.43249512]
[412.50189209 -138.27079773]
[424.54257202 -147.21630859]
[436.50338745 -156.26831055]
[448.46420288 -165.32032776]
[460.42501831 -174.37234497]
[466.29943848 -189.68322754]
[482.53640747 -191.98370361]
[492.43276978 -178.90722656]
[485.80795288 -163.90576172]
[469.47705078 -162.41152954]
[457.51623535 -153.35951233]
[445.55541992 -144.30749512]
[433.59460449 -135.25549316]
[430.14767456 -128.69122314]
[421.34020996 -126.15120697]
[409.22061157 -117.31290436]
[409.93823242 -105.88994598]
[404.98849487 -95.43710327]
[395.50210571 -88.61347961]
[383.77935791 -87.21674347]
[372.73281860 -91.71087646]
[360.30715942 -83.30827332]
[354.09844971 -69.76940155]
[338.33248901 -68.44830322]
[325.90686035 -60.04570007]
[323.66372681 -40.72071457]
[307.71527100 -29.05651855]
[288.02233887 -32.89067078]
[276.06152344 -23.83865738]
[264.10070801 -14.78664494]
[252.13990784 -5.73463249]
[240.17909241 3.31737971]
[234.69972229 17.16750145]
[219.02642822 19.32583046]
[207.06561279 28.37784195]
[195.10481262 37.42985535]
[189.62544250 51.27997589]
[173.95214844 53.43830490]
[161.99133301 62.49031830]
[150.03051758 71.54232788]
[138.06970215 80.59434509]
[141.95692444 91.90690613]
[142.55621338 103.85368347]
[139.82058716 115.49847412]
[133.96444702 125.92872620]
[125.44668579 134.32708740]
[132.12574768 147.75802612]
[138.80480957 161.18896484]
[145.48387146 174.61990356]
[152.16294861 188.05082703]
[165.23570251 196.96224976]
[163.97483826 211.80339050]
[170.65391541 225.23432922]
[185.89703369 228.72447205]
[195.28926086 241.22726440]
[194.39585876 256.83932495]
[183.63865662 268.18905640]
[168.09689331 269.91751099]
[155.10890198 261.20852661]
[150.80722046 246.17425537]
[157.22297668 231.91340637]
[150.54389954 218.48246765]
[137.94886780 210.53170776]
[138.73200989 194.72990417]
[132.05293274 181.29896545]
[125.37387085 167.86802673]
[118.69480896 154.43708801]
[112.01574707 141.00614929]
[101.65487671 143.77944946]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 27]
[3 26]
[4 25]
[7 23]
[8 22]
[9 21]
[12 18]
[13 17]
[28 71]
[29 70]
[30 69]
[31 68]
[32 67]
[33 66]
[34 65]
[35 64]
[38 63]
[39 62]
[40 61]
[41 60]
[42 59]
[47 56]
[48 55]
[49 54]
[81 148]
[82 147]
[83 146]
[84 145]
[86 143]
[87 142]
[88 141]
[90 139]
[91 138]
[92 137]
[93 136]
[94 135]
[100 132]
[101 131]
[103 129]
[104 128]
[107 123]
[108 122]
[109 120]
[110 119]
[111 118]
[112 117]
[153 175]
[154 174]
[155 173]
[156 172]
[157 171]
[159 169]
[160 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
