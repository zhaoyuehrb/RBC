%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:27:05 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (BICD2)
} def

/sequence { (\
UGAGGAGGGCCCGGCCUGCGAGAGCCUCAGUGGGAGCCGGCUCAGCCCUCGGCCACCAUGUCGGCGCCGUCGGAGGAGGAGGAGUACGCGCGGCUGGUGAUGGAGGCGCAGCCGGAGUGGCUGCGCGCCGAGGUGAAGCGGCUGUCCCACGAGCUGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 13 0.042553055 ubox
1 18 0.011071386 ubox
1 20 0.108031903 ubox
1 29 0.571226694 ubox
1 44 0.003365148 ubox
1 149 0.054235172 ubox
1 151 0.009768609 ubox
1 156 0.010318834 ubox
2 12 0.067736832 ubox
2 17 0.005146417 ubox
2 19 0.138153821 ubox
2 28 0.634109792 ubox
2 43 0.003734856 ubox
2 148 0.063649463 ubox
2 150 0.012113730 ubox
2 155 0.007300244 ubox
3 17 0.101779248 ubox
3 27 0.633932441 ubox
3 42 0.003725855 ubox
3 155 0.075609706 ubox
4 11 0.101069271 ubox
4 12 0.080172140 ubox
4 16 0.103058273 ubox
4 17 0.016963543 ubox
4 26 0.633277440 ubox
4 27 0.005240402 ubox
4 28 0.020144204 ubox
4 41 0.003688465 ubox
4 147 0.073221239 ubox
4 148 0.004163313 ubox
4 154 0.077273524 ubox
4 155 0.037185243 ubox
5 10 0.101425927 ubox
5 11 0.080195701 ubox
5 15 0.102683075 ubox
5 16 0.011674387 ubox
5 25 0.612629344 ubox
5 26 0.009068132 ubox
5 27 0.009996474 ubox
5 28 0.178346105 ubox
5 146 0.073380626 ubox
5 154 0.040080980 ubox
6 17 0.499851234 ubox
6 27 0.176383323 ubox
6 145 0.073330733 ubox
6 155 0.024226043 ubox
7 16 0.506593474 ubox
7 17 0.690326710 ubox
7 26 0.165598559 ubox
7 27 0.088982544 ubox
7 28 0.025475518 ubox
7 43 0.008359483 ubox
7 154 0.024196069 ubox
7 155 0.004579141 ubox
8 15 0.502687148 ubox
8 16 0.760288363 ubox
8 17 0.015351758 ubox
8 25 0.152561814 ubox
8 26 0.120315690 ubox
8 27 0.004997226 ubox
8 28 0.004195190 ubox
8 42 0.008421227 ubox
8 143 0.073153353 ubox
8 154 0.004307154 ubox
8 155 0.053429168 ubox
9 15 0.763103068 ubox
9 16 0.014468955 ubox
9 19 0.191435734 ubox
9 25 0.136064524 ubox
9 26 0.003195366 ubox
9 27 0.004075590 ubox
9 41 0.008482651 ubox
9 142 0.073432564 ubox
9 154 0.056157415 ubox
10 14 0.760001060 ubox
10 18 0.191132311 ubox
10 24 0.149488786 ubox
10 40 0.006970130 ubox
10 141 0.073424272 ubox
10 153 0.056096615 ubox
10 157 0.013743690 ubox
11 34 0.003428033 ubox
11 39 0.005019705 ubox
11 40 0.005935037 ubox
11 140 0.073228889 ubox
11 156 0.012133976 ubox
11 157 0.161842137 ubox
12 18 0.029919311 ubox
12 20 0.244781378 ubox
12 33 0.003430105 ubox
12 39 0.072853686 ubox
12 151 0.034499354 ubox
12 156 0.167274577 ubox
13 17 0.020131191 ubox
13 19 0.245867337 ubox
13 26 0.105667761 ubox
13 38 0.073750882 ubox
13 155 0.167013474 ubox
14 25 0.108128827 ubox
14 31 0.003411814 ubox
14 37 0.073607431 ubox
14 154 0.167039586 ubox
15 24 0.106239246 ubox
15 30 0.003322566 ubox
15 34 0.045474599 ubox
15 36 0.058020086 ubox
15 153 0.158471674 ubox
15 157 0.019950392 ubox
16 22 0.084977159 ubox
16 24 0.033210576 ubox
16 30 0.003702369 ubox
16 33 0.066879128 ubox
16 34 0.029672628 ubox
16 153 0.025200000 ubox
16 156 0.020315907 ubox
16 157 0.005927624 ubox
17 21 0.076732932 ubox
17 23 0.042016916 ubox
17 29 0.006667643 ubox
17 32 0.068569029 ubox
17 33 0.024983411 ubox
17 151 0.024952643 ubox
17 152 0.034194488 ubox
17 156 0.006863808 ubox
18 25 0.320024384 ubox
18 28 0.004914607 ubox
18 31 0.070628351 ubox
18 150 0.006924738 ubox
18 154 0.024137773 ubox
19 24 0.354337212 ubox
19 30 0.071655969 ubox
19 32 0.004048678 ubox
19 151 0.020821117 ubox
19 153 0.023728831 ubox
19 156 0.068085110 ubox
20 28 0.108592706 ubox
20 150 0.003725861 ubox
20 155 0.034451467 ubox
21 27 0.108738726 ubox
21 155 0.050826976 ubox
22 26 0.106381270 ubox
22 28 0.017214749 ubox
22 43 0.003310436 ubox
22 154 0.052382785 ubox
23 27 0.015002498 ubox
23 42 0.003316853 ubox
23 155 0.640418345 ubox
24 41 0.003318427 ubox
24 154 0.658119694 ubox
25 40 0.003318103 ubox
25 153 0.475637320 ubox
25 157 0.022003198 ubox
26 39 0.003257517 ubox
26 153 0.531242903 ubox
26 156 0.023246021 ubox
26 157 0.006004169 ubox
27 152 0.711359758 ubox
27 156 0.004841372 ubox
27 157 0.020437702 ubox
28 151 0.711020496 ubox
28 156 0.045862029 ubox
29 155 0.046729508 ubox
30 150 0.994719451 ubox
30 154 0.040040196 ubox
31 149 0.996159570 ubox
31 153 0.032677624 ubox
32 146 0.007642228 ubox
32 147 0.016216229 ubox
32 148 0.997069864 ubox
33 145 0.009164378 ubox
33 146 0.021113237 ubox
33 147 0.996965065 ubox
34 145 0.022600366 ubox
34 146 0.995496264 ubox
35 143 0.596963843 ubox
35 145 0.760740581 ubox
36 142 0.994950360 ubox
36 145 0.003726263 ubox
37 141 0.996862377 ubox
37 144 0.005625000 ubox
38 140 0.996110325 ubox
38 144 0.020294312 ubox
39 139 0.893065138 ubox
39 143 0.021172199 ubox
40 46 0.005340527 ubox
40 139 0.448761732 ubox
40 142 0.021245138 ubox
41 45 0.005313652 ubox
41 138 0.629121921 ubox
41 141 0.021214141 ubox
42 136 0.813132590 ubox
42 137 0.571696627 ubox
42 140 0.017610962 ubox
43 135 0.854700763 ubox
43 140 0.008539904 ubox
44 134 0.778498611 ubox
45 134 0.531251655 ubox
45 139 0.018416438 ubox
46 133 0.475939578 ubox
46 138 0.018462082 ubox
47 132 0.337204264 ubox
47 133 0.876831386 ubox
48 132 0.941350943 ubox
49 131 0.999419431 ubox
50 130 0.999959587 ubox
51 129 0.999955653 ubox
52 128 0.999952405 ubox
53 103 0.010996363 ubox
53 127 0.997892752 ubox
54 99 0.996942465 ubox
54 102 0.016558835 ubox
54 105 0.013945643 ubox
55 98 0.999160533 ubox
55 101 0.011795141 ubox
56 97 0.999656887 ubox
56 103 0.024256029 ubox
57 96 0.999629667 ubox
57 99 0.005537319 ubox
57 102 0.024325306 ubox
58 95 0.977481227 ubox
58 98 0.005523240 ubox
58 101 0.021930353 ubox
59 90 0.003421656 ubox
59 92 0.010166248 ubox
59 97 0.005084513 ubox
59 100 0.018131521 ubox
59 102 0.003615364 ubox
60 89 0.003496031 ubox
60 91 0.011783717 ubox
60 94 0.999178907 ubox
60 98 0.004920691 ubox
60 101 0.011232089 ubox
61 90 0.011348420 ubox
61 93 0.999175656 ubox
61 97 0.015147138 ubox
61 100 0.016536110 ubox
62 88 0.011762198 ubox
62 90 0.004236708 ubox
62 92 0.999088349 ubox
62 96 0.015841748 ubox
62 99 0.017863569 ubox
63 87 0.011919458 ubox
63 89 0.004180399 ubox
63 91 0.987305050 ubox
63 95 0.015765900 ubox
63 98 0.017818130 ubox
64 85 0.051470811 ubox
64 89 0.980658889 ubox
64 91 0.130195428 ubox
64 94 0.015568884 ubox
65 84 0.052494874 ubox
65 88 0.981315247 ubox
65 90 0.182352874 ubox
65 92 0.007417881 ubox
65 93 0.013764525 ubox
65 96 0.017825791 ubox
66 85 0.021264637 ubox
66 87 0.978175639 ubox
66 89 0.182590534 ubox
66 91 0.010385033 ubox
66 94 0.019290519 ubox
66 95 0.003733122 ubox
67 73 0.009236648 ubox
67 76 0.075555783 ubox
67 79 0.178321748 ubox
67 82 0.934881527 ubox
67 84 0.030303220 ubox
67 88 0.165685668 ubox
67 90 0.010012273 ubox
67 93 0.019708259 ubox
68 72 0.009214052 ubox
68 75 0.075896637 ubox
68 78 0.178939944 ubox
68 81 0.936800378 ubox
68 88 0.058210364 ubox
68 90 0.012220444 ubox
68 92 0.019765316 ubox
69 85 0.021365618 ubox
69 87 0.081640622 ubox
69 89 0.012565817 ubox
69 91 0.019763674 ubox
70 76 0.061840896 ubox
70 77 0.205424869 ubox
70 79 0.864496024 ubox
70 80 0.265649514 ubox
70 82 0.059539865 ubox
70 83 0.253755393 ubox
70 84 0.004159871 ubox
70 86 0.067690812 ubox
70 88 0.003591884 ubox
70 90 0.017954202 ubox
71 75 0.061417832 ubox
71 76 0.212449851 ubox
71 78 0.886626151 ubox
71 79 0.272026070 ubox
71 81 0.064626479 ubox
71 82 0.255703289 ubox
71 88 0.021878273 ubox
71 90 0.007880486 ubox
72 87 0.023450207 ubox
72 89 0.008038799 ubox
102 107 0.003709388 ubox
102 129 0.006308613 ubox
103 128 0.006601571 ubox
106 126 0.999060995 ubox
107 125 0.999939887 ubox
108 124 0.999981493 ubox
109 123 0.999989897 ubox
110 122 0.999755531 ubox
111 121 0.999990165 ubox
112 120 0.999994606 ubox
113 119 0.999586109 ubox
114 118 0.616740367 ubox
139 156 0.009359355 ubox
140 155 0.009545718 ubox
141 154 0.009572419 ubox
142 153 0.009572312 ubox
143 152 0.009369433 ubox
144 150 0.003654165 ubox
145 149 0.003300185 ubox
147 157 0.005013838 ubox
148 156 0.009212071 ubox
149 155 0.008558663 ubox
150 156 0.012979801 ubox
151 155 0.010729694 ubox
1 29 0.9500000 lbox
2 28 0.9500000 lbox
3 27 0.9500000 lbox
4 26 0.9500000 lbox
5 25 0.9500000 lbox
7 17 0.9500000 lbox
8 16 0.9500000 lbox
9 15 0.9500000 lbox
10 14 0.9500000 lbox
30 150 0.9500000 lbox
31 149 0.9500000 lbox
32 148 0.9500000 lbox
33 147 0.9500000 lbox
34 146 0.9500000 lbox
35 145 0.9500000 lbox
36 142 0.9500000 lbox
37 141 0.9500000 lbox
38 140 0.9500000 lbox
39 139 0.9500000 lbox
42 136 0.9500000 lbox
43 135 0.9500000 lbox
44 134 0.9500000 lbox
47 133 0.9500000 lbox
48 132 0.9500000 lbox
49 131 0.9500000 lbox
50 130 0.9500000 lbox
51 129 0.9500000 lbox
52 128 0.9500000 lbox
53 127 0.9500000 lbox
54 99 0.9500000 lbox
55 98 0.9500000 lbox
56 97 0.9500000 lbox
57 96 0.9500000 lbox
58 95 0.9500000 lbox
60 94 0.9500000 lbox
61 93 0.9500000 lbox
62 92 0.9500000 lbox
63 91 0.9500000 lbox
64 89 0.9500000 lbox
65 88 0.9500000 lbox
66 87 0.9500000 lbox
67 82 0.9500000 lbox
68 81 0.9500000 lbox
70 79 0.9500000 lbox
71 78 0.9500000 lbox
106 126 0.9500000 lbox
107 125 0.9500000 lbox
108 124 0.9500000 lbox
109 123 0.9500000 lbox
110 122 0.9500000 lbox
111 121 0.9500000 lbox
112 120 0.9500000 lbox
113 119 0.9500000 lbox
showpage
end
%%EOF
