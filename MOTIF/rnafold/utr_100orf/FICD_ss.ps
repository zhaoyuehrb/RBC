%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:48:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGCCGGCGGAGAAGGAGGACCCGGGAGCCGGCGGCCCGGAGCUGGGAGCGCGGGGAAGGCGGUUGGGGUUCUGACAGCUGCGCGCGAUCCUGCUCUCUCUCAGCCGCCUGUGGACAUGCGCAAAGGGCCCUCUCCUGAGUCCAGAUGAUGCUCAUACCAAUGGCUUCAGUGAUGGCGGUGACUGAACCGAAAUGGGUCUCGGUCUGGAGCCGCUUCCUCUGGGUGACGCUGCUGAGCAUGGUGC\
) } def
/len { sequence length } bind def

/coor [
[104.62258148 567.77160645]
[93.65028381 556.39691162]
[94.01835632 540.59686279]
[105.50844574 529.74548340]
[105.69922638 514.74664307]
[105.88999939 499.74789429]
[106.08078003 484.74908447]
[106.17617798 469.74938965]
[106.17617798 454.74938965]
[95.49530029 444.43173218]
[95.28162384 429.21957397]
[106.17617798 418.08645630]
[106.17617798 403.08645630]
[98.43887329 390.35919189]
[106.17617798 376.55902100]
[106.17617798 361.55902100]
[93.20885468 354.23001099]
[85.60045624 341.30841064]
[85.48062134 326.21362305]
[92.98166656 312.99884033]
[106.17617798 305.26242065]
[106.17617798 290.26242065]
[106.17617798 275.26242065]
[106.17617798 260.26242065]
[105.89001465 245.26513672]
[105.31779480 230.27606201]
[104.74558258 215.28697205]
[104.17336273 200.29789734]
[103.60115051 185.30880737]
[103.02893066 170.31973267]
[99.64123535 163.77131653]
[102.54598999 155.13662720]
[102.16445923 140.14147949]
[101.78292847 125.14633179]
[76.33169556 100.31353760]
[63.47036362 92.59432983]
[50.60903549 84.87511444]
[37.74770737 77.15590668]
[24.88637733 69.43669891]
[11.30747986 63.06381989]
[-2.84851813 58.10320282]
[-20.87188721 61.92971802]
[-31.77013779 48.16207123]
[-45.98808289 43.38190079]
[-60.20602798 38.60173035]
[-74.42397308 33.82155991]
[-88.64192200 29.04138947]
[-102.85986328 24.26121902]
[-117.07781219 19.48104858]
[-131.29576111 14.70087910]
[-150.87576294 19.55952454]
[-162.98843384 4.46992016]
[-177.32336426 0.05293360]
[-191.65829468 -4.36405325]
[-205.99322510 -8.78104019]
[-220.32815552 -13.19802666]
[-234.66308594 -17.61501312]
[-249.50358582 -5.48858500]
[-268.50494385 -4.79105043]
[-283.94793701 -15.62372112]
[-289.66870117 -33.44068146]
[-304.16168213 -37.30760574]
[-318.65469360 -41.17453384]
[-333.14767456 -45.04145813]
[-347.64068604 -48.90838623]
[-362.13366699 -52.77531433]
[-376.62667847 -56.64223862]
[-387.96166992 -46.17698669]
[-403.15914917 -43.52371979]
[-417.36965942 -49.52909088]
[-426.05871582 -62.27680588]
[-426.45361328 -77.69911194]
[-418.42837524 -90.87480927]
[-404.54382324 -97.59958649]
[-389.23043823 -95.72758484]
[-377.37472534 -85.85615540]
[-372.75973511 -71.13523102]
[-358.26675415 -67.26830292]
[-343.77374268 -63.40137863]
[-329.28076172 -59.53445435]
[-314.78775024 -55.66752625]
[-300.29476929 -51.80060196]
[-285.80178833 -47.93367386]
[-278.65142822 -56.44463348]
[-268.80166626 -61.70649719]
[-257.65014648 -62.92938232]
[-246.79544067 -59.89962387]
[-237.80789185 -53.01594162]
[-232.00239563 -43.23740768]
[-230.24610901 -31.94994354]
[-215.91117859 -27.53295708]
[-201.57624817 -23.11597061]
[-187.24131775 -18.69898415]
[-172.90638733 -14.28199673]
[-158.57145691 -9.86501026]
[-150.03157043 -15.42308807]
[-139.62310791 -15.37470436]
[-130.76976013 -9.49513340]
[-126.51558685 0.48293328]
[-112.29763794 5.26310349]
[-98.07969666 10.04327393]
[-83.86174774 14.82344437]
[-69.64380646 19.60361481]
[-55.42585754 24.38378525]
[-41.20791245 29.16395569]
[-26.98996925 33.94412613]
[-16.03590965 28.84748459]
[-4.16165400 32.69540405]
[2.11209869 43.94720459]
[16.26809692 48.90782166]
[27.80631447 39.32296371]
[25.52577209 24.49733734]
[23.24523163 9.67171383]
[20.96468925 -5.15391016]
[8.07361507 -14.29698086]
[5.50577688 -29.89126587]
[14.78462887 -42.68495560]
[30.40519142 -45.08777618]
[43.10006332 -35.67418289]
[45.33760071 -20.02908707]
[35.79031372 -7.43445158]
[38.07085419 7.39117289]
[40.35139847 22.21679688]
[42.63193893 37.04241943]
[41.21364975 45.38760757]
[37.64072418 52.05958176]
[32.60558701 56.57536697]
[45.46691895 64.29457855]
[58.32824707 72.01378632]
[71.18957520 79.73300171]
[84.05090332 87.45220947]
[98.14266205 82.31195068]
[103.01316071 68.12468719]
[107.88365173 53.93743134]
[104.21041870 37.95495987]
[116.39774323 26.98220634]
[131.90834045 32.30699921]
[134.78623962 48.45164871]
[122.07090759 58.80792236]
[117.20041656 72.99517822]
[112.32992554 87.18244171]
[122.41876221 98.28268433]
[137.00541687 94.78564453]
[151.59208679 91.28859711]
[166.17874146 87.79155731]
[180.76541138 84.29450989]
[195.35206604 80.79747009]
[209.93873596 77.30043030]
[224.50285339 73.71069336]
[239.04385376 70.02841187]
[250.52235413 59.14012909]
[264.75958252 63.51630783]
[279.30056763 59.83402634]
[293.84158325 56.15174484]
[308.38259888 52.46946335]
[322.92358398 48.78717804]
[337.46459961 45.10489655]
[340.45455933 34.90669632]
[347.34552002 26.92230797]
[356.85049438 22.54082870]
[367.23596191 22.48785973]
[376.63800049 26.70617104]
[383.39678955 34.37792969]
[398.06768799 31.25303268]
[412.73855591 28.12813759]
[420.45809937 23.29037094]
[427.61587524 25.05804634]
[442.32531738 22.11999702]
[457.03479004 19.18194962]
[471.74423218 16.24390030]
[486.45367432 13.30585098]
[501.16311646 10.36780262]
[513.18048096 0.07733572]
[527.17675781 5.17187405]
[541.88616943 2.23382497]
[553.84332275 -8.98931503]
[569.46099854 -3.98733258]
[572.67309570 12.09416103]
[560.17529297 22.71190453]
[544.82421875 16.94327354]
[530.11474609 19.88132286]
[519.14953613 29.96163940]
[504.10116577 25.07725143]
[489.39172363 28.01529884]
[474.68228149 30.95334816]
[459.97283936 33.89139557]
[445.26336670 36.82944489]
[430.55392456 39.76749420]
[415.86346436 42.79902649]
[401.19256592 45.92392349]
[386.52169800 49.04882050]
[377.11361694 66.13013458]
[357.86999512 70.82139587]
[341.14688110 59.64590073]
[326.60586548 63.32818222]
[312.06488037 67.01046753]
[297.52386475 70.69274902]
[282.98284912 74.37503052]
[268.44186401 78.05731201]
[258.00341797 88.68221283]
[242.72613525 84.56941223]
[228.18513489 88.25170135]
[222.48614502 92.92927551]
[213.43577576 91.88709259]
[198.84910583 95.38413239]
[184.26245117 98.88117218]
[169.67578125 102.37821960]
[155.08912659 105.87525940]
[140.50245667 109.37229919]
[125.91580200 112.86934662]
[116.77807617 124.76480103]
[117.15960693 139.75994873]
[117.54113007 154.75509644]
[118.01801300 169.74751282]
[118.59023285 184.73660278]
[119.16244507 199.72567749]
[119.73466492 214.71476746]
[120.30687714 229.70384216]
[120.87909698 244.69291687]
[123.63394928 249.07110596]
[124.37589264 253.61486816]
[123.37564850 257.53512573]
[121.17617798 260.26242065]
[121.17617798 275.26242065]
[121.17617798 290.26242065]
[121.17617798 305.26242065]
[134.37068176 312.99884033]
[141.87173462 326.21362305]
[141.75189209 341.30841064]
[134.14349365 354.23001099]
[121.17617798 361.55902100]
[121.17617798 376.55902100]
[128.91346741 390.35919189]
[121.17617798 403.08645630]
[121.17617798 418.08645630]
[132.07072449 429.21957397]
[131.85704041 444.43173218]
[121.17617798 454.74938965]
[121.17617798 469.74938965]
[124.29961395 478.30740356]
[121.07956696 484.93988037]
[120.88878632 499.93865967]
[120.69800568 514.93743896]
[120.50723267 529.93621826]
[131.71759033 541.07641602]
[131.68367004 556.88067627]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 244]
[5 243]
[6 242]
[7 241]
[8 239]
[9 238]
[12 235]
[13 234]
[15 232]
[16 231]
[21 226]
[22 225]
[23 224]
[24 223]
[25 219]
[26 218]
[27 217]
[28 216]
[29 215]
[30 214]
[32 213]
[33 212]
[34 211]
[35 131]
[36 130]
[37 129]
[38 128]
[39 127]
[40 110]
[41 109]
[43 106]
[44 105]
[45 104]
[46 103]
[47 102]
[48 101]
[49 100]
[50 99]
[52 95]
[53 94]
[54 93]
[55 92]
[56 91]
[57 90]
[61 83]
[62 82]
[63 81]
[64 80]
[65 79]
[66 78]
[67 77]
[111 124]
[112 123]
[113 122]
[114 121]
[132 141]
[133 140]
[134 139]
[142 210]
[143 209]
[144 208]
[145 207]
[146 206]
[147 205]
[148 204]
[149 202]
[150 201]
[152 199]
[153 198]
[154 197]
[155 196]
[156 195]
[157 194]
[163 191]
[164 190]
[165 189]
[167 188]
[168 187]
[169 186]
[170 185]
[171 184]
[172 183]
[174 181]
[175 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
