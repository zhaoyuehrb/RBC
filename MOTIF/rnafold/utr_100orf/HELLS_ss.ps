%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:25:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAUGACAGGAUUUUCCCGCGAAGGAGAAGCGCGCUUUUUUCCCUGGCGGGGGAUUUGGCUAGAAGGCUGGGCCGGCAGCGGUUGUGAGGAGUUAGCUCGCGGCAUUGCAGGCUCUGAGAGGAGGGGACCCGGUUCCCGGGUGAGUGUCCAGGCAUGCCAGCGGAACGGCCCGCGGGCAGCGGCGGCUCGGAGGCUCCAGCAAUGGUUGAACAACUGGACACUGCUGUGAUUACCCCGGCCAUGCUAGAAGAGG\
) } def
/len { sequence length } bind def

/coor [
[-62.05618668 418.10198975]
[-50.39590836 427.53799438]
[-42.87950897 440.51889038]
[-40.50043106 455.32901001]
[-43.57311630 470.01092529]
[-51.69144440 482.62411499]
[-63.78242493 491.50152588]
[-78.24800110 495.46978760]
[-93.17625427 494.00445557]
[-106.59413147 487.29919434]
[-116.72819519 476.24023438]
[-122.23903656 462.28924561]
[-122.39828491 447.29006958]
[-117.18332672 433.22259521]
[-128.42037964 443.15881348]
[-139.65742493 453.09506226]
[-150.89447021 463.03131104]
[-162.13151550 472.96752930]
[-173.36856079 482.90377808]
[-184.60560608 492.83999634]
[-195.84265137 502.77624512]
[-194.50126648 518.12249756]
[-202.36155701 531.16351318]
[-216.22966003 537.00646973]
[-230.70579529 533.60363770]
[-241.94284058 543.53985596]
[-253.17990112 553.47607422]
[-264.41693115 563.41229248]
[-275.65399170 573.34857178]
[-286.89102173 583.28479004]
[-298.12808228 593.22100830]
[-298.84692383 609.00897217]
[-310.57513428 619.60253906]
[-326.35458374 618.71685791]
[-336.82360840 606.87725830]
[-335.77108765 591.10803223]
[-323.82150269 580.76483154]
[-308.06430054 581.98400879]
[-296.82727051 572.04772949]
[-285.59020996 562.11151123]
[-274.35317993 552.17529297]
[-263.11611938 542.23901367]
[-251.87908936 532.30279541]
[-240.64204407 522.36657715]
[-242.24725342 507.58273315]
[-234.75067139 494.53417969]
[-220.84550476 488.32934570]
[-205.77888489 491.53918457]
[-194.54183960 481.60296631]
[-183.30479431 471.66671753]
[-172.06774902 461.73049927]
[-160.83070374 451.79425049]
[-149.59365845 441.85800171]
[-138.35661316 431.92178345]
[-127.11956787 421.98553467]
[-116.84331512 411.05856323]
[-107.61483765 399.23336792]
[-98.38636017 387.40817261]
[-100.45882416 372.70306396]
[-91.26829529 360.57916260]
[-75.83016205 358.50509644]
[-66.60169220 346.67990112]
[-57.37321854 334.85470581]
[-48.14474487 323.02947998]
[-50.90843201 306.42727661]
[-40.59529877 292.70108032]
[-23.20822716 290.65505981]
[-14.12556171 278.71749878]
[-5.04289627 266.77993774]
[4.03976917 254.84239197]
[13.12243462 242.90483093]
[22.20510101 230.96728516]
[31.28776550 219.02972412]
[24.89148521 201.43885803]
[30.46677017 183.41293335]
[45.92253494 172.32923889]
[65.08568573 172.83874512]
[73.72280884 160.57496643]
[82.35993195 148.31120300]
[90.99705505 136.04742432]
[99.63417816 123.78365326]
[71.06671143 125.50070953]
[46.97804642 94.11323547]
[35.86377716 84.03984833]
[24.74951172 73.96646881]
[13.63524437 63.89308167]
[2.52097750 53.81969833]
[-8.59328938 43.74631500]
[-19.70755577 33.67292786]
[-30.82182312 23.59954453]
[-46.28863144 25.90429688]
[-59.59125519 17.68394661]
[-64.44860840 2.81989169]
[-58.56719208 -11.66951656]
[-44.72403336 -18.94282341]
[-29.45544815 -15.56579304]
[-19.97079659 -3.13295794]
[-20.74843788 12.48527813]
[-9.63417149 22.55866241]
[1.48009503 32.63204575]
[12.59436226 42.70542908]
[23.70862961 52.77881622]
[34.82289505 62.85219955]
[45.93716431 72.92558289]
[57.05142975 82.99897003]
[63.55427551 79.26226044]
[56.08086014 66.25656891]
[48.60744476 53.25087357]
[41.13423157 40.24506378]
[54.14015579 32.77204895]
[61.61314011 45.77745819]
[69.08655548 58.78315353]
[76.55996704 71.78884888]
[83.06282043 68.05213928]
[79.95614624 53.37737656]
[76.84947205 38.70261765]
[73.74280548 24.02785683]
[62.38317490 12.20030880]
[67.20558929 -3.47375727]
[83.24916077 -6.87020731]
[94.00963593 5.50493574]
[88.41756439 20.92118645]
[91.52423859 35.59594727]
[94.63090515 50.27070618]
[97.73757935 64.94546509]
[105.23743439 64.89944458]
[112.65731812 51.86314011]
[120.23715210 64.80741119]
[127.73701477 64.76139069]
[130.66336060 50.04961014]
[133.58972168 35.33783340]
[136.51608276 20.62605286]
[139.44242859 5.91427374]
[142.36878967 -8.79750538]
[139.52868652 -25.51187515]
[154.80363464 -32.86798096]
[166.10078430 -20.22635651]
[157.08056641 -5.87115049]
[154.15420532 8.84062862]
[151.22785950 23.55240822]
[148.30149841 38.26418686]
[145.37515259 52.97596741]
[142.44879150 67.68774414]
[138.29777527 95.45007324]
[121.77568054 109.57162476]
[136.52226257 106.82602692]
[151.26884460 104.08042908]
[166.01542664 101.33483124]
[180.76200867 98.58923340]
[195.50859070 95.84363556]
[210.25517273 93.09803772]
[225.00175476 90.35243988]
[239.74833679 87.60684204]
[256.48144531 3.63310218]
[268.95349121 -4.70045137]
[274.33056641 -12.04834175]
[281.63009644 -13.05864716]
[294.20349121 -21.23852158]
[306.77685547 -29.41839600]
[319.35021973 -37.59827042]
[326.69851685 -51.60944748]
[341.58618164 -52.06435013]
[354.15954590 -60.24422455]
[366.73291016 -68.42410278]
[379.30630493 -76.60397339]
[382.33392334 -92.11554718]
[395.48962402 -100.87360382]
[410.96832275 -97.68213654]
[419.58679199 -84.43459320]
[416.23184204 -68.99050140]
[402.89392090 -60.51256943]
[387.48617554 -64.03060150]
[374.91278076 -55.85073090]
[362.33941650 -47.67085266]
[349.76605225 -39.49097824]
[343.31707764 -26.06488419]
[327.53009033 -25.02490044]
[314.95672607 -16.84502602]
[302.38336182 -8.66515160]
[289.80999756 -0.48527670]
[277.28704834 7.77159309]
[264.81500244 16.10514641]
[267.03613281 23.26870537]
[281.66491699 26.58512115]
[271.47839355 37.59582138]
[273.69952393 44.75938034]
[288.69839478 44.57530975]
[303.69726562 44.39123535]
[318.69613647 44.20716095]
[332.51257324 35.37324524]
[346.94467163 43.16085815]
[347.14590454 59.55876923]
[332.90927124 67.69821930]
[318.88021851 59.20603180]
[303.88134766 59.39010620]
[288.88247681 59.57418060]
[273.88360596 59.75825119]
[272.78311157 67.17707825]
[269.48168945 89.43354797]
[283.78128052 93.96363831]
[298.08087158 98.49372864]
[312.38046265 103.02381134]
[328.27059937 98.96972656]
[339.53143311 110.89136505]
[334.57879639 126.52477264]
[318.50750732 129.78764343]
[307.85037231 117.32340240]
[293.55078125 112.79331970]
[279.25119019 108.26322937]
[264.95159912 103.73313904]
[271.39758301 117.27747345]
[265.74545288 131.17184448]
[251.67504883 136.37025452]
[238.34695435 129.48825073]
[234.43850708 115.00640106]
[242.49394226 102.35342407]
[227.74734497 105.09902191]
[213.00076294 107.84461975]
[198.25418091 110.59021759]
[183.50759888 113.33581543]
[168.76101685 116.08141327]
[154.01443481 118.82701111]
[139.26785278 121.57260895]
[124.52127838 124.31820679]
[111.89794922 132.42077637]
[103.26082611 144.68455505]
[94.62370300 156.94831848]
[85.98657990 169.21209717]
[77.34945679 181.47587585]
[82.86203766 191.47151184]
[84.25381470 202.74972534]
[81.36280060 213.68661499]
[74.64087677 222.72175598]
[65.08368683 228.58068848]
[54.08325577 230.45472717]
[43.22531891 228.11239624]
[34.14265442 240.04994202]
[25.05998802 251.98750305]
[15.97732258 263.92504883]
[6.89465714 275.86260986]
[-2.18800831 287.80017090]
[-11.27067375 299.73770142]
[-7.93474531 312.76940918]
[-12.63608742 325.16528320]
[-23.45298767 332.48907471]
[-36.31954575 332.25796509]
[-45.54801941 344.08316040]
[-54.77649307 355.90835571]
[-64.00496674 367.73355103]
[-62.26573563 383.21298218]
[-71.79317474 395.07394409]
[-86.56116486 396.63665771]
[-95.78964233 408.46185303]
[-105.01811218 420.28704834]
[-91.29985046 414.21997070]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 55]
[15 54]
[16 53]
[17 52]
[18 51]
[19 50]
[20 49]
[21 48]
[25 44]
[26 43]
[27 42]
[28 41]
[29 40]
[30 39]
[31 38]
[56 254]
[57 253]
[58 252]
[61 249]
[62 248]
[63 247]
[64 246]
[67 242]
[68 241]
[69 240]
[70 239]
[71 238]
[72 237]
[73 236]
[77 229]
[78 228]
[79 227]
[80 226]
[81 225]
[83 105]
[84 104]
[85 103]
[86 102]
[87 101]
[88 100]
[89 99]
[90 98]
[114 125]
[115 124]
[116 123]
[117 122]
[129 143]
[130 142]
[131 141]
[132 140]
[133 139]
[134 138]
[145 224]
[146 223]
[147 222]
[148 221]
[149 220]
[150 219]
[151 218]
[152 217]
[153 216]
[154 182]
[155 181]
[157 180]
[158 179]
[159 178]
[160 177]
[162 175]
[163 174]
[164 173]
[165 172]
[186 197]
[187 196]
[188 195]
[189 194]
[199 210]
[200 209]
[201 208]
[202 207]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
