%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:45:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGCCCGCUCCGAGCCUGGUGCUUCCGACCGCUGCGCGCGGCUCCUGGGCUGUCACAGUCUCCCGUUGCCGCCGUCAUGUCCCGGCAGCUGUCGCGGGCCCGGCCAGCCACGGUGCUGGGCGCCAUGGAGAUGGGGCGCCGCAUGGACGCGCCCACCAGCGCCGCAGUCACGCGCG\
) } def
/len { sequence length } bind def

/coor [
[253.39115906 150.72700500]
[239.06127930 146.29362488]
[224.73141479 141.86026001]
[210.32553101 137.68046570]
[195.84812927 133.75558472]
[181.37072754 129.83068848]
[166.89331055 125.90580750]
[152.41590881 121.98091888]
[137.93850708 118.05603027]
[124.88552094 133.85353088]
[105.91277313 141.59794617]
[85.53349304 139.44706726]
[68.59550476 127.91251373]
[55.78520203 135.71611023]
[42.97489548 143.51969910]
[30.16458702 151.32328796]
[17.35428047 159.12687683]
[13.51414108 174.22294617]
[0.41150355 181.95440674]
[-13.95661831 178.20039368]
[-26.76692581 186.00398254]
[-39.57723236 193.80757141]
[-52.38753891 201.61116028]
[-51.34792328 216.88131714]
[-57.53439713 230.88082886]
[-69.52535248 240.39270020]
[-84.56535339 243.23117065]
[-99.19831848 238.74397278]
[-110.06170654 227.96226501]
[-114.65917969 213.36357117]
[-111.93428040 198.30258179]
[-102.51316833 186.24018860]
[-88.56074524 179.94825745]
[-73.28317261 180.87261963]
[-60.19113159 188.80085754]
[-47.38082504 180.99726868]
[-34.57051849 173.19366455]
[-21.76021004 165.39007568]
[-18.50531006 150.90072632]
[-5.62500286 142.80429077]
[9.55068970 146.31657410]
[22.36099625 138.51298523]
[35.17130280 130.70938110]
[47.98160934 122.90579987]
[60.79191589 115.10220337]
[58.67322159 107.57943726]
[57.98442841 99.79442596]
[58.74937057 92.01652527]
[44.76791763 86.58338165]
[30.78646851 81.15023804]
[16.80501747 75.71709442]
[2.82356811 70.28395081]
[-11.15788269 64.85080719]
[-28.11152649 64.74949646]
[-32.70740891 48.43035889]
[-18.29829979 39.49649811]
[-5.72473860 50.86935425]
[8.25671101 56.30249786]
[22.23816109 61.73564148]
[36.21961212 67.16878510]
[50.20106125 72.60192871]
[64.18251038 78.03507233]
[66.89379883 74.12858582]
[70.02912903 70.55348206]
[73.54834747 67.35554504]
[77.40637207 64.57573700]
[71.72731781 50.69235229]
[66.04827118 36.80896759]
[60.36922455 22.92558098]
[54.69017410 9.04219437]
[49.01112747 -4.84119129]
[43.33207703 -18.72457695]
[28.08971405 -20.11344528]
[15.24501324 -28.43643951]
[7.74959278 -41.78099823]
[7.32584572 -57.08063889]
[14.07114506 -70.81961823]
[26.43547249 -79.84081268]
[41.57759476 -82.07122803]
[56.01795959 -76.99832153]
[66.43828583 -65.78781891]
[70.44404602 -51.01580429]
[67.11476135 -36.07677841]
[57.21546173 -24.40362549]
[62.89451218 -10.52023983]
[68.57356262 3.36314607]
[74.25260925 17.24653244]
[79.93165588 31.12991714]
[85.61070251 45.01330566]
[91.28975677 58.89669037]
[106.86629486 58.54877090]
[121.49867249 63.90072632]
[133.17480469 74.21662140]
[140.28913879 88.07793427]
[141.86340332 103.57862091]
[156.34080505 107.50350952]
[170.81820679 111.42839813]
[185.29560852 115.35328674]
[199.77301025 119.27817535]
[214.25041199 123.20306396]
[220.77642822 121.87271118]
[226.17271423 123.77280426]
[229.16477966 127.53038025]
[243.49465942 131.96376038]
[257.82452393 136.39712524]
[265.70523071 128.00152588]
[276.10910034 123.18804169]
[287.50708008 122.62172699]
[298.23968506 126.34649658]
[306.75888062 133.78431702]
[311.85104370 143.82460022]
[312.81002808 154.98983765]
[326.88516235 160.17538452]
[341.00555420 165.23652649]
[355.17001343 170.17285156]
[369.33450317 175.10919189]
[383.54199219 179.92033386]
[397.79141235 184.60591125]
[412.04080200 189.29150391]
[426.33099365 193.85115051]
[440.66085815 198.28453064]
[454.99072266 202.71789551]
[469.32061768 207.15127563]
[483.65048218 211.58464050]
[490.21936035 210.48542786]
[495.54522705 212.57478333]
[498.40283203 216.43560791]
[512.56732178 221.37194824]
[526.73181152 226.30828857]
[531.91778564 225.31524658]
[536.49902344 226.32852173]
[539.80761719 228.77510071]
[541.50335693 231.89892578]
[555.38677979 237.57797241]
[569.27014160 243.25703430]
[583.15350342 248.93608093]
[597.08648682 254.49238586]
[611.06793213 259.92553711]
[625.04937744 265.35867310]
[639.07824707 270.66821289]
[653.15338135 275.85375977]
[669.21380615 272.53775024]
[679.91210938 284.96664429]
[674.24291992 300.35467529]
[658.03808594 302.87197876]
[647.96783447 289.92892456]
[633.89270020 284.74337769]
[626.50695801 285.38336182]
[619.61627197 279.34011841]
[605.63476562 273.90698242]
[591.65332031 268.47384644]
[584.25744629 268.98336792]
[577.47448730 262.81945801]
[563.59106445 257.14041138]
[549.70770264 251.46136475]
[535.82434082 245.78231812]
[521.79547119 240.47276306]
[507.63098145 235.53643799]
[493.46649170 230.60009766]
[479.21710205 225.91452026]
[464.88723755 221.48114014]
[450.55737305 217.04777527]
[436.22747803 212.61439514]
[421.89761353 208.18103027]
[414.55612183 209.21098328]
[407.35522461 203.54089355]
[393.10583496 198.85531616]
[378.85641479 194.16973877]
[371.49789429 195.06996155]
[364.39819336 189.27366638]
[350.23370361 184.33734131]
[336.06921387 179.40100098]
[328.69592285 180.17123413]
[321.69961548 174.25054932]
[307.62448120 169.06500244]
[292.75552368 180.33790588]
[273.94692993 180.40769958]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 105]
[2 104]
[3 103]
[4 100]
[5 99]
[6 98]
[7 97]
[8 96]
[9 95]
[13 45]
[14 44]
[15 43]
[16 42]
[17 41]
[20 38]
[21 37]
[22 36]
[23 35]
[48 62]
[49 61]
[50 60]
[51 59]
[52 58]
[53 57]
[66 90]
[67 89]
[68 88]
[69 87]
[70 86]
[71 85]
[72 84]
[112 175]
[113 174]
[114 172]
[115 171]
[116 170]
[117 168]
[118 167]
[119 166]
[120 164]
[121 163]
[122 162]
[123 161]
[124 160]
[127 159]
[128 158]
[129 157]
[133 156]
[134 155]
[135 154]
[136 153]
[137 151]
[138 150]
[139 149]
[140 147]
[141 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
