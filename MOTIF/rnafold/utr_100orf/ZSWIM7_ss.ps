%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:27:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGCCCCGGCGGGGGGUCAGGAUCCUCCACAGGUAGGCGCAGUCAGCUGGAGCGUCGCGGCGGUCCGCCGGUCGUGGAGGGCGUGUCCUGCGGCGCGAUGGCCGUAGUGUUGCCGGCGGUUGUGGAGGAGCUCCUGAGCGAGAUGGCGGCGGCGGUGCAGGAGAGCGCGCGAAUUCCUGAUGAAUAUCUGUUAUCGC\
) } def
/len { sequence length } bind def

/coor [
[70.66570282 119.31014252]
[65.33811188 133.33215332]
[60.01052856 147.35417175]
[54.68293762 161.37617493]
[49.46619797 175.43980408]
[44.36062622 189.54417419]
[39.25505829 203.64854431]
[34.14948654 217.75289917]
[39.62559509 232.83242798]
[31.12769508 246.43997192]
[15.17465019 248.13699341]
[4.00427055 236.62168884]
[6.18551636 220.72761536]
[20.04512215 212.64733887]
[25.15069199 198.54296875]
[30.25625992 184.43859863]
[35.36183167 170.33424377]
[34.68180466 162.96751404]
[40.66092682 156.04858398]
[45.98851395 142.02658081]
[51.31610489 128.00456238]
[56.64369202 113.98255920]
[52.70730209 107.59860229]
[44.83451843 94.83070374]
[40.89812851 88.44675446]
[25.97703171 86.91023254]
[11.05593586 85.37371063]
[-3.86516023 83.83718872]
[-18.78625679 82.30066681]
[-33.70735168 80.76414490]
[-48.62844849 79.22761536]
[-57.49549866 81.46295929]
[-63.77230835 77.54724884]
[-78.66728973 75.77537537]
[-91.00938416 85.27854156]
[-106.08977509 83.26942444]
[-115.07353973 71.44454956]
[-129.96852112 69.67267609]
[-144.86349487 67.90079498]
[-159.85601807 68.37432098]
[-174.60949707 71.08262634]
[-184.86592102 83.41897583]
[-200.90203857 82.94773102]
[-210.41635132 70.03038788]
[-206.11026001 54.57603073]
[-191.28704834 48.43991852]
[-177.31781006 56.32914734]
[-162.56433105 53.62084579]
[-161.85415649 38.63699722]
[-161.14404297 23.65448380]
[-175.57522583 19.56293869]
[-190.00642395 15.47139263]
[-205.39378357 19.15102196]
[-215.52792358 8.23551083]
[-229.95912170 4.14396524]
[-244.39030457 0.05242009]
[-260.14929199 4.58959818]
[-271.76876831 -6.98279762]
[-267.29556274 -22.76007843]
[-251.33137512 -26.51193047]
[-240.29876709 -14.37877083]
[-225.86756897 -10.28722477]
[-211.43638611 -6.19568014]
[-197.08123779 -10.16796303]
[-185.91487122 1.04020262]
[-171.48368835 5.13174772]
[-157.05249023 9.22329330]
[-143.09161377 53.00581360]
[-128.19664001 54.77769089]
[-113.30165863 56.54957199]
[-101.79453278 47.16225815]
[-86.66366577 48.74700928]
[-76.89540863 60.88039017]
[-62.00042725 62.65227127]
[-47.09192657 64.30652618]
[-32.17082977 65.84304810]
[-17.24973297 67.37957001]
[-2.32863760 68.91609192]
[12.59245777 70.45261383]
[27.51355362 71.98913574]
[42.43465042 73.52565765]
[106.33737946 85.06089783]
[117.31396484 74.83766174]
[128.29054260 64.61441803]
[139.26713562 54.39118195]
[144.24641418 36.66770935]
[161.48245239 33.39056778]
[172.29627991 22.99532509]
[183.11010742 12.60008049]
[193.92393494 2.20483732]
[204.73776245 -8.19040585]
[215.55160522 -18.58564949]
[226.36543274 -28.98089409]
[230.95219421 -44.12262726]
[245.48963928 -47.36484146]
[256.30346680 -57.76008606]
[267.11730957 -68.15532684]
[266.04525757 -77.54080963]
[269.36822510 -86.23633575]
[276.22064209 -92.33181000]
[284.97729492 -94.55117798]
[293.63769531 -92.51815796]
[304.93154907 -102.38978577]
[316.22540283 -112.26141357]
[327.51922607 -122.13304138]
[338.81307983 -132.00466919]
[344.11157227 -146.91227722]
[358.78622437 -149.46260071]
[370.08004761 -159.33422852]
[375.37854004 -174.24183655]
[390.05319214 -176.79217529]
[401.34701538 -186.66380310]
[412.64086914 -196.53543091]
[423.93472290 -206.40705872]
[435.15029907 -216.36752319]
[446.28689575 -226.41621399]
[457.42349243 -236.46488953]
[462.48599243 -251.45428467]
[477.11853027 -254.23596191]
[488.25512695 -264.28463745]
[499.39175415 -274.33334351]
[510.52835083 -284.38201904]
[509.78536987 -300.00195312]
[519.29760742 -312.41369629]
[534.57366943 -315.75680542]
[548.40063477 -308.45278931]
[554.24987793 -293.95034790]
[549.35949707 -279.09713745]
[536.03869629 -270.90634155]
[520.57702637 -273.24542236]
[509.44042969 -263.19671631]
[498.30383301 -253.14804077]
[487.16723633 -243.09934998]
[482.90130615 -228.82872009]
[467.47216797 -225.32829285]
[456.33557129 -215.27960205]
[445.19897461 -205.23092651]
[442.33615112 -198.40924072]
[433.80633545 -195.11320496]
[422.51251221 -185.24157715]
[411.21865845 -175.36994934]
[399.92480469 -165.49832153]
[395.43414307 -151.29681396]
[379.95169067 -148.04039001]
[368.65783691 -138.16876221]
[364.16717529 -123.96723938]
[348.68472290 -120.71082306]
[337.39086914 -110.83919525]
[326.09701538 -100.96756744]
[314.80316162 -91.09593964]
[303.50933838 -81.22431183]
[298.58770752 -61.18612671]
[277.51254272 -57.34149933]
[266.69873047 -46.94625473]
[255.88488770 -36.55101395]
[252.07159424 -22.15281677]
[236.76066589 -18.16706276]
[225.94683838 -7.77182007]
[215.13301086 2.62342334]
[204.31918335 13.01866722]
[193.50535583 23.41390991]
[182.69152832 33.80915451]
[171.87768555 44.20439911]
[171.32357788 56.29440308]
[162.39088440 65.04356384]
[149.49037170 65.36776733]
[138.51379395 75.59100342]
[127.53720093 85.81423950]
[116.56062317 96.03748322]
[113.96885681 110.81187439]
[120.81034088 124.16081238]
[127.65183258 137.50975037]
[134.49331665 150.85867310]
[148.60366821 149.96931458]
[161.94622803 154.51310730]
[172.51585388 163.77232361]
[178.73748779 176.32325745]
[179.70077515 190.25503540]
[175.29312134 203.46060181]
[166.21179199 213.95532227]
[172.84170532 227.41059875]
[179.47160339 240.86587524]
[193.39733887 249.52647400]
[192.58953857 265.90570068]
[177.87921143 273.15402222]
[164.39906311 263.81497192]
[166.01632690 247.49577332]
[159.38642883 234.04051208]
[152.75651550 220.58523560]
[136.78771973 221.03659058]
[122.16655731 214.45706177]
[111.83918762 202.11677551]
[107.91072845 186.45216370]
[111.21636963 170.58497620]
[121.14437866 157.70016479]
[114.30289459 144.35122681]
[107.46141052 131.00230408]
[100.61991882 117.65336609]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 22]
[2 21]
[3 20]
[4 19]
[5 17]
[6 16]
[7 15]
[8 14]
[25 81]
[26 80]
[27 79]
[28 78]
[29 77]
[30 76]
[31 75]
[33 74]
[34 73]
[37 70]
[38 69]
[39 68]
[40 48]
[41 47]
[50 67]
[51 66]
[52 65]
[54 63]
[55 62]
[56 61]
[82 169]
[83 168]
[84 167]
[85 166]
[87 163]
[88 162]
[89 161]
[90 160]
[91 159]
[92 158]
[93 157]
[95 155]
[96 154]
[97 153]
[102 151]
[103 150]
[104 149]
[105 148]
[106 147]
[108 145]
[109 144]
[111 142]
[112 141]
[113 140]
[114 139]
[115 137]
[116 136]
[117 135]
[119 133]
[120 132]
[121 131]
[122 130]
[170 198]
[171 197]
[172 196]
[173 195]
[180 189]
[181 188]
[182 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
