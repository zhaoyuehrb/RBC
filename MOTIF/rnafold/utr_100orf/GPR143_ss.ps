%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:34:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACCGAGCCUGGCUCUACUGCAGGCGCUGGGGGUUGGGGUGGGGGAGAGGCCCAGGGCACAUGAUGCCGCCCCCAGCCCGCCCAGCACAUGACCCAGGCAGGCCGGCGGGGUCCUGGCACACCCGAGCCGCGUCCGCGAACACAGCCCAUGGCCUCCCCGCGCCUAGGGACCUUCUGCUGCCCCACGCGGGACGCAGCCACGCAGCUCGUGCUGAGCUUCCAGCCGCGGGCCUUCCACGCGCUCUGCC\
) } def
/len { sequence length } bind def

/coor [
[65.26708984 305.48373413]
[62.16191483 317.84661865]
[54.64621735 328.08432007]
[43.86106491 334.70202637]
[31.42158890 336.75003052]
[27.67657852 351.27499390]
[23.93156815 365.79995728]
[20.18655586 380.32495117]
[22.08690453 397.17205811]
[6.42425632 403.66186523]
[-4.14779520 390.40789795]
[5.66158199 376.57992554]
[9.40659237 362.05496216]
[13.15160370 347.52999878]
[16.89661407 333.00500488]
[4.16904879 321.37973022]
[-0.92937541 304.81988525]
[3.09692502 287.87548828]
[15.22326946 275.25045776]
[32.16357422 270.49667358]
[35.54091263 255.88183594]
[38.91825104 241.26699829]
[42.29558945 226.65216064]
[45.58066559 212.01629639]
[48.77334976 197.36001587]
[51.96603012 182.70372009]
[55.15871429 168.04743958]
[58.25887299 153.37129211]
[61.26639175 138.67588806]
[64.27391052 123.98049164]
[61.54502869 109.23080444]
[53.47888565 96.58417511]
[45.41273880 83.93753815]
[37.34659576 71.29090881]
[29.28045273 58.64427567]
[10.98927307 50.13282776]
[11.03670788 30.78248978]
[2.65404487 18.34339905]
[-5.72861814 5.90430927]
[-14.11128139 -6.53478098]
[-22.49394417 -18.97387123]
[-36.62242126 -26.09403038]
[-37.31865311 -40.97235489]
[-45.70131683 -53.41144562]
[-54.08397675 -65.85053253]
[-61.45589828 -71.20117950]
[-62.49277496 -78.49986267]
[-70.71783447 -91.04372406]
[-78.94288635 -103.58758545]
[-87.16794586 -116.13144684]
[-95.39300537 -128.67530823]
[-103.61806488 -141.21916199]
[-118.83341980 -144.55543518]
[-126.99610901 -157.39385986]
[-123.72171783 -171.87881470]
[-131.94677734 -184.42266846]
[-140.17182922 -196.96653748]
[-148.39689636 -209.51039124]
[-170.83366394 -206.20866394]
[-192.08065796 -217.54919434]
[-203.04730225 -240.55989075]
[-197.95411682 -266.97052002]
[-209.05049133 -277.06359863]
[-217.48200989 -280.51092529]
[-220.22216797 -287.35470581]
[-231.19032288 -297.58700562]
[-242.15847778 -307.81927490]
[-253.12663269 -318.05157471]
[-264.09478760 -328.28384399]
[-283.93173218 -331.95904541]
[-288.71694946 -350.70843506]
[-299.93978882 -360.66070557]
[-311.16262817 -370.61300659]
[-322.38546753 -380.56527710]
[-330.85980225 -383.90594482]
[-333.68609619 -390.71463013]
[-344.78247070 -400.80770874]
[-355.87884521 -410.90081787]
[-371.29385376 -414.46282959]
[-375.50274658 -428.75039673]
[-386.59912109 -438.84347534]
[-397.69549561 -448.93658447]
[-410.57635498 -449.10369873]
[-419.60861206 -457.71789551]
[-420.33618164 -469.77694702]
[-431.30435181 -480.00924683]
[-445.72888184 -474.89147949]
[-460.87783813 -477.07485962]
[-473.27014160 -486.05758667]
[-480.05810547 -499.77554321]
[-479.68188477 -515.07641602]
[-472.22796631 -528.44421387]
[-459.40917969 -536.80706787]
[-444.17123413 -538.24328613]
[-430.01562500 -532.42285156]
[-420.19525146 -520.68316650]
[-416.96676636 -505.72207642]
[-421.07205200 -490.97738647]
[-410.10391235 -480.74511719]
[-392.80911255 -477.70761108]
[-387.60241699 -460.03295898]
[-376.50604248 -449.93984985]
[-365.40966797 -439.84677124]
[-350.78833008 -437.00668335]
[-345.78576660 -421.99719238]
[-334.68939209 -411.90408325]
[-323.59298706 -401.81100464]
[-312.43316650 -391.78811646]
[-301.21032715 -381.83584595]
[-289.98751831 -371.88354492]
[-278.76467896 -361.93127441]
[-268.69177246 -363.45785522]
[-259.23693848 -359.10858154]
[-253.60916138 -350.09475708]
[-253.86250305 -339.25201416]
[-242.89434814 -329.01971436]
[-231.92619324 -318.78744507]
[-220.95803833 -308.55514526]
[-209.98988342 -298.32287598]
[-198.95739746 -288.15997314]
[-187.86102295 -278.06689453]
[-180.70223999 -280.30337524]
[-185.60134888 -294.48077393]
[-193.95851135 -306.93704224]
[-184.90020752 -318.89309692]
[-170.64703369 -314.21902466]
[-170.42752075 -299.22125244]
[-166.38468933 -284.77633667]
[-159.22590637 -287.01284790]
[-155.84857178 -301.62768555]
[-152.47122192 -316.24252319]
[-157.77743530 -331.75949097]
[-146.79010010 -343.93365479]
[-130.81204224 -340.24127197]
[-126.28011322 -324.48077393]
[-137.85638428 -312.86517334]
[-141.23371887 -298.25033569]
[-144.61106873 -283.63549805]
[-134.61828613 -276.43972778]
[-127.26813507 -267.01538086]
[-122.99266052 -256.24334717]
[-121.94911957 -245.06448364]
[-124.02160645 -234.39840698]
[-128.84573364 -225.06788635]
[-135.85302734 -217.73545837]
[-127.62797546 -205.19158936]
[-119.40291595 -192.64773560]
[-111.17785645 -180.10386658]
[-96.58833313 -177.33235168]
[-88.06826019 -164.72827148]
[-91.07420349 -149.44422913]
[-82.84914398 -136.90036011]
[-74.62408447 -124.35649872]
[-66.39903259 -111.81264496]
[-58.17397308 -99.26878357]
[-49.94891357 -86.72492218]
[-41.64488602 -74.23320007]
[-33.26222610 -61.79410934]
[-24.87956238 -49.35501862]
[-11.35066795 -43.12458420]
[-10.05485344 -27.35653305]
[-1.67219090 -14.91744328]
[6.71047211 -2.47835350]
[15.09313488 9.96073627]
[23.47579765 22.39982605]
[33.61086655 23.43645096]
[41.68039322 30.00854301]
[44.87949371 40.14200974]
[41.92708588 50.57813263]
[49.99322891 63.22476578]
[58.05937195 75.87139893]
[66.12551880 88.51802826]
[74.19165802 101.16466522]
[73.45513153 84.13712311]
[84.38738251 67.54796600]
[105.54518890 59.27458572]
[130.42466736 65.24569702]
[145.42198181 65.52955627]
[160.41929626 65.81341553]
[175.41661072 66.09728241]
[190.41392517 66.38114166]
[205.41362000 66.47576904]
[220.41333008 66.38114166]
[235.41302490 66.28651428]
[249.28189087 57.53514862]
[263.66729736 65.40868378]
[263.77075195 81.80751038]
[249.48582458 89.86190796]
[235.50764465 81.28621674]
[220.50794983 81.38084412]
[205.50823975 81.47547150]
[201.58975220 84.16618347]
[195.94451904 84.44053650]
[190.13005066 81.37845612]
[175.13275146 81.09459686]
[160.13543701 80.81072998]
[145.13812256 80.52687073]
[130.14080811 80.24301147]
[127.19435883 87.13999939]
[140.98834229 93.03289032]
[154.78221130 98.92600250]
[148.88887024 112.71978760]
[135.09544373 106.82686615]
[121.30146790 100.93397522]
[118.35502625 107.83096313]
[128.92811584 118.47097015]
[139.50120544 129.11097717]
[150.07431030 139.75097656]
[160.64739990 150.39097595]
[171.22048950 161.03099060]
[181.79357910 171.67098999]
[192.43359375 182.24407959]
[203.14007568 192.74984741]
[213.84657288 203.25561523]
[229.64579773 202.85545349]
[241.04275513 213.80464172]
[241.27584839 229.60722351]
[230.20677185 240.88778687]
[214.40261841 240.95378113]
[203.23971558 229.76606750]
[203.34080505 213.96209717]
[192.63432312 203.45634460]
[181.92782593 192.95057678]
[174.96974182 190.51521301]
[171.15357971 182.24407959]
[160.58049011 171.60408020]
[150.00740051 160.96408081]
[139.43429565 150.32406616]
[128.86120605 139.68406677]
[118.28811646 129.04406738]
[107.71501923 118.40406036]
[100.52859497 120.55004883]
[97.05942535 135.14335632]
[86.15573883 124.84202576]
[78.96930695 126.98800659]
[75.96179199 141.68341064]
[72.95427704 156.37881470]
[74.29834747 165.38813782]
[69.81500244 171.24011230]
[66.62232208 185.89640808]
[63.42963791 200.55268860]
[60.23695374 215.20898438]
[61.46725082 224.23455811]
[56.91043091 230.02949524]
[53.53309250 244.64433289]
[50.15575409 259.25918579]
[46.77841568 273.87402344]
[56.99571991 281.72756958]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 15]
[6 14]
[7 13]
[8 12]
[20 247]
[21 246]
[22 245]
[23 244]
[24 242]
[25 241]
[26 240]
[27 239]
[28 237]
[29 236]
[30 235]
[31 173]
[32 172]
[33 171]
[34 170]
[35 169]
[37 165]
[38 164]
[39 163]
[40 162]
[41 161]
[43 159]
[44 158]
[45 157]
[47 156]
[48 155]
[49 154]
[50 153]
[51 152]
[52 151]
[55 148]
[56 147]
[57 146]
[58 145]
[62 121]
[63 120]
[65 119]
[66 118]
[67 117]
[68 116]
[69 115]
[71 111]
[72 110]
[73 109]
[74 108]
[76 107]
[77 106]
[78 105]
[80 103]
[81 102]
[82 101]
[85 99]
[86 98]
[129 138]
[130 137]
[131 136]
[177 198]
[178 197]
[179 196]
[180 195]
[181 194]
[182 191]
[183 190]
[184 189]
[205 231]
[206 230]
[207 229]
[208 228]
[209 227]
[210 226]
[211 225]
[212 223]
[213 222]
[214 221]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
