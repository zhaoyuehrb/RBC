%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:29:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUGUGUGCUGAUAUUUUUGGAUCAUUUGUUUACUCGUUUUUUGAGUUUACCUUUCUUUUUUUUCUCUCAGGUAAUAGGAAAUGAAUGAUGAUGGAAAAGUCAAUGCUAGCUCUGAGGGGUACUUUAUUUUAGUUGGAUUUUCUAAUUGGCCUCAUCUGGAAGUAGUUAUCUUUGUGGUUG\
) } def
/len { sequence length } bind def

/coor [
[34.07020187 199.88690186]
[27.78087807 186.26911926]
[24.86556435 171.55514526]
[25.48733330 156.56803894]
[29.61140442 142.14610291]
[37.00709915 129.09605408]
[47.26072693 118.14785767]
[59.79874420 109.91390228]
[73.91983032 104.85475922]
[88.83290100 103.25340271]
[74.90155792 97.69303894]
[60.97021103 92.13267517]
[47.03886795 86.57230377]
[31.35372353 88.64277649]
[22.40133667 76.73882294]
[8.46999359 71.17845917]
[-5.46134949 65.61808777]
[-19.39269257 60.05772400]
[-33.32403564 54.49736023]
[-47.25537872 48.93699265]
[-65.39953613 52.00783539]
[-75.73332214 37.83769608]
[-89.75856781 32.51862335]
[-103.78380585 27.19954872]
[-117.80905151 21.88047600]
[-131.83428955 16.56140327]
[-145.85954285 11.24232960]
[-159.88478088 5.92325592]
[-173.91003418 0.60418266]
[-187.93527222 -4.71489048]
[-201.96051025 -10.03396416]
[-215.98576355 -15.35303688]
[-225.14593506 -15.47315407]
[-230.20587158 -20.88685989]
[-244.13720703 -26.44722557]
[-259.82235718 -24.37675858]
[-268.77474976 -36.28071213]
[-282.70608521 -41.84107590]
[-296.63742065 -47.40144348]
[-312.32257080 -45.33097458]
[-321.27496338 -57.23492813]
[-335.20629883 -62.79529190]
[-349.13763428 -68.35565948]
[-363.06900024 -73.91602325]
[-377.00033569 -79.47638702]
[-390.93167114 -85.03675842]
[-400.24600220 -73.14474487]
[-412.53421021 -64.35971069]
[-426.80014038 -59.39382553]
[-441.88729858 -58.64964676]
[-456.57269287 -62.18750000]
[-469.66577148 -69.72059631]
[-480.10519409 -80.63824463]
[-487.04467773 -94.05541992]
[-489.92163086 -108.88443756]
[-488.50286865 -123.92317963]
[-482.90338135 -137.95252991]
[-473.57711792 -149.83517456]
[-461.28009033 -158.60784912]
[-447.00918579 -163.55940247]
[-431.92126465 -164.28842163]
[-417.23944092 -160.73582458]
[-404.15393066 -153.18957520]
[-393.72549438 -142.26144409]
[-386.79949951 -128.83731079]
[-383.93743896 -114.00540924]
[-385.37130737 -98.96810150]
[-371.43997192 -93.40773010]
[-357.50860596 -87.84736633]
[-343.57727051 -82.28700256]
[-329.64593506 -76.72663879]
[-315.71459961 -71.16627502]
[-301.02590942 -73.63445282]
[-291.07705688 -61.33278656]
[-277.14572144 -55.77241898]
[-263.21438599 -50.21205521]
[-248.52569580 -52.68023300]
[-238.57684326 -40.37856674]
[-224.64549255 -34.81820297]
[-210.66668701 -29.37828064]
[-196.64143372 -24.05920792]
[-182.61619568 -18.74013519]
[-168.59095764 -13.42106056]
[-154.56570435 -8.10198784]
[-140.54046631 -2.78291440]
[-126.51522064 2.53615904]
[-112.48998260 7.85523224]
[-98.46473694 13.17430592]
[-84.43949127 18.49337959]
[-70.41424561 23.81245232]
[-59.24168396 19.13340378]
[-47.50328827 23.47030830]
[-41.69501495 35.00564957]
[-27.76367188 40.56601715]
[-13.83232784 46.12638092]
[0.09901596 51.68674850]
[14.03035927 57.24711227]
[27.96170235 62.80747604]
[42.65038300 60.33929825]
[52.59923172 72.64096069]
[66.53057861 78.20133209]
[80.46192169 83.76169586]
[94.39326477 89.32205963]
[100.00965881 87.54154205]
[105.99445343 88.62652588]
[110.92852020 92.50000000]
[125.92852020 92.50000000]
[140.92851257 92.50000000]
[155.92851257 92.50000000]
[167.06164551 81.60544586]
[182.27377319 81.81912994]
[192.59146118 92.50000000]
[207.59146118 92.50000000]
[222.59146118 92.50000000]
[237.59089661 92.37053680]
[252.58866882 92.11163330]
[267.58364868 91.72328949]
[282.57470703 91.20555115]
[297.56576538 90.68780518]
[312.55682373 90.17006683]
[327.54788208 89.65232086]
[315.61871338 80.55865479]
[310.38406372 66.50168610]
[313.45968628 51.82038879]
[323.89627075 41.04645157]
[338.47235107 37.50546646]
[352.68865967 42.29043579]
[362.15710449 53.92437744]
[363.95504761 68.81623840]
[357.52746582 82.36933899]
[344.85971069 90.39985657]
[359.75033569 92.20790863]
[374.64099121 94.01595306]
[389.53161621 95.82400513]
[404.42224121 97.63205719]
[419.31286621 99.44010925]
[434.20352173 101.24816132]
[449.09414673 103.05620575]
[465.54660034 98.96315002]
[474.03417969 113.63956451]
[462.28094482 125.85829163]
[447.28610229 117.94683838]
[432.39544678 116.13879395]
[417.50482178 114.33074188]
[402.61419678 112.52268982]
[387.72357178 110.71463776]
[372.83291626 108.90659332]
[357.94229126 107.09854126]
[343.05166626 105.29048920]
[328.06561279 104.64338684]
[313.07455444 105.16112518]
[298.08349609 105.67887115]
[283.09243774 106.19660950]
[268.10137939 106.71435547]
[261.50793457 110.09629059]
[252.84757996 107.10939789]
[237.84980774 107.36830902]
[231.19895935 110.63593292]
[222.59146118 107.50000000]
[207.59146118 107.50000000]
[192.59146118 107.50000000]
[182.27377319 118.18087006]
[167.06164551 118.39455414]
[155.92851257 107.50000000]
[140.92851257 107.50000000]
[125.92852020 107.50000000]
[110.92852020 107.50000000]
[124.18650818 114.51609802]
[135.42599487 124.44958496]
[144.01826477 136.74481201]
[149.48271179 150.71406555]
[151.51368713 165.57592773]
[149.99758911 180.49911499]
[145.01919556 194.64886475]
[136.85700989 207.23373413]
[125.96756744 217.54972839]
[112.95998383 225.01986694]
[98.56185150 229.22625732]
[83.57853699 229.93363953]
[68.84815216 227.10243225]
[55.19464493 220.89100647]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 103]
[11 102]
[12 101]
[13 100]
[15 98]
[16 97]
[17 96]
[18 95]
[19 94]
[20 93]
[22 90]
[23 89]
[24 88]
[25 87]
[26 86]
[27 85]
[28 84]
[29 83]
[30 82]
[31 81]
[32 80]
[34 79]
[35 78]
[37 76]
[38 75]
[39 74]
[41 72]
[42 71]
[43 70]
[44 69]
[45 68]
[46 67]
[106 167]
[107 166]
[108 165]
[109 164]
[112 161]
[113 160]
[114 159]
[115 157]
[116 156]
[117 154]
[118 153]
[119 152]
[120 151]
[121 150]
[131 149]
[132 148]
[133 147]
[134 146]
[135 145]
[136 144]
[137 143]
[138 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
