%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:37:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGCGGGGCUGGGCGGUGCUUCCGCCUGCGCGAGGCCGCGCCGGGCCGCUUGGAGGCGCCCGGUGCAGUCGGGAACCCGCGCUAGGUUUCGCCGGCCGCGCGGCCAGAUGAGGGGGGCGAUGGAGCUGGAGCCUGAGCUGCUGUUGCAGGAGGCCCGCGAGAACGUGGAGGCAGCGCAGAGCUACCGGCGGGAGCUGGGUCACCGGC\
) } def
/len { sequence length } bind def

/coor [
[191.43519592 640.56390381]
[192.65098572 625.38580322]
[202.68699646 613.69885254]
[199.34918213 599.07495117]
[188.97378540 588.38848877]
[193.44627380 573.21258545]
[190.10845947 558.58868408]
[186.77064514 543.96478271]
[183.32353210 529.36621094]
[179.76733398 514.79388428]
[176.21112061 500.22152710]
[172.65492249 485.64916992]
[159.83244324 478.15786743]
[156.01835632 463.43008423]
[163.96286011 450.03149414]
[160.40664673 435.45913696]
[156.85044861 420.88677979]
[146.31634521 410.35671997]
[150.56130981 395.11563110]
[147.00509644 380.54327393]
[143.44889832 365.97094727]
[139.89268494 351.39859009]
[136.33648682 336.82623291]
[132.78027344 322.25387573]
[129.22407532 307.68154907]
[125.66786957 293.10919189]
[122.11166382 278.53683472]
[118.22937775 264.04794312]
[114.02296448 249.64981079]
[109.12947083 244.11048889]
[109.86306000 235.00477600]
[105.87250519 220.54533386]
[101.88195038 206.08587646]
[97.89139557 191.62643433]
[93.08131409 186.01452637]
[93.95103455 176.92080688]
[90.17723083 162.40327454]
[86.40343475 147.88575745]
[82.62963104 133.36824036]
[70.97244263 123.92843628]
[55.98754501 123.25546265]
[41.00264740 122.58248901]
[26.01775169 121.90951538]
[11.03285599 121.23654175]
[-3.95203948 120.56356812]
[-18.93693542 119.89059448]
[-33.92183304 119.21762848]
[-48.90672684 118.54465485]
[-57.62091064 121.28605652]
[-64.11026001 117.74787140]
[-79.08341217 116.85080719]
[-94.05656433 115.95374298]
[-108.47357178 123.76924133]
[-122.30706024 114.96204376]
[-121.32632446 98.59225464]
[-106.54026031 91.49969482]
[-93.15950012 100.98059082]
[-78.18634796 101.87765503]
[-63.21319962 102.77471924]
[-48.23375702 103.55975342]
[-33.24885941 104.23272705]
[-18.26396370 104.90570068]
[-3.27906704 105.57867432]
[11.70582867 106.25164795]
[26.69072533 106.92462158]
[41.67562103 107.59759521]
[56.66051865 108.27056122]
[71.64541626 108.94353485]
[72.54572296 94.07696533]
[80.30641937 82.35774231]
[92.14730072 76.48181152]
[91.92291260 61.48349380]
[91.69852448 46.48517227]
[91.47412872 31.48685074]
[91.24974060 16.48852921]
[80.18985748 5.51962566]
[80.17594910 -9.69400120]
[90.70128632 -20.17030907]
[90.47689056 -35.16862869]
[82.53401184 -48.85151291]
[90.08005524 -61.69310379]
[89.85566711 -76.69142914]
[81.91278839 -90.37431335]
[89.45883179 -103.21590424]
[89.23444366 -118.21422577]
[89.01004791 -133.21253967]
[86.65060425 -136.85977173]
[85.67327118 -140.68351746]
[85.96376038 -144.22749329]
[87.27130127 -147.11940002]
[89.24786377 -149.10823059]
[89.92083740 -164.09312439]
[90.59381104 -179.07801819]
[91.26678467 -194.06291199]
[91.93975830 -209.04782104]
[91.49102020 -224.04110718]
[89.92309570 -238.95892334]
[88.35517120 -253.87675476]
[86.78723907 -268.79458618]
[76.71556854 -281.73651123]
[83.13760376 -296.82589722]
[99.44691467 -298.54006958]
[108.86588287 -285.11563110]
[101.70507050 -270.36251831]
[103.27299500 -255.44468689]
[104.84092712 -240.52685547]
[106.40885162 -225.60902405]
[113.95025635 -238.57542419]
[126.91478729 -246.12001038]
[141.91403198 -246.27096558]
[155.02777100 -238.98880005]
[162.82858276 -226.17680359]
[163.27766418 -211.18353271]
[156.25762939 -197.92762756]
[143.60322571 -189.87365723]
[128.62184143 -189.12663269]
[115.22901154 -195.88177490]
[106.92465210 -208.37484741]
[106.25167847 -193.38995361]
[105.57870483 -178.40504456]
[104.90573120 -163.42015076]
[104.23276520 -148.43525696]
[104.00836945 -133.43693542]
[104.23276520 -118.43861389]
[104.45715332 -103.44029236]
[112.38397980 -90.83019257]
[104.85398865 -76.91581726]
[105.07837677 -61.91749573]
[113.00520325 -49.30739594]
[105.47521210 -35.39302063]
[105.69960785 -20.39469910]
[116.53363037 -10.23795128]
[116.97484589 4.96928263]
[106.24806213 16.26413727]
[106.47245026 31.26245880]
[106.69684601 46.26078033]
[106.92123413 61.25910187]
[107.14562225 76.25742340]
[113.96726990 79.51377869]
[119.49075317 84.67418671]
[133.53427124 79.40356445]
[147.57780457 74.13294220]
[161.62132263 68.86231995]
[171.61306763 55.85858536]
[187.83279419 58.27777100]
[193.59503174 73.63122559]
[182.97210693 86.12463379]
[166.89193726 82.90584564]
[152.84841919 88.17646790]
[138.80490112 93.44709015]
[124.76137543 98.71771240]
[122.93036652 113.16376495]
[112.88916016 124.95374298]
[97.14714813 129.59443665]
[100.92095184 144.11195374]
[104.69475555 158.62948608]
[108.46855164 173.14700317]
[112.35083771 187.63589478]
[116.34139252 202.09533691]
[120.33194733 216.55477905]
[124.32250214 231.01422119]
[128.42109680 245.44340515]
[132.62750244 259.84152222]
[136.40280151 263.44851685]
[138.23341370 267.71630859]
[138.19335938 271.79324341]
[136.68402100 274.98062134]
[140.24021912 289.55297852]
[143.79643250 304.12533569]
[147.35263062 318.69769287]
[150.90884399 333.27001953]
[154.46504211 347.84237671]
[158.02125549 362.41473389]
[161.57745361 376.98709106]
[165.13365173 391.55941772]
[175.92211914 403.13180542]
[171.42279053 417.33056641]
[174.97900391 431.90292358]
[178.53520203 446.47528076]
[191.75860596 454.70812988]
[195.15751648 469.53720093]
[187.22726440 482.09295654]
[190.78347778 496.66531372]
[194.33967590 511.23767090]
[197.89588928 525.80999756]
[202.97099304 533.40576172]
[201.39456177 540.62695312]
[204.73237610 555.25085449]
[208.07019043 569.87475586]
[218.68432617 581.60723877]
[213.97309875 595.73712158]
[217.31091309 610.36102295]
[231.42382812 616.53613281]
[239.10475159 629.68365479]
[237.58906555 644.65588379]
[227.66654968 655.73205566]
[231.00436401 670.35595703]
[234.34217834 684.97985840]
[237.67999268 699.60382080]
[241.01780701 714.22772217]
[252.56262207 725.87457275]
[247.98811340 741.62274170]
[232.00012207 745.27191162]
[221.04573059 733.06811523]
[226.39389038 717.56555176]
[223.05607605 702.94158936]
[219.71826172 688.31768799]
[216.38044739 673.69378662]
[213.04263306 659.06982422]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 192]
[4 191]
[6 189]
[7 188]
[8 187]
[9 185]
[10 184]
[11 183]
[12 182]
[15 179]
[16 178]
[17 177]
[19 175]
[20 174]
[21 173]
[22 172]
[23 171]
[24 170]
[25 169]
[26 168]
[27 167]
[28 163]
[29 162]
[31 161]
[32 160]
[33 159]
[34 158]
[36 157]
[37 156]
[38 155]
[39 154]
[40 68]
[41 67]
[42 66]
[43 65]
[44 64]
[45 63]
[46 62]
[47 61]
[48 60]
[50 59]
[51 58]
[52 57]
[71 138]
[72 137]
[73 136]
[74 135]
[75 134]
[78 131]
[79 130]
[81 128]
[82 127]
[84 125]
[85 124]
[86 123]
[91 122]
[92 121]
[93 120]
[94 119]
[95 118]
[96 107]
[97 106]
[98 105]
[99 104]
[140 151]
[141 150]
[142 149]
[143 148]
[196 209]
[197 208]
[198 207]
[199 206]
[200 205]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
