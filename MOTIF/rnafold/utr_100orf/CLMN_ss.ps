%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:01:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGACUCCAGCUCCGCGGCGCCCUCGCCGGGUGCGUGCCGCUCGCGCGCCCGCCAGCCAGGCUCUCCGCGCCCGCCGCCCGCGCCGCGCUGGCCCGGGCUCUCCCGCCCGCGCUUCAUGGCUGCACACGAGUGGGACUGGUUCCAACGCGAGGAGCUCAUCGGGCAGAUUAGCGACAUCCGAGUGCAGAACCUGCAAGUUGAGAGGGAAAAUGUGC\
) } def
/len { sequence length } bind def

/coor [
[79.98007202 287.64358521]
[81.10401917 272.52694702]
[87.33320618 258.70764160]
[97.91542816 247.85443115]
[111.57283020 241.27786255]
[110.05530548 226.35482788]
[108.53778076 211.43179321]
[106.91226959 196.52012634]
[105.17886353 181.62062073]
[103.44546509 166.72111511]
[101.71205902 151.82160950]
[99.97865295 136.92210388]
[76.76993561 124.60531616]
[69.29653931 101.78470612]
[55.23025894 106.99428558]
[41.16397476 112.20386505]
[27.09769249 117.41344452]
[13.03141117 122.62301636]
[0.86895746 138.70266724]
[-18.03310776 134.61622620]
[-31.94267273 140.23085022]
[-45.85223770 145.84547424]
[-49.65570068 158.76350403]
[-60.05208206 167.01304626]
[-73.10799408 167.75889587]
[-84.04575348 160.95245361]
[-98.03514099 166.36512756]
[-111.90370178 172.08029175]
[-125.64488983 178.09526062]
[-139.38607788 184.11021423]
[-153.12725830 190.12518311]
[-166.86845398 196.14013672]
[-180.60963440 202.15510559]
[-194.35083008 208.17007446]
[-208.09201050 214.18502808]
[-221.83320618 220.19999695]
[-235.57438660 226.21495056]
[-242.73313904 240.57225037]
[-258.45101929 243.78588867]
[-270.67062378 233.39065552]
[-270.01812744 217.36088562]
[-256.99404907 207.99322510]
[-241.58935547 212.47377014]
[-227.84815979 206.45880127]
[-214.10697937 200.44384766]
[-200.36578369 194.42887878]
[-186.62460327 188.41392517]
[-172.88340759 182.39895630]
[-159.14222717 176.38398743]
[-145.40104675 170.36903381]
[-131.65985107 164.35406494]
[-117.91866302 158.33911133]
[-116.30113220 155.21083069]
[-113.09035492 152.70903015]
[-108.59651947 151.57295227]
[-103.44781494 152.37573242]
[-89.45842743 146.96307373]
[-83.32027435 131.30325317]
[-67.44194794 124.80210114]
[-51.46686172 131.93589783]
[-37.55729675 126.32128143]
[-23.64773178 120.70665741]
[-20.51664734 110.98569489]
[-12.38236618 104.45377350]
[-1.77758324 103.45412445]
[7.82183266 108.55673981]
[21.88811493 103.34716034]
[35.95439529 98.13758087]
[50.02067947 92.92800140]
[64.08695984 87.71842194]
[71.64955902 74.76438904]
[69.27087402 59.95419312]
[66.89218903 45.14399719]
[64.51351166 30.33380318]
[62.13482285 15.52360821]
[59.64899445 0.73102021]
[57.05615616 -14.04318619]
[43.27412415 -20.92517853]
[36.26897049 -34.44483948]
[38.54103851 -49.32105255]
[49.01181793 -59.88044357]
[46.41897583 -74.65465546]
[43.71926117 -89.40970612]
[40.91280746 -104.14482117]
[38.10635376 -118.87994385]
[35.29990005 -133.61506653]
[22.42955971 -138.54203796]
[13.74238682 -149.10055542]
[11.42417049 -162.46569824]
[15.97489262 -175.12934875]
[26.10565758 -183.82090759]
[23.51281548 -198.59512329]
[20.91997528 -213.36932373]
[10.91370106 -225.62432861]
[16.33454704 -239.49745178]
[13.74170589 -254.27166748]
[11.14886570 -269.04586792]
[8.55602455 -283.82006836]
[5.96318436 -298.59426880]
[-7.11793137 -307.46331787]
[-10.01422310 -322.99996948]
[-1.00737166 -335.98657227]
[14.55901718 -338.71844482]
[27.44968033 -329.57479858]
[30.01681709 -313.98037720]
[20.73739052 -301.18713379]
[23.33023071 -286.41290283]
[25.92307281 -271.63870239]
[28.51591301 -256.86450195]
[31.10875320 -242.09030151]
[40.92956924 -230.89204407]
[35.69418335 -215.96215820]
[38.28702164 -201.18795776]
[40.87986374 -186.41375732]
[55.85325241 -179.68005371]
[63.94213486 -165.20245361]
[61.78472900 -148.59169006]
[50.03502274 -136.42152405]
[52.84147644 -121.68640137]
[55.64792633 -106.95127869]
[58.45438004 -92.21615601]
[62.79175568 -86.23628235]
[61.19318390 -77.24748993]
[63.78602600 -62.47328568]
[77.22664642 -56.11029053]
[84.42840576 -42.89671326]
[82.44542694 -27.79965591]
[71.83036041 -16.63602638]
[74.42320251 -1.86182046]
[78.67355347 4.18021917]
[76.94501495 13.14492416]
[79.32369995 27.95511818]
[81.70238495 42.76531219]
[84.08106995 57.57550812]
[86.45975494 72.38570404]
[101.34291077 67.73094177]
[117.37068176 70.96008301]
[130.45018005 81.98448181]
[136.89714050 98.64261627]
[151.84960938 99.83573914]
[166.80209351 101.02886200]
[181.75456238 102.22198486]
[196.70703125 103.41510773]
[205.88241577 93.55841827]
[218.86952209 90.82438660]
[230.88255310 95.99160004]
[237.62573242 106.96847534]
[252.55937195 108.37793732]
[267.49301147 109.78739929]
[279.60055542 99.98715973]
[294.72531128 101.62929535]
[303.99371338 113.23239899]
[318.92736816 114.64186859]
[333.86099243 116.05133057]
[348.82916260 117.02786255]
[363.81933594 117.57064056]
[378.80953979 118.11342621]
[392.88064575 110.88056183]
[405.31961060 119.07334137]
[420.30978394 119.61611938]
[435.29995728 120.15890503]
[447.97915649 110.32950592]
[463.53485107 114.25384521]
[470.03399658 128.92150879]
[462.49102783 143.08073425]
[446.69226074 145.86975098]
[434.75717163 135.14907837]
[419.76699829 134.60629272]
[404.77682495 134.06350708]
[391.77789307 141.33520508]
[378.26675415 133.10360718]
[363.27655029 132.56082153]
[348.28637695 132.01803589]
[346.14593506 133.82156372]
[343.16369629 134.88786316]
[339.61618042 134.89263916]
[335.89190674 133.61738586]
[332.45153809 130.98495483]
[317.51788330 129.57550049]
[302.58425903 128.16603088]
[291.30862427 137.83015442]
[276.14370728 136.61349487]
[266.08352661 124.72103119]
[251.14990234 123.31156921]
[236.21626282 121.90210724]
[223.72703552 133.16825867]
[206.61714172 131.88841248]
[195.51391602 118.36758423]
[180.56144714 117.17446136]
[165.60896301 115.98133850]
[150.65649414 114.78821564]
[135.70402527 113.59509277]
[130.49755859 118.99349213]
[141.29418945 129.40658569]
[130.88093567 140.20306396]
[120.08462524 129.79029846]
[114.87815857 135.18869019]
[116.61156464 150.08819580]
[118.34497070 164.98770142]
[120.07837677 179.88720703]
[121.81177521 194.78671265]
[125.91027832 202.94491577]
[123.46081543 209.91426086]
[124.97834015 224.83731079]
[126.49587250 239.76034546]
[141.19755554 243.45306396]
[153.74789429 251.95393372]
[162.63137817 264.23641968]
[166.77526855 278.81738281]
[165.67918396 293.93606567]
[159.47547913 307.76681519]
[148.91326904 318.63949585]
[135.26800537 325.24124146]
[120.18742371 326.77478027]
[105.49256897 323.05496216]
[92.95791626 314.53097534]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 205]
[6 204]
[7 203]
[8 201]
[9 200]
[10 199]
[11 198]
[12 197]
[14 70]
[15 69]
[16 68]
[17 67]
[18 66]
[20 62]
[21 61]
[22 60]
[26 57]
[27 56]
[28 52]
[29 51]
[30 50]
[31 49]
[32 48]
[33 47]
[34 46]
[35 45]
[36 44]
[37 43]
[71 135]
[72 134]
[73 133]
[74 132]
[75 131]
[76 129]
[77 128]
[81 124]
[82 123]
[83 121]
[84 120]
[85 119]
[86 118]
[91 114]
[92 113]
[93 112]
[95 110]
[96 109]
[97 108]
[98 107]
[99 106]
[139 192]
[140 191]
[141 190]
[142 189]
[143 188]
[147 185]
[148 184]
[149 183]
[152 180]
[153 179]
[154 178]
[155 173]
[156 172]
[157 171]
[159 169]
[160 168]
[161 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
