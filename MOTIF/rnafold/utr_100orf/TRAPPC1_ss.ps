%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:56:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCAGUUCCGGUGAGUCCGUGGGUGGGGUCCCCACCUGGUUGGAAGGCUGUGGGUCCGGGAACCCGAGCCCAAGGAGUGGGGGCGGCCCCGGAGCGAGGCUCACACUCCCUGCCCUGCAGAUGACUGUCCACAACCUGUACCUGUUUGACCGGAAUGGAGUGUGUCUGCACUACAGCGAAUGGCACCGCAAGAAGCAAGCAGGGAUUCCCAAGGAGGAGG\
) } def
/len { sequence length } bind def

/coor [
[98.23435211 213.69706726]
[83.26708984 218.22644043]
[68.91049957 212.02787781]
[61.94330978 198.02815247]
[65.65522766 182.83750916]
[78.29358673 173.62849426]
[79.14604950 158.65274048]
[79.99851227 143.67698669]
[80.85097504 128.70123291]
[74.95266724 117.26789093]
[74.31958008 105.87037659]
[59.35025787 104.91149139]
[44.38093948 103.95261383]
[29.41161919 102.99372864]
[14.44229889 102.03484344]
[-0.52702111 101.07596588]
[-15.49634171 100.11708069]
[-30.47209930 99.26461792]
[-45.45353699 98.51862335]
[-60.43497467 97.77262115]
[-69.31049347 107.89788818]
[-82.20819855 111.01940155]
[-94.36942291 106.21588898]
[-101.43902588 95.44833374]
[-116.40834045 94.48945618]
[-131.37767029 93.53057098]
[-146.34698486 92.57169342]
[-161.31629944 91.61280823]
[-176.28562927 90.65392303]
[-191.25494385 89.69504547]
[-205.52149963 96.53433990]
[-217.72813416 87.99926758]
[-232.69744873 87.04038239]
[-241.45414734 89.61342621]
[-247.87226868 85.95998383]
[-262.82644653 84.78841400]
[-277.78060913 83.61684418]
[-292.73480225 82.44527435]
[-307.09713745 89.08107758]
[-319.18121338 80.37335205]
[-334.13537598 79.20177460]
[-342.87872314 91.75173187]
[-356.63903809 98.19771576]
[-371.67831421 96.89927673]
[-383.96621704 88.30487823]
[-390.26000977 74.80474091]
[-405.21420288 73.63317108]
[-420.16836548 72.46160126]
[-435.12255859 71.29002380]
[-443.91494751 73.73833466]
[-450.28045654 69.99403381]
[-465.21649170 68.61000824]
[-480.15249634 67.22598267]
[-495.08850098 65.84195709]
[-510.02453613 64.45793152]
[-522.02166748 74.74600220]
[-537.77307129 73.45422363]
[-547.93371582 61.34899139]
[-546.47546387 45.61212158]
[-534.26348877 35.58002090]
[-518.54290771 37.20455170]
[-508.64050293 49.52191544]
[-493.70449829 50.90594101]
[-478.76846313 52.28996658]
[-463.83245850 53.67399216]
[-448.89645386 55.05801773]
[-433.95098877 56.33584976]
[-418.99679565 57.50741959]
[-404.04263306 58.67899323]
[-389.08843994 59.85056686]
[-380.76901245 47.49528503]
[-367.29263306 40.91937256]
[-352.23461914 41.97887802]
[-339.64602661 50.48914719]
[-332.96380615 64.24760437]
[-318.00964355 65.41917419]
[-304.71691895 58.69956970]
[-291.56323242 67.49109650]
[-276.60903931 68.66266632]
[-261.65487671 69.83423615]
[-246.70069885 71.00580597]
[-231.73857117 72.07106018]
[-216.76924133 73.02994537]
[-203.57339478 66.12207031]
[-190.29606628 74.72572327]
[-175.32673645 75.68460846]
[-160.35742188 76.64348602]
[-145.38810730 77.60237122]
[-130.41877747 78.56124878]
[-115.44946289 79.52013397]
[-100.48014069 80.47901917]
[-88.33450317 68.84141541]
[-71.19259644 69.60752106]
[-59.68897629 82.79118347]
[-44.70753860 83.53718567]
[-29.72610092 84.28318024]
[-22.89429474 81.47848511]
[-14.53745937 85.14775848]
[0.43186080 86.10664368]
[15.40118122 87.06552887]
[30.37050056 88.02440643]
[45.33982086 88.98329163]
[60.30914307 89.94216919]
[75.27846527 90.90105438]
[87.90279388 76.59908295]
[106.87117004 74.56906891]
[122.23615265 85.87559509]
[136.66354370 81.77065277]
[151.09092712 77.66571045]
[165.51831055 73.56076050]
[179.94569397 69.45581818]
[194.37307739 65.35087585]
[208.80046082 61.24592972]
[215.24458313 35.22717667]
[240.57690430 20.62637520]
[271.01040649 29.40684128]
[282.98068237 20.36732101]
[294.95092773 11.32780170]
[306.92117310 2.28828216]
[318.89144897 -6.75123739]
[330.86169434 -15.79075718]
[342.83197021 -24.83027649]
[347.78964233 -32.49329376]
[355.03723145 -33.91177368]
[367.13476562 -42.78022385]
[369.67248535 -58.14895248]
[382.06744385 -66.97048950]
[396.70355225 -64.45645905]
[408.80108643 -73.32490540]
[420.89865112 -82.19335938]
[432.99618530 -91.06180573]
[433.49942017 -104.51701355]
[441.54086304 -115.07302856]
[454.00836182 -119.01397705]
[466.28518677 -115.11541748]
[478.50756836 -123.81101227]
[485.26693726 -138.11560059]
[500.12283325 -139.18913269]
[512.34521484 -147.88471985]
[511.51507568 -163.28973389]
[519.16516113 -176.68673706]
[532.85437012 -183.80079651]
[548.21447754 -182.36183167]
[560.34411621 -172.82902527]
[565.37286377 -158.24426270]
[561.69598389 -143.26147461]
[550.48675537 -132.66162109]
[535.32202148 -129.82707214]
[521.04077148 -135.66233826]
[508.81842041 -126.96674347]
[502.93325806 -113.28411102]
[487.20315552 -111.58862305]
[474.98077393 -102.89303589]
[472.89331055 -86.20194244]
[459.10632324 -75.98667908]
[441.86462402 -78.96426392]
[429.76708984 -70.09580994]
[417.66955566 -61.22735977]
[405.57199097 -52.35890961]
[403.56561279 -37.64463043]
[391.42330933 -28.47842789]
[376.00323486 -30.68268013]
[363.90567017 -21.81422997]
[351.87149048 -12.86001778]
[339.90121460 -3.82049847]
[327.93096924 5.21902084]
[315.96069336 14.25854015]
[303.99044800 23.29805946]
[292.02020264 32.33757782]
[280.04992676 41.37709808]
[280.68884277 48.84983444]
[294.50802612 43.01631165]
[304.32626343 54.35660934]
[296.57485962 67.19854736]
[281.96667480 63.79530716]
[282.60559082 71.26804352]
[295.93664551 78.14431000]
[309.26770020 85.02058411]
[323.06732178 77.92482758]
[338.39706421 80.32872772]
[349.36230469 91.30792999]
[351.74670410 106.64071655]
[344.63339233 120.43131256]
[330.75759888 127.37695312]
[315.45483398 124.80689240]
[304.60934448 113.70938110]
[302.39141846 98.35163116]
[289.06036377 91.47536469]
[275.72930908 84.59909821]
[269.45309448 90.20537567]
[262.33822632 94.33653259]
[254.71473694 96.88765717]
[246.92002869 97.82484436]
[239.28411865 97.18387604]
[232.11576843 95.06581116]
[225.68989563 91.62995148]
[220.23712158 87.08444977]
[215.93559265 81.67518616]
[212.90541077 75.67331696]
[198.47802734 79.77825928]
[184.05064392 83.88320160]
[169.62324524 87.98814392]
[155.19586182 92.09309387]
[140.76847839 96.19803619]
[126.34110260 100.30297852]
[128.21583557 111.37609100]
[125.12768555 123.64413452]
[129.33506775 138.04197693]
[133.54244995 152.43981934]
[143.78883362 165.94715881]
[133.64584351 179.53230286]
[117.78375244 173.54644775]
[119.14460754 156.64720154]
[114.93722534 142.24935913]
[110.72984314 127.85151672]
[95.82672882 129.55368042]
[94.97427368 144.52944946]
[94.12181091 159.50520325]
[93.26934814 174.48095703]
[104.78105164 185.06465149]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 219]
[7 218]
[8 217]
[9 216]
[11 104]
[12 103]
[13 102]
[14 101]
[15 100]
[16 99]
[17 98]
[18 96]
[19 95]
[20 94]
[24 91]
[25 90]
[26 89]
[27 88]
[28 87]
[29 86]
[30 85]
[32 83]
[33 82]
[35 81]
[36 80]
[37 79]
[38 78]
[40 76]
[41 75]
[46 70]
[47 69]
[48 68]
[49 67]
[51 66]
[52 65]
[53 64]
[54 63]
[55 62]
[107 205]
[108 204]
[109 203]
[110 202]
[111 201]
[112 200]
[113 199]
[116 170]
[117 169]
[118 168]
[119 167]
[120 166]
[121 165]
[122 164]
[124 163]
[125 162]
[128 159]
[129 158]
[130 157]
[131 156]
[135 153]
[136 152]
[138 150]
[139 149]
[176 189]
[177 188]
[178 187]
[207 215]
[208 214]
[209 213]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
