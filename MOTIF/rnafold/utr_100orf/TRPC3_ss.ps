%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:05:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAAGACUGCACUGCCGCGAAGGCGGAGGAGGCCGGCAGCCGGCACCCCCACACUCGGACCGCAGCCGGCGCGAUGUCCACCAAGGUCAGGAAGUGCAAAGAACAAGCAAGGGUGACCUUCCCGGCGCCGGAGGAGGAGGAAGACGAGGGCGAGGACGAGGGCGCGGAGCCGC\
) } def
/len { sequence length } bind def

/coor [
[82.46507263 277.68936157]
[90.87743378 263.61230469]
[90.60816956 248.61471558]
[80.84503174 242.63648987]
[75.13435364 232.57617188]
[75.00324249 220.88868713]
[80.60059357 210.49130249]
[90.63095093 204.03543091]
[90.90021515 189.03784180]
[91.16947937 174.04026794]
[91.43874359 159.04267883]
[83.93115997 146.17857361]
[91.91493988 132.51951599]
[92.18420410 117.52192688]
[78.18855286 112.12546539]
[68.31947327 123.42153931]
[58.45039368 134.71760559]
[58.09063721 150.75662231]
[45.23974991 160.36048889]
[29.75583076 156.16194153]
[23.51681900 141.38174438]
[31.30875206 127.35800171]
[47.15432358 124.84852600]
[57.02340317 113.55245972]
[66.89248657 102.25638580]
[59.43138504 89.24362183]
[44.69707489 92.05434418]
[36.82260132 96.75089264]
[29.67318344 94.78077698]
[14.89079380 97.32654572]
[5.76818371 109.95254517]
[-9.25952721 112.32373810]
[-21.24026489 103.54891205]
[-36.02265549 106.09468079]
[-50.80504227 108.64045715]
[-65.58743286 111.18622589]
[-80.36981964 113.73199463]
[-94.95299530 122.37880707]
[-107.29891205 110.75922394]
[-99.55111694 95.67916870]
[-82.91559601 98.94960785]
[-68.13320160 96.40383148]
[-53.35081482 93.85806274]
[-38.56842422 91.31229401]
[-23.78603554 88.76651764]
[-15.43077278 76.48950195]
[-0.47559324 73.69715118]
[12.34502220 82.54415894]
[27.12741280 79.99838257]
[41.88635635 77.32003021]
[56.62066269 74.50931549]
[74.13953400 70.35157776]
[89.08317566 73.81497955]
[98.73573303 82.64886475]
[101.58656311 93.77427673]
[111.65682983 82.65718842]
[121.72709656 71.54009247]
[131.79736328 60.42300415]
[131.94625854 47.50381851]
[140.59069824 38.44881058]
[152.68795776 37.74848938]
[162.95616150 26.81396103]
[160.98710632 13.46939945]
[166.98544312 1.60528898]
[178.55537415 -4.53738213]
[191.35682678 -2.90863085]
[201.81967163 -13.65707397]
[212.28250122 -24.40551758]
[212.24147034 -39.98229599]
[223.00540161 -50.73369980]
[237.85572815 -50.67681885]
[248.31857300 -61.42526245]
[242.61720276 -76.64749146]
[244.11146545 -92.77519989]
[252.45243835 -106.59130096]
[265.93051147 -115.36199951]
[281.82565308 -117.37764740]
[296.95614624 -112.28582764]
[307.22436523 -123.22035980]
[317.49258423 -134.15489197]
[321.29919434 -149.51132202]
[335.65185547 -153.49256897]
[345.92007446 -164.42709351]
[354.95324707 -176.40211487]
[362.64675903 -189.27885437]
[370.34024048 -202.15557861]
[378.03372192 -215.03231812]
[385.72720337 -227.90904236]
[393.42071533 -240.78578186]
[401.11419678 -253.66250610]
[393.67022705 -265.52670288]
[392.07910156 -279.37551880]
[396.59533691 -292.49353027]
[406.28146362 -302.33346558]
[419.20217896 -307.01065063]
[432.81066895 -305.66390991]
[440.73406982 -318.40048218]
[448.65747070 -331.13702393]
[441.95053101 -345.03021240]
[443.84222412 -360.34115601]
[453.72888184 -372.18420410]
[468.45571899 -376.78027344]
[483.32345581 -372.66275024]
[493.58786011 -361.14556885]
[495.97357178 -345.90377808]
[489.71936035 -331.80102539]
[476.82089233 -323.33740234]
[461.39401245 -323.21362305]
[453.47061157 -310.47708130]
[445.54724121 -297.74050903]
[453.50527954 -283.69470215]
[453.30252075 -267.45858765]
[444.89971924 -253.45506287]
[430.50421143 -245.54632568]
[413.99093628 -245.96902466]
[406.29742432 -233.09228516]
[398.60394287 -220.21556091]
[390.91046143 -207.33882141]
[383.21697998 -194.46209717]
[375.52346802 -181.58535767]
[367.82998657 -168.70863342]
[371.96173096 -162.44932556]
[384.35690308 -143.67143250]
[399.22116089 -145.68493652]
[414.08538818 -147.69842529]
[426.72021484 -158.15277100]
[441.99496460 -152.18499756]
[444.19628906 -135.93428040]
[431.05963135 -126.11792755]
[416.09890747 -132.83418274]
[401.23464966 -130.82069397]
[386.37039185 -128.80718994]
[365.68554688 -137.90402222]
[356.85458374 -154.15888977]
[346.58639526 -143.22434998]
[343.51422119 -128.65002441]
[328.42709351 -123.88668060]
[318.15890503 -112.95214844]
[307.89068604 -102.01762390]
[313.51687622 -89.31734467]
[313.87246704 -75.38784027]
[308.87057495 -62.33606339]
[299.23721313 -52.14883804]
[286.40600586 -46.39040756]
[272.30502319 -45.96232224]
[259.06701660 -50.96242142]
[248.60417175 -40.21398163]
[249.06086731 -25.37056351]
[238.60317993 -14.32106686]
[223.03094482 -13.94267941]
[212.56811523 -3.19423604]
[202.10527039 7.55420685]
[203.05914307 24.32983398]
[191.36672974 36.86256027]
[173.89070129 37.08216858]
[163.62249756 48.01669693]
[160.55966187 65.28186798]
[142.91445923 70.49327087]
[132.84419250 81.61035919]
[122.77392578 92.72745514]
[112.70365906 103.84454346]
[107.18178558 117.79119110]
[106.91252136 132.78877258]
[114.40084839 146.72561646]
[106.43632507 159.31195068]
[106.16706085 174.30952454]
[105.89779663 189.30711365]
[105.62853241 204.30468750]
[119.28904724 217.39347839]
[119.08318329 235.99278259]
[105.60575104 248.34544373]
[105.87501526 263.34301758]
[114.78726959 277.10906982]
[107.08175659 291.58514404]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 172]
[3 171]
[8 168]
[9 167]
[10 166]
[11 165]
[13 163]
[14 162]
[15 25]
[16 24]
[17 23]
[26 51]
[27 50]
[29 49]
[30 48]
[33 45]
[34 44]
[35 43]
[36 42]
[37 41]
[55 161]
[56 160]
[57 159]
[58 158]
[61 156]
[62 155]
[66 152]
[67 151]
[68 150]
[71 147]
[72 146]
[78 139]
[79 138]
[80 137]
[82 135]
[83 134]
[84 121]
[85 120]
[86 119]
[87 118]
[88 117]
[89 116]
[90 115]
[96 110]
[97 109]
[98 108]
[123 132]
[124 131]
[125 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
