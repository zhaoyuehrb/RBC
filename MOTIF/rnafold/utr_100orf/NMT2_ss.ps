%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:35:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCAGUACGGCGGGAGGCACUAGAGGGAGCUGCGGCCGCUCCGGCCCGGCCCCGAGCACCGCCUCCCCAGCCAGCGCCGCCGCGAUGGCGGAGGACAGCGAGUCUGCGGCCAGCCAGCAGAGCCUGGAACUGGACGACCAGGACACGUGCGGGAUAGACGGGGACAAUGAGGAGGAGACGGAGC\
) } def
/len { sequence length } bind def

/coor [
[52.66539383 231.85021973]
[48.00841904 217.59144592]
[46.36625290 202.68161011]
[47.80833435 187.75108337]
[52.27368164 173.43115234]
[59.57350540 160.32722473]
[69.39916992 148.99337769]
[81.33525085 139.90876770]
[94.87450409 133.45843506]
[80.15962219 136.36917114]
[65.44474792 139.27990723]
[50.78141785 142.44009399]
[36.17386627 145.84883118]
[21.56631470 149.25755310]
[6.95876360 152.66627502]
[-7.64878845 156.07501221]
[-22.25634003 159.48373413]
[-36.86389160 162.89247131]
[-39.37385941 178.76271057]
[-47.75766754 192.42436218]
[-60.70826721 201.80401611]
[-76.22821045 205.49143982]
[-91.93769073 202.95158386]
[-105.43946838 194.60192871]
[-114.68466187 181.74424744]
[-129.23222351 185.40054321]
[-143.77978516 189.05682373]
[-151.36050415 194.19477844]
[-158.60542297 192.64944458]
[-173.21298218 196.05816650]
[-187.82052612 199.46690369]
[-202.42808533 202.87562561]
[-210.09495544 207.88410950]
[-217.31259155 206.21598816]
[-231.97592163 209.37617493]
[-246.63925171 212.53636169]
[-261.30258179 215.69654846]
[-275.96591187 218.85673523]
[-290.17568970 228.10433960]
[-302.99557495 217.00987244]
[-295.88357544 201.61975098]
[-279.12609863 204.19340515]
[-264.46276855 201.03321838]
[-249.79943848 197.87303162]
[-235.13610840 194.71284485]
[-220.47277832 191.55265808]
[-205.83680725 188.26808167]
[-191.22926331 184.85934448]
[-176.62170410 181.45062256]
[-162.01416016 178.04188538]
[-147.43608093 174.50926208]
[-132.88850403 170.85298157]
[-118.34095001 167.19668579]
[-116.81992340 153.23413086]
[-110.60773468 140.60418701]
[-100.43338776 130.83526611]
[-87.50674438 125.11732483]
[-73.37463379 124.15690613]
[-59.73579407 128.08992004]
[-48.23666000 136.46286011]
[-40.27262115 148.28491211]
[-25.66506767 144.87619019]
[-11.05751610 141.46745300]
[3.55003572 138.05873108]
[18.15758705 134.65000916]
[32.76514053 131.24127197]
[47.37269211 127.83255005]
[50.61989212 124.30213928]
[56.12742996 122.78819275]
[62.53400803 124.56503296]
[77.24888611 121.65429688]
[91.96376038 118.74355316]
[81.49546814 102.39878082]
[89.58467865 86.65913391]
[86.54911041 71.96949768]
[72.47357941 57.55979538]
[79.28655243 39.47779465]
[75.75392151 24.89971161]
[64.98419189 13.30991077]
[69.50647736 -0.88157392]
[65.97383881 -15.45965672]
[62.44120789 -30.03774071]
[58.90857315 -44.61582184]
[47.20938492 -56.10760117]
[51.57337570 -71.91543579]
[67.51125336 -75.77758026]
[78.62748718 -63.72099304]
[73.48665619 -48.14845657]
[77.01928711 -33.57037354]
[80.55192566 -18.99229050]
[84.08455658 -4.41420698]
[94.60160828 6.13287163]
[90.33200836 21.36707878]
[93.86463928 35.94515991]
[103.05500031 40.47523880]
[108.33490753 49.51186371]
[107.74490356 60.18146515]
[101.23873901 68.93392181]
[104.27431488 83.62355804]
[114.78977203 89.59832764]
[119.16027832 101.72159576]
[114.32263947 114.51770782]
[129.08482361 111.85726166]
[143.84700012 109.19680786]
[158.60919189 106.53636169]
[170.81825256 96.47409058]
[184.71604919 101.83136749]
[199.47824097 99.17091370]
[203.62464905 84.52275848]
[213.67883301 73.17372894]
[227.60650635 67.33933258]
[242.62449646 68.12737274]
[255.75686646 75.32807159]
[264.42465210 87.46623230]
[279.18682861 84.80578613]
[291.39590454 74.74350739]
[305.29370117 80.10079193]
[320.05587769 77.44033813]
[334.81805420 74.77989197]
[342.19699097 58.23831177]
[357.88223267 49.49848938]
[375.52032471 51.88516235]
[388.09500122 64.25905609]
[402.75833130 61.09886932]
[417.42166138 57.93868256]
[432.08499146 54.77849197]
[446.74832153 51.61830521]
[451.37667847 36.97337341]
[462.71823120 26.61651611]
[477.72219849 23.33366966]
[492.35253906 28.00790596]
[502.67379761 39.38187790]
[505.90960693 54.39604187]
[501.18954468 69.01166534]
[489.78326416 79.29721832]
[474.75903320 82.48594666]
[460.15826416 77.72008514]
[449.90850830 66.28163147]
[435.24517822 69.44181824]
[420.58184814 72.60201263]
[405.91851807 75.76219940]
[391.25521851 78.92238617]
[388.03936768 90.65514374]
[380.08645630 99.95642090]
[368.86395264 105.01525116]
[356.48333740 104.81230927]
[345.30288696 99.32472229]
[337.47851562 89.54206848]
[322.71633911 92.20252228]
[307.95416260 94.86296844]
[296.80096436 104.73494720]
[281.84729004 99.56796265]
[267.08511353 102.22841644]
[263.20013428 116.62884521]
[253.40774536 127.96105194]
[239.60974121 133.94233704]
[224.52153015 133.33718872]
[211.13793945 126.21213531]
[202.13868713 113.93309784]
[187.37649536 116.59354401]
[176.22332764 126.46553040]
[161.26963806 121.29854584]
[146.50746155 123.95899200]
[131.74526978 126.61943817]
[116.98309326 129.27989197]
[131.94526672 130.34442139]
[146.37341309 134.44667053]
[159.65751648 141.41322327]
[171.23591614 150.94949341]
[180.61907959 162.65232849]
[187.41029358 176.02690125]
[191.32243347 190.50776672]
[192.19007874 205.48265076]
[189.97654724 220.31843567]
[184.77542114 234.38784790]
[176.80662537 247.09603882]
[166.40707397 257.90573120]
[154.01644897 266.35986328]
[140.15861511 272.10098267]
[125.41950989 274.88641357]
[110.42227173 274.59832764]
[95.80100250 271.24896240]
[82.17387390 264.97985840]
[70.11705017 256.05615234]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 72]
[10 71]
[11 70]
[12 67]
[13 66]
[14 65]
[15 64]
[16 63]
[17 62]
[18 61]
[25 53]
[26 52]
[27 51]
[29 50]
[30 49]
[31 48]
[32 47]
[34 46]
[35 45]
[36 44]
[37 43]
[38 42]
[74 99]
[75 98]
[77 94]
[78 93]
[80 91]
[81 90]
[82 89]
[83 88]
[102 165]
[103 164]
[104 163]
[105 162]
[107 160]
[108 159]
[114 153]
[115 152]
[117 150]
[118 149]
[119 148]
[123 142]
[124 141]
[125 140]
[126 139]
[127 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
