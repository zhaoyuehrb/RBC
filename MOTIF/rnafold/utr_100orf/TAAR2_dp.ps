%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:16:32 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TAAR2)
} def

/sequence { (\
AUGGCUGUCUCAUCAGAGCAACAUGAACUUUCACAUUUCAAAAGAACACAGACAAAAAAGGAAAAAUUCAAUUGCUCUGAAUAUGGAAAUAGAUCUUGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.003288043 ubox
1 13 0.012874287 ubox
1 90 0.056199336 ubox
1 94 0.024408837 ubox
2 7 0.003674932 ubox
2 12 0.025727827 ubox
2 89 0.059931860 ubox
2 91 0.021652995 ubox
2 93 0.027432362 ubox
2 98 0.013254458 ubox
3 9 0.011113423 ubox
3 10 0.007650104 ubox
3 11 0.028693809 ubox
3 90 0.023365409 ubox
3 95 0.311408126 ubox
3 96 0.060181753 ubox
3 97 0.013998643 ubox
3 100 0.877762962 ubox
4 8 0.007277249 ubox
4 9 0.010414143 ubox
4 10 0.023310528 ubox
4 94 0.311327738 ubox
4 95 0.064402936 ubox
4 96 0.013838535 ubox
4 99 0.887922034 ubox
5 86 0.074571043 ubox
5 92 0.430120839 ubox
5 98 0.886501470 ubox
6 12 0.030607411 ubox
6 83 0.027651335 ubox
6 85 0.074567321 ubox
6 91 0.437629017 ubox
6 98 0.007937422 ubox
7 11 0.033494166 ubox
7 13 0.003433384 ubox
7 82 0.029978018 ubox
7 84 0.072943788 ubox
7 90 0.430729764 ubox
7 94 0.796435590 ubox
7 97 0.026781209 ubox
7 99 0.004769373 ubox
8 12 0.004453427 ubox
8 81 0.030011752 ubox
8 83 0.071137466 ubox
8 86 0.077184973 ubox
8 87 0.310288148 ubox
8 89 0.392137403 ubox
8 93 0.821177943 ubox
8 98 0.004368173 ubox
9 85 0.093757440 ubox
9 86 0.330759451 ubox
9 92 0.822015575 ubox
10 80 0.005493374 ubox
10 85 0.233617975 ubox
10 86 0.451398652 ubox
10 87 0.279328351 ubox
10 91 0.712627415 ubox
10 93 0.103191958 ubox
11 79 0.005466928 ubox
11 85 0.793390209 ubox
11 86 0.271882732 ubox
11 92 0.105291766 ubox
11 98 0.003411280 ubox
12 78 0.003842334 ubox
12 82 0.162160595 ubox
12 84 0.796182331 ubox
12 90 0.149291262 ubox
12 97 0.003604857 ubox
13 80 0.902512506 ubox
13 81 0.127608792 ubox
13 83 0.367503456 ubox
13 86 0.009692241 ubox
13 87 0.016586959 ubox
13 89 0.069717095 ubox
14 79 0.999501014 ubox
14 85 0.007122333 ubox
14 86 0.013466206 ubox
15 78 0.999700084 ubox
15 84 0.005072019 ubox
16 77 0.999978632 ubox
17 76 0.999844688 ubox
18 75 0.999985516 ubox
19 74 0.999967813 ubox
20 37 0.003656218 ubox
20 73 0.993546734 ubox
21 36 0.007574179 ubox
21 72 0.925180071 ubox
23 36 0.038451243 ubox
23 67 0.011624507 ubox
23 72 0.066889822 ubox
23 73 0.004306781 ubox
24 33 0.070108070 ubox
24 35 0.041681025 ubox
24 40 0.033955078 ubox
24 48 0.014433257 ubox
24 50 0.007047087 ubox
24 54 0.005366724 ubox
24 66 0.012213163 ubox
24 70 0.949247948 ubox
24 71 0.064360845 ubox
25 32 0.080588378 ubox
25 34 0.042637182 ubox
25 38 0.003706491 ubox
25 39 0.037727676 ubox
25 47 0.016408210 ubox
25 49 0.007551119 ubox
25 53 0.005900188 ubox
25 68 0.078994988 ubox
25 69 0.982146480 ubox
26 30 0.003311895 ubox
26 31 0.075417383 ubox
26 37 0.005232874 ubox
26 38 0.037310757 ubox
26 67 0.089113152 ubox
26 68 0.978706874 ubox
27 36 0.006215288 ubox
27 37 0.032989756 ubox
27 67 0.924959293 ubox
28 44 0.049948918 ubox
28 51 0.020311380 ubox
28 60 0.108194120 ubox
28 61 0.110969212 ubox
29 42 0.007056438 ubox
29 43 0.049792171 ubox
29 45 0.003530138 ubox
29 46 0.003905141 ubox
29 50 0.019879231 ubox
29 52 0.008811386 ubox
29 55 0.012653891 ubox
29 56 0.010202530 ubox
29 57 0.007441874 ubox
29 58 0.008364072 ubox
29 59 0.108066859 ubox
29 60 0.110388437 ubox
29 61 0.006751185 ubox
29 62 0.016409333 ubox
29 63 0.405277739 ubox
29 64 0.734539419 ubox
29 65 0.314783598 ubox
29 66 0.155515003 ubox
30 41 0.008701487 ubox
30 42 0.049028785 ubox
30 44 0.003728366 ubox
30 45 0.004312439 ubox
30 46 0.033096780 ubox
30 51 0.009418418 ubox
30 52 0.009023424 ubox
30 54 0.014632763 ubox
30 55 0.011978021 ubox
30 56 0.009622627 ubox
30 57 0.011166858 ubox
30 58 0.106161417 ubox
30 59 0.107117986 ubox
30 60 0.008377150 ubox
30 61 0.017024934 ubox
30 62 0.419030437 ubox
30 63 0.798935302 ubox
30 64 0.287053473 ubox
30 65 0.152178650 ubox
30 66 0.036283942 ubox
31 40 0.009607672 ubox
31 41 0.045289312 ubox
31 42 0.003191634 ubox
31 43 0.003435328 ubox
31 44 0.004024712 ubox
31 45 0.039229267 ubox
31 50 0.008822217 ubox
31 51 0.009364851 ubox
31 52 0.108076727 ubox
31 54 0.009516990 ubox
31 55 0.007732948 ubox
31 56 0.009548683 ubox
31 57 0.082223126 ubox
31 58 0.090178695 ubox
31 59 0.008143563 ubox
31 60 0.013698817 ubox
31 61 0.421024029 ubox
31 62 0.823017999 ubox
31 63 0.218637778 ubox
31 64 0.133881280 ubox
31 65 0.037700812 ubox
32 44 0.040143850 ubox
32 51 0.117370800 ubox
32 60 0.421495850 ubox
32 61 0.835573705 ubox
35 67 0.008927864 ubox
36 42 0.012324223 ubox
36 43 0.036926035 ubox
36 44 0.020871120 ubox
36 45 0.047636747 ubox
36 46 0.052520965 ubox
36 51 0.020536377 ubox
36 52 0.051045327 ubox
36 55 0.144892171 ubox
36 56 0.258155104 ubox
36 57 0.369154834 ubox
36 58 0.181565628 ubox
36 59 0.163707428 ubox
36 60 0.070453849 ubox
36 61 0.010875832 ubox
36 62 0.020249130 ubox
36 63 0.127035246 ubox
36 64 0.075259079 ubox
36 65 0.005257565 ubox
36 66 0.010897805 ubox
37 41 0.011286521 ubox
37 42 0.032847716 ubox
37 43 0.023625577 ubox
37 44 0.049101572 ubox
37 45 0.055003008 ubox
37 46 0.368573212 ubox
37 50 0.016065906 ubox
37 51 0.050692207 ubox
37 52 0.032790697 ubox
37 54 0.147864012 ubox
37 55 0.260252489 ubox
37 56 0.379956040 ubox
37 57 0.196021396 ubox
37 58 0.168009803 ubox
37 59 0.070128365 ubox
37 60 0.021679997 ubox
37 61 0.019419992 ubox
37 62 0.146801478 ubox
37 63 0.094728966 ubox
37 64 0.005271029 ubox
37 65 0.009714524 ubox
38 42 0.020468066 ubox
38 43 0.040720648 ubox
38 44 0.050979000 ubox
38 45 0.414669492 ubox
38 50 0.041225082 ubox
38 51 0.031357576 ubox
38 52 0.361857115 ubox
38 54 0.207154085 ubox
38 55 0.320237639 ubox
38 56 0.170101115 ubox
38 57 0.148183379 ubox
38 58 0.063229623 ubox
38 59 0.019181985 ubox
38 60 0.016596042 ubox
38 61 0.147201936 ubox
38 62 0.100393894 ubox
38 63 0.004424949 ubox
38 64 0.007846966 ubox
39 44 0.419125374 ubox
39 51 0.379369629 ubox
39 60 0.148456114 ubox
39 61 0.100395819 ubox
44 69 0.013864565 ubox
45 68 0.013714997 ubox
46 67 0.011694591 ubox
51 69 0.014064863 ubox
52 68 0.013276259 ubox
56 73 0.003766043 ubox
57 68 0.005267237 ubox
57 72 0.004747624 ubox
57 73 0.007579680 ubox
58 67 0.006274426 ubox
58 68 0.007187970 ubox
58 72 0.009957709 ubox
58 73 0.003972204 ubox
59 67 0.008649699 ubox
59 68 0.008195753 ubox
59 72 0.005173194 ubox
60 67 0.010333160 ubox
60 69 0.068078120 ubox
61 68 0.066084253 ubox
61 69 0.069320724 ubox
62 67 0.059699009 ubox
62 68 0.068572125 ubox
63 67 0.052336450 ubox
66 72 0.003610587 ubox
67 71 0.003492952 ubox
80 94 0.003937280 ubox
80 97 0.006219672 ubox
81 90 0.057480383 ubox
81 94 0.009921031 ubox
81 96 0.007570693 ubox
82 89 0.057837320 ubox
82 91 0.132525738 ubox
82 93 0.009052007 ubox
82 98 0.009488899 ubox
83 90 0.161293608 ubox
83 94 0.019107189 ubox
83 97 0.015807380 ubox
84 89 0.162650612 ubox
84 91 0.030667611 ubox
84 93 0.020780051 ubox
85 90 0.038700240 ubox
85 95 0.015444277 ubox
85 96 0.124363617 ubox
85 97 0.008268444 ubox
85 100 0.022893328 ubox
86 94 0.011717698 ubox
86 95 0.137648216 ubox
86 96 0.003892062 ubox
86 97 0.014007144 ubox
86 99 0.023178987 ubox
87 94 0.130134439 ubox
87 96 0.015067950 ubox
87 97 0.015015799 ubox
88 96 0.015077209 ubox
88 97 0.026477099 ubox
89 96 0.027278913 ubox
90 98 0.006976248 ubox
91 97 0.011948190 ubox
92 96 0.009069370 ubox
3 100 0.9500000 lbox
4 99 0.9500000 lbox
5 98 0.9500000 lbox
7 94 0.9500000 lbox
8 93 0.9500000 lbox
9 92 0.9500000 lbox
10 91 0.9500000 lbox
11 85 0.9500000 lbox
12 84 0.9500000 lbox
13 80 0.9500000 lbox
14 79 0.9500000 lbox
15 78 0.9500000 lbox
16 77 0.9500000 lbox
17 76 0.9500000 lbox
18 75 0.9500000 lbox
19 74 0.9500000 lbox
20 73 0.9500000 lbox
21 72 0.9500000 lbox
24 70 0.9500000 lbox
25 69 0.9500000 lbox
26 68 0.9500000 lbox
27 67 0.9500000 lbox
29 64 0.9500000 lbox
30 63 0.9500000 lbox
31 62 0.9500000 lbox
32 61 0.9500000 lbox
showpage
end
%%EOF
