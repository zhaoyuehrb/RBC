%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:52:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAGGCGGGAGGAGAGGGGGCUGCCAGGGGCGUCCGGUUACAUCCCCGCCUUCCUCUGUCCUGGCCGCGGGACCGGGUUUGCGGGACCGCAGUUCGGGAACAUGUUGGCCUCGAGCAGCCGGAUCCGGGCUGCGUGGACGCGGGCGCUGCUGCUGCCGCUGCUGCUGGCGGGGCCUGUGGGCUGCCUGAGCCGCCAGGAGC\
) } def
/len { sequence length } bind def

/coor [
[-14.10415077 231.06752014]
[-25.53658104 240.77832031]
[-36.96901321 250.48912048]
[-48.40144348 260.19992065]
[-59.83387375 269.91070557]
[-71.26630402 279.62149048]
[-82.69873810 289.33230591]
[-94.13116455 299.04309082]
[-105.56359863 308.75387573]
[-116.99602509 318.46466064]
[-121.51452637 326.41079712]
[-128.68133545 328.23562622]
[-140.26268005 337.76834106]
[-135.87016296 354.36367798]
[-139.15974426 371.15600586]
[-149.42268372 384.77896118]
[-164.55729675 392.52310181]
[-181.49916077 392.87472534]
[-196.84153748 385.81152344]
[-208.12232971 395.69805908]
[-219.40310669 405.58462524]
[-230.68389893 415.47116089]
[-235.07888794 423.48626709]
[-242.21659851 425.42178345]
[-253.64903259 435.13256836]
[-265.08145142 444.84338379]
[-273.23913574 459.70568848]
[-289.77890015 455.98114014]
[-290.77856445 439.05670166]
[-274.79226685 433.41094971]
[-263.35983276 423.70013428]
[-251.92739868 413.98934937]
[-240.57044983 404.19039917]
[-229.28965759 394.30383301]
[-218.00888062 384.41729736]
[-206.72808838 374.53073120]
[-211.21459961 362.33270264]
[-211.28706360 349.30398560]
[-206.91513062 336.99658203]
[-198.59915161 326.88394165]
[-187.31301880 320.18453979]
[-174.39015198 317.71511841]
[-161.36595154 319.79122925]
[-149.79539490 326.18701172]
[-138.21405029 316.65429688]
[-126.70682526 307.03225708]
[-115.27439117 297.32144165]
[-103.84195709 287.61065674]
[-92.40953064 277.89987183]
[-80.97709656 268.18905640]
[-69.54467010 258.47827148]
[-58.11223602 248.76748657]
[-46.67980576 239.05668640]
[-35.24737549 229.34588623]
[-23.81494522 219.63510132]
[-26.05715370 206.47039795]
[-21.46321487 193.81591797]
[-11.13306236 185.01507568]
[2.30320168 182.44915771]
[15.35449028 186.89378357]
[26.93582916 177.36106873]
[38.51716614 167.82836914]
[50.09850693 158.29565430]
[61.67984390 148.76293945]
[73.26118469 139.23022461]
[84.84252167 129.69750977]
[58.22670364 117.19451904]
[45.85118103 82.18124390]
[36.40836716 70.52649689]
[26.96555519 58.87173843]
[17.52274323 47.21698380]
[2.04931974 45.42507553]
[-7.36100817 33.47098160]
[-5.55734062 18.73048210]
[-15.00015354 7.07572746]
[-24.44296455 -4.57902670]
[-40.18526077 -5.97749662]
[-50.26366043 -18.15129662]
[-48.69883347 -33.87792587]
[-36.41915894 -43.82705307]
[-20.70995331 -42.09604263]
[-10.89120770 -29.71186638]
[-12.78821087 -14.02183914]
[-3.34539890 -2.36708498]
[6.09741354 9.28766918]
[20.89147186 10.58050728]
[30.63385201 22.26556969]
[29.17749786 37.77417374]
[38.62030792 49.42892838]
[48.06312180 61.08367920]
[57.50593567 72.73843384]
[64.70064545 70.62037659]
[68.22647095 56.04064941]
[79.09006500 66.38426971]
[86.28476715 64.26621246]
[87.90655518 49.35414124]
[89.52834320 34.44207382]
[91.15012360 19.53000450]
[92.77191162 4.61793470]
[83.14492798 -7.62783575]
[85.00207520 -22.72769165]
[96.73587036 -31.83008575]
[98.35765839 -46.74215317]
[94.05927277 -63.14216232]
[108.62844849 -71.81253815]
[120.99313354 -60.21292877]
[113.26972961 -45.12036896]
[111.64794159 -30.20829964]
[121.15066528 -18.79629517]
[119.71836853 -3.65023375]
[107.68398285 6.23971987]
[106.06219482 21.15178871]
[104.44040680 36.06385803]
[102.81862640 50.97592926]
[101.19683838 65.88800049]
[114.90631104 71.97490692]
[124.87985229 60.77095795]
[134.85339355 49.56701279]
[144.82693481 38.36306381]
[154.80047607 27.15911865]
[164.77403259 15.95517063]
[162.33099365 0.50960273]
[170.43199158 -12.86603737]
[185.25199890 -17.85618019]
[199.79344177 -12.10463428]
[207.19030762 1.67289722]
[203.95002747 16.97108459]
[191.60253906 26.56659126]
[175.97796631 25.92871475]
[166.00442505 37.13265991]
[156.03088379 48.33660889]
[146.05734253 59.54055405]
[136.08380127 70.74449921]
[126.11025238 81.94844818]
[128.33940125 89.10951996]
[140.58299255 80.44380951]
[152.60792542 89.41044617]
[147.79588318 103.61763763]
[132.79768372 103.43166351]
[135.02682495 110.59272766]
[149.59733582 114.15645599]
[164.16784668 117.72017670]
[178.73837280 121.28389740]
[193.30888367 124.84761810]
[207.87939453 128.41134644]
[222.44990540 131.97506714]
[237.69319153 127.73796844]
[248.21780396 138.27749634]
[262.78833008 141.84121704]
[277.35882568 145.40493774]
[291.92935181 148.96865845]
[306.49987793 152.53237915]
[321.09750366 155.98326111]
[335.72143555 159.32107544]
[350.89730835 154.84858704]
[361.58377075 165.22398376]
[376.20770264 168.56179810]
[391.71026611 163.21365356]
[403.91409302 174.16802979]
[400.26492310 190.15602112]
[384.51672363 194.73054504]
[372.86987305 183.18571472]
[358.24597168 179.84790039]
[344.11608887 184.55912781]
[332.38363647 173.94499207]
[317.75970459 170.60717773]
[310.53442383 172.18463135]
[302.93615723 167.10290527]
[288.36563110 163.53916931]
[273.79510498 159.97544861]
[259.22460938 156.41172791]
[244.65408325 152.84800720]
[230.45298767 157.34001160]
[218.88618469 146.54557800]
[204.31567383 142.98185730]
[189.74516296 139.41813660]
[175.17463684 135.85441589]
[160.60412598 132.29069519]
[146.03361511 128.72697449]
[131.46310425 125.16324615]
[122.29335785 137.03404236]
[129.42182922 150.23196411]
[136.55029297 163.42987061]
[143.67874146 176.62779236]
[158.57785034 182.57727051]
[163.07768250 197.97633362]
[153.72636414 211.01213074]
[137.69740295 211.68472290]
[127.28688049 199.47816467]
[130.48083496 183.75625610]
[123.35237122 170.55833435]
[116.22390747 157.36042786]
[109.09544373 144.16250610]
[94.37523651 141.27885437]
[82.79389191 150.81156921]
[71.21255493 160.34426880]
[59.63121796 169.87698364]
[48.04988098 179.40969849]
[36.46854019 188.94241333]
[24.88720322 198.47512817]
[26.13815117 215.34011841]
[17.18121719 229.48838806]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 55]
[2 54]
[3 53]
[4 52]
[5 51]
[6 50]
[7 49]
[8 48]
[9 47]
[10 46]
[12 45]
[13 44]
[19 36]
[20 35]
[21 34]
[22 33]
[24 32]
[25 31]
[26 30]
[60 200]
[61 199]
[62 198]
[63 197]
[64 196]
[65 195]
[66 194]
[68 91]
[69 90]
[70 89]
[71 88]
[74 85]
[75 84]
[76 83]
[95 115]
[96 114]
[97 113]
[98 112]
[99 111]
[102 108]
[103 107]
[116 134]
[117 133]
[118 132]
[119 131]
[120 130]
[121 129]
[140 180]
[141 179]
[142 178]
[143 177]
[144 176]
[145 175]
[146 174]
[148 172]
[149 171]
[150 170]
[151 169]
[152 168]
[153 166]
[154 165]
[156 163]
[157 162]
[181 193]
[182 192]
[183 191]
[184 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
