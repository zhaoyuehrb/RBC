%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:09:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGUGCCGUCCGGGUCGCCUAGGCCUGGGGUCGGGAGCGCGCACGCUGUGCGCCCUGGGCGCGCUCGGGAUUCUCGCCUGGCGCGGCUGGGGAAGGUGAACAGUGUGGCCCGCCAUGUUCUUCUCCGCGGCGCUCCGGGCCCGGGCGGCUGGCCUCACCGCCCACUGGGGAAGACAUGUAAGGAAUUUGCAUAAGACAGUUAUGCAAAAUGGAG\
) } def
/len { sequence length } bind def

/coor [
[83.53244019 139.88209534]
[75.07402039 152.26979065]
[66.61559296 164.65748596]
[58.15717316 177.04518127]
[57.19342422 195.43551636]
[41.08991241 202.41325378]
[32.81339645 214.92323303]
[24.53688049 227.43319702]
[16.44403839 240.06275940]
[8.53659725 252.80921936]
[0.62915558 265.55569458]
[-7.27828598 278.30215454]
[-15.18572712 291.04861450]
[-23.09316826 303.79507446]
[-31.00061035 316.54153442]
[-38.90805054 329.28802490]
[-36.66309738 345.17321777]
[-47.78722000 356.73321533]
[-63.74694061 355.10015869]
[-72.29933167 341.52679443]
[-66.88372803 326.42544556]
[-51.65451813 321.38058472]
[-43.74707413 308.63409424]
[-35.83963394 295.88763428]
[-27.93219185 283.14117432]
[-20.02475166 270.39471436]
[-12.11730957 257.64825439]
[-4.20986795 244.90177917]
[3.69757318 232.15531921]
[3.50052905 227.38624573]
[6.29522848 222.44221497]
[12.02691364 219.15667725]
[20.30343056 206.64671326]
[28.57994652 194.13674927]
[26.47374916 182.22689819]
[33.26409912 171.73753357]
[45.76947403 168.58676147]
[54.22789383 156.19906616]
[62.68631744 143.81137085]
[71.14473724 131.42366028]
[63.40736008 108.46697998]
[69.77775574 88.16599274]
[57.45218277 79.61728668]
[45.12660980 71.06858826]
[32.80103683 62.51988602]
[20.47546577 53.97118759]
[8.14989471 45.42248535]
[-4.17567682 36.87378311]
[-16.50124741 28.32508469]
[-28.95041275 19.95739174]
[-41.52051544 11.77249336]
[-61.68017960 11.59953308]
[-69.67469788 -6.00847864]
[-82.47859192 -13.82258415]
[-95.28249359 -21.63668823]
[-108.08638763 -29.45079422]
[-120.89028168 -37.26490021]
[-133.69418335 -45.07900238]
[-149.50457764 -45.66356277]
[-156.33782959 -58.89822006]
[-169.14172363 -66.71232605]
[-181.94561768 -74.52642822]
[-194.74951172 -82.34053802]
[-207.55340576 -90.15464020]
[-216.50590515 -91.95300293]
[-220.48612976 -98.17762756]
[-233.17448425 -106.17797852]
[-245.86282349 -114.17833710]
[-258.55117798 -122.17868805]
[-273.38668823 -117.23483276]
[-287.91012573 -123.03174591]
[-295.26394653 -136.83230591]
[-291.97592163 -152.12030029]
[-279.59854126 -161.67721558]
[-263.97604370 -160.99057007]
[-252.48487854 -150.38456726]
[-250.55082703 -134.86705017]
[-237.86247253 -126.86669159]
[-225.17411804 -118.86633301]
[-212.48576355 -110.86597443]
[-199.73930359 -102.95853424]
[-186.93540955 -95.14443207]
[-174.13151550 -87.33032990]
[-161.32762146 -79.51622009]
[-148.52371216 -71.70211792]
[-133.62913513 -71.67647552]
[-125.88007355 -57.88290024]
[-113.07617950 -50.06879425]
[-100.27228546 -42.25469208]
[-87.46838379 -34.44058609]
[-74.66448975 -26.62648010]
[-61.86059189 -18.81237411]
[-52.18914795 -22.09880257]
[-42.09279633 -19.46553612]
[-34.96442032 -11.54808521]
[-33.33561707 -0.79760796]
[-20.76551628 7.38729000]
[-15.99327755 7.29481316]
[-11.11168194 10.19719696]
[-7.95254755 15.99951267]
[4.37302399 24.54821396]
[16.69859505 33.09691238]
[29.02416801 41.64561462]
[41.34973907 50.19431686]
[53.67531204 58.74301529]
[66.00088501 67.29171753]
[78.32645416 75.84041595]
[94.02052307 68.09899902]
[111.45284271 69.63125610]
[125.55579376 79.99176788]
[139.18367004 73.72431183]
[144.95324707 57.20820618]
[160.57574463 50.11590576]
[176.17997742 56.39223480]
[189.71482849 49.92632675]
[203.24966431 43.46041870]
[216.78451538 36.99451065]
[230.31936646 30.52860260]
[236.71141052 24.00764656]
[244.09954834 24.06871986]
[257.72741699 17.80126762]
[271.35528564 11.53381443]
[284.98318481 5.26636171]
[298.61105347 -1.00109136]
[312.23892212 -7.26854420]
[325.86679077 -13.53599739]
[339.49468994 -19.80344963]
[340.48883057 -40.88370132]
[362.64630127 -56.10474014]
[373.44485474 -66.51585388]
[384.24340820 -76.92696381]
[382.98480225 -92.51381683]
[392.08181763 -105.23303986]
[407.23907471 -109.07900238]
[421.29980469 -102.23576355]
[427.62493896 -87.93448639]
[423.22796631 -72.92780304]
[410.18499756 -64.30139923]
[394.65451050 -66.12841034]
[383.85595703 -55.71730042]
[373.05740356 -45.30618668]
[380.30325317 -32.17158127]
[387.54843140 -19.03813171]
[402.11456299 -22.61968231]
[416.68069458 -26.20123100]
[431.24685669 -29.78277969]
[445.81298828 -33.36433029]
[460.37911987 -36.94588089]
[467.96261597 -42.03235245]
[475.18426514 -40.47169113]
[489.80117798 -43.84002304]
[501.42391968 -55.40913391]
[517.18164062 -50.86750031]
[520.86413574 -34.88716507]
[508.68319702 -23.90732765]
[493.16952515 -29.22310448]
[478.55261230 -25.85477066]
[463.96069336 -22.37973595]
[449.39453125 -18.79818726]
[434.82839966 -15.21663857]
[420.26226807 -11.63508892]
[405.69610596 -8.05353928]
[391.12997437 -4.47199011]
[373.67822266 6.09404135]
[356.23950195 4.16888952]
[345.76214600 -6.17557335]
[332.13424683 0.09187979]
[318.50637817 6.35933256]
[304.87850952 12.62678528]
[291.25061035 18.89423943]
[277.62274170 25.16169167]
[263.99487305 31.42914391]
[250.36698914 37.69659805]
[236.78526306 44.06344986]
[223.25042725 50.52935791]
[209.71557617 56.99526596]
[196.18074036 63.46117401]
[182.64588928 69.92707825]
[180.09486389 82.55548096]
[170.59494019 91.54364777]
[157.45965576 93.44815826]
[145.45112610 87.35218811]
[131.82324219 93.61964417]
[135.35102844 106.01126099]
[133.77973938 120.00769806]
[126.48450470 133.44613647]
[134.01611328 146.41821289]
[141.54772949 159.39028931]
[149.07934570 172.36236572]
[156.61096191 185.33444214]
[164.14257812 198.30651855]
[171.67417908 211.27859497]
[179.20579529 224.25068665]
[186.73741150 237.22276306]
[201.81271362 242.71047974]
[206.78474426 257.96362305]
[197.83938599 271.28128052]
[181.83876038 272.44729614]
[171.05717468 260.56719971]
[173.76533508 244.75436401]
[166.23371887 231.78228760]
[158.70210266 218.81021118]
[151.17048645 205.83813477]
[143.63888550 192.86605835]
[136.10726929 179.89398193]
[128.57565308 166.92190552]
[121.04403687 153.94982910]
[113.51242828 140.97775269]
[106.01742554 140.70384216]
[106.40789795 155.69874573]
[109.73046875 170.32614136]
[97.13172150 178.46688843]
[85.16164398 169.42712402]
[89.54344940 155.08241272]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 40]
[2 39]
[3 38]
[4 37]
[6 34]
[7 33]
[8 32]
[9 29]
[10 28]
[11 27]
[12 26]
[13 25]
[14 24]
[15 23]
[16 22]
[42 107]
[43 106]
[44 105]
[45 104]
[46 103]
[47 102]
[48 101]
[49 100]
[50 97]
[51 96]
[53 92]
[54 91]
[55 90]
[56 89]
[57 88]
[58 87]
[60 85]
[61 84]
[62 83]
[63 82]
[64 81]
[66 80]
[67 79]
[68 78]
[69 77]
[110 183]
[111 182]
[114 178]
[115 177]
[116 176]
[117 175]
[118 174]
[120 173]
[121 172]
[122 171]
[123 170]
[124 169]
[125 168]
[126 167]
[127 166]
[129 141]
[130 140]
[131 139]
[143 163]
[144 162]
[145 161]
[146 160]
[147 159]
[148 158]
[150 157]
[151 156]
[186 208]
[187 207]
[188 206]
[189 205]
[190 204]
[191 203]
[192 202]
[193 201]
[194 200]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
