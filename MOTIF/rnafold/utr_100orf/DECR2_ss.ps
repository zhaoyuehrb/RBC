%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:42:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGGGGCGGGGCUCCCGGUUCCAGGCGAGUUCGCAGCUGCGCGCCGGGUCCUGGAGGCCGAGGCCGCUCCCGCCCGUUGUCCCCGCAGUCCCCGACGGGAGCGCCAUGGCCCAGCCGCCGCCCGACGUGGAGGGGGACGACUGUCUCCCCGCGUACCGCCACCUCUUCUGCCCGGACCUGCUGCGGGACAAAGUGGCCUUCAUCA\
) } def
/len { sequence length } bind def

/coor [
[194.96147156 193.31895447]
[200.70700073 179.46295166]
[211.44740295 168.99186707]
[225.44482422 163.59996033]
[240.43688965 164.16032410]
[226.54624939 158.49903870]
[212.65560913 152.83775330]
[198.76498413 147.17645264]
[184.87434387 141.51516724]
[170.98370361 135.85388184]
[157.05050659 130.29817200]
[143.07554626 124.84833527]
[129.10060120 119.39850616]
[115.12564087 113.94867706]
[101.24831390 120.53758240]
[86.67511749 115.67794800]
[73.46310425 122.78025055]
[60.25109100 129.88255310]
[47.03907776 136.98486328]
[42.39143753 151.85217285]
[28.89140320 158.86671448]
[14.74632740 154.34426880]
[1.53431356 161.44657898]
[-6.95738173 174.79579163]
[-21.83108330 174.00697327]
[-35.04309845 181.10926819]
[-48.25511169 188.21157837]
[-61.46712494 195.31387329]
[-63.62140656 199.09208679]
[-66.57026672 201.72198486]
[-69.85451508 203.09477234]
[-73.02685547 203.26214600]
[-75.70325470 202.41848755]
[-89.32182312 208.70614624]
[-102.94039917 214.99378967]
[-111.95026398 228.69613647]
[-128.30384827 227.47454834]
[-135.17799377 212.58567810]
[-125.50115204 199.34593201]
[-109.22804260 201.37521362]
[-95.60947418 195.08757019]
[-81.99090576 188.79992676]
[-68.56942749 182.10185242]
[-55.35741425 174.99955750]
[-42.14540100 167.89726257]
[-28.93338585 160.79495239]
[-21.38670158 147.95373535]
[-5.56798792 148.23455811]
[7.64402580 141.13226318]
[11.67459774 126.83924866]
[24.97228432 119.44829559]
[39.93677521 123.77284241]
[53.14879227 116.67053986]
[66.36080170 109.56823730]
[79.57282257 102.46593475]
[80.06628418 94.90123749]
[83.26567078 88.02867126]
[75.08654022 75.45481110]
[66.90740967 62.88095856]
[58.72827911 50.30710220]
[50.54915237 37.73324966]
[36.53841019 30.38411522]
[36.08439255 15.49643135]
[27.90526199 2.92257547]
[19.72613335 -9.65127945]
[12.42115211 -15.14071083]
[11.51997280 -22.47860527]
[3.53260899 -35.17514038]
[-4.45475531 -47.87167358]
[-12.44211960 -60.56821060]
[-20.42948341 -73.26474762]
[-28.41684723 -85.96128082]
[-36.40421295 -98.65781403]
[-48.78611374 -102.27780914]
[-55.17697525 -113.01982880]
[-52.61867523 -124.84477234]
[-60.41243744 -137.66105652]
[-68.59156799 -150.23492432]
[-77.14852905 -162.55474854]
[-85.70549774 -174.87458801]
[-94.26245880 -187.19442749]
[-109.32118225 -193.68801880]
[-110.95792389 -210.00529480]
[-97.48892975 -219.36041260]
[-82.76995850 -212.12965393]
[-81.94261932 -195.75138855]
[-73.38565826 -183.43154907]
[-64.82869720 -171.11172485]
[-56.27172852 -158.79188538]
[-53.53676224 -158.16354370]
[-50.88633347 -156.41226196]
[-48.75003052 -153.56497192]
[-47.53970337 -149.80368042]
[-47.59614563 -145.45481873]
[-39.80238724 -132.63853455]
[-23.97759438 -125.05591583]
[-23.70767593 -106.64517975]
[-15.72031212 -93.94864655]
[-7.73294830 -81.25211334]
[0.25441605 -68.55557251]
[8.24178028 -55.85903931]
[16.22914505 -43.16250229]
[24.21650887 -30.46596909]
[32.29998779 -17.83041000]
[40.47911835 -5.25655365]
[48.65824509 7.31730175]
[62.08396149 13.76706791]
[63.12300873 29.55411911]
[71.30213928 42.12797546]
[79.48126221 54.70182800]
[87.66039276 67.27568817]
[95.83952332 79.84954071]
[112.98493958 84.03936768]
[120.57546997 99.97372437]
[134.55043030 105.42355347]
[148.52537537 110.87338257]
[162.50033569 116.32321167]
[171.63572693 116.52595520]
[176.64498901 121.96324921]
[190.53562927 127.62453461]
[204.42626953 133.28582764]
[218.31690979 138.94711304]
[232.20753479 144.60839844]
[246.09817505 150.26968384]
[250.08436584 134.08717346]
[266.75579834 121.16149139]
[280.27740479 114.66788483]
[293.79898071 108.17428589]
[307.32055664 101.68068695]
[320.84213257 95.18708038]
[334.36370850 88.69348145]
[338.40609741 83.45537567]
[343.69369507 81.36174011]
[348.39562988 82.21498871]
[362.10806274 76.13474274]
[375.82049561 70.05449677]
[389.53292847 63.97425079]
[403.24533081 57.89400482]
[416.95776367 51.81375885]
[426.17453003 38.24972534]
[442.50772095 39.71936417]
[449.15509033 54.71083450]
[439.27844238 67.80220032]
[423.03802490 65.52618408]
[409.32559204 71.60643005]
[395.61315918 77.68667603]
[381.90072632 83.76692200]
[368.18832397 89.84716797]
[354.47589111 95.92741394]
[340.85729980 102.21506500]
[327.33572388 108.70866394]
[313.81414795 115.20226288]
[300.29257202 121.69586945]
[286.77099609 128.18946838]
[273.24942017 134.68307495]
[272.28457642 142.12074280]
[284.20217896 151.22955322]
[270.35488892 156.99610901]
[269.39004517 164.43379211]
[280.80722046 174.16252136]
[292.22439575 183.89125061]
[303.64157104 193.61997986]
[315.05874634 203.34870911]
[324.09942627 199.80845642]
[333.75067139 199.80590820]
[342.68533325 203.29925537]
[349.69024658 209.76881409]
[353.83078003 218.29400635]
[354.57556152 227.68411255]
[351.86425781 236.64456177]
[362.67013550 247.04804993]
[373.55468750 257.36923218]
[384.51721191 267.60754395]
[395.47976685 277.84582520]
[406.44229126 288.08413696]
[421.37072754 284.19247437]
[436.02621460 289.01123047]
[445.73223877 301.00274658]
[447.39160156 316.34063721]
[440.47485352 330.13055420]
[427.18908691 337.97222900]
[411.77374268 337.36340332]
[399.14779663 328.49835205]
[393.34014893 314.20590210]
[396.20401001 299.04666138]
[385.24145508 288.80838013]
[374.27893066 278.57006836]
[363.31637573 268.33178711]
[356.28005981 266.06304932]
[352.26666260 257.85394287]
[341.46075439 247.45046997]
[321.13244629 249.55883789]
[305.63537598 235.78855896]
[305.33001709 214.76588440]
[293.91284180 205.03715515]
[282.49566650 195.30842590]
[271.07849121 185.57969666]
[259.66131592 175.85096741]
[267.05538940 188.90193176]
[268.70877075 203.81053162]
[264.35391235 218.16445923]
[254.69549561 229.64117432]
[241.29627991 236.38366699]
[226.32435608 237.30096436]
[212.20225525 232.24462891]
[201.21502686 222.03283691]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 124]
[6 123]
[7 122]
[8 121]
[9 120]
[10 119]
[11 117]
[12 116]
[13 115]
[14 114]
[16 55]
[17 54]
[18 53]
[19 52]
[22 49]
[23 48]
[25 46]
[26 45]
[27 44]
[28 43]
[33 42]
[34 41]
[35 40]
[57 112]
[58 111]
[59 110]
[60 109]
[61 108]
[63 106]
[64 105]
[65 104]
[67 103]
[68 102]
[69 101]
[70 100]
[71 99]
[72 98]
[73 97]
[76 95]
[77 94]
[78 89]
[79 88]
[80 87]
[81 86]
[126 155]
[127 154]
[128 153]
[129 152]
[130 151]
[131 150]
[134 149]
[135 148]
[136 147]
[137 146]
[138 145]
[139 144]
[159 198]
[160 197]
[161 196]
[162 195]
[163 194]
[170 191]
[171 190]
[172 188]
[173 187]
[174 186]
[175 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
