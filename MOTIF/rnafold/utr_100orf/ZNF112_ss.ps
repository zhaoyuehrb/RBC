%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:11:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUGAGGUCAUCAUUCCUUUCAGGAAGUUGAGUGAGGCCUGAGACAGCAAUGUUUCGUUUAGCCUGGCGGCGGCCCUCCUUAUCUUCAAGAAGAGCAUCCGCGGCUAGCAGUGGAAGAUGGGGUUGGGCCCCAGGUCUCUGCCUUUCUCUAGAAAAAGAAAGAGAAAAAUGACCAAAUUCCAGGAGAUGGUGACAUUCAAGGAUGUUGCUGUGGUCU\
) } def
/len { sequence length } bind def

/coor [
[342.89068604 574.19061279]
[329.17202759 566.35058594]
[318.95077515 554.26574707]
[313.47726440 539.38592529]
[313.43081665 523.50457764]
[318.83538818 508.54251099]
[329.05459595 496.31567383]
[321.46163940 483.37942505]
[313.86865234 470.44317627]
[306.27566528 457.50689697]
[298.68267822 444.57064819]
[291.08969116 431.63439941]
[276.65554810 428.14291382]
[268.77090454 415.13186646]
[272.53097534 400.01565552]
[264.93798828 387.07940674]
[257.34500122 374.14315796]
[249.65943909 361.26168823]
[241.88166809 348.43569946]
[234.10391235 335.60971069]
[226.32614136 322.78369141]
[218.54837036 309.95770264]
[204.00587463 313.43286133]
[189.08105469 312.24130249]
[175.23654175 306.48721313]
[163.83300781 296.72247314]
[155.99540710 283.89379883]
[152.50207520 269.25097656]
[153.70732117 254.22515869]
[159.50567627 240.28881836]
[169.34091187 228.81164551]
[161.56315613 215.98564148]
[153.78538513 203.15963745]
[140.57015991 196.28889465]
[140.03044128 180.47689819]
[132.25267029 167.65089417]
[124.47489929 154.82489014]
[116.69713593 141.99888611]
[108.91937256 129.17288208]
[87.07459259 127.63233948]
[71.89059448 111.85216522]
[57.06043243 114.10299683]
[42.23027039 116.35382843]
[27.40010452 118.60465240]
[12.56994152 120.85548401]
[-2.26022220 123.10631561]
[-17.09038544 125.35714722]
[-29.55650330 136.01210022]
[-44.92468643 130.28924561]
[-47.38546753 114.07578278]
[-34.40740585 104.05072021]
[-19.34121704 110.52698517]
[-4.51105309 108.27615356]
[10.31911087 106.02532196]
[25.14927483 103.77449036]
[39.97943878 101.52365875]
[54.80960083 99.27282715]
[69.63976288 97.02199554]
[70.75211334 91.32972717]
[72.92169952 85.95086670]
[76.07009888 81.07984924]
[80.08350372 76.89274597]
[84.81683350 73.54090118]
[80.77889252 59.09462357]
[76.74095154 44.64834213]
[72.70300293 30.20206261]
[68.66506195 15.75578213]
[64.62712097 1.30950165]
[61.42839050 -1.60695624]
[59.51313400 -5.04302263]
[58.88729477 -8.53257275]
[59.40518188 -11.65523911]
[60.79745483 -14.08179665]
[57.59464264 -28.73587418]
[54.39183044 -43.38994980]
[51.18901443 -58.04402924]
[47.98620224 -72.69810486]
[35.27376556 -86.02388763]
[41.25631714 -102.52433014]
[37.84362793 -117.13095093]
[34.43093491 -131.73757935]
[31.01824188 -146.34420776]
[27.60554886 -160.95083618]
[24.19285774 -175.55746460]
[20.78016472 -190.16409302]
[17.36747360 -204.77070618]
[13.95478058 -219.37733459]
[10.54208851 -233.98396301]
[-5.34164095 -236.49487305]
[-19.01222229 -244.88978577]
[-28.39102936 -257.85751343]
[-32.06536102 -273.39428711]
[-29.50116158 -289.11328125]
[-21.12042999 -302.61138916]
[-8.23209763 -311.83654785]
[-11.85396671 -326.39270020]
[-15.47583485 -340.94888306]
[-29.60597420 -347.64761353]
[-36.07739258 -361.88330078]
[-31.83448601 -376.93429565]
[-18.88062477 -385.69393921]
[-3.33222389 -384.02621460]
[7.46923494 -372.71859741]
[8.42363358 -357.11016846]
[-0.91966558 -344.57073975]
[2.70220304 -330.01458740]
[6.32407141 -315.45840454]
[20.26864243 -313.90817261]
[32.87373352 -307.67883301]
[42.61677551 -297.50006104]
[48.31315994 -284.58001709]
[49.26024628 -270.46182251]
[45.32398224 -256.83935547]
[36.95743179 -245.35391235]
[25.14871407 -237.39665222]
[28.56140709 -222.79002380]
[31.97410011 -208.18341064]
[35.38679123 -193.57678223]
[38.79948425 -178.97015381]
[42.21217728 -164.36352539]
[45.62486649 -149.75689697]
[49.03755951 -135.15026855]
[52.45025253 -120.54364777]
[55.86294556 -105.93701935]
[65.96677399 -99.29253387]
[68.93202972 -87.15598297]
[62.64027786 -75.90091705]
[65.84309387 -61.24684143]
[69.04590607 -46.59276581]
[72.24871826 -31.93868637]
[75.45153046 -17.28461075]
[79.07340240 -2.72844052]
[83.11134338 11.71784019]
[87.14928436 26.16412163]
[91.18722534 40.61040115]
[95.22517395 55.05668259]
[99.26311493 69.50296021]
[113.27696228 72.53485107]
[124.35781860 81.63402557]
[130.05781555 94.79041290]
[129.11778259 109.09764099]
[121.74537659 121.39511871]
[129.52313232 134.22111511]
[137.30090332 147.04711914]
[145.07867432 159.87312317]
[152.85643005 172.69912720]
[166.62797546 180.48727417]
[166.61138916 195.38186646]
[174.38916016 208.20787048]
[182.16691589 221.03387451]
[196.89074707 217.61828613]
[211.92904663 218.91914368]
[225.81013489 224.79653931]
[237.17951965 234.66325378]
[244.93199158 247.54354858]
[248.31912231 262.16949463]
[247.02145386 277.10589600]
[241.17860413 290.89108276]
[231.37437439 302.17993164]
[239.15214539 315.00592041]
[246.92990112 327.83193970]
[254.70767212 340.65792847]
[262.48544312 353.48394775]
[269.60668945 359.19488525]
[270.28125000 366.55017090]
[277.87423706 379.48641968]
[285.46722412 392.42269897]
[300.49844360 396.50927734]
[308.01452637 409.73663330]
[304.02597046 424.04141235]
[311.61892700 436.97769165]
[319.21191406 449.91394043]
[326.80490112 462.85018921]
[334.39788818 475.78643799]
[341.99087524 488.72268677]
[356.01681519 485.80926514]
[370.23565674 487.36672974]
[383.25921631 493.22976685]
[393.82009888 502.81329346]
[400.89511108 515.17083740]
[403.80426025 529.08813477]
[402.27618408 543.20233154]
[396.47344971 556.13543701]
[386.97518921 566.62884521]
[394.38183594 579.67266846]
[401.78845215 592.71655273]
[417.88235474 601.67028809]
[417.06509399 619.20275879]
[424.65808105 632.13897705]
[432.25106812 645.07525635]
[439.84402466 658.01147461]
[447.43701172 670.94775391]
[455.02999878 683.88403320]
[462.62298584 696.82025146]
[470.21597290 709.75653076]
[477.80892944 722.69274902]
[485.40191650 735.62902832]
[492.99490356 748.56524658]
[507.51483154 756.18786621]
[507.90301514 772.58239746]
[493.76013184 780.88360596]
[479.63513184 772.55194092]
[480.05865479 756.15826416]
[472.46566772 743.22198486]
[464.87268066 730.28576660]
[457.27969360 717.34948730]
[449.68673706 704.41326904]
[442.09375000 691.47698975]
[434.50076294 678.54071045]
[426.90777588 665.60449219]
[419.31478882 652.66821289]
[411.72183228 639.73199463]
[404.12884521 626.79571533]
[392.50851440 623.44842529]
[386.07571411 612.73822021]
[388.74462891 600.12316895]
[381.33798218 587.07934570]
[373.93136597 574.03546143]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 175]
[8 174]
[9 173]
[10 172]
[11 171]
[12 170]
[15 167]
[16 166]
[17 165]
[18 163]
[19 162]
[20 161]
[21 160]
[22 159]
[31 150]
[32 149]
[33 148]
[35 146]
[36 145]
[37 144]
[38 143]
[39 142]
[41 58]
[42 57]
[43 56]
[44 55]
[45 54]
[46 53]
[47 52]
[63 137]
[64 136]
[65 135]
[66 134]
[67 133]
[68 132]
[73 131]
[74 130]
[75 129]
[76 128]
[77 127]
[79 124]
[80 123]
[81 122]
[82 121]
[83 120]
[84 119]
[85 118]
[86 117]
[87 116]
[88 115]
[95 107]
[96 106]
[97 105]
[184 218]
[185 217]
[186 216]
[188 213]
[189 212]
[190 211]
[191 210]
[192 209]
[193 208]
[194 207]
[195 206]
[196 205]
[197 204]
[198 203]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
