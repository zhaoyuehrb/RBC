%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:17:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUUCUUUCCGGAAAUUAUGACUGCAGCUGUUUUCACUCCGCUGUGACUCAGAGCGCUCCGGGCUGCAGGAGAGGAAGCCCAGCCUGUUCUACCAGAGAACUUGCCCAGGUCAGAGGUCUGCGUAGAAGCCCUUUUCUGAGCAUCCUCUCCUCUCCUCACACCUGCCACUGUCCUCUGCGUUGCUGUCGAAUUAAAUCUUGCAUCACCAUGGUGCACUUCUGUGGCCUACUCACCCUCCACCGGGAGCCAGUGC\
CGCUGAAGAGUAUCUCUGUGAGCGUGAACAUUUACGAGUUUGUGGCUGGUGUGU\
) } def
/len { sequence length } bind def

/coor [
[131.51893616 133.22164917]
[129.54847717 148.09165955]
[127.57802582 162.96166992]
[137.38623047 175.35418701]
[135.47589111 191.04260254]
[122.98036957 200.71923828]
[107.31303406 198.64314270]
[97.76904297 186.04600525]
[100.01068115 170.40148926]
[112.70801544 160.99122620]
[114.67846680 146.12120056]
[116.64891815 131.25119019]
[110.20498657 127.41377258]
[102.53015137 140.30163574]
[94.85530853 153.18948364]
[87.18047333 166.07734680]
[79.50563049 178.96519470]
[71.83058167 191.85293579]
[58.94297791 184.17765808]
[66.61777496 171.29035950]
[74.29261780 158.40251160]
[81.96745300 145.51464844]
[89.64229584 132.62678528]
[97.31713104 119.73893738]
[90.87320709 115.90151215]
[78.73794556 124.71829224]
[66.60269165 133.53507996]
[54.46743774 142.35185242]
[42.33218384 151.16862488]
[30.19692993 159.98541260]
[33.64450836 170.45561218]
[34.30569458 181.44348145]
[32.14459610 192.22123718]
[27.31199646 202.07704163]
[20.13485527 210.36196899]
[11.09420300 216.53282166]
[0.79289967 220.18763733]
[-10.08455658 221.09194946]
[-20.81751633 219.19375610]
[-30.69692230 214.62646484]
[-39.07215118 207.69956970]
[-51.63839340 215.89038086]
[-64.20463562 224.08120728]
[-76.77087402 232.27203369]
[-84.10697174 246.28959656]
[-98.99422455 246.75746155]
[-111.56047058 254.94828796]
[-121.52806091 268.66262817]
[-137.46575928 262.88110352]
[-136.32214355 245.96575928]
[-119.75128937 242.38204956]
[-107.18505096 234.19122314]
[-100.74777222 220.75952148]
[-84.96170044 219.70579529]
[-72.39545441 211.51496887]
[-59.82921219 203.32414246]
[-47.26296997 195.13331604]
[-50.62095261 176.31826782]
[-45.33491516 157.89961243]
[-32.44337082 143.65501404]
[-14.54935837 136.52610779]
[4.70507765 138.01110840]
[21.38014984 147.85015869]
[33.51540375 139.03337097]
[45.65066147 130.21659851]
[57.78591537 121.39981842]
[69.92117310 112.58303833]
[82.05642700 103.76625824]
[82.81616211 88.78551483]
[71.63514709 78.78627014]
[60.45413589 68.78701782]
[49.27312088 58.78777313]
[38.09210587 48.78852844]
[26.91109085 38.78928375]
[15.73007774 28.79003716]
[4.54906321 18.79079056]
[-6.63195086 8.79154396]
[-18.40365601 25.03273964]
[-44.61690903 28.71774483]
[-58.62967682 23.36588478]
[-72.64244080 18.01402664]
[-88.50656891 25.44470787]
[-104.51162720 19.20146370]
[-110.89702606 3.61780429]
[-124.96331024 -1.59177458]
[-139.18714905 4.75802326]
[-153.37815857 -0.72561014]
[-159.34405518 -14.32500648]
[-173.41033936 -19.53458405]
[-187.47662354 -24.74416351]
[-201.54290771 -29.95374298]
[-215.60919189 -35.16332245]
[-230.72872925 -29.79871368]
[-244.27314758 -38.39686203]
[-245.85232544 -54.36200333]
[-234.25486755 -65.44704437]
[-218.37731934 -63.14849472]
[-210.39961243 -49.22960281]
[-196.33332825 -44.02002335]
[-182.26704407 -38.81044388]
[-168.20075989 -33.60086823]
[-154.13447571 -28.39128876]
[-140.74952698 -34.82391357]
[-126.41010284 -29.74103928]
[-119.75373077 -15.65805626]
[-105.68744659 -10.44847775]
[-94.87608337 -17.40311623]
[-81.83768463 -16.86906052]
[-71.32273865 -8.81741524]
[-67.29058075 4.00126028]
[-53.27781677 9.35311985]
[-39.26504898 14.70497799]
[-34.23716354 9.13987637]
[-24.18139076 -1.99032736]
[-19.15350533 -7.55542946]
[-25.89555359 -20.95486069]
[-32.63759995 -34.35429382]
[-39.37965012 -47.75372696]
[-51.32982254 -52.51612473]
[-56.68078613 -63.77312088]
[-53.06738663 -75.28323364]
[-59.67329788 -88.75030518]
[-66.27921295 -102.21736908]
[-79.30330658 -111.19976807]
[-77.96174622 -126.03382874]
[-84.56765747 -139.50090027]
[-91.17356873 -152.96797180]
[-97.77947998 -166.43502808]
[-104.38539124 -179.90209961]
[-110.99130249 -193.36917114]
[-124.90157318 -202.05458069]
[-124.06459045 -218.43235779]
[-109.34136200 -225.65444946]
[-95.87788391 -216.29138184]
[-97.52423859 -199.97508240]
[-90.91832733 -186.50801086]
[-84.31240845 -173.04093933]
[-77.70649719 -159.57388306]
[-71.10058594 -146.10681152]
[-64.49467468 -132.63973999]
[-51.94307327 -124.62059784]
[-52.81214142 -108.82328033]
[-46.20623016 -95.35621643]
[-39.60031891 -81.88914490]
[-24.51729584 -72.87571716]
[-25.98021698 -54.49577332]
[-19.23816872 -41.09634018]
[-12.49612141 -27.69690895]
[-5.75407267 -14.29747772]
[3.36729550 -2.38947010]
[14.54830933 7.60977602]
[25.72932434 17.60902214]
[36.91033936 27.60826874]
[48.09135056 37.60751343]
[59.27236557 47.60676193]
[70.45337677 57.60600662]
[81.63439178 67.60525513]
[92.81540680 77.60449982]
[106.77321625 83.09809113]
[121.77014160 83.40209198]
[136.76705933 83.70610046]
[151.76397705 84.01010132]
[166.76089478 84.31410217]
[181.75781250 84.61811066]
[195.71195984 77.16208649]
[208.27981567 85.15573883]
[223.27673340 85.45974731]
[238.27365112 85.76374817]
[253.27056885 86.06775665]
[268.26748657 86.37175751]
[273.45236206 76.24691772]
[281.98599243 68.80302429]
[292.62457275 65.07472992]
[303.83596802 65.55875397]
[314.02038574 70.14805603]
[321.73876953 78.15252686]
[325.91592407 88.40249634]
[340.89666748 89.16223145]
[349.57345581 86.48194122]
[356.02514648 90.00633240]
[370.99743652 90.91784668]
[385.96969604 91.82936096]
[395.86608887 80.02394867]
[410.64355469 76.35240173]
[424.58447266 82.01934052]
[432.42147827 94.65734863]
[447.39376831 95.56886292]
[462.36605835 96.48037720]
[450.88766479 86.82395172]
[446.38275146 72.51641083]
[450.25808716 58.02566528]
[461.30352783 47.87684250]
[476.06979370 45.23918533]
[489.94573975 50.93637466]
[498.59823608 63.18930817]
[499.32528687 78.17167664]
[491.89987183 91.20483398]
[478.64111328 98.21875000]
[493.46813965 100.49016571]
[508.28082275 94.93182373]
[519.68969727 104.50715637]
[534.51672363 106.77857971]
[549.34375000 109.04999542]
[558.24713135 107.26126862]
[564.30920410 111.42028809]
[579.11242676 113.84185028]
[593.91564941 116.26340485]
[608.71893311 118.68495941]
[619.75885010 107.94131470]
[634.83197021 105.78361511]
[648.12805176 112.83186340]
[654.64630127 126.19789124]
[669.44952393 128.61944580]
[684.25274658 131.04100037]
[699.05603027 133.46255493]
[713.85925293 135.88410950]
[728.72747803 130.47616577]
[740.03875732 140.16662598]
[754.84197998 142.58819580]
[769.64520264 145.00975037]
[784.44848633 147.43130493]
[799.31671143 142.02334595]
[810.62792969 151.71382141]
[825.43121338 154.13537598]
[840.23443604 156.55693054]
[855.03771973 158.97848511]
[869.84094238 161.40003967]
[884.65625000 163.74656677]
[899.48327637 166.01797485]
[916.51159668 158.94694519]
[929.74475098 170.50645447]
[944.59405518 172.62748718]
[959.44335938 174.74853516]
[968.32818604 172.86967468]
[974.43206787 176.96704102]
[989.25909424 179.23846436]
[1000.88861084 168.78436279]
[1016.51879883 168.30303955]
[1028.76953125 178.02174377]
[1031.85644531 193.35162354]
[1024.32189941 207.05436707]
[1009.72357178 212.65995789]
[994.95428467 207.52160645]
[986.98767090 194.06549072]
[972.16064453 191.79406738]
[957.32226562 189.59780884]
[942.47302246 187.47677612]
[927.62371826 185.35572815]
[917.79357910 192.34909058]
[905.43395996 190.73863220]
[897.21185303 180.84500122]
[882.38482666 178.57359314]
[875.33428955 180.65577698]
[867.41937256 176.20329285]
[852.61614990 173.78173828]
[837.81286621 171.36018372]
[823.00964355 168.93861389]
[808.20642090 166.51705933]
[794.39697266 172.09822083]
[782.02691650 162.23454285]
[767.22369385 159.81298828]
[752.42041016 157.39143372]
[737.61718750 154.96987915]
[723.80773926 160.55102539]
[711.43768311 150.68736267]
[696.63446045 148.26580811]
[681.83123779 145.84425354]
[667.02795410 143.42268372]
[652.22473145 141.00112915]
[641.78729248 151.59350586]
[626.93841553 154.03770447]
[613.33850098 147.18960571]
[606.29736328 133.48820496]
[591.49414062 131.06665039]
[576.69085693 128.64509583]
[561.88763428 126.22353363]
[547.07232666 123.87702179]
[532.24530029 121.60559845]
[517.41827393 119.33418274]
[503.66610718 125.05500031]
[491.19671631 115.31719208]
[476.36968994 113.04577637]
[461.45452881 111.45265198]
[446.48226929 110.54114532]
[431.50997925 109.62963104]
[422.19772339 121.22358704]
[407.67227173 125.15749359]
[393.44937134 119.72040558]
[385.05819702 106.80164337]
[370.08590698 105.89012909]
[355.11364746 104.97861481]
[340.13693237 104.14297485]
[325.15618896 103.38323975]
[314.21676636 118.59956360]
[296.15374756 124.13354492]
[278.28430176 117.55194855]
[267.96347046 101.36867523]
[252.96656799 101.06467438]
[237.96965027 100.76066589]
[222.97271729 100.45666504]
[207.97579956 100.15265656]
[195.09432983 107.63042450]
[181.45381165 99.61502838]
[166.45689392 99.31102753]
[151.45997620 99.00701904]
[136.46305847 98.70301819]
[121.46613312 98.39900970]
[106.46921539 98.09500885]
[119.69804382 101.57221222]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 12]
[2 11]
[3 10]
[25 68]
[26 67]
[27 66]
[28 65]
[29 64]
[30 63]
[41 57]
[42 56]
[43 55]
[44 54]
[46 52]
[47 51]
[69 158]
[70 157]
[71 156]
[72 155]
[73 154]
[74 153]
[75 152]
[76 151]
[77 150]
[79 112]
[80 111]
[81 110]
[84 106]
[85 105]
[88 102]
[89 101]
[90 100]
[91 99]
[92 98]
[115 149]
[116 148]
[117 147]
[118 146]
[121 144]
[122 143]
[123 142]
[125 140]
[126 139]
[127 138]
[128 137]
[129 136]
[130 135]
[159 308]
[160 307]
[161 306]
[162 305]
[163 304]
[164 303]
[166 301]
[167 300]
[168 299]
[169 298]
[170 297]
[177 293]
[178 292]
[180 291]
[181 290]
[182 289]
[186 285]
[187 284]
[188 283]
[198 282]
[199 281]
[201 279]
[202 278]
[203 277]
[205 276]
[206 275]
[207 274]
[208 273]
[212 269]
[213 268]
[214 267]
[215 266]
[216 265]
[218 263]
[219 262]
[220 261]
[221 260]
[223 258]
[224 257]
[225 256]
[226 255]
[227 254]
[228 252]
[229 251]
[231 248]
[232 247]
[233 246]
[235 245]
[236 244]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
