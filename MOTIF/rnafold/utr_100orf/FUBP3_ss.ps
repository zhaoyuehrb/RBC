%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:33:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCCUUUUCCGGCUACGGGUCCCCAAGCGGAGCGGGAGGCCGGACCGGGGAGCCGAGCGGCGGCGUCGGCGGCGUCGGCGGCGGCGGCGACGGCGGCGGGGGCGGUAAUGGCGGAGCUGGUGCAGGGGCAGAGCGCUCCUGUGGGGAUGAAGGCCGAGGGCUUCGUGGAUGCCCUGCACCGGGUCCGGCAGAUUGCUGCUAAAAUUG\
) } def
/len { sequence length } bind def

/coor [
[156.11611938 199.43986511]
[141.81657410 194.90957642]
[129.88638306 185.81724548]
[121.72673035 173.23075867]
[118.29595184 158.62835693]
[119.99699402 143.72512817]
[126.63008118 130.27142334]
[137.41613770 119.84737396]
[151.09011841 113.67683411]
[136.14135742 112.43814850]
[121.19258118 111.19945526]
[106.24382019 109.96076202]
[91.55159760 112.98380280]
[78.30621338 120.02366638]
[65.06082153 127.06352997]
[58.95052719 133.85552979]
[51.56300735 134.10795593]
[38.21329880 140.94793701]
[24.86359024 147.78791809]
[16.10989952 160.96681213]
[1.25467837 159.88438416]
[-12.09503078 166.72434998]
[-25.44474030 173.56433105]
[-38.79444885 180.40431213]
[-52.14416122 187.24427795]
[-54.37104797 190.97596741]
[-57.36855316 193.54562378]
[-60.67642593 194.85363770]
[-63.84938812 194.96026611]
[-66.50798035 194.06678772]
[-80.24458313 200.09220886]
[-86.06370544 214.54127502]
[-100.08040619 220.45623779]
[-113.81951904 214.81954956]
[-127.55612183 220.84498596]
[-141.29272461 226.87040710]
[-150.56359863 240.39752197]
[-166.89076233 238.86267090]
[-173.47822571 223.84477234]
[-163.54937744 210.79295349]
[-147.31814575 213.13380432]
[-133.58155823 207.10838318]
[-119.84495544 201.08294678]
[-114.68675232 187.15711975]
[-100.84172058 180.85079956]
[-86.27001190 186.35562134]
[-72.53340912 180.33018494]
[-58.98413467 173.89457703]
[-45.63442612 167.05459595]
[-32.28471375 160.21461487]
[-18.93500519 153.37464905]
[-5.58529663 146.53466797]
[2.21353316 133.84501648]
[18.02361488 134.43820190]
[31.37332535 127.59822845]
[44.72303391 120.75825500]
[58.02095795 113.81813812]
[71.26634979 106.77827454]
[84.51174164 99.73841858]
[85.69056702 92.33163452]
[88.04821777 77.51808167]
[89.22704315 70.11129761]
[78.82159424 59.30728912]
[63.67553329 54.73481750]
[60.41959381 40.20043945]
[50.01414490 29.39643097]
[39.60869598 18.59242058]
[29.20324707 7.78841066]
[18.79779625 -3.01559925]
[3.65173984 -7.58807325]
[0.39579892 -22.12244987]
[-10.00965023 -32.92646027]
[-25.15570831 -37.49893570]
[-28.41164780 -52.03330994]
[-38.81709671 -62.83732224]
[-49.22254562 -73.64132690]
[-59.62799454 -84.44534302]
[-74.97052765 -91.65942383]
[-72.28561401 -108.39942169]
[-55.45655823 -110.45352173]
[-48.82398605 -94.85079193]
[-38.41853714 -84.04678345]
[-28.01308823 -73.24276733]
[-17.60763931 -62.43875885]
[-3.20584893 -58.63906097]
[0.79435945 -43.33190918]
[11.19980907 -32.52790070]
[25.60159874 -28.72820091]
[29.60180664 -13.42104816]
[40.00725555 -2.61703873]
[50.41270447 8.18697071]
[60.81815338 18.99098015]
[71.22360229 29.79499054]
[85.62539673 33.59468842]
[89.62560272 48.90184021]
[100.03105164 59.70585251]
[111.63690186 78.27719116]
[107.48250580 95.01200104]
[122.43127441 96.25068665]
[137.38003540 97.48937988]
[152.32881165 98.72806549]
[167.31822205 98.16452026]
[182.13177490 95.80686951]
[196.94532776 93.44921875]
[211.75889587 91.09156799]
[226.57244873 88.73391724]
[241.38600159 86.37625885]
[256.19955444 84.01860809]
[271.01312256 81.66095734]
[285.78958130 79.08090973]
[300.52557373 76.27905273]
[312.63760376 66.10018921]
[326.58612061 71.32397461]
[341.32211304 68.52210999]
[356.05810547 65.72025299]
[370.79409790 62.91839218]
[382.90612793 52.73952866]
[396.85464478 57.96331406]
[411.59066772 55.16145325]
[426.32666016 52.35959625]
[441.06265259 49.55773544]
[455.79864502 46.75587463]
[470.53463745 43.95401382]
[485.27062988 41.15215302]
[500.00662231 38.35029602]
[514.74261475 35.54843521]
[529.47863770 32.74657440]
[544.21459961 29.94471359]
[552.06213379 25.26673698]
[559.19305420 27.21323395]
[573.96954346 24.63318825]
[583.76269531 10.13879967]
[600.67553711 7.26741219]
[614.16174316 17.31419945]
[628.89776611 14.51233864]
[643.63372803 11.71047878]
[658.29003906 -2.12840152]
[676.25360107 5.02443266]
[690.89868164 1.78089583]
[705.54382324 -1.46264100]
[720.18896484 -4.70617771]
[727.89227295 -9.61792564]
[735.07849121 -7.88665390]
[749.77075195 -10.90969372]
[764.46295166 -13.93273354]
[769.92083740 -28.36240005]
[782.32714844 -37.53229523]
[797.72308350 -38.51634216]
[811.19586182 -31.00053406]
[818.44641113 -17.38313675]
[817.16101074 -2.00941420]
[807.74993896 10.21493626]
[793.21612549 15.38916874]
[778.19732666 11.86220360]
[767.48596191 0.75948310]
[752.79376221 3.78252292]
[738.10156250 6.80556297]
[723.43249512 9.93894005]
[708.78735352 13.18247700]
[694.14221191 16.42601395]
[679.49713135 19.66954994]
[674.80126953 28.74704361]
[665.69238281 33.84771729]
[655.06103516 33.07621384]
[646.43560791 26.44647408]
[631.69958496 29.24833488]
[616.96362305 32.05019379]
[611.27575684 43.61313248]
[599.79504395 49.88199234]
[586.60595703 48.37115479]
[576.54956055 39.40963364]
[561.77313232 41.98968124]
[547.01647949 44.68070984]
[532.28045654 47.48257065]
[517.54449463 50.28443146]
[502.80850220 53.08629227]
[488.07250977 55.88814926]
[473.33648682 58.69001007]
[458.60049438 61.49187088]
[443.86450195 64.29373169]
[429.12850952 67.09558868]
[414.39251709 69.89745331]
[399.65652466 72.69931030]
[388.59851074 82.67776489]
[373.59597778 77.65438843]
[358.85995483 80.45625305]
[344.12396240 83.25811005]
[329.38796997 86.05996704]
[318.32995605 96.03842926]
[303.32742310 91.01504517]
[288.59143066 93.81690979]
[285.21096802 97.19255829]
[279.67352295 98.47948456]
[273.37075806 96.47451782]
[258.55722046 98.83216858]
[243.74365234 101.18981934]
[228.93009949 103.54747009]
[214.11654663 105.90512085]
[199.30297852 108.26277161]
[184.48942566 110.62042236]
[169.67587280 112.97807312]
[183.77301025 118.10356140]
[195.31173706 127.68781281]
[202.93681335 140.60516357]
[205.75270081 155.33848572]
[203.42866516 170.15736389]
[196.23767090 183.32130432]
[185.02427673 193.28424072]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 101]
[10 100]
[11 99]
[12 98]
[13 59]
[14 58]
[15 57]
[17 56]
[18 55]
[19 54]
[21 52]
[22 51]
[23 50]
[24 49]
[25 48]
[30 47]
[31 46]
[34 43]
[35 42]
[36 41]
[62 96]
[63 95]
[65 93]
[66 92]
[67 91]
[68 90]
[69 89]
[71 87]
[72 86]
[74 84]
[75 83]
[76 82]
[77 81]
[102 201]
[103 200]
[104 199]
[105 198]
[106 197]
[107 196]
[108 195]
[109 194]
[110 191]
[111 190]
[113 188]
[114 187]
[115 186]
[116 185]
[118 183]
[119 182]
[120 181]
[121 180]
[122 179]
[123 178]
[124 177]
[125 176]
[126 175]
[127 174]
[128 173]
[130 172]
[131 171]
[134 167]
[135 166]
[136 165]
[138 161]
[139 160]
[140 159]
[141 158]
[143 157]
[144 156]
[145 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
