%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:24:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCGGUCGCUCAGCAGUGACGUGACACGCAGCCCACGGUCUGUACUGACGCGCCCUCGCUUCUUCCUCUUUCUCGACUCCAUCUUCGCGGUAGCUGGGACCGCCGUUCAGUCGCCAAUAUGCAGCUCUUUGUCCGCGCCCAGGAGCUACACACCUUCGAGGUGACCGGCCAGGAAACGGUCGCCCAGAUCAAGGCUCAUGUAGCCUCACUGGAGGGCA\
) } def
/len { sequence length } bind def

/coor [
[90.04373932 231.67956543]
[82.75812531 236.97155762]
[73.99108124 238.30076599]
[67.18122864 251.66586304]
[60.37136841 265.03094482]
[53.65710831 278.44433594]
[47.03879166 291.90530396]
[40.42047882 305.36630249]
[33.80216217 318.82727051]
[27.18384361 332.28823853]
[20.66180611 345.79614258]
[14.23638058 359.35025024]
[7.81095457 372.90435791]
[9.67511559 389.19720459]
[-3.66208172 398.73928833]
[-18.48047256 391.71450806]
[-19.53616524 375.34936523]
[-5.74315548 366.47891235]
[0.68227035 352.92480469]
[7.10769653 339.37069702]
[7.13257027 331.98510742]
[13.72286701 325.66992188]
[20.34118462 312.20895386]
[26.95950127 298.74798584]
[33.57781601 285.28698730]
[40.19613266 271.82601929]
[40.32646561 264.44152832]
[47.00627136 258.22109985]
[53.81612778 244.85600281]
[60.62598419 231.49090576]
[57.76548004 211.04766846]
[75.94267273 199.69052124]
[82.17389679 186.04603577]
[88.40512085 172.40156555]
[94.63634491 158.75708008]
[89.68454742 153.12417603]
[74.97626495 156.06805420]
[79.78094482 141.85835266]
[74.82914734 136.22543335]
[60.49856186 140.65650940]
[46.16798019 145.08758545]
[39.01522827 159.18061829]
[23.96645546 164.00866699]
[9.94982910 156.70730591]
[5.28116465 141.60833740]
[12.73029900 127.66968536]
[27.87779236 123.16091919]
[41.73690414 130.75700378]
[56.06748962 126.32592773]
[70.39807129 121.89485931]
[68.26335144 107.04753876]
[53.26487732 106.83334351]
[38.26640701 106.61914825]
[24.22031021 115.08314514]
[10.00006008 106.91512299]
[10.23423195 90.51765442]
[24.68192863 82.75903320]
[38.48059845 91.62068176]
[53.47906876 91.83486938]
[68.47753906 92.04906464]
[72.53234863 85.73966217]
[59.47264099 78.36104584]
[46.41293335 70.98242188]
[33.35322571 63.60379791]
[20.29351807 56.22517776]
[5.65234566 52.96387863]
[-0.05333925 39.09141922]
[8.05646324 26.47273827]
[23.04554176 25.90043449]
[32.09384537 37.86351013]
[44.23087311 46.67784882]
[56.36790085 55.49218750]
[68.50492859 64.30652618]
[80.64196014 73.12085724]
[84.69676208 66.81146240]
[78.27133942 53.25734711]
[71.84590912 39.70323944]
[65.42048645 26.14912796]
[58.99505997 12.59501839]
[46.62969208 13.73919678]
[34.53284073 11.04259109]
[23.86632156 4.77953339]
[15.64985466 -4.43385553]
[10.66360474 -15.70025063]
[9.37410927 -27.92850876]
[11.89066792 -39.93933105]
[17.95624733 -50.57901001]
[26.97364998 -58.83023834]
[21.13459778 -72.64709473]
[15.29554749 -86.46395111]
[9.45649529 -100.28079987]
[3.61744404 -114.09765625]
[-11.38175201 -118.52011871]
[-19.98597908 -131.57772827]
[-18.13258743 -147.10508728]
[-6.69669008 -157.77066040]
[8.92203236 -158.53846741]
[21.34889603 -149.04598999]
[24.71631432 -133.77528381]
[17.43429947 -119.93670654]
[23.27334976 -106.11985779]
[29.11240196 -92.30300140]
[34.95145416 -78.48614502]
[40.79050446 -64.66928864]
[58.49192429 -64.45684814]
[74.36141205 -56.49284363]
[85.17521667 -42.34313583]
[88.71388245 -24.83535767]
[84.21769714 -7.49389076]
[72.54917145 6.16959238]
[78.97459412 19.72370338]
[85.40002441 33.27781296]
[91.82544708 46.83192444]
[98.25087738 60.38603210]
[105.73176575 60.92107773]
[106.59111023 45.94571304]
[103.16432190 31.34238815]
[115.93010712 23.46617699]
[127.44452667 33.07961273]
[121.97416687 47.04592896]
[120.69355011 61.99116516]
[128.17443848 62.52620697]
[136.46340942 50.02449417]
[138.59515381 41.14929199]
[144.96107483 37.40460587]
[153.42771912 25.02252769]
[147.32772827 10.85236168]
[149.87959290 -4.36248350]
[160.26902771 -15.76700687]
[175.18080139 -19.72206688]
[189.85662842 -14.96561623]
[199.61349487 -3.01542282]
[201.33802795 12.31525040]
[194.47991943 26.13444138]
[181.22760010 34.03249741]
[165.80979919 33.48917770]
[157.34315491 45.87125397]
[148.96513367 58.31346893]
[140.67614746 70.81518555]
[145.51464844 85.01338959]
[159.71284485 89.85188293]
[173.91105652 94.69036865]
[188.10925293 99.52886200]
[202.34164429 104.26585388]
[216.60749817 108.90110779]
[230.87333679 113.53636169]
[245.17192078 118.06964874]
[259.50250244 122.50071716]
[273.83309937 126.93179321]
[288.16366577 131.36286926]
[302.49426270 135.79394531]
[318.90701294 126.32128906]
[336.72399902 131.76678467]
[344.75613403 148.22206116]
[359.20739746 152.24209595]
[373.65866089 156.26214600]
[388.19271851 159.97174072]
[402.80291748 163.36918640]
[416.11428833 155.27937317]
[430.88269043 158.93299866]
[438.51306152 171.67321777]
[453.12322998 175.07067871]
[467.73339844 178.46812439]
[482.34359741 181.86558533]
[496.95376587 185.26303101]
[511.56393433 188.66047668]
[526.17413330 192.05793762]
[540.78430176 195.45538330]
[551.77581787 184.62997437]
[566.87982178 181.48789978]
[581.27667236 187.03179932]
[590.37237549 199.49261475]
[591.26452637 214.89416504]
[583.66839600 228.32185364]
[570.00799561 235.49096680]
[554.64221191 234.11386108]
[542.47424316 224.62997437]
[537.38684082 210.06556702]
[522.77667236 206.66810608]
[508.16650391 203.27066040]
[493.55630493 199.87321472]
[478.94613647 196.47575378]
[464.33596802 193.07830811]
[449.72576904 189.68086243]
[435.11560059 186.28340149]
[422.64688110 194.34977722]
[407.78167725 191.11241150]
[399.40545654 177.97937012]
[384.79528809 174.58190918]
[381.62942505 176.11996460]
[377.56268311 176.20494080]
[373.28427124 174.43069458]
[369.63864136 170.71340942]
[355.18734741 166.69337463]
[340.73608398 162.67332458]
[332.26031494 170.29896545]
[321.04043579 172.91619873]
[309.83471680 169.76295471]
[301.45541382 161.51049805]
[298.06317139 150.12452698]
[283.73260498 145.69345093]
[269.40200806 141.26237488]
[255.07142639 136.83129883]
[240.74084473 132.40022278]
[233.42687988 133.42668152]
[226.23808289 127.80221558]
[211.97224426 123.16696167]
[197.70639038 118.53170013]
[190.37850952 119.45362091]
[183.27076721 113.72706604]
[169.07255554 108.88857269]
[154.87435913 104.05008698]
[140.67614746 99.21159363]
[140.18699646 134.70568848]
[108.28082275 164.98831177]
[102.04959869 178.63278198]
[95.81837463 192.27726746]
[89.58715057 205.92173767]
[94.02337646 214.22860718]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 30]
[4 29]
[5 28]
[6 26]
[7 25]
[8 24]
[9 23]
[10 22]
[11 20]
[12 19]
[13 18]
[32 218]
[33 217]
[34 216]
[35 215]
[39 50]
[40 49]
[41 48]
[51 60]
[52 59]
[53 58]
[75 114]
[76 113]
[77 112]
[78 111]
[79 110]
[88 104]
[89 103]
[90 102]
[91 101]
[92 100]
[122 139]
[123 138]
[125 137]
[126 136]
[140 213]
[141 212]
[142 211]
[143 210]
[144 208]
[145 207]
[146 206]
[147 204]
[148 203]
[149 202]
[150 201]
[151 200]
[154 195]
[155 194]
[156 193]
[157 189]
[158 188]
[161 185]
[162 184]
[163 183]
[164 182]
[165 181]
[166 180]
[167 179]
[168 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
