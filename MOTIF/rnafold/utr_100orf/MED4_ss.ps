%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:32:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCUCGCCACGCACCUGCGUCAGCUCGCUCUGCGCGUGCGCCGGUGGCGGGACUCUGGGGAAAAUGGCUGCGUCUUCGAGUGGUGAGAAGGAGAAGGAGCGGCUGGGAGGCGGUUUGGGAGUGGCGGGUGGUAACAGCACACGAGAGCGGCUGCUGUCUGCGC\
) } def
/len { sequence length } bind def

/coor [
[85.76927185 126.48220825]
[92.49586487 113.07629395]
[79.60232544 120.74157715]
[66.70877838 128.40686035]
[53.81523514 136.07214355]
[40.92169189 143.73741150]
[28.02814865 151.40269470]
[15.13460350 159.06797791]
[2.24105954 166.73326111]
[-10.65248489 174.39854431]
[-23.24296570 182.55204773]
[-35.51190567 191.18182373]
[-47.78084564 199.81161499]
[-60.04978561 208.44139099]
[-63.20832443 214.33534241]
[-68.14114380 217.27403259]
[-72.95804596 217.15611267]
[-85.54853058 225.30963135]
[-98.13900757 233.46315002]
[-103.67378235 240.78970337]
[-111.04966736 241.64956665]
[-123.79402161 249.56040955]
[-136.53837585 257.47125244]
[-139.89494324 272.91500854]
[-153.23376465 281.39151001]
[-168.64114380 277.87185669]
[-176.97616577 264.44415283]
[-173.29380798 249.07484436]
[-159.77874756 240.88226318]
[-144.44921875 244.72691345]
[-131.70486450 236.81605530]
[-118.96051788 228.90521240]
[-106.29251862 220.87266541]
[-93.70204163 212.71914673]
[-81.11155701 204.56564331]
[-68.67956543 196.17245483]
[-56.41062546 187.54266357]
[-44.14168549 178.91288757]
[-31.87274551 170.28311157]
[-31.27608490 167.49871826]
[-29.51455879 164.78916931]
[-26.61329460 162.60910034]
[-22.76490021 161.39471436]
[-18.31776428 161.50498962]
[-5.42422056 153.83970642]
[7.46932364 146.17443848]
[20.36286736 138.50915527]
[33.25641251 130.84387207]
[46.14995575 123.17859650]
[59.04349899 115.51331329]
[71.93704224 107.84803009]
[84.83058929 100.18275452]
[91.99638367 87.00506592]
[91.42184448 72.01607513]
[90.84730530 57.02708435]
[90.27276611 42.03808975]
[80.53979492 53.45165253]
[65.99227905 57.10812759]
[52.01940918 51.65296936]
[43.79748154 39.10705566]
[44.37235260 24.11807442]
[53.53105545 12.23875809]
[67.88071442 7.86984730]
[82.10543060 12.62982464]
[90.93526459 24.75430489]
[92.65551758 9.85327435]
[94.37577057 -5.04775715]
[96.09601593 -19.94878769]
[97.81626892 -34.84981918]
[99.53652191 -49.75085068]
[101.25677490 -64.65188599]
[95.15317535 -79.24834442]
[104.29903412 -91.00430298]
[106.01927948 -105.90533447]
[107.73953247 -120.80636597]
[109.45978546 -135.70739746]
[111.18003845 -150.60842896]
[97.73572540 -157.65222168]
[87.74673462 -169.07957458]
[82.56399536 -183.34504700]
[82.88842010 -198.51933289]
[88.67614746 -212.55026245]
[99.14442444 -223.54023743]
[112.87750244 -230.00296021]
[128.01809692 -231.06442261]
[142.51858521 -226.58105469]
[154.41786194 -217.15917969]
[162.10667419 -204.07305908]
[164.54515076 -189.09246826]
[161.40353394 -174.24340820]
[153.10667419 -161.53408813]
[140.77668762 -152.68334961]
[126.08106995 -148.88816833]
[124.36081696 -133.98713684]
[122.64056396 -119.08611298]
[120.92031097 -104.18508148]
[119.20006561 -89.28404999]
[125.42670441 -75.75341034]
[116.15780640 -62.93163300]
[114.43755341 -48.03060150]
[112.71730042 -33.12957001]
[110.99704742 -18.22853661]
[109.27680206 -3.32750583]
[107.55654907 11.57352543]
[105.83629608 26.47455597]
[105.26175690 41.46355057]
[105.83629608 56.45254135]
[106.41083527 71.44153595]
[106.98537445 86.43052673]
[115.01792908 99.09852600]
[128.33045959 106.01058960]
[141.64297485 112.92265320]
[154.95550537 119.83472443]
[167.49659729 116.69294739]
[178.45610046 122.76083374]
[182.20066833 134.29391479]
[195.37834167 141.45971680]
[208.55603027 148.62551880]
[224.37591553 148.42082214]
[231.86071777 161.29820251]
[245.03840637 168.46400452]
[258.21609497 175.62979126]
[274.03598022 175.42509460]
[281.52078247 188.30247498]
[294.69845581 195.46827698]
[312.60437012 189.39265442]
[329.00750732 198.14157104]
[333.77020264 215.78230286]
[347.21267700 222.43811035]
[360.65518188 229.09390259]
[374.16079712 235.62065125]
[387.72830200 242.01773071]
[404.01721191 240.11952209]
[413.58712769 253.43675232]
[406.59335327 268.26980591]
[390.23046875 269.35968018]
[381.33120728 255.58523560]
[367.76370239 249.18815613]
[360.33786011 249.17987061]
[353.99935913 242.53639221]
[340.55688477 235.88058472]
[327.11441040 229.22479248]
[317.30276489 235.15274048]
[305.72750854 235.59147644]
[295.28073120 230.31494141]
[288.62890625 220.53959656]
[287.53265381 208.64596558]
[274.35498047 201.48016357]
[259.47766113 202.19740295]
[251.05029297 188.80747986]
[237.87260437 181.64167786]
[224.69491577 174.47589111]
[209.81759644 175.19313049]
[201.39022827 161.80319214]
[188.21255493 154.63740540]
[175.03486633 147.47160339]
[157.56280518 148.88476562]
[148.04344177 133.14724731]
[134.73091125 126.23518372]
[121.41838837 119.32312012]
[108.10586548 112.41104889]
[115.94866180 125.19738770]
[108.90215302 138.43923950]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 52]
[3 51]
[4 50]
[5 49]
[6 48]
[7 47]
[8 46]
[9 45]
[10 44]
[11 39]
[12 38]
[13 37]
[14 36]
[17 35]
[18 34]
[19 33]
[21 32]
[22 31]
[23 30]
[53 109]
[54 108]
[55 107]
[56 106]
[65 105]
[66 104]
[67 103]
[68 102]
[69 101]
[70 100]
[71 99]
[73 97]
[74 96]
[75 95]
[76 94]
[77 93]
[110 161]
[111 160]
[112 159]
[113 158]
[116 156]
[117 155]
[118 154]
[120 152]
[121 151]
[122 150]
[124 148]
[125 147]
[128 142]
[129 141]
[130 140]
[131 138]
[132 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
