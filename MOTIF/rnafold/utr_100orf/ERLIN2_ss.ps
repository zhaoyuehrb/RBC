%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:00:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCGAAGCGACGGCCCGGAAGGAAGUCGCGUGCUGAGGGGUGUGACGGUUUUCUUGCUCGUGGGCUCGGACGAGUACGGAGCGCCUGCAGGGACAGCCUGGAUAAAGGCUCACUGAUGGCUCAGUUGGGAGCAGUUGUGGCUGUGGCUUCCAGUUUCUUUUGUGCAUCUCUCUUCUCAGCUGUGCACAAGAUAGAAGAGGGACAUAUUGGGGUAU\
) } def
/len { sequence length } bind def

/coor [
[266.51232910 242.78768921]
[261.71142578 231.85189819]
[260.87515259 219.90330505]
[264.12463379 208.33876038]
[252.35841370 199.03523254]
[240.59217834 189.73168945]
[228.82594299 180.42816162]
[217.05970764 171.12463379]
[202.27728271 169.29998779]
[196.25115967 154.67137146]
[184.48492432 145.36782837]
[172.71868896 136.06430054]
[160.95245361 126.76077271]
[149.18621826 117.45723724]
[137.41998291 108.15370178]
[145.79748535 120.59626770]
[149.16336060 135.21376038]
[147.07112122 150.06712341]
[139.79830933 163.18605042]
[128.30966187 172.83027649]
[114.12918854 177.72047424]
[99.13794708 177.20797729]
[85.32455444 171.36073303]
[74.52138519 160.95440674]
[68.16153717 147.36955261]
[55.28160477 155.05769348]
[42.40167999 162.74583435]
[29.52175140 170.43397522]
[16.64182281 178.12211609]
[13.09493923 183.69444275]
[8.02780247 186.25712585]
[3.27358007 185.84027100]
[-9.82450581 193.15054321]
[-22.92259216 200.46081543]
[-30.85866737 214.81179810]
[-47.25778198 214.84388733]
[-55.24993515 200.52404785]
[-46.61348343 186.58332825]
[-30.23286819 187.36273193]
[-17.13478279 180.05245972]
[-4.03669596 172.74218750]
[8.95368481 165.24218750]
[21.83361244 157.55404663]
[34.71353912 149.86590576]
[47.59346771 142.17776489]
[60.47339630 134.48962402]
[59.05742645 119.55661011]
[44.96203995 114.42630768]
[30.86664963 109.29600525]
[15.25241661 111.84675598]
[5.93900585 100.22309113]
[-8.15638351 95.09278870]
[-22.25177193 89.96248627]
[-36.34716034 84.83218384]
[-50.47948837 79.80451965]
[-64.64800262 74.87976074]
[-78.81651306 69.95500183]
[-92.98502350 65.03024292]
[-107.15354156 60.10548782]
[-121.32205200 55.18073273]
[-135.49057007 50.25597382]
[-148.14984131 59.22939301]
[-163.66543579 59.01443863]
[-176.07125854 49.69376373]
[-180.59704590 34.85136414]
[-175.50253296 20.19443703]
[-162.74664307 11.35887527]
[-147.23429871 11.74213123]
[-134.93031311 21.19683456]
[-130.56581116 36.08745956]
[-116.39729309 41.01221848]
[-102.22878265 45.93697739]
[-88.06027222 50.86173248]
[-73.89175415 55.78649139]
[-59.72324371 60.71125031]
[-45.55472946 65.63600922]
[-38.20744324 64.86318970]
[-31.21685982 70.73679352]
[-17.12147141 75.86709595]
[-3.02608132 80.99739838]
[11.06930828 86.12770081]
[25.67534447 83.20999908]
[35.99695206 95.20062256]
[50.09234238 100.33092499]
[64.18772888 105.46122742]
[69.33454132 100.00592041]
[79.62816620 89.09531403]
[84.77497864 83.64001465]
[78.83378601 69.86677551]
[72.89258575 56.09353256]
[66.95139313 42.32028961]
[52.63269043 35.08465195]
[49.50337219 19.34975815]
[59.96397781 7.18606997]
[75.99002838 7.92453003]
[85.28770447 20.99865341]
[80.72463226 36.37909317]
[86.66582489 50.15233612]
[92.60702515 63.92557526]
[98.54821777 77.69881439]
[106.04505157 77.48068237]
[128.53552246 76.82627869]
[133.66583252 62.73088837]
[138.79612732 48.63549805]
[143.92643738 34.54010773]
[137.49665833 20.35223770]
[142.90031433 6.13059092]
[156.46589661 0.08821502]
[161.59620667 -14.00717449]
[166.72650146 -28.10256386]
[171.85681152 -42.19795227]
[176.67840576 -56.40190506]
[181.18898010 -70.70765686]
[185.69956970 -85.01341248]
[190.21015930 -99.31916809]
[194.72074890 -113.62492371]
[190.64498901 -129.50952148]
[202.55126953 -140.78660583]
[218.19140625 -135.85528564]
[221.47619629 -119.78847504]
[209.02650452 -109.11433411]
[204.51591492 -94.80857849]
[200.00532532 -80.50282288]
[195.49473572 -66.19707489]
[190.98414612 -51.89131927]
[192.27639771 -48.61451340]
[192.04797363 -44.54959106]
[189.94598389 -40.41704559]
[185.95219421 -37.06764984]
[180.82189941 -22.97226143]
[175.69158936 -8.87687206]
[170.56129456 5.21851730]
[177.06916809 18.56703949]
[172.06710815 32.93485260]
[158.02182007 39.67041016]
[152.89152527 53.76580048]
[147.76121521 67.86119080]
[142.63092041 81.95658112]
[146.72352600 96.38746643]
[158.48976135 105.69100189]
[170.25598145 114.99453735]
[182.02221680 124.29806519]
[193.78845215 133.60159302]
[205.55468750 142.90513611]
[221.17871094 145.39523315]
[226.36323547 159.35839844]
[238.12947083 168.66192627]
[249.89570618 177.96545410]
[261.66192627 187.26899719]
[273.42816162 196.57252502]
[290.34823608 189.17686462]
[308.59539795 191.38743591]
[323.12472534 202.50595093]
[329.96340942 219.38331604]
[327.29696655 237.31120300]
[339.45782471 246.09263611]
[351.61865234 254.87408447]
[363.77951050 263.65551758]
[379.18338013 261.34072876]
[391.39114380 270.41958618]
[393.50302124 285.11907959]
[405.66387939 293.90054321]
[417.82470703 302.68197632]
[429.98556519 311.46340942]
[436.50701904 312.51312256]
[440.86712646 316.15081787]
[442.36740112 320.68133545]
[454.26770020 329.81277466]
[466.16799927 338.94418335]
[478.06829834 348.07559204]
[489.96859741 357.20703125]
[501.86889648 366.33843994]
[513.76922607 375.46987915]
[525.66949463 384.60128784]
[537.56982422 393.73272705]
[549.47009277 402.86413574]
[562.53045654 399.58068848]
[574.91687012 404.34802246]
[582.18920898 415.21713257]
[581.87927246 428.09646606]
[593.64550781 437.39999390]
[608.92242432 434.06082153]
[622.74749756 441.36843872]
[628.59295654 455.87237549]
[623.69879150 470.72433472]
[610.37585449 478.91168213]
[594.91479492 476.56860352]
[584.61590576 464.80142212]
[584.34197998 449.16622925]
[572.57574463 439.86270142]
[555.96844482 442.52624512]
[542.30529785 432.14874268]
[540.33868408 414.76443481]
[528.43835449 405.63302612]
[516.53808594 396.50158691]
[504.63778687 387.37017822]
[492.73748779 378.23873901]
[480.83718872 369.10733032]
[468.93688965 359.97592163]
[457.03659058 350.84448242]
[445.13626099 341.71307373]
[433.23596191 332.58163452]
[421.20413208 323.62426758]
[409.04327393 314.84283447]
[396.88241577 306.06137085]
[384.72158813 297.27993774]
[370.10388184 299.89889526]
[357.64596558 291.16650391]
[354.99807739 275.81637573]
[342.83721924 267.03494263]
[330.67636108 258.25347900]
[318.51553345 249.47204590]
[308.55493164 255.74302673]
[297.02972412 258.29711914]
[285.28375244 256.81262207]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 150]
[5 149]
[6 148]
[7 147]
[8 146]
[10 144]
[11 143]
[12 142]
[13 141]
[14 140]
[15 139]
[25 46]
[26 45]
[27 44]
[28 43]
[29 42]
[32 41]
[33 40]
[34 39]
[47 85]
[48 84]
[49 83]
[51 81]
[52 80]
[53 79]
[54 78]
[55 76]
[56 75]
[57 74]
[58 73]
[59 72]
[60 71]
[61 70]
[88 100]
[89 99]
[90 98]
[91 97]
[102 138]
[103 137]
[104 136]
[105 135]
[108 132]
[109 131]
[110 130]
[111 129]
[112 125]
[113 124]
[114 123]
[115 122]
[116 121]
[155 212]
[156 211]
[157 210]
[158 209]
[161 206]
[162 205]
[163 204]
[164 203]
[167 202]
[168 201]
[169 200]
[170 199]
[171 198]
[172 197]
[173 196]
[174 195]
[175 194]
[176 193]
[180 190]
[181 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
