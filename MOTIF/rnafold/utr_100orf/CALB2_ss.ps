%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:29:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCACAACCCCAGCGCGAGUGCCAGAGCCCAGCCGGCGCGGAGCGGGAGCGGUGCAGGCUGAGGUCUCCGAGCGGCUCGCCAUGGCUGGCCCGCAGCAGCAGCCCCCUUACCUGCACCUGGCCGAGCUGACGGCGUCCCAGUUCCUGGAAAUAUGGAAGCACUUUGACGCAGACGGAAAUG\
) } def
/len { sequence length } bind def

/coor [
[77.46611786 398.25057983]
[63.83539581 391.38281250]
[54.54116058 379.27581787]
[51.42878723 364.33337402]
[55.11624146 349.52239990]
[64.87137604 337.78356934]
[78.75730133 331.44766235]
[79.01764679 316.44992065]
[65.60356140 307.00878906]
[60.39869308 291.27804565]
[65.63832092 275.38394165]
[79.44901276 265.64096069]
[79.44901276 250.64094543]
[79.44901276 235.64094543]
[79.31884003 220.64151001]
[79.05850220 205.64376831]
[78.79815674 190.64602661]
[78.40767670 175.65112305]
[77.88706970 160.66015625]
[77.36647034 145.66918945]
[76.84587097 130.67822266]
[72.37298584 109.62679291]
[80.56528473 94.96144104]
[92.74729156 91.86553955]
[87.40013885 77.85097504]
[81.93156433 63.88334274]
[76.34197998 49.96369553]
[70.75240326 36.04405212]
[64.92207336 22.22351265]
[58.85274887 8.50624847]
[52.78342819 -5.21101618]
[46.71410751 -18.92827988]
[40.52597427 -32.59235764]
[34.21949005 -46.20221710]
[27.91300583 -59.81207657]
[21.60652351 -73.42193604]
[7.04091024 -78.94286346]
[0.83911681 -92.83503723]
[6.19224215 -106.68709564]
[-0.11424099 -120.29695892]
[-12.93651581 -129.56517029]
[-11.26723289 -144.36593628]
[-17.57371712 -157.97579956]
[-23.88019943 -171.58566284]
[-30.18668365 -185.19552612]
[-36.49316788 -198.80537415]
[-43.03491211 -212.30372620]
[-49.80995178 -225.68650818]
[-62.94617081 -234.50413513]
[-61.79158020 -249.35391235]
[-68.56661987 -262.73669434]
[-75.57290649 -275.99987793]
[-82.80833435 -289.13946533]
[-90.04376221 -302.27902222]
[-102.20776367 -306.62127686]
[-107.95851135 -317.73632812]
[-104.69141388 -329.40084839]
[-111.69770813 -342.66403198]
[-118.70399475 -355.92721558]
[-125.71028137 -369.19039917]
[-141.51843262 -378.60980225]
[-140.20634460 -396.09817505]
[-147.44177246 -409.23776245]
[-154.67720032 -422.37731934]
[-161.91262817 -435.51690674]
[-177.88186646 -444.66055298]
[-176.87351990 -462.16903687]
[-184.33590698 -475.18106079]
[-191.79829407 -488.19308472]
[-207.92382812 -497.05819702]
[-207.21949768 -514.58154297]
[-214.90660095 -527.46209717]
[-222.59370422 -540.34265137]
[-235.90284729 -550.84515381]
[-229.49511719 -566.54156494]
[-212.63829041 -564.72943115]
[-209.71316528 -548.02972412]
[-202.02606201 -535.14916992]
[-194.33895874 -522.26867676]
[-182.67625427 -518.99499512]
[-176.17137146 -508.30380249]
[-178.78627014 -495.65548706]
[-171.32388306 -482.64346313]
[-163.86149597 -469.63143921]
[-152.25735474 -466.15588379]
[-145.93901062 -455.35336304]
[-148.77305603 -442.75234985]
[-141.53762817 -429.61276245]
[-134.30218506 -416.47317505]
[-127.06676483 -403.33358765]
[-115.52469635 -399.65716553]
[-109.39479065 -388.74664307]
[-112.44710541 -376.19668579]
[-105.44081879 -362.93350220]
[-98.43452454 -349.67031860]
[-91.42823792 -336.40713501]
[-76.09318542 -327.89828491]
[-76.90418243 -309.51446533]
[-69.66875458 -296.37487793]
[-62.43332672 -283.23532104]
[-58.15196991 -281.06414795]
[-55.20245743 -276.16677856]
[-55.18383789 -269.51174927]
[-48.40879822 -256.12896729]
[-35.75717545 -248.26856995]
[-36.42716980 -232.46154785]
[-29.65213013 -219.07876587]
[-25.44870567 -216.76034546]
[-22.67094231 -211.76351929]
[-22.88330650 -205.11186218]
[-16.57682419 -191.50199890]
[-10.27034092 -177.89215088]
[-3.96385741 -164.28228760]
[2.34262586 -150.67242432]
[14.71381855 -142.37767029]
[13.49561787 -126.60343933]
[19.80210114 -112.99358368]
[33.83099747 -108.12268066]
[40.42054749 -94.41018677]
[35.21638107 -79.72841644]
[41.52286530 -66.11856079]
[47.82934952 -52.50870132]
[54.13583374 -38.89884186]
[59.81616974 -34.13895416]
[60.43137360 -24.99760056]
[66.50069427 -11.28033638]
[72.57001495 2.43692780]
[78.63933563 16.15419197]
[82.71639252 18.68825531]
[85.23032379 23.82287216]
[84.67205048 30.45446777]
[90.26162720 44.37411499]
[95.85121155 58.29376221]
[101.27611542 63.34283829]
[101.41470337 72.50382233]
[106.76185608 86.51838684]
[118.12131500 96.31443787]
[132.76965332 99.54338074]
[147.41799927 102.77231598]
[162.06634521 106.00125885]
[178.83569336 103.50624084]
[185.87542725 118.92955780]
[173.00364685 129.96376038]
[158.83740234 120.64960480]
[144.18905640 117.42066193]
[129.54071045 114.19171906]
[114.89237213 110.96278381]
[109.12848663 115.76148987]
[120.43558502 125.61794281]
[131.74267578 135.47439575]
[144.19769287 143.83338928]
[144.97119141 158.81343079]
[133.44337463 168.41079712]
[118.85164642 164.93498230]
[112.88855743 151.17135620]
[105.24463654 138.26513672]
[97.60071564 125.35891724]
[91.83683014 130.15762329]
[92.35743713 145.14859009]
[92.87803650 160.13955688]
[93.39863586 175.13050842]
[96.83171844 183.62503052]
[93.79589844 190.38569641]
[94.05623627 205.38343811]
[94.31658173 220.38117981]
[97.60171509 228.93399048]
[94.44901276 235.64094543]
[94.44901276 250.64094543]
[94.44901276 265.64096069]
[106.18373871 272.90093994]
[112.74063110 284.91928101]
[112.49776459 298.49942017]
[105.62581635 310.08923340]
[94.01538086 316.71026611]
[93.75504303 331.70800781]
[107.41270447 338.52203369]
[116.75454712 350.59234619]
[119.92573547 365.52239990]
[116.29663849 380.34780884]
[106.58780670 392.12493896]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 175]
[8 174]
[12 169]
[13 168]
[14 167]
[15 165]
[16 164]
[17 163]
[18 161]
[19 160]
[20 159]
[21 158]
[24 136]
[25 135]
[26 133]
[27 132]
[28 131]
[29 128]
[30 127]
[31 126]
[32 125]
[33 123]
[34 122]
[35 121]
[36 120]
[39 117]
[40 116]
[42 114]
[43 113]
[44 112]
[45 111]
[46 110]
[47 107]
[48 106]
[50 104]
[51 103]
[52 100]
[53 99]
[54 98]
[57 96]
[58 95]
[59 94]
[60 93]
[62 90]
[63 89]
[64 88]
[65 87]
[67 84]
[68 83]
[69 82]
[71 79]
[72 78]
[73 77]
[137 147]
[138 146]
[139 145]
[140 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
