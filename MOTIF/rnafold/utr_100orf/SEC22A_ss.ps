%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:27:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAGGCCCCACAAUGCACUUCGGGGCGCGUCACUCGGAGCGGCGGGUCCCGUCUCGACAGGUCUUCUCUGUUGGUUGAAAUGUCUAUGAUUUUAUCUGCCUCAGUCAUUCGUGUCAGAGAUGGACUGCCACUUUCUGCUUCUACUGAUUAUGAACAAAGCACAGGAAUGCAGGAGUGCA\
) } def
/len { sequence length } bind def

/coor [
[69.29716492 212.94647217]
[61.67691803 222.12095642]
[51.43307114 228.16058350]
[39.78442764 230.37396240]
[28.10777283 228.52339172]
[20.38220215 241.38090515]
[12.65663052 254.23840332]
[4.93105936 267.09591675]
[-2.79451203 279.95343018]
[5.62512636 292.68420410]
[7.67877674 307.80853271]
[2.95868611 322.32345581]
[-7.59796858 333.34707642]
[-21.89515495 338.69058228]
[-37.09415817 337.29306030]
[-50.17720413 329.43197632]
[-58.54664230 316.66815186]
[-60.54071808 301.53585815]
[-55.76350403 287.03961182]
[-45.16352081 276.05767822]
[-30.84540367 270.77047729]
[-15.65202141 272.22784424]
[-7.92645025 259.37036133]
[-0.20087925 246.51283264]
[7.52469206 233.65533447]
[15.25026321 220.79782104]
[5.74738836 205.40440369]
[5.34598541 187.23364258]
[14.24246502 171.28746033]
[30.06194496 161.99893188]
[48.49159241 161.99996948]
[55.53366852 148.75575256]
[62.57574081 135.51153564]
[69.61781311 122.26732635]
[76.65988922 109.02310944]
[90.96617126 90.65417480]
[88.36145020 75.88205719]
[85.75672913 61.10994339]
[83.15200043 46.33782959]
[73.13587189 34.09087753]
[78.54556274 20.21339417]
[75.94084167 5.44127846]
[73.33611298 -9.33083725]
[70.73139191 -24.10295296]
[68.12667084 -38.87506866]
[58.84257507 -44.60943222]
[54.35384369 -54.31391907]
[55.92975235 -64.66706848]
[62.80780411 -72.27007294]
[60.72020721 -87.12409210]
[58.63261032 -101.97811127]
[56.54501724 -116.83213043]
[54.45742035 -131.68615723]
[52.36982346 -146.54017639]
[50.28222656 -161.39419556]
[48.06508636 -176.22943115]
[45.71856689 -191.04475403]
[43.37205124 -205.86009216]
[41.02553558 -220.67541504]
[26.88742065 -223.08831787]
[14.20656300 -229.74331665]
[4.21884775 -239.97679138]
[-2.10695434 -252.77716064]
[-4.16314888 -266.88476562]
[-1.76146972 -280.91589355]
[4.84976292 -293.49847412]
[15.01124954 -303.40628052]
[27.71843338 -309.67834473]
[25.63083839 -324.53234863]
[23.54324150 -339.38638306]
[13.71936989 -347.77249146]
[12.29957962 -360.20700073]
[19.50385094 -369.94607544]
[17.67580986 -384.83428955]
[15.84776974 -399.72247314]
[13.63062859 -414.55770874]
[11.02590656 -429.32983398]
[8.42118359 -444.10192871]
[5.81646061 -458.87405396]
[3.21173811 -473.64617920]
[0.60701549 -488.41827393]
[-13.02508831 -496.07986450]
[-18.49471855 -510.72967529]
[-13.21928215 -525.45056152]
[0.31031978 -533.29168701]
[15.70582390 -530.55084229]
[25.69794273 -518.52203369]
[25.56870461 -502.88497925]
[15.37913132 -491.02301025]
[17.98385429 -476.25088501]
[20.58857727 -461.47879028]
[23.19330025 -446.70666504]
[25.79802322 -431.93453979]
[28.40274429 -417.16244507]
[31.09362221 -414.84323120]
[32.78174591 -411.09356689]
[32.80174637 -406.40515137]
[30.73596191 -401.55050659]
[32.56400299 -386.66232300]
[34.39204407 -371.77413940]
[45.69557953 -358.36596680]
[38.39726257 -341.47396851]
[40.48485947 -326.61996460]
[42.57245636 -311.76593018]
[58.00088120 -308.69207764]
[71.46955872 -300.51138306]
[81.34343719 -288.19549561]
[86.41652679 -273.21932983]
[86.05917358 -257.38446045]
[80.29618073 -242.60241699]
[69.80598450 -230.66392517]
[55.84085846 -223.02192688]
[58.18737411 -208.20660400]
[60.53389359 -193.39128113]
[62.88040924 -178.57595825]
[67.04396057 -172.44412231]
[65.13624573 -163.48179626]
[67.22384644 -148.62777710]
[69.31143951 -133.77375793]
[71.39904022 -118.91973114]
[73.48663330 -104.06571198]
[75.57422638 -89.21168518]
[77.66182709 -74.35766602]
[90.66024017 -60.06428909]
[82.89878845 -41.47979355]
[85.50350952 -26.70767593]
[88.10823059 -11.93556023]
[90.71295166 2.83655596]
[93.31768036 17.60867310]
[103.14749908 28.79902077]
[97.92411804 43.73310471]
[100.52883911 58.50522232]
[103.13356781 73.27733612]
[105.73828888 88.04945374]
[113.57576752 100.83905792]
[125.55529785 109.86627960]
[137.53483582 118.89350891]
[149.51435852 127.92073059]
[161.57221985 136.84307861]
[173.70747375 145.65985107]
[185.84272766 154.47663879]
[197.97798157 163.29341125]
[213.38853455 161.02342224]
[225.56980896 170.13775635]
[227.63891602 184.84335327]
[239.77418518 193.66012573]
[252.94165039 186.00915527]
[268.08337402 184.38179016]
[282.57592773 189.05998230]
[293.90841675 199.23321533]
[300.11740112 213.13891602]
[300.12713623 228.36782837]
[293.93594360 242.28146362]
[282.61648560 252.46917725]
[268.12991333 257.16592407]
[252.98612976 255.55792236]
[239.80888367 247.92378235]
[230.88119507 235.58618164]
[227.74986267 220.68267822]
[230.95739746 205.79537964]
[218.82214355 196.97860718]
[204.19689941 199.55502319]
[191.76443481 190.78643799]
[189.16120911 175.42866516]
[177.02595520 166.61189270]
[164.89068604 157.79510498]
[152.75543213 148.97833252]
[145.47550964 147.58654785]
[140.48713684 139.90026855]
[128.50759888 130.87304688]
[116.52807617 121.84581757]
[104.54853821 112.81858826]
[89.90409851 116.06518555]
[82.86203003 129.30940247]
[75.81995392 142.55360413]
[68.77787781 155.79782104]
[61.73580551 169.04203796]
[69.38484192 178.37258911]
[73.41654205 189.70735168]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 26]
[6 25]
[7 24]
[8 23]
[9 22]
[31 177]
[32 176]
[33 175]
[34 174]
[35 173]
[36 134]
[37 133]
[38 132]
[39 131]
[41 129]
[42 128]
[43 127]
[44 126]
[45 125]
[49 123]
[50 122]
[51 121]
[52 120]
[53 119]
[54 118]
[55 117]
[56 115]
[57 114]
[58 113]
[59 112]
[68 104]
[69 103]
[70 102]
[73 100]
[74 99]
[75 98]
[76 94]
[77 93]
[78 92]
[79 91]
[80 90]
[81 89]
[135 172]
[136 171]
[137 170]
[138 169]
[139 167]
[140 166]
[141 165]
[142 164]
[145 161]
[146 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
