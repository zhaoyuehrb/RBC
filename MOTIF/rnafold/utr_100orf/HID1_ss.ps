%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:20:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGUCGGGGCGGGGCCGACGAGGGCCGGGGGCGGGGCGCGCCGCUUGUCUCCUGCGAGAGCCGCGGGGGCCGCGGAGCUGGAGCCGGAGCUGAAGCCGGAGCCGGGUUGGAGUCUGGGCGGGGGCCGGGCCGGAGCGGGCUCCAGAGACAUGGGGUCGACCGACUCCAAGCUGAACUUCCGGAAGGCGGUGAUCCAGCUCACCACCAAGACGCAGCCCGUGGAAGCCACCGAUGAUGCCUUUUGGGACC\
) } def
/len { sequence length } bind def

/coor [
[144.92457581 258.55612183]
[152.21740723 249.09962463]
[162.29498291 242.62815857]
[159.66963196 227.85969543]
[157.04429626 213.09123230]
[154.41894531 198.32276917]
[151.79359436 183.55430603]
[149.07551575 168.80262756]
[146.26478577 154.06831360]
[143.45407104 139.33399963]
[136.03918457 138.20730591]
[121.20941162 135.95393372]
[113.79451752 134.82723999]
[106.73396301 148.06159973]
[99.67340088 161.29597473]
[92.61284637 174.53034973]
[97.45166779 189.57565308]
[90.16036987 203.59750366]
[75.06474304 208.27699280]
[61.12075424 200.83786011]
[56.60113144 185.69360352]
[64.18727875 171.82904053]
[79.37847900 167.46978760]
[86.43903351 154.23541260]
[93.49959564 141.00105286]
[100.56015015 127.76667786]
[89.06275940 118.13288879]
[77.26843262 127.40077972]
[71.19808197 142.01110840]
[56.41020966 143.79101562]
[44.61588287 153.05891418]
[32.82155609 162.32681274]
[21.02722931 171.59469604]
[17.69659996 187.28822327]
[3.28638697 194.33984375]
[-11.14912701 187.34016418]
[-14.53625107 171.65873718]
[-4.27667427 159.32501221]
[11.75933456 159.80036926]
[23.55366135 150.53248596]
[35.34798813 141.26458740]
[47.14231491 131.99668884]
[52.36905670 118.04927826]
[68.00053406 115.60645294]
[79.79486084 106.33856201]
[77.03392792 99.36524200]
[62.19483948 97.17402649]
[71.51206207 85.41859436]
[68.75112915 78.44526672]
[53.80912399 79.76303864]
[38.86711884 81.08080292]
[23.92511368 82.39857483]
[8.98311043 83.71633911]
[-5.95889378 85.03410339]
[-20.90089798 86.35187531]
[-35.84290314 87.66963959]
[-47.20724487 98.99356842]
[-63.12916946 97.02583313]
[-71.39472961 83.27592468]
[-65.66330719 68.29158783]
[-50.33154678 63.56753159]
[-37.16067123 72.72763824]
[-22.21866608 71.40987396]
[-7.27666187 70.09210205]
[7.66534233 68.77433777]
[22.60734558 67.45656586]
[37.54935074 66.13880157]
[52.49135590 64.82102966]
[67.43335724 63.50326157]
[80.09827423 55.46586227]
[87.65262604 42.50701141]
[95.20697021 29.54815865]
[102.76132202 16.58930779]
[110.31566620 3.63045621]
[117.87001801 -9.32839489]
[119.48114777 -18.29324722]
[125.60159302 -22.40176964]
[133.31817627 -35.26467133]
[141.03477478 -48.12757111]
[148.75137329 -60.99047089]
[155.47711182 -74.39809418]
[161.17379761 -88.27424622]
[166.87048340 -102.15040588]
[172.56718445 -116.02656555]
[170.65058899 -131.73126221]
[182.64173889 -140.56649780]
[188.33842468 -154.44265747]
[194.03512573 -168.31881714]
[199.55699158 -182.26545715]
[204.90316772 -196.28039551]
[210.24934387 -210.29533386]
[215.59552002 -224.31027222]
[206.15931702 -238.36242676]
[206.95976257 -255.10337830]
[217.48263550 -267.93383789]
[233.42039490 -271.91455078]
[238.59002686 -285.99557495]
[243.75967407 -300.07656860]
[248.92932129 -314.15759277]
[254.09896851 -328.23858643]
[259.26861572 -342.31958008]
[254.95205688 -362.02731323]
[270.37255859 -373.71740723]
[275.18670654 -387.92388916]
[280.00085449 -402.13037109]
[277.10195923 -417.68371582]
[288.51467896 -427.25445557]
[293.32882690 -441.46093750]
[298.14297485 -455.66741943]
[302.95712280 -469.87387085]
[307.77130127 -484.08035278]
[312.58544922 -498.28683472]
[317.39959717 -512.49328613]
[322.21374512 -526.69976807]
[322.00204468 -535.80578613]
[327.17868042 -541.05389404]
[332.17098999 -555.19873047]
[335.07421875 -569.91510010]
[335.82788086 -584.89611816]
[323.91882324 -594.66754150]
[320.09173584 -609.40545654]
[325.61145020 -623.40539551]
[338.16613770 -631.37512207]
[338.91979980 -646.35620117]
[339.67346191 -661.33728027]
[334.43060303 -677.46020508]
[348.47204590 -686.96142578]
[361.48904419 -676.09893799]
[354.65454102 -660.58361816]
[353.90087891 -645.60253906]
[353.14718628 -630.62145996]
[364.83865356 -621.43194580]
[368.92544556 -606.94879150]
[363.63854980 -592.66931152]
[350.80892944 -584.14245605]
[350.05526733 -569.16143799]
[364.35061646 -564.61572266]
[378.64465332 -560.07037354]
[386.68206787 -572.73529053]
[394.71945190 -585.40020752]
[402.75686646 -598.06512451]
[410.79425049 -610.73004150]
[418.83166504 -623.39495850]
[426.86907959 -636.05987549]
[423.17730713 -651.42694092]
[431.50411987 -664.85974121]
[446.90933228 -668.38879395]
[460.25335693 -659.92047119]
[463.61935425 -644.47875977]
[455.01040649 -631.22503662]
[439.53399658 -628.02246094]
[431.49658203 -615.35754395]
[423.45919800 -602.69262695]
[415.42178345 -590.02770996]
[407.38436890 -577.36279297]
[399.34698486 -564.69787598]
[391.30957031 -552.03295898]
[374.03985596 -542.39263916]
[357.58822632 -542.56848145]
[346.31582642 -550.20642090]
[341.32354736 -536.06158447]
[336.42022705 -521.88562012]
[331.60607910 -507.67916870]
[326.79193115 -493.47268677]
[321.97775269 -479.26620483]
[317.16360474 -465.05972290]
[312.34945679 -450.85324097]
[307.53530884 -436.64678955]
[302.72113037 -422.44030762]
[305.96438599 -407.90310669]
[294.20733643 -397.31622314]
[289.39318848 -383.10974121]
[284.57901001 -368.90325928]
[289.89648438 -360.21389771]
[289.55978394 -349.81283569]
[283.43908691 -341.12698364]
[273.34960938 -337.14996338]
[268.17996216 -323.06893921]
[263.01031494 -308.98794556]
[257.84069824 -294.90692139]
[252.67103577 -280.82592773]
[247.50140381 -266.74490356]
[255.92636108 -256.40625000]
[258.16690063 -243.14939880]
[253.53353882 -230.41297913]
[243.13400269 -221.55421448]
[229.61045837 -218.96408081]
[224.26428223 -204.94915771]
[218.91810608 -190.93421936]
[213.57191467 -176.91928101]
[214.65991211 -172.29261780]
[212.87078857 -166.93209839]
[207.91127014 -162.62213135]
[202.21458435 -148.74597168]
[196.51789856 -134.86981201]
[198.84194946 -120.15763855]
[186.44332886 -110.32987976]
[180.74664307 -96.45372009]
[175.04995728 -82.57756042]
[169.35327148 -68.70140839]
[181.49330139 -77.51161957]
[196.24049377 -80.25389862]
[210.73606873 -76.39664459]
[222.16998291 -66.68759918]
[228.32572937 -53.00889969]
[228.00997925 -38.01222610]
[221.28396606 -24.60474014]
[209.45153809 -15.38554478]
[194.80645752 -12.14181900]
[180.18774414 -15.50237370]
[168.42930603 -24.81575012]
[161.81054688 -38.27651215]
[161.61427307 -53.27387619]
[153.89767456 -40.41097641]
[146.18107605 -27.54807663]
[138.46449280 -14.68517780]
[130.82887268 -1.77404702]
[123.27452087 11.18480396]
[115.72017670 24.14365578]
[108.16582489 37.10250854]
[100.61148071 50.06135941]
[93.05712891 63.02021027]
[126.56541443 60.04038239]
[157.03918457 87.73624420]
[158.18838501 136.52328491]
[160.99909973 151.25759888]
[163.80981445 165.99189758]
[168.48081970 173.81149292]
[166.56205750 180.92895508]
[169.18740845 195.69741821]
[171.81275940 210.46588135]
[174.43809509 225.23434448]
[177.06344604 240.00280762]
[194.64678955 245.72200012]
[206.81819153 259.52740479]
[210.25689697 277.52102661]
[204.09162903 294.68096924]
[190.11929321 306.26287842]
[193.29939270 320.92187500]
[204.71810913 332.69241333]
[199.97422791 348.39041138]
[183.94786072 351.86715698]
[173.12556458 339.54605103]
[178.64038086 324.10198975]
[175.46026611 309.44296265]
[163.89396667 307.46206665]
[153.63760376 301.68951416]
[145.89758301 292.77761841]
[141.59324646 281.74951172]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 233]
[4 232]
[5 231]
[6 230]
[7 229]
[8 227]
[9 226]
[10 225]
[13 26]
[14 25]
[15 24]
[16 23]
[27 45]
[28 44]
[30 42]
[31 41]
[32 40]
[33 39]
[49 69]
[50 68]
[51 67]
[52 66]
[53 65]
[54 64]
[55 63]
[56 62]
[70 222]
[71 221]
[72 220]
[73 219]
[74 218]
[75 217]
[77 216]
[78 215]
[79 214]
[80 213]
[81 200]
[82 199]
[83 198]
[84 197]
[86 195]
[87 194]
[88 193]
[89 190]
[90 189]
[91 188]
[92 187]
[96 182]
[97 181]
[98 180]
[99 179]
[100 178]
[101 177]
[103 173]
[104 172]
[105 171]
[107 169]
[108 168]
[109 167]
[110 166]
[111 165]
[112 164]
[113 163]
[114 162]
[116 161]
[117 160]
[118 136]
[119 135]
[123 131]
[124 130]
[125 129]
[138 157]
[139 156]
[140 155]
[141 154]
[142 153]
[143 152]
[144 151]
[238 245]
[239 244]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
