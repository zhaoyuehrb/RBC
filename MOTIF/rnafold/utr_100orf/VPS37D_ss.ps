%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:28:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGCCGGAGCCGGAGCGGAUCCUGGAGCCGGAGCGGAGCGGAGCGGAGCGGAGCCGGGGCGGAGCGGGCCGAGCGGGCCGAGCCAGCAGCCGAGCUGGGGGCGCGGGCGGGCGGCAUGUACCGGGCCCGGGCGGCGCGGGCGGGGCCGGAGCCCGGCAGCCCGGGGCGCUUUGGGAUCCUCAGCACCGGGCAGCUCCGGGACCUGCUUCAGGAUG\
) } def
/len { sequence length } bind def

/coor [
[-39.97656250 760.41741943]
[-42.79585648 775.15008545]
[-45.61514664 789.88275146]
[-48.43443680 804.61541748]
[-42.54215622 819.91943359]
[-53.05873489 832.50250244]
[-69.16561890 829.42022705]
[-74.29342651 813.84344482]
[-63.16711044 801.79614258]
[-60.34781647 787.06347656]
[-57.52852631 772.33081055]
[-54.70923615 757.59814453]
[-62.08354187 751.85583496]
[-66.89125824 743.77343750]
[-68.43650818 734.43835449]
[-66.46569824 725.12463379]
[-61.20803070 717.11883545]
[-53.34970093 711.54266357]
[-43.94454575 709.19549561]
[-40.27339554 694.65167236]
[-36.60224533 680.10784912]
[-32.93109512 665.56402588]
[-29.25994492 651.02020264]
[-25.58879471 636.47637939]
[-21.91764450 621.93255615]
[-18.24649429 607.38873291]
[-14.57534504 592.84490967]
[-10.90419483 578.30108643]
[-15.29127216 564.06726074]
[-4.41177940 552.58044434]
[-0.74062926 538.03662109]
[-9.96962738 523.97528076]
[-6.09522438 507.26107788]
[8.96038723 498.34979248]
[12.41962528 483.75411987]
[15.87886333 469.15844727]
[19.33810234 454.56277466]
[22.79734039 439.96710205]
[26.25657845 425.37142944]
[15.32897377 415.24954224]
[10.90559387 400.92160034]
[14.27008152 386.20608521]
[24.61647797 375.07733154]
[39.23946762 370.59231567]
[42.69870758 355.99664307]
[46.15794373 341.40097046]
[41.56431580 327.23242188]
[52.27559280 315.58856201]
[55.73483276 300.99288940]
[58.87484360 286.32522583]
[61.69413757 271.59255981]
[64.51342773 256.85989380]
[57.86798096 240.61608887]
[70.02848053 226.78613281]
[72.63320923 212.01402283]
[75.23793030 197.24189758]
[77.84265137 182.46978760]
[80.44737244 167.69767761]
[83.05209351 152.92555237]
[85.65682220 138.15344238]
[88.26154327 123.38132477]
[76.67807007 111.85601044]
[74.19230652 95.70575714]
[81.77393341 81.23065948]
[74.84770203 67.92549896]
[67.92147827 54.62033463]
[54.68619537 45.95211792]
[55.67246628 31.09020233]
[48.74623489 17.78503990]
[41.82000732 4.47987795]
[34.89377975 -8.82528400]
[20.08948708 -13.66994190]
[13.25484180 -27.26193619]
[17.96471596 -41.34571075]
[11.03848743 -54.65087128]
[-1.00337875 -59.26527786]
[-6.49912405 -70.48670197]
[-2.99319506 -82.06158447]
[-9.72518253 -95.46607208]
[-16.45717049 -108.87055969]
[-29.56498146 -117.73035431]
[-28.36266518 -132.57635498]
[-35.09465408 -145.98083496]
[-41.82664108 -159.38533020]
[-56.55890656 -164.44479370]
[-63.19514847 -178.13475037]
[-58.28093719 -192.14852905]
[-65.01292419 -205.55302429]
[-71.74491119 -218.95750427]
[-78.47689819 -232.36199951]
[-90.98870087 -243.80278015]
[-83.45864105 -258.99273682]
[-66.77779388 -255.96194458]
[-65.07241058 -239.09399414]
[-58.34042358 -225.68949890]
[-51.60843658 -212.28500366]
[-44.87644958 -198.88052368]
[-30.70110512 -194.45387268]
[-23.68296051 -180.95570374]
[-28.42215157 -166.11732483]
[-21.69016457 -152.71282959]
[-14.95817566 -139.30833435]
[-2.33188272 -131.40733337]
[-3.05268073 -115.60254669]
[3.67930675 -102.19805908]
[10.41129494 -88.79357147]
[25.57208252 -79.95198822]
[24.34365082 -61.57709885]
[31.26987839 -48.27193832]
[45.50810242 -44.05192184]
[52.72182083 -30.65726089]
[48.19894028 -15.75151348]
[55.12517166 -2.44635105]
[62.05139923 10.85881138]
[68.97763062 24.16397476]
[81.71749878 31.88051414]
[81.22663879 47.69410324]
[88.15287018 60.99926758]
[95.07909393 74.30442810]
[106.77136230 74.72894287]
[117.10941315 80.20743561]
[129.76028442 72.14794159]
[142.41114807 64.08844757]
[155.06202698 56.02895355]
[167.71290588 47.96945953]
[180.36376953 39.90996552]
[192.89608765 31.66732979]
[205.30720520 23.24329758]
[217.71830750 14.81926632]
[230.12942505 6.39523411]
[242.54052734 -2.02879739]
[254.95164490 -10.45282841]
[254.87019348 -22.33656693]
[260.47640991 -32.67901230]
[270.27673340 -38.96743011]
[281.77545166 -39.73781586]
[292.10980225 -34.91425323]
[304.76068115 -42.97374725]
[317.41156006 -51.03324127]
[320.58709717 -66.51521301]
[333.82577515 -75.14730072]
[349.27331543 -71.80824280]
[357.76495361 -58.47903824]
[354.26275635 -43.06767273]
[340.84451294 -34.71743393]
[325.47103882 -38.38237000]
[312.82015991 -30.32287598]
[300.16931152 -22.26338196]
[297.28710938 -4.18278551]
[281.83706665 6.22462797]
[263.37567139 1.95828271]
[250.96456909 10.38231468]
[238.55345154 18.80634689]
[226.14234924 27.23037720]
[213.73123169 35.65440750]
[201.32011414 44.07844162]
[199.55894470 48.51405716]
[194.99472046 51.89208221]
[188.42326355 52.56083679]
[175.77239990 60.62033081]
[163.12152100 68.67982483]
[150.47065735 76.73931885]
[137.81977844 84.79881287]
[125.16890717 92.85830688]
[124.98985291 107.74500275]
[116.71865082 120.12372589]
[103.03366089 125.98604584]
[100.42893982 140.75816345]
[97.82421112 155.53027344]
[95.21949005 170.30239868]
[92.61476898 185.07450867]
[90.01004791 199.84663391]
[87.40531921 214.61874390]
[84.80059814 229.39085388]
[91.54498291 240.38233948]
[89.07388306 252.63049316]
[79.24610138 259.67919922]
[76.42680359 274.41186523]
[73.60751343 289.14453125]
[75.32012939 294.06750488]
[75.00691986 298.69332886]
[73.11961365 302.30081177]
[70.33050537 304.45214844]
[66.87126923 319.04782104]
[71.21746826 334.26034546]
[60.75361633 344.86019897]
[57.29438019 359.45587158]
[53.83514023 374.05154419]
[64.88985443 384.62228394]
[69.14115906 399.21075439]
[65.54345703 413.87100220]
[55.16021729 424.68969727]
[40.85224915 428.83068848]
[37.39301300 443.42636108]
[33.93377304 458.02203369]
[30.47453690 472.61770630]
[27.01529884 487.21337891]
[23.55606079 501.80905151]
[31.89855194 512.38055420]
[32.61994934 525.63311768]
[25.68063164 536.71777344]
[13.80318928 541.70776367]
[10.13203907 556.25158691]
[14.25653172 571.52569580]
[3.63962364 581.97222900]
[-0.03152650 596.51605225]
[-3.70267677 611.05987549]
[-7.37382698 625.60369873]
[-11.04497719 640.14752197]
[-14.71612740 654.69134521]
[-18.38727760 669.23516846]
[-22.05842781 683.77899170]
[-25.72957802 698.32281494]
[-29.40072823 712.86663818]
[-17.47737503 730.19158936]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 12]
[2 11]
[3 10]
[4 9]
[19 214]
[20 213]
[21 212]
[22 211]
[23 210]
[24 209]
[25 208]
[26 207]
[27 206]
[28 205]
[30 203]
[31 202]
[34 198]
[35 197]
[36 196]
[37 195]
[38 194]
[39 193]
[44 188]
[45 187]
[46 186]
[48 184]
[49 183]
[50 179]
[51 178]
[52 177]
[54 174]
[55 173]
[56 172]
[57 171]
[58 170]
[59 169]
[60 168]
[61 167]
[64 119]
[65 118]
[66 117]
[68 115]
[69 114]
[70 113]
[71 112]
[74 109]
[75 108]
[78 106]
[79 105]
[80 104]
[82 102]
[83 101]
[84 100]
[87 97]
[88 96]
[89 95]
[90 94]
[121 164]
[122 163]
[123 162]
[124 161]
[125 160]
[126 159]
[127 156]
[128 155]
[129 154]
[130 153]
[131 152]
[132 151]
[137 148]
[138 147]
[139 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
