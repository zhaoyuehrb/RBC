%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:35:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGCAGGGCGGUAACUCUGGGCGGGGCUGGGCUCCAGGGCUGGACAGCACAGUCCCUCUGAACUGCACAGAGACCUCGCAGGCCCCGAGAACUGUCGCCCUUCCACGAUGUGGCUCCGUGCCUUUAUCCUGGCCACUCUCUCUGCUUCCGCGGCUUGGGCAGGGCAUCCGUCCUCGCCACCUGUGGUGGACACCGUGCAUGGCAAAG\
) } def
/len { sequence length } bind def

/coor [
[71.58648682 188.51251221]
[84.22379303 179.87785339]
[82.42434692 164.98619080]
[80.62490845 150.09451294]
[78.82546997 135.20283508]
[67.86627197 124.96095276]
[52.88702774 124.17215729]
[37.90778351 123.38336945]
[22.92853546 122.59457397]
[7.94929028 121.80578613]
[-7.02995539 121.01699066]
[-22.00920105 120.22820282]
[-36.98844910 119.43940735]
[-51.96769333 118.65061951]
[-69.49847412 128.60015869]
[-85.24124146 117.37441254]
[-100.23742676 117.03623199]
[-115.23361969 116.69804382]
[-129.20472717 124.12225342]
[-141.75431824 116.09997559]
[-156.75050354 115.76179504]
[-171.74668884 115.42361450]
[-186.74287415 115.08543396]
[-208.24716187 151.30014038]
[-222.32101440 156.48925781]
[-236.39485168 161.67837524]
[-250.46870422 166.86747742]
[-264.54254150 172.05659485]
[-278.61639404 177.24569702]
[-292.69024658 182.43481445]
[-302.96170044 194.46842957]
[-317.57977295 191.61174011]
[-331.65362549 196.80085754]
[-345.64788818 202.20092773]
[-359.55938721 207.81072998]
[-373.47088623 213.42053223]
[-387.38241577 219.03033447]
[-397.05569458 232.27267456]
[-413.32934570 230.24774170]
[-419.46243286 215.03860474]
[-409.14572144 202.29113770]
[-392.99221802 205.11883545]
[-379.08071899 199.50901794]
[-365.16918945 193.89921570]
[-351.25769043 188.28941345]
[-348.59701538 184.32162476]
[-343.41485596 181.98399353]
[-336.84274292 182.72700500]
[-322.76889038 177.53788757]
[-313.50408936 165.87544250]
[-297.87933350 168.36097717]
[-283.80551147 163.17185974]
[-269.73165894 157.98274231]
[-255.65780640 152.79364014]
[-241.58396912 147.60452271]
[-227.51011658 142.41540527]
[-213.43627930 137.22630310]
[-212.42474365 129.79483032]
[-227.28768921 127.77175140]
[-242.15060425 125.74843597]
[-240.12702942 110.88555145]
[-225.26461792 112.90880585]
[-210.40167236 114.93188477]
[-209.39012146 107.50040436]
[-221.56501770 98.73844147]
[-233.73991394 89.97647858]
[-245.91479492 81.21450806]
[-258.74819946 82.51548004]
[-268.70861816 74.96569824]
[-270.78515625 63.04772186]
[-282.82696533 54.10374451]
[-299.17068481 52.75658035]
[-305.93026733 37.81535721]
[-296.15203857 24.65032578]
[-279.89498901 26.80454063]
[-273.88299561 42.06193161]
[-261.84118652 51.00590897]
[-244.32579041 52.08073807]
[-237.15283203 69.03961945]
[-224.97793579 77.80158234]
[-212.80305481 86.56355286]
[-200.62815857 95.32551575]
[-186.40469360 100.08924866]
[-171.40850830 100.42742920]
[-156.41232300 100.76560974]
[-141.41613770 101.10379028]
[-128.51765442 93.65539551]
[-114.89543915 101.70185852]
[-99.89924622 102.04003906]
[-84.90306091 102.37821960]
[-78.18017578 94.68051910]
[-68.11853027 91.89631653]
[-57.97690582 95.17793274]
[-51.17890167 103.67137146]
[-36.19965363 104.46015930]
[-21.22040939 105.24895477]
[-6.24116325 106.03775024]
[8.73808289 106.82653809]
[23.71732903 107.61533356]
[38.69657516 108.40412140]
[53.67581940 109.19291687]
[68.65506744 109.98170471]
[72.98579407 81.35169983]
[98.22844696 67.29242706]
[104.35694885 53.60150528]
[110.48544312 39.91057587]
[109.06168365 24.15356445]
[121.32367706 15.69822502]
[127.45217896 2.00729823]
[133.58068848 -11.68362808]
[139.70918274 -25.37455559]
[137.39593506 -43.64212036]
[152.00297546 -53.36726761]
[157.92498779 -67.14876556]
[163.84701538 -80.93025970]
[159.26252747 -96.30433655]
[168.54200745 -109.39138794]
[184.56701660 -110.15215302]
[195.04454041 -98.00303650]
[191.93711853 -82.26380157]
[177.62850952 -75.00823975]
[171.70648193 -61.22674179]
[165.78446960 -47.44524384]
[169.97355652 -36.09616089]
[165.15136719 -24.56554222]
[153.40011597 -19.24605370]
[147.27160645 -5.55512714]
[141.14311218 8.13579941]
[135.01460266 21.82672691]
[136.87672424 36.60447311]
[124.17637634 46.03907776]
[118.04787445 59.73000717]
[111.91937256 73.42092896]
[114.72427368 80.37668610]
[126.66632080 71.29992676]
[138.60836792 62.22317123]
[145.87411499 49.10033417]
[159.02366638 41.88302994]
[173.99559021 42.80041504]
[186.16560364 51.56914139]
[191.77485657 65.48087311]
[189.09083557 80.23879242]
[178.94255066 91.28470612]
[164.46443176 95.20694733]
[150.13005066 90.79526520]
[135.23205566 92.54173279]
[120.33408356 94.28819275]
[123.13898468 101.24394989]
[137.05049133 106.85375214]
[150.96200562 112.46356201]
[164.87350464 118.07337189]
[178.78501892 123.68317413]
[194.47741699 121.66842651]
[203.38746643 133.60409546]
[217.29898071 139.21389771]
[231.51300049 130.04696655]
[248.22425842 131.14704895]
[260.86059570 141.88302612]
[264.57070923 157.87330627]
[278.56497192 163.27337646]
[292.55923462 168.67344666]
[306.59368896 173.96818542]
[320.66754150 179.15728760]
[334.74136353 184.34640503]
[348.81521606 189.53552246]
[362.88906860 194.72462463]
[378.95028687 191.41267395]
[389.64547729 203.84426880]
[383.97235107 219.23088074]
[367.76690674 221.74406433]
[357.69995117 208.79847717]
[343.62609863 203.60935974]
[329.55224609 198.42025757]
[315.47842407 193.23114014]
[301.40457153 188.04202271]
[294.04013062 188.67764282]
[287.15914917 182.66769409]
[273.16491699 177.26763916]
[259.17065430 171.86756897]
[248.68150330 180.12849426]
[235.37335205 182.14353943]
[222.70668030 177.28054810]
[214.02876282 166.71000671]
[211.68917847 153.12541199]
[197.77766418 147.51560974]
[183.08030701 149.93161011]
[173.17521667 137.59468079]
[159.26370239 131.98487854]
[145.35218811 126.37506866]
[131.44068909 120.76526642]
[117.52917480 115.15545654]
[111.57617188 119.71743774]
[120.69993591 131.62361145]
[108.79361725 140.74717712]
[99.67015076 128.84140015]
[93.71714020 133.40339661]
[95.51658630 148.29505920]
[97.31602478 163.18673706]
[99.11546326 178.07841492]
[113.44575500 183.45442200]
[123.62757874 194.88198853]
[127.32123566 209.73510742]
[123.67794800 224.60067749]
[113.53491974 236.06268311]
[99.22293854 241.48724365]
[84.03079987 239.62782288]
[71.44953918 230.91171265]
[64.37023926 217.34181213]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 199]
[3 198]
[4 197]
[5 196]
[6 102]
[7 101]
[8 100]
[9 99]
[10 98]
[11 97]
[12 96]
[13 95]
[14 94]
[16 90]
[17 89]
[18 88]
[20 86]
[21 85]
[22 84]
[23 83]
[24 57]
[25 56]
[26 55]
[27 54]
[28 53]
[29 52]
[30 51]
[32 49]
[33 48]
[34 45]
[35 44]
[36 43]
[37 42]
[64 82]
[65 81]
[66 80]
[67 79]
[70 77]
[71 76]
[104 133]
[105 132]
[106 131]
[108 129]
[109 128]
[110 127]
[111 126]
[113 123]
[114 122]
[115 121]
[148 191]
[149 190]
[150 189]
[151 188]
[152 187]
[154 185]
[155 184]
[159 179]
[160 178]
[161 177]
[162 175]
[163 174]
[164 173]
[165 172]
[166 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
