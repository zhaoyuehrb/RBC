%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:45:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUCAGCUCAGCGAAGCCGCCGCAGAGGCUGAUGGGGGGCUGGAGGCUGUGAGGCUUCCAGCGUCGGUACCAUGGCGACGCGCGGUGGGGCUGGGGUGGCAAUGGCGGUUUGGUCCCUCUUAUCCGCCCGGGCCGUGACCGCGUUCCUUCUGUUGUUCCUCCCUCGCUUCU\
) } def
/len { sequence length } bind def

/coor [
[49.02610016 299.70776367]
[53.44767380 314.04125977]
[46.58868790 327.38122559]
[32.35840225 332.12454224]
[18.86734009 325.56777954]
[13.80465508 311.44897461]
[6.22570419 324.39346313]
[9.59118843 334.78549194]
[6.72044992 345.09671021]
[-1.19882882 351.96588135]
[-11.37590027 353.29351807]
[-19.42255402 365.95257568]
[-27.46920586 378.61160278]
[-27.62692833 395.01000977]
[-42.03829575 402.83587646]
[-55.87813187 394.03866577]
[-54.90919495 377.66818237]
[-40.12825012 370.56497192]
[-32.08159637 357.90591431]
[-24.03494453 345.24688721]
[-24.66507721 325.94241333]
[-6.71877384 316.81451416]
[0.86017680 303.87002563]
[7.71881151 290.52990723]
[13.83654308 276.83416748]
[19.95427322 263.13839722]
[26.07200432 249.44267273]
[32.18973541 235.74693298]
[38.30746841 222.05117798]
[38.16395187 214.63409424]
[44.66403580 208.16276550]
[51.03088760 194.58103943]
[49.42733765 179.77301025]
[62.29063797 170.56181335]
[68.65748596 156.98008728]
[75.02433777 143.39836121]
[81.39118958 129.81663513]
[87.75804138 116.23491669]
[81.51548767 102.59561157]
[67.07495117 98.53719330]
[52.63440704 94.47877502]
[38.19386673 90.42035675]
[23.75332642 86.36193085]
[9.31278515 82.30351257]
[-5.12775564 78.24509430]
[-19.56829643 74.18666840]
[-34.00883865 70.12825012]
[-48.44937897 66.06983185]
[-64.19792175 70.64315796]
[-75.84390259 59.09745407]
[-71.40692902 43.30994797]
[-55.45137787 39.52147675]
[-44.39095688 51.62928772]
[-29.95041656 55.68770981]
[-15.50987625 59.74613190]
[-1.06933510 63.80455017]
[13.37120628 67.86296844]
[27.81174660 71.92139435]
[42.25228882 75.97981262]
[56.69282913 80.03823090]
[71.13336945 84.09665680]
[85.57391357 88.15507507]
[94.63271332 76.19940186]
[86.81860352 63.39550400]
[79.00450134 50.59160614]
[71.19039154 37.78771210]
[57.39682388 30.03865051]
[57.37117767 15.14406776]
[49.55707550 2.34017110]
[36.14471817 -8.03022099]
[42.39691925 -23.78922653]
[59.27083969 -22.14389038]
[62.36096954 -5.47393417]
[70.17507172 7.32996225]
[83.40972900 14.16320133]
[83.99429321 29.97360611]
[91.80839539 42.77750015]
[99.62249756 55.58139801]
[107.43660736 68.38529205]
[122.13487244 71.37879944]
[134.33421326 62.65091324]
[146.53356934 53.92302704]
[158.73291016 45.19514465]
[170.93225098 36.46726227]
[183.13160706 27.73937798]
[195.33094788 19.01149368]
[197.86436462 1.72033334]
[211.83380127 -8.20852757]
[228.33415222 -5.04345131]
[240.37207031 -13.99268913]
[252.40997314 -22.94192696]
[264.44787598 -31.89116287]
[270.90667725 -46.33395767]
[285.73687744 -47.71785736]
[297.77478027 -56.66709518]
[309.81268311 -65.61633301]
[321.85058594 -74.56556702]
[333.88848877 -83.51480865]
[345.92639160 -92.46404266]
[344.26303101 -107.66866302]
[350.39300537 -121.57261658]
[362.57846069 -130.48222351]
[377.48770142 -132.08552551]
[391.10592651 -126.05149078]
[403.14382935 -135.00073242]
[409.60266113 -149.44352722]
[424.43283081 -150.82742310]
[436.47073364 -159.77665710]
[438.52359009 -175.44705200]
[451.10656738 -185.00971985]
[466.75439453 -182.79127502]
[476.18347168 -170.10791016]
[473.79971313 -154.48442078]
[461.01736450 -145.18995667]
[445.41998291 -147.73875427]
[433.38204956 -138.78952026]
[427.78427124 -124.98683167]
[412.09307861 -122.96282196]
[400.05517578 -114.01358795]
[401.90997314 -99.23436737]
[396.07931519 -85.41918182]
[384.03683472 -76.31723022]
[368.95635986 -74.45285797]
[354.87561035 -80.42613983]
[342.83770752 -71.47690582]
[330.79980469 -62.52766418]
[318.76190186 -53.57842636]
[306.72399902 -44.62918854]
[294.68609619 -35.67995071]
[289.08831787 -21.87726784]
[273.39712524 -19.85325813]
[261.35919189 -10.90402126]
[249.32130432 -1.95478415]
[237.28340149 6.99445343]
[237.20413208 19.90085220]
[229.58267212 30.55737495]
[217.02661133 34.93190765]
[204.05882263 31.21084023]
[191.85948181 39.93872452]
[179.66014099 48.66660690]
[167.46078491 57.39449310]
[155.26144409 66.12237549]
[143.06210327 74.85025787]
[130.86274719 83.57814026]
[145.75486755 81.78231812]
[160.32579041 85.34433746]
[172.70983887 93.80811310]
[181.32130432 106.08991241]
[185.05755615 120.61714172]
[183.44018555 135.52969360]
[176.67630005 148.91812134]
[165.63195801 159.06811523]
[151.72131348 164.68005371]
[136.72550964 165.03536987]
[122.56468964 160.08854675]
[111.05201721 150.47302246]
[103.66162109 137.41996765]
[101.33976746 122.60176849]
[94.97291565 136.18348694]
[88.60606384 149.76521301]
[82.23921204 163.34693909]
[75.87236023 176.92866516]
[77.02051544 192.70814514]
[64.61260986 200.94789124]
[58.24576187 214.52961731]
[52.00320816 228.16891479]
[45.88547897 241.86465454]
[39.76774597 255.56039429]
[33.65001678 269.25613403]
[27.53228569 282.95187378]
[21.41455460 296.64761353]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 23]
[7 22]
[11 20]
[12 19]
[13 18]
[24 171]
[25 170]
[26 169]
[27 168]
[28 167]
[29 166]
[31 165]
[32 164]
[34 162]
[35 161]
[36 160]
[37 159]
[38 158]
[39 62]
[40 61]
[41 60]
[42 59]
[43 58]
[44 57]
[45 56]
[46 55]
[47 54]
[48 53]
[63 79]
[64 78]
[65 77]
[66 76]
[68 74]
[69 73]
[80 144]
[81 143]
[82 142]
[83 141]
[84 140]
[85 139]
[86 138]
[89 134]
[90 133]
[91 132]
[92 131]
[94 129]
[95 128]
[96 127]
[97 126]
[98 125]
[99 124]
[104 119]
[105 118]
[107 116]
[108 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
