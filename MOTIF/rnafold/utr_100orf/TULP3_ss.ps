%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:52:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGCGGCGGCGUGCCAGCCUAGCCACUCUAGCGACGGCGGGGAAGAGUGUGUACGUGGUGGGGGCUUCCUCGGUGGCGGGCAUGGAGGCUUCGCGCUGCCGGCUCAGUCCCAGCGGCGACAGUGUCUUCCAUGAAGAAAUGAUGAAGAUGCGACAGGCUAAGCUGGAUUAUCAGAGGCUAC\
) } def
/len { sequence length } bind def

/coor [
[97.03806305 292.88488770]
[93.70024872 307.50881958]
[90.36243439 322.13272095]
[87.02462006 336.75665283]
[92.37276459 352.25921631]
[81.41838074 364.46304321]
[65.43039703 360.81387329]
[60.85587692 345.06567383]
[72.40070343 333.41882324]
[75.73851013 318.79492188]
[79.07632446 304.17098999]
[82.41413879 289.54705811]
[79.32324982 280.55520630]
[84.17990112 271.00396729]
[83.66216278 256.01287842]
[83.14441681 241.02183533]
[82.62667847 226.03076172]
[82.10893250 211.03970337]
[73.93695068 198.58708191]
[81.19330597 184.52806091]
[80.67556763 169.53700256]
[80.15782166 154.54594421]
[79.64008331 139.55488586]
[79.12233734 124.56381989]
[81.17230988 119.27904510]
[83.83475494 114.41263580]
[70.00145721 120.21263123]
[56.16816711 126.01263428]
[42.33487701 131.81263733]
[35.60942459 138.03289795]
[28.21240425 137.59107971]
[14.28106117 143.15144348]
[4.56079912 156.35934448]
[-11.70555687 154.27662659]
[-17.78457260 139.04582214]
[-7.42268038 126.33506775]
[8.72069550 129.22010803]
[22.65203857 123.65973663]
[36.53487396 117.97933960]
[50.36816788 112.17934418]
[64.20146179 106.37934113]
[78.03475189 100.57933807]
[63.47509384 104.18715668]
[49.75347900 98.12767792]
[42.61217880 84.93670654]
[45.03971100 70.13443756]
[56.02019882 59.91539001]
[70.95848083 58.55606461]
[83.60312653 66.62532043]
[88.66258240 80.74756622]
[85.83152008 66.01715088]
[83.00045013 51.28673935]
[78.29631805 43.42579651]
[80.24995422 36.27776337]
[77.67356873 21.50067711]
[75.09718323 6.72359276]
[65.10456085 -5.54254389]
[70.54085541 -19.40962791]
[67.96446991 -34.18671036]
[57.97184753 -46.45284653]
[63.40814209 -60.31993103]
[60.83175659 -75.09701538]
[58.25537109 -89.87409973]
[55.67898178 -104.65118408]
[53.10259628 -119.42826843]
[50.52621078 -134.20535278]
[36.75185394 -141.10269165]
[29.76176071 -154.63014221]
[32.05039597 -169.50381470]
[42.53292465 -180.05154419]
[39.95653915 -194.82862854]
[37.38015366 -209.60571289]
[34.80376816 -224.38279724]
[32.22738266 -239.15988159]
[29.65099716 -253.93696594]
[27.07461166 -268.71405029]
[24.49822426 -283.49114990]
[21.92183876 -298.26821899]
[18.96374702 -312.97366333]
[15.62593365 -327.59756470]
[12.28812027 -342.22149658]
[-1.22541595 -350.41659546]
[-4.90490770 -365.78659058]
[3.43262196 -379.21273804]
[18.84066391 -382.72952271]
[32.17790222 -374.25051880]
[35.53158569 -358.80615234]
[26.91203880 -345.55929565]
[30.24985313 -330.93539429]
[33.58766556 -316.31146240]
[36.38867950 -314.12979126]
[38.26057053 -310.47143555]
[38.51565170 -305.79336548]
[36.69892502 -300.84460449]
[39.27531052 -286.06753540]
[41.85169601 -271.29043579]
[44.42808151 -256.51336670]
[47.00446701 -241.73626709]
[49.58085251 -226.95918274]
[52.15723801 -212.18209839]
[54.73362350 -197.40501404]
[57.31000900 -182.62792969]
[70.74353790 -176.24996948]
[77.93058014 -163.02838135]
[75.93078613 -147.93354797]
[65.30329895 -136.78173828]
[67.87968445 -122.00465393]
[70.45606995 -107.22756958]
[73.03245544 -92.45048523]
[75.60884094 -77.67340088]
[78.18522644 -62.89631653]
[87.99356842 -51.68713760]
[82.74155426 -36.76309586]
[85.31793976 -21.98601341]
[95.12628174 -10.77683258]
[89.87426758 4.14720678]
[92.45065308 18.92429161]
[95.02703857 33.70137787]
[97.73086548 48.45567322]
[100.56192780 63.18608856]
[103.39299774 77.91650391]
[114.95729065 87.46987915]
[129.95729065 87.46987915]
[144.95729065 87.46987915]
[159.95729065 87.46987915]
[174.95729065 87.46987915]
[189.95729065 87.46987915]
[204.95729065 87.46987915]
[219.95729065 87.46987915]
[234.95506287 87.21096802]
[249.94612122 86.69322968]
[264.93719482 86.17548370]
[275.53552246 74.45154572]
[291.32373047 73.73908234]
[302.93496704 84.46078491]
[303.48046875 100.25565338]
[292.63662720 111.75287628]
[276.83685303 112.13136292]
[265.45492554 101.16654968]
[250.46386719 101.68428802]
[235.47279358 102.20203400]
[231.60205078 105.03964996]
[225.90171814 105.45837402]
[219.95729065 102.46987915]
[204.95729065 102.46987915]
[189.95729065 102.46987915]
[174.95729065 102.46987915]
[159.95729065 102.46987915]
[144.95729065 102.46987915]
[129.95729065 102.46987915]
[114.95729065 102.46987915]
[109.74632263 107.86392975]
[120.53425598 118.28604126]
[110.11197662 129.07382202]
[99.32437134 118.65202332]
[94.11340332 124.04607391]
[94.63114166 139.03713989]
[95.14888763 154.02819824]
[95.66662598 169.01925659]
[96.18437195 184.01033020]
[104.39338684 197.53521729]
[97.09999847 210.52195740]
[97.61773682 225.51303101]
[98.13548279 240.50408936]
[98.65322113 255.49514771]
[99.17096710 270.48620605]
[106.63500977 257.47512817]
[118.00550842 247.69189453]
[131.98474121 242.25303650]
[146.97724915 241.77931213]
[161.27197266 246.32478333]
[173.23741150 255.37066650]
[181.50799561 267.88455200]
[185.13977051 282.43826294]
[183.71826172 297.37075806]
[177.40570068 310.97778320]
[166.92253113 321.70642090]
[153.46520996 328.33215332]
[138.56961060 330.09881592]
[123.93576813 326.80477905]
[111.23384094 318.82601929]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 12]
[2 11]
[3 10]
[4 9]
[14 166]
[15 165]
[16 164]
[17 163]
[18 162]
[20 160]
[21 159]
[22 158]
[23 157]
[24 156]
[26 42]
[27 41]
[28 40]
[29 39]
[31 38]
[32 37]
[50 121]
[51 120]
[52 119]
[54 118]
[55 117]
[56 116]
[58 114]
[59 113]
[61 111]
[62 110]
[63 109]
[64 108]
[65 107]
[66 106]
[70 102]
[71 101]
[72 100]
[73 99]
[74 98]
[75 97]
[76 96]
[77 95]
[78 94]
[79 90]
[80 89]
[81 88]
[122 151]
[123 150]
[124 149]
[125 148]
[126 147]
[127 146]
[128 145]
[129 144]
[130 141]
[131 140]
[132 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
