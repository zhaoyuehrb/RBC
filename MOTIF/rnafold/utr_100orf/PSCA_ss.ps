%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:09:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUUGAGGCCAUAUAAAGUCACCUGAGGCCCUCUCCACCACAGCCCACCAGUGACCACGAAGGCUGUGCUGCUUGCCCUGUUGAUGGCAGGCUUGGCCCUGCAGCCAGGCACUGCCCUGCUGUGCUACUCCUGCAAAGCCCAGGUGAGCAACGAGGACUGCCUGCAGGUGGAGAACUGCACCC\
) } def
/len { sequence length } bind def

/coor [
[87.60141754 499.88165283]
[74.33329773 507.92755127]
[58.87273407 506.60446167]
[47.16462326 496.42117310]
[43.71097565 481.29330444]
[49.83979034 467.03787231]
[63.19441223 459.13638306]
[64.47339630 444.19100952]
[51.00074768 439.26455688]
[39.25656128 431.00595093]
[30.04796219 419.97503662]
[24.00980186 406.92248535]
[21.56090736 392.73864746]
[22.87503052 378.39288330]
[27.86853409 364.86727905]
[36.20568848 353.08932495]
[47.32123184 343.86853027]
[60.45869827 337.84057617]
[74.72189331 335.42355347]
[76.25585938 320.50219727]
[77.78981781 305.58084106]
[79.32378387 290.65948486]
[80.85774231 275.73812866]
[82.39170837 260.81677246]
[83.92566681 245.89541626]
[85.33219147 230.96150208]
[86.61117554 216.01612854]
[87.89016724 201.07075500]
[89.16915131 186.12538147]
[90.06499481 171.15216064]
[90.57711029 156.16090393]
[91.08922577 141.16964722]
[91.60134125 126.17839050]
[86.40769196 123.89758301]
[81.79265594 120.59947205]
[77.95270538 116.42443848]
[75.05130005 111.55023193]
[73.21195221 106.18432617]
[72.51296234 100.55516052]
[58.00221252 96.75539398]
[43.49146652 92.95563507]
[28.98071671 89.15586853]
[14.46996975 85.35610962]
[-0.04077821 81.55634308]
[-14.55152607 77.75658417]
[-23.11344910 86.90225983]
[-34.68783569 91.50421143]
[-47.04786301 90.74327850]
[-57.84360504 84.82580566]
[-65.04882050 74.93260956]
[-67.34116364 62.98389435]
[-81.71372223 58.69093323]
[-97.53463745 63.00728607]
[-108.99111176 51.27352524]
[-104.29772186 35.56034470]
[-88.28261566 32.03211212]
[-77.42076111 44.31837463]
[-63.04820633 48.61133575]
[-49.54864883 37.25484085]
[-31.77909470 36.24833298]
[-16.82197571 46.18141174]
[-10.75176334 63.24583435]
[3.75898457 67.04560089]
[18.26973152 70.84535980]
[32.78047943 74.64512634]
[47.29122925 78.44488525]
[61.80197525 82.24465179]
[76.31272125 86.04441071]
[90.57246399 74.17429352]
[109.12584686 74.06615448]
[117.77604675 61.81160355]
[126.42625427 49.55705643]
[135.07646179 37.30250549]
[143.72666931 25.04795837]
[152.37686157 12.79340935]
[161.02706909 0.53886139]
[169.67727661 -11.71568680]
[172.07833862 -20.55422401]
[178.58125305 -24.10390472]
[187.43942261 -36.20898056]
[183.00006104 -45.27502441]
[182.19097900 -55.27151871]
[185.07669067 -64.80825043]
[191.21115112 -72.57648468]
[199.70606995 -77.52852631]
[209.35919189 -79.01895142]
[213.89691162 -93.31612396]
[218.43463135 -107.61329651]
[222.97235107 -121.91046906]
[227.51007080 -136.20764160]
[231.92556763 -150.54302979]
[236.21852112 -164.91558838]
[240.51148987 -179.28814697]
[244.80444336 -193.66070557]
[249.09741211 -208.03326416]
[253.39036560 -222.40582275]
[257.68331909 -236.77838135]
[249.95422363 -250.56376648]
[254.31701660 -265.75393677]
[268.18331909 -273.33685303]
[283.32653809 -268.81372070]
[290.76245117 -254.86801147]
[286.07943726 -239.77346802]
[272.05587769 -232.48542786]
[267.76293945 -218.11286926]
[263.46997070 -203.74031067]
[259.17700195 -189.36775208]
[254.88404846 -174.99517822]
[250.59107971 -160.62261963]
[246.29812622 -146.25006104]
[247.39901733 -138.92366028]
[241.80723572 -131.66992188]
[237.26951599 -117.37274933]
[232.73179626 -103.07557678]
[228.19407654 -88.77840424]
[223.65635681 -74.48123169]
[226.22970581 -72.48133850]
[228.53422546 -70.17681122]
[230.53411865 -67.60347748]
[244.83128357 -72.14119720]
[259.12844849 -76.67890930]
[269.94137573 -88.22843170]
[284.41296387 -84.70384979]
[298.71011353 -89.24156952]
[313.00729370 -93.77928925]
[318.79644775 -108.30580902]
[332.59304810 -115.66702271]
[347.88281250 -112.38717651]
[357.44635010 -100.01491547]
[356.76806641 -84.39205170]
[346.16821289 -72.89521790]
[330.65173340 -70.95286560]
[317.54501343 -79.48211670]
[303.24783325 -74.94439697]
[288.95068359 -70.40667725]
[279.16040039 -59.18172836]
[263.66616821 -62.38174057]
[249.36900330 -57.84402466]
[235.07183838 -53.30630493]
[224.37176514 -31.13088417]
[199.54449463 -27.35081482]
[190.68632507 -15.24573898]
[181.93182373 -3.06548214]
[173.28161621 9.18906593]
[164.63142395 21.44361496]
[155.98121643 33.69816208]
[147.33100891 45.95271301]
[138.68080139 58.20726013]
[130.03059387 70.46180725]
[121.38039398 82.71635437]
[127.49117279 99.71566772]
[121.73329926 116.83773041]
[106.59259796 126.69050598]
[106.08048248 141.68176270]
[105.56836700 156.67301941]
[105.05625153 171.66427612]
[107.53652191 176.31138611]
[107.93035889 180.97644043]
[106.58418274 184.85633850]
[104.11452484 187.40437317]
[102.83554077 202.34974670]
[101.55654907 217.29512024]
[100.27756500 232.24049377]
[102.66781616 241.08195496]
[98.84702301 247.42938232]
[97.31306458 262.35073853]
[95.77909851 277.27209473]
[94.24514008 292.19345093]
[92.71117401 307.11480713]
[91.17721558 322.03616333]
[89.64324951 336.95751953]
[104.21360016 342.84805298]
[116.52734375 352.59014893]
[125.59520721 365.39077759]
[130.69158936 380.21148682]
[131.41265869 395.85284424]
[127.70837402 411.05139160]
[119.88576508 424.58175659]
[108.58359528 435.35540771]
[94.72018433 442.50827026]
[79.41876984 445.47000122]
[78.13978577 460.41537476]
[89.95767212 470.47106934]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 182]
[8 181]
[19 171]
[20 170]
[21 169]
[22 168]
[23 167]
[24 166]
[25 165]
[26 163]
[27 162]
[28 161]
[29 160]
[30 156]
[31 155]
[32 154]
[33 153]
[39 68]
[40 67]
[41 66]
[42 65]
[43 64]
[44 63]
[45 62]
[51 58]
[52 57]
[70 150]
[71 149]
[72 148]
[73 147]
[74 146]
[75 145]
[76 144]
[77 143]
[79 142]
[80 141]
[86 116]
[87 115]
[88 114]
[89 113]
[90 112]
[91 110]
[92 109]
[93 108]
[94 107]
[95 106]
[96 105]
[97 104]
[119 139]
[120 138]
[121 137]
[123 135]
[124 134]
[125 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
