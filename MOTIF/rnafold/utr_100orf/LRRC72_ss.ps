%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:27:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAGUCUCUCUUCGGUGCCACCGGCGGGCGAGGCCGGAUUAAUCACCGCUGCUUCGGCCGCCCAUGUGUCCUGAUGUCCUGGGACCCGAACCCCGUGCCCCGUACCUUGCGAUGCUGGCGCCUACGGAGGGCAUCCGAAACUGCCCUACAGAGCAGUCGCCGGGCAGUUGAAG\
) } def
/len { sequence length } bind def

/coor [
[268.40838623 332.79650879]
[267.33148193 319.40811157]
[270.44714355 306.31933594]
[277.46447754 294.81307983]
[267.96166992 283.20718384]
[258.45886230 271.60128784]
[251.76527405 268.40692139]
[248.89154053 259.69900513]
[239.59980774 247.92344666]
[230.30809021 236.14788818]
[221.01635742 224.37232971]
[204.26013184 223.13005066]
[193.35940552 209.90362549]
[195.41987610 192.54864502]
[185.91706848 180.94276428]
[176.41426086 169.33688354]
[166.91145325 157.73098755]
[157.40864563 146.12510681]
[147.90583801 134.51921082]
[138.40303040 122.91333008]
[114.72029877 150.29956055]
[73.13417816 153.76014709]
[36.53765106 123.83110809]
[21.54743195 124.37264252]
[6.55720997 124.91417694]
[-8.43301105 125.45571899]
[-23.42323303 125.99725342]
[-36.93507385 134.22772217]
[-49.93338394 126.95495605]
[-64.92360687 127.49649048]
[-79.91382599 128.03802490]
[-94.90404510 128.57955933]
[-109.89427185 129.12110901]
[-124.88449097 129.66264343]
[-139.86248779 130.47471619]
[-154.82339478 131.55708313]
[-169.78428650 132.63945007]
[-177.86070251 145.88902283]
[-192.19548035 151.82987976]
[-207.27661133 148.17761230]
[-217.30509949 136.33662415]
[-218.42477417 120.86000061]
[-210.20510864 107.69882202]
[-195.80673218 101.91382599]
[-180.76609802 105.72946930]
[-170.86665344 117.67855835]
[-155.90576172 116.59619141]
[-140.94485474 115.51382446]
[-137.17897034 112.52571869]
[-131.48721313 111.89458466]
[-125.42602539 114.67241669]
[-110.43580627 114.13088226]
[-95.44558716 113.58934784]
[-80.45536041 113.04780579]
[-65.46514130 112.50627136]
[-50.47491837 111.96473694]
[-38.03528214 103.77299500]
[-23.96476936 111.00703430]
[-8.97454739 110.46549225]
[6.01567364 109.92395782]
[21.00589561 109.38242340]
[35.99611664 108.84088898]
[40.09225845 102.55824280]
[25.61045456 98.64962006]
[24.85283470 83.66876984]
[38.86642456 78.31906891]
[48.28454590 89.99295807]
[52.38068771 83.71031189]
[46.82861710 69.77565765]
[41.27654266 55.84101105]
[35.72447205 41.90636063]
[30.17239761 27.97170830]
[24.62032700 14.03705692]
[10.00508785 8.02287769]
[4.00041962 -6.59627104]
[10.16878414 -21.14710617]
[24.85060120 -26.99687767]
[39.33540726 -20.67501640]
[45.02962494 -5.93217373]
[38.55497742 8.48498440]
[44.10704803 22.41963577]
[49.65912247 36.35428619]
[55.21119308 50.28893661]
[60.76326752 64.22358704]
[66.31533813 78.15824127]
[81.21282196 76.40181732]
[96.10897827 74.64556122]
[98.26807404 59.80176544]
[89.86601257 46.13483429]
[95.44796753 31.09417725]
[110.73193359 26.21770096]
[123.99335480 35.24621964]
[125.05921173 51.25382614]
[113.11186981 61.96085739]
[110.95278168 76.80465698]
[117.81533813 79.83042145]
[138.40303040 88.90770721]
[147.90583801 77.30181885]
[146.52949524 61.78591156]
[156.33203125 50.15126419]
[171.13256836 48.93475723]
[180.63537598 37.32886887]
[190.13818359 25.72298241]
[199.64099121 14.11709499]
[204.99719238 -1.96853125]
[221.93693542 -1.27459133]
[225.95950317 15.19523907]
[211.24687195 23.61990356]
[201.74406433 35.22579193]
[192.24125671 46.83168030]
[182.73844910 58.43756866]
[184.46604919 73.18717957]
[174.99418640 85.09256744]
[159.51171875 86.80463409]
[150.00891113 98.41051483]
[150.00891113 113.41051483]
[159.51171875 125.01640320]
[169.01452637 136.62229919]
[178.51733398 148.22817993]
[188.02014160 159.83407593]
[197.52296448 171.43995667]
[207.02577209 183.04583740]
[220.51380920 182.83311462]
[231.49511719 190.32751465]
[236.07672119 202.60032654]
[232.79193115 215.08059692]
[242.08364868 226.85617065]
[251.37538147 238.63172913]
[260.66711426 250.40728760]
[270.06475830 262.09848022]
[279.56756592 273.70437622]
[289.07037354 285.31027222]
[305.11297607 280.18493652]
[321.85833740 281.59664917]
[336.75131226 289.30175781]
[347.53015137 302.09851074]
[352.57015991 318.01431274]
[351.12835693 334.60986328]
[343.45291138 349.35296631]
[353.36853027 360.60821533]
[363.28414917 371.86346436]
[373.19976807 383.11868286]
[383.11538696 394.37393188]
[393.03097534 405.62918091]
[402.94659424 416.88442993]
[412.86221313 428.13967896]
[426.47091675 425.83013916]
[439.33856201 430.51776123]
[448.13253784 440.87442017]
[450.63186646 454.11886597]
[446.28735352 466.76315308]
[455.99813843 478.19558716]
[471.61538696 483.19900513]
[474.82598877 499.28079224]
[462.32717896 509.89736938]
[446.97665405 504.12731934]
[444.56570435 487.90637207]
[434.85491943 476.47393799]
[418.55111694 478.24691772]
[404.25363159 469.87963867]
[397.68395996 454.49148560]
[401.60696411 438.05529785]
[391.69134521 426.80004883]
[381.77572632 415.54479980]
[371.86013794 404.28955078]
[361.94451904 393.03430176]
[352.02890015 381.77905273]
[342.11328125 370.52380371]
[332.19766235 359.26858521]
[319.91744995 364.36227417]
[306.64169312 365.41641235]
[293.66711426 362.31387329]
[282.26538086 355.34423828]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 132]
[5 131]
[6 130]
[8 129]
[9 128]
[10 127]
[11 126]
[14 122]
[15 121]
[16 120]
[17 119]
[18 118]
[19 117]
[20 116]
[23 62]
[24 61]
[25 60]
[26 59]
[27 58]
[29 56]
[30 55]
[31 54]
[32 53]
[33 52]
[34 51]
[35 48]
[36 47]
[37 46]
[68 85]
[69 84]
[70 83]
[71 82]
[72 81]
[73 80]
[87 95]
[88 94]
[97 115]
[98 114]
[101 111]
[102 110]
[103 109]
[104 108]
[139 169]
[140 168]
[141 167]
[142 166]
[143 165]
[144 164]
[145 163]
[146 162]
[151 158]
[152 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
