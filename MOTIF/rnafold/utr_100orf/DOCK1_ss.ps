%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:21:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCGCCGCAAACUUUUUCCUCCCCAUCCUGUCGCGGCUCGAAAGGAAUGGAAAAUGGCGGCCUAGACGCGGAGUUUCCUGCCCGACCCGCGGCGGCUCCGGCGGCGCCAUGACGCGCUGGGUGCCCACCAAGCGCGAGGAGAAGUACGGCGUGGCUUUUUAUAACUAUGAUGCCAGAGGAGCGGAUGAACUUUCUUUACAGAUCGGAG\
) } def
/len { sequence length } bind def

/coor [
[283.10870361 325.57263184]
[283.10870361 310.57263184]
[283.10870361 295.57263184]
[283.10870361 280.57263184]
[277.21331787 266.77972412]
[266.37139893 256.41378784]
[255.52946472 246.04785156]
[244.68754578 235.68190002]
[234.53292847 236.82911682]
[225.22792053 232.09782410]
[219.95480347 222.83525085]
[220.66464233 211.98048401]
[210.13766479 201.29484558]
[199.61070251 190.60920715]
[189.08374023 179.92356873]
[178.55676270 169.23791504]
[168.02980042 158.55227661]
[161.09568787 155.99324036]
[157.42677307 147.62716675]
[147.06082153 136.78524780]
[136.69488525 125.94332123]
[126.32894897 115.10139465]
[103.19885254 127.55451965]
[81.64765930 117.16239166]
[68.13312531 123.67064667]
[54.61859512 130.17890930]
[41.10406113 136.68716431]
[27.63858986 143.29632568]
[14.22292805 150.00601196]
[0.80726689 156.71571350]
[-8.07429886 169.80877686]
[-22.91827965 168.58178711]
[-36.33394241 175.29148865]
[-49.74960327 182.00119019]
[-56.16489029 196.70573425]
[-71.69790649 200.71884155]
[-84.43304443 190.96200562]
[-84.60099792 174.91983032]
[-72.07292938 164.89849854]
[-56.45930099 168.58552551]
[-43.04364014 161.87582397]
[-29.62797737 155.16612244]
[-21.70598793 142.55299377]
[-5.90243053 143.30004883]
[7.51323080 136.59036255]
[20.92889214 129.88066101]
[25.50543213 124.07672119]
[34.59580612 123.17263031]
[48.11034012 116.66436768]
[61.62487411 110.15611267]
[75.13940430 103.64785767]
[74.89653015 98.91754150]
[75.54569244 94.22568512]
[77.06381989 89.73901367]
[79.39698029 85.61696625]
[70.22111511 73.75090027]
[61.04525375 61.88483429]
[51.86938858 50.01876831]
[42.69352341 38.15270615]
[33.51765823 26.28663826]
[25.79184723 21.41179276]
[24.29487038 14.17373466]
[15.29754257 2.17173147]
[5.70479393 3.63571954]
[-3.70570016 1.51762092]
[-11.65016747 -3.85038996]
[-17.06061745 -11.69578457]
[-19.22834015 -20.91662788]
[-17.89653015 -30.23626900]
[-13.28993416 -38.38009644]
[-21.55338860 -50.89869690]
[-29.81684303 -63.41729355]
[-38.08029938 -75.93589020]
[-46.34375381 -88.45449066]
[-54.60720825 -100.97309113]
[-62.87066269 -113.49169159]
[-75.32744598 -116.83898926]
[-81.95227814 -127.43652344]
[-79.65596008 -139.31361389]
[-87.73122406 -151.95442200]
[-95.80648041 -164.59524536]
[-103.88174438 -177.23605347]
[-119.41043091 -179.07829285]
[-130.08421326 -190.50651550]
[-130.86323547 -206.12469482]
[-121.37969971 -218.55836487]
[-106.11141205 -221.93675232]
[-92.26760864 -214.66468811]
[-86.38490295 -200.17579651]
[-91.24092865 -185.31130981]
[-83.16566467 -172.67050171]
[-75.09040833 -160.02967834]
[-67.01515198 -147.38887024]
[-51.02609634 -140.15661621]
[-50.35206223 -121.75514221]
[-42.08860779 -109.23654175]
[-33.82515335 -96.71794891]
[-25.56169891 -84.19934845]
[-17.29824448 -71.68074799]
[-9.03479004 -59.16215134]
[-0.77133560 -46.64355087]
[19.52639580 -44.24198914]
[31.62307930 -27.40343857]
[27.29954529 -6.82559681]
[36.29687500 5.17640638]
[45.38372421 17.11077499]
[54.55958939 28.97683907]
[63.73545456 40.84290695]
[72.91131592 52.70896912]
[82.08718109 64.57503510]
[91.26304626 76.44110107]
[98.91022491 73.58928680]
[107.46994781 73.28513336]
[116.07661438 75.80886841]
[123.78412628 81.14314270]
[132.41838074 68.87735748]
[141.05264282 56.61156464]
[149.68690491 44.34577179]
[158.32115173 32.07998276]
[159.93782043 16.34159279]
[173.59080505 10.38797665]
[182.22505188 -1.87781370]
[190.85931396 -14.14360428]
[191.78961182 -30.51634407]
[206.55375671 -37.65441895]
[219.96365356 -28.21478844]
[218.22436523 -11.90813732]
[203.12510681 -5.50934839]
[194.49084473 6.75644207]
[185.85659790 19.02223396]
[184.85749817 33.88329315]
[170.58694458 40.71423721]
[161.95268250 52.98003006]
[153.31843567 65.24581909]
[144.68417358 77.51161194]
[136.04992676 89.77740479]
[137.17086792 104.73545837]
[147.53680420 115.57738495]
[157.90275574 126.41930389]
[168.26869202 137.26123047]
[178.71543884 148.02531433]
[189.24240112 158.71095276]
[199.76937866 169.39659119]
[210.29634094 180.08222961]
[220.82331848 190.76788330]
[231.35028076 201.45352173]
[251.00419617 205.93302917]
[255.05348206 224.83998108]
[265.89541626 235.20591736]
[276.73733521 245.57186890]
[287.57925415 255.93780518]
[306.43148804 231.92330933]
[349.15658569 233.87950134]
[363.82879639 236.99818420]
[378.50100708 240.11685181]
[393.17324829 243.23553467]
[401.18487549 230.36737061]
[413.11642456 221.01785278]
[427.52713013 216.31594849]
[442.67678833 216.82945251]
[456.73602295 222.49636841]
[468.00708008 232.63237000]
[475.12899780 246.01348877]
[477.24169922 261.02389526]
[474.09008789 275.85101318]
[466.05474854 288.70437622]
[454.10598755 298.03189087]
[439.68667603 302.70721436]
[424.53796387 302.16580200]
[410.48922729 296.47299194]
[399.23681641 286.31625366]
[392.13961792 272.92202759]
[390.05456543 257.90774536]
[375.38235474 254.78907776]
[360.71014404 251.67039490]
[346.03790283 248.55172729]
[338.15264893 261.31192017]
[347.50500488 273.03939819]
[356.85736084 284.76687622]
[366.20971680 296.49432373]
[375.56204224 308.22180176]
[384.91439819 319.94927979]
[392.71228027 324.70800781]
[394.31735229 331.92285156]
[403.49322510 343.78894043]
[419.16033936 347.24154663]
[426.09967041 361.70617676]
[418.98788452 376.08679199]
[403.28060913 379.35183716]
[391.02706909 368.99661255]
[391.62716675 352.96478271]
[382.45129395 341.09872437]
[373.18692017 329.30163574]
[363.83456421 317.57415771]
[354.48223877 305.84667969]
[345.12988281 294.11920166]
[335.77752686 282.39175415]
[326.42520142 270.66427612]
[319.34606934 273.14135742]
[324.30026245 287.29962158]
[333.38708496 299.23400879]
[324.84478760 311.56399536]
[310.47854614 307.24993896]
[310.14199829 292.25378418]
[305.18780518 278.09555054]
[298.10870361 280.57263184]
[298.10870361 295.57263184]
[298.10870361 310.57263184]
[298.10870361 325.57263184]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 209]
[2 208]
[3 207]
[4 206]
[5 151]
[6 150]
[7 149]
[8 148]
[12 146]
[13 145]
[14 144]
[15 143]
[16 142]
[17 141]
[19 140]
[20 139]
[21 138]
[22 137]
[24 51]
[25 50]
[26 49]
[27 48]
[28 46]
[29 45]
[30 44]
[32 42]
[33 41]
[34 40]
[55 111]
[56 110]
[57 109]
[58 108]
[59 107]
[60 106]
[62 105]
[63 104]
[70 101]
[71 100]
[72 99]
[73 98]
[74 97]
[75 96]
[76 95]
[79 93]
[80 92]
[81 91]
[82 90]
[115 136]
[116 135]
[117 134]
[118 133]
[119 132]
[121 130]
[122 129]
[123 128]
[153 176]
[154 175]
[155 174]
[156 173]
[177 198]
[178 197]
[179 196]
[180 195]
[181 194]
[182 193]
[184 192]
[185 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
