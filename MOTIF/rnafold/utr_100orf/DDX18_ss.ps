%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:22:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGAGCUGCGCACGUGCGGCCGGAAGGGAAGUAACGUCAGCCUGAGAACUGAGUAGCUGUACUGUGUGGCGCCUUAUUCUAGGCACUUGUUGGGCAGAAUGUCACACCUGCCGAUGAAACUCCUGCGUAAGAAGAUCGAGAAGCGGAACCUCAAAUUGCGGCAGCGGAACCUAAAGUUUCAGGGGGCCUCAAAUCUGA\
) } def
/len { sequence length } bind def

/coor [
[135.51583862 169.96107483]
[127.47843933 157.29615784]
[119.44104004 144.63124084]
[111.40363312 131.96630859]
[74.83880615 132.83189392]
[51.36524582 96.11782074]
[37.33358765 101.41993713]
[23.30192566 106.72206116]
[9.27026463 112.02418518]
[-4.76139545 117.32630920]
[-18.79305649 122.62843323]
[-32.82471466 127.93055725]
[-46.85637665 133.23268127]
[-53.78541183 139.19871521]
[-61.15029907 138.50598145]
[-75.26351166 143.58705139]
[-89.37672424 148.66812134]
[-103.48993683 153.74919128]
[-117.60314941 158.83026123]
[-131.71635437 163.91133118]
[-145.82957458 168.99240112]
[-159.77621460 174.51426697]
[-173.54254150 180.47148132]
[-187.30885315 186.42869568]
[-193.69262695 205.47061157]
[-211.73808289 213.56707764]
[-229.64526367 205.91497803]
[-243.11567688 212.51406860]
[-256.58609009 219.11315918]
[-256.43182373 234.37550354]
[-262.92266846 248.18966675]
[-274.76989746 257.81286621]
[-289.62121582 261.33441162]
[-304.52789307 258.05505371]
[-316.53018188 248.62596130]
[-323.24502563 234.91926575]
[-323.33917236 219.65643311]
[-316.79397583 205.86791992]
[-304.90893555 196.29145813]
[-290.04388428 192.82843018]
[-275.15023804 196.16645813]
[-263.18518066 205.64274597]
[-249.71476746 199.04365540]
[-236.24435425 192.44456482]
[-235.65618896 182.18101501]
[-230.81887817 173.01834106]
[-222.54774475 166.64466858]
[-212.29737854 164.26565552]
[-201.90606689 166.37687683]
[-193.26606750 172.66238403]
[-179.49975586 166.70516968]
[-165.73342896 160.74794006]
[-164.57838440 158.18441772]
[-162.33375549 155.92613220]
[-159.11146545 154.39207458]
[-155.17350769 153.95271301]
[-150.91064453 154.87918091]
[-136.79742432 149.79811096]
[-122.68421936 144.71704102]
[-108.57100677 139.63597107]
[-94.45779419 134.55491638]
[-80.34458160 129.47384644]
[-66.23136902 124.39276886]
[-52.15850067 119.20101929]
[-38.12683868 113.89889526]
[-24.09517860 108.59677124]
[-10.06351852 103.29464722]
[3.96814227 97.99252319]
[17.99980354 92.69039917]
[32.03146362 87.38828278]
[46.06312180 82.08615875]
[50.02122116 67.61779785]
[40.64257812 55.91133881]
[31.26393890 44.20488358]
[21.88529968 32.49842834]
[6.15092611 31.01349258]
[-3.86044121 18.78450775]
[-2.20923543 3.06671286]
[10.12491226 -6.81480265]
[25.82437134 -4.99751139]
[35.57492828 7.44042015]
[33.59175491 23.11978722]
[42.97039413 34.82624435]
[52.34903717 46.53269958]
[61.72767639 58.23915482]
[68.92987823 56.14672470]
[64.74501038 41.74231720]
[60.56014633 27.33791161]
[56.37551880 12.93343735]
[70.78005981 8.74904919]
[74.96455383 23.15304565]
[79.14941406 37.55744934]
[83.33428192 51.96185684]
[90.53648376 49.86942291]
[92.18250275 34.96001053]
[93.82851410 20.05059433]
[95.47453308 5.14118004]
[97.12054443 -9.76823425]
[84.69504547 -18.79611206]
[78.46285248 -32.83375168]
[80.10038757 -48.10509872]
[89.16716766 -60.50223541]
[103.22427368 -66.69039917]
[118.49040985 -65.00500488]
[130.85906982 -55.89940643]
[137.00314331 -41.82297516]
[135.26989746 -26.56219292]
[126.12557983 -14.22213745]
[112.02996063 -8.12222004]
[110.38394165 6.78719473]
[108.73793030 21.69660950]
[107.09191132 36.60602188]
[105.44589996 51.51543808]
[115.72274780 59.07698059]
[122.65231323 68.38887024]
[126.08776855 78.29016876]
[139.45286560 71.48031616]
[152.81796265 64.67045593]
[155.35754395 49.47649002]
[166.22978210 38.81591034]
[181.11851501 36.62734222]
[194.28343201 43.54274368]
[207.64852905 36.73288727]
[221.01362610 29.92302895]
[227.24613953 23.23266029]
[234.64257812 23.11303329]
[248.11299133 16.51394653]
[249.06582642 0.01110032]
[258.15679932 -13.68238449]
[272.82727051 -20.88361168]
[289.03378296 -19.71321106]
[302.36242676 -10.58483505]
[315.72750854 -17.39469147]
[327.09530640 -29.97283554]
[342.32882690 -22.53128052]
[339.39514160 -5.83308220]
[322.53738403 -4.02959442]
[309.17227173 2.78026295]
[309.35729980 16.44091034]
[303.60916138 28.90762329]
[292.99844360 37.72209549]
[279.56076050 41.11922836]
[265.90609741 38.38034821]
[254.71206665 29.98435974]
[241.24165344 36.58344650]
[227.82348633 43.28812790]
[214.45838928 50.09798431]
[201.09329224 56.90784073]
[198.94981384 71.62326050]
[188.42785645 82.38208008]
[173.41273499 84.91177368]
[159.62782288 78.03555298]
[146.26272583 84.84541321]
[132.89762878 91.65527344]
[133.83995056 97.40277100]
[133.78573608 103.22675323]
[132.73657227 108.95571136]
[130.72335815 114.42093658]
[127.80537415 119.46148682]
[124.06855774 123.92891693]
[132.10595703 136.59382629]
[140.14335632 149.25875854]
[148.18075562 161.92367554]
[170.62980652 161.45629883]
[188.73054504 174.52682495]
[195.27330017 195.73999023]
[187.76609802 216.49594116]
[197.32745361 228.05363464]
[212.81837463 229.68740845]
[222.35031128 241.54476929]
[220.69729614 256.30291748]
[230.25865173 267.86062622]
[239.82000732 279.41830444]
[255.12387085 277.47015381]
[269.04171753 284.12579346]
[277.13238525 297.26141357]
[276.81420898 312.68548584]
[268.18869019 325.47625732]
[254.00820923 331.55224609]
[238.79771423 328.97460938]
[227.41079712 318.56585693]
[223.48100281 303.64743042]
[228.26231384 288.97967529]
[218.70095825 277.42196655]
[209.13958740 265.86428833]
[194.33309937 264.72262573]
[184.47187805 253.13766479]
[185.76976013 237.61499023]
[176.20840454 226.05729675]
[168.56138611 228.96162415]
[160.43127441 229.99662781]
[152.26918030 229.09739685]
[144.52970886 226.30662537]
[137.64573669 221.77252197]
[132.00404358 215.74104309]
[127.92373657 208.54249573]
[125.63809967 200.57350159]
[125.28130341 192.27511597]
[126.88057709 184.10839844]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 163]
[2 162]
[3 161]
[4 160]
[6 71]
[7 70]
[8 69]
[9 68]
[10 67]
[11 66]
[12 65]
[13 64]
[15 63]
[16 62]
[17 61]
[18 60]
[19 59]
[20 58]
[21 57]
[22 52]
[23 51]
[24 50]
[27 44]
[28 43]
[29 42]
[72 85]
[73 84]
[74 83]
[75 82]
[94 113]
[95 112]
[96 111]
[97 110]
[98 109]
[116 154]
[117 153]
[118 152]
[122 148]
[123 147]
[124 146]
[126 145]
[127 144]
[132 138]
[133 137]
[167 189]
[168 188]
[171 185]
[172 184]
[173 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
