%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:22:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACUGCCUUUCCCCAUUGGGUCUCUGUAAGAGUCACACGCUUUGGGCAUCCUUGAAAAGAAUCUUCUGAGGCCUCAGCAUUUUAUCUGAGUCUUCUGAAUCCCACUUAGAACUGUGUUGAGCUCUCACCCAUCACGAUGAGCAACAAAUUCCUGGGCACCUGGAAACUUGUCUCUAGUGAGAACUUUGACGAUUACAUGAAAGCUCUGGGUGUGGGGUUAGCCACCAGAAAACUGG\
) } def
/len { sequence length } bind def

/coor [
[140.31214905 600.10852051]
[132.05599976 587.58508301]
[136.57049561 573.28057861]
[150.51968384 567.76513672]
[163.59545898 575.11364746]
[162.01440430 560.19720459]
[152.97871399 548.35638428]
[159.21832275 533.81756592]
[157.63726807 518.90112305]
[145.92837524 509.76669312]
[144.11247253 494.66180420]
[153.77285767 482.44238281]
[152.19180298 467.52593994]
[150.61074829 452.60949707]
[149.02969360 437.69305420]
[147.44863892 422.77661133]
[145.86758423 407.86016846]
[131.50283813 391.66317749]
[140.97953796 371.34762573]
[138.61346436 356.53540039]
[136.24740601 341.72320557]
[133.88133240 326.91098022]
[122.10255432 313.89166260]
[128.84648132 296.74774170]
[126.28509521 281.96804810]
[123.62622833 267.20556641]
[120.86997986 252.46098328]
[118.11373901 237.71638489]
[115.35749817 222.97178650]
[112.60125732 208.22718811]
[100.20637512 200.04779053]
[97.20111084 185.13394165]
[105.86445618 172.18850708]
[103.10821533 157.44390869]
[100.35197449 142.69931030]
[97.59572601 127.95471954]
[88.52877045 126.23354340]
[80.33600616 121.59433746]
[73.94777679 114.42668152]
[70.13261414 105.41336060]
[69.40610504 95.46610260]
[71.96461487 85.63352203]
[77.65184021 76.99057770]
[85.96334839 70.52118683]
[75.01256561 60.27031708]
[64.06179047 50.01944351]
[53.11100769 39.76856995]
[61.03614044 52.50404358]
[62.41178131 67.44082642]
[56.94604492 81.40956879]
[45.79867554 91.44631195]
[31.33497238 95.42140198]
[16.62392044 92.49139404]
[4.78698111 83.27798462]
[-1.66422772 69.73612976]
[-1.36085570 54.73919678]
[5.63272572 41.46931076]
[17.83258438 32.74214554]
[32.64989853 30.40945244]
[17.73345757 28.82839966]
[2.81701374 27.24734497]
[-11.94241238 34.39516830]
[-25.35854340 24.96439743]
[-23.63001442 8.65660000]
[-8.53498745 2.24784184]
[4.39806795 12.33090210]
[19.31451035 13.91195679]
[34.23095322 15.49301052]
[42.21143341 2.79214740]
[34.31495285 -9.96110916]
[26.41847038 -22.71436691]
[18.52198792 -35.46762466]
[4.67874765 -43.12760162]
[4.55708742 -58.02171326]
[-3.33939505 -70.77497101]
[-11.23587704 -83.52822876]
[-19.13236046 -96.28147888]
[-27.02884293 -109.03473663]
[-34.92532349 -121.78799438]
[-42.82180786 -134.54125977]
[-50.71828842 -147.29450989]
[-64.49155426 -147.28501892]
[-76.37899780 -154.02470398]
[-83.33240509 -165.66256714]
[-83.62964630 -179.10800171]
[-77.29997253 -190.85128784]
[-85.02743530 -203.70767212]
[-92.75489044 -216.56404114]
[-100.48234558 -229.42042542]
[-108.20980072 -242.27679443]
[-115.93725586 -255.13317871]
[-123.66471863 -267.98956299]
[-138.85787964 -266.52996826]
[-153.17677307 -271.81503296]
[-163.77836609 -282.79541016]
[-168.55770874 -297.29095459]
[-166.56585693 -312.42355347]
[-158.19828796 -325.18859863]
[-145.11639404 -333.05160522]
[-129.91760254 -334.45135498]
[-115.61962891 -329.10995483]
[-105.06135559 -318.08789062]
[-100.33913422 -303.57363892]
[-102.39057159 -288.44900513]
[-110.80834198 -275.71701050]
[-103.08087921 -262.86062622]
[-95.35342407 -250.00425720]
[-87.62596893 -237.14787292]
[-79.89851379 -224.29150391]
[-72.17105865 -211.43511963]
[-64.44359589 -198.57875061]
[-48.04452896 -197.67051697]
[-35.29475021 -187.05502319]
[-31.35209084 -170.76861572]
[-37.96503448 -155.19099426]
[-30.06855011 -142.43772888]
[-22.17206764 -129.68447876]
[-14.27558517 -116.93122101]
[-6.37910271 -104.17796326]
[1.51737964 -91.42470551]
[9.41386223 -78.67144775]
[17.31034470 -65.91819000]
[30.58877563 -59.17041397]
[31.27524376 -43.36410522]
[39.17172623 -30.61084938]
[47.06821060 -17.85759163]
[54.96469116 -5.10433483]
[67.28826141 12.11633587]
[63.36188126 28.81778908]
[74.31266022 39.06866074]
[85.26344299 49.31953430]
[96.21422577 59.57040787]
[111.15023804 60.95443344]
[123.79814911 52.89030075]
[136.44606018 44.82617188]
[149.09397888 36.76203918]
[150.46795654 23.37438965]
[159.16999817 13.36467361]
[171.85879517 10.23522854]
[183.85475159 14.90969753]
[196.60800171 7.01321507]
[209.36126709 -0.88326752]
[212.80477905 -6.49231100]
[217.80880737 -9.13689709]
[222.55703735 -8.81472301]
[235.51429749 -16.37180710]
[248.47154236 -23.92889214]
[261.42880249 -31.48597717]
[270.20315552 -47.68491364]
[287.74871826 -47.05623245]
[300.60510254 -54.78368759]
[313.46145630 -62.51114655]
[326.31784058 -70.23860168]
[334.15988159 -83.97953033]
[349.05429077 -83.90457916]
[361.91067505 -91.63203430]
[372.37139893 -104.97405243]
[388.08782959 -98.61556244]
[386.32858276 -81.75314331]
[369.63812256 -78.77565765]
[356.78176880 -71.04820251]
[349.85928345 -57.85999680]
[334.04528809 -57.38222504]
[321.18893433 -49.65476990]
[308.33255005 -41.92731094]
[295.47616577 -34.19985580]
[292.25439453 -22.55223846]
[281.62261963 -16.00595284]
[268.98590088 -18.52872086]
[256.02862549 -10.97163677]
[243.07138062 -3.41455197]
[230.11412048 4.14253283]
[217.25775146 11.86998940]
[204.50448608 19.76647186]
[191.75123596 27.66295433]
[188.59684753 44.19074249]
[174.17593384 53.49910355]
[157.15811157 49.40995407]
[144.51019287 57.47408676]
[131.86228943 65.53821564]
[119.21437073 73.60234833]
[125.51356506 80.69513702]
[129.39611816 89.13993073]
[130.62675476 98.15930939]
[129.20887756 106.95714569]
[125.37489319 114.78884125]
[119.55680847 121.02431488]
[112.34032440 125.19847870]
[115.09656525 139.94306946]
[117.85281372 154.68766785]
[120.60905457 169.43226624]
[133.36381531 178.37396240]
[135.94898987 193.36634827]
[127.34584808 205.47094727]
[130.10209656 220.21554565]
[132.85833740 234.96014404]
[135.61457825 249.70474243]
[138.37081909 264.44934082]
[143.01586914 272.29260254]
[141.06478882 279.40667725]
[143.62617493 294.18637085]
[153.69326782 302.23031616]
[155.53060913 314.57989502]
[148.69354248 324.54489136]
[151.05961609 339.35711670]
[153.42568970 354.16934204]
[155.79176331 368.98153687]
[163.30479431 372.52508545]
[168.75202942 378.67172241]
[171.30763245 386.37823486]
[170.62834167 394.37487793]
[166.89758301 401.37432861]
[160.78402710 406.27911377]
[162.36508179 421.19555664]
[163.94613647 436.11199951]
[165.52719116 451.02844238]
[167.10824585 465.94488525]
[168.68930054 480.86132812]
[180.69664001 490.78411865]
[182.08755493 505.93402100]
[172.55371094 517.32006836]
[174.13476562 532.23651123]
[183.28355408 545.14422607]
[176.93084717 558.61614990]
[178.51190186 573.53259277]
[180.58424377 588.38873291]
[183.14562988 603.16845703]
[185.70701599 617.94812012]
[188.26838684 632.72784424]
[199.18246460 644.96771240]
[193.78320312 660.45257568]
[177.62490845 663.25286865]
[167.32984924 650.48791504]
[173.48869324 635.28924561]
[170.92732239 620.50952148]
[168.36593628 605.72985840]
[165.80455017 590.95013428]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 225]
[6 224]
[8 222]
[9 221]
[12 218]
[13 217]
[14 216]
[15 215]
[16 214]
[17 213]
[19 207]
[20 206]
[21 205]
[22 204]
[24 201]
[25 200]
[26 198]
[27 197]
[28 196]
[29 195]
[30 194]
[33 191]
[34 190]
[35 189]
[36 188]
[44 132]
[45 131]
[46 130]
[47 129]
[59 68]
[60 67]
[61 66]
[69 127]
[70 126]
[71 125]
[72 124]
[74 122]
[75 121]
[76 120]
[77 119]
[78 118]
[79 117]
[80 116]
[81 115]
[86 111]
[87 110]
[88 109]
[89 108]
[90 107]
[91 106]
[92 105]
[133 181]
[134 180]
[135 179]
[136 178]
[140 175]
[141 174]
[142 173]
[145 172]
[146 171]
[147 170]
[148 169]
[150 166]
[151 165]
[152 164]
[153 163]
[155 161]
[156 160]
[226 237]
[227 236]
[228 235]
[229 234]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
