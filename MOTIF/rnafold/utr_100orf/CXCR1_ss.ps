%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:04:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUUCAUCAAGUGCCCUCUAGCUGUUAAGUCACUCUGAUCUCUGACUGCAGCUCCUACUGUUGGACACACCUGGCCGGUGCUUCAGUUAGAUCAAACCAUUGCUGAAACUGAAGAGGACAUGUCAAAUAUUACAGAUCCACAGAUGUGGGAUUUUGAUGAUCUAAAUUUCACUGGCAUGCCACCUGCAGAUGAAGAUUACAGCCCCUGUAUGCUAGAAA\
) } def
/len { sequence length } bind def

/coor [
[252.53477478 314.70782471]
[248.11250305 297.45272827]
[249.85656738 279.70162964]
[257.57312012 263.59423828]
[246.81614685 253.14018250]
[236.05917358 242.68611145]
[225.30220032 232.23205566]
[214.54522705 221.77798462]
[203.78823853 211.32392883]
[193.03126526 200.86985779]
[182.27429199 190.41580200]
[167.43124390 190.88461304]
[156.37322998 180.43594360]
[155.98213196 164.86401367]
[145.22515869 154.40995789]
[134.46817017 143.95588684]
[118.55050659 153.55232239]
[100.11060333 157.48989868]
[81.12760925 155.16696167]
[63.69765091 146.66358948]
[49.80244064 132.75175476]
[36.84790421 140.31349182]
[23.89337158 147.87524414]
[10.93883801 155.43699646]
[-2.01569629 162.99874878]
[-5.61440277 168.53219604]
[-10.70228100 171.04527283]
[-15.44990158 170.58538818]
[-28.61508560 177.77412415]
[-41.78026962 184.96286011]
[-54.94545746 192.15159607]
[-68.11064148 199.34033203]
[-68.39592743 214.69656372]
[-76.33485413 227.84452820]
[-89.79189301 235.24748230]
[-105.14716339 234.91406250]
[-118.27017975 226.93395996]
[-125.63091278 213.45378113]
[-125.24936676 198.09963989]
[-117.22817230 185.00169373]
[-103.72499084 177.68325806]
[-88.37210846 178.11293030]
[-75.29937744 186.17514038]
[-62.13418961 178.98640442]
[-48.96900558 171.79766846]
[-35.80382156 164.60893250]
[-22.63863564 157.42019653]
[-9.57744503 150.04420471]
[3.37708902 142.48246765]
[16.33162308 134.92071533]
[29.28615761 127.35896301]
[42.24069214 119.79721069]
[39.15694427 105.11762238]
[24.25471878 103.40774536]
[9.35249233 101.69787598]
[-1.87394512 112.58370209]
[-17.47479248 113.65493774]
[-30.08380890 104.40579224]
[-33.74739838 89.20341492]
[-26.73572922 75.22591400]
[-12.35949612 69.07303619]
[2.59328294 73.64997864]
[11.06236362 86.79565430]
[25.96459007 88.50552368]
[40.86681747 90.21539307]
[42.38415909 83.51099396]
[44.65889359 77.02534485]
[47.66088867 70.84368134]
[34.81565475 63.09771729]
[21.97041702 55.35175323]
[9.12518215 47.60579300]
[-6.73042870 50.05102539]
[-18.42988014 39.07366562]
[-16.99835587 23.09460831]
[-3.53399634 14.37161636]
[11.63449192 19.59622192]
[16.87114334 34.76055527]
[29.71637917 42.50651932]
[42.56161499 50.25247955]
[55.40684891 57.99844360]
[66.95088196 48.42058945]
[61.70891953 34.36634064]
[56.46695709 20.31209564]
[51.22499466 6.25785065]
[45.98303223 -7.79639530]
[40.74106979 -21.85064125]
[35.49910736 -35.90488815]
[30.25714493 -49.95913315]
[15.19095135 -52.59675980]
[3.54474926 -62.35702133]
[-1.61805177 -76.54193878]
[0.99498934 -91.30770874]
[10.58349705 -102.70622253]
[5.34153461 -116.76046753]
[0.09957181 -130.81471252]
[-12.88375282 -140.83296204]
[-10.43148518 -157.04772949]
[4.93369198 -162.77864075]
[17.40540123 -152.13023376]
[14.15381813 -136.05667114]
[19.39578056 -122.00243378]
[24.63774300 -107.94818878]
[39.34869385 -105.61289978]
[50.99301910 -96.16485596]
[56.38038254 -82.06369781]
[53.97038269 -67.06073761]
[44.31138992 -55.20109558]
[49.55335236 -41.14685059]
[54.79531479 -27.09260368]
[60.03727722 -13.03835773]
[65.27924347 1.01588798]
[70.52120209 15.07013416]
[75.76316833 29.12438011]
[81.00512695 43.17862701]
[101.23032379 42.12770462]
[119.94515228 47.82369995]
[127.13388824 34.65851593]
[134.32261658 21.49333000]
[130.09623718 6.50081682]
[137.57417297 -6.74814653]
[151.89329529 -10.68496132]
[159.08203125 -23.85014725]
[166.27076721 -37.01533127]
[159.50241089 -50.97846222]
[162.26715088 -66.24724579]
[173.50189209 -76.95053101]
[188.88664246 -78.97267914]
[202.50564575 -71.53613281]
[209.12213135 -57.50040436]
[206.19192505 -42.26250839]
[194.84173584 -31.68173027]
[179.43594360 -29.82659721]
[172.24722290 -16.66141129]
[165.05848694 -3.49622679]
[169.48811340 10.67818260]
[162.38526917 24.13195801]
[147.48780823 28.68206406]
[140.29907227 41.84724808]
[133.11033630 55.01243591]
[140.42776489 61.45429611]
[146.51373291 69.07028198]
[151.18287659 77.62840271]
[154.29295349 86.86798096]
[155.74923706 96.50756073]
[155.50737000 106.25352478]
[153.57472229 115.80900574]
[150.01014709 124.88293457]
[144.92224121 133.19891357]
[155.67921448 143.65296936]
[166.43618774 154.10704041]
[182.01293945 154.05329895]
[192.77311707 164.80844116]
[192.72834778 179.65881348]
[203.48533630 190.11288452]
[214.24230957 200.56694031]
[224.99928284 211.02101135]
[235.75625610 221.47506714]
[246.51324463 231.92913818]
[257.27020264 242.38319397]
[268.02719116 252.83726501]
[278.75906372 246.56614685]
[290.67068481 243.05355835]
[303.06600952 242.49923706]
[315.22195435 244.93025208]
[326.43072510 250.19961548]
[336.04098511 257.99526978]
[343.49566650 267.85855103]
[348.36428833 279.21105957]
[350.36779785 291.38876343]
[349.39462280 303.68063354]
[345.50680542 315.37039185]
[338.93603516 325.77798462]
[349.07864380 336.82910156]
[359.22128296 347.88021851]
[369.36389160 358.93133545]
[379.50653076 369.98245239]
[389.64913940 381.03356934]
[399.79177856 392.08468628]
[409.93438721 403.13580322]
[420.07702637 414.18692017]
[438.02676392 411.58624268]
[453.80349731 420.20989990]
[461.17544556 436.43627930]
[457.36029053 453.68447876]
[467.81436157 464.44146729]
[478.26840210 475.19842529]
[491.12622070 476.16140747]
[499.61175537 485.33053589]
[499.57870483 497.42288208]
[509.87811279 508.32803345]
[520.17749023 519.23321533]
[536.03656006 523.40722656]
[540.08966064 539.29760742]
[528.16729736 550.55767822]
[512.53417969 545.60406494]
[509.27233887 529.53259277]
[498.97296143 518.62744141]
[488.67355347 507.72229004]
[471.61083984 503.60769653]
[467.51144409 485.65249634]
[457.05737305 474.89553833]
[446.60330200 464.13854980]
[434.98342896 467.62738037]
[422.91101074 465.83673096]
[412.68386841 459.04541016]
[406.27493286 448.48989868]
[404.95166016 436.13964844]
[409.02590942 424.32955933]
[398.88327026 413.27844238]
[388.74066162 402.22732544]
[378.59802246 391.17620850]
[368.45541382 380.12509155]
[358.31277466 369.07397461]
[348.17016602 358.02285767]
[338.02752686 346.97174072]
[327.88491821 335.92062378]
[311.75964355 343.20352173]
[294.09249878 344.53805542]
[277.01028442 339.74728394]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 160]
[5 159]
[6 158]
[7 157]
[8 156]
[9 155]
[10 154]
[11 153]
[14 150]
[15 149]
[16 148]
[21 52]
[22 51]
[23 50]
[24 49]
[25 48]
[28 47]
[29 46]
[30 45]
[31 44]
[32 43]
[53 65]
[54 64]
[55 63]
[68 80]
[69 79]
[70 78]
[71 77]
[81 114]
[82 113]
[83 112]
[84 111]
[85 110]
[86 109]
[87 108]
[88 107]
[93 102]
[94 101]
[95 100]
[116 139]
[117 138]
[118 137]
[121 134]
[122 133]
[123 132]
[172 216]
[173 215]
[174 214]
[175 213]
[176 212]
[177 211]
[178 210]
[179 209]
[180 208]
[184 202]
[185 201]
[186 200]
[189 198]
[190 197]
[191 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
