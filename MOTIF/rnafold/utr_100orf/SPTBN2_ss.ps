%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:41:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUGAGCAGCCAACCGCAGCCUCUGGCCACAAGGAGAGCGGAGCACAGGAGCAGGAAGCCGCCUACCACCAUGAGCAGCACGCUGUCACCCACAGACUUUGACAGCUUGGAAAUCCAGGGCCAGUACAGUGACAUCAACAACCGCUGGGACCUUCCUGACUCGGACUGGG\
) } def
/len { sequence length } bind def

/coor [
[113.60234833 223.29110718]
[101.12033844 232.14875793]
[85.95017242 234.17965698]
[71.57783508 228.91709900]
[61.30598450 217.57040405]
[57.49502182 202.74693298]
[61.02067184 187.85302734]
[71.07277679 176.31120300]
[85.34142303 170.77366638]
[86.97254944 155.86262512]
[88.60366821 140.95156860]
[90.09933472 126.02632141]
[91.45942688 111.08811188]
[85.19049835 106.97100830]
[72.65264130 98.73680115]
[66.38371277 94.61970520]
[53.21556091 101.80300140]
[40.04741287 108.98630524]
[26.87926102 116.16960144]
[24.40505028 126.80763245]
[16.63031006 134.16188049]
[6.30470991 135.96536255]
[-3.09927368 131.85784912]
[-16.51957321 138.55825806]
[-29.93987274 145.25868225]
[-43.36017227 151.95909119]
[-45.77980804 167.28636169]
[-56.77026749 178.24032593]
[-72.10549164 180.60897827]
[-85.88877869 173.48152161]
[-92.82016754 159.59860229]
[-90.23439789 144.29847717]
[-79.12575531 133.46438599]
[-63.76573944 131.26223755]
[-50.06058884 138.53878784]
[-36.64028931 131.83837891]
[-23.21998787 125.13796234]
[-9.79968834 118.43755341]
[-0.38812467 101.57019043]
[19.69596100 103.00145721]
[32.86411285 95.81815338]
[46.03226089 88.63484955]
[59.20041275 81.45155334]
[55.96604538 66.80440521]
[60.96816635 52.66302109]
[72.69290161 43.30723953]
[87.59178925 41.56856155]
[101.15573883 47.97318649]
[109.27966309 60.58278275]
[109.50487518 75.58109283]
[101.76171875 88.43032837]
[112.12484741 77.58571625]
[122.48797607 66.74110413]
[132.75221252 55.80284500]
[142.91670227 44.77184296]
[153.08120728 33.74084091]
[163.24569702 22.70983887]
[173.41018677 11.67883587]
[183.57469177 0.64783323]
[193.73918152 -10.38316917]
[203.70170593 -21.59692574]
[213.45895386 -32.98973465]
[218.92085266 -64.55868530]
[222.42915344 -79.14263916]
[225.93745422 -93.72660065]
[229.44575500 -108.31055450]
[219.37500000 -97.19390106]
[209.26010132 -86.11740112]
[196.36921692 -78.44766998]
[181.80877686 -74.84300232]
[166.82853699 -75.61279297]
[152.71429443 -80.69097900]
[140.67747498 -89.64168549]
[131.75123596 -101.69665527]
[126.70173645 -115.82118988]
[125.96237946 -130.80296326]
[129.59661865 -145.35604858]
[137.29252625 -158.23133850]
[148.38954163 -168.32371521]
[161.93521118 -174.76693726]
[176.76686096 -177.00796509]
[191.61146545 -174.85446167]
[205.19487000 -168.49125671]
[207.51013184 -153.67102051]
[212.58351135 -167.78700256]
[217.65689087 -181.90296936]
[222.73027039 -196.01895142]
[227.80364990 -210.13493347]
[232.87702942 -224.25091553]
[237.95040894 -238.36688232]
[227.55558777 -249.60104370]
[223.58340454 -264.38214111]
[226.94664001 -279.31353760]
[236.87243652 -290.96417236]
[251.07994080 -296.65676880]
[266.30435181 -295.08322144]
[279.04721069 -286.60513306]
[286.38031006 -273.17071533]
[286.61856079 -257.86703491]
[279.70721436 -244.21084595]
[267.23443604 -235.34019470]
[252.06637573 -233.29350281]
[246.99299622 -219.17753601]
[241.91961670 -205.06155396]
[236.84623718 -190.94557190]
[231.77285767 -176.82958984]
[226.69947815 -162.71362305]
[221.62609863 -148.59764099]
[233.28096008 -139.15390015]
[244.93476868 -129.71096802]
[257.69223022 -137.60064697]
[270.44970703 -145.49031067]
[277.73495483 -160.18238831]
[294.11618042 -160.94903564]
[302.74176025 -147.00158691]
[294.73846436 -132.68798828]
[278.33938599 -132.73283386]
[265.58190918 -124.84317017]
[252.82443237 -116.95349884]
[244.02970886 -104.80225372]
[240.52140808 -90.21829987]
[237.01310730 -75.63433838]
[233.50480652 -61.05038452]
[241.54684448 -73.71235657]
[256.31930542 -76.31507111]
[268.20452881 -67.16401672]
[269.46456909 -52.21702957]
[259.27905273 -41.20541763]
[244.27975464 -41.29815674]
[258.44122314 -36.35315323]
[272.60266113 -31.40815163]
[286.76412964 -26.46315002]
[300.92559814 -21.51814651]
[312.06491089 -32.01453781]
[326.80932617 -36.12076187]
[341.77066040 -32.89323807]
[353.51092529 -23.07362747]
[359.33227539 -8.91840744]
[357.89703369 6.31965923]
[349.53500366 19.13897514]
[336.16769409 26.59375572]
[320.86685181 26.97094536]
[307.14846802 20.18387032]
[298.16491699 7.79215145]
[295.98059082 -7.35668659]
[281.81912231 -12.30168915]
[267.65768433 -17.24669266]
[253.49621582 -22.19169426]
[239.33474731 -27.13669586]
[224.85176086 -23.23249054]
[215.09451294 -11.83967876]
[214.56838989 -7.06014729]
[211.01095581 -2.57065725]
[204.77018738 -0.21867299]
[194.60569763 10.81232929]
[184.44119263 21.84333229]
[174.27670288 32.87433624]
[164.11219788 43.90533829]
[153.94770813 54.93634033]
[143.78321838 65.96733856]
[141.55505371 73.04238129]
[133.33258057 77.10423279]
[122.96945953 87.94884491]
[112.60633087 98.79345703]
[106.39764404 112.44820404]
[105.03755188 127.38641357]
[107.38166809 136.25279236]
[103.51471710 142.58268738]
[101.88359833 157.49374390]
[100.25247192 172.40478516]
[112.98650360 180.89614868]
[120.30561066 194.33822632]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 170]
[10 169]
[11 168]
[12 166]
[13 165]
[16 43]
[17 42]
[18 41]
[19 40]
[23 38]
[24 37]
[25 36]
[26 35]
[51 164]
[52 163]
[53 162]
[54 160]
[55 159]
[56 158]
[57 157]
[58 156]
[59 155]
[60 154]
[61 151]
[62 150]
[63 123]
[64 122]
[65 121]
[66 120]
[84 108]
[85 107]
[86 106]
[87 105]
[88 104]
[89 103]
[90 102]
[110 119]
[111 118]
[112 117]
[129 149]
[130 148]
[131 147]
[132 146]
[133 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
