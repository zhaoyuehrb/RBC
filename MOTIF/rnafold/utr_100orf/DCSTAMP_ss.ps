%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:12:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAUAUCAAGACCUACAGCCCUUGGGAAGUGCAUUUCUGCAUUCGAAGAAGAAUCUGAGAGAAACCUGACGCAGGGAGCAUGGGUAUCUGGACCUCAGGCACUGAUAUCUUCCUAAGUCUUUGGGAGAUUUACGUGUCUCCAAGAAGCCCCGGAUGGAUGGACUUUAUCCAGCAUUUGG\
) } def
/len { sequence length } bind def

/coor [
[111.40245819 162.43272400]
[108.77557373 177.20091248]
[101.85926819 190.51124573]
[91.28445435 201.14953613]
[78.01575470 208.14537048]
[63.26354980 210.86059570]
[48.37353134 209.04750061]
[34.70396042 202.87152100]
[23.50178146 192.89598083]
[15.78885174 180.03088379]
[12.26874733 165.44978333]
[13.26257038 150.48274231]
[18.67966461 136.49505615]
[28.02588463 124.76270294]
[40.44866562 116.35588837]
[54.81480789 112.04149628]
[69.81488800 112.21324158]
[83.75691223 106.67971802]
[68.86872101 104.85167694]
[53.96514511 103.15363312]
[39.04731750 101.58570099]
[24.12948799 100.01777649]
[9.21165943 98.44985199]
[-5.70616913 96.88191986]
[-16.83890724 109.59829712]
[-33.19301987 113.14832306]
[-48.29349136 106.32875824]
[-56.28168488 92.00237274]
[-71.22460938 90.69503784]
[-79.48017120 101.75276947]
[-92.02494049 107.23713684]
[-105.53274536 105.81090546]
[-116.47947693 97.95391083]
[-122.06256104 85.80957794]
[-136.98039246 84.24165344]
[-151.89822388 82.67372894]
[-166.81604004 81.10579681]
[-181.73387146 79.53787231]
[-195.10961914 90.79133606]
[-212.15193176 88.93974304]
[-222.38752747 75.61133575]
[-237.33045959 74.30400085]
[-252.27337646 72.99666595]
[-267.21630859 71.68932343]
[-279.16046143 82.03884888]
[-294.91827393 80.82794189]
[-305.14096069 68.77503204]
[-303.76351929 53.03087997]
[-291.60317993 42.93622208]
[-275.87448120 44.48003769]
[-265.90896606 56.74640656]
[-250.96603394 58.05374146]
[-236.02311707 59.36107635]
[-221.08020020 60.66841507]
[-212.45170593 51.07686996]
[-199.68179321 48.17146683]
[-187.39270020 53.23406219]
[-180.16595459 64.62004089]
[-165.24812317 66.18797302]
[-150.33029175 67.75589752]
[-135.41246033 69.32382202]
[-120.49463654 70.89175415]
[-109.91960144 58.35280228]
[-93.79533386 54.53983688]
[-78.41906738 61.14514923]
[-69.91726685 75.75211334]
[-54.97434998 77.05945587]
[-47.17659760 66.20355225]
[-34.93179703 60.57964706]
[-21.40003777 61.75703049]
[-10.13221455 69.53428650]
[-4.13824224 81.96409607]
[10.77958584 83.53202057]
[25.69741440 85.09994507]
[40.61524200 86.66787720]
[55.53307343 88.23580170]
[62.53357315 85.80115509]
[70.69676208 89.96348572]
[85.58495331 91.79152679]
[91.47383118 85.30387115]
[100.03023529 82.60765839]
[108.98312378 84.63954163]
[120.80328369 75.40461731]
[132.62344360 66.16969299]
[144.44360352 56.93477249]
[150.55473328 42.34146500]
[165.34751892 40.60284805]
[177.16767883 31.36792564]
[188.98783875 22.13300514]
[200.72695923 12.79528522]
[212.38415527 3.35547900]
[224.04133606 -6.08432674]
[209.66941833 -10.37940121]
[203.90084839 -24.22583008]
[210.97222900 -37.45441818]
[225.69013977 -40.34973145]
[237.24536133 -30.78537369]
[237.15110779 -15.78504276]
[249.58666992 -24.17293549]
[262.02224731 -32.56082916]
[274.45779419 -40.94872284]
[286.89337158 -49.33661652]
[299.25524902 -57.83271027]
[311.54254150 -66.43635559]
[323.82980347 -75.04000092]
[329.08337402 -82.54750824]
[336.40747070 -83.68437958]
[348.84301758 -92.07227325]
[361.27859497 -100.46016693]
[373.71414185 -108.84806061]
[386.14971924 -117.23595428]
[398.58526611 -125.62384796]
[411.02084351 -134.01173401]
[410.57537842 -149.43267822]
[418.55737305 -162.63461304]
[432.41983032 -169.40486145]
[447.73925781 -167.58306885]
[459.62728882 -157.75056458]
[464.29049683 -143.04484558]
[460.24087524 -128.15847778]
[448.77062988 -117.84162140]
[433.53991699 -115.38637543]
[419.40872192 -121.57617950]
[406.97317505 -113.18828583]
[394.53759766 -104.80039215]
[382.10205078 -96.41249847]
[369.66647339 -88.02460480]
[357.23092651 -79.63671112]
[344.79534912 -71.24881744]
[332.43347168 -62.75272369]
[320.14617920 -54.14907837]
[307.85888672 -45.54542923]
[304.17282104 -39.11523819]
[295.28125000 -36.90105438]
[282.84570312 -28.51316071]
[270.41012573 -20.12526703]
[257.97457886 -11.73737240]
[245.53900146 -3.34947920]
[233.48114014 5.57286263]
[221.82395935 15.01266861]
[210.16676331 24.45247459]
[206.93821716 31.12413025]
[198.22276306 33.95316696]
[186.40260315 43.18808746]
[174.58244324 52.42301178]
[169.31677246 66.35577393]
[153.67852783 68.75493622]
[141.85836792 77.98986053]
[130.03820801 87.22477722]
[118.21804810 96.45970154]
[115.48451233 111.20852661]
[123.21008301 124.06603241]
[130.93565369 136.92353821]
[138.66122437 149.78105164]
[146.38679504 162.63856506]
[154.11236572 175.49607849]
[166.43200684 179.37704468]
[172.59747314 190.26829529]
[169.77127075 202.04811096]
[177.27127075 215.03849792]
[184.77127075 228.02886963]
[192.27127075 241.01925659]
[207.33316040 246.54367065]
[212.26803589 261.80886841]
[203.29026794 275.10473633]
[187.28684998 276.23178101]
[176.53422546 264.32543945]
[179.28089905 248.51925659]
[171.78089905 235.52886963]
[164.28089905 222.53849792]
[156.78089905 209.54811096]
[141.13694763 201.62248230]
[141.25485229 183.22164917]
[133.52928162 170.36413574]
[125.80371857 157.50662231]
[118.07814789 144.64910889]
[110.35257721 131.79161072]
[102.62699890 118.93409729]
[103.24260712 133.92146301]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 79]
[19 78]
[20 76]
[21 75]
[22 74]
[23 73]
[24 72]
[28 67]
[29 66]
[34 62]
[35 61]
[36 60]
[37 59]
[38 58]
[41 54]
[42 53]
[43 52]
[44 51]
[82 150]
[83 149]
[84 148]
[85 147]
[87 145]
[88 144]
[89 143]
[90 141]
[91 140]
[92 139]
[98 138]
[99 137]
[100 136]
[101 135]
[102 134]
[103 132]
[104 131]
[105 130]
[107 129]
[108 128]
[109 127]
[110 126]
[111 125]
[112 124]
[113 123]
[151 178]
[152 177]
[153 176]
[154 175]
[155 174]
[156 173]
[159 171]
[160 170]
[161 169]
[162 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
