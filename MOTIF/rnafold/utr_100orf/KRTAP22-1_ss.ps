%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:39:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGCUAUACAACUGAGCCUACCUUUCUUGAAACCAUGAGCUUUGAUAACAACUACCAUGGUGGCCAGGGCUAUGCCAAAGGAGGCCUGGGCUGCAGCUAUGGCUGUGGUCUUAGCGGCUAUGGCUAUGCCUGCU\
) } def
/len { sequence length } bind def

/coor [
[250.57312012 336.41851807]
[242.17517090 348.84729004]
[230.09605408 357.74081421]
[215.73420715 362.06948853]
[200.75233459 361.33215332]
[186.88493347 355.61419678]
[175.73747253 345.57754517]
[168.60049438 332.38424683]
[166.30029297 317.56164551]
[169.10316467 302.82583618]
[176.68460083 289.88284302]
[188.16688538 280.23104858]
[202.22068787 274.98788452]
[217.21896362 274.76040649]
[231.42762756 279.57614136]
[222.33085632 267.64932251]
[213.23408508 255.72251892]
[204.13732910 243.79571533]
[195.04055786 231.86889648]
[185.94378662 219.94209290]
[169.43183899 214.11537170]
[167.12454224 195.88914490]
[157.75271606 184.17723083]
[148.38088989 172.46533203]
[139.00904846 160.75341797]
[129.63722229 149.04150391]
[120.26539612 137.32958984]
[110.89356995 125.61768341]
[98.93254852 127.81719208]
[87.17525482 124.70751953]
[77.86569214 116.88218689]
[72.78067017 105.83471680]
[72.89072418 93.67363739]
[78.17484283 82.72000885]
[69.35806274 70.58475494]
[60.54128265 58.44949722]
[52.89296341 53.28573608]
[51.66442490 45.92771530]
[43.13240814 33.59059143]
[34.60039139 21.25346375]
[26.06837654 8.91633701]
[17.53635979 -3.42078900]
[9.00434208 -15.75791550]
[0.47232556 -28.09504128]
[-11.52391434 -27.91959572]
[-21.98803520 -33.53803635]
[-28.33891296 -43.43167877]
[-29.07486725 -55.04453659]
[-24.12724304 -65.44320679]
[-32.07603455 -78.16392517]
[-39.34551620 -83.84862518]
[-40.05778885 -91.27442169]
[-47.70843124 -104.17665863]
[-55.35906982 -117.07889557]
[-68.63845062 -127.61902618]
[-62.18634033 -143.29724121]
[-45.33470917 -141.43743896]
[-42.45682907 -124.72953796]
[-34.80619049 -111.82730103]
[-27.15555382 -98.92506409]
[-19.35531044 -86.11271667]
[-11.40652275 -73.39199066]
[6.59025383 -70.42725372]
[16.95911598 -55.03829956]
[12.80945206 -36.62705994]
[21.34146881 -24.28993225]
[29.87348557 -11.95280552]
[38.40550232 0.38432065]
[46.93751907 12.72144699]
[55.46953583 25.05857277]
[64.00155640 37.39569855]
[72.67653656 49.63271713]
[81.49331665 61.76797485]
[90.31009674 73.90322876]
[107.74228668 73.26065063]
[122.13430786 83.11781311]
[127.83485413 99.60411072]
[122.60548401 116.24585724]
[131.97731018 127.95777130]
[141.34913635 139.66967773]
[150.72096252 151.38159180]
[160.09278870 163.09350586]
[169.46461487 174.80540466]
[178.83644104 186.51731873]
[191.60313416 188.73559570]
[199.16319275 198.76039124]
[197.87060547 210.84532166]
[206.96737671 222.77212524]
[216.06413269 234.69894409]
[225.16090393 246.62576294]
[234.25767517 258.55258179]
[243.35443115 270.47937012]
[254.50160217 280.51632690]
[267.31396484 288.31658936]
[280.12631226 296.11682129]
[292.93865967 303.91705322]
[308.74966431 304.48452759]
[315.59722900 317.71176147]
[328.40957642 325.51199341]
[341.22192383 333.31225586]
[354.03427124 341.11248779]
[366.84661865 348.91271973]
[379.65896606 356.71298218]
[392.47131348 364.51321411]
[405.28366089 372.31344604]
[418.09600830 380.11370850]
[430.90835571 387.91394043]
[443.72070312 395.71417236]
[456.53305054 403.51443481]
[469.34539795 411.31466675]
[485.21121216 408.93655396]
[496.86410522 419.96331787]
[495.36499023 435.93615723]
[481.86383057 444.60211182]
[466.71759033 439.31335449]
[461.54516602 424.12701416]
[448.73281860 416.32678223]
[435.92047119 408.52651978]
[423.10812378 400.72628784]
[410.29577637 392.92605591]
[397.48342896 385.12579346]
[384.67108154 377.32556152]
[371.85873413 369.52532959]
[359.04638672 361.72506714]
[346.23403931 353.92483521]
[333.42169189 346.12460327]
[320.60934448 338.32434082]
[307.79699707 330.52410889]
[292.90240479 330.51458740]
[285.13839722 316.72940063]
[272.32604980 308.92916870]
[259.51370239 301.12893677]
[246.70137024 293.32867432]
[252.97526550 306.95358276]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 92]
[16 91]
[17 90]
[18 89]
[19 88]
[20 87]
[22 84]
[23 83]
[24 82]
[25 81]
[26 80]
[27 79]
[28 78]
[34 74]
[35 73]
[36 72]
[38 71]
[39 70]
[40 69]
[41 68]
[42 67]
[43 66]
[44 65]
[49 62]
[50 61]
[52 60]
[53 59]
[54 58]
[93 133]
[94 132]
[95 131]
[96 130]
[98 128]
[99 127]
[100 126]
[101 125]
[102 124]
[103 123]
[104 122]
[105 121]
[106 120]
[107 119]
[108 118]
[109 117]
[110 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
