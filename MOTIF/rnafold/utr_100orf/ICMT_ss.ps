%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:34:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCGCAGGCGCAGCCGGCGCGUUUCUCCGGGCUACAGCCGGCGCCGCCGCCCGCUAGUCCGCCGCCCGGCGCCAUGGCGGGCUGCGCGGCGCGGGCUCCGCCGGGCUCUGAGGCGCGUCUCAGCCUCGCCACCUUCCUGCUGGGCGCCUCGGUGCUCGCGCUGCCGCUGCUCA\
) } def
/len { sequence length } bind def

/coor [
[95.34771729 305.01168823]
[84.85137939 294.29522705]
[81.89183044 309.00036621]
[87.63800812 324.35983276]
[77.00200653 336.84213257]
[60.92522812 333.60650635]
[55.94608307 317.98153687]
[67.18669128 306.04080200]
[70.14624023 291.33566284]
[72.43924713 276.51196289]
[74.06102753 261.59991455]
[75.68281555 246.68783569]
[77.30459595 231.77577209]
[78.92638397 216.86369324]
[76.51528168 209.84979248]
[80.71443176 201.69790649]
[82.60517883 186.81755066]
[84.49592590 171.93719482]
[86.25225830 157.04037476]
[87.87404633 142.12831116]
[89.49583435 127.21623230]
[91.11761475 112.30416870]
[83.78253937 125.38838196]
[69.97304535 131.24482727]
[55.46818542 127.42266083]
[46.33800125 115.52140808]
[46.40333176 100.52155304]
[55.63683319 88.70028687]
[70.17443848 85.00461578]
[83.93333435 90.98197174]
[73.61784363 80.09204102]
[63.30234909 69.20210266]
[49.86481094 70.38754272]
[38.37135696 63.70506668]
[32.91611862 51.79484558]
[35.29180145 39.11008072]
[25.17459869 28.03568840]
[15.05739594 16.96129227]
[4.94019413 5.88689804]
[-10.08014297 0.91698289]
[-12.95204067 -13.69812775]
[-23.06924248 -24.77252388]
[-33.18644333 -35.84691620]
[-43.30364609 -46.92131424]
[-53.42084885 -57.99570847]
[-63.53805161 -69.07009888]
[-73.65525055 -80.14450073]
[-93.11392975 -85.32224274]
[-96.52740479 -104.33432770]
[-107.03782654 -115.03624725]
[-117.54824066 -125.73816681]
[-128.05867004 -136.44009399]
[-138.56907654 -147.14201355]
[-149.07949829 -157.84393311]
[-159.58992004 -168.54585266]
[-170.10034180 -179.24777222]
[-185.35539246 -177.10549927]
[-198.78976440 -184.27287292]
[-205.35008240 -197.81636047]
[-202.70912170 -212.45068359]
[-213.21952820 -223.15260315]
[-223.72994995 -233.85452271]
[-234.24037170 -244.55644226]
[-250.17791748 -248.41992188]
[-254.54058838 -264.22811890]
[-242.84042358 -275.71893311]
[-227.11357117 -271.07156372]
[-223.53845215 -255.06686401]
[-213.02803040 -244.36494446]
[-202.51760864 -233.66302490]
[-192.00720215 -222.96110535]
[-177.32757568 -225.33743286]
[-163.90473938 -218.53366089]
[-156.98107910 -204.97207642]
[-159.39842224 -189.75819397]
[-148.88800049 -179.05627441]
[-138.37757874 -168.35435486]
[-127.86716461 -157.65243530]
[-117.35674286 -146.95051575]
[-106.84632111 -136.24858093]
[-96.33590698 -125.54666901]
[-85.82548523 -114.84474945]
[-75.59818268 -115.66951752]
[-66.42183685 -110.60633850]
[-61.46192551 -101.12475586]
[-62.58085632 -90.26169586]
[-52.46365738 -79.18730164]
[-42.34645462 -68.11290741]
[-32.22925186 -57.03851318]
[-22.11204910 -45.96411896]
[-11.99484730 -34.88972473]
[-1.87764537 -23.81533051]
[12.41904163 -19.63752937]
[16.01458931 -4.23030424]
[26.13179016 6.84409094]
[36.24899292 17.91848564]
[46.36619568 28.99287987]
[63.16838455 29.02283096]
[74.99507904 41.42819595]
[74.19228363 58.88661194]
[84.50777435 69.77654266]
[94.82326508 80.66648102]
[116.83326721 88.81119537]
[131.83082581 88.54038239]
[146.82838440 88.26956940]
[161.82592773 87.99875641]
[175.48416138 80.01356506]
[188.34906006 87.51982880]
[203.34660339 87.24901581]
[218.34416199 86.97820282]
[233.34172058 86.70738983]
[248.33927917 86.43657684]
[263.33682251 86.16576385]
[278.33438110 85.89495087]
[293.33193970 85.62414551]
[308.32949829 85.35333252]
[312.85870361 82.62187958]
[317.51507568 81.98836517]
[321.47015381 83.14469147]
[324.14123535 85.49607849]
[339.13146973 86.03761292]
[354.12167358 86.57914734]
[369.11190796 87.12068176]
[384.10211182 87.66221619]
[390.39065552 73.82304382]
[401.49993896 63.44747543]
[415.73587036 58.11772156]
[430.92761230 58.64653015]
[444.75851440 64.95325470]
[455.11944580 76.07617950]
[460.43048096 90.31912231]
[459.88168335 105.51014709]
[453.55676270 119.33273315]
[442.42022705 129.67903137]
[428.17028809 134.97131348]
[412.98001099 134.40254211]
[399.16577148 128.05944824]
[388.83410645 116.90930939]
[383.56057739 102.65244293]
[368.57037354 102.11090851]
[353.58013916 101.56936646]
[338.58990479 101.02783203]
[323.59970093 100.48629761]
[308.60031128 100.35088348]
[293.60275269 100.62169647]
[278.60519409 100.89250946]
[263.60763550 101.16332245]
[248.61009216 101.43413544]
[233.61253357 101.70494843]
[218.61497498 101.97576141]
[203.61741638 102.24656677]
[188.61987305 102.51737976]
[176.03436279 110.48320007]
[162.09674072 102.99631500]
[147.09919739 103.26712799]
[132.10163879 103.53794098]
[117.10408020 103.80874634]
[106.02968597 113.92594910]
[104.40789795 128.83802795]
[102.78611755 143.75009155]
[101.16432953 158.66215515]
[103.35247803 167.56710815]
[99.37628174 173.82794189]
[97.48553467 188.70829773]
[95.59478760 203.58865356]
[93.83845520 218.48547363]
[92.21666718 233.39755249]
[90.59488678 248.30961609]
[88.97309875 263.22167969]
[87.35131073 278.13375854]
[100.59437561 271.08953857]
[114.43131256 276.88082886]
[118.70864868 291.25805664]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 9]
[3 8]
[10 170]
[11 169]
[12 168]
[13 167]
[14 166]
[16 165]
[17 164]
[18 163]
[19 161]
[20 160]
[21 159]
[22 158]
[30 102]
[31 101]
[32 100]
[36 97]
[37 96]
[38 95]
[39 94]
[41 92]
[42 91]
[43 90]
[44 89]
[45 88]
[46 87]
[47 86]
[49 82]
[50 81]
[51 80]
[52 79]
[53 78]
[54 77]
[55 76]
[56 75]
[60 71]
[61 70]
[62 69]
[63 68]
[103 157]
[104 156]
[105 155]
[106 154]
[108 152]
[109 151]
[110 150]
[111 149]
[112 148]
[113 147]
[114 146]
[115 145]
[116 144]
[120 143]
[121 142]
[122 141]
[123 140]
[124 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
