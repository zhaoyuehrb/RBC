%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:05:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCCCGCCCCGCUCGCUGGCCUGCCCUCCUCUUGCUACCCUCCCGGCGCAGAGAACCCCGGCUGCUCAGCGCGCUCCGCGGUCAUGGAGAUCCCCGGGAGCCUGUGCAAGAAAGUCAAACUGAGCAAUAACGCGCAGAACUGGGGAAUGCAGAGAGCAACCAAUGUCACCUACCAAGCCCAUC\
) } def
/len { sequence length } bind def

/coor [
[20.29880905 161.20278931]
[10.78574562 162.32879639]
[1.57535958 159.91482544]
[-6.06877279 154.33589172]
[-11.11401081 146.39811707]
[-26.04863358 147.79705811]
[-40.98325729 149.19599915]
[-55.91787720 150.59494019]
[-63.88359833 163.78030396]
[-77.92177582 169.67799377]
[-92.56770325 166.21952820]
[-102.25283051 154.93519592]
[-117.18745422 156.33413696]
[-130.20587158 165.32476807]
[-143.59927368 158.80816650]
[-158.53390503 160.20710754]
[-173.46852112 161.60606384]
[-188.40315247 163.00500488]
[-203.33776855 164.40394592]
[-218.25997925 165.92964172]
[-233.16868591 167.58198547]
[-241.83572388 177.15440369]
[-254.30288696 178.21250916]
[-263.82757568 170.73229980]
[-278.76220703 172.13125610]
[-293.69683838 173.53019714]
[-302.71810913 190.38319397]
[-319.92675781 198.35617065]
[-338.32339478 194.40469360]
[-350.54409790 180.29467773]
[-365.38812256 182.45231628]
[-380.23211670 184.60995483]
[-395.07611084 186.76759338]
[-409.90127563 189.05119324]
[-424.70651245 191.46058655]
[-439.51174927 193.86997986]
[-454.31695557 196.27937317]
[-461.18231201 210.19506836]
[-474.93154907 217.38795471]
[-490.27786255 215.09220886]
[-501.32025146 204.19059753]
[-503.81271362 188.87500000]
[-496.79681396 175.03459167]
[-482.97033691 167.99128723]
[-467.64984131 170.45338440]
[-456.72634888 181.47413635]
[-441.92114258 179.06474304]
[-427.11590576 176.65536499]
[-412.31066895 174.24597168]
[-406.19970703 170.05871582]
[-397.23376465 171.92358398]
[-382.38977051 169.76594543]
[-367.54574585 167.60830688]
[-352.70175171 165.45066833]
[-349.45538330 154.73762512]
[-342.40515137 145.97659302]
[-332.54473877 140.46369934]
[-321.28701782 139.03292847]
[-310.26162720 141.93013000]
[-301.07916260 148.77185059]
[-295.09576416 158.59556580]
[-280.16113281 157.19662476]
[-265.22653198 155.79768372]
[-251.49548340 144.88511658]
[-234.82102966 152.67327881]
[-219.91232300 151.02093506]
[-213.59606934 147.15029907]
[-204.73670959 149.46932983]
[-189.80209351 148.07037354]
[-174.86746216 146.67143250]
[-159.93284607 145.27249146]
[-144.99822998 143.87355042]
[-133.04803467 134.98298645]
[-118.58640289 141.39952087]
[-103.65177917 140.00057983]
[-96.23077393 127.11388397]
[-82.48191833 120.99565125]
[-67.59265900 124.18367767]
[-57.31682205 135.66032410]
[-42.38220215 134.26138306]
[-27.44757843 132.86242676]
[-12.51295471 131.46348572]
[-0.88018727 114.67991638]
[19.63917923 111.85110474]
[35.83049011 125.23379517]
[50.63571930 122.82440186]
[65.44094849 120.41500854]
[80.24617767 118.00561523]
[74.65417480 100.57529449]
[81.56577301 84.66915131]
[96.38574982 77.69092560]
[111.19860840 81.97117615]
[123.10536957 72.84817505]
[135.01213074 63.72517395]
[146.91888428 54.60217667]
[158.82563782 45.47917557]
[170.73239136 36.35617828]
[182.63916016 27.23317909]
[181.87637329 15.34186459]
[186.90684509 4.67256975]
[196.37152100 -2.16427135]
[207.84284973 -3.55821419]
[218.44688416 0.72310698]
[230.65657043 -7.99031734]
[242.86624146 -16.70374107]
[255.07591248 -25.41716576]
[267.28558350 -34.13058853]
[279.49526978 -42.84401321]
[275.15386963 -58.16241074]
[276.31417847 -74.01490784]
[282.81784058 -88.48898315]
[293.86291504 -99.84470367]
[308.10278320 -106.72389221]
[323.81027222 -108.31254578]
[339.08721924 -104.43713379]
[352.09375000 -95.58331299]
[364.15368652 -104.50281525]
[376.21365356 -113.42230988]
[385.35290527 -127.70202637]
[401.60458374 -122.87294006]
[401.46310425 -105.91958618]
[385.13314819 -101.36235046]
[373.07318115 -92.44285583]
[361.01324463 -83.52335358]
[365.44262695 -70.06532288]
[365.49591064 -55.87575531]
[361.15460205 -42.34395599]
[352.83117676 -30.79894066]
[341.32980347 -22.37889290]
[327.76885986 -17.91896248]
[313.47192383 -17.86844444]
[299.83892822 -22.24555206]
[288.20870972 -30.63433647]
[275.99902344 -21.92091179]
[263.78933716 -13.20748806]
[251.57966614 -4.49406385]
[239.36997986 4.21936083]
[227.16030884 12.93278503]
[225.25262451 31.12266350]
[210.41473389 42.35256958]
[191.76216125 39.13993835]
[179.85539246 48.26293564]
[167.94863892 57.38593674]
[156.04188538 66.50893402]
[144.13511658 75.63193512]
[132.22836304 84.75492859]
[120.32160950 93.87792969]
[122.06884003 109.37135315]
[112.22519684 123.76889038]
[125.25782013 131.19523621]
[138.29045105 138.62158203]
[154.08082581 135.78550720]
[166.04783630 146.47055054]
[165.01139832 162.48010254]
[151.76658630 171.53297424]
[136.47367859 166.68458557]
[130.86410522 151.65422058]
[117.83147430 144.22785950]
[104.79884338 136.80151367]
[117.75497437 144.36053467]
[128.12644958 155.19715881]
[135.11015320 168.47224426]
[138.16526794 183.15782166]
[137.05523682 198.11669922]
[131.86599731 212.19050598]
[122.99941254 224.28941345]
[111.14205933 233.47653198]
[97.21212769 239.04043579]
[82.28831482 240.55029297]
[67.52625275 237.88917542]
[54.06906509 231.26315308]
[42.95883560 221.18531799]
[35.05589294 208.43606567]
[30.97221184 194.00265503]
[31.02402115 179.00273132]
[35.20730972 164.59786987]
[43.19813538 151.90351868]
[54.37771988 141.90266418]
[67.88035583 135.36976624]
[82.65557098 132.81085205]
[67.85034180 135.22023010]
[53.04511261 137.62962341]
[38.23988342 140.03901672]
[35.07415390 149.26443481]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 82]
[6 81]
[7 80]
[8 79]
[12 75]
[13 74]
[15 72]
[16 71]
[17 70]
[18 69]
[19 68]
[20 66]
[21 65]
[24 63]
[25 62]
[26 61]
[30 54]
[31 53]
[32 52]
[33 51]
[34 49]
[35 48]
[36 47]
[37 46]
[85 183]
[86 182]
[87 181]
[88 180]
[92 147]
[93 146]
[94 145]
[95 144]
[96 143]
[97 142]
[98 141]
[103 138]
[104 137]
[105 136]
[106 135]
[107 134]
[108 133]
[116 124]
[117 123]
[118 122]
[149 159]
[150 158]
[151 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
