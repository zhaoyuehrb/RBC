%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:23:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAACGUCUGACCUGGGGCCGUCGCUUAACCGUUUAGUUGCUGGGAUGGGGCGGCGUUGGGGGUGCGGCCCUGAACCGGAGGGAUUUAGAGACUGGAGACGCGGCCUCUAAGAGAGGUUGAAACUGUGUGUGUGUGGGAGAAAAUGAUAACCACCCUCCCAUCUCUCCUACCCGCCAGCCUCGCCAGUAUCUCCCACCGAGUCACGAAUCUCCCAUCUAACUCCCUCUCACACAACCCAGGCC\
) } def
/len { sequence length } bind def

/coor [
[111.85755920 266.58926392]
[105.88385773 280.54202271]
[95.27043152 291.39187622]
[81.45265961 297.67150879]
[66.29929352 298.53161621]
[51.85968781 293.85592651]
[40.08668900 284.27673340]
[32.57249451 271.08956909]
[30.33333969 256.07788086]
[33.67205048 241.27188110]
[42.13709641 228.67396545]
[54.58364487 219.98789978]
[69.32840729 216.38838196]
[71.24655914 201.51153564]
[73.16471863 186.63468933]
[75.08287811 171.75782776]
[77.00103760 156.88098145]
[78.91918945 142.00413513]
[66.09204865 134.22824097]
[53.78946686 142.80999756]
[41.48688126 151.39173889]
[29.18429947 159.97349548]
[16.88171577 168.55523682]
[4.57913160 177.13699341]
[-0.65370232 184.59580994]
[-7.93667555 185.74871826]
[-20.34828758 194.17201233]
[-20.97340775 209.56407166]
[-30.43144035 221.49717712]
[-44.93104935 225.52523804]
[-58.85554886 220.30545044]
[-71.26715851 228.72874451]
[-83.62451172 237.23144531]
[-95.92710114 245.81318665]
[-98.45210266 261.41445923]
[-111.31802368 270.59289551]
[-126.89173126 267.90310669]
[-135.93362427 254.94085693]
[-133.07931519 239.39645386]
[-120.02220154 230.49211121]
[-104.50885010 233.51060486]
[-92.20626068 224.92884827]
[-88.52677155 218.53884888]
[-79.69046021 216.31712341]
[-67.27884674 207.89382935]
[-66.98707581 193.02598572]
[-57.88883209 181.03907776]
[-43.30634308 176.65678406]
[-28.77158165 181.76040649]
[-16.35997009 173.33711243]
[-4.00261831 164.83441162]
[8.29996490 156.25265503]
[20.60254860 147.67091370]
[32.90513229 139.08915710]
[45.20771790 130.50741577]
[57.51029968 121.92565918]
[54.07879639 107.32344055]
[39.24158859 105.11951447]
[24.40438271 102.91558075]
[9.61715126 108.54126740]
[-1.83516121 99.01794434]
[-16.67236710 96.81401062]
[-31.50957489 94.61008453]
[-46.34677887 92.40615082]
[-61.18398666 90.20222473]
[-77.73960114 93.85572052]
[-85.83336639 78.95849609]
[-73.75891113 67.05707550]
[-58.98005676 75.36501312]
[-44.14284897 77.56894684]
[-29.30564499 79.77287292]
[-14.46843815 81.97680664]
[0.36876863 84.18073273]
[14.09474373 78.39740753]
[26.60831261 88.07837677]
[41.44551849 90.28230286]
[56.28272629 92.48623657]
[84.69252014 65.62849426]
[116.47891235 73.86815643]
[127.32083130 63.50222015]
[138.16275024 53.13628006]
[149.00468445 42.77033997]
[159.84660339 32.40439987]
[170.68852234 22.03846169]
[181.53044128 11.67252159]
[186.15818787 -3.45674300]
[200.70434570 -6.65960455]
[211.54626465 -17.02554321]
[222.38819885 -27.39148331]
[233.23011780 -37.75742340]
[244.07203674 -48.12336349]
[242.02229309 -59.80649948]
[245.81774902 -70.91801453]
[254.40966797 -78.74444580]
[265.59332275 -81.43354034]
[276.57308960 -78.43170929]
[287.67724609 -88.51622772]
[298.78140259 -98.60073853]
[309.88558960 -108.68524933]
[320.98974609 -118.76976776]
[321.90695190 -134.31956482]
[333.31179810 -144.38851929]
[348.13052368 -143.41828918]
[359.23468018 -153.50280762]
[359.76211548 -170.99903870]
[372.53619385 -182.46621704]
[389.31350708 -181.16160583]
[400.28747559 -191.38768005]
[411.26141357 -201.61373901]
[408.53030396 -219.55734253]
[417.05776978 -235.40093994]
[433.25268555 -242.87197876]
[450.53234863 -239.14227295]
[461.24044800 -249.64639282]
[471.94857788 -260.15048218]
[482.65667725 -270.65460205]
[493.09191895 -281.42984009]
[503.24740601 -292.46911621]
[513.40289307 -303.50842285]
[516.89880371 -311.92239380]
[523.76013184 -314.62307739]
[534.05633545 -325.53125000]
[533.77563477 -341.10556030]
[544.37286377 -352.02130127]
[559.22229004 -352.19293213]
[569.51849365 -363.10107422]
[579.81469727 -374.00924683]
[583.41821289 -382.37771606]
[590.31359863 -384.99017334]
[600.74884033 -395.76544189]
[611.18408203 -406.54067993]
[610.38128662 -417.35946655]
[615.54748535 -426.64880371]
[624.77331543 -431.47079468]
[634.91302490 -430.45278931]
[645.62115479 -440.95690918]
[656.32922363 -451.46102905]
[667.03735352 -461.96511841]
[677.74548340 -472.46923828]
[688.45361328 -482.97332764]
[699.16168213 -493.47744751]
[709.86981201 -503.98156738]
[710.76995850 -516.83349609]
[719.88604736 -525.36102295]
[731.96838379 -525.39916992]
[742.81030273 -535.76513672]
[753.65222168 -546.13110352]
[748.47534180 -560.45306396]
[749.57781982 -575.64202881]
[756.76855469 -589.06640625]
[768.80181885 -598.40026855]
[783.59271240 -602.02648926]
[798.57861328 -599.31683350]
[811.16314697 -590.74078369]
[819.16601562 -577.78411865]
[821.20056152 -562.69171143]
[816.91436768 -548.07843018]
[807.05004883 -536.47607422]
[793.31665039 -529.89483643]
[778.09350586 -529.47491455]
[764.01818848 -535.28918457]
[753.17626953 -524.92321777]
[742.33435059 -514.55725098]
[738.31542969 -497.46484375]
[720.37390137 -493.27343750]
[709.66583252 -482.76931763]
[698.95770264 -472.26522827]
[688.24957275 -461.76110840]
[677.54144287 -451.25701904]
[666.83337402 -440.75289917]
[656.12524414 -430.24877930]
[645.41711426 -419.74468994]
[641.58349609 -400.77914429]
[621.95928955 -396.10543823]
[611.52404785 -385.33020020]
[601.08880615 -374.55496216]
[590.72290039 -363.71301270]
[580.42669678 -352.80487061]
[570.13043213 -341.89669800]
[570.81549072 -327.06207275]
[560.52905273 -315.85296631]
[544.96447754 -315.23501587]
[534.66827393 -304.32687378]
[524.44219971 -293.35290527]
[514.28668213 -282.31362915]
[504.13119507 -271.27435303]
[504.10076904 -268.49264526]
[502.97915649 -265.55499268]
[500.70144653 -262.87258911]
[497.35098267 -260.87249756]
[493.16079712 -259.94650269]
[482.45266724 -249.44238281]
[471.74456787 -238.93827820]
[461.03643799 -228.43415833]
[464.57641602 -216.84846497]
[462.85311890 -204.78437805]
[456.13195801 -194.53254700]
[445.63305664 -188.06570435]
[433.31027222 -186.65916443]
[421.48748779 -190.63980103]
[410.51354980 -180.41372681]
[399.53958130 -170.18765259]
[400.89318848 -157.38690186]
[394.53805542 -145.96987915]
[382.59494019 -140.20648193]
[369.31921387 -142.39863586]
[358.21502686 -132.31411743]
[357.75784302 -117.47071838]
[346.64028931 -107.08540344]
[331.07427979 -107.66559601]
[319.97009277 -97.58108521]
[308.86593628 -87.49656677]
[297.76174927 -77.41205597]
[286.65759277 -67.32754517]
[286.86471558 -49.00633240]
[273.36657715 -36.14781570]
[254.43797302 -37.28144073]
[243.59605408 -26.91550064]
[232.75413513 -16.54956055]
[221.91221619 -6.18362093]
[211.07028198 4.18231869]
[207.21804810 18.57014084]
[191.89639282 22.51444435]
[181.05445862 32.88038254]
[170.21253967 43.24632263]
[159.37062073 53.61226273]
[148.52870178 63.97820282]
[137.68676758 74.34414673]
[126.84484863 84.71008301]
[131.64984131 92.28380585]
[134.23324585 101.35200500]
[134.13999939 111.24095154]
[131.12431335 121.14228821]
[125.18811035 130.17887878]
[116.59864807 137.48121643]
[105.88263702 142.26782227]
[93.79604340 143.92228699]
[91.87788391 158.79913330]
[89.95972443 173.67599487]
[88.04157257 188.55284119]
[86.12341309 203.42968750]
[84.20525360 218.30654907]
[97.55475616 225.52841187]
[107.39097595 237.08752441]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 242]
[14 241]
[15 240]
[16 239]
[17 238]
[18 237]
[19 56]
[20 55]
[21 54]
[22 53]
[23 52]
[24 51]
[26 50]
[27 49]
[31 45]
[32 44]
[33 42]
[34 41]
[57 77]
[58 76]
[59 75]
[61 73]
[62 72]
[63 71]
[64 70]
[65 69]
[79 229]
[80 228]
[81 227]
[82 226]
[83 225]
[84 224]
[85 223]
[87 221]
[88 220]
[89 219]
[90 218]
[91 217]
[96 214]
[97 213]
[98 212]
[99 211]
[100 210]
[103 207]
[104 206]
[107 202]
[108 201]
[109 200]
[113 194]
[114 193]
[115 192]
[116 191]
[117 186]
[118 185]
[119 184]
[121 183]
[122 182]
[125 179]
[126 178]
[127 177]
[129 176]
[130 175]
[131 174]
[135 172]
[136 171]
[137 170]
[138 169]
[139 168]
[140 167]
[141 166]
[142 165]
[145 163]
[146 162]
[147 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
