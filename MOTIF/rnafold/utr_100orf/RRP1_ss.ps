%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:20:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGGGGCCAGGAGGAGGCGGGCGCAGGAGGCGCGUGCUCAGUGUGCUGGGUACCAGGCGACUCCGGGACAGGGGGUCUCGGCCGUCGGCGUCAUGGUUUCGCGCGUGCAGCUCCCGCCUGAGAUCCAGCUGGCUCAGCGCCUGGCGGGGAAUGAGCAGGUGACCCGGGACCGGGCGGUGAGGAAGCUCCGGA\
) } def
/len { sequence length } bind def

/coor [
[86.45365906 219.96736145]
[92.50000000 204.12821960]
[92.50000000 189.12821960]
[92.50000000 174.12821960]
[92.50000000 159.12821960]
[92.50000000 144.12821960]
[92.50000000 129.12821960]
[92.50000000 114.12822723]
[86.25873566 100.48833466]
[74.90804291 90.68212128]
[63.55735016 80.87591553]
[48.01048279 81.84171295]
[36.63896179 71.73512268]
[35.81403351 56.90761185]
[24.46334076 47.10139847]
[13.11264801 37.29518890]
[-4.30093718 38.89147949]
[-17.23149490 27.62699318]
[-18.00573921 10.83344078]
[-29.51373672 1.21231794]
[-41.02173233 -8.40880489]
[-52.52973175 -18.02992821]
[-64.03772736 -27.65105247]
[-75.54572296 -37.27217484]
[-82.00474548 -38.78794861]
[-86.10422516 -42.74970245]
[-87.26402283 -47.39597321]
[-98.45442963 -57.38470078]
[-109.64484406 -67.37342834]
[-120.83525085 -77.36215973]
[-132.18594360 -87.16836548]
[-143.69393921 -96.78948975]
[-155.20193481 -106.41061401]
[-166.70993042 -116.03173828]
[-178.21792603 -125.65286255]
[-189.72593689 -135.27398682]
[-201.23393250 -144.89511108]
[-212.74192810 -154.51623535]
[-217.82412720 -144.97204590]
[-228.75614929 -138.16386414]
[-243.63044739 -136.22604370]
[-258.50476074 -134.28822327]
[-271.19262695 -123.89833069]
[-286.43679810 -129.94375610]
[-288.55538940 -146.20547485]
[-275.36895752 -155.95483398]
[-260.44256592 -149.16252136]
[-245.56826782 -151.10034180]
[-230.69396973 -153.03816223]
[-225.23539734 -167.00970459]
[-234.85652161 -178.51770020]
[-249.64411926 -184.14242554]
[-251.87144470 -198.86955261]
[-261.49255371 -210.37754822]
[-271.11367798 -221.88554382]
[-280.73480225 -233.39353943]
[-290.44879150 -244.82325745]
[-300.25500488 -256.17395020]
[-310.06121826 -267.52465820]
[-319.86743164 -278.87533569]
[-327.85772705 -283.33175659]
[-329.73870850 -290.49014282]
[-339.35983276 -301.99813843]
[-349.43884277 -313.10729980]
[-359.95922852 -323.79943848]
[-370.47961426 -334.49157715]
[-380.99996948 -345.18371582]
[-391.52035522 -355.87585449]
[-402.04074097 -366.56799316]
[-412.56109619 -377.26010132]
[-428.52743530 -378.82730103]
[-437.13574219 -392.36526489]
[-431.78247070 -407.48883057]
[-416.57421875 -412.59649658]
[-403.17742920 -403.77008057]
[-401.86895752 -387.78048706]
[-391.34860229 -377.08834839]
[-380.82821655 -366.39620972]
[-370.30783081 -355.70407104]
[-359.78747559 -345.01196289]
[-349.26708984 -334.31982422]
[-338.74673462 -323.62768555]
[-335.93612671 -338.36203003]
[-322.74230957 -345.49807739]
[-308.87271118 -339.78552246]
[-304.53189087 -325.42733765]
[-312.91366577 -312.98764038]
[-327.85183716 -311.61926270]
[-318.23071289 -300.11126709]
[-308.51675415 -288.68154907]
[-298.71054077 -277.33087158]
[-288.90432739 -265.98016357]
[-279.09811401 -254.62947083]
[-272.33663940 -251.61894226]
[-269.22680664 -243.01466370]
[-259.60568237 -231.50666809]
[-249.98457336 -219.99867249]
[-240.36344910 -208.49067688]
[-226.26400757 -203.68908691]
[-223.34852600 -188.13882446]
[-213.72740173 -176.63082886]
[-203.12080383 -166.02423096]
[-191.61280823 -156.40310669]
[-180.10481262 -146.78198242]
[-168.59681702 -137.16085815]
[-157.08880615 -127.53973389]
[-145.58081055 -117.91860962]
[-134.07281494 -108.29748535]
[-122.56482697 -98.67636871]
[-117.79937744 -98.20363617]
[-113.28426361 -94.72297668]
[-110.84652710 -88.55256653]
[-99.65611267 -78.56384277]
[-88.46570587 -68.57511139]
[-77.27529144 -58.58638382]
[-65.92459869 -48.78017044]
[-54.41660309 -39.15904999]
[-42.90860748 -29.53792572]
[-31.40060997 -19.91680145]
[-19.89261436 -10.29567909]
[-8.38461685 -0.67455542]
[4.17146015 -3.60503435]
[16.30218697 1.30885565]
[23.48980522 12.47903633]
[22.91885948 25.94449425]
[34.26955032 35.75070572]
[45.62024307 45.55691910]
[60.41035843 44.21972275]
[72.06127167 54.00292206]
[73.36356354 69.52522278]
[84.71424866 79.33143616]
[96.06494141 89.13764191]
[110.67875671 75.59974670]
[138.45297241 83.82544708]
[152.24043274 89.73358154]
[166.02789307 95.64172363]
[179.81533813 101.54985809]
[195.54750061 99.87356567]
[204.19841003 111.99837494]
[217.98587036 117.90650940]
[231.77331543 123.81464386]
[245.56077576 129.72277832]
[259.34823608 135.63092041]
[273.13568115 141.53906250]
[286.92312622 147.44718933]
[300.85003662 153.01870728]
[314.90811157 158.25032043]
[328.96621704 163.48194885]
[343.02432251 168.71356201]
[357.25811768 162.38606262]
[371.44049072 167.89192200]
[377.38507080 181.50065613]
[391.44317627 186.73226929]
[405.70834351 179.92927551]
[420.57766724 185.28450012]
[427.22946167 199.62078857]
[421.71734619 214.43266296]
[407.31152344 220.93252563]
[392.55874634 215.26409912]
[386.21157837 200.79037476]
[372.15347290 195.55876160]
[358.75845337 201.97039795]
[344.42700195 196.86505127]
[337.79272461 182.77166748]
[323.73461914 177.54003906]
[309.67651367 172.30842590]
[295.61840820 167.07681274]
[292.26654053 168.21362305]
[288.19570923 167.77461243]
[284.15658569 165.43885803]
[281.01501465 161.23464966]
[267.22753906 155.32650757]
[253.44009399 149.41838074]
[239.65263367 143.51023865]
[225.86518860 137.60209656]
[212.07772827 131.69396973]
[198.29026794 125.78582764]
[183.54429626 127.88471222]
[173.90721130 115.33731079]
[160.11975098 109.42917633]
[146.33229065 103.52104187]
[132.54484558 97.61289978]
[126.28363037 101.74172974]
[127.17379761 116.71529388]
[113.76120758 109.99939728]
[107.50000000 114.12822723]
[107.50000000 129.12821960]
[107.50000000 144.12821960]
[107.50000000 159.12821960]
[107.50000000 174.12821960]
[107.50000000 189.12821960]
[107.50000000 204.12821960]
[113.54634094 219.96736145]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 192]
[3 191]
[4 190]
[5 189]
[6 188]
[7 187]
[8 186]
[9 132]
[10 131]
[11 130]
[14 127]
[15 126]
[16 125]
[19 121]
[20 120]
[21 119]
[22 118]
[23 117]
[24 116]
[27 115]
[28 114]
[29 113]
[30 112]
[31 109]
[32 108]
[33 107]
[34 106]
[35 105]
[36 104]
[37 103]
[38 102]
[40 49]
[41 48]
[42 47]
[50 101]
[51 100]
[53 98]
[54 97]
[55 96]
[56 95]
[57 93]
[58 92]
[59 91]
[60 90]
[62 89]
[63 88]
[64 82]
[65 81]
[66 80]
[67 79]
[68 78]
[69 77]
[70 76]
[134 182]
[135 181]
[136 180]
[137 179]
[139 177]
[140 176]
[141 175]
[142 174]
[143 173]
[144 172]
[145 171]
[146 167]
[147 166]
[148 165]
[149 164]
[152 161]
[153 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
