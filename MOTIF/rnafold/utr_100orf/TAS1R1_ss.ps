%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:23:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGUUAGGAAGCAUCCGGCAGCUGCCUUCUAUUUAAGCAACUGGCCUCCUUAGAGGCCACUCCUUGGCCAUGCCAGGCGCGGGCAUCUGGCCAGCAUGCUGCUCUGCACGGCUCGCCUGGUCGGCCUGCAGCUUCUCAUUUCCUGCUGCUGGGCCUUUGCCUGCCAUAGCACGGAGUCUUCUCCUGACUUCACCC\
) } def
/len { sequence length } bind def

/coor [
[119.04667664 414.39956665]
[118.09049225 399.43008423]
[117.13431549 384.46057129]
[116.17813110 369.49108887]
[115.22195435 354.52160645]
[114.26576996 339.55209351]
[113.30958557 324.58261108]
[112.35340881 309.61312866]
[111.39722443 294.64361572]
[110.44104004 279.67413330]
[109.24626923 264.72180176]
[107.81321716 249.79040527]
[96.19548035 240.54032898]
[94.52944946 225.41819763]
[104.31054688 213.29516602]
[102.87748718 198.36376953]
[101.44443512 183.43238831]
[100.01137543 168.50100708]
[98.45931244 153.58151245]
[96.78833008 138.67488098]
[79.92415619 146.05270386]
[58.44787979 145.56803894]
[46.05109024 154.01313782]
[33.65430069 162.45823669]
[35.97435379 177.54399109]
[31.51097298 192.13992310]
[21.15036392 203.34797668]
[6.94963455 208.94279480]
[-8.27165031 207.81352234]
[-21.49129295 200.18438721]
[-30.08452415 187.57014465]
[-32.34514999 172.47537231]
[-27.82432556 157.89712524]
[-17.41966057 146.72996521]
[-3.19700885 141.19110107]
[12.01971054 142.38031006]
[25.20920753 150.06144714]
[37.60599518 141.61634827]
[50.00278473 133.17124939]
[48.05201721 125.92939758]
[33.55790329 122.06667328]
[44.15048218 111.44568634]
[42.19971085 104.20382690]
[27.23831940 103.12831116]
[12.27692604 102.05280304]
[-2.68446660 100.97729492]
[-17.64585876 99.90178680]
[-32.60725403 98.82627106]
[-47.56864548 97.75076294]
[-62.07780457 105.39382172]
[-75.80530548 96.42233276]
[-74.62947845 80.06539154]
[-59.75990677 73.14962006]
[-46.49313354 82.78936768]
[-31.53174210 83.86488342]
[-16.57034874 84.94039154]
[-1.60895622 86.01589966]
[13.35243702 87.09141541]
[28.31382942 88.16692352]
[43.27522278 89.24243164]
[46.07614517 82.28507233]
[36.82654572 70.47639465]
[51.67798996 68.37035370]
[54.47891235 61.41299820]
[42.94564438 51.82218170]
[31.41238213 42.23136139]
[19.87911606 32.64054108]
[8.34585190 23.04972458]
[-3.18741298 13.45890522]
[-19.23183060 7.98049164]
[-18.40905190 -8.95347977]
[-1.90909815 -12.85064507]
[6.40340567 1.92564070]
[17.93667030 11.51645947]
[29.46993446 21.10727882]
[41.00320053 30.69809723]
[52.53646469 40.28891373]
[64.06973267 49.87973404]
[98.71945190 49.77798462]
[120.97409821 67.34807587]
[131.36717224 56.53216171]
[141.76025391 45.71625137]
[152.15332031 34.90033722]
[162.54640198 24.08442688]
[172.93948364 13.26851463]
[183.33255005 2.45260262]
[178.18608093 -12.03249454]
[181.70118713 -27.83434486]
[193.64424133 -39.93849182]
[210.98486328 -44.04762650]
[214.77079773 -58.56199265]
[218.55671692 -73.07635498]
[222.34265137 -87.59072113]
[226.12857056 -102.10507965]
[229.79864502 -116.64916992]
[233.35264587 -131.22206116]
[225.40609741 -144.61946106]
[229.21795654 -159.34780884]
[242.03929138 -166.84106445]
[245.59329224 -181.41395569]
[249.14727783 -195.98684692]
[252.70127869 -210.55973816]
[243.29963684 -223.05546570]
[244.18128967 -238.66816711]
[254.92993164 -250.02601624]
[270.47039795 -251.76617432]
[283.46493530 -243.06698608]
[287.77792358 -228.03594971]
[281.37292480 -213.77026367]
[267.27416992 -207.00573730]
[263.72018433 -192.43284607]
[260.16616821 -177.85995483]
[256.61218262 -163.28706360]
[264.54434204 -150.73252869]
[261.14767456 -135.90290833]
[247.92553711 -127.66806793]
[244.37153625 -113.09517670]
[245.84272766 -105.84354401]
[240.64292908 -98.31915283]
[236.85700989 -83.80479431]
[233.07107544 -69.29042816]
[229.28515625 -54.77606583]
[225.49922180 -40.26169968]
[236.06346130 -29.61289787]
[250.60754395 -33.28297424]
[265.15164185 -36.95304871]
[279.69573975 -40.62312698]
[294.23980713 -44.29320145]
[308.75418091 -48.07912827]
[323.23788452 -51.98066711]
[337.72161865 -55.88220215]
[352.20532227 -59.78374100]
[366.68905640 -63.68527603]
[369.45605469 -78.69548798]
[378.46865845 -91.01359558]
[391.93740845 -98.19382477]
[407.18804932 -98.81053925]
[421.19259644 -92.74128723]
[431.17037964 -81.19113159]
[435.14038086 -66.45335388]
[432.31427002 -51.45415497]
[423.25323486 -39.17163467]
[409.75631714 -32.04450226]
[394.50335693 -31.48784828]
[380.52282715 -37.61220169]
[370.59057617 -49.20156097]
[356.10687256 -45.30002594]
[341.62313843 -41.39848709]
[327.13943481 -37.49695206]
[312.65573120 -33.59541321]
[307.00827026 -28.81450653]
[297.90988159 -29.74911308]
[283.36581421 -26.07903671]
[268.82171631 -22.40896034]
[254.27761841 -18.73888397]
[239.73353577 -15.06880760]
[232.40888977 6.58977365]
[213.73086548 17.14937401]
[194.14846802 12.84567928]
[183.75538635 23.66159248]
[173.36231995 34.47750473]
[162.96923828 45.29341507]
[152.57615662 56.10932922]
[142.18309021 66.92523956]
[131.79000854 77.74114990]
[137.73461914 90.93579865]
[138.43174744 105.39093781]
[133.78443909 119.09639740]
[124.43898010 130.14625549]
[111.69496918 137.00390625]
[113.36595154 151.91053772]
[117.43603516 160.10128784]
[114.94276428 167.06794739]
[116.37582397 181.99932861]
[117.80887604 196.93072510]
[119.24193573 211.86210632]
[131.15028381 221.90347290]
[132.39089966 237.06643677]
[122.74460602 248.35734558]
[124.17765808 263.28872681]
[127.70796967 268.90084839]
[127.84476471 274.59677124]
[125.41053772 278.71795654]
[126.36671448 293.68743896]
[127.32289886 308.65695190]
[128.27908325 323.62643433]
[129.23526001 338.59591675]
[130.19143677 353.56542969]
[131.14762878 368.53491211]
[132.10380554 383.50439453]
[133.05998230 398.47390747]
[134.01617432 413.44338989]
[145.06207275 425.07815552]
[142.71002197 440.94784546]
[128.76432800 448.87860107]
[113.92291260 442.78665161]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 192]
[2 191]
[3 190]
[4 189]
[5 188]
[6 187]
[7 186]
[8 185]
[9 184]
[10 183]
[11 180]
[12 179]
[15 176]
[16 175]
[17 174]
[18 173]
[19 171]
[20 170]
[22 39]
[23 38]
[24 37]
[43 60]
[44 59]
[45 58]
[46 57]
[47 56]
[48 55]
[49 54]
[64 78]
[65 77]
[66 76]
[67 75]
[68 74]
[69 73]
[80 165]
[81 164]
[82 163]
[83 162]
[84 161]
[85 160]
[86 159]
[90 123]
[91 122]
[92 121]
[93 120]
[94 119]
[95 117]
[96 116]
[99 113]
[100 112]
[101 111]
[102 110]
[124 156]
[125 155]
[126 154]
[127 153]
[128 152]
[129 150]
[130 149]
[131 148]
[132 147]
[133 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
