%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:29:55 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (LOC100996693)
} def

/sequence { (\
AUGUCUAAAGCAGCUCCUGCCAAAAAGCCAGUGGCUGUGGCCCCAGCUCCUGGAUGUACCCUGGACAUCAAUGACCCACAGGUCCAGAGUGCGGCCAUUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 57 0.004892833 ubox
1 68 0.003271500 ubox
1 98 0.019830824 ubox
2 12 0.044642288 ubox
2 22 0.019259101 ubox
2 30 0.003835175 ubox
2 45 0.008263799 ubox
2 56 0.005275135 ubox
2 67 0.003843257 ubox
2 97 0.022835902 ubox
3 11 0.070810998 ubox
3 14 0.007619154 ubox
3 21 0.021350188 ubox
3 28 0.003345127 ubox
3 29 0.004327479 ubox
3 35 0.004981004 ubox
3 41 0.025395995 ubox
3 44 0.009110037 ubox
3 47 0.008036990 ubox
3 55 0.050296876 ubox
3 66 0.004011196 ubox
3 95 0.034264340 ubox
3 96 0.018880723 ubox
3 98 0.014405121 ubox
4 10 0.069573787 ubox
4 13 0.006796591 ubox
4 34 0.004863635 ubox
4 40 0.025145270 ubox
4 46 0.007303022 ubox
4 54 0.053915808 ubox
4 65 0.004011071 ubox
4 94 0.035483311 ubox
4 97 0.014300720 ubox
5 13 0.004333560 ubox
5 27 0.005976498 ubox
5 33 0.004834064 ubox
5 39 0.025555716 ubox
5 40 0.006704265 ubox
5 46 0.003891809 ubox
5 53 0.054599502 ubox
5 64 0.004010421 ubox
5 93 0.035133275 ubox
5 94 0.013410609 ubox
6 12 0.004441016 ubox
6 26 0.005987052 ubox
6 39 0.007044614 ubox
6 45 0.003802044 ubox
6 52 0.052827140 ubox
6 63 0.003980840 ubox
6 93 0.012234096 ubox
7 38 0.007532177 ubox
7 51 0.032584604 ubox
7 62 0.003715227 ubox
7 99 0.014423344 ubox
8 98 0.014066348 ubox
8 99 0.016830696 ubox
9 18 0.005178587 ubox
9 36 0.058469952 ubox
9 48 0.005937282 ubox
9 51 0.150714050 ubox
9 98 0.015825745 ubox
9 99 0.010271902 ubox
10 17 0.005283608 ubox
10 20 0.221782803 ubox
10 28 0.003193456 ubox
10 35 0.060275245 ubox
10 38 0.785476923 ubox
10 47 0.006151034 ubox
10 50 0.174283113 ubox
10 95 0.005977345 ubox
10 98 0.006107121 ubox
11 19 0.222304024 ubox
11 27 0.003197402 ubox
11 34 0.059908192 ubox
11 37 0.936849527 ubox
11 46 0.006107284 ubox
11 94 0.005980395 ubox
12 18 0.221768089 ubox
12 36 0.946511289 ubox
12 48 0.203733587 ubox
13 17 0.216909336 ubox
13 20 0.040922749 ubox
13 32 0.056867652 ubox
13 35 0.948108888 ubox
13 47 0.212561142 ubox
13 95 0.005408651 ubox
14 19 0.040998465 ubox
14 31 0.059704844 ubox
14 34 0.947846351 ubox
14 46 0.212572175 ubox
14 94 0.005411516 ubox
15 30 0.058843988 ubox
15 33 0.907282603 ubox
15 34 0.021764399 ubox
15 45 0.206139027 ubox
15 93 0.004636088 ubox
16 33 0.194877397 ubox
17 27 0.019708389 ubox
17 31 0.943444258 ubox
18 26 0.019723877 ubox
18 30 0.942157240 ubox
19 28 0.641787753 ubox
19 29 0.699040971 ubox
19 32 0.008131891 ubox
19 35 0.019482777 ubox
19 41 0.212570063 ubox
19 95 0.013368770 ubox
20 27 0.898359013 ubox
20 31 0.008183804 ubox
20 34 0.019542494 ubox
20 40 0.212837729 ubox
20 94 0.013651852 ubox
21 33 0.019588157 ubox
21 37 0.005635168 ubox
21 39 0.212810676 ubox
21 93 0.013669920 ubox
22 32 0.018128133 ubox
22 36 0.004130566 ubox
22 38 0.201734589 ubox
26 36 0.296814222 ubox
27 35 0.307211836 ubox
28 34 0.307243229 ubox
28 53 0.049071618 ubox
29 33 0.305008328 ubox
29 37 0.003386760 ubox
29 52 0.049276640 ubox
30 36 0.003489887 ubox
30 51 0.049321823 ubox
30 99 0.004612117 ubox
31 35 0.003427096 ubox
31 50 0.049285116 ubox
31 98 0.005659955 ubox
32 97 0.005747286 ubox
33 48 0.047282942 ubox
33 49 0.010174060 ubox
33 96 0.005776038 ubox
34 47 0.049403548 ubox
34 95 0.005775956 ubox
35 46 0.049417602 ubox
35 94 0.005774796 ubox
36 45 0.049394402 ubox
36 93 0.005570169 ubox
37 44 0.049178393 ubox
37 92 0.004451348 ubox
37 98 0.253236695 ubox
38 91 0.004279810 ubox
38 97 0.518662436 ubox
39 48 0.025585239 ubox
39 49 0.006035928 ubox
39 50 0.008385709 ubox
39 96 0.974001372 ubox
40 47 0.028344479 ubox
40 49 0.008283039 ubox
40 95 0.974758190 ubox
41 46 0.028295523 ubox
41 94 0.974361258 ubox
42 53 0.007071604 ubox
42 93 0.970517761 ubox
42 94 0.027388978 ubox
43 52 0.007463983 ubox
43 53 0.883085631 ubox
43 93 0.038253748 ubox
44 52 0.885175968 ubox
44 91 0.283875778 ubox
44 93 0.004045013 ubox
45 51 0.883009728 ubox
45 90 0.230495710 ubox
46 50 0.863657735 ubox
46 90 0.334580019 ubox
46 92 0.017301116 ubox
47 53 0.006922061 ubox
47 89 0.406100447 ubox
47 91 0.017204275 ubox
48 52 0.006264861 ubox
48 54 0.005308429 ubox
48 65 0.005120224 ubox
48 88 0.405729547 ubox
49 53 0.005633133 ubox
49 64 0.006156246 ubox
49 87 0.288453595 ubox
50 63 0.006475090 ubox
50 64 0.003670847 ubox
50 87 0.288573870 ubox
51 63 0.003574188 ubox
51 70 0.005093733 ubox
51 86 0.405776078 ubox
51 97 0.136084851 ubox
52 60 0.004006851 ubox
52 61 0.009245772 ubox
52 69 0.004214075 ubox
52 85 0.407044551 ubox
52 96 0.208845636 ubox
52 100 0.003765513 ubox
53 59 0.004032746 ubox
53 60 0.009265959 ubox
53 69 0.082324873 ubox
53 84 0.399575292 ubox
53 95 0.208574999 ubox
53 99 0.003978721 ubox
54 68 0.082711079 ubox
54 83 0.391956406 ubox
54 98 0.004180877 ubox
55 67 0.082815525 ubox
55 80 0.020982621 ubox
55 82 0.164917563 ubox
55 86 0.003974650 ubox
55 93 0.171875569 ubox
55 97 0.003571495 ubox
56 66 0.082879986 ubox
56 75 0.005509394 ubox
56 77 0.003187600 ubox
56 79 0.028039267 ubox
56 83 0.006721927 ubox
56 85 0.004019109 ubox
56 92 0.911767083 ubox
57 65 0.081290339 ubox
57 74 0.005444215 ubox
57 78 0.024209685 ubox
57 82 0.006533045 ubox
57 91 0.912319543 ubox
58 62 0.003257754 ubox
58 83 0.070012732 ubox
58 90 0.912348420 ubox
59 82 0.104447770 ubox
59 89 0.911187468 ubox
60 81 0.101582447 ubox
60 82 0.347228966 ubox
61 81 0.356270421 ubox
61 87 0.911513794 ubox
61 94 0.003963347 ubox
62 70 0.008446802 ubox
62 78 0.149309296 ubox
62 80 0.354680833 ubox
62 86 0.912630214 ubox
62 93 0.004022582 ubox
63 69 0.008886376 ubox
63 72 0.003595834 ubox
63 76 0.111288658 ubox
63 77 0.159942234 ubox
63 79 0.347901783 ubox
63 85 0.912874379 ubox
63 92 0.005194599 ubox
64 68 0.005882051 ubox
64 75 0.116609291 ubox
64 76 0.160672496 ubox
64 84 0.912230130 ubox
65 83 0.909954032 ubox
65 90 0.005348489 ubox
66 73 0.161343714 ubox
66 82 0.904848133 ubox
66 89 0.005429119 ubox
66 91 0.003260558 ubox
67 72 0.135073276 ubox
67 83 0.031581230 ubox
67 90 0.003276409 ubox
68 74 0.193064359 ubox
68 82 0.058151329 ubox
68 88 0.005912546 ubox
69 73 0.196232090 ubox
69 81 0.196730237 ubox
69 87 0.006030030 ubox
72 78 0.337866082 ubox
72 80 0.164644385 ubox
72 86 0.006851537 ubox
73 77 0.343197943 ubox
73 79 0.181022855 ubox
73 84 0.089499467 ubox
73 85 0.005409732 ubox
74 83 0.102620451 ubox
75 82 0.117592097 ubox
76 81 0.122371150 ubox
76 82 0.027914629 ubox
77 81 0.032689998 ubox
93 100 0.004426801 ubox
94 99 0.003273322 ubox
10 38 0.9500000 lbox
11 37 0.9500000 lbox
12 36 0.9500000 lbox
13 35 0.9500000 lbox
14 34 0.9500000 lbox
15 33 0.9500000 lbox
17 31 0.9500000 lbox
18 30 0.9500000 lbox
19 28 0.9500000 lbox
20 27 0.9500000 lbox
39 96 0.9500000 lbox
40 95 0.9500000 lbox
41 94 0.9500000 lbox
42 93 0.9500000 lbox
43 53 0.9500000 lbox
44 52 0.9500000 lbox
45 51 0.9500000 lbox
46 50 0.9500000 lbox
56 92 0.9500000 lbox
57 91 0.9500000 lbox
58 90 0.9500000 lbox
59 89 0.9500000 lbox
61 87 0.9500000 lbox
62 86 0.9500000 lbox
63 85 0.9500000 lbox
64 84 0.9500000 lbox
65 83 0.9500000 lbox
66 82 0.9500000 lbox
showpage
end
%%EOF
