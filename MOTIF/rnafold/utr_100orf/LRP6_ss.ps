%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:37:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCCCCUUUCUUUCUUCUCUCGCUGGGAAGCUGGGAAGUAUGAGCGUGCAGCCCUGCCGCUGCGGCGGCCGCCCCGGCUCCUCGCCUCCCCCACUUCUGGCCACCCCUCGCCGGUGAGAGAAGAGAACGCGAGAAGGGAAGAUGGGGGCCGUCCUGAGGAGCCUCCUGGCCUGCAGCUUCUGUGUGCUCCUGAGAGCGGCCCCUUUGUUGCUUUAUGCAAACAGACGGGACUUGCGAUUGG\
) } def
/len { sequence length } bind def

/coor [
[73.80831909 191.91885376]
[71.87445831 177.04403687]
[62.56088257 165.42050171]
[68.45443726 150.73797607]
[66.52058411 135.86315918]
[56.87876892 124.37249756]
[42.56574249 119.88503265]
[28.25271988 115.39756775]
[13.93969440 110.91011047]
[-0.37333056 106.42264557]
[-14.68635559 101.93518066]
[-28.99938011 97.44772339]
[-43.31240463 92.96025848]
[-57.78866959 89.03116608]
[-72.40639496 85.66634369]
[-87.02412415 82.30152893]
[-101.64185333 78.93671417]
[-116.25958252 75.57189178]
[-130.87731934 72.20707703]
[-145.49504089 68.84226227]
[-160.11277771 65.47743988]
[-174.73049927 62.11262512]
[-189.34823608 58.74780655]
[-203.96595764 55.38298798]
[-218.58369446 52.01817322]
[-233.20141602 48.65335464]
[-247.81915283 45.28853607]
[-261.11242676 53.40805054]
[-275.88894653 49.78741074]
[-283.54772949 37.06426620]
[-298.16546631 33.69944763]
[-317.17337036 40.45389938]
[-330.70870972 26.62792587]
[-345.40853882 23.64215851]
[-360.10836792 20.65638924]
[-374.86334229 17.95623207]
[-389.66790771 15.54270172]
[-404.47247314 13.12917042]
[-419.27700806 10.71564007]
[-434.08157349 8.30210876]
[-449.04699707 19.94594574]
[-467.45144653 16.98193359]
[-477.64816284 1.76002562]
[-492.51016235 -0.26994386]
[-507.37216187 -2.29991341]
[-516.27648926 -0.36311394]
[-522.41271973 -4.45339584]
[-537.24725342 -6.67533207]
[-552.08178711 -8.89726830]
[-570.50909424 -0.69015747]
[-585.07513428 -13.42567062]
[-599.96215820 -15.26333427]
[-614.84912109 -17.10099792]
[-629.73614502 -18.93866158]
[-645.47827148 -4.96723652]
[-666.11328125 -7.17398739]
[-678.19610596 -23.68201256]
[-693.15820312 -24.74770546]
[-708.12030029 -25.81339645]
[-723.08239746 -26.87908745]
[-738.04449463 -27.94477844]
[-752.54864502 -20.29220200]
[-766.28198242 -29.25468254]
[-765.11688232 -45.61238861]
[-750.25189209 -52.53791809]
[-736.97875977 -42.90687561]
[-722.01666260 -41.84118271]
[-707.05456543 -40.77548981]
[-692.09246826 -39.70980072]
[-677.13043213 -38.64410782]
[-672.31756592 -46.61027908]
[-664.89526367 -52.32093430]
[-655.85064697 -54.96358490]
[-646.40618896 -54.13736725]
[-637.85418701 -49.91322327]
[-631.38018799 -42.82991791]
[-627.89849854 -33.82566833]
[-613.01147461 -31.98800468]
[-598.12445068 -30.15034103]
[-583.23748779 -28.31267738]
[-575.80090332 -35.28237152]
[-565.54187012 -37.05683136]
[-555.79400635 -32.81515121]
[-549.85980225 -23.73178864]
[-535.02532959 -21.50985336]
[-520.19079590 -19.28791618]
[-505.34219360 -17.16191864]
[-490.48019409 -15.13195038]
[-475.61819458 -13.10198021]
[-468.26376343 -21.79155159]
[-457.52001953 -25.90355492]
[-446.00598145 -24.31206703]
[-436.58840942 -17.29687881]
[-431.66802979 -6.50244665]
[-416.86349487 -4.08891582]
[-402.05892944 -1.67538488]
[-387.25436401 0.73814613]
[-372.44982910 3.15167713]
[-369.40280151 1.41779029]
[-365.36975098 1.06134057]
[-361.00158691 2.52752972]
[-357.12261963 5.95655346]
[-342.42279053 8.94232178]
[-327.72293091 11.92809010]
[-319.76864624 5.55563259]
[-309.40292358 4.58150482]
[-300.01312256 9.56581211]
[-294.80065918 19.08171844]
[-280.18292236 22.44653511]
[-267.73223877 14.35233688]
[-252.85984802 17.55650520]
[-244.45433044 30.67080879]
[-229.83659363 34.03562546]
[-215.21887207 37.40044403]
[-200.60113525 40.76525879]
[-185.98341370 44.13007736]
[-171.36569214 47.49489594]
[-156.74795532 50.85971451]
[-142.13023376 54.22452927]
[-127.51249695 57.58934784]
[-112.89476776 60.95416641]
[-98.27703857 64.31898499]
[-83.65930939 67.68379974]
[-69.04158020 71.04861450]
[-54.42385101 74.41343689]
[-61.56758118 61.22377396]
[-57.40750122 46.81219101]
[-44.33369827 39.45856857]
[-29.85746765 43.38778305]
[-22.29583168 56.34238052]
[-25.99317551 70.87956238]
[-38.82494354 78.64723206]
[-24.51191711 83.13469696]
[-10.19889355 87.62215424]
[4.11413193 92.10961914]
[18.42715645 96.59708405]
[32.74018097 101.08454132]
[47.05320740 105.57200623]
[61.36623001 110.05947113]
[62.83585739 92.35792542]
[71.59798431 77.94197845]
[85.12947845 69.44517517]
[100.14688873 67.99923706]
[113.38465881 73.12799072]
[122.30319214 83.00447845]
[137.04040527 80.20899963]
[151.77760315 77.41352081]
[166.51481628 74.61804199]
[181.25202942 71.82256317]
[195.98922729 69.02708435]
[210.72644043 66.23160553]
[225.46365356 63.43612671]
[240.20085144 60.64064789]
[252.31729126 50.46702957]
[266.26354980 55.69685364]
[281.00076294 52.90137482]
[293.11718750 42.72775650]
[307.06344604 47.95758057]
[321.80065918 45.16210175]
[336.53787231 42.36662292]
[351.27508545 39.57114410]
[366.01229858 36.77566528]
[380.74951172 33.98018646]
[384.88494873 17.29422951]
[395.87084961 4.14396906]
[411.45367432 -2.84875679]
[428.46978760 -2.31750655]
[443.48791504 5.58202934]
[453.50079346 19.21322441]
[468.16079712 16.03766632]
[482.82080078 12.86210728]
[492.68020630 0.20620550]
[508.72320557 0.16785176]
[518.64300537 12.77646828]
[514.82995605 28.35980225]
[500.20913696 34.96365738]
[485.99636841 27.52211571]
[471.33636475 30.69767380]
[456.67633057 33.87322998]
[454.69244385 46.68791962]
[448.46228027 58.09692383]
[438.70626831 66.73582458]
[426.56787109 71.56312561]
[413.47976685 71.98579407]
[400.99453735 67.93202972]
[390.60067749 59.86235428]
[383.54498291 48.71739197]
[368.80776978 51.51287079]
[354.07055664 54.30834961]
[339.33334351 57.10382843]
[324.59613037 59.89931107]
[309.85894775 62.69478989]
[298.79660034 72.66845703]
[283.79623413 67.63858032]
[269.05902100 70.43405914]
[257.99670410 80.40773010]
[242.99633789 75.37785339]
[228.25912476 78.17333221]
[213.52191162 80.96881104]
[198.78471375 83.76428986]
[184.04750061 86.55976868]
[169.31028748 89.35524750]
[154.57308960 92.15072632]
[139.83587646 94.94620514]
[125.09867096 97.74168396]
[120.15102386 111.90222168]
[129.94058228 123.26728058]
[139.73014832 134.63233948]
[149.51969910 145.99739075]
[159.30926514 157.36245728]
[169.17208862 168.66398621]
[179.10775757 179.90153503]
[194.96788025 182.31732178]
[202.84255981 196.29476929]
[196.69100952 211.11157227]
[181.23216248 215.40156555]
[168.32475281 205.87382507]
[167.87020874 189.83720398]
[157.93453979 178.59965515]
[151.16400146 175.67674255]
[147.94419861 167.15200806]
[138.15464783 155.78695679]
[128.36508179 144.42189026]
[118.57552338 133.05683899]
[108.78596497 121.69178009]
[101.93832397 124.75115967]
[88.24304199 130.86991882]
[81.39540100 133.92930603]
[83.32925415 148.80412292]
[92.78115845 161.49160767]
[86.74927521 175.11018372]
[88.68313599 189.98500061]
[103.06138611 195.23136902]
[113.34600067 206.56649780]
[117.17365265 221.38566589]
[113.66476440 236.28353882]
[103.62566376 247.83666992]
[89.36325836 253.39025879]
[74.15494537 251.66812134]
[61.49547958 243.06599426]
[54.29391861 229.56059265]
[54.20512772 214.25534058]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 232]
[2 231]
[4 229]
[5 228]
[6 139]
[7 138]
[8 137]
[9 136]
[10 135]
[11 134]
[12 133]
[13 132]
[14 125]
[15 124]
[16 123]
[17 122]
[18 121]
[19 120]
[20 119]
[21 118]
[22 117]
[23 116]
[24 115]
[25 114]
[26 113]
[27 112]
[30 109]
[31 108]
[33 104]
[34 103]
[35 102]
[36 98]
[37 97]
[38 96]
[39 95]
[40 94]
[43 89]
[44 88]
[45 87]
[47 86]
[48 85]
[49 84]
[51 80]
[52 79]
[53 78]
[54 77]
[57 70]
[58 69]
[59 68]
[60 67]
[61 66]
[145 205]
[146 204]
[147 203]
[148 202]
[149 201]
[150 200]
[151 199]
[152 198]
[153 197]
[155 195]
[156 194]
[158 192]
[159 191]
[160 190]
[161 189]
[162 188]
[163 187]
[169 179]
[170 178]
[171 177]
[206 225]
[207 224]
[208 223]
[209 222]
[210 221]
[211 219]
[212 218]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
