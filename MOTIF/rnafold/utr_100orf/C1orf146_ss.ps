%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:06:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCUGAGCGGUCUCUGAGGACCUGGUGAGCAGAUUGUUGCACCAUUAGAAGCUAGGUUGAUCCACAGACAGAUGGCUGAAAGUGGAAAAGAAAAAAUAAAAUGGACAACCACCAUUAUUAUUAGCUCAUCUCUUAAGAGUUAUGAAGUUGCAACUGCCCUAGAAAAUCGAA\
) } def
/len { sequence length } bind def

/coor [
[41.06684113 269.33169556]
[33.53047180 274.79748535]
[25.27655983 279.15228271]
[16.46826553 282.30273438]
[7.28074026 284.17950439]
[-2.10236669 284.73855591]
[-11.49257374 283.96228027]
[-20.70035362 281.85992432]
[-29.53895760 278.46768188]
[-37.82820892 273.84780884]
[-46.28872299 286.23406982]
[-54.74923706 298.62036133]
[-63.20975494 311.00662231]
[-71.67026520 323.39288330]
[-72.36970520 339.77713013]
[-87.03177643 347.12258911]
[-100.57339478 337.87289429]
[-99.06410217 321.54336548]
[-84.05654144 314.93237305]
[-75.59602356 302.54611206]
[-67.13550568 290.15985107]
[-58.67499161 277.77355957]
[-50.21447754 265.38729858]
[-59.22840500 253.39775085]
[-73.47732544 258.08477783]
[-87.72624207 262.77182007]
[-101.97515869 267.45886230]
[-116.22408295 272.14590454]
[-130.42985535 276.96212769]
[-144.59130859 281.90713501]
[-158.75277710 286.85211182]
[-172.91423035 291.79711914]
[-185.87463379 302.72708130]
[-199.96525574 293.29888916]
[-194.80619812 277.14895630]
[-177.85923767 277.63565063]
[-163.69778442 272.69067383]
[-149.53631592 267.74566650]
[-135.37486267 262.80065918]
[-130.07759094 257.60836792]
[-120.91111755 257.89697266]
[-106.66220093 253.20994568]
[-92.41327667 248.52290344]
[-78.16436005 243.83587646]
[-63.91543961 239.14883423]
[-66.80631256 218.15986633]
[-62.99846649 197.44560242]
[-52.95282364 179.07759094]
[-37.75003433 164.86761475]
[-18.97475052 156.18898010]
[1.44936776 153.84408569]
[21.45668030 157.99081421]
[39.04847336 168.13442993]
[49.60681534 157.47978210]
[60.16515350 146.82514954]
[70.72349548 136.17050171]
[81.28183746 125.51585388]
[73.14871216 118.25695038]
[67.79336548 108.44274902]
[66.00178528 97.12445068]
[68.16624451 85.58751678]
[74.21873474 75.20574951]
[67.88632202 61.60793304]
[61.55390549 48.01012039]
[55.22148895 34.41230774]
[48.88907242 20.81449509]
[33.79454041 17.73858070]
[23.52556419 6.49573708]
[21.86548042 -8.46113777]
[29.24263191 -21.37297821]
[22.91021729 -34.97079086]
[16.57780075 -48.56860352]
[2.84588695 -57.53334427]
[4.01367378 -73.89086151]
[18.87984276 -80.81394196]
[32.15135574 -71.18071747]
[30.17561340 -54.90102005]
[36.50802994 -41.30320740]
[42.84044647 -27.70539474]
[57.47075272 -25.04228783]
[67.85031128 -14.14601898]
[69.84683228 0.94925487]
[62.48688507 14.48208046]
[68.81929779 28.07989311]
[75.15171814 41.67770767]
[81.48413086 55.27552032]
[87.81655121 68.87332916]
[95.16741180 70.36154938]
[96.12933350 55.39242172]
[92.83845520 40.75786972]
[103.33056641 30.03799820]
[118.03240967 33.01388168]
[123.52966309 46.97024918]
[114.80545044 59.17348480]
[109.86914062 73.33797455]
[117.22000885 74.82619476]
[128.34284973 64.76226807]
[139.46568298 54.69835281]
[150.58851624 44.63442993]
[161.71136475 34.57051086]
[172.74235535 24.40601540]
[183.68061829 14.14178085]
[194.61888123 3.87754631]
[205.55712891 -6.38668823]
[216.49539185 -16.65092278]
[215.44755554 -32.25336075]
[224.71560669 -44.84848785]
[239.92346191 -48.48926926]
[253.89042664 -41.45664215]
[260.02172852 -27.07119751]
[255.42236328 -12.12530041]
[242.26400757 -3.67594719]
[226.75962830 -5.71266460]
[215.82136536 4.55156994]
[204.88311768 14.81580448]
[193.94485474 25.08003807]
[183.00659180 35.34427261]
[180.27084351 42.23895264]
[171.77528381 45.69334793]
[160.65243530 55.75727081]
[149.52960205 65.82118988]
[138.40676880 75.88510895]
[127.28392792 85.94902802]
[130.79223633 100.53298950]
[145.27522278 104.43719482]
[159.75822449 108.34140015]
[174.24121094 112.24560547]
[188.75906372 116.01815033]
[203.31056213 119.65872955]
[217.86207581 123.29930115]
[232.47727966 126.67504120]
[247.15138245 129.78483582]
[261.82546997 132.89462280]
[277.24291992 127.30583954]
[289.61578369 138.06895447]
[286.21591187 154.11180115]
[270.54080200 158.93087769]
[258.71569824 147.56872559]
[244.04158020 144.45893860]
[229.36749268 141.34913635]
[224.91969299 143.17613220]
[219.27487183 142.20309448]
[214.22149658 137.85079956]
[199.66999817 134.21023560]
[185.11848450 130.56965637]
[177.84043884 132.00175476]
[170.33700562 126.72860718]
[155.85401917 122.82439423]
[141.37101746 118.92018890]
[126.88802338 115.01598358]
[118.65381622 127.55384064]
[127.99094391 139.29342651]
[143.43872070 144.79780579]
[146.12913513 160.97476196]
[133.29450989 171.18283081]
[118.13801575 164.92082214]
[116.25135040 148.63055420]
[106.91422272 136.89096069]
[91.93647766 136.07418823]
[81.37813568 146.72883606]
[70.81980133 157.38348389]
[60.26145935 168.03813171]
[49.70312119 178.69277954]
[54.95837021 186.07575989]
[59.12622833 194.14813232]
[62.11714554 202.75032043]
[63.86491013 211.71128845]
[64.32809448 220.85188293]
[63.49101257 229.98843384]
[61.36418533 238.93644714]
[57.98422623 247.51435852]
[53.41324234 255.54716492]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 23]
[11 22]
[12 21]
[13 20]
[14 19]
[24 45]
[25 44]
[26 43]
[27 42]
[28 41]
[29 39]
[30 38]
[31 37]
[32 36]
[53 163]
[54 162]
[55 161]
[56 160]
[57 159]
[62 87]
[63 86]
[64 85]
[65 84]
[66 83]
[70 79]
[71 78]
[72 77]
[96 123]
[97 122]
[98 121]
[99 120]
[100 119]
[101 117]
[102 116]
[103 115]
[104 114]
[105 113]
[124 150]
[125 149]
[126 148]
[127 147]
[128 145]
[129 144]
[130 143]
[131 140]
[132 139]
[133 138]
[151 158]
[152 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
