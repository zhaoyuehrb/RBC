%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:50:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUCCGCUCGUCCGCCUAAUACCGCGCCUGCGCACCGCGUCUCUUCCUUUCUGGGCUCGGACCUAGGUCGCGGCGACAUGGCCAAACGUACCAAGAAAGUCGGGAUCGUCGGUAAAUACGGGACCCGCUAUGGGGCCUCCCUCCGGAAAAUGGUGAAGAAAAUUGAAAUCAGCCAGC\
) } def
/len { sequence length } bind def

/coor [
[122.37597656 323.09066772]
[134.93452454 314.71298218]
[130.27424622 300.45529175]
[125.61396027 286.19760132]
[120.95367432 271.93991089]
[115.87210846 266.54324341]
[116.33909607 257.39093018]
[111.92974854 243.05366516]
[107.52040100 228.71638489]
[90.86743164 221.16491699]
[84.89225006 203.54684448]
[93.81601715 186.86085510]
[88.90622711 172.68714905]
[83.99643707 158.51344299]
[79.08664703 144.33973694]
[72.04396820 141.76084900]
[69.55747986 156.55332947]
[72.51452637 171.25897217]
[63.44073486 183.20326233]
[48.48072052 184.29776001]
[37.76512909 173.80128479]
[38.55036926 158.82185364]
[50.30458450 149.50329590]
[57.95861435 136.60307312]
[50.91593552 134.02418518]
[38.01419449 141.67565918]
[25.11245537 149.32713318]
[17.55570984 163.88143921]
[1.16308391 164.34384155]
[-7.20209646 150.23867798]
[1.06554973 136.07611084]
[17.46097755 136.42539978]
[30.36271667 128.77391052]
[43.26445770 121.12243652]
[47.04068375 106.60555267]
[39.50271988 93.63716125]
[31.96475220 80.66877747]
[24.42678642 67.70038605]
[16.77530861 54.79864883]
[9.01090908 41.96455002]
[1.13418543 29.19907951]
[-6.85425520 16.50322151]
[-14.84269619 3.80736232]
[-22.83113670 -8.88849545]
[-36.23803711 -10.35094738]
[-46.20310593 -19.14671898]
[-49.22885513 -31.88929558]
[-44.42659378 -43.86439133]
[-52.19099045 -56.69849014]
[-59.95539093 -69.53259277]
[-67.71978760 -82.36669159]
[-75.48419189 -95.20079041]
[-83.24858856 -108.03488922]
[-97.01200867 -115.83737183]
[-96.97990417 -130.73194885]
[-104.74430084 -143.56604004]
[-119.82855225 -147.45230103]
[-127.51992798 -160.57852173]
[-123.72201538 -174.93510437]
[-131.48641968 -187.76919556]
[-141.07209778 -199.30673218]
[-152.26611328 -209.29141235]
[-163.46014404 -219.27609253]
[-179.61799622 -222.07894897]
[-185.01478577 -237.56465149]
[-174.09877014 -249.80281067]
[-158.09941101 -246.20387268]
[-153.47546387 -230.47010803]
[-142.28143311 -220.48542786]
[-131.08741760 -210.50076294]
[-124.95848846 -214.82351685]
[-112.70064545 -223.46905518]
[-106.57171631 -227.79180908]
[-112.22064209 -241.68748474]
[-117.86956024 -255.58316040]
[-132.52630615 -261.49548340]
[-138.63256836 -276.07247925]
[-132.56562805 -290.66589355]
[-117.92487335 -296.61770630]
[-103.39642334 -290.39682007]
[-97.59973145 -275.69393921]
[-103.97388458 -261.23208618]
[-98.32496643 -247.33641052]
[-92.67604828 -233.44073486]
[-93.67761230 -217.76502991]
[-99.67131042 -205.46740723]
[-108.73258209 -197.88761902]
[-118.65231323 -195.53359985]
[-110.88791656 -182.69949341]
[-96.40858459 -179.40032959]
[-88.35154724 -166.49533081]
[-91.91020203 -151.33044434]
[-84.14579773 -138.49633789]
[-70.93774414 -131.61183167]
[-70.41448975 -115.79928589]
[-62.65008926 -102.96518707]
[-54.88569260 -90.13108826]
[-47.12129211 -77.29698944]
[-39.35689163 -64.46289062]
[-31.59249306 -51.62879181]
[-15.11633873 -48.32207108]
[-5.93702745 -33.84478378]
[-10.13527870 -16.87693596]
[-2.14683771 -4.18107843]
[5.84160280 8.51478004]
[13.83004379 21.21063805]
[20.07170296 25.20915413]
[21.84500885 34.20014954]
[29.60940742 47.03424835]
[35.77993393 51.14168930]
[37.39517212 60.16242218]
[44.93313980 73.13080597]
[52.47110367 86.09919739]
[60.00907135 99.06758118]
[64.73166656 84.28287506]
[74.47430420 72.90893555]
[87.38584137 66.46142578]
[101.24556732 65.58007050]
[113.84130859 69.98510742]
[123.32217407 78.58486176]
[128.46980286 89.70818329]
[143.39997864 88.26248932]
[158.33015442 86.81679535]
[173.26031494 85.37110138]
[188.16281128 83.66360474]
[203.03305054 81.69483948]
[217.90328979 79.72607422]
[227.31500244 67.02980042]
[242.95976257 64.78993988]
[255.55581665 74.33535767]
[257.63015747 90.00292206]
[247.95208740 102.49735260]
[232.26347351 104.40592194]
[219.87205505 94.59630585]
[205.00181580 96.56507874]
[190.13159180 98.53384399]
[186.55258179 101.73589325]
[180.91555786 102.70479584]
[174.70600891 100.30126953]
[159.77584839 101.74696350]
[144.84567261 103.19265747]
[129.91549683 104.63835144]
[126.00662994 121.14168549]
[112.93074036 134.40942383]
[93.26036072 139.42994690]
[98.17014313 153.60365295]
[103.07993317 167.77735901]
[107.98972321 181.95106506]
[119.52332306 184.97396851]
[128.06874084 193.11578369]
[131.57360840 204.26072693]
[129.27404785 215.59275818]
[121.85768127 224.30703735]
[126.26702881 238.64431763]
[130.67637634 252.98159790]
[135.21136475 267.27963257]
[139.87165833 281.53732300]
[144.53193665 295.79501343]
[149.19221497 310.05270386]
[164.27436829 309.39569092]
[178.97421265 312.83328247]
[192.20094299 320.11038208]
[202.97303772 330.68698120]
[210.49114990 343.77822876]
[214.19737244 358.41265869]
[213.81669617 373.50430298]
[209.37734985 387.93325806]
[201.20877075 400.62881470]
[189.91712952 410.64886475]
[176.34031677 417.24984741]
[161.48585510 419.94192505]
[146.45602417 418.52536011]
[132.36613464 413.10522461]
[120.26175690 404.08377075]
[111.04112244 392.13043213]
[105.38845062 378.13223267]
[103.72321320 363.12789917]
[106.16898346 348.23089600]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 159]
[3 158]
[4 157]
[5 156]
[7 155]
[8 154]
[9 153]
[12 148]
[13 147]
[14 146]
[15 145]
[25 34]
[26 33]
[27 32]
[35 114]
[36 113]
[37 112]
[38 111]
[39 109]
[40 108]
[41 106]
[42 105]
[43 104]
[44 103]
[48 100]
[49 99]
[50 98]
[51 97]
[52 96]
[53 95]
[55 93]
[56 92]
[59 89]
[60 88]
[61 70]
[62 69]
[63 68]
[73 84]
[74 83]
[75 82]
[121 142]
[122 141]
[123 140]
[124 139]
[125 136]
[126 135]
[127 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
