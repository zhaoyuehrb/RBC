%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:30:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCCCUCCCCUCUCCGCAGGCCCCGCCGCCGCCGCCAUCUUUGUUGGGGGCAGCCAGGCCUGGCUCGAGAUGCCGAAGUCGUGCGCGGCCCGGCAGUGCUGCAACCGCUACAGCAGCCGCAGGAAGCAGCUCACCUUCCACCGGUUUCCGUUCAGCCGCCCGGAGCUGC\
) } def
/len { sequence length } bind def

/coor [
[134.47247314 127.60197449]
[136.00325012 142.52366638]
[130.68293762 156.54844666]
[119.64046478 166.70046997]
[105.21884918 170.82562256]
[90.47814178 168.04862976]
[78.54611206 158.95870972]
[71.95454407 145.48461914]
[72.10207367 130.48535156]
[78.95739746 117.14350891]
[91.06573486 108.29013062]
[76.10669708 109.39791870]
[61.14765930 110.50570679]
[46.18862534 111.61349487]
[34.41405487 126.41600800]
[15.87943840 127.92666626]
[2.33518600 115.65356445]
[-12.57270145 117.31335449]
[-27.48058891 118.97314453]
[-42.38847351 120.63293457]
[-57.29636383 122.29272461]
[-72.20424652 123.95251465]
[-82.06349182 136.01206970]
[-97.20585632 137.48297119]
[-108.64204407 128.00936890]
[-123.54993439 129.66915894]
[-136.40921021 138.88597107]
[-149.91447449 132.60449219]
[-164.82235718 134.26428223]
[-179.73025513 135.92407227]
[-192.58952332 145.14088440]
[-206.09478760 138.85940552]
[-221.00268555 140.51919556]
[-235.91056824 142.17898560]
[-248.76983643 151.39579773]
[-262.27511597 145.11431885]
[-277.18298340 146.77410889]
[-290.06262207 156.92530823]
[-305.19128418 150.59634399]
[-307.00588989 134.29789734]
[-293.63973999 124.79642487]
[-278.84277344 131.86621094]
[-263.93490601 130.20642090]
[-252.14193726 121.10833740]
[-237.57035828 127.27109528]
[-222.66247559 125.61130524]
[-207.75457764 123.95151520]
[-195.96162415 114.85342407]
[-181.39004517 121.01618195]
[-166.48214722 119.35639191]
[-151.57426453 117.69660187]
[-139.78131104 108.59851074]
[-125.20972443 114.76126862]
[-110.30183411 113.10147858]
[-101.22938538 101.34451294]
[-86.13430786 99.44888306]
[-73.86403656 109.04462433]
[-58.95615387 107.38483429]
[-44.04826355 105.72504425]
[-29.14037895 104.06525421]
[-14.23249149 102.40546417]
[0.67539579 100.74567413]
[5.72565079 90.46429443]
[15.22023773 83.84379578]
[26.85253906 82.63427734]
[37.72720718 87.25368500]
[45.08083725 96.65445709]
[60.03987503 95.54666901]
[74.99890900 94.43888092]
[89.95794678 93.33109283]
[88.13102722 90.38483429]
[86.79351044 87.05168152]
[82.95587158 72.55091095]
[78.98440552 58.08621216]
[74.87946320 43.65882492]
[62.73606110 32.63748932]
[66.47308350 16.66981506]
[82.24620819 12.18197441]
[93.82938385 23.79067612]
[89.30684662 39.55388260]
[93.41178894 53.98126602]
[98.28587341 59.57621765]
[97.45664215 68.71326447]
[101.29428864 83.21404266]
[113.26454163 92.25356293]
[128.26197815 91.97637939]
[143.25941467 91.69919586]
[158.25686646 91.42201233]
[173.25430298 91.14482880]
[188.24853516 90.72908020]
[203.23829651 90.17481232]
[218.22804260 89.62053680]
[233.21780396 89.06626892]
[239.06660461 85.84970093]
[244.79499817 86.06690216]
[248.76951599 88.77883911]
[263.76950073 88.77883911]
[278.76950073 88.77883911]
[293.76889038 88.64024353]
[308.76632690 88.36306000]
[323.76376343 88.08587646]
[332.32507324 84.78782654]
[339.04028320 87.94471741]
[354.04028320 87.94471741]
[369.04028320 87.94471741]
[382.22125244 69.61641693]
[407.96722412 68.89377594]
[420.10247803 60.07699585]
[426.27468872 44.88370895]
[442.55349731 42.90066528]
[452.19268799 56.16785431]
[445.27624512 71.03713226]
[428.91928101 72.21224976]
[416.78402710 81.02902985]
[420.62164307 95.52980804]
[435.52954102 97.18959808]
[450.43743896 98.84938812]
[465.34530640 100.50917816]
[480.25320435 102.16896820]
[492.52346802 92.57322693]
[507.61856079 94.46885681]
[516.69097900 106.22582245]
[531.59887695 107.88561249]
[546.50677490 109.54540253]
[561.41467285 111.20519257]
[576.32257080 112.86498260]
[586.67645264 101.30743408]
[601.85327148 98.07595062]
[616.01733398 104.41311646]
[623.72216797 117.88214874]
[622.00518799 133.30393982]
[611.52655029 144.74848938]
[596.31549072 147.81513977]
[582.22106934 141.32469177]
[574.66278076 127.77286530]
[559.75488281 126.11307526]
[544.84698486 124.45328522]
[529.93908691 122.79349518]
[515.03118896 121.13370514]
[503.59503174 130.60731506]
[488.45266724 129.13641357]
[478.59341431 117.07685852]
[463.68551636 115.41706085]
[448.77764893 113.75727081]
[433.86975098 112.09748077]
[418.96185303 110.43769073]
[405.41357422 121.33525848]
[389.14233398 122.82012177]
[375.69573975 115.53910065]
[369.04028320 102.94471741]
[354.04028320 102.94471741]
[339.04028320 102.94471741]
[324.04092407 103.08331299]
[309.04348755 103.36049652]
[294.04605103 103.63768005]
[287.39031982 106.91812134]
[278.76950073 103.77883911]
[263.76950073 103.77883911]
[248.76951599 103.77883911]
[233.77207947 104.05602264]
[218.78231812 104.61029053]
[203.79257202 105.16456604]
[188.80281067 105.71884155]
[182.20883179 109.12171173]
[173.53147888 106.14226532]
[158.53404236 106.41944885]
[143.53660583 106.69663239]
[128.53916931 106.97381592]
[113.54172516 107.25099945]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 70]
[12 69]
[13 68]
[14 67]
[17 62]
[18 61]
[19 60]
[20 59]
[21 58]
[22 57]
[25 54]
[26 53]
[28 51]
[29 50]
[30 49]
[32 47]
[33 46]
[34 45]
[36 43]
[37 42]
[72 84]
[73 83]
[74 81]
[75 80]
[85 169]
[86 168]
[87 167]
[88 166]
[89 165]
[90 163]
[91 162]
[92 161]
[93 160]
[96 159]
[97 158]
[98 157]
[99 155]
[100 154]
[101 153]
[103 152]
[104 151]
[105 150]
[107 114]
[108 113]
[115 146]
[116 145]
[117 144]
[118 143]
[119 142]
[122 139]
[123 138]
[124 137]
[125 136]
[126 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
