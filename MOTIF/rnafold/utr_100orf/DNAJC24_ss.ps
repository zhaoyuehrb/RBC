%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:14:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUUCCGGCGGAAGAAGAAGCCGGUCCGGAGUUCUGGCCGACAGCAGGCGAGGAGUGGGUAGCAGCGCCUAUGUGAAGUUAGCUAAUCUGAGAAGGCCCACUUCUGGUUCCAUGGAUGAUGGCGGUUGAGCAGAUGCCAAAAAAGGAUUGGUACAGCAUCCUGGGAGCAGACCCAUCUGCAAAUAUAUCAGACCUAAAACAAAAAUAUCAAAAAC\
) } def
/len { sequence length } bind def

/coor [
[133.18835449 344.18814087]
[121.60709381 334.65533447]
[112.36262512 322.84265137]
[105.89285278 309.30963135]
[102.50426483 294.69738770]
[102.35781860 279.69378662]
[95.84956360 293.20834351]
[89.34130859 306.72286987]
[82.83304596 320.23739624]
[76.32479095 333.75192261]
[85.04294586 346.39666748]
[86.25471497 361.70767212]
[79.63414764 375.56637573]
[66.96214294 384.24487305]
[51.64740753 385.40863037]
[37.80952072 378.74465942]
[29.17081451 366.04550171]
[28.05504990 350.72720337]
[34.76236725 336.91027832]
[47.48852539 328.31140137]
[62.81026077 327.24368286]
[69.31851959 313.72912598]
[75.82677460 300.21459961]
[82.33502960 286.70007324]
[88.84328461 273.18554688]
[74.16898346 276.29440308]
[61.97630310 267.55722046]
[60.20333862 252.66235352]
[70.00438690 241.30720520]
[84.99843597 240.88458252]
[95.42337799 251.66921997]
[97.58740997 236.82614136]
[91.76719666 223.11575317]
[101.41448975 210.57620239]
[103.57851410 195.73312378]
[105.74254608 180.89004517]
[107.90657806 166.04696655]
[96.52520752 156.27638245]
[82.18098450 160.66311646]
[67.83676910 165.04983521]
[61.89479828 179.51452637]
[48.02133560 186.72985840]
[32.76700974 183.28900146]
[23.33444595 170.81660461]
[24.17740822 155.20175171]
[34.89788055 143.81730652]
[50.43397903 142.03866577]
[63.45003891 150.70562744]
[77.79425812 146.31889343]
[92.13847351 141.93215942]
[66.52220917 116.31202698]
[71.75817871 85.34451294]
[60.44783020 75.49179840]
[49.13748550 65.63907623]
[37.82713699 55.78636169]
[26.51678848 45.93364716]
[15.20643997 36.08092880]
[3.89609194 26.22821236]
[-7.41425610 16.37549591]
[-18.72460365 6.52277899]
[-30.03495216 -3.32993770]
[-49.98260498 -0.89328504]
[-65.05371094 -13.71989727]
[-65.81350708 -33.18996429]
[-77.54097748 -42.54231262]
[-89.26845551 -51.89465714]
[-106.59929657 -46.55291748]
[-123.51773071 -52.63380814]
[-133.30957031 -67.52336121]
[-132.20965576 -85.15250397]
[-144.20295715 -94.16140747]
[-156.19627380 -103.17031860]
[-170.98825073 -98.48234558]
[-185.70005798 -103.41613007]
[-194.67471313 -116.07453156]
[-194.46128845 -131.59013367]
[-185.14181519 -143.99688721]
[-170.29986572 -148.52410889]
[-155.64244080 -143.43103027]
[-146.80563354 -130.67601013]
[-147.18736267 -115.16362762]
[-135.19406128 -106.15472412]
[-123.20074463 -97.14581299]
[-112.25872040 -102.39222717]
[-100.05219269 -102.49092865]
[-88.89562988 -97.36186981]
[-80.93050385 -87.92205811]
[-77.71426392 -75.92218018]
[-79.91610718 -63.62213135]
[-68.18863678 -54.26978302]
[-56.46116257 -44.91743851]
[-46.95468521 -48.76964188]
[-36.62611008 -48.32708740]
[-27.34006691 -43.60264206]
[-20.80073929 -35.38820267]
[-18.23923492 -25.12271118]
[-20.18223572 -14.64028549]
[-8.87188721 -4.78756905]
[2.43846083 5.06514788]
[13.74880886 14.91786480]
[25.05915642 24.77058220]
[36.36950302 34.62329865]
[47.67985153 44.47601318]
[58.99020004 54.32873154]
[70.30055237 64.18144989]
[81.61089325 74.03416443]
[107.46009064 65.36132812]
[133.68424988 80.24896240]
[140.78227234 112.52661896]
[152.09262085 102.67390442]
[163.40296936 92.82118225]
[174.71331787 82.96846771]
[186.02366638 73.11575317]
[190.43623352 65.12306976]
[197.56980896 63.20371246]
[209.02160645 53.51576614]
[220.47340393 43.82781982]
[231.92520142 34.13987350]
[243.37699890 24.45192909]
[248.91555786 9.63184071]
[263.62945557 7.31883383]
[275.08126831 -2.36911201]
[284.85186768 -13.75048351]
[292.69396973 -26.53724861]
[288.76681519 -41.84584427]
[296.88650513 -55.40483093]
[312.23577881 -59.16990280]
[325.70816040 -50.90730667]
[329.31072998 -35.51909637]
[320.90615845 -22.13482475]
[305.48074341 -18.69514275]
[297.63861084 -5.90837717]
[302.84509277 -0.50997728]
[317.40185547 -4.12946939]
[313.25802612 10.28682232]
[318.46447754 15.68522167]
[331.52664185 8.31094646]
[344.58880615 0.93667215]
[357.65097046 -6.43760252]
[370.71313477 -13.81187725]
[383.77529907 -21.18615150]
[386.46118164 -36.59134674]
[398.45419312 -46.62636948]
[414.09158325 -46.55298615]
[425.98989868 -36.40584564]
[428.53106689 -20.97612190]
[420.51525879 -7.54925394]
[405.72729492 -2.46500063]
[391.14956665 -8.12399006]
[378.08740234 -0.74971563]
[365.02523804 6.62455940]
[351.96307373 13.99883366]
[338.90090942 21.37310791]
[325.83874512 28.74738312]
[284.76922607 9.08268738]
[273.31741333 18.77063370]
[268.59796143 32.89777374]
[253.06495667 35.90372849]
[241.61315918 45.59167480]
[230.16134644 55.27962112]
[218.70954895 64.96756744]
[207.25775146 74.65550995]
[195.87638855 84.42610168]
[184.56604004 94.27881622]
[173.25569153 104.13153076]
[161.94534302 113.98425293]
[150.63499451 123.83696747]
[153.44143677 138.57208252]
[167.58166504 143.57748413]
[181.72189331 148.58288574]
[195.86212158 153.58827209]
[210.00234985 158.59367371]
[226.01908875 155.07284546]
[236.87525940 167.36412048]
[231.40298462 182.82328796]
[215.23164368 185.54728699]
[204.99694824 172.73390198]
[190.85671997 167.72850037]
[176.71650696 162.72311401]
[162.57627869 157.71771240]
[148.43605042 152.71231079]
[142.01445007 156.58699036]
[152.02395630 167.75881958]
[164.00668335 176.78179932]
[163.23791504 191.76208496]
[150.39447021 199.51101685]
[136.78373718 193.20642090]
[134.38829041 178.39984131]
[129.17124939 164.33633423]
[122.74965668 168.21099854]
[120.58562469 183.05407715]
[118.42159271 197.89715576]
[116.25756836 212.74023438]
[121.92298889 227.51228333]
[112.43048859 238.99015808]
[110.26645660 253.83323669]
[118.77692413 241.48124695]
[129.75825500 231.26309204]
[142.69023132 223.66284180]
[156.96028137 219.04052734]
[171.89239502 217.61508179]
[186.77923584 219.45407104]
[200.91560364 224.47033691]
[213.63185120 232.42630005]
[224.32559204 242.94503784]
[232.49023438 255.52830505]
[237.73904419 269.57998657]
[239.82337952 284.43447876]
[238.64447021 299.38806152]
[234.25819397 313.73242188]
[226.87232971 326.78802490]
[216.83673096 337.93643188]
[204.62681580 346.64953613]
[190.82096863 352.51455688]
[176.07318115 355.25369263]
[161.08207703 354.73718262]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 25]
[7 24]
[8 23]
[9 22]
[10 21]
[31 196]
[32 195]
[34 193]
[35 192]
[36 191]
[37 190]
[38 50]
[39 49]
[40 48]
[52 106]
[53 105]
[54 104]
[55 103]
[56 102]
[57 101]
[58 100]
[59 99]
[60 98]
[61 97]
[64 91]
[65 90]
[66 89]
[70 83]
[71 82]
[72 81]
[109 167]
[110 166]
[111 165]
[112 164]
[113 163]
[115 162]
[116 161]
[117 160]
[118 159]
[119 158]
[121 156]
[122 155]
[123 132]
[124 131]
[136 154]
[137 153]
[138 152]
[139 151]
[140 150]
[141 149]
[168 181]
[169 180]
[170 179]
[171 178]
[172 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
