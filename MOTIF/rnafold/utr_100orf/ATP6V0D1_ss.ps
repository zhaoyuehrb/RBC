%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:08:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUGACAGCCCGCUGAGGACGCAGCGUCAGCUGACCUGGGGAGUCGCGAUUCGUGCCGGCCGGUCCUGGUUCUCCGGUCCCGCCGCUCCCGCAGCAGCCAUGUCGUUCUUCCCGGAGCUUUACUUUAACGUGGACAAUGGCUACUUGGAGGGACUGGUGCGCGGCCUGAAGGCCGGGGUGCUCAGCCAGGCCGACUACC\
) } def
/len { sequence length } bind def

/coor [
[87.53440094 391.26354980]
[74.21923065 384.05349731]
[63.96845627 372.90896606]
[57.89399719 359.03887939]
[56.65476990 343.94772339]
[60.38520050 329.27246094]
[68.68063354 316.60501099]
[80.64124298 307.31939697]
[94.96962738 302.42288208]
[94.96962738 287.42288208]
[94.96962738 272.42288208]
[85.38761902 257.72488403]
[94.71640015 241.85295105]
[94.48196411 226.85478210]
[94.24752808 211.85661316]
[94.01308441 196.85844421]
[93.77864838 181.86029053]
[93.54421234 166.86212158]
[85.60894012 154.25732422]
[93.12960815 140.33790588]
[92.89517212 125.33974457]
[88.84692383 123.83673859]
[85.09896851 121.69194794]
[73.43440247 131.12263489]
[61.76984406 140.55332947]
[50.10527802 149.98402405]
[44.72459030 165.47531128]
[28.56966782 168.29498291]
[18.25931168 155.54238892]
[24.39993286 140.33631897]
[40.67458725 138.31945801]
[52.33914948 128.88876343]
[64.00371552 119.45807648]
[75.66827393 110.02738190]
[72.62042999 101.76391602]
[72.42049408 92.59729004]
[75.32195282 83.51951599]
[81.23078918 75.58650970]
[68.01234436 68.49618530]
[54.73889923 61.50937271]
[41.41125107 54.62650299]
[28.08360672 47.74363708]
[14.75596142 40.86076736]
[1.42831659 33.97790146]
[-3.42193127 53.28767776]
[-24.36602211 67.27559662]
[-39.36190033 66.92395782]
[-54.35777664 66.57231903]
[-69.35365295 66.22068024]
[-85.33017731 71.89404297]
[-95.20456696 58.11243820]
[-84.69505310 44.80881119]
[-69.00201416 51.22480011]
[-54.00614166 51.57643890]
[-39.01026154 51.92807770]
[-24.01438522 52.27971649]
[-18.84715843 38.19710922]
[-13.68037891 24.11576080]
[-25.34494209 14.68506813]
[-37.00950623 5.25437498]
[-48.67406845 -4.17631817]
[-64.27014160 -6.83584881]
[-69.30280304 -20.85446358]
[-80.96736908 -30.28515625]
[-96.56343842 -32.94468689]
[-101.59609985 -46.96330261]
[-113.26066589 -56.39399338]
[-121.90913391 -59.35932922]
[-125.03232574 -66.06437683]
[-136.54808044 -75.67622375]
[-152.78921509 -77.94718933]
[-158.69143677 -93.24738312]
[-148.18302917 -105.83728027]
[-132.07414246 -102.76546478]
[-126.93622589 -87.19197083]
[-115.42047882 -77.58011627]
[-103.82997131 -68.05855560]
[-92.16541290 -58.62786484]
[-77.40366364 -56.64287949]
[-71.53667450 -41.94971848]
[-59.87211227 -32.51902771]
[-45.11036682 -30.53404236]
[-39.24337387 -15.84088135]
[-27.57881165 -6.41018820]
[-15.91424847 3.02050495]
[-4.24968576 12.45119762]
[8.31118488 20.65025520]
[21.63883018 27.53312302]
[34.96647644 34.41598892]
[48.29412079 41.29885864]
[61.62176514 48.18172836]
[69.01335907 48.45795441]
[75.10267639 55.27774048]
[88.32112122 62.36806870]
[103.23143005 60.73020935]
[114.59554291 50.93955231]
[125.95965576 41.14889526]
[130.42335510 33.16989136]
[137.57873535 31.29571533]
[149.09448242 21.68386650]
[160.61022949 12.07201862]
[161.96415710 7.92710257]
[164.33178711 4.75190639]
[167.28221130 2.74644780]
[170.36386108 1.94967520]
[173.15902710 2.24674916]
[185.25280762 -6.62683392]
[197.34658813 -15.50041771]
[209.44036865 -24.37400055]
[221.53414917 -33.24758530]
[233.62792969 -42.12116623]
[245.72171021 -50.99475098]
[257.81549072 -59.86833191]
[264.36474609 -74.27034760]
[279.20330811 -75.56123352]
[291.29708862 -84.43481445]
[303.32113647 -93.40264130]
[315.27474976 -102.46415710]
[327.22836304 -111.52566528]
[339.18197632 -120.58718109]
[350.77249146 -130.10874939]
[361.98220825 -140.07582092]
[373.19189453 -150.04289246]
[384.40161133 -160.00996399]
[385.07708740 -175.79980469]
[396.77615356 -186.42559814]
[412.55798340 -185.58322144]
[423.05947876 -173.77246094]
[422.05029297 -158.00042725]
[410.12918091 -147.62438965]
[394.36868286 -148.80026245]
[383.15896606 -138.83319092]
[371.94927979 -128.86611938]
[360.73956299 -118.89904022]
[375.32150269 -115.38236237]
[381.80871582 -101.85771179]
[375.42419434 -88.28428650]
[360.86929321 -84.65721130]
[348.86193848 -93.64736176]
[348.24349976 -108.63356781]
[336.28988647 -99.57205200]
[324.33627319 -90.51053619]
[312.38265991 -81.44902039]
[308.94860840 -74.89773560]
[300.17065430 -72.34103394]
[288.07687378 -63.46745300]
[282.39266968 -49.70013809]
[266.68908691 -47.77455139]
[254.59529114 -38.90097046]
[242.50151062 -30.02738571]
[230.40773010 -21.15380287]
[218.31394958 -12.28022003]
[206.22016907 -3.40663695]
[194.12638855 5.46694613]
[182.03260803 14.34052944]
[170.22207642 23.58776283]
[158.70632935 33.19961166]
[147.19058228 42.81145859]
[135.75030518 52.51300812]
[124.38619995 62.30366516]
[113.02208710 72.09432220]
[126.09099579 88.39443207]
[125.16378784 107.70486450]
[137.66020203 116.00183105]
[150.15661621 124.29879761]
[162.65303040 132.59576416]
[175.14944458 140.89273071]
[191.54144287 141.37673950]
[199.07901001 155.94097900]
[190.00811768 169.60301208]
[173.66015625 168.30851746]
[166.85247803 153.38914490]
[154.35606384 145.09217834]
[141.85964966 136.79521179]
[129.36323547 128.49824524]
[116.86682129 120.20127106]
[114.09786224 122.22232056]
[111.08968353 123.86629486]
[107.89334106 125.10530853]
[108.12777710 140.10346985]
[116.07981873 153.78103638]
[108.54238129 166.62767029]
[108.77681732 181.62583923]
[109.01125336 196.62400818]
[109.24568939 211.62217712]
[109.48013306 226.62034607]
[109.71456909 241.61851501]
[118.41902161 251.14384460]
[118.30104828 263.64581299]
[109.96962738 272.42288208]
[109.96962738 287.42288208]
[109.96962738 302.42288208]
[124.29801941 307.31939697]
[136.25863647 316.60501099]
[144.55406189 329.27246094]
[148.28448486 343.94772339]
[147.04525757 359.03887939]
[140.97080994 372.90896606]
[130.72003174 384.05349731]
[117.40486145 391.26354980]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 192]
[10 191]
[11 190]
[13 187]
[14 186]
[15 185]
[16 184]
[17 183]
[18 182]
[20 180]
[21 179]
[23 34]
[24 33]
[25 32]
[26 31]
[38 94]
[39 93]
[40 91]
[41 90]
[42 89]
[43 88]
[44 87]
[46 56]
[47 55]
[48 54]
[49 53]
[58 86]
[59 85]
[60 84]
[61 83]
[63 81]
[64 80]
[66 78]
[67 77]
[69 76]
[70 75]
[95 161]
[96 160]
[97 159]
[99 158]
[100 157]
[101 156]
[106 155]
[107 154]
[108 153]
[109 152]
[110 151]
[111 150]
[112 149]
[113 148]
[115 146]
[116 145]
[117 143]
[118 142]
[119 141]
[120 140]
[121 134]
[122 133]
[123 132]
[124 131]
[163 176]
[164 175]
[165 174]
[166 173]
[167 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
