%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:01:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAUAAAGCUCCUACAGCUACCUGGCCUGAGAAGCCAACUCAGACUCAGCCAACAGAGAUUGUUGAUUUGCCUCUUAAGCAAGAGAUUCAUUGCAGCUCAGCAUGGCUCAGACCAGCUCAUACUUCAUGCUGAUCUCCUGCCUGAUGUUUCUGUCUCAGAGCCAAGGCCAAGAGGCCCAGACAGAGUUGCCCCAGGCCCGGA\
) } def
/len { sequence length } bind def

/coor [
[58.13549805 381.01538086]
[64.63475800 394.53424072]
[63.18128204 409.46365356]
[54.19647980 421.47503662]
[40.28537750 427.08584595]
[25.48131180 424.66931152]
[14.07652855 414.92605591]
[9.37780571 400.68347168]
[3.10840082 414.31045532]
[-3.16100430 427.93743896]
[-9.43040943 441.56442261]
[-5.23705530 457.04974365]
[-14.84523392 469.89739990]
[-30.88437271 470.25177002]
[-41.05061722 457.84100342]
[-37.54529572 442.18557739]
[-23.05738831 435.29501343]
[-16.78798294 421.66802979]
[-10.51857853 408.04104614]
[-4.24917316 394.41406250]
[-5.40690899 383.67999268]
[3.21161366 375.15554810]
[7.75890350 360.86141968]
[4.24401188 346.38748169]
[15.80076885 335.58230591]
[20.34805870 321.28817749]
[24.89534950 306.99404907]
[29.44264030 292.69992065]
[33.98992920 278.40579224]
[38.53722000 264.11166382]
[31.21986771 255.34974670]
[29.02052879 244.02589417]
[32.59970093 232.93370056]
[41.17760468 224.86671448]
[52.70073318 221.91503906]
[57.68605423 207.76771545]
[56.94375992 200.41020203]
[62.85861206 193.44194031]
[68.06120300 179.37307739]
[73.26379395 165.30419922]
[78.46638489 151.23533630]
[83.66897583 137.16647339]
[76.88645172 130.24263000]
[72.36410522 122.33248901]
[70.15942383 114.08822632]
[70.15600586 106.12824249]
[55.17200851 105.43548584]
[40.18801498 104.74273682]
[30.60280991 116.94533539]
[15.66654778 121.15100861]
[1.12252438 115.74259186]
[-7.43678570 102.79972076]
[-6.72015333 87.29920197]
[2.99686122 75.20130157]
[17.97786903 71.15790558]
[32.46236420 76.72378540]
[40.88076401 89.75874329]
[55.86476135 90.45149231]
[70.84875488 91.14424896]
[73.77812195 81.48992920]
[79.95664215 72.87475586]
[88.99121094 66.40026855]
[80.70573425 53.89623642]
[72.42026520 41.39220047]
[64.13478851 28.88816452]
[55.84931564 16.38412857]
[47.56383896 3.88009214]
[33.49127579 -3.34995079]
[32.91100693 -18.23324776]
[24.62553406 -30.73728371]
[16.34005928 -43.24132156]
[8.05458450 -55.74535751]
[-0.89249700 -67.78486633]
[-10.47519875 -79.32487488]
[-20.05790138 -90.86488342]
[-29.64060402 -102.40489197]
[-39.22330475 -113.94490051]
[-54.78376389 -119.12217712]
[-57.81483459 -135.23876953]
[-45.19841385 -145.71531677]
[-29.91319275 -139.77442932]
[-27.68329620 -123.52760315]
[-18.10059357 -111.98759460]
[-8.51789188 -100.44758606]
[1.06481051 -88.90757751]
[10.64751244 -77.36756134]
[11.98581314 -92.30774689]
[22.52224922 -102.98404694]
[37.44348145 -104.51924133]
[49.93307114 -96.21201324]
[54.28542328 -81.85732269]
[48.51225662 -68.01280975]
[35.25092316 -61.00302887]
[20.55862045 -64.03083038]
[28.84409523 -51.52679443]
[37.12957001 -39.02275848]
[45.41504288 -26.51872253]
[58.89497375 -20.18305206]
[60.06787491 -4.40538263]
[68.35334778 8.09865379]
[76.63882446 20.60268974]
[84.92430115 33.10672379]
[93.20977020 45.61075974]
[101.49524689 58.11479568]
[116.14797211 61.32379150]
[128.90122986 53.42731094]
[141.65447998 45.53082657]
[154.40774536 37.63434601]
[167.16099548 29.73786354]
[179.91426086 21.84138107]
[192.54440308 13.74944210]
[205.04843140 5.46396780]
[217.55247498 -2.82150674]
[230.05650330 -11.10698128]
[235.48547363 -18.46010971]
[242.81750488 -19.42203903]
[255.44764709 -27.51397705]
[255.05934143 -38.18547058]
[259.10760498 -47.97956467]
[266.79904175 -55.15234756]
[276.69821167 -58.45694733]
[286.99533081 -57.35993576]
[295.83706665 -52.12622833]
[308.82742310 -59.62622833]
[316.91009521 -73.22701263]
[331.80087280 -72.88995361]
[344.79125977 -80.38995361]
[357.78164673 -87.88995361]
[365.86428833 -101.49073792]
[380.75506592 -101.15367126]
[393.74545288 -108.65367126]
[394.37680054 -124.06811523]
[403.26028442 -136.68109131]
[417.56121826 -142.46786499]
[432.71624756 -139.58187866]
[443.88943481 -128.94404602]
[447.51547241 -113.94886780]
[442.43728638 -99.38124847]
[430.27532959 -89.88965607]
[414.91043091 -88.50282288]
[401.24545288 -95.66329193]
[388.25506592 -88.16329193]
[381.10159302 -75.09895325]
[365.28164673 -74.89956665]
[352.29125977 -67.39956665]
[339.30087280 -59.89957047]
[332.14739990 -46.83523560]
[316.32742310 -46.63584900]
[303.33706665 -39.13584900]
[299.69653320 -20.00267029]
[282.90417480 -9.54675579]
[263.53958130 -14.88383293]
[250.90943909 -6.79189444]
[238.34197998 1.39705443]
[225.83795166 9.68252945]
[213.33390808 17.96800423]
[200.82987976 26.25347900]
[199.01843262 30.67797279]
[194.40527344 34.00897980]
[187.81074524 34.59463882]
[175.05747986 42.49111938]
[162.30422974 50.38760376]
[149.55096436 58.28408432]
[136.79771423 66.18056488]
[124.04445648 74.07704926]
[137.59933472 94.65956879]
[134.80314636 120.89952087]
[147.17811584 129.37655640]
[159.55307007 137.85360718]
[171.92803955 146.33065796]
[188.31130981 147.05197144]
[195.63719177 161.72383118]
[186.36943054 175.25308228]
[170.04191589 173.72200012]
[163.45098877 158.70561218]
[151.07601929 150.22857666]
[138.70106506 141.75152588]
[126.32610321 133.27447510]
[119.17903900 135.54812622]
[130.26423645 145.65348816]
[127.05541992 160.30625916]
[112.76136780 164.85380554]
[101.67598724 154.74864197]
[104.88490295 140.09541321]
[97.73783875 142.36906433]
[92.53524780 156.43792725]
[87.33265686 170.50679016]
[82.13007355 184.57566833]
[76.92748260 198.64453125]
[71.83337402 212.75303650]
[66.84805298 226.90036011]
[75.67759705 243.65711975]
[69.56541443 261.24685669]
[52.83134842 268.65896606]
[48.28406143 282.95309448]
[43.73677063 297.24722290]
[39.18947983 311.54135132]
[34.64218903 325.83547974]
[30.09490013 340.12960815]
[33.28453827 355.62594604]
[22.05303383 365.40872192]
[17.50574303 379.70285034]
[30.57568741 372.34237671]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 20]
[9 19]
[10 18]
[11 17]
[22 202]
[23 201]
[25 199]
[26 198]
[27 197]
[28 196]
[29 195]
[30 194]
[35 191]
[36 190]
[38 189]
[39 188]
[40 187]
[41 186]
[42 185]
[46 59]
[47 58]
[48 57]
[62 104]
[63 103]
[64 102]
[65 101]
[66 100]
[67 99]
[69 97]
[70 96]
[71 95]
[72 94]
[73 86]
[74 85]
[75 84]
[76 83]
[77 82]
[105 165]
[106 164]
[107 163]
[108 162]
[109 161]
[110 160]
[111 157]
[112 156]
[113 155]
[114 154]
[116 153]
[117 152]
[123 149]
[124 148]
[126 146]
[127 145]
[128 144]
[130 142]
[131 141]
[167 178]
[168 177]
[169 176]
[170 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
