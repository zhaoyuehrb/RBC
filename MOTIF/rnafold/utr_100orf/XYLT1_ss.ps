%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:20:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCCGCGGGAGCUGCGGGGAGCGCGGGGGCGGCCCGGAGCGUGCCGGGGUCCCCGCGCCUCGCUCGCCGGCCGCGCUCCGAAGAUGGUGGCGGCGCCGUGCGCCCGGAGGCUGGCCCGGCGCUCGCACUCGGCGCUGCUCGCGGCGCUCACGGUGCUGCUGCUGCAGACGCUGGUCGUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[83.41398621 107.95065308]
[68.95839691 111.95516205]
[54.50281525 115.95967102]
[40.04722977 119.96417236]
[25.59164429 123.96868134]
[11.13605976 127.97319031]
[-3.31952477 131.97769165]
[-17.74077606 136.10414124]
[-32.12666321 140.35221863]
[-46.51255417 144.60029602]
[-34.86406326 154.05084229]
[-34.81687546 169.05076599]
[-46.40567017 178.57441711]
[-61.11212921 175.62144470]
[-68.12629700 162.36242676]
[-62.29354858 148.54438782]
[-76.98649597 151.56385803]
[-91.67944336 154.58334351]
[-106.37239838 157.60281372]
[-121.06534576 160.62229919]
[-126.28136444 164.74214172]
[-131.94387817 165.48143005]
[-136.30516052 163.48678589]
[-151.09170532 166.00830078]
[-165.87825012 168.52981567]
[-180.66479492 171.05133057]
[-195.45135498 173.57284546]
[-210.23789978 176.09434509]
[-225.02444458 178.61585999]
[-239.81098938 181.13737488]
[-254.59753418 183.65888977]
[-269.38409424 186.18040466]
[-274.73626709 190.12173462]
[-280.42053223 190.66935730]
[-284.71194458 188.52854919]
[-299.57522583 190.54922485]
[-314.43850708 192.56988525]
[-329.30175781 194.59056091]
[-344.16503906 196.61123657]
[-353.53237915 209.34028625]
[-369.16921997 211.63475037]
[-381.79852295 202.13337708]
[-383.92752075 186.47314453]
[-374.29315186 173.94500732]
[-358.61129761 171.98167419]
[-346.18569946 181.74795532]
[-331.32244873 179.72729492]
[-316.45916748 177.70661926]
[-301.59588623 175.68594360]
[-286.73263550 173.66526794]
[-271.90560913 171.39385986]
[-257.11904907 168.87234497]
[-242.33250427 166.35083008]
[-227.54595947 163.82931519]
[-212.75941467 161.30780029]
[-197.97285461 158.78628540]
[-183.18630981 156.26477051]
[-168.39976501 153.74327087]
[-153.61322021 151.22175598]
[-138.82667542 148.70024109]
[-124.08482361 145.92935181]
[-109.39187622 142.90986633]
[-94.69892120 139.89039612]
[-80.00597382 136.87091064]
[-65.31302643 133.85144043]
[-50.76063538 130.21441650]
[-36.37474823 125.96633148]
[-21.98885918 121.71824646]
[-16.45215225 116.79782104]
[-7.32403135 117.52210999]
[7.13155317 113.51760101]
[21.58713722 109.51309967]
[36.04272079 105.50859070]
[50.49830627 101.50408173]
[64.95389557 97.49958038]
[79.40947723 93.49507141]
[86.79950714 80.44181824]
[82.79499817 65.98622894]
[78.79048920 51.53064728]
[74.66404724 37.10939407]
[70.41596985 22.72350693]
[56.41522980 15.39173508]
[51.77936554 0.28265387]
[59.25875473 -13.63978577]
[74.41600037 -18.11564636]
[88.25859070 -10.48948193]
[92.57394409 4.71424198]
[84.80185699 18.47542381]
[89.04994202 32.86131287]
[93.97036743 38.39801788]
[93.24607849 47.52614212]
[97.25057983 61.98172379]
[101.25508881 76.43730927]
[116.10076904 78.58342743]
[124.03522491 65.85376740]
[131.96968079 53.12410355]
[139.90414429 40.39443970]
[147.83860779 27.66477585]
[155.77307129 14.93511105]
[163.70753479 2.20544720]
[164.44110107 -13.59874344]
[177.73959351 -20.30691528]
[185.67405701 -33.03657913]
[193.39237976 -45.89843750]
[200.89237976 -58.88881683]
[208.39237976 -71.87919617]
[207.85130310 -88.26941681]
[221.91615295 -96.70220184]
[236.11822510 -88.50263214]
[235.84765625 -72.10571289]
[221.38276672 -64.37919617]
[213.88276672 -51.38881683]
[206.38276672 -38.39843750]
[206.73855591 -33.61589050]
[204.07865906 -28.56261444]
[198.40371704 -25.10211945]
[190.46925354 -12.37245560]
[190.30320740 2.52122378]
[176.43719482 10.13990784]
[168.50273132 22.86957169]
[160.56826782 35.59923553]
[152.63381958 48.32889938]
[144.69935608 61.05856323]
[136.76489258 73.78822327]
[128.83042908 86.51789093]
[132.59022522 101.03904724]
[145.70541382 108.31858063]
[158.82061768 115.59810638]
[171.93582153 122.87763214]
[185.05101013 130.15716553]
[198.28729248 137.21414185]
[211.64086914 144.04656982]
[224.99444580 150.87899780]
[238.34802246 157.71141052]
[251.70159912 164.54383850]
[265.05517578 171.37625122]
[278.46597290 178.09565735]
[291.93304443 184.70156860]
[305.40011597 191.30749512]
[318.86718750 197.91340637]
[336.52603149 191.09909058]
[353.28097534 199.19682312]
[358.72286987 216.65887451]
[372.40536499 222.80618286]
[386.08786011 228.95347595]
[399.77035522 235.10078430]
[413.45285034 241.24809265]
[427.13534546 247.39540100]
[440.81781006 253.54269409]
[454.50030518 259.69000244]
[471.42614746 260.66592407]
[475.17388916 277.20046997]
[460.32302856 285.37896729]
[448.35302734 273.37249756]
[434.67053223 267.22518921]
[420.98803711 261.07788086]
[407.30554199 254.93058777]
[393.62304688 248.78327942]
[379.94055176 242.63597107]
[366.25805664 236.48867798]
[352.57556152 230.34136963]
[343.01922607 236.62033081]
[331.49865723 237.50572205]
[320.87673950 232.66116333]
[313.84930420 223.18872070]
[312.26126099 211.38046265]
[298.79418945 204.77455139]
[285.32711792 198.16864014]
[271.86007690 191.56272888]
[264.45394897 191.43948364]
[258.22274780 184.72982788]
[244.86917114 177.89741516]
[231.51559448 171.06498718]
[218.16201782 164.23257446]
[204.80844116 157.40014648]
[191.45486450 150.56771851]
[186.69648743 151.16528320]
[181.51496887 148.76475525]
[177.77148438 143.27236938]
[164.65628052 135.99282837]
[151.54109192 128.71330261]
[138.42588806 121.43377686]
[125.31069183 114.15424347]
[112.97102356 122.93397522]
[99.25492859 123.68464661]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 76]
[2 75]
[3 74]
[4 73]
[5 72]
[6 71]
[7 70]
[8 68]
[9 67]
[10 66]
[16 65]
[17 64]
[18 63]
[19 62]
[20 61]
[23 60]
[24 59]
[25 58]
[26 57]
[27 56]
[28 55]
[29 54]
[30 53]
[31 52]
[32 51]
[35 50]
[36 49]
[37 48]
[38 47]
[39 46]
[77 93]
[78 92]
[79 91]
[80 89]
[81 88]
[94 125]
[95 124]
[96 123]
[97 122]
[98 121]
[99 120]
[100 119]
[102 117]
[103 116]
[104 113]
[105 112]
[106 111]
[126 183]
[127 182]
[128 181]
[129 180]
[130 179]
[131 176]
[132 175]
[133 174]
[134 173]
[135 172]
[136 171]
[137 169]
[138 168]
[139 167]
[140 166]
[143 161]
[144 160]
[145 159]
[146 158]
[147 157]
[148 156]
[149 155]
[150 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
