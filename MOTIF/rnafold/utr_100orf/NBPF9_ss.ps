%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:01:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGUGCUGUGGGGAGUGAUCACAUUUUUCACAACAGUAAGUCCCUGACUCCACCUCUUCUGCCACAAACGUCAGCAUGGUGGUAUCAGCCGGCCCUUGGUCCAGCGAGAAGGCAGAGAUGAACAUUCUAGAAAUCAACGAGAAAUUGCGCCCCCAGUUGGCAGAGAACAAACAGC\
) } def
/len { sequence length } bind def

/coor [
[120.12243652 544.59442139]
[122.46120453 529.64837646]
[129.30590820 516.15740967]
[139.98596191 505.44335938]
[153.45506287 498.55578613]
[151.06910706 483.74676514]
[148.68315125 468.93771362]
[146.29719543 454.12869263]
[133.01271057 440.10339355]
[140.38993835 421.36535645]
[137.47990417 406.65032959]
[134.56987000 391.93530273]
[131.65983582 377.22030640]
[128.74980164 362.50527954]
[124.35383606 356.53485107]
[125.92113495 347.50338745]
[123.27272797 332.73904419]
[120.62432098 317.97470093]
[117.25978088 314.54522705]
[116.03371429 308.95571899]
[118.15367126 302.64001465]
[116.03092957 287.79098511]
[111.95896149 281.59503174]
[114.00471497 272.65982056]
[112.14584351 257.77542114]
[110.28697968 242.89105225]
[108.42811584 228.00668335]
[106.56925201 213.12229919]
[104.71038055 198.23793030]
[102.85151672 183.35356140]
[89.96283722 182.79614258]
[77.31430054 180.25775146]
[65.20854950 175.79908752]
[53.93522263 169.52685547]
[43.76404572 161.59111023]
[34.93838120 152.18171692]
[27.66938591 141.52383423]
[22.13098335 129.87243652]
[18.45568466 117.50631714]
[16.73142624 104.72132874]
[16.99946213 91.82338715]
[19.25337791 79.12107086]
[23.43924904 66.91831207]
[29.45692253 55.50707245]
[37.16241837 45.16036987]
[26.79373169 34.32107544]
[16.42504311 23.48178291]
[6.05635405 12.64248848]
[-9.51199055 12.12828922]
[-19.87290573 0.98799765]
[-19.28675270 -13.85087109]
[-29.65544128 -24.69016457]
[-40.02412796 -35.52946091]
[-50.39281845 -46.36875534]
[-60.76150513 -57.20804596]
[-74.26215363 -54.34260559]
[-87.30974579 -58.49706650]
[-96.52114868 -68.48175049]
[-99.56369781 -81.61013794]
[-95.74528503 -94.42118835]
[-105.91996765 -105.44280243]
[-116.09464264 -116.46441650]
[-122.33077240 -118.80809784]
[-125.89114380 -123.28803253]
[-126.42626953 -128.06245422]
[-136.20336914 -139.43821716]
[-151.84942627 -144.35076904]
[-155.15347290 -160.41362000]
[-142.71661377 -171.10269165]
[-127.33280182 -165.42199707]
[-124.82759094 -149.21533203]
[-115.05049133 -137.83955383]
[-105.07302856 -126.63909149]
[-94.89835358 -115.61747742]
[-84.72367096 -104.59587097]
[-68.50537872 -107.04021454]
[-53.87406540 -99.26811981]
[-46.67667389 -84.16162109]
[-49.92221069 -67.57673645]
[-39.55352402 -56.73744202]
[-29.18483543 -45.89814758]
[-18.81614685 -35.05885315]
[-8.44745827 -24.21955872]
[6.40280437 -24.14690971]
[17.07253838 -13.30202961]
[16.89564896 2.27380013]
[27.26433563 13.11309433]
[37.63302612 23.95238876]
[48.00171280 34.79168320]
[67.96254730 22.99644089]
[90.39926910 17.15211296]
[113.57794952 17.71035385]
[135.70730591 24.62802315]
[143.32229614 11.70471287]
[150.93728638 -1.21859860]
[158.32170105 -14.27502632]
[165.47323608 -27.46045685]
[172.62477112 -40.64588928]
[179.77629089 -53.83132172]
[175.04119873 -68.90959930]
[182.42889404 -82.88090515]
[197.55638123 -87.45632935]
[211.44880676 -79.92133331]
[215.86402893 -64.74630737]
[208.18258667 -50.93432617]
[192.96173096 -46.67979050]
[185.81019592 -33.49435806]
[178.65866089 -20.30892563]
[171.50712585 -7.12349510]
[171.99333191 -2.34384775]
[169.46038818 2.78745174]
[163.86059570 6.39638853]
[156.24560547 19.31970024]
[148.63061523 32.24301147]
[159.43426514 41.48918915]
[168.51014709 52.43628693]
[175.59442139 64.76606750]
[189.70492554 59.67748642]
[203.81542969 54.58890533]
[209.03704834 39.84886551]
[222.53791809 31.95832253]
[237.94332886 34.64294434]
[247.97932434 46.63513947]
[247.90722656 62.27255630]
[237.76104736 74.17168427]
[222.33154297 76.71412659]
[208.90400696 68.69940948]
[194.79350281 73.78799438]
[180.68299866 78.87657166]
[182.90313721 90.88870239]
[183.34481812 103.09629059]
[181.99858093 115.23745728]
[178.89328003 127.05175018]
[174.09555054 138.28572083]
[167.70831299 148.69837952]
[159.86857605 158.06634521]
[150.74452209 166.18865967]
[140.53190613 172.89109802]
[129.44978333 178.02984619]
[117.73589325 181.49468994]
[119.59475708 196.37905884]
[121.45362091 211.26344299]
[123.31249237 226.14781189]
[125.17135620 241.03219604]
[127.03022003 255.91656494]
[128.88908386 270.80093384]
[130.87997437 285.66824341]
[133.00271606 300.51727295]
[135.38867188 315.32629395]
[138.03707886 330.09063721]
[140.68548584 344.85498047]
[143.46481323 359.59524536]
[146.37484741 374.31027222]
[149.28488159 389.02529907]
[152.19491577 403.74029541]
[155.10494995 418.45532227]
[164.50912476 423.99856567]
[169.19767761 433.61257935]
[167.83212280 443.99960327]
[161.10623169 451.74273682]
[163.49217224 466.55175781]
[165.87812805 481.36080933]
[168.26408386 496.16983032]
[183.21482849 498.47854614]
[196.71949768 505.29611206]
[207.45503235 515.95458984]
[214.36965942 529.40985107]
[216.78598022 544.34356689]
[214.46723938 559.29278564]
[207.64062500 572.79284668]
[196.97494507 583.52124023]
[183.51509094 590.42687988]
[168.57972717 592.83319092]
[153.63208008 590.50439453]
[140.13656616 583.66876221]
[129.41532898 572.99591064]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 163]
[6 162]
[7 161]
[8 160]
[10 156]
[11 155]
[12 154]
[13 153]
[14 152]
[16 151]
[17 150]
[18 149]
[21 148]
[22 147]
[24 146]
[25 145]
[26 144]
[27 143]
[28 142]
[29 141]
[30 140]
[45 89]
[46 88]
[47 87]
[48 86]
[51 83]
[52 82]
[53 81]
[54 80]
[55 79]
[60 75]
[61 74]
[62 73]
[65 72]
[66 71]
[93 114]
[94 113]
[95 112]
[96 109]
[97 108]
[98 107]
[99 106]
[117 129]
[118 128]
[119 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
