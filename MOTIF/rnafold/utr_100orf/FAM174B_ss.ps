%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:20:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUUCCGGGCGCCGCAGCUUCCUGCCAAGCACCGCGCAGCCGCCUCCGCCGCAGGAUCCCCCGGUGCAGGCCUCCGUGCUGGUGCGGAUCCUGGAGCUCAGCCGCGCGCGCCCUGCCCGAUCCUGUGCCGACCCACCGCACUAUGCGCGCCGUGCCGCUGCCCGCCCCGCUCCUGCCGCUGCUGCUGCUCGCGCUCCUGGCCGCUCCCGCCGCCCGCGCCAGCAGAGCCGAGUCCGUCUCCG\
) } def
/len { sequence length } bind def

/coor [
[74.98139191 123.34953308]
[70.81533813 117.87140656]
[67.82965088 111.67048645]
[66.14507294 104.99755859]
[65.82974243 98.12250519]
[66.89640808 91.32338715]
[69.30192566 84.87519073]
[57.62645340 75.45800781]
[45.95098114 66.04082489]
[34.27550507 56.62364197]
[22.60003281 47.20646286]
[9.72970390 47.80326843]
[0.20195267 39.73710632]
[-1.23668003 27.73993301]
[-12.78943253 18.17259789]
[-24.34218597 8.60526180]
[-35.89493942 -0.96207362]
[-47.44768906 -10.52940941]
[-44.63806534 4.20510817]
[-49.26242065 18.47449303]
[-60.18048477 28.76020622]
[-74.70008087 32.52600098]
[-89.24098206 28.84330559]
[-100.21769714 18.62020111]
[-104.92357635 4.37749767]
[-102.19826508 -10.37284756]
[-92.71376038 -21.99369812]
[-78.80875397 -27.61959076]
[-63.91306305 -25.86373138]
[-74.27700043 -36.70756912]
[-84.64093781 -47.55140686]
[-95.00487518 -58.39524460]
[-105.50813293 -69.10418701]
[-116.14896393 -79.67645264]
[-126.78979492 -90.24871826]
[-137.43061829 -100.82098389]
[-148.07144165 -111.39324951]
[-158.71228027 -121.96551514]
[-175.38229370 -119.04119873]
[-190.35829163 -126.56169891]
[-197.81881714 -141.38166809]
[-194.99662781 -157.56295776]
[-205.77325439 -167.99678040]
[-225.28788757 -163.53266907]
[-243.39018250 -171.73478699]
[-252.76292419 -189.09510803]
[-249.73439026 -208.44348145]
[-261.03594971 -218.30630493]
[-276.52093506 -221.55064392]
[-281.02267456 -235.74865723]
[-292.32418823 -245.61148071]
[-303.62573242 -255.47430420]
[-314.92727661 -265.33712769]
[-326.22882080 -275.19995117]
[-337.53036499 -285.06277466]
[-348.83190918 -294.92559814]
[-360.13342285 -304.78842163]
[-371.43496704 -314.65121460]
[-375.67456055 -315.33190918]
[-379.13754272 -317.13494873]
[-381.56808472 -319.68218994]
[-382.85812378 -322.55142212]
[-383.04873657 -325.32785034]
[-393.82534790 -335.76168823]
[-402.14843750 -339.47167969]
[-404.67276001 -346.40072632]
[-415.31356812 -356.97299194]
[-425.95440674 -367.54525757]
[-436.59524536 -378.11752319]
[-447.23605347 -388.68978882]
[-449.67669678 -373.88967896]
[-462.70428467 -366.45443726]
[-476.68853760 -371.88037109]
[-481.29205322 -386.15646362]
[-473.11184692 -398.72964478]
[-458.19497681 -400.30554199]
[-468.13064575 -411.54309082]
[-478.06631470 -422.78063965]
[-488.00198364 -434.01818848]
[-494.10729980 -436.46386719]
[-497.55776978 -440.94561768]
[-498.04464722 -445.67709351]
[-507.68646240 -457.16778564]
[-517.32830811 -468.65844727]
[-526.97009277 -480.14910889]
[-536.61193848 -491.63977051]
[-546.25372314 -503.13043213]
[-551.11865234 -504.90158081]
[-554.49249268 -508.03970337]
[-556.10485840 -511.75357056]
[-556.03613281 -515.25872803]
[-565.22515869 -527.11462402]
[-574.41412354 -538.97052002]
[-590.08508301 -542.40576172]
[-597.04040527 -556.86267090]
[-589.94458008 -571.25115967]
[-574.24096680 -574.53363037]
[-561.97595215 -564.19201660]
[-562.55822754 -548.15948486]
[-553.36926270 -536.30358887]
[-544.18023682 -524.44775391]
[-534.76306152 -512.77227783]
[-525.12121582 -501.28158569]
[-515.47943115 -489.79092407]
[-505.83761597 -478.30026245]
[-496.19580078 -466.80960083]
[-486.55398560 -455.31890869]
[-476.76443481 -443.95385742]
[-466.82876587 -432.71630859]
[-456.89309692 -421.47875977]
[-446.95742798 -410.24121094]
[-436.66378784 -399.33062744]
[-426.02297974 -388.75836182]
[-415.38214111 -378.18609619]
[-404.74130249 -367.61383057]
[-394.10049438 -357.04156494]
[-383.39154053 -346.53829956]
[-372.61492920 -336.10449219]
[-361.57214355 -325.95275879]
[-350.27059937 -316.08993530]
[-338.96908569 -306.22711182]
[-327.66754150 -296.36431885]
[-316.36599731 -286.50149536]
[-305.06445312 -276.63867188]
[-293.76290894 -266.77584839]
[-282.46139526 -256.91302490]
[-271.15985107 -247.05020142]
[-256.48321533 -244.51130676]
[-251.17311096 -229.60783386]
[-239.87158203 -219.74502563]
[-230.58842468 -224.19493103]
[-220.31687927 -225.31800842]
[-210.21713257 -222.96194458]
[-201.43840027 -217.36885071]
[-194.98820496 -209.15058899]
[-191.61671448 -199.22201538]
[-191.72961426 -188.69906616]
[-195.33943176 -178.77339172]
[-184.56282043 -168.33958435]
[-171.69427490 -171.85049438]
[-158.66545105 -168.52284241]
[-148.90072632 -159.12100220]
[-145.02081299 -146.02003479]
[-148.14001465 -132.60633850]
[-137.49917603 -122.03408051]
[-126.85835266 -111.46181488]
[-116.21752930 -100.88954926]
[-105.57669830 -90.31728363]
[-94.93587494 -79.74501801]
[-90.26196289 -78.86272430]
[-86.08561707 -75.04824066]
[-84.16104126 -68.75917816]
[-73.79710388 -57.91534424]
[-63.43316269 -47.07150650]
[-53.06922531 -36.22766876]
[-42.59849930 -33.32645416]
[-37.88035583 -22.08216095]
[-26.32760239 -12.51482582]
[-14.77484989 -2.94749069]
[-3.22209716 6.61984491]
[8.33065510 16.18717957]
[25.77329445 18.19724464]
[32.01721573 35.53098679]
[43.69268799 44.94816971]
[55.36816025 54.36535263]
[67.04363251 63.78253174]
[78.71910858 73.19971466]
[107.24488831 66.55387878]
[130.46357727 84.40827179]
[144.98942566 80.66665649]
[156.31201172 68.80364227]
[172.18089294 72.94017792]
[176.27151489 88.82095337]
[164.37579346 100.10917664]
[148.73104858 95.19250488]
[134.20520020 98.93412781]
[133.87632751 104.85036469]
[132.53186035 110.62119293]
[145.42419434 118.28850555]
[158.31652832 125.95581818]
[167.27085876 127.64638519]
[171.32505798 133.80650330]
[184.11720276 141.63984680]
[196.90933228 149.47319031]
[209.70147705 157.30653381]
[222.49360657 165.13987732]
[235.28573608 172.97323608]
[240.46131897 173.10749817]
[244.65715027 175.01156616]
[247.36558533 178.02104187]
[248.41369629 181.36651611]
[260.89248657 189.68998718]
[273.37124634 198.01345825]
[285.85000610 206.33694458]
[294.73211670 203.28756714]
[303.88723755 204.63403320]
[311.29208374 209.95143127]
[315.36865234 217.95159912]
[315.31997681 226.79306030]
[327.46661377 235.59414673]
[339.61325073 244.39521790]
[355.32809448 246.22683716]
[361.09454346 259.95989990]
[373.24121094 268.76098633]
[389.59970093 269.91497803]
[396.53530884 284.77526855]
[386.91329956 298.05493164]
[370.63195801 296.09292603]
[364.44012451 280.90762329]
[352.29345703 272.10653687]
[337.44744873 270.90444946]
[330.81216431 256.54187012]
[318.66552734 247.74078369]
[306.51889038 238.93969727]
[285.87219238 238.56782532]
[277.52655029 218.81570435]
[265.04776001 210.49223328]
[252.56900024 202.16876221]
[240.09022522 193.84529114]
[227.45239258 185.76536560]
[214.66026306 177.93202209]
[201.86811829 170.09867859]
[189.07598877 162.26533508]
[176.28385925 154.43199158]
[163.49171448 146.59864807]
[150.64921570 138.84814453]
[137.75688171 131.18083191]
[124.86454773 123.51352692]
[119.89970398 127.84121704]
[114.19778442 131.13766479]
[117.27851105 145.81790161]
[120.35923767 160.49812317]
[132.95114136 170.43913269]
[132.88578796 186.48205566]
[120.21331787 196.32012939]
[104.65495300 192.40644836]
[98.14575195 177.74324036]
[105.67900848 163.57885742]
[102.59828186 148.89862061]
[99.51755524 134.21839905]
[92.68058777 133.42990112]
[86.13965607 131.28933716]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 167]
[8 166]
[9 165]
[10 164]
[11 163]
[14 161]
[15 160]
[16 159]
[17 158]
[18 157]
[29 155]
[30 154]
[31 153]
[32 152]
[33 149]
[34 148]
[35 147]
[36 146]
[37 145]
[38 144]
[42 139]
[43 138]
[47 130]
[48 129]
[50 127]
[51 126]
[52 125]
[53 124]
[54 123]
[55 122]
[56 121]
[57 120]
[58 119]
[63 118]
[64 117]
[66 116]
[67 115]
[68 114]
[69 113]
[70 112]
[76 111]
[77 110]
[78 109]
[79 108]
[82 107]
[83 106]
[84 105]
[85 104]
[86 103]
[87 102]
[91 101]
[92 100]
[93 99]
[169 176]
[170 175]
[178 228]
[179 227]
[180 226]
[182 225]
[183 224]
[184 223]
[185 222]
[186 221]
[187 220]
[191 219]
[192 218]
[193 217]
[194 216]
[199 214]
[200 213]
[201 212]
[203 210]
[204 209]
[230 240]
[231 239]
[232 238]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
