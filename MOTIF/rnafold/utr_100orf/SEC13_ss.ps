%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:21:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGUGCGAGCCGAGCGCGUUGCUGCCCGGAGGCUCCUACGCCACGGCCCGUCGGGCCCGGCGCCGGAAGUGAGCUGUUCCGAGGCGCCGCCGGGAGCUGCCACGUCCGAGACCUGGAGCAGCCACCGCCGCAAUCAUGACUUCGGGGACCUGGUUUUUAGAGAGUCUAGAAUCUGAUGAGAGAACCUGUGCUUACUUGGUGUGUACCUCUUGAACUGCUUUGCAGCCAUCCUCUUCCACUGUCUGCCUUUCUGA\
AAUCACAAGUCAAACUUUAUA\
) } def
/len { sequence length } bind def

/coor [
[95.45699310 121.03155518]
[91.42428589 135.47929382]
[87.55569458 149.97184753]
[83.85171509 164.50733948]
[80.14774323 179.04283142]
[76.44376373 193.57832336]
[72.73978424 208.11381531]
[82.01215363 220.70576477]
[80.96966553 236.30856323]
[70.10454559 247.55503845]
[54.54697800 249.13496399]
[41.64276886 240.30232239]
[37.48488998 225.22764587]
[44.03656387 211.02871704]
[58.20429230 204.40983582]
[61.90827179 189.87434387]
[65.61225128 175.33885193]
[69.31622314 160.80335999]
[73.02020264 146.26786804]
[71.41609955 141.80671692]
[72.57031250 136.29176331]
[76.97653961 131.44659424]
[81.00924683 116.99884796]
[84.04252625 111.57839966]
[87.93619537 106.99189758]
[92.54814148 103.35327148]
[78.68182373 97.63266754]
[64.81550598 91.91207123]
[50.94919205 86.19147491]
[37.08287430 80.47087097]
[23.21655846 74.75027466]
[9.35024166 69.02967834]
[-36.88311386 79.12735748]
[-51.68073654 76.67168427]
[-66.47836304 74.21601868]
[-81.27598572 71.76034546]
[-96.07360840 69.30467224]
[-111.52745056 85.61833191]
[-133.66468811 88.06491852]
[-151.97743225 75.74204254]
[-165.77796936 81.61953735]
[-179.57852173 87.49702454]
[-193.37907410 93.37451935]
[-198.89605713 105.00517273]
[-210.48066711 109.62691498]
[-221.74137878 105.27542114]
[-235.60769653 110.99602509]
[-249.47401428 116.71662140]
[-263.34033203 122.43721771]
[-277.20666504 128.15782166]
[-289.54275513 139.78781128]
[-304.13323975 131.15328979]
[-299.87518311 114.74275970]
[-282.92724609 114.29150391]
[-269.06094360 108.57089996]
[-255.19461060 102.85030365]
[-241.32829285 97.12970734]
[-227.46197510 91.40910339]
[-217.49969482 76.94202423]
[-199.25656128 79.57397461]
[-185.45600891 73.69647980]
[-171.65547180 67.81898499]
[-157.85491943 61.94149399]
[-158.29176331 56.67717743]
[-157.85491943 51.41286087]
[-171.65547180 45.53536606]
[-185.45600891 39.65787506]
[-199.25656128 33.78038025]
[-214.98495483 35.49161911]
[-223.66278076 23.38605881]
[-237.46331787 17.50856590]
[-251.26387024 11.63107300]
[-260.34613037 11.15382671]
[-265.18701172 5.60787058]
[-278.92001343 -0.42575940]
[-294.66677856 1.10698843]
[-303.20675659 -11.09621143]
[-316.93975830 -17.12984085]
[-330.67276001 -23.16347122]
[-344.40576172 -29.19710159]
[-358.13876343 -35.23073196]
[-370.39288330 -31.28792953]
[-381.69338989 -36.56639099]
[-386.23233032 -47.75286865]
[-399.89602661 -53.94185638]
[-413.55972290 -60.13084793]
[-430.48248291 -61.15837860]
[-434.17980957 -77.70426178]
[-419.30407715 -85.83744049]
[-407.37072754 -73.79454041]
[-393.70703125 -67.60554504]
[-380.04333496 -61.41655731]
[-362.67822266 -64.06169891]
[-352.10513306 -48.96373367]
[-338.37213135 -42.93010330]
[-324.63912964 -36.89647293]
[-310.90612793 -30.86284256]
[-297.17312622 -24.82921219]
[-282.40863037 -26.79352570]
[-272.88638306 -14.15876007]
[-259.15338135 -8.12513065]
[-245.38638306 -2.16947317]
[-231.58583069 3.70801950]
[-217.78527832 9.58551216]
[-203.04400635 7.45387697]
[-193.37907410 19.97983551]
[-179.57852173 25.85732841]
[-165.77796936 31.73482132]
[-151.97743225 37.61231232]
[-144.00932312 29.91390228]
[-133.85430908 25.37674904]
[-122.71790314 24.57156563]
[-111.93314362 27.62410545]
[-102.80097961 34.19660187]
[-96.43338013 43.52486038]
[-93.61794281 54.50704956]
[-78.82031250 56.96272278]
[-64.02268982 59.41839218]
[-49.22506714 61.87406158]
[-34.42744446 64.32973480]
[-24.34377289 53.22389603]
[-14.26098633 42.11906052]
[-18.12957573 27.62650871]
[-32.37145996 21.16873932]
[-39.08374405 7.04502726]
[-35.09709930 -8.07584095]
[-22.29389191 -17.05425453]
[-6.71940851 -15.65088177]
[4.27255774 -4.52835131]
[5.49193621 11.06161785]
[-3.63702655 23.75791931]
[0.23156369 38.25046921]
[0.75254148 23.25951767]
[9.60672665 11.15152931]
[23.73435593 6.11068726]
[38.25331116 9.87896919]
[48.14624023 21.15416145]
[49.99441910 36.03986740]
[43.15917206 49.39199829]
[30.00256729 56.59642410]
[15.07084084 55.16335678]
[28.93715858 60.88395691]
[42.80347443 66.60455322]
[56.66979218 72.32515717]
[70.53610992 78.04575348]
[84.40242767 83.76635742]
[98.26874542 89.48695374]
[113.00686646 92.27761841]
[128.00469971 92.02244568]
[143.00251770 91.76727295]
[156.66906738 83.79633331]
[169.52612305 91.31600189]
[184.52395630 91.06083679]
[196.46965027 78.25589752]
[213.64224243 78.07540894]
[225.38235474 90.14167786]
[240.37632751 89.71643066]
[255.37028503 89.29117584]
[270.36425781 88.86592865]
[285.35824585 88.44068146]
[300.35220337 88.01543427]
[315.34616089 87.59017944]
[330.34014893 87.16493225]
[345.33410645 86.73968506]
[360.32809448 86.31443787]
[369.71524048 77.50588226]
[382.18759155 77.43933105]
[391.07791138 85.60641479]
[406.07574463 85.35124969]
[421.07354736 85.09607697]
[436.07138062 84.84090424]
[445.02008057 72.30187988]
[459.46740723 67.49266815]
[473.80670166 72.05870819]
[482.60244751 84.04923248]
[497.60028076 83.79405975]
[507.08673096 75.09252930]
[519.55902100 75.16743469]
[528.35614014 83.43482971]
[543.35589600 83.34976959]
[558.35565186 83.26470184]
[573.35540771 83.17964172]
[588.35516357 83.09458160]
[592.76916504 68.01458740]
[603.01287842 55.32640457]
[617.86676025 47.26204681]
[635.26995850 45.45611191]
[652.60412598 50.63611603]
[667.08740234 62.44404984]
[681.72210693 59.15364075]
[696.35675049 55.86323166]
[710.99139404 52.57282257]
[722.75817871 41.99676132]
[736.87274170 46.75374603]
[751.50738525 43.46333694]
[766.14202881 40.17292786]
[780.26910400 30.79937363]
[793.18707275 41.77944946]
[786.21215820 57.23218155]
[769.43243408 54.80758667]
[754.79779053 58.09799576]
[740.16314697 61.38840485]
[729.44311523 71.72911835]
[714.28179932 67.20748138]
[699.64715576 70.49788666]
[685.01251221 73.78829956]
[670.37780762 77.07870483]
[670.08020020 84.57279968]
[685.06835938 85.16806793]
[700.05657959 85.76334381]
[715.04473877 86.35884857]
[714.44897461 101.34701538]
[699.46130371 100.75152588]
[684.47308350 100.15625763]
[669.48492432 99.56098175]
[669.18731689 107.05507660]
[683.51489258 111.49575043]
[697.84252930 115.93642426]
[712.17010498 120.37710571]
[729.08923340 119.29089355]
[734.81665039 135.24810791]
[721.06860352 145.16911316]
[707.72943115 134.70471191]
[693.40185547 130.26403809]
[679.07421875 125.82336426]
[664.74664307 121.38268280]
[649.99945068 131.66433716]
[633.05346680 135.63662720]
[616.40551758 133.14559937]
[602.35473633 124.95984650]
[592.68487549 112.60435486]
[588.44024658 98.09434509]
[573.44049072 98.17940521]
[558.44073486 98.26446533]
[543.44097900 98.34952545]
[528.44122314 98.43458557]
[513.76904297 108.09226990]
[497.85543823 98.79188538]
[482.85760498 99.04705811]
[474.47485352 111.32985687]
[460.29916382 116.38105011]
[445.69662476 112.06607819]
[436.32656860 99.83872986]
[421.32873535 100.09390259]
[406.33090210 100.34907532]
[391.33306885 100.60424805]
[376.77136230 110.42771149]
[360.75332642 101.30841064]
[345.75936890 101.73365784]
[330.76538086 102.15890503]
[315.77142334 102.58415222]
[300.77746582 103.00939941]
[285.78347778 103.43465424]
[270.78952026 103.85990143]
[255.79553223 104.28514862]
[240.80157471 104.71039581]
[225.80760193 105.13565063]
[218.37313843 115.63224792]
[206.07072449 120.00696564]
[193.30371094 116.45678711]
[184.77912903 106.05866241]
[169.78129578 106.31383514]
[157.18748474 114.26652527]
[143.25769043 106.76510620]
[128.25985718 107.02027893]
[113.26203156 107.27544403]
[126.54620361 114.24185181]
[141.19950867 117.44816589]
[152.48153687 127.33331299]
[157.58566284 141.43820190]
[155.24218750 156.25399780]
[146.03405762 168.09504700]
[132.25196838 174.01568604]
[117.32442474 172.54304504]
[104.96491241 164.04348755]
[98.24806213 150.63140869]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 23]
[2 22]
[3 19]
[4 18]
[5 17]
[6 16]
[7 15]
[26 147]
[27 146]
[28 145]
[29 144]
[30 143]
[31 142]
[32 141]
[33 120]
[34 119]
[35 118]
[36 117]
[37 116]
[40 63]
[41 62]
[42 61]
[43 60]
[46 58]
[47 57]
[48 56]
[49 55]
[50 54]
[65 109]
[66 108]
[67 107]
[68 106]
[70 104]
[71 103]
[72 102]
[74 101]
[75 100]
[77 98]
[78 97]
[79 96]
[80 95]
[81 94]
[84 92]
[85 91]
[86 90]
[122 132]
[123 131]
[148 266]
[149 265]
[150 264]
[152 262]
[153 261]
[156 257]
[157 256]
[158 255]
[159 254]
[160 253]
[161 252]
[162 251]
[163 250]
[164 249]
[165 248]
[168 246]
[169 245]
[170 244]
[171 243]
[175 239]
[176 238]
[179 236]
[180 235]
[181 234]
[182 233]
[183 232]
[189 207]
[190 206]
[191 205]
[192 204]
[194 202]
[195 201]
[196 200]
[216 226]
[217 225]
[218 224]
[219 223]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
