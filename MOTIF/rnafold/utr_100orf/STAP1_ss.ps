%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:09:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUUAAAAAGCAAUUUGGGACUUCCUCUUUGAACAGUUGCCUUUUCCUCUCACAGAAGGAAGAUUUCAUUUUGUUUGAGACGAGAAACCAAACCACACACCAAAGAGAGGGGUAUGAUGGCUAAGAAGCCCCCAAAACCAGCCCCUCGCAGGAUCUUCCAGGAAAGGUUAAAGAUUACUGCUCUACCUUUGUACUUUGAAGGUUUUUUAUUAA\
) } def
/len { sequence length } bind def

/coor [
[-201.91404724 259.48950195]
[-195.52426147 245.91853333]
[-209.60282898 251.09478760]
[-223.68141174 256.27105713]
[-227.88822937 269.06481934]
[-238.53948975 276.98474121]
[-251.61369324 277.31973267]
[-262.33273315 270.17144775]
[-276.48577881 275.14047241]
[-290.63882446 280.10949707]
[-304.79187012 285.07855225]
[-318.94491577 290.04757690]
[-333.09796143 295.01660156]
[-339.99343872 308.98406982]
[-354.41744995 313.82174683]
[-367.69079590 307.16186523]
[-381.84384155 312.13092041]
[-395.99688721 317.09994507]
[-410.14993286 322.06896973]
[-424.30297852 327.03799438]
[-438.41915894 332.11077881]
[-452.49774170 337.28704834]
[-466.57632446 342.46328735]
[-480.65490723 347.63955688]
[-494.73348999 352.81579590]
[-508.81204224 357.99206543]
[-522.85223389 363.27151489]
[-536.85333252 368.65390015]
[-546.95812988 380.82775879]
[-561.61419678 378.17260742]
[-575.61523438 383.55496216]
[-589.61633301 388.93734741]
[-589.04541016 404.06851196]
[-593.42083740 418.56451416]
[-602.26812744 430.85290527]
[-614.62750244 439.60076904]
[-629.15832520 443.85913086]
[-644.28442383 443.16613770]
[-658.36499023 437.59695435]
[-669.87268066 427.75564575]
[-677.55932617 414.70977783]
[-680.59094238 399.87442017]
[-678.63885498 384.85882568]
[-671.91473389 371.29177856]
[-661.14801025 360.64489746]
[-647.50653076 354.07312012]
[-632.46997070 352.28927612]
[-617.66949463 355.48687744]
[-604.71051025 363.31906128]
[-594.99871826 374.93627930]
[-580.99761963 369.55389404]
[-566.99658203 364.17153931]
[-557.89318848 352.38262939]
[-542.23571777 354.65283203]
[-528.23461914 349.27044678]
[-523.12036133 343.93746948]
[-513.98834229 343.91348267]
[-499.90972900 338.73724365]
[-485.83114624 333.56097412]
[-471.75259399 328.38470459]
[-457.67401123 323.20846558]
[-443.59542847 318.03219604]
[-438.40344238 312.77484131]
[-429.27200317 312.88494873]
[-415.11895752 307.91592407]
[-400.96591187 302.94689941]
[-386.81286621 297.97787476]
[-372.65982056 293.00881958]
[-366.46295166 279.51312256]
[-352.18054199 274.27218628]
[-338.06698608 280.86355591]
[-323.91394043 275.89453125]
[-309.76089478 270.92547607]
[-295.60784912 265.95645142]
[-281.45480347 260.98742676]
[-267.30175781 256.01840210]
[-260.67407227 240.56050110]
[-244.60028076 234.56176758]
[-228.85766602 242.19245911]
[-214.77909851 237.01620483]
[-200.70051575 231.83995056]
[-186.90635681 225.94746399]
[-173.43304443 219.35430908]
[-159.95973206 212.76115417]
[-146.48640442 206.16799927]
[-133.01309204 199.57484436]
[-119.53977203 192.98168945]
[-106.06645203 186.38853455]
[-92.59313202 179.79537964]
[-91.32056427 168.46022034]
[-84.66616058 159.04888916]
[-74.18809509 153.96545410]
[-62.43802643 154.57637024]
[-52.33995819 160.84541321]
[-38.67889404 154.65063477]
[-38.43897629 139.73728943]
[-31.72014999 126.35196686]
[-19.80718231 117.17360687]
[-5.03025866 114.06512451]
[9.69073200 117.69547272]
[21.42314529 127.39659882]
[35.08420944 121.20181274]
[48.74527359 115.00702667]
[62.40633392 108.81224060]
[76.06739807 102.61746216]
[83.83574677 77.40921783]
[113.34040833 71.48529816]
[121.65106201 58.99797821]
[129.96171570 46.51066589]
[138.27236938 34.02334976]
[146.58302307 21.53603363]
[154.89367676 9.04871750]
[163.20433044 -3.43859792]
[162.74708557 -26.62993240]
[183.19383240 -35.90288925]
[190.56634521 -48.96604919]
[186.55046082 -64.01631165]
[194.21331787 -77.15918732]
[208.58619690 -80.89496613]
[215.95870972 -93.95812988]
[223.33120728 -107.02128601]
[230.70372009 -120.08444977]
[230.00225830 -136.46858215]
[243.98390198 -145.03862000]
[258.26556396 -136.97842407]
[258.15545654 -120.57965088]
[243.76687622 -112.71193695]
[236.39437866 -99.64878082]
[229.02186584 -86.58562469]
[221.64935303 -73.52246094]
[225.87994385 -59.28737259]
[218.58926392 -45.93444824]
[203.62950134 -41.59354019]
[196.25700378 -28.53038025]
[199.80967712 -22.38604355]
[201.02522278 -15.32434464]
[199.70664978 -8.21193027]
[195.97091675 -1.93828535]
[190.24020386 2.69548965]
[183.19464111 5.07887220]
[175.69163513 4.87205458]
[167.38099670 17.35937119]
[159.07034302 29.84668541]
[150.75968933 42.33400345]
[142.44903564 54.82131577]
[134.13838196 67.30863190]
[125.82772827 79.79595184]
[132.12261963 93.41117096]
[147.01928711 95.16876984]
[161.91596985 96.92636108]
[176.81263733 98.68395233]
[191.72180176 100.33216095]
[206.64266968 101.87088013]
[221.56355286 103.40960693]
[236.48442078 104.94833374]
[251.40528870 106.48705292]
[266.32614136 108.02577972]
[281.27728271 109.23558807]
[296.25143433 110.11590576]
[307.89532471 99.42970276]
[323.68130493 100.19036102]
[334.24380493 111.94660187]
[333.31628418 127.72364807]
[321.44903564 138.16127014]
[305.68267822 137.06700134]
[295.37112427 125.09004974]
[280.39697266 124.20973969]
[277.53421021 126.26443481]
[273.53469849 127.03585052]
[269.01181030 126.00511932]
[264.78741455 122.94664764]
[249.86656189 121.40792084]
[234.94569397 119.86920166]
[220.02482605 118.33047485]
[205.10395813 116.79174805]
[190.18309021 115.25302887]
[183.20869446 117.69317627]
[175.05503845 113.58062744]
[160.15837097 111.82303619]
[145.26168823 110.06543732]
[130.36502075 108.30784607]
[124.57496643 117.63339233]
[116.21520233 124.05804443]
[106.54169464 126.99690247]
[96.88553619 126.36053467]
[88.47139740 122.53146362]
[82.26218414 116.27852631]
[68.60112000 122.47330475]
[54.94005585 128.66809082]
[41.27899170 134.86286926]
[27.61792946 141.05766296]
[27.18521309 156.27522278]
[20.21666336 169.74096680]
[8.14202023 178.80867004]
[-6.61161900 181.72262573]
[-21.10757256 177.95741272]
[-32.48411179 168.31169128]
[-46.14517212 174.50648499]
[-52.13371277 192.48197937]
[-69.07006073 200.23675537]
[-85.99997711 193.26870728]
[-99.47329712 199.86186218]
[-112.94661713 206.45501709]
[-126.41993713 213.04817200]
[-139.89324951 219.64132690]
[-153.36657715 226.23448181]
[-166.83988953 232.82763672]
[-180.31321716 239.42079163]
[-166.09045410 244.18663025]
[-158.15322876 256.91455078]
[-160.13159180 271.78353882]
[-171.12075806 281.99325562]
[-186.09484863 282.87435913]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 81]
[3 80]
[4 79]
[8 76]
[9 75]
[10 74]
[11 73]
[12 72]
[13 71]
[16 68]
[17 67]
[18 66]
[19 65]
[20 64]
[21 62]
[22 61]
[23 60]
[24 59]
[25 58]
[26 57]
[27 55]
[28 54]
[30 52]
[31 51]
[32 50]
[82 208]
[83 207]
[84 206]
[85 205]
[86 204]
[87 203]
[88 202]
[89 201]
[94 198]
[95 197]
[101 191]
[102 190]
[103 189]
[104 188]
[105 187]
[107 147]
[108 146]
[109 145]
[110 144]
[111 143]
[112 142]
[113 141]
[115 134]
[116 133]
[119 130]
[120 129]
[121 128]
[122 127]
[148 181]
[149 180]
[150 179]
[151 178]
[152 176]
[153 175]
[154 174]
[155 173]
[156 172]
[157 171]
[158 167]
[159 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
