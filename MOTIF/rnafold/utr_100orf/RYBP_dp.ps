%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:10:45 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RYBP)
} def

/sequence { (\
AGGCCAAAAAGACAAGCGAAACCUGCCGCAGACGAAGGGUUUUGGGAUUGUAGCGUCUGCACCUUCAGAAACAGUGCUGAAGCCUUUAAAUGCAGCAUCU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 24 0.233147227 ubox
1 58 0.003526873 ubox
1 85 0.017867095 ubox
1 100 0.040735147 ubox
2 23 0.298390423 ubox
2 24 0.009205575 ubox
2 27 0.140814528 ubox
2 57 0.004201517 ubox
2 84 0.020557632 ubox
2 99 0.047697959 ubox
2 100 0.010015309 ubox
3 17 0.484250468 ubox
3 22 0.297026533 ubox
3 23 0.012423118 ubox
3 26 0.140980576 ubox
3 54 0.009904440 ubox
3 56 0.004507947 ubox
3 60 0.003610547 ubox
3 83 0.020562313 ubox
3 93 0.012645895 ubox
3 96 0.033428328 ubox
3 98 0.034291829 ubox
3 99 0.010528977 ubox
4 16 0.484125134 ubox
4 25 0.137820133 ubox
4 46 0.003475200 ubox
4 53 0.009877417 ubox
4 55 0.004526791 ubox
4 59 0.003603189 ubox
4 82 0.019917996 ubox
4 92 0.012423701 ubox
4 95 0.033393373 ubox
5 25 0.028225106 ubox
5 45 0.003504379 ubox
5 92 0.006003946 ubox
6 24 0.037089697 ubox
6 91 0.006152734 ubox
8 87 0.010321730 ubox
9 49 0.004162894 ubox
9 86 0.010940389 ubox
10 24 0.067904557 ubox
10 48 0.004211630 ubox
10 85 0.011053329 ubox
10 100 0.133441180 ubox
11 23 0.073109844 ubox
11 84 0.011040731 ubox
11 99 0.148108419 ubox
12 48 0.003206189 ubox
12 51 0.035036433 ubox
12 98 0.147240012 ubox
13 25 0.006391226 ubox
13 50 0.036177348 ubox
14 24 0.007460271 ubox
14 49 0.035939735 ubox
15 24 0.073719640 ubox
15 48 0.031997857 ubox
15 100 0.020513346 ubox
16 23 0.082316032 ubox
16 26 0.066268108 ubox
16 29 0.021843429 ubox
16 96 0.009033396 ubox
16 99 0.021946572 ubox
17 25 0.066451503 ubox
17 28 0.021892912 ubox
17 44 0.062360392 ubox
17 95 0.008933181 ubox
18 24 0.058353141 ubox
18 27 0.022894570 ubox
18 43 0.063214951 ubox
18 99 0.322320829 ubox
19 42 0.063338155 ubox
19 98 0.321288970 ubox
20 41 0.063351515 ubox
21 40 0.063434209 ubox
22 39 0.063466614 ubox
23 31 0.003385593 ubox
23 38 0.063457758 ubox
23 95 0.022593936 ubox
24 30 0.003394282 ubox
24 37 0.063352342 ubox
24 94 0.022860042 ubox
24 97 0.871118998 ubox
25 29 0.003343951 ubox
25 93 0.021846592 ubox
25 96 0.983933425 ubox
26 92 0.021294682 ubox
26 95 0.983779667 ubox
27 34 0.063889922 ubox
28 33 0.062339603 ubox
28 60 0.013691972 ubox
28 91 0.003762117 ubox
28 93 0.996454660 ubox
28 96 0.008912240 ubox
29 59 0.013707121 ubox
29 92 0.997328229 ubox
29 95 0.008877462 ubox
30 58 0.013708583 ubox
30 91 0.991130205 ubox
31 57 0.013712525 ubox
31 87 0.005262296 ubox
32 56 0.013710998 ubox
32 86 0.004619225 ubox
33 55 0.013712005 ubox
33 92 0.004069175 ubox
34 54 0.013683131 ubox
34 86 0.009232411 ubox
34 87 0.155171589 ubox
34 91 0.004233948 ubox
35 85 0.005752575 ubox
35 86 0.149278779 ubox
35 87 0.960848641 ubox
36 85 0.137820559 ubox
36 86 0.979023297 ubox
36 87 0.008346010 ubox
37 84 0.116051428 ubox
37 85 0.986867112 ubox
37 86 0.006714649 ubox
38 49 0.013011761 ubox
38 83 0.088860836 ubox
38 84 0.991098211 ubox
39 48 0.013362563 ubox
39 83 0.993913336 ubox
40 47 0.013329475 ubox
40 81 0.037882858 ubox
40 82 0.996190863 ubox
41 46 0.012331532 ubox
41 80 0.032775758 ubox
41 81 0.994972166 ubox
41 82 0.004836622 ubox
42 79 0.025163624 ubox
42 80 0.996021104 ubox
42 81 0.006623139 ubox
43 79 0.992140251 ubox
43 80 0.007899064 ubox
44 64 0.005040075 ubox
44 78 0.993534345 ubox
45 58 0.004185498 ubox
45 63 0.015927646 ubox
45 77 0.997570544 ubox
45 78 0.010492320 ubox
45 99 0.003298921 ubox
45 100 0.040874128 ubox
46 57 0.004475753 ubox
46 62 0.015946686 ubox
46 77 0.011735328 ubox
46 99 0.044789620 ubox
47 56 0.004476100 ubox
47 75 0.996259877 ubox
47 98 0.044317342 ubox
48 55 0.004258472 ubox
48 74 0.996781624 ubox
48 97 0.031582055 ubox
49 61 0.023021900 ubox
49 73 0.996633615 ubox
49 94 0.004626784 ubox
49 97 0.032870490 ubox
50 60 0.025231783 ubox
50 62 0.005985123 ubox
50 72 0.996823092 ubox
50 93 0.004789827 ubox
50 96 0.045394361 ubox
51 59 0.025564400 ubox
51 61 0.007404346 ubox
51 71 0.888325383 ubox
51 79 0.003907677 ubox
51 92 0.004779695 ubox
51 95 0.043197547 ubox
52 58 0.026551145 ubox
52 64 0.051858617 ubox
52 65 0.013990501 ubox
52 78 0.005745756 ubox
52 91 0.004639150 ubox
52 100 0.010659244 ubox
53 57 0.025995858 ubox
53 60 0.053943011 ubox
53 63 0.052021466 ubox
53 64 0.012192338 ubox
53 77 0.005891178 ubox
53 83 0.006466402 ubox
53 93 0.047539188 ubox
53 96 0.005273224 ubox
53 99 0.011993319 ubox
54 59 0.054011826 ubox
54 76 0.005897411 ubox
54 82 0.006500793 ubox
54 92 0.047785665 ubox
54 95 0.004722008 ubox
55 62 0.052931877 ubox
55 72 0.004657800 ubox
55 75 0.005708625 ubox
55 91 0.047477928 ubox
55 96 0.024220240 ubox
55 98 0.012332437 ubox
56 61 0.048389118 ubox
56 69 0.971135924 ubox
56 71 0.003896460 ubox
56 80 0.006642549 ubox
56 90 0.046227773 ubox
56 95 0.003499984 ubox
56 97 0.012788317 ubox
57 68 0.992531604 ubox
57 74 0.005058007 ubox
57 79 0.007025803 ubox
57 95 0.032158780 ubox
58 67 0.992247632 ubox
58 73 0.005060648 ubox
58 88 0.030628436 ubox
58 94 0.032888770 ubox
59 66 0.982547608 ubox
59 72 0.005046644 ubox
59 77 0.007989252 ubox
59 87 0.030349672 ubox
59 93 0.033048896 ubox
60 76 0.008013612 ubox
60 92 0.033046012 ubox
61 75 0.008007470 ubox
61 91 0.031878766 ubox
62 74 0.007705713 ubox
63 82 0.060267216 ubox
64 70 0.006955036 ubox
64 81 0.062967914 ubox
65 69 0.006372262 ubox
65 70 0.004847685 ubox
65 80 0.063741607 ubox
66 79 0.063878810 ubox
67 78 0.063860039 ubox
68 77 0.063819038 ubox
74 98 0.008318539 ubox
74 99 0.003189848 ubox
75 97 0.009325609 ubox
76 96 0.009491006 ubox
77 95 0.009491313 ubox
78 94 0.009478290 ubox
79 93 0.009130501 ubox
82 93 0.004133435 ubox
83 92 0.004368160 ubox
90 98 0.005705141 ubox
91 97 0.006121774 ubox
92 96 0.006154680 ubox
94 100 0.009629311 ubox
95 99 0.010452930 ubox
24 97 0.9500000 lbox
25 96 0.9500000 lbox
26 95 0.9500000 lbox
28 93 0.9500000 lbox
29 92 0.9500000 lbox
30 91 0.9500000 lbox
35 87 0.9500000 lbox
36 86 0.9500000 lbox
37 85 0.9500000 lbox
38 84 0.9500000 lbox
39 83 0.9500000 lbox
40 82 0.9500000 lbox
41 81 0.9500000 lbox
42 80 0.9500000 lbox
43 79 0.9500000 lbox
44 78 0.9500000 lbox
45 77 0.9500000 lbox
47 75 0.9500000 lbox
48 74 0.9500000 lbox
49 73 0.9500000 lbox
50 72 0.9500000 lbox
51 71 0.9500000 lbox
56 69 0.9500000 lbox
57 68 0.9500000 lbox
58 67 0.9500000 lbox
59 66 0.9500000 lbox
showpage
end
%%EOF
