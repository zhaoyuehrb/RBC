%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:17:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUCGCGGGGAGCGGGCAGCGGGGACGGCGGCGGCGCGGCCCGCGUGACCCAGCGCCGCGCCCCGUGGCCCCGCCGCAGGAUGCGCGCCCCGCCGCUGCUGCUGCUGCUGGCCGCCUGCGCGCCGCCGCCCUGCGCCGCGGCCGCCCCGACGCCGCCGGGCUGGGAGCCGACCCCCGACG\
) } def
/len { sequence length } bind def

/coor [
[106.37297058 264.53466797]
[91.49974060 270.54852295]
[77.59593201 262.54455566]
[75.32734680 246.66270447]
[86.43425751 235.08618164]
[87.46912384 220.12191772]
[88.37480164 205.14929199]
[89.15122223 190.16938782]
[89.92764282 175.18949890]
[90.70406342 160.20960999]
[91.48048401 145.22972107]
[68.24771118 117.64145660]
[75.18228912 90.36391449]
[63.29513550 81.21538544]
[51.40798187 72.06685638]
[39.52083206 62.91832733]
[23.86551857 60.63320541]
[18.49844551 46.73918533]
[6.61129284 37.59065628]
[-5.27585983 28.44212532]
[-17.16301346 19.29359627]
[-29.05016518 10.14506626]
[-40.93731689 0.99653578]
[-52.90298462 -8.04905987]
[-64.94627380 -16.99104691]
[-73.72655487 -19.60446548]
[-77.11848450 -26.19278145]
[-89.00563812 -35.34131241]
[-100.89279175 -44.48984146]
[-112.77994537 -53.63837051]
[-124.66709900 -62.78690338]
[-136.55424500 -71.93543243]
[-148.44140625 -81.08396149]
[-160.32855225 -90.23249054]
[-172.21571350 -99.38101959]
[-184.10285950 -108.52954865]
[-195.99002075 -117.67808533]
[-211.64532471 -119.96320343]
[-217.01240540 -133.85722351]
[-228.89955139 -143.00575256]
[-240.78669739 -152.15428162]
[-244.78329468 -140.18745422]
[-255.89045715 -130.34561157]
[-272.79330444 -125.91794586]
[-287.57040405 -128.49432373]
[-302.34747314 -131.07070923]
[-317.12457275 -133.64709473]
[-329.90750122 -124.35343170]
[-345.50473022 -126.90319824]
[-354.66275024 -139.78367615]
[-351.94821167 -155.35308838]
[-338.97164917 -164.37440491]
[-323.43179321 -161.49542236]
[-314.54818726 -148.42417908]
[-299.77108765 -145.84779358]
[-284.99401855 -143.27140808]
[-270.21691895 -140.69502258]
[-262.23608398 -153.39645386]
[-254.25596619 -166.09675598]
[-262.98873901 -178.29260254]
[-271.72152710 -190.48843384]
[-280.45431519 -202.68428040]
[-289.39630127 -214.72756958]
[-298.54483032 -226.61471558]
[-313.09320068 -232.83204651]
[-314.72396851 -247.63710022]
[-323.87249756 -259.52426147]
[-333.02102661 -271.41140747]
[-342.16955566 -283.29855347]
[-351.31808472 -295.18572998]
[-365.76998901 -304.05020142]
[-361.25262451 -320.39123535]
[-344.29965210 -320.57406616]
[-339.43093872 -304.33425903]
[-330.28240967 -292.44708252]
[-321.13388062 -280.55993652]
[-311.98535156 -268.67279053]
[-302.83679199 -256.78564453]
[-288.94277954 -251.41856384]
[-286.65765381 -235.76325989]
[-277.50912476 -223.87609863]
[-272.94848633 -222.38098145]
[-269.28939819 -217.99006653]
[-268.25845337 -211.41705322]
[-259.52566528 -199.22122192]
[-250.79289246 -187.02537537]
[-242.06011963 -174.82952881]
[-231.63816833 -164.04144287]
[-219.75102234 -154.89289856]
[-207.86386108 -145.74436951]
[-193.05880737 -144.11361694]
[-186.84147644 -129.56523132]
[-174.95433044 -120.41670227]
[-163.06718445 -111.26817322]
[-151.18002319 -102.11964417]
[-139.29287720 -92.97111511]
[-127.40572357 -83.82258606]
[-115.51856995 -74.67405701]
[-103.63141632 -65.52552032]
[-91.74426270 -56.37699509]
[-79.85710907 -47.22846222]
[-67.96995544 -38.07993317]
[-56.00428772 -29.03433800]
[-43.96099854 -20.09235191]
[-36.69742584 -18.62550735]
[-31.78878784 -10.89061642]
[-19.90163422 -1.74208677]
[-8.01448250 7.40644312]
[3.87267017 16.55497360]
[15.75982285 25.70350266]
[27.64697456 34.85203171]
[42.45203781 36.48279190]
[48.66936111 51.03117371]
[60.55651474 60.17970657]
[72.44366455 69.32823181]
[84.33081818 78.47676849]
[101.77776337 66.95756531]
[126.57907867 70.70220184]
[145.50148010 93.07727051]
[160.35868835 91.01246643]
[175.21589661 88.94766235]
[183.30979919 84.65673065]
[190.34712219 86.97773743]
[205.23776245 85.16969299]
[220.12838745 83.36164093]
[235.01902771 81.55358887]
[249.90965271 79.74553680]
[262.67657471 70.40122223]
[276.24368286 76.54801178]
[291.13430786 74.73995972]
[302.12042236 63.04871750]
[318.09841919 64.49219513]
[326.81134033 77.96307373]
[321.57537842 93.12764740]
[306.40713501 98.35295868]
[292.94238281 89.63059235]
[278.05172729 91.43864441]
[266.34988403 100.65363312]
[251.71771240 94.63616943]
[236.82707214 96.44422150]
[221.93644714 98.25227356]
[207.04580688 100.06032562]
[192.15518188 101.86837006]
[177.28070068 103.80487061]
[162.42349243 105.86967468]
[147.56628418 107.93447876]
[143.47599792 122.36602020]
[155.04029846 131.91940308]
[166.60458374 141.47277832]
[178.16888428 151.02615356]
[184.65510559 152.50811768]
[188.78311157 156.46144104]
[189.96002197 161.11434937]
[201.18768311 171.06118774]
[212.41534424 181.00802612]
[228.58256531 183.75634766]
[234.03160095 199.22373962]
[223.15695190 211.49867249]
[207.14552307 207.95375061]
[202.46850586 192.23568726]
[191.24084473 182.28884888]
[180.01318359 172.34201050]
[168.61550903 162.59045410]
[157.05120850 153.03707886]
[145.48692322 143.48370361]
[133.92262268 133.93031311]
[127.05706024 136.94927979]
[133.09497070 150.68038940]
[143.08036804 161.87377930]
[135.52032471 174.82929993]
[120.86274719 171.64257812]
[119.36384583 156.71830750]
[113.32593536 142.98718262]
[106.46038055 146.00613403]
[105.68395996 160.98602295]
[104.90753937 175.96592712]
[104.13111877 190.94581604]
[103.35469818 205.92570496]
[106.04088593 214.68399048]
[102.43338776 221.15678406]
[101.39852142 236.12104797]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 181]
[6 180]
[7 178]
[8 177]
[9 176]
[10 175]
[11 174]
[13 116]
[14 115]
[15 114]
[16 113]
[18 111]
[19 110]
[20 109]
[21 108]
[22 107]
[23 106]
[24 104]
[25 103]
[27 102]
[28 101]
[29 100]
[30 99]
[31 98]
[32 97]
[33 96]
[34 95]
[35 94]
[36 93]
[37 92]
[39 90]
[40 89]
[41 88]
[44 57]
[45 56]
[46 55]
[47 54]
[59 87]
[60 86]
[61 85]
[62 84]
[63 81]
[64 80]
[66 78]
[67 77]
[68 76]
[69 75]
[70 74]
[119 146]
[120 145]
[121 144]
[123 143]
[124 142]
[125 141]
[126 140]
[127 139]
[129 137]
[130 136]
[147 166]
[148 165]
[149 164]
[150 163]
[153 162]
[154 161]
[155 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
