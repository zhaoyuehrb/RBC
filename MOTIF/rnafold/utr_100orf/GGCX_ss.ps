%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:10:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCACAGCCGCUGACGCGUCGGGAGGCGGAGCCUAGGGAAGCAAAUUCUCCUGGCGGCCUCCGUUCAGACGCGGCAGCUGUGACCCACCUGCCUCCUCCGCAGAGCAAUGGCGGUGUCUGCCGGGUCCGCGCGGACCUCGCCCAGCUCAGAUAAAGUACAGAAAGACAAGGCUGAACUGAUCUCAGGGCCCAGGCAGGACAGCCGAA\
) } def
/len { sequence length } bind def

/coor [
[-143.51324463 219.90177917]
[-149.44097900 211.21638489]
[-163.72082520 215.80831909]
[-178.00068665 220.40025330]
[-192.28053284 224.99218750]
[-206.56037903 229.58412170]
[-220.84024048 234.17604065]
[-231.60925293 245.76651001]
[-246.09410095 242.29685974]
[-260.37396240 246.88879395]
[-263.88113403 250.76333618]
[-268.10220337 252.70851135]
[-272.18182373 252.77572632]
[-275.40933228 251.34867859]
[-289.88339233 255.28591919]
[-304.35742188 259.22314453]
[-318.83148193 263.16036987]
[-333.30554199 267.09759521]
[-347.77960205 271.03485107]
[-362.35162354 288.05621338]
[-383.05230713 281.74172974]
[-397.26080322 286.54983521]
[-411.46932983 291.35794067]
[-425.67785645 296.16607666]
[-439.88638306 300.97418213]
[-454.09487915 305.78228760]
[-458.34515381 315.79879761]
[-467.22454834 321.69964600]
[-477.66619873 321.73669434]
[-486.21957397 316.13928223]
[-500.56747437 320.51397705]
[-514.91534424 324.88867188]
[-522.38714600 338.55651855]
[-537.00024414 342.78869629]
[-549.98443604 335.58126831]
[-564.33233643 339.95596313]
[-578.68023682 344.33065796]
[-593.02813721 348.70532227]
[-607.37603760 353.08001709]
[-616.15722656 366.50650024]
[-632.14233398 367.86883545]
[-643.06890869 356.12194824]
[-640.55505371 340.27709961]
[-626.52917480 332.48904419]
[-611.75073242 338.73211670]
[-597.40283203 334.35745239]
[-583.05493164 329.98275757]
[-568.70703125 325.60806274]
[-554.35913086 321.23336792]
[-547.60504150 308.00772095]
[-533.11651611 303.36679077]
[-519.29003906 310.54077148]
[-504.94216919 306.16607666]
[-490.59426880 301.79138184]
[-478.46911621 286.73159790]
[-458.90301514 291.57379150]
[-444.69448853 286.76565552]
[-430.48596191 281.95755005]
[-416.27743530 277.14944458]
[-402.06893921 272.34130859]
[-387.86041260 267.53320312]
[-385.95278931 259.88247681]
[-381.11828613 253.53498840]
[-374.08596802 249.57044983]
[-365.96569824 248.69979858]
[-358.07318115 251.13877869]
[-351.71682739 256.56079102]
[-337.24276733 252.62355042]
[-322.76870728 248.68632507]
[-308.29467773 244.74908447]
[-293.82061768 240.81185913]
[-279.34655762 236.87463379]
[-264.96588135 232.60894775]
[-250.68603516 228.01701355]
[-240.93840027 216.75498962]
[-225.43217468 219.89619446]
[-211.15231323 215.30426025]
[-196.87246704 210.71232605]
[-182.59260559 206.12040710]
[-168.31275940 201.52847290]
[-154.03291321 196.93653870]
[-152.43502808 177.40368652]
[-142.45217896 160.48335266]
[-126.04844666 149.58630371]
[-106.48697662 146.93014526]
[-87.68092346 153.08815002]
[-73.41062164 166.86618042]
[-59.60749817 160.99473572]
[-45.80437469 155.12329102]
[-32.00125504 149.25184631]
[-18.19813347 143.38041687]
[-4.39501143 137.50897217]
[9.40810966 131.63752747]
[15.02275753 115.78612518]
[30.67213440 108.76032257]
[46.87438965 115.35226440]
[60.58681870 109.27201843]
[74.29924011 103.19177246]
[75.17935181 88.00582123]
[84.79521179 75.02970123]
[100.82668304 69.10723877]
[118.40398407 73.12525177]
[127.33090210 61.07078934]
[136.25781250 49.01631927]
[145.18473816 36.96185303]
[141.67846680 23.95526123]
[146.23785400 11.48642159]
[156.98748779 4.03151512]
[169.87419128 4.12872267]
[178.98301697 -7.78887939]
[188.09184265 -19.70648193]
[197.20068359 -31.62408257]
[206.30950928 -43.54168320]
[208.54240417 -59.20453262]
[222.41844177 -64.61791992]
[231.52726746 -76.53552246]
[240.63609314 -88.45312500]
[249.74491882 -100.37072754]
[258.85375977 -112.28833008]
[267.96258545 -124.20593262]
[276.98071289 -136.19230652]
[285.90762329 -148.24678040]
[287.23165894 -164.59239197]
[302.16329956 -171.37310791]
[315.34216309 -161.61352539]
[313.21096802 -145.35345459]
[297.96209717 -139.31985474]
[289.03518677 -127.26538849]
[287.58029175 -120.01693726]
[279.88018799 -115.09709930]
[270.77136230 -103.17949677]
[261.66253662 -91.26189423]
[252.55369568 -79.34429169]
[243.44487000 -67.42668915]
[234.33604431 -55.50909042]
[232.75466919 -40.69866943]
[218.22711182 -34.43285751]
[209.11828613 -22.51525497]
[200.00944519 -10.59765244]
[190.90061951 1.31994963]
[181.79179382 13.23755169]
[184.72950745 29.79536057]
[174.58438110 43.62798309]
[157.23919678 45.88877106]
[148.31228638 57.94323730]
[139.38536072 69.99770355]
[130.45845032 82.05216980]
[135.15861511 96.29676819]
[149.50650024 100.67145538]
[163.85440063 105.04614258]
[178.20230103 109.42082977]
[189.93420410 104.05631256]
[201.79591370 107.99764252]
[207.59884644 118.61367798]
[221.87869263 123.20561218]
[236.15853882 127.79753876]
[251.66477966 124.65634155]
[261.41241455 135.91835022]
[275.69226074 140.51028442]
[289.97210693 145.10221863]
[301.30072021 134.73118591]
[316.30056763 131.42959595]
[330.93673706 136.08554077]
[341.27221680 147.44659424]
[344.52676392 162.45671082]
[339.82498169 177.07821655]
[328.43157959 187.37802124]
[313.41131592 190.58552551]
[298.80462646 185.83792114]
[288.54058838 174.41229248]
[285.38018799 159.38206482]
[271.10034180 154.79014587]
[256.82046509 150.19821167]
[242.33563232 153.66786194]
[231.56661987 142.07739258]
[217.28675842 137.48545837]
[203.00691223 132.89352417]
[186.07858276 137.51432800]
[173.82760620 123.76873016]
[159.47970581 119.39404297]
[145.13182068 115.01934814]
[130.78392029 110.64466095]
[115.56921387 126.04953766]
[95.50672150 127.76164246]
[80.37948608 116.90419769]
[66.66706085 122.98444366]
[52.95463562 129.06468201]
[49.58672714 142.10778809]
[39.46870422 150.70346069]
[26.44037247 151.88366699]
[15.27955246 145.44064331]
[1.47643137 151.31208801]
[-12.32668972 157.18353271]
[-26.12981033 163.05497742]
[-39.93293381 168.92642212]
[-53.73605347 174.79786682]
[-67.53917694 180.66929626]
[-66.40165710 191.26445007]
[-67.82280731 201.81239319]
[-71.71451569 211.70489502]
[-77.84640503 220.37295532]
[-85.85941315 227.31958008]
[-95.28685760 232.14826965]
[-105.58159637 234.58563232]
[-116.14777374 234.49685669]
[-126.37532043 231.89318848]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 81]
[3 80]
[4 79]
[5 78]
[6 77]
[7 76]
[9 74]
[10 73]
[14 72]
[15 71]
[16 70]
[17 69]
[18 68]
[19 67]
[21 61]
[22 60]
[23 59]
[24 58]
[25 57]
[26 56]
[30 54]
[31 53]
[32 52]
[35 49]
[36 48]
[37 47]
[38 46]
[39 45]
[87 197]
[88 196]
[89 195]
[90 194]
[91 193]
[92 192]
[93 191]
[96 187]
[97 186]
[98 185]
[102 147]
[103 146]
[104 145]
[105 144]
[109 141]
[110 140]
[111 139]
[112 138]
[113 137]
[115 135]
[116 134]
[117 133]
[118 132]
[119 131]
[120 130]
[121 128]
[122 127]
[148 182]
[149 181]
[150 180]
[151 179]
[154 177]
[155 176]
[156 175]
[158 173]
[159 172]
[160 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
