%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:16:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGCUCAGCACAGAAGGAGGAAGGACAGCAGGGCCAACAGUCACAGCAGCCCUGACCAGAGCAUUCCUGGAGCUCAAGCUCCUCUACAAAGAGGUGGACAGAGAAGACAGCAGAGACCAUGGGACCCCCCUCAGCCCCUCCCUGCAGAUUGCAUGUCCCCUGGAAGGAGGUCCUGCUCACAGCCUCACUUCUAACCUUCUGGAACCCACCCACCACUG\
) } def
/len { sequence length } bind def

/coor [
[85.27196503 339.73941040]
[92.90195465 326.47134399]
[105.83016968 318.27865601]
[104.54653931 303.33367920]
[90.10214233 299.50686646]
[77.81554413 290.95300293]
[69.18067169 278.68869019]
[65.25550079 264.18301392]
[66.53239441 249.18168640]
[72.87646484 235.49691772]
[83.53955078 224.78848267]
[97.24835205 218.36242676]
[95.96472931 203.41744995]
[94.68110657 188.47247314]
[93.39747620 173.52749634]
[92.11385345 158.58251953]
[90.83023071 143.63755798]
[89.54660034 128.69258118]
[77.04488373 120.40360260]
[62.77904129 125.03885651]
[48.51319122 129.67410278]
[34.24734497 134.30935669]
[19.98149681 138.94462585]
[19.00046921 156.50160217]
[11.36353016 172.30181885]
[-1.73218977 183.93083191]
[-18.25773430 189.62322998]
[-35.66665268 188.53053284]
[-51.28736877 180.84761047]
[-62.73318481 167.77856445]
[-76.78742981 173.02052307]
[-90.84167480 178.26248169]
[-104.89591980 183.50445557]
[-118.95016479 188.74641418]
[-133.00440979 193.98837280]
[-133.51199341 209.18083191]
[-139.79939270 223.02052307]
[-150.90783691 233.39698792]
[-165.14334106 238.72790527]
[-180.33512878 238.20033264]
[-194.16653442 231.89474487]
[-204.52838135 220.77265930]
[-209.84056091 206.53015137]
[-209.29301453 191.33908081]
[-202.96922302 177.51597595]
[-191.83352661 167.16877747]
[-177.58403015 161.87533569]
[-162.39369202 162.44287109]
[-148.57893372 168.78483582]
[-138.24638367 179.93412781]
[-124.19213104 174.69216919]
[-110.13788605 169.45021057]
[-96.08364105 164.20823669]
[-82.02939606 158.96627808]
[-67.97515106 153.72431946]
[-68.59695435 141.16625977]
[-65.66288757 128.92155457]
[-59.39933777 117.97806549]
[-50.30169296 109.22154236]
[-39.09521866 103.36401367]
[-26.67720604 100.88581848]
[-14.04515553 101.99626923]
[-2.21663380 106.61599731]
[7.85268641 114.38254547]
[15.34624100 124.67877197]
[29.61208916 120.04351807]
[43.87793732 115.40826416]
[58.14378357 110.77300262]
[72.40962982 106.13774872]
[74.65030670 91.30605316]
[62.39039230 82.66345215]
[50.13047409 74.02085876]
[37.87055969 65.37826538]
[25.61064339 56.73567200]
[9.23853970 55.79423523]
[2.11050701 41.02524185]
[11.55925274 27.62176323]
[27.86471748 29.37215042]
[34.25323868 44.47575378]
[46.51315308 53.11835098]
[58.77307129 61.76094437]
[71.03298950 70.40354156]
[83.29290771 79.04613495]
[93.89950562 68.43952942]
[85.25691223 56.17961502]
[76.61431885 43.91969681]
[61.51071167 37.53117752]
[59.76032639 21.22571373]
[73.16380310 11.77696800]
[87.93280029 18.90500069]
[88.87422943 35.27710342]
[97.51683044 47.53702164]
[106.15942383 59.79693604]
[121.13495636 58.94060516]
[128.32369995 45.77542114]
[129.68811035 36.75035095]
[135.71023560 32.47463989]
[143.08622742 19.41344643]
[150.46221924 6.35225630]
[157.83822632 -6.70893478]
[165.21421814 -19.77012634]
[158.93466187 -33.83687592]
[162.10508728 -48.72988892]
[173.30465698 -58.78143311]
[188.09837341 -60.29272079]
[195.47436523 -73.35391235]
[188.83259583 -85.42759705]
[189.02072144 -99.09803009]
[195.88272095 -110.79767609]
[207.53486633 -117.52610016]
[220.88160706 -117.61924744]
[228.44335938 -130.57377625]
[236.00509644 -143.52832031]
[243.56684875 -156.48284912]
[243.84153748 -172.30166626]
[256.93978882 -179.39289856]
[264.50152588 -192.34742737]
[256.71444702 -208.72785950]
[260.29275513 -226.34799194]
[273.61724854 -238.18428040]
[291.22271729 -239.63459778]
[298.41146851 -252.79978943]
[305.60018921 -265.96496582]
[312.78894043 -279.13015747]
[308.09643555 -294.22174072]
[315.52355957 -308.17214966]
[330.66390991 -312.70483398]
[344.53500366 -305.13064575]
[348.90734863 -289.94320679]
[341.18692017 -276.15295410]
[325.95413208 -271.94140625]
[318.76538086 -258.77624512]
[311.57666016 -245.61105347]
[304.38790894 -232.44586182]
[311.15362549 -222.37516785]
[313.00912476 -210.31254578]
[309.54202271 -198.53564453]
[301.35083008 -189.29457092]
[289.94265747 -184.38203430]
[277.45605469 -184.78567505]
[269.89431763 -171.83114624]
[270.16049194 -156.93891907]
[256.52139282 -148.92109680]
[248.95964050 -135.96656799]
[241.39788818 -123.01203156]
[233.83613586 -110.05750275]
[240.91955566 -95.24525452]
[237.74414062 -78.96702576]
[225.36737061 -67.67889404]
[208.53555298 -65.97792053]
[201.15956116 -52.91672897]
[207.50480652 -39.46772003]
[204.68061829 -24.68638229]
[193.56419373 -14.28067970]
[178.27540588 -12.39413261]
[170.89941406 0.66705889]
[163.52342224 13.72825050]
[156.14741516 26.78944206]
[148.77142334 39.85063171]
[141.48887634 52.96415329]
[134.30014038 66.12934113]
[139.44161987 80.22065735]
[153.41958618 85.66277313]
[167.39755249 91.10488892]
[181.37550354 96.54700470]
[195.35346985 101.98911285]
[209.33143616 107.43122864]
[223.34788513 112.77340698]
[237.40213013 118.01537323]
[251.45637512 123.25733185]
[265.51062012 128.49929810]
[272.07232666 127.78246307]
[277.23849487 130.13038635]
[279.88778687 134.09683228]
[293.78662109 139.73799133]
[307.68542480 145.37915039]
[323.84527588 142.58789062]
[334.13320923 155.35859680]
[327.96585083 170.55384827]
[311.68768311 172.54208374]
[302.04428101 159.27796936]
[288.14544678 153.63681030]
[274.24661255 147.99565125]
[260.26867676 142.55354309]
[246.21441650 137.31158447]
[232.16017151 132.06961060]
[218.10592651 126.82765198]
[210.74528503 127.43489075]
[203.88931274 121.40919495]
[189.91134644 115.96707916]
[175.93339539 110.52496338]
[161.95542908 105.08284760]
[147.97747803 99.64073181]
[133.99951172 94.19861603]
[125.34400940 118.08113861]
[104.49157715 127.40895081]
[105.77520752 142.35392761]
[107.05883026 157.29890442]
[108.34245300 172.24388123]
[109.62607574 187.18885803]
[110.90970612 202.13383484]
[112.19332886 217.07881165]
[126.79713440 221.07307434]
[139.13006592 229.80639648]
[147.71478271 242.20892334]
[151.53103638 256.77279663]
[150.13688660 271.73535156]
[143.71983337 285.29248047]
[133.07179260 295.81619263]
[119.49151611 302.05007935]
[120.77514648 316.99505615]
[134.91104126 322.86318970]
[144.69178772 334.63583374]
[147.86982727 349.60778809]
[143.71487427 364.33853149]
[133.18171692 375.44308472]
[118.69078064 380.36968994]
[103.57199097 377.98626709]
[91.29953003 368.84048462]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 211]
[4 210]
[12 202]
[13 201]
[14 200]
[15 199]
[16 198]
[17 197]
[18 196]
[19 69]
[20 68]
[21 67]
[22 66]
[23 65]
[30 55]
[31 54]
[32 53]
[33 52]
[34 51]
[35 50]
[70 83]
[71 82]
[72 81]
[73 80]
[74 79]
[84 93]
[85 92]
[86 91]
[94 161]
[95 160]
[97 159]
[98 158]
[99 157]
[100 156]
[101 155]
[105 151]
[106 150]
[111 146]
[112 145]
[113 144]
[114 143]
[116 141]
[117 140]
[121 134]
[122 133]
[123 132]
[124 131]
[162 194]
[163 193]
[164 192]
[165 191]
[166 190]
[167 189]
[168 187]
[169 186]
[170 185]
[171 184]
[174 183]
[175 182]
[176 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
