%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:24:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCGGCUCCCGCAGAGCCCACAGGGACCUGCAGAUCUGAGUGCCCUGCCCACCCCCGCCCGCCUUCCUUCCCCCACCACGCCUGGGAGGGCCCUCACUGGGGAGGUGGCCGAGAGCGGGUCUGGCCUGGGGUGUUCAGAUGCUCACAGCAUGGAAAAGUCCAUCUGGCUGCUGGCCUGCUUGGCGUGGGUUCUCCCGACAGGCUCAUUUGUGAGAACUAAAAUAGAUACUACGGAGAACUUGCUCAACA\
) } def
/len { sequence length } bind def

/coor [
[210.83181763 295.91790771]
[199.62155151 285.95147705]
[202.64788818 271.25946045]
[195.52967834 273.62185669]
[191.43539429 288.05227661]
[187.34111023 302.48266602]
[183.24684143 316.91308594]
[179.15255737 331.34350586]
[185.68243408 345.99752808]
[178.16917419 360.17251587]
[162.37628174 362.99462891]
[150.41873169 352.29901123]
[151.46932983 336.29037476]
[164.72213745 327.24923706]
[168.81642151 312.81881714]
[172.91070557 298.38839722]
[177.00497437 283.95797729]
[181.09925842 269.52755737]
[173.12509155 254.31416321]
[174.17518616 239.20767212]
[181.92488098 228.60952759]
[172.95629883 216.58602905]
[163.98773193 204.56251526]
[155.01914978 192.53901672]
[150.52973938 190.97854614]
[146.96237183 186.59562683]
[145.98078918 180.09877014]
[137.31719971 167.85368347]
[123.65000916 161.93276978]
[121.99567413 146.19828796]
[113.33208466 133.95320129]
[104.66848755 121.70811462]
[96.00489807 109.46302795]
[85.39830017 98.85642242]
[73.15320587 90.19283295]
[60.90811920 81.52924347]
[48.66303253 72.86565399]
[36.41794205 64.20206451]
[24.17285538 55.53847504]
[11.92776585 46.87488174]
[-0.31732303 38.21129227]
[-12.56241226 29.54770088]
[-24.80750084 20.88411140]
[-37.05258942 12.22052097]
[-49.29767990 3.55693007]
[-61.54276657 -5.10666037]
[-73.89575958 -13.61569500]
[-86.35469055 -21.96882820]
[-98.81362915 -30.32196426]
[-111.34941864 -24.62554932]
[-124.95554352 -25.85081863]
[-136.09414673 -33.57196808]
[-141.92192078 -45.68813324]
[-141.01560974 -58.99400711]
[-153.36859131 -67.50304413]
[-165.72158813 -76.01207733]
[-178.07456970 -84.52111053]
[-190.42756653 -93.03014374]
[-203.09248352 -101.06754303]
[-216.05133057 -108.62189484]
[-229.01019287 -116.17623901]
[-241.96903992 -123.73059082]
[-254.92788696 -131.28494263]
[-267.88674927 -138.83927917]
[-280.84558105 -146.39363098]
[-293.80444336 -153.94798279]
[-306.76330566 -161.50233459]
[-319.72213745 -169.05667114]
[-340.94955444 -161.59228516]
[-360.46466064 -172.22354126]
[-365.57464600 -193.56475830]
[-379.06573486 -200.12149048]
[-392.55682373 -206.67823792]
[-407.33218384 -201.74607849]
[-420.92065430 -208.58772278]
[-425.53164673 -222.70417786]
[-439.02273560 -229.26092529]
[-452.51382446 -235.81765747]
[-468.82400513 -234.11178589]
[-478.23611450 -247.54101562]
[-471.06777954 -262.29049683]
[-454.69317627 -263.18722534]
[-445.95706177 -249.30873108]
[-432.46600342 -242.75199890]
[-418.97491455 -236.19526672]
[-405.02636719 -241.29167175]
[-391.25109863 -234.83439636]
[-386.00009155 -220.16931152]
[-372.50900269 -213.61257935]
[-359.01791382 -207.05584717]
[-352.96636963 -212.16894531]
[-345.65640259 -215.30963135]
[-337.71499634 -216.18717957]
[-329.82949829 -214.70590210]
[-322.68820190 -210.97512817]
[-316.92028809 -205.30140686]
[-313.04025269 -198.16337585]
[-311.40228271 -190.17141724]
[-312.16778564 -182.01553345]
[-299.20895386 -174.46118164]
[-286.25009155 -166.90682983]
[-273.29122925 -159.35247803]
[-260.33239746 -151.79814148]
[-247.37353516 -144.24378967]
[-234.41468811 -136.68943787]
[-221.45584106 -129.13508606]
[-208.49699402 -121.58074188]
[-195.53813171 -114.02639771]
[-198.46815491 -128.73744202]
[-190.23489380 -141.27592468]
[-175.57115173 -144.43421936]
[-162.90623474 -136.39680481]
[-159.52043152 -121.78392029]
[-167.36004639 -108.99562836]
[-181.91853333 -105.38313293]
[-169.56553650 -96.87409973]
[-157.21255493 -88.36506653]
[-144.85955811 -79.85603333]
[-132.50657654 -71.34699249]
[-117.19681549 -77.30260468]
[-101.19605255 -72.90631866]
[-90.87350464 -59.70231628]
[-90.46049500 -42.78090286]
[-78.00155640 -34.42776871]
[-65.54261780 -26.07463264]
[-60.78979874 -26.09728622]
[-55.96708298 -23.15153313]
[-52.87917709 -17.35174942]
[-40.63408661 -8.68815899]
[-28.38899803 -0.02456826]
[-16.14390945 8.63902187]
[-3.89882135 17.30261230]
[8.34626770 25.96620369]
[20.59135628 34.62979507]
[32.83644485 43.29338455]
[45.08153534 51.95697403]
[57.32662201 60.62056732]
[69.57170868 69.28415680]
[81.81680298 77.94774628]
[94.06188965 86.61133575]
[85.67263031 74.17668915]
[89.19480133 59.59607697]
[102.33528137 52.36227036]
[116.53888702 57.18487549]
[122.55830383 70.92411041]
[116.47489166 84.63468170]
[127.01464081 73.96164703]
[137.55439758 63.28861618]
[141.34437561 55.00608063]
[148.29428101 52.54872894]
[158.96731567 42.00897980]
[169.64035034 31.46922874]
[180.31338501 20.92947960]
[190.98641968 10.38972950]
[194.80615234 -5.55836391]
[210.60232544 -9.96439457]
[222.12518311 1.70418370]
[217.52101135 17.44373894]
[201.52616882 21.06276512]
[190.85313416 31.60251427]
[180.18009949 42.14226532]
[169.50706482 52.68201447]
[158.83403015 63.22176361]
[148.22743225 73.82836151]
[137.68768311 84.50139618]
[127.14793396 95.17443848]
[117.91695404 99.28910065]
[108.24999237 100.79943848]
[116.91358185 113.04452515]
[125.57717133 125.28961182]
[134.24075317 137.53469849]
[148.52761841 144.33146667]
[149.56228638 159.19009399]
[158.22587585 171.43518066]
[167.04266357 183.57043457]
[176.01123047 195.59394836]
[184.97981262 207.61744690]
[193.94837952 219.64096069]
[220.94131470 221.22822571]
[233.12150574 252.26240540]
[245.03137207 261.38134766]
[256.94122314 270.50030518]
[268.85107422 279.61926270]
[277.54330444 282.34127808]
[280.85235596 288.92840576]
[292.64666748 298.19628906]
[304.44100952 307.46417236]
[316.23532104 316.73208618]
[328.02966309 325.99996948]
[339.82397461 335.26785278]
[351.61831665 344.53576660]
[363.41262817 353.80364990]
[375.20697021 363.07156372]
[387.00128174 372.33944702]
[398.79559326 381.60733032]
[410.06845093 377.92752075]
[421.60189819 380.11209106]
[430.56350708 387.50717163]
[434.80902100 398.19387817]
[433.39501953 409.48510742]
[444.95272827 419.04644775]
[460.47540283 417.74859619]
[472.06033325 427.60980225]
[473.20202637 442.41629028]
[484.75970459 451.97766113]
[496.37725830 461.46621704]
[508.05419922 470.88159180]
[519.73114014 480.29693604]
[531.40808105 489.71231079]
[545.70617676 484.10339355]
[560.89074707 486.41082764]
[572.87719727 496.01394653]
[578.44128418 510.32955933]
[576.08624268 525.50683594]
[566.44561768 537.46313477]
[552.11267090 542.98229980]
[536.94281006 540.57971191]
[525.01678467 530.90167236]
[519.54254150 516.55145264]
[521.99267578 501.38925171]
[510.31576538 491.97387695]
[498.63882446 482.55850220]
[486.96188354 473.14312744]
[479.80044556 471.39569092]
[475.19836426 463.53533936]
[463.64065552 453.97399902]
[448.88250732 455.62701416]
[437.02514648 446.09506226]
[435.39135742 430.60415649]
[423.83367920 421.04278564]
[405.72485352 423.84515381]
[391.08294678 412.30245972]
[389.52770996 393.40167236]
[377.73339844 384.13375854]
[365.93905640 374.86587524]
[354.14474487 365.59799194]
[342.35040283 356.33007812]
[330.55609131 347.06219482]
[318.76174927 337.79431152]
[306.96743774 328.52639771]
[295.17309570 319.25851440]
[283.37878418 309.99063110]
[271.58444214 300.72271729]
[259.73211670 291.52911377]
[247.82226562 282.41015625]
[235.91241455 273.29119873]
[224.00256348 264.17224121]
[216.88433838 266.53463745]
[228.09440613 276.50131226]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 18]
[5 17]
[6 16]
[7 15]
[8 14]
[21 178]
[22 177]
[23 176]
[24 175]
[27 174]
[28 173]
[30 171]
[31 170]
[32 169]
[33 168]
[34 140]
[35 139]
[36 138]
[37 137]
[38 136]
[39 135]
[40 134]
[41 133]
[42 132]
[43 131]
[44 130]
[45 129]
[46 128]
[47 125]
[48 124]
[49 123]
[54 119]
[55 118]
[56 117]
[57 116]
[58 115]
[59 108]
[60 107]
[61 106]
[62 105]
[63 104]
[64 103]
[65 102]
[66 101]
[67 100]
[68 99]
[71 90]
[72 89]
[73 88]
[76 85]
[77 84]
[78 83]
[146 166]
[147 165]
[148 164]
[150 163]
[151 162]
[152 161]
[153 160]
[154 159]
[180 247]
[181 246]
[182 245]
[183 244]
[185 243]
[186 242]
[187 241]
[188 240]
[189 239]
[190 238]
[191 237]
[192 236]
[193 235]
[194 234]
[195 233]
[200 230]
[201 229]
[204 226]
[205 225]
[206 223]
[207 222]
[208 221]
[209 220]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
