%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:11:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGCGCUGUGCGCCGGAAGAGCACGCCCAGUCCGGGCUGCGCGGAGGAAGCGCUGGGGUCCCGGAGGGCGGGGGUGGCGGCGCCGGAGGUCGCCAUGGCUACCGAGCCCGAAGCCGCGGAGCCGGUGGUGCCUUCGCUCGUGGAUCGAUACUUCACUCGCUGGUACAAACCGGAUGUCAAAGGAAAAUUUUGUG\
) } def
/len { sequence length } bind def

/coor [
[75.72373199 112.50093079]
[68.37529755 111.00074005]
[58.42846298 122.22840118]
[48.48162079 133.45606995]
[38.53478241 144.68373108]
[28.58794212 155.91139221]
[32.17440033 174.35795593]
[16.36456680 190.83949280]
[8.96945095 203.88986206]
[1.57433534 216.94024658]
[-5.82078028 229.99061584]
[1.44953001 243.59745789]
[0.18651469 258.97302246]
[-9.20680237 271.21105957]
[-23.73304749 276.40640259]
[-38.75695038 272.90127563]
[-49.48443604 261.81414795]
[-52.49240494 246.68286133]
[-46.82102203 232.33578491]
[-34.28001022 223.35098267]
[-18.87115479 222.59550476]
[-11.47603893 209.54512024]
[-4.08092308 196.49475098]
[3.31419230 183.44438171]
[-7.58719492 173.14099121]
[-20.20005608 181.25984192]
[-32.81291580 189.37869263]
[-45.42577744 197.49754333]
[-50.21604919 212.80874634]
[-65.22501373 218.47537231]
[-78.93907166 210.15046692]
[-80.83798218 194.22018433]
[-69.46504974 182.90487671]
[-53.54462814 184.88468933]
[-40.93176651 176.76583862]
[-28.31890678 168.64698792]
[-15.70604610 160.52813721]
[-0.76944637 144.21113586]
[17.36028099 145.96455383]
[27.30711937 134.73689270]
[37.25395966 123.50922394]
[47.20080185 112.28156281]
[57.14764023 101.05390167]
[63.24868774 87.35072327]
[64.93672943 72.44600677]
[66.62477875 57.54129028]
[68.19270325 42.62346268]
[69.64041138 27.69348717]
[71.08811951 12.76351357]
[72.53582764 -2.16646099]
[61.34952927 -8.64929581]
[53.47826385 -18.84718323]
[50.06550980 -31.22072411]
[51.58507919 -43.91892624]
[57.77567291 -55.05609131]
[67.68498993 -62.99184036]
[79.81607819 -66.57269287]
[81.74401855 -81.44828033]
[83.67195892 -96.32386780]
[85.59989929 -111.19944763]
[87.52783966 -126.07503510]
[78.56644440 -133.91139221]
[74.54759216 -144.98941040]
[76.36280060 -156.51182556]
[83.44573975 -165.62821960]
[93.94161987 -170.14022827]
[96.34778595 -184.94598389]
[98.75395966 -199.75172424]
[101.16012573 -214.55747986]
[103.56629944 -229.36323547]
[105.97246552 -244.16899109]
[108.37863922 -258.97476196]
[110.78480530 -273.78048706]
[113.19097137 -288.58624268]
[115.59714508 -303.39199829]
[113.78909302 -318.28265381]
[107.90959167 -332.08233643]
[102.03009796 -345.88201904]
[96.15059662 -359.68173218]
[90.27109528 -373.48141479]
[84.39159393 -387.28109741]
[69.37950897 -391.65960693]
[60.73707199 -404.69195557]
[62.54497147 -420.22467041]
[73.94957733 -430.92370605]
[89.56598663 -431.73727417]
[102.02059937 -422.28121948]
[105.43273926 -407.02044678]
[98.19129181 -393.16061401]
[104.07078552 -379.36090088]
[109.95028687 -365.56121826]
[115.82978821 -351.76153564]
[121.70928192 -337.96182251]
[127.58878326 -324.16213989]
[135.07685852 -323.73947144]
[143.29679871 -336.28668213]
[150.05302429 -322.89410400]
[157.54110718 -322.47140503]
[164.93621826 -335.52178955]
[172.33132935 -348.57217407]
[179.72645569 -361.62252808]
[187.12156677 -374.67291260]
[194.51667786 -387.72326660]
[201.91180420 -400.77365112]
[203.42358398 -409.79595947]
[209.53262329 -413.97332764]
[217.13702393 -426.90286255]
[224.63702393 -439.89324951]
[232.03213501 -452.94363403]
[239.42726135 -465.99398804]
[234.97293091 -481.15759277]
[242.61875916 -494.98931885]
[257.82861328 -499.28308105]
[271.57873535 -491.49142456]
[275.71142578 -476.23706055]
[267.77484131 -462.57006836]
[252.47763062 -458.59887695]
[245.08251953 -445.54849243]
[237.68739319 -432.49813843]
[237.12422180 -425.11886597]
[230.06657410 -419.29846191]
[222.46217346 -406.36892700]
[214.96217346 -393.37854004]
[207.56706238 -380.32815552]
[200.17193604 -367.27780151]
[192.77682495 -354.22741699]
[185.38171387 -341.17703247]
[177.98658752 -328.12667847]
[170.59147644 -315.07629395]
[130.40289307 -300.98583984]
[127.99672699 -286.18008423]
[125.59056091 -271.37432861]
[123.18438721 -256.56857300]
[120.77822113 -241.76281738]
[118.37204742 -226.95707703]
[115.96588135 -212.15132141]
[113.55971527 -197.34556580]
[111.15354156 -182.53981018]
[108.74737549 -167.73405457]
[120.32329559 -153.56503296]
[117.83713531 -135.11621094]
[102.40342712 -124.14709473]
[100.47548676 -109.27150726]
[98.54754639 -94.39592743]
[96.61960602 -79.52033997]
[94.69166565 -64.64475250]
[108.73667908 -54.70500183]
[115.85680389 -38.94319534]
[114.01183319 -21.65700531]
[103.61962128 -7.60995960]
[87.46580505 -0.71875215]
[86.01809692 14.21122265]
[84.57038879 29.14119720]
[83.12268066 44.07117081]
[85.60960388 51.04152298]
[81.52948761 59.22933578]
[79.84144592 74.13404846]
[78.15340424 89.03876495]
[101.92752838 63.51773834]
[145.51626587 82.89534760]
[157.43493652 92.00278473]
[169.35360718 101.11022186]
[181.27226257 110.21765900]
[193.19093323 119.32509613]
[209.51475525 120.89512634]
[216.06983948 135.92718506]
[206.11289978 148.95758057]
[189.88676453 146.58175659]
[184.08349609 131.24375916]
[172.16482544 122.13632202]
[160.24617004 113.02888489]
[148.32749939 103.92144775]
[136.40882874 94.81401062]
[130.30589294 99.17338562]
[139.02442932 111.37940979]
[126.81826019 120.09774780]
[118.10000610 107.89212036]
[111.99707031 112.25149536]
[116.74708557 126.47953796]
[121.49710846 140.70758057]
[126.24712372 154.93563843]
[130.99714661 169.16368103]
[144.64961243 177.58921814]
[146.43132019 193.53302002]
[134.97549438 204.76438904]
[119.07005310 202.66755676]
[110.91630554 188.85104370]
[116.76910400 173.91369629]
[112.01908112 159.68565369]
[107.26905823 145.45761108]
[102.51904297 131.22955322]
[97.76902008 117.00151062]
[90.42059326 115.50131989]
[87.41997528 130.19813538]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 43]
[3 42]
[4 41]
[5 40]
[6 39]
[8 24]
[9 23]
[10 22]
[11 21]
[25 37]
[26 36]
[27 35]
[28 34]
[44 158]
[45 157]
[46 156]
[47 154]
[48 153]
[49 152]
[50 151]
[57 146]
[58 145]
[59 144]
[60 143]
[61 142]
[66 139]
[67 138]
[68 137]
[69 136]
[70 135]
[71 134]
[72 133]
[73 132]
[74 131]
[75 130]
[76 94]
[77 93]
[78 92]
[79 91]
[80 90]
[81 89]
[98 129]
[99 128]
[100 127]
[101 126]
[102 125]
[103 124]
[104 123]
[106 122]
[107 121]
[108 119]
[109 118]
[110 117]
[160 173]
[161 172]
[162 171]
[163 170]
[164 169]
[178 192]
[179 191]
[180 190]
[181 189]
[182 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
