%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:36:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUUACUUUUUCCAAAGGCUGGAGGGCUUCACUCCGGCUGGCGCCGCCGCCUAGCGCGCUCCUGCUUCGCCGCCACGGUCCGGGGGGGCUGCCGGUCCCGGGUACCAUGUGUGACGGCGCCCUGCUGCCUCCGCUCGUCCUGCCCGUGCUGCUGCUGCUGGUUUGGGGACUGGACCCGGGCACAGCUGUCGGCGACGCGGCGGCCG\
) } def
/len { sequence length } bind def

/coor [
[72.34964752 217.82035828]
[78.68276978 231.41784668]
[79.51266479 246.39486694]
[74.72058868 260.60879517]
[64.99211884 272.02618408]
[51.71900558 279.01364136]
[36.80012512 280.57153320]
[22.36978722 276.47695923]
[10.49241734 267.31573486]
[2.86720276 254.39846802]
[0.58501768 239.57308960]
[3.97307444 224.95893860]
[-6.83282423 235.36242676]
[-17.63872337 245.76591492]
[-19.08485794 250.78799438]
[-22.02054024 254.39115906]
[-25.65501595 256.24548340]
[-29.18124580 256.38305664]
[-40.44945526 266.28393555]
[-51.71766663 276.18481445]
[-62.98587799 286.08569336]
[-74.25408936 295.98657227]
[-85.52230072 305.88745117]
[-96.79051208 315.78833008]
[-96.25368500 331.41668701]
[-105.92884827 343.70187378]
[-121.24766541 346.84313965]
[-134.97708130 339.35733032]
[-140.63446045 324.77899170]
[-135.54858398 309.99157715]
[-122.12083435 301.97723389]
[-106.69139099 304.52011108]
[-95.42317963 294.61923218]
[-84.15496826 284.71835327]
[-72.88675690 274.81747437]
[-61.61854553 264.91659546]
[-50.35033798 255.01571655]
[-39.08212662 245.11483765]
[-28.04220963 234.96002197]
[-17.23631096 224.55653381]
[-6.43041325 214.15304565]
[-3.87638950 204.40663147]
[6.24633551 199.27622986]
[14.80329990 186.95639038]
[23.36026382 174.63655090]
[31.91722870 162.31671143]
[40.47419357 149.99688721]
[49.03115845 137.67704773]
[57.58812332 125.35720825]
[66.14508820 113.03736877]
[63.76484680 98.22742462]
[51.77846909 89.20929718]
[36.09912872 87.09532166]
[30.58060074 73.26076508]
[18.59422112 64.24263000]
[6.53975487 55.31571198]
[-5.58210468 46.48052597]
[-21.29172134 44.60475159]
[-27.01956940 30.85553360]
[-39.14142990 22.02034760]
[-51.26329041 13.18516159]
[-63.38514709 4.34997559]
[-75.50701141 -4.48521042]
[-87.62886810 -13.32039642]
[-96.67213440 -10.63116741]
[-105.80313873 -12.38040066]
[-112.99606323 -18.05114555]
[-116.71457672 -26.27102852]
[-116.23919678 -35.14255905]
[-127.94636536 -44.52031326]
[-139.65353394 -53.89806366]
[-151.36070251 -63.27581406]
[-167.50286865 -68.45914459]
[-166.99069214 -85.40535736]
[-150.56497192 -89.60437775]
[-141.98295593 -74.98298645]
[-130.27578735 -65.60523224]
[-118.56861877 -56.22748184]
[-106.86145020 -46.84972763]
[-86.26680756 -45.52406311]
[-78.79368591 -25.44225693]
[-66.67182159 -16.60707092]
[-54.54996109 -7.77188444]
[-42.42810440 1.06330156]
[-30.30624390 9.89848804]
[-18.18438339 18.73367310]
[-3.34180331 19.97749710]
[3.25308108 34.35866547]
[15.37494087 43.19385147]
[22.63422966 44.59368515]
[27.61235428 52.25624847]
[39.59873199 61.27438354]
[54.42072678 62.74331665]
[60.79660034 77.22291565]
[72.78298187 86.24105072]
[81.16287994 75.86667633]
[93.20963287 70.02746582]
[106.64736938 69.87510681]
[118.91667938 75.48228455]
[127.09580994 62.90843201]
[135.27494812 50.33457565]
[143.45407104 37.76071930]
[151.63319397 25.18686485]
[159.81233215 12.61300945]
[156.75051880 -2.65994167]
[165.22442627 -15.29510498]
[179.80372620 -18.11995697]
[187.98284912 -30.69381332]
[196.16198730 -43.26766968]
[197.20103455 -59.05471802]
[210.62673950 -65.50448608]
[218.80587769 -78.07833862]
[226.98500061 -90.65219879]
[223.92318726 -105.92514801]
[232.39710999 -118.56031036]
[246.97639465 -121.38516235]
[255.15553284 -133.95901489]
[263.33465576 -146.53286743]
[271.41812134 -159.16842651]
[279.40548706 -171.86497498]
[282.72186279 -188.49139404]
[299.61657715 -189.90730286]
[305.65408325 -174.06478882]
[292.10205078 -163.87760925]
[284.11468506 -151.18107605]
[283.21350098 -143.84317017]
[275.90850830 -138.35374451]
[267.72937012 -125.77989197]
[259.55026245 -113.20603180]
[262.87759399 -98.73314667]
[254.76191711 -85.86495972]
[239.55885315 -82.47306824]
[231.37973022 -69.89920807]
[223.20059204 -57.32535553]
[222.74658203 -42.43767166]
[208.73583984 -35.08853912]
[200.55671692 -22.51468468]
[192.37757874 -9.94082832]
[195.70492554 4.53205681]
[187.58923340 17.40024948]
[172.38618469 20.79213905]
[164.20706177 33.36599350]
[156.02792358 45.93984985]
[147.84880066 58.51370621]
[139.66966248 71.08756256]
[131.49053955 83.66141510]
[135.42776489 98.13546753]
[148.84924316 104.83352661]
[162.27072144 111.53158569]
[175.69219971 118.22965240]
[189.11366272 124.92771149]
[195.73017883 124.90834045]
[200.62660217 127.80092621]
[202.83619690 132.03814697]
[216.04820251 139.14044189]
[231.86691284 138.85961914]
[239.41360474 151.70083618]
[252.62561035 158.80314636]
[265.83761597 165.90544128]
[279.04965210 173.00775146]
[292.31518555 180.00958252]
[305.63345337 186.91056824]
[318.95172119 193.81153870]
[332.27001953 200.71250916]
[345.58828735 207.61349487]
[358.90655518 214.51446533]
[372.22485352 221.41543579]
[386.59017944 215.23716736]
[401.55102539 219.78768921]
[410.04330444 232.91838074]
[408.05725098 248.42933655]
[396.53060913 258.99673462]
[380.90588379 259.63101196]
[368.56060791 250.03265381]
[365.32385254 234.73371887]
[352.00558472 227.83274841]
[338.68731689 220.93176270]
[325.36901855 214.03079224]
[312.05075073 207.12982178]
[298.73248291 200.22883606]
[285.41418457 193.32786560]
[278.02670288 193.04162598]
[271.94732666 186.21975708]
[258.73532104 179.11746216]
[245.52331543 172.01515198]
[232.31129456 164.91285706]
[217.43759155 165.70167542]
[208.94590759 152.35246277]
[195.73388672 145.25015259]
[182.41560364 138.34918213]
[168.99414062 131.65112305]
[155.57266235 124.95306396]
[142.15118408 118.25500488]
[128.72970581 111.55694580]
[115.59921265 126.56965637]
[96.13050842 130.40856934]
[78.46492004 121.59433746]
[69.90795898 133.91416931]
[61.35099411 146.23400879]
[52.79402924 158.55384827]
[44.23706436 170.87368774]
[35.68009949 183.19351196]
[27.12313652 195.51335144]
[18.56617165 207.83319092]
[32.45578766 202.16940308]
[47.45545578 202.06947327]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 41]
[13 40]
[14 39]
[18 38]
[19 37]
[20 36]
[21 35]
[22 34]
[23 33]
[24 32]
[43 204]
[44 203]
[45 202]
[46 201]
[47 200]
[48 199]
[49 198]
[50 197]
[51 95]
[52 94]
[54 92]
[55 91]
[56 89]
[57 88]
[59 86]
[60 85]
[61 84]
[62 83]
[63 82]
[64 81]
[69 79]
[70 78]
[71 77]
[72 76]
[99 146]
[100 145]
[101 144]
[102 143]
[103 142]
[104 141]
[107 138]
[108 137]
[109 136]
[111 134]
[112 133]
[113 132]
[116 129]
[117 128]
[118 127]
[119 125]
[120 124]
[147 194]
[148 193]
[149 192]
[150 191]
[151 190]
[154 189]
[155 188]
[157 186]
[158 185]
[159 184]
[160 183]
[161 181]
[162 180]
[163 179]
[164 178]
[165 177]
[166 176]
[167 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
