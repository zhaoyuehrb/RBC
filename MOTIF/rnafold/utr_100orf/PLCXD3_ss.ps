%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:10:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAACUCUAGCGGGGCUAGAGCAAACAUUGGAUUAGCGGCAGCAGCCUGCCAGCCUGCCCGAGGAGUGCUGGGACCAGCGCGCUGCACGCCGACUGGCACGAUGGCCUCGUCUCAGGGGAAAAACGAGCUGAAAUUAGCCGACUGGAUGGCAACUCUGCCGGAGAGCAUGCACAGCAUCCCCCUCACCAAUUUAGCCAUUC\
) } def
/len { sequence length } bind def

/coor [
[75.74785614 213.14738464]
[69.44951630 226.76101685]
[76.84333801 240.27536011]
[74.88463593 255.37559509]
[64.53239441 266.29782104]
[49.90880585 268.99755859]
[43.61046982 282.61120605]
[37.31213379 296.22482300]
[31.01379776 309.83847046]
[24.71546173 323.45208740]
[18.41712570 337.06573486]
[12.11878872 350.67935181]
[10.95561886 367.59335327]
[-5.61937284 371.15789795]
[-13.63303089 356.21743774]
[-1.49484301 344.38101196]
[4.80349350 330.76739502]
[11.10183048 317.15374756]
[17.40016747 303.54013062]
[23.69850349 289.92648315]
[29.99683952 276.31286621]
[36.29517746 262.69921875]
[28.88570786 249.80590820]
[30.50832176 234.84492493]
[40.74910355 223.57640076]
[55.83588791 220.46267700]
[62.13422394 206.84904480]
[67.25240326 192.74925232]
[71.15337372 178.26538086]
[75.05433655 163.78150940]
[78.95530701 149.29765320]
[82.85627747 134.81378174]
[74.31437683 129.08874512]
[67.57604218 121.32118988]
[63.11441040 112.05652618]
[61.24277878 101.94529724]
[62.09255600 91.69746399]
[48.33639526 85.71681976]
[34.58023834 79.73617554]
[20.77821541 73.86215210]
[6.93115187 68.09510803]
[-6.91591072 62.32805634]
[-20.76297379 56.56100845]
[-34.61003494 50.79395676]
[-43.74176025 50.38248062]
[-48.62565613 44.82903290]
[-62.38181305 38.84838486]
[-76.18383789 32.97436523]
[-90.03089905 27.20731354]
[-103.87796021 21.44026566]
[-117.85515594 15.99618340]
[-131.95495605 10.87800217]
[-146.05474854 5.75982046]
[-160.15454102 0.64163882]
[-174.25433350 -4.47654247]
[-188.39331055 -9.48546886]
[-202.57061768 -14.38484001]
[-211.71031189 -14.23060703]
[-216.92840576 -19.47128296]
[-231.02821350 -24.58946419]
[-247.97985840 -24.31049156]
[-252.94061279 -40.52243805]
[-238.73550415 -49.77724075]
[-225.91001892 -38.68925858]
[-211.81022644 -33.57107925]
[-197.67124939 -28.56215096]
[-183.49394226 -23.66278076]
[-176.14045715 -24.44979858]
[-169.13615417 -18.57633781]
[-155.03636169 -13.45815659]
[-140.93656921 -8.33997440]
[-126.83676910 -3.22179317]
[-112.73697662 1.89638829]
[-109.40026855 0.73821217]
[-105.33596802 1.14259195]
[-101.28638458 3.43422890]
[-98.11091614 7.59320259]
[-84.26384735 13.36025143]
[-70.41678619 19.12730026]
[-63.02869415 18.79670525]
[-56.40116882 25.09222794]
[-42.64501190 31.07287216]
[-28.84298706 36.94689560]
[-14.99592400 42.71394348]
[-1.14886177 48.48099518]
[12.69820118 54.24804306]
[26.54526329 60.01509094]
[33.93335724 59.68449402]
[40.56088257 65.98001862]
[54.31703949 71.96066284]
[68.07319641 77.94130707]
[79.48123932 67.06237793]
[94.27514648 61.61859131]
[94.97130585 46.63475418]
[95.66746521 31.65091896]
[86.83210754 15.49824047]
[96.86414337 1.10276949]
[97.32834625 -13.89004612]
[97.79254913 -28.88286209]
[86.78715515 -40.22556686]
[87.10920715 -56.02657318]
[98.56763458 -66.91142273]
[114.36434937 -66.42233276]
[125.12744904 -54.84946823]
[124.47137451 -39.05880356]
[112.78536224 -28.41866112]
[112.32115936 -13.42584515]
[111.85696411 1.56697011]
[119.91228485 10.59667110]
[119.64434052 23.09525490]
[110.65130615 32.34708023]
[109.95513916 47.33091736]
[109.25897980 62.31475449]
[121.95397949 68.00110626]
[131.82806396 77.79907227]
[137.61247253 90.44969177]
[152.59046936 89.63761139]
[167.56848145 88.82553101]
[182.54647827 88.01344299]
[197.52447510 87.20136261]
[201.49446106 77.59451294]
[208.49656677 69.98793793]
[217.64282227 65.28913116]
[227.79287720 64.04046631]
[237.69606018 66.35681915]
[246.14558411 71.91619110]
[258.81549072 63.88663101]
[264.39340210 56.64476776]
[271.74414062 55.83260345]
[284.53677368 48.00007629]
[297.32943726 40.16754532]
[310.12207031 32.33501434]
[317.47296143 17.67567062]
[333.85742188 16.98230171]
[342.42056274 30.96818733]
[334.35330200 45.24584961]
[317.95458984 45.12765121]
[305.16195679 52.96017838]
[292.36932373 60.79270935]
[279.57669067 68.62523651]
[266.84503174 76.55651855]
[254.17515564 84.58608246]
[254.70024109 86.50772858]
[255.09120178 88.46108246]
[270.01538086 89.96743011]
[280.37350464 78.56501007]
[295.28530884 75.48417664]
[308.98980713 81.70116425]
[316.31790161 94.64090729]
[331.24206543 96.14726257]
[346.16622925 97.65361023]
[361.09042358 99.15995789]
[376.01458740 100.66630554]
[390.73803711 93.44467926]
[404.20123291 102.80815887]
[402.55435181 119.12440491]
[387.49160767 125.60865784]
[374.50823975 115.59047699]
[359.58407593 114.08412933]
[344.65988159 112.57778168]
[329.73571777 111.07143402]
[314.81155396 109.56507874]
[305.04550171 120.77944946]
[290.37506104 124.13246155]
[276.37966919 118.13391876]
[268.50900269 104.89160156]
[253.58483887 103.38525391]
[253.34436035 103.99529266]
[253.09004211 104.59970093]
[264.81750488 113.95204926]
[276.54498291 123.30439758]
[288.27246094 132.65673828]
[304.42581177 137.80506897]
[303.95040894 154.75234985]
[287.53381348 158.98696899]
[278.92010498 144.38421631]
[267.19262695 135.03187561]
[255.46516418 125.67951965]
[243.73770142 116.32717896]
[217.64282227 120.97404480]
[198.33656311 102.17935944]
[183.35856628 102.99144745]
[168.38055420 103.80352783]
[153.40255737 104.61561584]
[138.42456055 105.42769623]
[131.12576294 123.17526245]
[116.21560669 135.25564575]
[97.34014130 138.71475220]
[93.43917847 153.19860840]
[89.53820801 167.68247986]
[85.63723755 182.16635132]
[81.73627472 196.65022278]
[93.16916656 186.93997192]
[107.78378296 183.56166077]
[122.31834412 187.26930237]
[133.52893066 197.23538208]
[138.91349792 211.23561096]
[137.27029419 226.14532471]
[128.96603394 238.63690186]
[115.85414124 245.92237854]
[100.86099243 246.37573242]
[87.33285522 239.89578247]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 27]
[2 26]
[6 22]
[7 21]
[8 20]
[9 19]
[10 18]
[11 17]
[12 16]
[28 192]
[29 191]
[30 190]
[31 189]
[32 188]
[37 91]
[38 90]
[39 89]
[40 87]
[41 86]
[42 85]
[43 84]
[44 83]
[46 82]
[47 81]
[48 79]
[49 78]
[50 77]
[51 73]
[52 72]
[53 71]
[54 70]
[55 69]
[56 67]
[57 66]
[59 65]
[60 64]
[93 113]
[94 112]
[95 111]
[97 108]
[98 107]
[99 106]
[116 185]
[117 184]
[118 183]
[119 182]
[120 181]
[126 142]
[127 141]
[129 140]
[130 139]
[131 138]
[132 137]
[144 167]
[145 166]
[149 162]
[150 161]
[151 160]
[152 159]
[153 158]
[169 179]
[170 178]
[171 177]
[172 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
