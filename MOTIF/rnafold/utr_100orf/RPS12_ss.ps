%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:40:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUUUCCCUGCCGCCGCCGAGUCGCGCGGAGGCGGAGGCUUGGGUGCGUUCAAGAUUCAACUUCACCCGUAACCCACCGCCAUGGCCGAGGAAGGCAUUGCUGCUGGAGGUGUAAUGGACGUUAAUACUGCUUUACAAGAGGUUCUGAAGACUGCCCUCAUCCACGAUGGCCUAGCACGUG\
) } def
/len { sequence length } bind def

/coor [
[4.21279716 543.43206787]
[-9.25658417 550.03326416]
[-24.12993431 551.97839355]
[-38.84388351 549.06292725]
[-51.85181046 541.59344482]
[-61.78643036 530.35498047]
[-67.60349274 516.52880859]
[-68.69154358 501.56832886]
[-64.93757629 487.04910278]
[-75.40674591 497.79138184]
[-85.87590790 508.53366089]
[-96.34506989 519.27593994]
[-106.81423187 530.01824951]
[-110.90489197 545.30145264]
[-125.32890320 549.01593018]
[-135.79806519 559.75817871]
[-146.26722717 570.50048828]
[-156.73638916 581.24279785]
[-167.11296082 592.07452393]
[-177.39617920 602.99493408]
[-183.85275269 618.67132568]
[-200.70385742 616.80670166]
[-203.57698059 600.09802246]
[-188.31658936 592.71173096]
[-178.03337097 581.79132080]
[-175.73114014 574.74865723]
[-167.47866821 570.77362061]
[-157.00950623 560.03131104]
[-146.54034424 549.28906250]
[-136.07118225 538.54675293]
[-132.72933960 524.03192139]
[-117.55651093 519.54907227]
[-107.08734894 508.80679321]
[-96.61818695 498.06451416]
[-86.14902496 487.32223511]
[-75.67986298 476.57995605]
[-66.88392639 464.42956543]
[-59.94818497 451.12936401]
[-53.01243973 437.82916260]
[-46.07669449 424.52896118]
[-39.14095306 411.22875977]
[-32.66585922 397.69830322]
[-26.65904999 383.95355225]
[-20.65224075 370.20880127]
[-14.64543247 356.46405029]
[-8.63862419 342.71926880]
[-2.63181567 328.97451782]
[-11.57906723 317.06604004]
[-13.37625599 302.17892456]
[-7.44130468 288.29934692]
[4.72394943 279.19421387]
[19.91238022 277.38900757]
[25.91918945 263.64425659]
[18.23665428 250.91174316]
[19.54009056 235.91957092]
[29.53842354 224.43537903]
[44.55542755 221.00088501]
[50.56223679 207.25613403]
[56.56904602 193.51136780]
[62.57585526 179.76661682]
[68.34583282 165.92077637]
[73.87727356 151.97792053]
[79.40872192 138.03507996]
[84.94016266 124.09221649]
[90.47160339 110.14936829]
[77.63707733 105.47486115]
[69.67891693 89.38497925]
[74.81409454 67.35972595]
[75.84331512 52.39508057]
[76.87253571 37.43043137]
[77.90175629 22.46578217]
[71.12958527 8.16724014]
[79.72193146 -3.99914336]
[80.75115204 -18.96379280]
[81.65188599 -33.93672180]
[82.42406464 -48.91683578]
[75.40744019 -63.09701538]
[83.78966522 -75.40910339]
[84.56185150 -90.38921356]
[85.20542145 -105.37540436]
[85.72033691 -120.36656189]
[85.97782898 -135.36434937]
[85.97782898 -150.36434937]
[75.08327484 -161.49748230]
[75.29695892 -176.70960999]
[85.97782898 -187.02729797]
[85.97782898 -202.02729797]
[85.97782898 -217.02729797]
[74.62669373 -228.02398682]
[74.45959473 -243.82739258]
[85.57568359 -255.06163025]
[101.37997437 -255.06163025]
[112.49606323 -243.82739258]
[112.32896423 -228.02398682]
[100.97782898 -217.02729797]
[100.97782898 -202.02729797]
[100.97782898 -187.02729797]
[111.65869904 -176.70960999]
[111.87238312 -161.49748230]
[100.97782898 -150.36434937]
[100.97782898 -135.36434937]
[103.67940521 -131.39859009]
[103.90148163 -125.68852234]
[100.71149445 -119.85165405]
[100.19657898 -104.86048889]
[103.11652374 -98.05068207]
[99.54196167 -89.61703491]
[98.76977539 -74.63692474]
[105.84163666 -61.52822113]
[97.40418243 -48.14465332]
[96.63199615 -33.16454315]
[99.43461609 -26.30561447]
[95.71579742 -17.93457031]
[94.68657684 -2.96992230]
[101.53236389 10.25824738]
[92.86640930 23.49500275]
[91.83718109 38.45965195]
[90.80796051 53.42430115]
[89.77873993 68.38894653]
[95.89145660 72.73460388]
[108.11688232 81.42592621]
[114.22959137 85.77158356]
[128.02540588 79.88297272]
[137.43026733 66.44866180]
[153.74136353 68.14572144]
[160.17924500 83.22834778]
[150.12115479 96.18083954]
[133.91400146 93.67877960]
[120.11820221 99.56739044]
[134.91264343 97.09259796]
[149.07350159 102.03933716]
[159.10899353 113.18782806]
[162.54457092 127.78908539]
[158.53309631 142.24273682]
[148.06372070 152.98480225]
[133.71797180 157.36651611]
[119.03321838 154.30743408]
[107.63042450 144.56185913]
[102.32128143 130.53285217]
[104.41445923 115.68080902]
[98.88301086 129.62365723]
[93.35157013 143.56651306]
[87.82012939 157.50936890]
[82.28868103 171.45222473]
[82.87432098 178.07809448]
[80.38421631 183.22138977]
[76.32061005 185.77342224]
[70.31379700 199.51818848]
[64.30699158 213.26293945]
[58.30018234 227.00769043]
[65.98030853 240.36140442]
[64.34382629 255.49995422]
[54.22668076 266.64028931]
[39.66394424 269.65106201]
[33.65713501 283.39581299]
[42.64941025 295.76861572]
[44.23081970 310.88137817]
[38.07625198 324.66497803]
[25.93003845 333.45846558]
[11.11293793 334.98132324]
[5.10612917 348.72610474]
[-0.90067923 362.47085571]
[-6.90748787 376.21560669]
[-12.91429615 389.96035767]
[-18.92110443 403.70510864]
[-18.27145386 408.05554199]
[-18.98296165 411.98483276]
[-20.75225830 415.11340332]
[-23.18316269 417.20089722]
[-25.84074593 418.16448975]
[-32.77648926 431.46469116]
[-39.71223450 444.76489258]
[-46.64797974 458.06509399]
[-53.58372498 471.36532593]
[-40.95980072 463.26367188]
[-26.40744591 459.62649536]
[-11.45629692 460.83612061]
[2.32209992 466.76535034]
[13.47946548 476.79095459]
[20.84302521 489.85916138]
[23.63877678 504.59631348]
[21.57285500 519.45336914]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 36]
[10 35]
[11 34]
[12 33]
[13 32]
[15 30]
[16 29]
[17 28]
[18 27]
[19 25]
[20 24]
[37 174]
[38 173]
[39 172]
[40 171]
[41 170]
[42 165]
[43 164]
[44 163]
[45 162]
[46 161]
[47 160]
[52 155]
[53 154]
[57 150]
[58 149]
[59 148]
[60 147]
[61 144]
[62 143]
[63 142]
[64 141]
[65 140]
[68 119]
[69 118]
[70 117]
[71 116]
[73 114]
[74 113]
[75 111]
[76 110]
[78 108]
[79 107]
[80 105]
[81 104]
[82 101]
[83 100]
[86 97]
[87 96]
[88 95]
[122 129]
[123 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
