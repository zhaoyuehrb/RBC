%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:34:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUUAAGGGGCGAGCUGGGCCGAGAACGCAGCGGCUGUUUGCGCCCCUUCUGCCUCCCGCGCGGCCAGCACCGGUACUUGCGAGCCAUGAGCCGCCAACUGACCCAUUUCCCCCGCGGGGAGCGCCUGGGCUUCAGCGGUUGCUCCGCGGUCCUCUCUGGCGGGAUCGGCAGCAGCUCCGCCUCAU\
) } def
/len { sequence length } bind def

/coor [
[98.62745667 408.34295654]
[83.56903839 411.69671631]
[69.09580994 406.35543823]
[59.82612610 394.02349854]
[58.71790314 378.63601685]
[66.12477112 365.10302734]
[79.68323517 357.74285889]
[80.69047546 342.77673340]
[81.69770813 327.81057739]
[82.70494843 312.84445190]
[83.71218872 297.87829590]
[84.71942902 282.91213989]
[85.60092163 267.93807983]
[86.35659790 252.95712280]
[87.11227417 237.97616577]
[87.86795044 222.99520874]
[88.62363434 208.01426697]
[79.79178619 192.85992432]
[89.89165497 177.47425842]
[90.39556122 162.48272705]
[90.89945984 147.49118042]
[91.40336609 132.49964905]
[91.90727234 117.50811768]
[82.74253082 110.40666199]
[79.01220703 98.89625549]
[82.55061340 86.79750061]
[92.67480469 78.46620941]
[106.23580933 77.22836304]
[102.25219727 62.76700974]
[98.26858521 48.30565262]
[94.28497314 33.84429550]
[90.30136108 19.38293839]
[79.17694092 8.13315105]
[83.25636292 -6.19191647]
[79.27275085 -20.65327263]
[75.28913879 -35.11463165]
[71.30552673 -49.57598495]
[60.97326660 -52.37710571]
[52.80531311 -59.17132568]
[48.23966217 -68.67499542]
[48.04352570 -79.13576508]
[52.18519974 -88.65557861]
[59.85200119 -95.53509521]
[56.60199356 -110.17877960]
[53.35198212 -124.82246399]
[50.10197067 -139.46614075]
[39.92394638 -142.78422546]
[32.10865021 -149.98130798]
[28.02757645 -159.70292664]
[28.35868454 -170.16029358]
[32.97469330 -179.45936584]
[40.97834396 -185.94390869]
[38.47018814 -200.73272705]
[35.83789444 -215.49995422]
[33.08164978 -230.24455261]
[30.32540894 -244.98915100]
[27.56916618 -259.73373413]
[24.81292343 -274.47833252]
[20.15093231 -282.35833740]
[22.13640785 -289.49365234]
[19.62825203 -304.28247070]
[17.12009430 -319.07128906]
[14.61193752 -333.86010742]
[12.10378075 -348.64892578]
[-2.84317064 -350.89526367]
[-16.34569168 -357.64245605]
[-27.08706474 -368.21841431]
[-34.02418137 -381.57849121]
[-36.48883820 -396.40847778]
[-34.25207520 -411.25393677]
[-27.54538918 -424.66290283]
[-17.03684044 -435.32781982]
[-3.76453090 -442.21307373]
[-6.27268791 -457.00189209]
[-8.78084469 -471.79071045]
[-25.37958527 -477.50833130]
[-36.74801636 -490.76934814]
[-39.83097458 -507.87176514]
[-33.86994934 -524.10076904]
[-20.58715057 -535.02850342]
[-23.59070206 -549.72473145]
[-26.59425163 -564.42089844]
[-31.38796234 -572.22149658]
[-29.52263451 -579.38916016]
[-32.27887726 -594.13372803]
[-44.64849472 -604.35003662]
[-44.22937393 -620.38757324]
[-31.34302521 -629.94384766]
[-15.87475491 -625.68798828]
[-9.69049454 -610.88482666]
[-17.53428078 -596.89001465]
[-14.77803707 -582.14538574]
[-11.89803886 -567.42449951]
[-8.89448833 -552.72827148]
[-5.89093733 -538.03204346]
[6.47603798 -535.33923340]
[16.94041443 -528.13671875]
[23.92304230 -517.46844482]
[26.35395432 -504.90438843]
[23.83619499 -492.30975342]
[16.71014214 -481.56793213]
[6.00797367 -474.29888916]
[8.51613045 -459.51007080]
[11.02428722 -444.72125244]
[25.82458305 -442.59704590]
[39.26186752 -435.99328613]
[50.01463318 -425.54541016]
[57.02105713 -412.26757812]
[59.58385086 -397.45425415]
[57.43963242 -382.55401611]
[50.78593445 -369.02786255]
[40.26308823 -358.20602417]
[26.89259911 -351.15707397]
[29.40075684 -336.36825562]
[31.90891266 -321.57943726]
[34.41706848 -306.79061890]
[36.92522812 -292.00180054]
[39.55751801 -277.23458862]
[42.31376266 -262.48999023]
[45.07000351 -247.74539185]
[47.82624817 -233.00079346]
[50.58248901 -218.25619507]
[54.91111374 -212.24638367]
[53.25900650 -203.24087524]
[55.76716232 -188.45205688]
[72.43365479 -178.39932251]
[76.42749786 -159.03901672]
[64.74565125 -142.71615601]
[67.99566650 -128.07246399]
[71.24567413 -113.42878723]
[74.49568176 -98.78511047]
[91.64746094 -89.58477020]
[96.61157227 -70.45024109]
[85.76688385 -53.55959702]
[89.75049591 -39.09823990]
[93.73410797 -24.63688469]
[97.71772003 -10.17552853]
[108.55721283 0.03988637]
[104.76271820 15.39932728]
[108.74633026 29.86068344]
[112.72994232 44.32204056]
[116.71355438 58.78339767]
[120.69716644 73.24475098]
[130.23132324 84.82490540]
[143.65876770 91.51098633]
[157.08621216 98.19705963]
[170.51367188 104.88313293]
[183.94111633 111.56921387]
[197.42425537 118.14225769]
[210.96212769 124.60182190]
[225.77514648 119.09272003]
[240.11006165 125.74745941]
[245.46224976 140.61788940]
[238.65632629 154.88165283]
[223.73013306 160.07630920]
[209.53912354 153.11996460]
[204.50256348 138.13969421]
[190.96469116 131.68013000]
[183.55842590 131.63714600]
[177.25503540 124.99665833]
[163.82759094 118.31058502]
[150.40014648 111.62451172]
[136.97268677 104.93843079]
[123.54524231 98.25235748]
[118.11022949 111.49256897]
[106.89880371 118.01202393]
[106.39489746 133.00355530]
[105.89099884 147.99508667]
[105.38709259 162.98661804]
[104.88318634 177.97816467]
[113.11235809 187.92782593]
[112.37184906 200.41659546]
[103.60458374 208.76994324]
[102.84890747 223.75088501]
[102.09323120 238.73184204]
[101.33754730 253.71279907]
[100.58187103 268.69375610]
[103.27917480 277.44323730]
[99.68556976 283.91940308]
[98.67833710 298.88552856]
[97.67109680 313.85168457]
[96.66385651 328.81781006]
[95.65661621 343.78396606]
[94.64937592 358.75012207]
[107.09934235 367.86065674]
[112.62605286 382.26409912]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 184]
[8 183]
[9 182]
[10 181]
[11 180]
[12 179]
[13 177]
[14 176]
[15 175]
[16 174]
[17 173]
[19 170]
[20 169]
[21 168]
[22 167]
[23 166]
[28 143]
[29 142]
[30 141]
[31 140]
[32 139]
[34 137]
[35 136]
[36 135]
[37 134]
[43 131]
[44 130]
[45 129]
[46 128]
[52 125]
[53 124]
[54 122]
[55 121]
[56 120]
[57 119]
[58 118]
[60 117]
[61 116]
[62 115]
[63 114]
[64 113]
[73 104]
[74 103]
[75 102]
[80 95]
[81 94]
[82 93]
[84 92]
[85 91]
[144 164]
[145 163]
[146 162]
[147 161]
[148 160]
[149 158]
[150 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
