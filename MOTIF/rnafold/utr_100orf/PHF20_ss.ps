%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:33:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGUCACGUGGUGCAGAGCACGCAGAGUCCUUCUGUCGGUUGGUCCUGGAGCGGCGCAGCCGGAGUGGGGCCGUGAGGAGAAUAAAGGCAGCCCCGUUGAUGACUGAAAAUGACAAAGCAUCCACCUAACAGACGAGGAAUCAGCUUUGAAGUGGGAGCCCAGUUGGAAGCCCGGGACCGUUUAAAAAACUGGUAUCCAGCUCACAUAG\
) } def
/len { sequence length } bind def

/coor [
[92.10942841 381.69076538]
[84.86754608 394.82678223]
[77.62566376 407.96279907]
[70.38378143 421.09884644]
[70.49699402 436.91964722]
[57.57653809 444.32983398]
[50.33465576 457.46588135]
[51.12530899 475.86340332]
[35.76052856 484.34289551]
[28.71409607 497.58480835]
[21.66766167 510.82669067]
[14.62122631 524.06860352]
[21.53967094 537.95794678]
[18.93964386 553.25567627]
[7.82090807 564.07940674]
[-7.54115582 566.26721191]
[-21.23952103 558.97790527]
[-28.00688553 545.01428223]
[-25.24106026 529.74572754]
[-14.00556087 519.04321289]
[1.37933230 517.02215576]
[8.42576694 503.78027344]
[15.47220135 490.53836060]
[22.51863670 477.29647827]
[19.28683472 465.64013672]
[25.04832840 454.55062866]
[37.19863129 450.22396851]
[44.44051743 437.08795166]
[43.80931854 422.20672607]
[57.24776077 413.85696411]
[64.48963928 400.72091675]
[71.73152161 387.58489990]
[78.97341156 374.44888306]
[65.05863953 364.65829468]
[54.09356689 351.81893921]
[46.71556473 336.77615356]
[43.32867432 320.49972534]
[44.08192825 304.02151489]
[48.86395645 288.36993408]
[57.31394196 274.50595093]
[68.84805298 263.26385498]
[82.69940186 255.30139160]
[97.96885681 251.06124878]
[113.68332672 250.74690247]
[116.55516052 236.02438354]
[119.42699432 221.30186462]
[122.29882050 206.57934570]
[125.17065430 191.85682678]
[128.04248047 177.13430786]
[130.91432190 162.41178894]
[133.78614807 147.68927002]
[101.72319031 161.02619934]
[66.19058228 153.93577576]
[39.57014847 127.18340302]
[24.80669022 124.53004456]
[10.04323101 121.87669373]
[-4.72022772 119.22334290]
[-21.37912560 122.37254333]
[-29.01689720 107.23647308]
[-16.58669281 95.70709991]
[-2.06687331 104.45988464]
[12.69658566 107.11323547]
[27.46004486 109.76658630]
[42.22350311 112.41994476]
[46.03748703 105.96212006]
[33.12195969 98.33393860]
[40.75035477 85.41853333]
[53.66545105 93.04646301]
[57.47943497 86.58863831]
[48.02811813 74.94078064]
[38.57680130 63.29291916]
[29.12548256 51.64506149]
[19.67416573 39.99720383]
[4.97064638 34.15621948]
[2.95954537 19.39801025]
[-6.49177217 7.75015211]
[-21.18685532 11.74695206]
[-36.23613358 9.41476536]
[-49.03223038 1.15765810]
[-57.35814285 -11.59377670]
[-59.77135468 -26.63027573]
[-55.85376740 -41.34667206]
[-46.28411865 -53.19326782]
[-32.72041702 -60.11756134]
[-17.51264954 -60.91987991]
[-3.29565668 -55.46121597]
[7.46738243 -44.68732071]
[12.91170692 -30.46483040]
[12.09405327 -15.25787926]
[5.15608549 -1.70116544]
[14.60740376 9.94669247]
[28.63490105 14.95454407]
[31.32202339 30.54588509]
[40.77334213 42.19374466]
[50.22465897 53.84160233]
[59.67597580 65.48945618]
[69.12729645 77.13732147]
[76.40421295 75.32170868]
[80.53610229 60.90201187]
[90.95805359 71.69048309]
[98.23497009 69.87487030]
[101.10680389 55.15234756]
[103.97863770 40.42982864]
[106.85046387 25.70730972]
[105.42199707 16.68605995]
[109.87547302 10.78862572]
[112.96515656 -3.88972211]
[101.12796783 -13.59227371]
[95.16633606 -27.68899536]
[96.45020294 -42.94055939]
[104.68453979 -55.84227371]
[117.97716522 -63.42941666]
[133.27352905 -63.95851517]
[147.05862427 -57.30799103]
[156.16476440 -45.00608444]
[158.49940491 -29.87968063]
[153.52606201 -15.40472031]
[142.38758850 -4.90744162]
[127.64350128 -0.80004281]
[124.55382538 13.87830448]
[121.57298279 28.57914162]
[118.70115662 43.30166245]
[115.82932281 58.02418137]
[112.95748901 72.74669647]
[119.52550507 76.36764526]
[132.66152954 83.60952759]
[139.22953796 87.23046875]
[150.14579773 76.94283295]
[161.06204224 66.65519714]
[158.95635986 51.28165436]
[166.31883240 37.62245560]
[180.31842041 30.92983818]
[195.57200623 33.77725220]
[206.21427917 45.06980515]
[208.15304565 60.46528244]
[200.64283752 74.04380798]
[186.57147217 80.58416748]
[171.34968567 77.57144928]
[160.43342590 87.85908508]
[149.51716614 98.14672089]
[152.23257446 105.13789368]
[163.85238647 95.65211487]
[176.46461487 103.77196503]
[172.63954163 118.27606201]
[157.66339111 119.12025452]
[160.37879944 126.11142731]
[175.37715149 126.33370209]
[190.37550354 126.55597687]
[205.37385559 126.77825165]
[220.37222290 127.00052643]
[234.28552246 119.46856689]
[246.89674377 127.39361572]
[261.89511108 127.61589050]
[275.80841064 120.08393860]
[288.41964722 128.00898743]
[303.41799927 128.23126221]
[318.41635132 128.45353699]
[332.46697998 119.99710846]
[346.68283081 128.17279053]
[346.43981934 144.57012939]
[331.98794556 152.32096863]
[318.19406128 143.45188904]
[303.19570923 143.22961426]
[288.19735718 143.00733948]
[275.35684204 150.55519104]
[261.67282104 142.61424255]
[246.67446899 142.39196777]
[233.83393860 149.93981934]
[220.14994812 141.99888611]
[205.15159607 141.77661133]
[190.15322876 141.55433655]
[175.15487671 141.33206177]
[160.15652466 141.10978699]
[148.50866699 150.56109619]
[145.63684082 165.28361511]
[142.76501465 180.00613403]
[139.89317322 194.72865295]
[137.02134705 209.45117188]
[134.14950562 224.17369080]
[131.27767944 238.89620972]
[128.40585327 253.61872864]
[141.25415039 258.84066772]
[152.73712158 266.82025146]
[162.26628113 277.20959473]
[169.34013367 289.53604126]
[173.57032776 303.22360229]
[174.70275879 317.61984253]
[172.63223267 332.02688599]
[167.41006470 345.73532104]
[159.24398804 358.05908203]
[148.49021912 368.36981201]
[135.63822937 376.12878418]
[142.08920288 389.67074585]
[148.54017639 403.21270752]
[154.99116516 416.75466919]
[167.26164246 428.45388794]
[159.41644287 443.48352051]
[142.80242920 440.10552979]
[141.44918823 423.20565796]
[134.99821472 409.66369629]
[128.54724121 396.12173462]
[122.09626007 382.57977295]
[114.59954834 382.35751343]
[114.15505219 397.35092163]
[113.71054840 412.34432983]
[113.26605225 427.33773804]
[112.82130432 442.33114624]
[97.82790375 441.88616943]
[98.27263641 426.89324951]
[98.71714020 411.89984131]
[99.16163635 396.90643311]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 33]
[2 32]
[3 31]
[4 30]
[6 28]
[7 27]
[9 24]
[10 23]
[11 22]
[12 21]
[44 181]
[45 180]
[46 179]
[47 178]
[48 177]
[49 176]
[50 175]
[51 174]
[54 64]
[55 63]
[56 62]
[57 61]
[69 97]
[70 96]
[71 95]
[72 94]
[73 93]
[75 91]
[76 90]
[101 124]
[102 123]
[103 122]
[104 121]
[106 120]
[107 119]
[127 140]
[128 139]
[129 138]
[146 173]
[147 172]
[148 171]
[149 170]
[150 169]
[152 167]
[153 166]
[155 164]
[156 163]
[157 162]
[192 202]
[193 201]
[194 200]
[195 199]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
