%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:59:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCCUCCUCACAGCUCCCCAUAGCCUGGACCUGCCGGCCCUCCCUCCAGGACCGAGGGGCUCCCAAGGGAAACUCAGGCGUGUGCUGGUCCCAAUGUCAGUGAAACCCAGCUGGGGGCCUGGCCCCUCGGAGGGGGUCACCGCAGUGCCUACCAGUGACCUUGGAGAGAUCCACAACUGGACCGAGCUGCUUG\
) } def
/len { sequence length } bind def

/coor [
[135.82359314 283.09063721]
[123.19230652 291.47076416]
[108.45588684 295.02233887]
[93.39381409 293.31646729]
[79.82492828 286.55917358]
[69.38772583 275.56640625]
[63.34255219 261.66561890]
[62.41939163 246.53541565]
[66.72972107 232.00279236]
[75.75305176 219.82267761]
[88.39975739 211.46585083]
[103.14270782 207.94145203]
[104.83074951 193.03674316]
[106.51879120 178.13201904]
[108.20683289 163.22731018]
[109.89488220 148.32260132]
[111.58292389 133.41787720]
[105.24399567 129.40939331]
[97.22701263 142.08723450]
[89.20982361 154.76496887]
[76.53222656 146.74758911]
[84.54915619 134.07025146]
[92.56614685 121.39240265]
[86.22721863 117.38391113]
[73.48519897 125.29851532]
[60.74318314 133.21311951]
[55.09501266 140.40934753]
[47.73152161 141.15068054]
[34.86365128 148.85897827]
[29.58260155 164.00790405]
[14.39887428 169.18806458]
[0.96012467 160.42565918]
[-0.42458841 144.44247437]
[11.30696869 133.49943542]
[27.15534782 135.99110413]
[40.02322006 128.28280640]
[52.82857895 120.47109985]
[65.57059479 112.55649567]
[78.31261444 104.64189148]
[76.51774597 97.35982513]
[72.92801666 82.79570007]
[71.13314819 75.51363373]
[56.17255020 74.42711639]
[41.21195221 73.34059143]
[26.25135422 72.25406647]
[11.29075718 71.16754913]
[-3.66983962 70.08102417]
[-14.43224049 81.42583466]
[-29.97479820 83.14715576]
[-42.95878983 74.43222809]
[-47.25357437 59.39597702]
[-40.83128357 45.13806152]
[-26.72432899 38.39062881]
[-11.59358120 42.33961487]
[-2.58331752 55.12042618]
[12.37727928 56.20695114]
[27.33787727 57.29347229]
[42.29847336 58.37999344]
[57.25907135 59.46651459]
[72.21966553 60.55303955]
[85.61208344 53.79706573]
[93.62907410 41.11921310]
[101.64605713 28.44136238]
[109.56066132 15.69934368]
[117.37236786 2.89398408]
[125.18407440 -9.91137600]
[132.99578857 -22.71673584]
[140.80749512 -35.52209473]
[148.61920166 -48.32745743]
[143.96141052 -60.97399521]
[147.39186096 -73.80569458]
[157.44026184 -82.19119263]
[170.29066467 -83.23813629]
[178.30764771 -95.91598511]
[186.32464600 -108.59384155]
[186.21305847 -128.74325562]
[203.68736267 -137.00384521]
[211.29176331 -149.93338013]
[218.89614868 -162.86293030]
[226.50054932 -175.79248047]
[234.10494995 -188.72201538]
[241.60494995 -201.71240234]
[249.00006104 -214.76277161]
[256.39517212 -227.81315613]
[263.79028320 -240.86352539]
[255.95106506 -255.19802856]
[259.90582275 -272.82702637]
[275.88729858 -284.51458740]
[279.00598145 -299.18679810]
[282.12463379 -313.85900879]
[285.24331665 -328.53121948]
[288.36199951 -343.20343018]
[291.48068237 -357.87567139]
[277.64099121 -352.09091187]
[264.41064453 -359.15899658]
[261.52517700 -373.87884521]
[271.10784912 -385.41885376]
[286.10729980 -385.28732300]
[295.48614502 -373.58090210]
[299.77532959 -387.95458984]
[304.06451416 -402.32827759]
[308.35369873 -416.70196533]
[298.82565308 -428.94924927]
[298.34973145 -444.45904541]
[307.10894775 -457.26745605]
[321.73516846 -462.44946289]
[336.60433960 -458.01242065]
[345.99896240 -445.66247559]
[346.30661011 -430.14846802]
[337.40896606 -417.43579102]
[322.72738647 -412.41278076]
[318.43820190 -398.03909302]
[314.14901733 -383.66540527]
[309.85983276 -369.29171753]
[306.15289307 -354.75698853]
[303.03421021 -340.08477783]
[299.91552734 -325.41256714]
[296.79684448 -310.74032593]
[293.67819214 -296.06811523]
[290.55950928 -281.39590454]
[302.62335205 -272.48165894]
[315.73287964 -279.77142334]
[328.84237671 -287.06115723]
[341.95190430 -294.35092163]
[355.06143188 -301.64068604]
[368.17095947 -308.93041992]
[381.28045654 -316.22018433]
[394.38998413 -323.50991821]
[402.34854126 -337.84844971]
[418.74768066 -337.85485840]
[426.71737671 -323.52252197]
[418.05911255 -309.59533691]
[401.67974854 -310.40039062]
[388.57022095 -303.11065674]
[375.46069336 -295.82089233]
[362.35116577 -288.53115845]
[349.24166870 -281.24139404]
[336.13214111 -273.95166016]
[323.02261353 -266.66189575]
[309.91308594 -259.37216187]
[298.57733154 -236.68368530]
[276.84066772 -233.46841431]
[269.44555664 -220.41802979]
[262.05044556 -207.36766052]
[254.65531921 -194.31729126]
[254.09214783 -186.93803406]
[247.03450012 -181.11761475]
[239.43009949 -168.18807983]
[231.82569885 -155.25852966]
[224.22129822 -142.32899475]
[216.61689758 -129.39944458]
[220.06465149 -119.76308441]
[217.58003235 -109.60832214]
[209.75042725 -102.35349274]
[199.00248718 -100.57685089]
[190.98550415 -87.89900208]
[182.96852112 -75.22114563]
[187.36358643 -58.99401093]
[178.49351501 -44.31667709]
[161.42456055 -40.51575089]
[153.61285400 -27.71039009]
[145.80114746 -14.90502930]
[137.98944092 -2.09966946]
[130.17773438 10.70569038]
[122.36602783 23.51105118]
[121.56540680 30.86833382]
[114.32391357 36.45835114]
[106.30692291 49.13619995]
[98.28993988 61.81405258]
[142.77818298 66.23673248]
[168.02888489 119.50520325]
[176.45014954 131.91819763]
[184.87139893 144.33119202]
[193.29264832 156.74418640]
[208.27920532 163.40264893]
[209.73678589 179.73689270]
[196.16595459 188.94364929]
[181.52720642 181.55180359]
[180.87965393 165.16545105]
[172.45840454 152.75245667]
[164.03713989 140.33944702]
[155.61589050 127.92646027]
[148.33383179 129.72132874]
[133.76969910 133.31106567]
[126.48764038 135.10592651]
[124.79959106 150.01063538]
[123.11154938 164.91535950]
[121.42350769 179.82006836]
[119.73546600 194.72477722]
[118.04741669 209.62950134]
[131.62873840 216.36177063]
[142.08618164 227.33528137]
[148.15696716 241.22489929]
[149.10800171 256.35339355]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 190]
[13 189]
[14 188]
[15 187]
[16 186]
[17 185]
[24 39]
[25 38]
[26 37]
[28 36]
[29 35]
[42 60]
[43 59]
[44 58]
[45 57]
[46 56]
[47 55]
[61 169]
[62 168]
[63 167]
[64 165]
[65 164]
[66 163]
[67 162]
[68 161]
[69 160]
[73 157]
[74 156]
[75 155]
[77 151]
[78 150]
[79 149]
[80 148]
[81 147]
[82 145]
[83 144]
[84 143]
[85 142]
[88 120]
[89 119]
[90 118]
[91 117]
[92 116]
[93 115]
[99 114]
[100 113]
[101 112]
[102 111]
[121 140]
[122 139]
[123 138]
[124 137]
[125 136]
[126 135]
[127 134]
[128 133]
[171 182]
[172 181]
[173 180]
[174 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
