%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:47:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGACAGGGGGAGCCCUAUAAUUGGACAAGUCUGGGAUCCUUGAGUCCUACUCAGCCCCAGCGGAGGUGAAGGACGUCCUUCCCCAGGAGCCGGUGAGAAGCGCAGUCGGGGGCACGGGGAUGAGCUCAGGGGCCUCUAGAAAGAGCUGGGACCCUGGGAACCCCUGGCCUCCAGACUGGCCAAUCACAGGCAGGAAGAUGAAGGUUCUGUGGGCUGCGU\
) } def
/len { sequence length } bind def

/coor [
[-36.76802826 280.73391724]
[-46.55426407 292.10183716]
[-56.34049988 303.46975708]
[-66.12673187 314.83767700]
[-75.91297150 326.20559692]
[-74.91983032 341.75073242]
[-85.00640869 353.14001465]
[-99.83244324 353.99099731]
[-109.61868286 365.35891724]
[-119.40491486 376.72683716]
[-129.19114685 388.09475708]
[-138.97738647 399.46267700]
[-142.11703491 414.96923828]
[-156.28430176 419.56680298]
[-166.07054138 430.93472290]
[-175.85678101 442.30264282]
[-168.19241333 455.36160278]
[-165.18600464 470.20208740]
[-167.16366577 485.21435547]
[-173.91087341 498.76992798]
[-184.69575500 509.39843750]
[-198.34841919 515.94696045]
[-213.38793945 517.70520020]
[-228.18295288 514.48242188]
[-241.12858582 506.62817383]
[-250.82061768 494.99447632]
[-256.20770264 480.84320068]
[-256.70550537 465.70944214]
[-252.26004028 451.23477173]
[-243.35350037 438.98925781]
[-230.95199585 430.30126953]
[-216.40075684 426.11315918]
[-201.27819824 426.87924194]
[-187.22470093 432.51641846]
[-177.43846130 421.14849854]
[-167.65222168 409.78057861]
[-165.21255493 395.08712769]
[-150.34530640 389.67645264]
[-140.55906677 378.30853271]
[-130.77284241 366.94061279]
[-120.98660278 355.57269287]
[-111.20036316 344.20477295]
[-112.56356812 329.41702271]
[-102.80087280 317.74893188]
[-87.28089142 316.41934204]
[-77.49465179 305.05142212]
[-67.70841980 293.68350220]
[-57.92218399 282.31558228]
[-48.13594818 270.94766235]
[-38.43075943 259.51046753]
[-28.80710602 248.00459290]
[-26.57654762 233.27795410]
[-11.78771210 227.65649414]
[-2.16405988 216.15060425]
[7.45959282 204.64472961]
[17.08324623 193.13883972]
[26.70689774 181.63296509]
[36.33055115 170.12709045]
[36.80775452 165.38182068]
[40.26619720 160.88391113]
[46.39500809 158.43597412]
[56.34184647 147.20831299]
[66.28868866 135.98065186]
[76.23552704 124.75299072]
[86.18236542 113.52532959]
[84.16282654 98.66190338]
[71.58083344 90.49530029]
[55.79275894 89.47197723]
[49.32962799 76.05268860]
[36.74763489 67.88608551]
[24.16563988 59.71947861]
[11.58364582 51.55287552]
[-0.99834752 43.38626862]
[-17.39449692 43.07270050]
[-25.08306122 28.58760452]
[-16.15470314 14.83200645]
[0.20584612 15.95648670]
[7.16825724 30.80427742]
[19.75025177 38.97088242]
[32.33224487 47.13748550]
[44.91423798 55.30409241]
[57.49623108 63.47069550]
[72.38436127 63.90989304]
[79.74744415 77.91330719]
[92.32943726 86.07991028]
[86.49672699 72.26037598]
[94.38458252 59.50178146]
[109.35389709 58.54286194]
[118.80520630 70.19072723]
[114.78341675 84.64158630]
[126.22060394 74.93640137]
[137.65779114 65.23120880]
[143.17401123 50.40279388]
[157.88441467 48.06761932]
[169.32160950 38.36243057]
[180.75880432 28.65723991]
[192.19598389 18.95205116]
[191.16760254 3.58167100]
[199.29200745 -9.29650593]
[213.27629089 -14.85560989]
[227.68008423 -11.15848351]
[239.11727905 -20.86367226]
[243.63143921 -28.79605103]
[250.78671265 -30.62412834]
[262.36071777 -40.16576004]
[273.93469238 -49.70738983]
[285.50869751 -59.24901962]
[297.08270264 -68.79064941]
[308.58856201 -78.41429901]
[320.02575684 -88.11949158]
[331.46295166 -97.82468414]
[342.90014648 -107.52986908]
[354.33734131 -117.23506165]
[365.77450562 -126.94024658]
[370.28866577 -134.87261963]
[377.44396973 -136.70069885]
[389.01794434 -146.24234009]
[400.59194946 -155.78396606]
[412.16592407 -165.32559204]
[423.73992920 -174.86721802]
[421.33883667 -187.12660217]
[424.35748291 -199.17434692]
[432.16412354 -208.74145508]
[443.23135376 -214.05305481]
[455.43460083 -214.15748596]
[466.45996094 -209.09625244]
[478.30050659 -218.30502319]
[490.14108276 -227.51377869]
[501.98162842 -236.72254944]
[513.82220459 -245.93130493]
[525.66271973 -255.14007568]
[537.50329590 -264.34884644]
[538.22534180 -275.19253540]
[544.66015625 -283.67651367]
[554.49377441 -287.14907837]
[564.40307617 -284.69250488]
[576.50061035 -293.56094360]
[588.59814453 -302.42941284]
[600.69567871 -311.29785156]
[612.79327393 -320.16629028]
[614.95098877 -335.82260132]
[627.59765625 -345.30081177]
[643.23028564 -342.97766113]
[652.57427979 -330.23147583]
[650.08599854 -314.62429810]
[637.24169922 -305.41561890]
[621.66168213 -308.06875610]
[609.56414795 -299.20031738]
[597.46661377 -290.33184814]
[585.36907959 -281.46340942]
[573.27154541 -272.59497070]
[566.78881836 -254.37338257]
[546.71203613 -252.50828552]
[534.87152100 -243.29951477]
[523.03094482 -234.09075928]
[511.19039917 -224.88198853]
[499.34982300 -215.67323303]
[487.50927734 -206.46446228]
[475.66873169 -197.25570679]
[477.06289673 -179.64514160]
[467.51785278 -164.59347534]
[450.69952393 -158.23439026]
[433.28155518 -163.29322815]
[421.70755005 -153.75160217]
[410.13357544 -144.20997620]
[398.55957031 -134.66833496]
[386.98559570 -125.12670898]
[375.47970581 -115.50305939]
[364.04251099 -105.79786682]
[352.60531616 -96.09268188]
[341.16815186 -86.38748932]
[329.73095703 -76.68230438]
[318.29376221 -66.97711182]
[315.22970581 -60.25762558]
[306.62432861 -57.21665573]
[295.05032349 -47.67502594]
[283.47634888 -38.13339615]
[271.90234375 -28.59176636]
[260.32833862 -19.05013657]
[248.82246399 -9.42648315]
[237.38528442 0.27870587]
[238.68890381 15.09216499]
[230.92797852 27.98526764]
[216.89926147 33.90543747]
[201.90118408 30.38924217]
[190.46398926 40.09442902]
[179.02679443 49.79961777]
[167.58961487 59.50481033]
[162.89146423 73.63904572]
[147.36297607 76.66839600]
[135.92579651 86.37358856]
[124.48860168 96.07878113]
[139.33918762 93.96690369]
[153.99481201 97.16262817]
[166.61808777 105.26529694]
[175.62638855 117.25906372]
[179.89035034 131.64024353]
[178.87539673 146.60586548]
[172.70877075 160.27966309]
[162.16357422 170.94732666]
[148.56190491 177.27143860]
[133.60899353 178.45913696]
[119.17952728 174.36151123]
[107.08254242 165.49229431]
[98.83466339 152.96343994]
[95.46992493 138.34568787]
[97.41002655 123.47217560]
[87.46318817 134.69982910]
[77.51634979 145.92749023]
[67.56951141 157.15515137]
[57.62266922 168.38281250]
[47.83643341 179.75073242]
[38.21278000 191.25662231]
[28.58912659 202.76249695]
[18.96547508 214.26838684]
[9.34182167 225.77426147]
[-0.28183118 237.28015137]
[-3.20073843 252.82975769]
[-17.30122566 257.62826538]
[-26.92487907 269.13412476]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 49]
[2 48]
[3 47]
[4 46]
[5 45]
[8 42]
[9 41]
[10 40]
[11 39]
[12 38]
[14 36]
[15 35]
[16 34]
[50 220]
[51 219]
[53 217]
[54 216]
[55 215]
[56 214]
[57 213]
[58 212]
[61 211]
[62 210]
[63 209]
[64 208]
[65 207]
[66 85]
[67 84]
[69 82]
[70 81]
[71 80]
[72 79]
[73 78]
[90 192]
[91 191]
[92 190]
[94 188]
[95 187]
[96 186]
[97 185]
[101 181]
[102 180]
[104 179]
[105 178]
[106 177]
[107 176]
[108 175]
[109 173]
[110 172]
[111 171]
[112 170]
[113 169]
[114 168]
[116 167]
[117 166]
[118 165]
[119 164]
[120 163]
[126 159]
[127 158]
[128 157]
[129 156]
[130 155]
[131 154]
[132 153]
[136 151]
[137 150]
[138 149]
[139 148]
[140 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
