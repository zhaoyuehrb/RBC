%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:16:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGGCACUUCCGCUCCAGGAAGGCGAGGUCGGAUCUGAGAUAUCUCCCAGGGAGGUUCACUUCCCCGGAACUCUGCCUUUUCCCAGAAGGAGGAGGGGAAAAAUGACCAAGUUCCAGGAGGCAGUGACAUUCAAGGAUGUGGCUGUGGCCUUCACUGAGGAGGAGCUGGGGCUGCUGGACUCUGCCCAGAGGAAGCUGUACC\
) } def
/len { sequence length } bind def

/coor [
[91.67122650 263.57104492]
[91.67122650 248.57104492]
[83.34057617 239.79542542]
[83.22111511 227.29507446]
[91.92252350 217.76918030]
[92.15351105 202.77096558]
[92.38449860 187.77273560]
[92.50000000 172.77319336]
[92.50000000 157.77319336]
[92.50000000 142.77319336]
[92.50000000 127.77318573]
[92.50000000 112.77318573]
[89.74375916 98.02858734]
[84.32513428 84.04150391]
[78.90650940 70.05442047]
[73.48788452 56.06734085]
[68.06925964 42.08025742]
[62.11627960 28.31210327]
[55.63777161 14.78328514]
[49.05528259 1.30475175]
[42.36920929 -12.12269783]
[35.68313217 -25.55014610]
[28.99705696 -38.97759628]
[22.31098175 -52.40504456]
[15.62490749 -65.83249664]
[-1.05860174 -71.08479309]
[-8.63502979 -86.47386932]
[-2.85583401 -102.26485443]
[-9.74789047 -115.58774567]
[-16.63994789 -128.91064453]
[-23.53200340 -142.23353577]
[-30.42406082 -155.55644226]
[-43.63704681 -164.25859070]
[-42.61263657 -179.11793518]
[-49.50469208 -192.44082642]
[-56.39675140 -205.76371765]
[-63.28880692 -219.08660889]
[-78.08061218 -223.96925354]
[-84.88034821 -237.57875061]
[-80.13434601 -251.65039062]
[-87.02639771 -264.97326660]
[-108.40164948 -267.76477051]
[-121.62761688 -287.66079712]
[-136.62049866 -287.19888306]
[-151.61338806 -286.73693848]
[-166.60627747 -286.27502441]
[-181.59915161 -285.81311035]
[-196.59204102 -285.35116577]
[-212.23747253 -278.81991577]
[-222.84454346 -292.04589844]
[-213.07179260 -305.89974976]
[-197.05397034 -300.34405518]
[-182.06108093 -300.80596924]
[-167.06819153 -301.26791382]
[-152.07531738 -301.72982788]
[-137.08242798 -302.19177246]
[-122.08953857 -302.65368652]
[-113.23542786 -314.76171875]
[-117.34037018 -329.18911743]
[-121.44532013 -343.61648560]
[-125.55026245 -358.04388428]
[-129.65521240 -372.47125244]
[-140.87373352 -383.62719727]
[-136.91477966 -397.98605347]
[-141.01972961 -412.41342163]
[-145.23564148 -426.80877686]
[-149.56227112 -441.17123413]
[-153.99935913 -455.49996948]
[-158.54666138 -469.79409790]
[-163.09394836 -484.08822632]
[-167.64123535 -498.38235474]
[-172.18852234 -512.67645264]
[-176.73580933 -526.97058105]
[-188.83811951 -528.61065674]
[-199.22348022 -536.83843994]
[-204.35496521 -550.17333984]
[-201.84294128 -565.29418945]
[-208.52900696 -578.72161865]
[-215.21508789 -592.14910889]
[-221.90116882 -605.57653809]
[-228.58723450 -619.00396729]
[-235.27331543 -632.43145752]
[-241.95938110 -645.85888672]
[-248.64546204 -659.28631592]
[-263.33868408 -665.72747803]
[-267.32446289 -681.26751709]
[-257.54522705 -693.98547363]
[-241.50279236 -694.12518311]
[-231.50352478 -681.57952881]
[-235.21801758 -665.97241211]
[-228.53193665 -652.54498291]
[-221.84585571 -639.11749268]
[-215.15979004 -625.69006348]
[-208.47370911 -612.26263428]
[-201.78764343 -598.83514404]
[-195.10156250 -585.40771484]
[-188.41548157 -571.98028564]
[-173.73847961 -575.07635498]
[-173.04573059 -590.06036377]
[-185.24833679 -599.64556885]
[-189.45401001 -614.58178711]
[-184.04559326 -629.12585449]
[-171.10272217 -637.68511963]
[-155.60220337 -636.96850586]
[-143.50430298 -627.25146484]
[-139.46090698 -612.27050781]
[-145.02677917 -597.78601074]
[-158.06173706 -589.36755371]
[-158.75448608 -574.38360596]
[-149.59080505 -549.93292236]
[-162.44168091 -531.51788330]
[-157.89439392 -517.22375488]
[-153.34710693 -502.92962646]
[-148.79981995 -488.63549805]
[-144.25253296 -474.34136963]
[-139.70523071 -460.04724121]
[-134.67898560 -454.62316895]
[-135.19981384 -445.49786377]
[-130.87318420 -431.13540649]
[-125.93105316 -425.63455200]
[-126.59234619 -416.51837158]
[-122.48740387 -402.09097290]
[-111.56248474 -391.96697998]
[-115.22782135 -376.57620239]
[-111.12287903 -362.14883423]
[-107.01792908 -347.72143555]
[-102.91298676 -333.29406738]
[-98.80804443 -318.86666870]
[-79.89253235 -316.10708618]
[-67.22222900 -303.04513550]
[-65.25577545 -285.87780762]
[-73.70350647 -271.86532593]
[-66.81144714 -258.54244995]
[-52.58410263 -254.28588867]
[-45.40478516 -240.87275696]
[-49.96591187 -225.97866821]
[-43.07385254 -212.65577698]
[-36.18179703 -199.33288574]
[-29.28974152 -186.00997925]
[-16.56971931 -178.26077271]
[-17.10116386 -162.44848633]
[-10.20910835 -149.12559509]
[-3.31705141 -135.80270386]
[3.57500529 -122.47980499]
[10.46706200 -109.15690613]
[23.17476845 -107.00581360]
[32.46062851 -97.78948975]
[34.77517319 -84.71504211]
[29.05235672 -72.51856995]
[35.73843002 -59.09112167]
[42.42450714 -45.66367340]
[49.11058426 -32.23622131]
[55.79665756 -18.80877304]
[62.48273468 -5.38132381]
[68.28151703 -0.79241234]
[69.16658783 8.30477715]
[75.64509583 21.83359528]
[83.04437256 8.78557777]
[97.83349609 6.27921200]
[109.11871338 16.16070175]
[108.58727264 31.15128326]
[96.63063049 40.20881271]
[82.05634308 36.66163254]
[87.47496796 50.64871597]
[92.89359283 64.63579559]
[98.31221771 78.62287903]
[103.73084259 92.60996246]
[114.75364685 84.82807159]
[129.95259094 83.81254578]
[146.07264709 91.06443024]
[156.51464844 101.83310699]
[166.95666504 112.60178375]
[177.39866638 123.37046814]
[192.06138611 118.98145294]
[207.08201599 121.92065430]
[219.00895691 131.51268005]
[225.10147095 145.55332947]
[223.95953369 160.81617737]
[215.84556580 173.79393005]
[202.62409973 181.50439453]
[187.33332825 182.17576599]
[173.48695374 175.65376282]
[164.26676941 163.43710327]
[161.79151917 148.33306885]
[166.62998962 133.81246948]
[156.18798828 123.04379272]
[145.74597168 112.27511597]
[135.30397034 101.50643921]
[128.35296631 104.32312775]
[126.28065491 119.17928314]
[114.45098877 109.95649719]
[107.50000000 112.77318573]
[107.50000000 127.77318573]
[107.50000000 142.77319336]
[107.50000000 157.77319336]
[107.50000000 172.77319336]
[110.63081360 181.36039734]
[107.38272095 188.00373840]
[107.15173340 203.00195312]
[106.92074585 218.00018311]
[116.25283051 233.87149048]
[106.67122650 248.57104492]
[106.67122650 263.57104492]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 203]
[2 202]
[5 200]
[6 199]
[7 198]
[8 196]
[9 195]
[10 194]
[11 193]
[12 192]
[13 167]
[14 166]
[15 165]
[16 164]
[17 163]
[18 157]
[19 156]
[20 154]
[21 153]
[22 152]
[23 151]
[24 150]
[25 149]
[28 145]
[29 144]
[30 143]
[31 142]
[32 141]
[34 139]
[35 138]
[36 137]
[37 136]
[40 133]
[41 132]
[43 57]
[44 56]
[45 55]
[46 54]
[47 53]
[48 52]
[58 128]
[59 127]
[60 126]
[61 125]
[62 124]
[64 122]
[65 121]
[66 119]
[67 118]
[68 116]
[69 115]
[70 114]
[71 113]
[72 112]
[73 111]
[77 97]
[78 96]
[79 95]
[80 94]
[81 93]
[82 92]
[83 91]
[84 90]
[98 109]
[99 108]
[170 188]
[171 187]
[172 186]
[173 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
