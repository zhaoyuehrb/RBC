%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:18:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUUUUCUUUCGUCGUCGUGGGUGGGAAUUGUCGCCUAAGUGGUUCCGGGUUGGUGGAUGACCUUGAGCCCUCAGGAACGAGAUGGCGGUUCUCUGGAGGCUGAGUGCCGUUUGCGGUGCCCUAGGAGGCCGAGCUCUGUUGCUUCGAACUCCAGUGGUCAGACCUGCUCAUAUCUCAGCAU\
) } def
/len { sequence length } bind def

/coor [
[333.89141846 152.14514160]
[330.64202881 149.18727112]
[315.87985229 146.52682495]
[308.85815430 159.72746277]
[298.08551025 170.12553406]
[284.60812378 176.69364929]
[269.74038696 178.77729797]
[254.93659973 176.15991211]
[241.64874268 169.08546448]
[231.18403625 158.23565674]
[224.57638550 144.66432190]
[222.48420715 129.69500732]
[207.72203064 127.03455353]
[192.95985413 124.37410736]
[178.19766235 121.71365356]
[163.43548584 119.05320740]
[148.67330933 116.39275360]
[133.91111755 113.73230743]
[119.14894104 111.07186127]
[105.11594391 128.35435486]
[77.41217804 127.39332581]
[64.50753784 135.03990173]
[51.60289383 142.68649292]
[38.69824982 150.33306885]
[25.79360962 157.97966003]
[12.88896656 165.62623596]
[-0.01567608 173.27281189]
[-3.68973970 188.64411926]
[-17.20038033 196.84399414]
[-32.53197479 193.00762939]
[-40.58856201 179.41104126]
[-36.59030533 164.12086487]
[-22.90930748 156.20848083]
[-7.66225719 160.36817932]
[5.24238539 152.72158813]
[18.14702797 145.07501221]
[31.05167007 137.42843628]
[43.95631409 129.78184509]
[56.86095428 122.13526917]
[69.76559448 114.48868561]
[69.89295197 106.98976898]
[54.89511871 106.73482513]
[55.15029526 91.73699188]
[70.14766693 91.99192810]
[70.27502441 84.49301147]
[57.63747406 76.41264343]
[44.99992371 68.33227539]
[32.36237717 60.25190353]
[19.72482681 52.17153168]
[6.88557482 44.41565704]
[-6.14705181 36.98931122]
[-19.17967796 29.56296349]
[-32.21230316 22.13661385]
[-45.24493027 14.71026707]
[-59.33581161 20.93548012]
[-74.21647644 17.70760155]
[-84.22472382 6.46931791]
[-85.67890930 -8.33012009]
[-98.71153259 -15.75646782]
[-115.09842682 -15.12261391]
[-123.61068726 -29.13951111]
[-115.49163818 -43.38777542]
[-99.09345245 -43.21001434]
[-91.28518677 -28.78909492]
[-78.25255585 -21.36274719]
[-64.77915955 -27.65603828]
[-50.00883102 -24.77481270]
[-39.64611053 -13.61831760]
[-37.81858444 1.67764032]
[-24.78595734 9.10398769]
[-11.75333023 16.53033638]
[1.27929616 23.95668411]
[14.31192303 31.38303185]
[17.81046677 30.79561234]
[21.76798820 31.88798141]
[25.38523865 34.85746002]
[27.80519676 39.53398514]
[40.44274521 47.61435318]
[53.08029556 55.69472504]
[65.71784210 63.77509308]
[78.35539246 71.85546112]
[100.95194244 68.97147369]
[117.46570587 79.96221161]
[121.80939484 96.30967712]
[136.57157898 98.97012329]
[151.33375549 101.63057709]
[166.09593201 104.29102325]
[180.85812378 106.95147705]
[195.62030029 109.61192322]
[210.38247681 112.27236938]
[225.14466858 114.93282318]
[232.33103943 101.63569641]
[243.26075745 91.22494507]
[256.85476685 84.71101379]
[271.77630615 82.72048187]
[286.56243896 85.43582153]
[299.76736450 92.57872772]
[310.10385132 103.43860626]
[316.56875610 116.94323730]
[318.54031372 131.76463318]
[333.30249023 134.42509460]
[348.14648438 136.58273315]
[363.05520630 138.23507690]
[377.96392822 139.88742065]
[392.87261963 141.53976440]
[407.78134155 143.19210815]
[422.69006348 144.84445190]
[428.51464844 132.70443726]
[437.78552246 122.97084045]
[449.58755493 116.58403778]
[462.76208496 114.15505981]
[476.02056885 115.90715027]
[488.07070923 121.65534973]
[497.74237061 130.82586670]
[504.10119629 142.51335144]
[506.53881836 155.57028198]
[521.38281250 157.72792053]
[536.24462891 159.75944519]
[551.12316895 161.66471863]
[566.00164795 163.56999207]
[580.92382812 165.09568787]
[595.88006592 166.24082947]
[610.83630371 167.38597107]
[625.80169678 168.40408325]
[640.77520752 169.29508972]
[649.55072021 166.67657471]
[655.99475098 170.33049011]
[670.95098877 171.47563171]
[685.90722656 172.62077332]
[700.86346436 173.76591492]
[712.79577637 163.75308228]
[727.94720459 165.12748718]
[737.41937256 176.56486511]
[752.37561035 177.71000671]
[767.33184814 178.85514832]
[782.29724121 179.87326050]
[797.27075195 180.76426697]
[808.92230225 170.08638000]
[824.70770264 170.85830688]
[835.26184082 182.62208557]
[834.32305908 198.39846802]
[822.44830322 208.82760620]
[806.68273926 207.72207642]
[796.37976074 195.73777771]
[781.40625000 194.84677124]
[774.52667236 197.59426880]
[766.18670654 193.81137085]
[751.23046875 192.66622925]
[736.27423096 191.52108765]
[725.17126465 201.38310242]
[709.98718262 200.43482971]
[699.71832275 188.72213745]
[684.76208496 187.57699585]
[669.80584717 186.43185425]
[654.84960938 185.28671265]
[639.88421631 184.26860046]
[624.91070557 183.37759399]
[618.03112793 186.12509155]
[609.69116211 182.34219360]
[594.73492432 181.19705200]
[579.77868652 180.05191040]
[576.86669922 182.07797241]
[572.82189941 182.78147888]
[568.28259277 181.64247131]
[564.09637451 178.44848633]
[549.21789551 176.54322815]
[534.33935547 174.63795471]
[527.28918457 176.91218567]
[519.22521973 172.57192993]
[504.38119507 170.41429138]
[496.21694946 184.90396118]
[483.09069824 195.17668152]
[466.99285889 199.63897705]
[450.37823486 197.58113098]
[435.79165649 189.28999329]
[425.47824097 176.00929260]
[421.03771973 159.75315857]
[406.12899780 158.10081482]
[391.22027588 156.44847107]
[376.31158447 154.79612732]
[361.40286255 153.14378357]
[346.49414062 151.49143982]
[344.21398926 153.15914917]
[341.12844849 154.01348877]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 101]
[3 100]
[12 91]
[13 90]
[14 89]
[15 88]
[16 87]
[17 86]
[18 85]
[19 84]
[21 40]
[22 39]
[23 38]
[24 37]
[25 36]
[26 35]
[27 34]
[45 81]
[46 80]
[47 79]
[48 78]
[49 77]
[50 73]
[51 72]
[52 71]
[53 70]
[54 69]
[58 65]
[59 64]
[102 182]
[103 181]
[104 180]
[105 179]
[106 178]
[107 177]
[116 170]
[117 169]
[118 167]
[119 166]
[120 165]
[121 161]
[122 160]
[123 159]
[124 157]
[125 156]
[127 155]
[128 154]
[129 153]
[130 152]
[133 149]
[134 148]
[135 147]
[136 145]
[137 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
