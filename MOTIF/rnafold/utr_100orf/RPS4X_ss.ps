%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:33:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCGGAGCAGCUGAAAAUCCGGCGCGCGCAGUCUCCAGCCCCAAUUUCUACGCGCACCGGAAGACGGAGGUCCUCUUUCCUUGCCUAACGCAGCCAUGGCUCGUGGUCCCAAGAAGCAUCUGAAGCGGGUGGCAGCUCCAAAGCAUUGGAUGCUGGAUAAAUUGACCGGUGUGUUUGCUCCUCGUCCAUCCACCG\
) } def
/len { sequence length } bind def

/coor [
[193.80889893 756.23565674]
[191.90043640 741.35760498]
[189.99195862 726.47949219]
[188.08348083 711.60137939]
[185.93800354 696.75561523]
[183.55604553 681.94592285]
[181.17410278 667.13629150]
[178.79214478 652.32659912]
[176.41020203 637.51696777]
[174.02824402 622.70727539]
[159.32528687 619.73693848]
[151.38101196 632.46044922]
[143.43672180 645.18402100]
[135.49244690 657.90753174]
[139.29682922 673.24713135]
[131.06878662 686.74060059]
[115.68986511 690.38262939]
[102.28410339 682.01239014]
[98.80490112 666.59582520]
[107.31641388 653.27929688]
[122.76890564 649.96325684]
[130.71319580 637.23974609]
[138.65747070 624.51617432]
[146.60174561 611.79266357]
[151.07746887 597.47595215]
[151.79481506 582.49310303]
[152.51216125 567.51025391]
[153.22952271 552.52746582]
[153.94686890 537.54461670]
[154.66421509 522.56176758]
[145.79541016 507.42443848]
[155.86804199 492.01577759]
[156.34637451 477.02340698]
[156.82470703 462.03103638]
[156.58551025 447.03292847]
[155.62933350 432.06344604]
[154.67314148 417.09396362]
[153.71696472 402.12445068]
[152.76078796 387.15496826]
[151.80459595 372.18548584]
[141.30471802 358.13034058]
[149.59815979 341.69549561]
[148.40338135 326.74316406]
[147.20861816 311.79080200]
[146.01383972 296.83847046]
[144.81907654 281.88613892]
[121.70926666 275.38546753]
[113.90255737 254.23986816]
[125.62438202 236.72547913]
[122.07038879 222.15258789]
[118.51639557 207.57969666]
[114.96240234 193.00680542]
[104.42990875 182.47514343]
[108.67717743 167.23469543]
[105.12319183 152.66180420]
[101.56919861 138.08891296]
[79.05033875 141.27687073]
[54.75876236 130.31111145]
[37.57316589 104.97105408]
[35.69293213 70.40042877]
[23.85969353 61.18227386]
[12.02645302 51.96411896]
[0.19321254 42.74596024]
[-11.64002800 33.52780151]
[-23.47326851 24.30964470]
[-32.17722321 21.49979401]
[-35.42015839 14.84892559]
[-47.10489655 5.44324207]
[-63.38383102 3.46125555]
[-69.55701447 -11.73163319]
[-59.27399826 -24.50628281]
[-43.11307526 -21.72122955]
[-37.69921112 -6.24149656]
[-26.01447296 3.16418767]
[-14.25511074 12.47640419]
[-2.42187023 21.69456291]
[9.41137028 30.91271973]
[21.24460983 40.13087845]
[33.07785034 49.34903336]
[44.91109085 58.56719208]
[51.00671387 54.19759750]
[63.19796371 45.45840454]
[69.29358673 41.08880997]
[64.36360168 26.92211533]
[59.43361282 12.75542164]
[45.67544174 4.50361967]
[43.69178009 -11.41632557]
[55.00432968 -22.79199409]
[70.93506622 -20.89694595]
[79.26329041 -7.18490076]
[73.60030365 7.82543468]
[78.53029633 21.99212837]
[83.46028137 36.15882111]
[98.33837891 34.25035095]
[99.53314972 19.29800797]
[100.72792053 4.34566593]
[101.92269135 -10.60667610]
[103.11746216 -25.55901718]
[104.31223297 -40.51136017]
[99.54671478 -56.78176498]
[113.86203766 -65.86514282]
[126.55331421 -54.62379837]
[119.26457214 -39.31658936]
[118.06980133 -24.36424637]
[116.87503052 -9.41190529]
[115.68025970 5.54043674]
[114.48548889 20.49277878]
[113.29071808 35.44512177]
[120.35418701 37.96651459]
[125.39720917 23.83966446]
[139.52397156 28.88292122]
[134.48112488 43.00930405]
[141.54458618 45.53069687]
[150.08825684 33.20164108]
[158.63192749 20.87258148]
[159.44160461 4.49343491]
[174.15277100 -2.75319862]
[187.63183594 6.58739710]
[186.01271057 22.90641785]
[170.96098328 29.41625404]
[162.41731262 41.74531174]
[153.87364197 54.07437134]
[160.73825073 84.74593353]
[153.21664429 111.55515289]
[136.17610168 128.87832642]
[116.14208984 134.53492737]
[119.69607544 149.10781860]
[123.25006866 163.68070984]
[134.03677368 175.25471497]
[129.53529358 189.45280457]
[133.08927917 204.02569580]
[136.64328003 218.59858704]
[140.19726562 233.17147827]
[150.95587158 235.27334595]
[160.11112976 242.57833862]
[165.16986084 253.96942139]
[179.77061462 250.53173828]
[194.37138367 247.09405518]
[205.93905640 235.46989441]
[221.71815491 239.93667603]
[225.47648621 255.89935303]
[213.34780884 266.93688965]
[197.80906677 261.69482422]
[183.20829773 265.13250732]
[168.60752869 268.57019043]
[159.77142334 280.69134521]
[160.96618652 295.64370728]
[162.16096497 310.59603882]
[163.35572815 325.54837036]
[164.55050659 340.50073242]
[173.84860229 349.45077515]
[174.52999878 361.93695068]
[166.77409363 371.22927856]
[167.73027039 386.19879150]
[168.68646240 401.16827393]
[169.64263916 416.13775635]
[170.59881592 431.10726929]
[171.55500793 446.07675171]
[182.30490112 435.61541748]
[197.30479431 435.67175293]
[207.97576904 446.21359253]
[208.21475220 461.21170044]
[197.88507080 472.08816528]
[182.89459229 472.62240601]
[171.81707764 462.50936890]
[171.33874512 477.50173950]
[170.86041260 492.49411011]
[179.10362244 502.42422485]
[178.38983154 514.90856934]
[169.64704895 523.27911377]
[168.92970276 538.26196289]
[168.21235657 553.24481201]
[167.49501038 568.22766113]
[166.77764893 583.21044922]
[166.06030273 598.19329834]
[180.15895081 602.92749023]
[188.83792114 620.32531738]
[191.21986389 635.13500977]
[193.60182190 649.94464111]
[195.98376465 664.75433350]
[198.36572266 679.56402588]
[200.74766541 694.37365723]
[204.62854004 699.74932861]
[205.12814331 705.42498779]
[202.96157837 709.69293213]
[204.87005615 724.57098389]
[206.77853394 739.44909668]
[208.68699646 754.32720947]
[222.66487122 760.85583496]
[230.87483215 773.91717529]
[230.69712830 789.34356689]
[222.18844604 802.21234131]
[208.06388855 808.41723633]
[192.83055115 805.97821045]
[181.34931946 795.67358398]
[177.28382874 780.79156494]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 188]
[2 187]
[3 186]
[4 185]
[5 182]
[6 181]
[7 180]
[8 179]
[9 178]
[10 177]
[11 24]
[12 23]
[13 22]
[14 21]
[25 175]
[26 174]
[27 173]
[28 172]
[29 171]
[30 170]
[32 167]
[33 166]
[34 165]
[35 158]
[36 157]
[37 156]
[38 155]
[39 154]
[40 153]
[42 150]
[43 149]
[44 148]
[45 147]
[46 146]
[49 133]
[50 132]
[51 131]
[52 130]
[54 128]
[55 127]
[56 126]
[60 80]
[61 79]
[62 78]
[63 77]
[64 76]
[65 75]
[67 74]
[68 73]
[83 93]
[84 92]
[85 91]
[94 108]
[95 107]
[96 106]
[97 105]
[98 104]
[99 103]
[113 122]
[114 121]
[115 120]
[136 145]
[137 144]
[138 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
