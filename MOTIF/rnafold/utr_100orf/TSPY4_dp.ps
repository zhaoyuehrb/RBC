%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:29:39 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TSPY4)
} def

/sequence { (\
AUGCGCCCUGAGGGCUCGCUGACCUACCGGGUGCCAGAGAGGCUGCGGCAGGGUUUCUGUGGCGUGGGUCGGGCAGCACAGGCCUUGGUGUGUGCGAGUG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 93 0.356691291 ubox
1 99 0.054271549 ubox
2 18 0.249918388 ubox
2 75 0.264020746 ubox
2 92 0.370548933 ubox
2 94 0.232017968 ubox
2 96 0.334311999 ubox
2 98 0.048541105 ubox
2 100 0.038130396 ubox
3 15 0.023086634 ubox
3 17 0.407430291 ubox
3 19 0.038741697 ubox
3 74 0.293074271 ubox
3 91 0.403286450 ubox
3 93 0.418155325 ubox
3 95 0.542007309 ubox
3 99 0.080801880 ubox
4 14 0.023101948 ubox
4 18 0.043740515 ubox
4 73 0.292876165 ubox
4 90 0.405957392 ubox
4 92 0.427752751 ubox
4 94 0.542088378 ubox
4 96 0.040941560 ubox
4 98 0.082718663 ubox
4 100 0.011959589 ubox
5 15 0.594722654 ubox
5 17 0.018432890 ubox
5 74 0.034044518 ubox
5 83 0.008745046 ubox
5 89 0.405992500 ubox
5 91 0.431190031 ubox
5 93 0.538628473 ubox
5 95 0.030870277 ubox
6 13 0.026484091 ubox
6 14 0.595748299 ubox
6 73 0.034076701 ubox
6 82 0.007212888 ubox
6 88 0.404539376 ubox
6 90 0.432016166 ubox
6 92 0.537969864 ubox
6 94 0.030754878 ubox
7 12 0.026667309 ubox
7 13 0.595769510 ubox
7 14 0.005780852 ubox
7 72 0.034064200 ubox
7 81 0.005219368 ubox
7 82 0.022498258 ubox
7 87 0.401755245 ubox
7 88 0.292916026 ubox
8 12 0.591436421 ubox
8 13 0.006857173 ubox
8 71 0.034022783 ubox
8 81 0.025976364 ubox
8 82 0.005381530 ubox
8 87 0.293918292 ubox
8 88 0.614820795 ubox
9 18 0.005115072 ubox
9 80 0.026454415 ubox
9 81 0.005305461 ubox
9 87 0.612314203 ubox
9 90 0.006315975 ubox
10 17 0.006995423 ubox
10 70 0.004021951 ubox
10 79 0.026351699 ubox
10 86 0.695335131 ubox
10 89 0.005474250 ubox
11 16 0.006548088 ubox
11 20 0.008144451 ubox
11 85 0.712252313 ubox
11 86 0.332571488 ubox
12 19 0.008353752 ubox
12 20 0.003616770 ubox
12 84 0.708830341 ubox
12 85 0.363501882 ubox
12 86 0.007752370 ubox
13 19 0.003918072 ubox
13 70 0.031425216 ubox
13 83 0.704628016 ubox
13 84 0.373812364 ubox
14 69 0.031729893 ubox
14 74 0.004380602 ubox
14 77 0.109490950 ubox
14 83 0.381529995 ubox
14 99 0.017563275 ubox
15 68 0.031922187 ubox
15 73 0.004452076 ubox
15 76 0.109542395 ubox
15 81 0.691247739 ubox
15 82 0.388625310 ubox
15 98 0.025546326 ubox
16 67 0.031902970 ubox
16 72 0.004951789 ubox
16 73 0.005073133 ubox
16 75 0.120724746 ubox
16 80 0.670674805 ubox
16 81 0.381664696 ubox
16 82 0.005771396 ubox
16 97 0.048225699 ubox
17 66 0.031924098 ubox
17 71 0.005145838 ubox
17 72 0.007000933 ubox
17 81 0.040039243 ubox
17 96 0.049926030 ubox
17 100 0.013091143 ubox
18 65 0.031874579 ubox
18 74 0.294888286 ubox
18 77 0.792322393 ubox
18 95 0.009768185 ubox
18 99 0.013765782 ubox
19 64 0.031844208 ubox
19 72 0.553236582 ubox
19 73 0.242172856 ubox
19 76 0.793132145 ubox
19 94 0.005564120 ubox
19 98 0.013606808 ubox
20 71 0.580923421 ubox
20 72 0.170253556 ubox
20 75 0.792780962 ubox
20 97 0.012638985 ubox
21 70 0.608529629 ubox
21 74 0.785672260 ubox
22 32 0.030288876 ubox
22 69 0.609246778 ubox
23 30 0.007015319 ubox
23 31 0.031111484 ubox
23 68 0.609335751 ubox
23 72 0.420224493 ubox
23 73 0.669428519 ubox
24 29 0.007078808 ubox
24 30 0.031096180 ubox
24 67 0.609263728 ubox
24 71 0.423083887 ubox
24 72 0.669150952 ubox
24 73 0.003293151 ubox
25 29 0.028014501 ubox
25 66 0.608879303 ubox
25 71 0.660185751 ubox
25 72 0.003202665 ubox
26 65 0.608135699 ubox
26 69 0.771765201 ubox
27 31 0.003244025 ubox
27 64 0.590915212 ubox
27 67 0.139291634 ubox
27 68 0.779529738 ubox
27 72 0.004441429 ubox
28 64 0.041416005 ubox
28 66 0.145712408 ubox
28 67 0.777987420 ubox
28 71 0.005859445 ubox
29 63 0.023682202 ubox
29 65 0.132567306 ubox
29 70 0.006195975 ubox
30 69 0.005898343 ubox
31 63 0.022563953 ubox
31 65 0.371760021 ubox
32 62 0.013451004 ubox
32 64 0.694887696 ubox
32 66 0.005232441 ubox
33 43 0.036356376 ubox
33 63 0.998466389 ubox
34 42 0.036429278 ubox
34 62 0.999233399 ubox
35 41 0.036407372 ubox
35 59 0.011982281 ubox
35 61 0.999246641 ubox
36 58 0.012291722 ubox
36 60 0.997809753 ubox
37 57 0.012612227 ubox
38 56 0.012560364 ubox
38 58 0.995432107 ubox
39 55 0.012311622 ubox
39 57 0.999228657 ubox
40 54 0.011756721 ubox
40 55 0.018408662 ubox
40 56 0.998424033 ubox
41 54 0.025625524 ubox
41 55 0.994657281 ubox
42 49 0.036485997 ubox
42 54 0.996467550 ubox
43 48 0.036647115 ubox
43 51 0.048953836 ubox
43 52 0.074107586 ubox
43 53 0.994434456 ubox
44 50 0.067740452 ubox
44 51 0.095629474 ubox
44 52 0.984054483 ubox
44 64 0.007219732 ubox
45 49 0.082811367 ubox
45 54 0.019206196 ubox
45 63 0.036397004 ubox
46 53 0.020088596 ubox
46 62 0.036444809 ubox
48 60 0.036401747 ubox
49 59 0.036465746 ubox
50 58 0.036444801 ubox
51 57 0.036384006 ubox
52 56 0.023569352 ubox
73 93 0.004317170 ubox
73 95 0.055705615 ubox
73 99 0.323977266 ubox
74 92 0.004423168 ubox
74 94 0.055679384 ubox
74 98 0.333644739 ubox
74 100 0.026582674 ubox
75 91 0.003608896 ubox
75 93 0.045920352 ubox
75 99 0.027440991 ubox
76 91 0.022578600 ubox
76 93 0.031384506 ubox
76 95 0.594075791 ubox
77 90 0.024063871 ubox
77 92 0.051570393 ubox
77 94 0.594664572 ubox
78 89 0.024047244 ubox
78 91 0.051681568 ubox
78 93 0.594649963 ubox
79 87 0.003773239 ubox
79 88 0.023804314 ubox
79 90 0.051695494 ubox
79 92 0.594774442 ubox
80 86 0.004954795 ubox
80 89 0.051200591 ubox
80 91 0.594221455 ubox
81 85 0.003605286 ubox
82 89 0.592922412 ubox
82 91 0.004785330 ubox
83 88 0.592685800 ubox
83 90 0.005847431 ubox
84 98 0.009965339 ubox
85 97 0.010048305 ubox
86 96 0.010036253 ubox
87 95 0.009983161 ubox
92 99 0.003275335 ubox
93 98 0.005355721 ubox
94 99 0.008112657 ubox
2 75 0.9500000 lbox
3 74 0.9500000 lbox
4 73 0.9500000 lbox
5 15 0.9500000 lbox
6 14 0.9500000 lbox
7 13 0.9500000 lbox
8 12 0.9500000 lbox
19 72 0.9500000 lbox
20 71 0.9500000 lbox
21 70 0.9500000 lbox
22 69 0.9500000 lbox
23 68 0.9500000 lbox
24 67 0.9500000 lbox
25 66 0.9500000 lbox
26 65 0.9500000 lbox
27 64 0.9500000 lbox
33 63 0.9500000 lbox
34 62 0.9500000 lbox
35 61 0.9500000 lbox
36 60 0.9500000 lbox
38 58 0.9500000 lbox
39 57 0.9500000 lbox
40 56 0.9500000 lbox
41 55 0.9500000 lbox
42 54 0.9500000 lbox
43 53 0.9500000 lbox
44 52 0.9500000 lbox
76 95 0.9500000 lbox
77 94 0.9500000 lbox
78 93 0.9500000 lbox
79 92 0.9500000 lbox
80 91 0.9500000 lbox
82 89 0.9500000 lbox
83 88 0.9500000 lbox
showpage
end
%%EOF
