%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:29:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAGCGGGGAACGAGGCCGUCGGCCAUUUUGUGUCUGCUUCCUGUGGGACGUGGUGGUAGCCGUUGGGUUGGGAAAGUGAGGGAUUUUUGGCCUCGUUUCUCCUGCUUCUUUUCUCCUCCCUUUUACUUUGCCGGUAGAACACAGUUAUGGGUCGCAAGAAGAAGAAGCAGCUGAAGCCGUGGUGCUGGUAUUGUAAUAGAGAUUUUGAUGAUGAGAAGAUCCUUAUUCAGCACCAAAAAGCAAAGC\
) } def
/len { sequence length } bind def

/coor [
[270.51235962 102.90892792]
[260.87762451 91.41230774]
[257.11996460 76.89060974]
[259.96899414 62.16365814]
[268.87152100 50.09115982]
[282.09783936 43.01763535]
[293.73361206 33.55144119]
[278.98391724 36.28032303]
[264.23422241 39.00920486]
[249.48454285 41.73808289]
[234.73486328 44.46696472]
[219.98516846 47.19584656]
[205.23548889 49.92472458]
[190.48580933 52.65360641]
[175.73611450 55.38248825]
[160.98643494 58.11136627]
[146.23674011 60.84024811]
[131.48706055 63.56912994]
[116.73737335 66.29801178]
[131.86004639 81.21558380]
[136.30561829 101.61256409]
[129.02214050 120.78520203]
[112.74687195 132.65374756]
[92.99716187 133.68946838]
[80.00678253 141.18946838]
[67.01640320 148.68946838]
[54.02602005 156.18946838]
[41.03564072 163.68946838]
[28.04525948 171.18946838]
[19.96261024 184.79025269]
[5.07181835 184.45320129]
[-7.91856241 191.95320129]
[-20.90894318 199.45320129]
[-26.75785446 206.43637085]
[-34.11087036 206.96469116]
[-47.19483948 214.30020142]
[-60.27881241 221.63571167]
[-73.36278534 228.97122192]
[-86.44675446 236.30673218]
[-92.16075134 251.29771423]
[-107.48700714 256.03961182]
[-120.66852570 246.89480591]
[-121.59357452 230.87844849]
[-109.55253601 220.27690125]
[-93.78226471 223.22276306]
[-80.69828796 215.88725281]
[-67.61431885 208.55174255]
[-54.53034973 201.21623230]
[-41.44638062 193.88072205]
[-28.40894318 186.46281433]
[-15.41856289 178.96281433]
[-2.42818141 171.46281433]
[4.72530937 158.39848328]
[20.54525948 158.19909668]
[33.53564072 150.69909668]
[46.52602005 143.19909668]
[59.51640320 135.69909668]
[72.50678253 128.19909668]
[85.49716187 120.69908905]
[82.21208954 106.06323242]
[67.26250458 104.83447266]
[52.31291580 103.60571289]
[37.36332703 102.37694550]
[22.77661324 109.87092590]
[9.14175987 100.75923920]
[10.48513794 84.41520691]
[25.42479515 77.65216827]
[38.59209061 87.42736053]
[53.54167938 88.65612030]
[68.49126434 89.88488770]
[83.44084930 91.11364746]
[85.58683777 83.92722321]
[89.87881470 69.55436707]
[92.02480316 62.36793900]
[78.84932709 55.19808960]
[65.67384338 48.02823639]
[52.49836731 40.85838318]
[39.32289124 33.68852997]
[26.14741135 26.51867867]
[10.41556168 29.66327095]
[-1.75827396 19.21447945]
[-1.03537118 3.18772078]
[12.02972126 -6.12264490]
[27.41458321 -1.57450306]
[33.31726456 13.34320164]
[46.49274063 20.51305389]
[59.66822052 27.68290520]
[72.84369659 34.85275650]
[86.01917267 42.02260971]
[99.19465637 49.19246292]
[114.00849915 51.54832458]
[128.75817871 48.81944275]
[143.50787354 46.09056473]
[158.25755310 43.36168289]
[173.00723267 40.63280106]
[187.75692749 37.90392303]
[202.50660706 35.17504120]
[217.25628662 32.44615936]
[232.00598145 29.71727943]
[246.75566101 26.98839760]
[261.50534058 24.25951767]
[276.25503540 21.53063774]
[291.00473022 18.80175591]
[302.41387939 9.06363392]
[307.42544556 -5.07440805]
[312.43701172 -19.21245003]
[317.44857788 -33.35049438]
[322.46014404 -47.48853683]
[327.47167969 -61.62657928]
[332.48324585 -75.76461792]
[337.49481201 -89.90266418]
[342.50637817 -104.04070282]
[347.51794434 -118.17874908]
[352.52951050 -132.31678772]
[357.45178223 -146.48616028]
[362.28457642 -160.68630981]
[351.39172363 -175.20680237]
[351.41497803 -193.20130920]
[362.15560913 -207.44192505]
[379.14791870 -212.32246399]
[383.62088013 -226.64001465]
[388.09387207 -240.95758057]
[391.74716187 -255.50588989]
[394.56903076 -270.23806763]
[397.39089966 -284.97024536]
[400.21279907 -299.70242310]
[403.03466797 -314.43460083]
[405.85653687 -329.16677856]
[408.67840576 -343.89895630]
[400.89700317 -357.92855835]
[407.14712524 -372.70404053]
[422.63421631 -376.89096069]
[435.47787476 -367.27743530]
[435.82556152 -351.23815918]
[423.41058350 -341.07708740]
[420.58871460 -326.34490967]
[417.76684570 -311.61273193]
[414.94497681 -296.88055420]
[412.12307739 -282.14837646]
[409.30120850 -267.41619873]
[406.47933960 -252.68402100]
[417.69219971 -262.64752197]
[432.49752808 -265.05636597]
[446.29058838 -259.16137695]
[454.78155518 -246.79594421]
[455.32955933 -231.80595398]
[447.76419067 -218.85353088]
[434.43838501 -211.96710205]
[419.49670410 -213.28843689]
[407.58624268 -222.40660095]
[402.41140747 -236.48461914]
[397.93844604 -222.16705322]
[393.46548462 -207.84948730]
[402.05877686 -199.31404114]
[406.24151611 -187.87051392]
[405.16531372 -175.66175842]
[398.97271729 -165.00177002]
[388.78179932 -157.93696594]
[376.48471069 -155.85351562]
[371.65191650 -141.65338135]
[372.47012329 -134.32695007]
[366.66754150 -127.30522919]
[361.65597534 -113.16718292]
[356.64440918 -99.02914429]
[351.63287354 -84.89109802]
[346.62130737 -70.75305939]
[341.60974121 -56.61501312]
[336.59817505 -42.47697449]
[331.58660889 -28.33893013]
[326.57504272 -14.20088768]
[321.56347656 -0.06284571]
[316.55191040 14.07519627]
[326.77450562 3.09800792]
[341.77383423 3.24152923]
[351.78448486 14.41232014]
[350.28903198 29.33758545]
[338.26104736 38.30016327]
[323.53179932 35.46517944]
[335.91775513 43.92614365]
[354.41076660 39.72471237]
[369.82278442 50.21625519]
[372.59777832 68.32890320]
[385.19329834 76.47466278]
[397.78878784 84.62042999]
[410.38427734 92.76618958]
[422.97976685 100.91195679]
[435.57528687 109.05771637]
[448.17077637 117.20347595]
[460.76626587 125.34924316]
[473.36175537 133.49501038]
[469.94821167 118.88858032]
[476.62677002 105.45738983]
[490.33325195 99.36377716]
[504.77902222 103.40354156]
[513.33624268 115.72320557]
[512.07879639 130.67041016]
[501.58355713 141.38723755]
[486.66461182 142.95642090]
[498.49252319 152.18139648]
[510.32046509 161.40637207]
[522.14837646 170.63134766]
[537.78863525 173.01734924]
[543.06604004 186.94569397]
[554.89392090 196.17066956]
[566.72186279 205.39564514]
[578.54980469 214.62062073]
[590.37774658 223.84559631]
[602.20562744 233.07057190]
[616.72979736 227.86936951]
[631.75512695 231.36843872]
[642.48706055 242.45126343]
[645.50109863 257.58132935]
[639.83551025 271.93069458]
[627.29809570 280.92053223]
[611.88958740 281.68222046]
[598.52667236 273.97271729]
[591.47351074 260.25207520]
[592.98065186 244.89849854]
[581.15277100 235.67352295]
[569.32482910 226.44854736]
[557.49688721 217.22357178]
[545.66894531 207.99859619]
[533.84106445 198.77362061]
[519.04681396 197.04743958]
[512.92340088 182.45927429]
[501.09548950 173.23429871]
[489.26754761 164.00932312]
[477.43963623 154.78434753]
[465.21600342 146.09049988]
[452.62051392 137.94473267]
[440.02502441 129.79898071]
[427.42950439 121.65321350]
[414.83401489 113.50745392]
[402.23852539 105.36168671]
[389.64303589 97.21592712]
[377.04751587 89.07015991]
[364.45202637 80.92440033]
[354.10864258 85.66999817]
[342.63919067 84.83583069]
[332.89041138 78.51332855]
[327.33770752 68.17040253]
[327.45678711 56.31210709]
[315.07083130 47.85113907]
[321.88412476 61.21448517]
[325.18325806 75.84717560]
[321.87246704 90.47724152]
[312.59469604 102.26379395]
[299.15148926 108.91809845]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 103]
[8 102]
[9 101]
[10 100]
[11 99]
[12 98]
[13 97]
[14 96]
[15 95]
[16 94]
[17 93]
[18 92]
[19 91]
[24 59]
[25 58]
[26 57]
[27 56]
[28 55]
[29 54]
[31 52]
[32 51]
[33 50]
[35 49]
[36 48]
[37 47]
[38 46]
[39 45]
[60 71]
[61 70]
[62 69]
[63 68]
[74 90]
[75 89]
[76 88]
[77 87]
[78 86]
[79 85]
[104 172]
[105 171]
[106 170]
[107 169]
[108 168]
[109 167]
[110 166]
[111 165]
[112 164]
[113 163]
[114 162]
[115 160]
[116 159]
[120 153]
[121 152]
[122 151]
[123 141]
[124 140]
[125 139]
[126 138]
[127 137]
[128 136]
[129 135]
[178 243]
[179 242]
[182 237]
[183 236]
[184 235]
[185 234]
[186 233]
[187 232]
[188 231]
[189 230]
[190 229]
[198 228]
[199 227]
[200 226]
[201 225]
[203 223]
[204 222]
[205 221]
[206 220]
[207 219]
[208 218]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
