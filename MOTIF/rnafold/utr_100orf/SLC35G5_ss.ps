%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:47:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACCACCUCAGGAGAGUUCCAGGGAAGAACCCCACCCGCACUCCAAUGAGGUCACAAUGGCUGGAGCUCUGAGGGGCCCAGGCUCCCUGAGCCAGGAGGAGAGGAGAAAGUCCAAGGAAAGAUGGCUGGCAGUCACCCCUACUUCAACCUGCCUGACUCCACACACCCAUCGCCGCCCUCCGCUCCACCCAGCCUCCGCUGGCACCAGCGCUGCCAGCCCU\
) } def
/len { sequence length } bind def

/coor [
[-61.62023163 274.88619995]
[-73.33103180 282.77307129]
[-87.00129700 286.18292236]
[-100.98488617 284.72616577]
[-113.60506439 278.59796143]
[-124.43441010 288.97705078]
[-135.26374817 299.35614014]
[-146.09309387 309.73522949]
[-156.92243958 320.11428833]
[-167.75177002 330.49337769]
[-178.43315125 341.02465820]
[-188.96444702 351.70605469]
[-199.49572754 362.38745117]
[-210.02702332 373.06881714]
[-214.20625305 388.32806396]
[-228.65156555 391.95880127]
[-239.18286133 402.64019775]
[-235.21878052 417.41293335]
[-239.15527344 432.08944702]
[-249.83842468 442.75418091]
[-264.32839966 446.61383057]
[-278.70791626 442.72857666]
[-289.23919678 453.40997314]
[-299.77047729 464.09133911]
[-299.40805054 479.89147949]
[-310.38439941 491.26226807]
[-326.18750000 491.45764160]
[-337.44158936 480.36166382]
[-337.46987915 464.55740356]
[-326.25555420 453.42123413]
[-310.45187378 453.56005859]
[-299.92059326 442.87866211]
[-289.38928223 432.19729614]
[-293.47763062 417.87420654]
[-289.82342529 403.33105469]
[-279.31094360 392.49804688]
[-264.69158936 388.35427856]
[-249.86424255 392.10891724]
[-239.33294678 381.42752075]
[-235.90698242 366.93228149]
[-220.70840454 362.53753662]
[-210.17712402 351.85614014]
[-199.64582825 341.17477417]
[-189.11454773 330.49337769]
[-188.25128174 325.80361938]
[-184.43780518 321.60366821]
[-178.13085938 319.66403198]
[-167.30151367 309.28497314]
[-156.47216797 298.90588379]
[-145.64283752 288.52679443]
[-134.81349182 278.14770508]
[-123.98415375 267.76861572]
[-129.96327209 253.08894348]
[-129.84938049 237.20013428]
[-123.63034058 222.53669739]
[-112.23167419 211.35664368]
[-97.37899780 205.39398193]
[-81.33678436 205.58966064]
[-66.56313324 211.94328308]
[-55.88175201 201.41200256]
[-45.20036697 190.88070679]
[-34.51898193 180.34942627]
[-23.83759689 169.81813049]
[-13.15621281 159.28684998]
[-2.54961133 148.68023682]
[7.98167658 137.99885559]
[18.51296425 127.31747437]
[21.93893051 112.82223511]
[37.13750839 108.42748260]
[47.66879654 97.74610138]
[58.20008469 87.06472015]
[57.45744324 72.08311462]
[45.92142487 62.49560928]
[34.38540268 52.90810394]
[22.84938431 43.32059860]
[11.24581528 33.81496048]
[-0.42472064 24.39165878]
[-16.70064926 22.38511848]
[-22.85090446 7.18293381]
[-12.54863167 -5.57618904]
[3.60807395 -2.76675963]
[8.99857903 12.72112274]
[20.66911507 22.14442253]
[27.84211922 23.89944458]
[32.43688965 31.78457832]
[43.97290802 41.37208176]
[55.50893021 50.95958710]
[67.04495239 60.54709244]
[82.00741577 59.48662949]
[92.07588196 48.36790848]
[102.14435577 37.24918747]
[112.21282196 26.13046646]
[113.97320557 19.77115250]
[118.06352997 15.84034538]
[122.72699738 14.84472179]
[133.10607910 4.01538086]
[143.48516846 -6.81396055]
[153.86424255 -17.64330292]
[164.24333191 -28.47264290]
[160.74432373 -39.92839813]
[162.37916565 -51.68287277]
[168.75164795 -61.56310654]
[178.59855652 -67.78227234]
[177.32647705 -82.72823334]
[176.05438232 -97.67420197]
[164.76524353 -109.07310486]
[166.78163147 -124.98893738]
[180.55674744 -133.21243286]
[195.52349854 -127.43522644]
[200.20066833 -112.08910370]
[191.00035095 -98.94628906]
[192.27243042 -84.00032806]
[193.54452515 -69.05435944]
[197.69172668 -67.87034607]
[201.59623718 -66.03841400]
[205.15759277 -63.60571671]
[217.46513367 -72.18035889]
[218.75511169 -82.97034454]
[225.62539673 -91.10455322]
[235.62666321 -94.05678558]
[245.39291382 -91.08491516]
[257.93817139 -99.30783081]
[270.48342896 -107.53075409]
[283.02871704 -115.75366974]
[295.57397461 -123.97658539]
[304.19036865 -144.66641235]
[325.83364868 -145.00643921]
[337.89361572 -153.92593384]
[349.95358276 -162.84542847]
[354.98709106 -170.45799255]
[362.24789429 -171.80438232]
[374.43286133 -180.55233765]
[386.61782837 -189.30027771]
[398.80279541 -198.04823303]
[410.98776245 -206.79617310]
[406.37710571 -221.20439148]
[406.44650269 -236.33219910]
[411.18920898 -250.69750977]
[420.14053345 -262.89294434]
[432.42352295 -271.72375488]
[446.83483887 -276.32476807]
[461.96258545 -276.24520874]
[476.32470703 -271.49291992]
[488.51416016 -262.53341675]
[497.33673096 -250.24449158]
[501.92807007 -235.83010864]
[501.83840942 -220.70240784]
[497.07647705 -206.34347534]
[488.10879517 -194.16003418]
[475.81396484 -185.34568787]
[461.39651489 -180.76400757]
[446.26889038 -180.86383057]
[431.91314697 -185.63539124]
[419.73571777 -194.61120605]
[407.55075073 -185.86326599]
[395.36578369 -177.11531067]
[383.18081665 -168.36737061]
[370.99584961 -159.61941528]
[358.87307739 -150.78547668]
[346.81311035 -141.86598206]
[334.75314331 -132.94648743]
[335.27328491 -125.10318756]
[332.62426758 -117.60285187]
[327.16641235 -111.68793488]
[319.73147583 -108.36899567]
[311.49630737 -108.25247955]
[303.79687500 -111.43132782]
[291.25161743 -103.20840454]
[278.70635986 -94.98548889]
[266.16110229 -86.76257324]
[253.61584473 -78.53964996]
[246.18719482 -60.68239212]
[226.03977966 -59.87281799]
[213.73223877 -51.29817581]
[212.53083801 -30.35140228]
[196.51675415 -16.38853073]
[175.07267761 -18.09356117]
[164.69358826 -7.26421928]
[154.31451416 3.56512237]
[143.93542480 14.39446354]
[133.55633545 25.22380447]
[123.33154297 36.19893646]
[113.26307678 47.31765747]
[103.19460297 58.43637466]
[93.12613678 69.55509949]
[110.33342743 72.17004395]
[122.62727356 83.23435211]
[126.58880615 98.40014648]
[121.82405090 112.42291260]
[132.04885864 123.39804077]
[142.27365112 134.37316895]
[152.49844360 145.34829712]
[162.72325134 156.32344055]
[178.55346680 160.60549927]
[182.49810791 176.52314758]
[170.49926758 187.70169067]
[154.90031433 182.64157104]
[151.74812317 166.54823303]
[141.52331543 155.57310486]
[131.29852295 144.59797668]
[121.07372284 133.62284851]
[110.84892273 122.64771271]
[97.95295715 126.55812073]
[84.08518219 123.23356628]
[73.22460938 112.82048035]
[68.88146973 97.59600830]
[58.35018158 108.27738953]
[47.81889343 118.95877075]
[43.63965988 134.21801758]
[29.19434929 137.84875488]
[18.66306114 148.53015137]
[8.13177299 159.21153259]
[4.33934784 167.51242065]
[-2.62492490 169.96823120]
[-13.30630970 180.49951172]
[-23.98769379 191.03080750]
[-34.66907883 201.56208801]
[-45.35046387 212.09338379]
[-56.03184509 222.62466431]
[-50.29237366 235.65505981]
[-49.34608078 249.83207703]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 52]
[6 51]
[7 50]
[8 49]
[9 48]
[10 47]
[11 44]
[12 43]
[13 42]
[14 41]
[16 39]
[17 38]
[22 33]
[23 32]
[24 31]
[59 219]
[60 218]
[61 217]
[62 216]
[63 215]
[64 214]
[65 212]
[66 211]
[67 210]
[69 208]
[70 207]
[71 206]
[72 88]
[73 87]
[74 86]
[75 85]
[76 83]
[77 82]
[89 185]
[90 184]
[91 183]
[92 182]
[95 181]
[96 180]
[97 179]
[98 178]
[99 177]
[103 113]
[104 112]
[105 111]
[116 174]
[117 173]
[121 171]
[122 170]
[123 169]
[124 168]
[125 167]
[127 161]
[128 160]
[129 159]
[131 158]
[132 157]
[133 156]
[134 155]
[135 154]
[189 202]
[190 201]
[191 200]
[192 199]
[193 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
