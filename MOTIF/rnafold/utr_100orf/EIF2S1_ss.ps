%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:07:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGGUUCCGCAUGCGCGGUGGAGUGAGCGAAGCGCACGCUGAGGAGGAUCGGCGGCCGGUGAGGGGGAAGCAAGUCUGGUCUCUGUGAUUGAAGAAGUCGGCUCUGGGCUCCAGUGCGGGAAUCACACACAUACCUCAGAAUGCCGGGUCUAAGUUGUAGAUUUUAUCAACACAAAUUUCCUGAGGUGGAAGAUGUAGUGAUGGUGAAUGUCAGAUCCAUUGCUGAAAUGGGGGCUUAUG\
) } def
/len { sequence length } bind def

/coor [
[89.10468292 523.28833008]
[89.06661224 507.48406982]
[100.27404022 496.34094238]
[100.07932281 481.34222412]
[99.88459778 466.34347534]
[99.68988037 451.34472656]
[99.49515533 436.34600830]
[99.30043793 421.34725952]
[99.10571289 406.34854126]
[95.88292694 399.71499634]
[99.00708771 391.15411377]
[99.00708771 376.15411377]
[99.00708771 361.15411377]
[85.30519867 348.99179077]
[84.85815430 330.35598755]
[98.41869354 317.10314941]
[98.02928162 302.10821533]
[97.63986969 287.11328125]
[97.25046539 272.11831665]
[96.86105347 257.12338257]
[96.47164154 242.12843323]
[96.08223724 227.13348389]
[95.69282532 212.13854980]
[85.73674011 197.67639160]
[94.68859863 181.57362366]
[94.10456848 166.58499146]
[93.52053070 151.59635925]
[79.68104553 145.81117249]
[68.60363007 155.92506409]
[57.52621460 166.03895569]
[49.90591049 181.18383789]
[33.24339294 178.05386353]
[31.63840866 161.17605591]
[47.41231918 154.96154785]
[58.48973465 144.84765625]
[69.56714630 134.73374939]
[65.63596344 128.34660339]
[53.84241104 109.18511963]
[39.82248688 114.51819611]
[25.80256081 119.85127258]
[11.78263474 125.18434906]
[-2.23728991 130.51742554]
[-16.25721550 135.85050964]
[-22.49963379 150.36972046]
[-37.21106339 156.14462280]
[-51.66347504 149.74903870]
[-57.28250504 134.97737122]
[-50.73448563 120.59339142]
[-35.90424347 115.13085175]
[-21.59029198 121.83058167]
[-7.57036591 116.49750519]
[6.44955873 111.16442871]
[20.46948433 105.83135223]
[34.48941040 100.49827576]
[48.50933456 95.16519928]
[69.51562500 64.68826294]
[102.19672394 58.47535706]
[95.26570129 45.17269135]
[88.33467102 31.87002754]
[81.40364838 18.56736374]
[74.47261810 5.26469994]
[67.11358643 -7.80605555]
[59.33430099 -20.63113594]
[51.55501556 -33.45621872]
[43.77573013 -46.28129959]
[32.31292343 -55.95622253]
[18.36341286 -61.47084808]
[4.41389942 -66.98547363]
[-9.53561306 -72.50009918]
[-21.64517784 -68.09898376]
[-33.14237976 -72.96362305]
[-38.08682632 -83.98918915]
[-51.96357727 -89.68443298]
[-68.13417816 -86.95613098]
[-78.37228394 -99.76679993]
[-72.14580536 -114.93791962]
[-55.86001205 -116.86274719]
[-46.26833344 -103.56118011]
[-32.39158249 -97.86593628]
[-15.14147568 -101.13872528]
[-4.02098751 -86.44960785]
[9.92852497 -80.93498230]
[23.87803841 -75.42035675]
[37.82754898 -69.90573120]
[48.43415070 -80.51233673]
[42.91952515 -94.46184540]
[37.40489960 -108.41136169]
[31.89027596 -122.36087036]
[26.37565041 -136.31037903]
[20.86102486 -150.25990295]
[15.34639931 -164.20941162]
[9.60656357 -150.35104370]
[-3.64736509 -143.32727051]
[-18.33782578 -146.35882568]
[-27.72854042 -158.05560303]
[-27.51341629 -173.05406189]
[-17.79109764 -184.47669983]
[-3.01973367 -187.08567810]
[10.02817917 -179.68363953]
[5.80219078 -194.07603455]
[-5.50965214 -205.13735962]
[-1.67145383 -219.52893066]
[-5.89744234 -233.92132568]
[-17.20928574 -244.98265076]
[-13.37108707 -259.37423706]
[-17.59707451 -273.76663208]
[-21.82306290 -288.15902710]
[-26.04905128 -302.55142212]
[-36.31287003 -316.04550171]
[-26.18744850 -329.64373779]
[-10.31763649 -323.67837524]
[-11.65665722 -306.77740479]
[-7.43066883 -292.38500977]
[-3.20468068 -277.99261475]
[1.02130783 -263.60021973]
[12.03087997 -253.56832886]
[8.49495220 -238.14732361]
[12.72094059 -223.75492859]
[23.73051262 -213.72303772]
[20.19458580 -198.30203247]
[24.42057419 -183.90963745]
[29.29591179 -169.72404480]
[34.81053925 -155.77452087]
[40.32516479 -141.82501221]
[45.83979034 -127.87549591]
[51.35441589 -113.92598724]
[56.86904144 -99.97647095]
[62.38366318 -86.02696228]
[64.72261047 -80.63748169]
[65.83824921 -75.13990784]
[65.78392792 -69.79524231]
[64.66590881 -64.83859253]
[62.63513565 -60.46892929]
[59.87716675 -56.84114456]
[56.60081100 -54.06058502]
[64.38009644 -41.23550415]
[72.15938568 -28.41042328]
[79.93866730 -15.58534241]
[85.87725067 -29.35971260]
[100.31345367 -33.43353653]
[112.57666016 -24.79561615]
[113.60244751 -9.83073139]
[102.63258362 0.39972165]
[87.77528381 -1.66632664]
[94.70631409 11.63633728]
[101.63733673 24.93900108]
[108.56836700 38.24166489]
[115.49938965 51.54433060]
[130.15660095 54.73280716]
[141.98741150 45.51153183]
[153.81820679 36.29025650]
[165.64901733 27.06897926]
[177.47982788 17.84770393]
[180.87237549 2.16745329]
[195.31030273 -4.82724094]
[209.71807861 2.22935128]
[213.04328918 17.92401695]
[202.73512268 30.21715164]
[186.70111084 29.67851448]
[174.87030029 38.89978790]
[163.03948975 48.12106705]
[151.20867920 57.34234238]
[139.37786865 66.56362152]
[143.32281494 81.03556824]
[158.19659424 82.97737122]
[173.07038879 84.91917419]
[187.94416809 86.86097717]
[202.81794739 88.80278778]
[217.69172668 90.74459076]
[232.56550598 92.68639374]
[247.25117493 86.80067444]
[258.86975098 96.12046051]
[273.74353027 98.06226349]
[288.61730957 100.00406647]
[300.70480347 86.46625519]
[318.34741211 82.94126892]
[334.42486572 90.65866089]
[342.56433105 106.34934998]
[357.48348999 107.90436554]
[372.40267944 109.45938110]
[387.32186890 111.01439667]
[402.24102783 112.56941223]
[414.35522461 102.41943359]
[430.09078979 103.89154816]
[440.11212158 116.11236572]
[438.47372437 131.83149719]
[426.14764404 141.72306824]
[410.44671631 139.91857910]
[400.68603516 127.48859406]
[385.76684570 125.93357849]
[370.84765625 124.37856293]
[355.92846680 122.82354736]
[341.00930786 121.26853180]
[334.33764648 131.38269043]
[323.94155884 137.74514771]
[311.75604248 139.09988403]
[300.07983398 135.12974548]
[291.14181519 126.52795410]
[286.67550659 114.87785339]
[271.80172729 112.93605042]
[256.92794800 110.99424744]
[243.30613708 117.01885223]
[230.62370300 107.56017303]
[215.74992371 105.61837006]
[200.87614441 103.67656708]
[186.00236511 101.73476410]
[171.12857056 99.79296112]
[156.25479126 97.85115814]
[141.38101196 95.90935516]
[141.36222839 117.62509918]
[129.89009094 137.99002075]
[108.50916290 151.01232910]
[109.09319305 166.00096130]
[109.67722321 180.98957825]
[118.59109497 190.29304504]
[118.78015137 202.77561951]
[110.68776703 211.74913025]
[111.07717896 226.74407959]
[111.46659088 241.73902893]
[111.85599518 256.73397827]
[112.24540710 271.72891235]
[112.63481903 286.72384644]
[113.02423096 301.71881104]
[113.41363525 316.71374512]
[123.44411469 323.04904175]
[129.12141418 333.32949829]
[129.14068604 344.95367432]
[123.61253357 355.04287720]
[114.00708771 361.15411377]
[114.00708771 376.15411377]
[114.00708771 391.15411377]
[114.10444641 406.15380859]
[114.29917145 421.15255737]
[114.49388885 436.15127563]
[114.68861389 451.15002441]
[114.88333893 466.14874268]
[115.07805634 481.14749146]
[115.27278137 496.14624023]
[126.76571655 506.99462891]
[127.13793945 522.79455566]
[116.16862488 534.17211914]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 238]
[4 237]
[5 236]
[6 235]
[7 234]
[8 233]
[9 232]
[11 231]
[12 230]
[13 229]
[16 224]
[17 223]
[18 222]
[19 221]
[20 220]
[21 219]
[22 218]
[23 217]
[25 214]
[26 213]
[27 212]
[28 36]
[29 35]
[30 34]
[38 55]
[39 54]
[40 53]
[41 52]
[42 51]
[43 50]
[57 148]
[58 147]
[59 146]
[60 145]
[61 144]
[62 138]
[63 137]
[64 136]
[65 135]
[66 84]
[67 83]
[68 82]
[69 81]
[72 79]
[73 78]
[85 128]
[86 127]
[87 126]
[88 125]
[89 124]
[90 123]
[91 122]
[99 121]
[100 120]
[102 118]
[103 117]
[105 115]
[106 114]
[107 113]
[108 112]
[149 163]
[150 162]
[151 161]
[152 160]
[153 159]
[164 209]
[165 208]
[166 207]
[167 206]
[168 205]
[169 204]
[170 203]
[172 201]
[173 200]
[174 199]
[178 193]
[179 192]
[180 191]
[181 190]
[182 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
