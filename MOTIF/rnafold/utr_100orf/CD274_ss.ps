%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:27:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGCAACGCUGAGCAGCUGGCGCGUCCCGCGCGGCCCCAGUUCUGCGCAGCUUCCCGAGGCUCCGCACCAGCCGCGCUUCUGUCCGCCUGCAGGGCAUUCCAGAAAGAUGAGGAUAUUUGCUGUCUUUAUAUUCAUGACCUACUGGCAUUUGCUGAACGCAUUUACUGUCACGGUUCCCAAGGACCUAUAUGUGGUAGAGUAUGGUA\
) } def
/len { sequence length } bind def

/coor [
[71.21187592 200.54957581]
[63.71208954 200.49320984]
[57.99788666 214.36216736]
[52.28368378 228.23112488]
[46.56948090 242.10006714]
[53.14443588 253.85633850]
[51.76757050 267.06008911]
[43.16447830 276.91366577]
[30.64519691 279.96658325]
[24.72317696 293.74807739]
[18.80115509 307.52957153]
[21.26393890 323.74273682]
[8.28711414 333.76940918]
[-6.77987289 327.29501343]
[-8.43739796 310.97982788]
[5.01965857 301.60757446]
[10.94167900 287.82604980]
[16.86370087 274.04455566]
[9.97080612 258.70495605]
[16.43142891 242.81314087]
[32.70052719 236.38586426]
[38.41473007 222.51692200]
[44.12893295 208.64796448]
[49.84313583 194.77900696]
[90.09124756 179.98626709]
[90.54212952 164.99304199]
[90.99300385 149.99981689]
[91.44388580 135.00659180]
[68.19262695 121.93938446]
[59.07099533 94.92173767]
[44.09174728 94.13294983]
[29.11250305 93.34415436]
[14.13325691 92.55536652]
[-0.84598875 91.76657104]
[-15.82523441 90.97778320]
[-30.80447960 90.18898773]
[-35.08257675 99.11575317]
[-41.82485580 106.32319641]
[-50.39537048 111.15746307]
[-59.99347687 113.18730927]
[-69.72861481 112.24250793]
[-78.70295715 108.42802429]
[-86.09418488 102.11264038]
[-91.23085022 93.89340210]
[-93.65335846 84.53918457]
[-108.53108978 82.62786865]
[-123.40882111 80.71656036]
[-138.28654480 78.80524445]
[-152.96012878 84.72105408]
[-164.59776306 75.42510223]
[-179.47549438 73.51378632]
[-194.35322571 71.60247803]
[-209.23095703 69.69116211]
[-224.10868835 67.77985382]
[-239.02293396 74.59875488]
[-252.22671509 64.87290955]
[-250.13713074 48.60743713]
[-234.90374756 42.53485870]
[-222.19737244 52.90212250]
[-207.31964111 54.81343460]
[-192.44190979 56.72474670]
[-177.56417847 58.63605499]
[-162.68644714 60.54736710]
[-149.07702637 54.49485397]
[-136.37524414 63.92751694]
[-121.49750519 65.83882904]
[-106.61977386 67.75013733]
[-91.74204254 69.66145325]
[-78.96192932 53.87669373]
[-59.10454559 48.99272919]
[-40.20494843 57.15921402]
[-30.01568794 75.20973969]
[-15.03644276 75.99853516]
[-0.05719670 76.78733063]
[14.92204952 77.57611847]
[29.90129471 78.36491394]
[44.88054276 79.15370178]
[59.85978699 79.94249725]
[68.71300507 67.83380127]
[63.41827011 53.79935455]
[58.12352753 39.76490402]
[52.82878876 25.73045731]
[47.53404999 11.69600964]
[31.16282272 7.44701672]
[20.65394783 -5.59293318]
[19.99431038 -22.16105652]
[29.24593925 -35.72060776]
[23.74084663 -49.67388535]
[18.23575401 -63.62716293]
[12.73066044 -77.58044434]
[1.29318345 -90.09525299]
[10.15270042 -104.55019379]
[26.49529457 -100.03842926]
[26.68393707 -83.08553314]
[32.18902969 -69.13225555]
[37.69412231 -55.17898178]
[43.19921875 -41.22570419]
[56.38108444 -39.10357285]
[66.87696838 -30.67719460]
[71.87804413 -18.06440353]
[69.97845459 -4.52062368]
[61.56849670 6.40126944]
[66.86323547 20.43571854]
[72.15797424 34.47016525]
[77.45271301 48.50461197]
[82.74745941 62.53906250]
[93.08719635 57.92207336]
[104.65647125 56.20573044]
[116.63031006 57.71228409]
[123.36975861 44.31154633]
[130.10920715 30.91080475]
[136.84864807 17.51006508]
[143.58810425 4.10932636]
[150.32756042 -9.29141331]
[157.06700134 -22.69215393]
[163.80645752 -36.09289169]
[170.54589844 -49.49363327]
[166.89353943 -65.11540222]
[176.94264221 -77.62120819]
[192.98440552 -77.41765594]
[202.71295166 -64.66089630]
[198.66539001 -49.13682938]
[183.94664001 -42.75418472]
[177.20718384 -29.35344315]
[170.46774292 -15.95270348]
[163.72828674 -2.55196404]
[156.98884583 10.84877586]
[150.24938965 24.24951553]
[143.50994873 37.65025330]
[136.77049255 51.05099487]
[130.03105164 64.45173645]
[133.89436340 70.88016510]
[141.16534424 57.76021957]
[156.16302490 57.49699402]
[163.88990784 70.35371399]
[156.61918640 83.47380066]
[141.62101746 83.73703003]
[145.48432922 90.16546631]
[160.48052979 90.50364685]
[175.47671509 90.84182739]
[190.47290039 91.18000793]
[197.88946533 83.22099304]
[208.24885559 80.71014404]
[218.07304382 84.24197388]
[224.19895935 92.42275238]
[239.17819214 93.21154785]
[254.15744019 94.00033569]
[269.13668823 94.78913116]
[284.11593628 95.57791901]
[298.31478882 81.36476135]
[318.08383179 82.16136169]
[330.69760132 97.00575256]
[345.69720459 97.11849213]
[360.69677734 97.23122406]
[373.08892822 87.04230499]
[388.75073242 90.51899719]
[395.66778564 104.99427795]
[388.53393555 119.36395264]
[372.82162476 122.60483551]
[360.58404541 112.23080444]
[345.58444214 112.11806488]
[330.58486938 112.00533295]
[325.48132324 120.91484833]
[317.07382202 126.94850922]
[306.84094238 128.96270752]
[296.61682129 126.52808380]
[288.26248169 120.01889038]
[283.32714844 110.55716705]
[268.34790039 109.76837921]
[253.36865234 108.97958374]
[238.38940430 108.19078827]
[223.41015625 107.40200043]
[206.86892700 117.41397858]
[190.13471985 106.17619324]
[175.13853455 105.83801270]
[160.14234924 105.49983215]
[145.14614868 105.16165161]
[141.55200195 114.08107758]
[136.29420471 121.73745728]
[129.73786926 127.84416199]
[122.29143524 132.21017456]
[114.38303375 134.74490356]
[106.43711090 135.45747375]
[105.98622894 150.45069885]
[105.53535461 165.44392395]
[105.08447266 180.43714905]
[107.66452026 195.21359253]
[113.16961670 209.16687012]
[118.67470551 223.12014771]
[124.17980194 237.07342529]
[129.68489075 251.02670288]
[135.18998718 264.97998047]
[150.24798584 268.72644043]
[160.20225525 280.62991333]
[161.22515869 296.11322021]
[152.92335510 309.22274780]
[138.48908997 314.91763306]
[123.47261047 311.00802612]
[113.64806366 298.99728394]
[112.79319000 283.50378418]
[121.23670959 270.48507690]
[115.73161316 256.53179932]
[110.22652435 242.57850647]
[104.72142792 228.62524414]
[99.21633911 214.67196655]
[93.71124268 200.71868896]
[86.21145630 200.66230774]
[86.09848785 215.66189575]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 24]
[3 23]
[4 22]
[5 21]
[9 18]
[10 17]
[11 16]
[25 186]
[26 185]
[27 184]
[28 183]
[30 78]
[31 77]
[32 76]
[33 75]
[34 74]
[35 73]
[36 72]
[45 68]
[46 67]
[47 66]
[48 65]
[50 63]
[51 62]
[52 61]
[53 60]
[54 59]
[79 106]
[80 105]
[81 104]
[82 103]
[83 102]
[87 97]
[88 96]
[89 95]
[90 94]
[109 131]
[110 130]
[111 129]
[112 128]
[113 127]
[114 126]
[115 125]
[116 124]
[117 123]
[138 177]
[139 176]
[140 175]
[141 174]
[145 172]
[146 171]
[147 170]
[148 169]
[149 168]
[152 162]
[153 161]
[154 160]
[187 206]
[188 205]
[189 204]
[190 203]
[191 202]
[192 201]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
