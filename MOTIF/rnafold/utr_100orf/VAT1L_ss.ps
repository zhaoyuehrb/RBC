%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:36:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGCACAGCCGAGCAUCCCACAUUCAACAGGAGGAACCCGCGGGAGAGGAGCCCCACUCCCCCAGCGCCGCAGCCACCGCAGCCACCGCAGCCCGUGCGCCCCGCGCCCUCGAGCGCCAUGGCCAAGGAAGGCGUGGAGAAGGCGGAGGAGACGGAGCAAAUGAUCGAGAAGGAGGCAGGCAAGGAGCCGGCGGAGGGCGGCGGCGGCGACGGCUCGC\
) } def
/len { sequence length } bind def

/coor [
[154.27114868 117.92730713]
[144.65782166 129.44181824]
[130.94410706 135.51802063]
[126.92406464 149.96929932]
[122.90402222 164.42056274]
[132.65908813 176.48780823]
[133.42453003 191.98599243]
[124.90601349 204.95574951]
[110.37909698 210.40994263]
[95.42966461 206.25132751]
[85.80607605 194.07896423]
[85.20880890 178.57339478]
[93.86751556 165.69680786]
[108.45275116 160.40052795]
[112.47279358 145.94924927]
[116.49283600 131.49798584]
[110.48877716 127.00340271]
[101.49961090 139.01152039]
[92.51044464 151.01963806]
[83.52127838 163.02775574]
[74.53211212 175.03587341]
[65.54294586 187.04399109]
[56.55358505 199.05195618]
[44.54576492 190.06239319]
[53.53483200 178.05482483]
[62.52399445 166.04670715]
[71.51316071 154.03858948]
[80.50232697 142.03047180]
[89.49149323 130.02235413]
[98.48065186 118.01423645]
[92.47659302 113.51965332]
[79.74327850 121.44824982]
[76.40822601 136.89665222]
[63.08123016 145.39173889]
[47.66895676 141.89355469]
[39.31523514 128.47747803]
[42.97618103 113.10305023]
[56.47982025 104.89163971]
[71.81468201 108.71492767]
[84.54800415 100.78633881]
[80.21936035 86.42448425]
[65.22547913 86.85282135]
[50.23503494 87.38820648]
[35.24879456 88.03060913]
[20.26255798 88.67301178]
[6.80641174 96.99423218]
[-6.24054718 89.80909729]
[-21.22678375 90.45149994]
[-36.21302414 91.09390259]
[-44.67517471 104.10050201]
[-59.17828751 109.61767578]
[-74.14562225 105.52397156]
[-83.82193756 93.39348602]
[-84.48648071 77.89064789]
[-75.88373566 64.97660828]
[-61.32162094 59.61708832]
[-46.39957428 63.87292099]
[-36.85542297 76.10765839]
[-21.86918640 75.46526337]
[-6.88294888 74.82286072]
[5.50128222 66.54758453]
[19.62015724 73.68677521]
[34.60639572 73.04437256]
[49.59263229 72.40196991]
[56.13631058 68.97734833]
[64.79713440 71.85894012]
[79.79101562 71.43059540]
[93.88233185 66.28911591]
[105.62886047 56.96071243]
[117.37538910 47.63230896]
[129.12191772 38.30390549]
[131.06503296 22.84874153]
[143.11056519 13.55574703]
[157.83273315 15.50345707]
[169.57925415 6.17505407]
[181.32577515 -3.15334964]
[187.32093811 -17.79468155]
[202.09947205 -19.65059662]
[213.84599304 -28.97900009]
[225.59251404 -38.30740356]
[237.33905029 -47.63580704]
[243.33421326 -62.27713776]
[258.11273193 -64.13305664]
[269.85925293 -73.46145630]
[281.60577393 -82.78986359]
[287.97262573 -100.07157898]
[305.42199707 -101.96535492]
[317.03411865 -111.46054077]
[328.64624023 -120.95572662]
[340.25836182 -130.45091248]
[344.11032104 -153.89645386]
[365.65118408 -162.45634460]
[372.07659912 -176.01045227]
[378.40509033 -189.61009216]
[384.63632202 -203.25457764]
[390.86755371 -216.89904785]
[397.09875488 -230.54353333]
[390.97152710 -242.53370667]
[392.83926392 -255.67208862]
[401.79876709 -265.19616699]
[414.41751099 -267.78399658]
[420.84292603 -281.33810425]
[427.17141724 -294.93774414]
[433.40264893 -308.58224487]
[439.63388062 -322.22671509]
[445.86511230 -335.87118530]
[438.40481567 -349.34896851]
[440.28915405 -364.45864868]
[450.58746338 -375.43173218]
[465.19760132 -378.20346069]
[471.42883301 -391.84793091]
[477.66003418 -405.49240112]
[473.89248657 -417.82351685]
[479.35827637 -429.05752563]
[490.63867188 -433.41390991]
[497.06408691 -446.96801758]
[503.48950195 -460.52215576]
[509.91494751 -474.07626343]
[516.34039307 -487.63037109]
[506.71109009 -499.47265625]
[503.18194580 -514.32214355]
[506.45364380 -529.23052979]
[515.87658691 -541.23760986]
[529.57983398 -547.95947266]
[544.84259033 -548.06152344]
[558.63446045 -541.52337646]
[568.21704102 -529.64324951]
[571.68768311 -514.77996826]
[568.35729980 -499.88461304]
[558.88714600 -487.91467285]
[545.15753174 -481.24682617]
[529.89447021 -481.20492554]
[523.46905518 -467.65081787]
[517.04364014 -454.09671021]
[510.61819458 -440.54260254]
[504.19277954 -426.98849487]
[506.54904175 -409.59555054]
[491.30453491 -399.26119995]
[485.07330322 -385.61669922]
[478.84207153 -371.97222900]
[486.31494141 -359.11553955]
[484.76602173 -344.14675903]
[474.58084106 -332.82794189]
[459.50958252 -329.63995361]
[453.27835083 -315.99548340]
[447.04711914 -302.35101318]
[440.81591797 -288.70651245]
[440.89648438 -281.32131958]
[434.39703369 -274.91268921]
[427.97161865 -261.35858154]
[434.29415894 -245.77124023]
[427.24526978 -230.12727356]
[410.74325562 -224.31230164]
[404.51202393 -210.66783142]
[398.28079224 -197.02334595]
[392.04956055 -183.37886047]
[392.13015747 -175.99366760]
[385.63070679 -169.58502197]
[379.20529175 -156.03091431]
[382.52542114 -155.72100830]
[385.93347168 -154.89295959]
[389.35690308 -153.52749634]
[392.72048950 -151.61486816]
[407.50079346 -149.05703735]
[424.63619995 -155.80780029]
[437.66357422 -144.04544067]
[452.47891235 -141.69892883]
[465.11593628 -151.19004822]
[480.75091553 -148.88288879]
[490.10787964 -136.14624023]
[487.63555908 -120.53652191]
[474.80068970 -111.31471252]
[459.21798706 -113.95195007]
[450.13238525 -126.88359833]
[435.31707764 -129.23011780]
[425.35382080 -122.37741089]
[412.99536133 -124.20652008]
[404.94296265 -134.27673340]
[390.16265869 -136.83456421]
[384.72052002 -122.85660553]
[397.33932495 -114.74699402]
[409.95812988 -106.63738251]
[425.87710571 -108.62884521]
[437.25833130 -97.32186890]
[435.37106323 -81.39021301]
[421.66311646 -73.05526733]
[406.64999390 -78.71089172]
[401.84851074 -94.01857758]
[389.22970581 -102.12818909]
[376.61093140 -110.23780060]
[361.07839966 -111.13990784]
[349.75354004 -118.83879089]
[338.14141846 -109.34360504]
[326.52929688 -99.84841919]
[314.91717529 -90.35323334]
[313.40011597 -78.35639191]
[303.80938721 -70.35043335]
[290.93420410 -71.04333496]
[279.18765259 -61.71493149]
[267.44113159 -52.38652802]
[262.28616333 -38.41242599]
[246.66744995 -35.88928223]
[234.92092896 -26.56087685]
[223.17439270 -17.23247337]
[211.42787170 -7.90407038]
[206.27290344 6.07003212]
[190.65419006 8.59317684]
[178.90765381 17.92158127]
[167.16113281 27.24998474]
[165.72369385 42.03069305]
[153.94393921 51.65835571]
[138.45031738 50.05043030]
[126.70378876 59.37883377]
[114.95726013 68.70723724]
[103.21073914 78.03564453]
[116.50206757 71.08290100]
[131.49778748 70.72457123]
[145.10603333 77.03453827]
[154.52101135 88.71179199]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 16]
[4 15]
[5 14]
[31 40]
[32 39]
[41 67]
[42 66]
[43 64]
[44 63]
[45 62]
[47 60]
[48 59]
[49 58]
[68 215]
[69 214]
[70 213]
[71 212]
[74 209]
[75 208]
[76 207]
[78 205]
[79 204]
[80 203]
[81 202]
[83 200]
[84 199]
[85 198]
[87 195]
[88 194]
[89 193]
[90 192]
[92 159]
[93 158]
[94 156]
[95 155]
[96 154]
[97 153]
[101 150]
[102 149]
[103 147]
[104 146]
[105 145]
[106 144]
[110 140]
[111 139]
[112 138]
[115 136]
[116 135]
[117 134]
[118 133]
[119 132]
[163 179]
[164 178]
[166 175]
[167 174]
[180 190]
[181 189]
[182 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
