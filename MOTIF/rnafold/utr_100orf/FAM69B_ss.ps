%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:26:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGCGAGGGAGCGGCGGCCGCUGCGGGCCGGGCCGGGCCGGGGCUGAGGCCGAGCGAGCCGCGGGGCCCGCGCAGCCCCGGCCGGAGCCCACCAUGCGGCGGCUGCGGCGCCUGGCGCACCUGGUGCUCUUCUGCCCCUUCUCCAAGCGCCUGCAGGGCCGGCUCCCAGGCCUCAGGGUCCGCUGCAUCUUCC\
) } def
/len { sequence length } bind def

/coor [
[207.49111938 250.91453552]
[222.17666626 253.96911621]
[211.87327576 243.06773376]
[201.56988525 232.16633606]
[187.20446777 228.23136902]
[183.34838867 212.88728333]
[173.04501343 201.98588562]
[162.74162292 191.08450317]
[152.43823242 180.18312073]
[142.13484192 169.28172302]
[127.76943207 165.34675598]
[123.91334534 150.00267029]
[113.60996246 139.10127258]
[103.30657959 128.19989014]
[81.30397797 103.57551575]
[67.45737457 97.80737305]
[53.61076736 92.03922272]
[39.76416397 86.27107239]
[25.91755867 80.50292206]
[12.07095432 74.73477936]
[-1.77565074 68.96662903]
[-15.62225533 63.19848251]
[-29.46886063 57.43033218]
[-43.31546402 51.66218567]
[-57.16207123 45.89403534]
[-71.00867462 40.12588882]
[-84.90129852 34.46946716]
[-98.83902740 28.92513657]
[-110.98052979 33.30371857]
[-122.48014832 28.38883209]
[-127.38069916 17.32024765]
[-141.22731018 11.55210018]
[-155.07391357 5.78395224]
[-168.92051697 0.01580404]
[-184.96371460 6.97366714]
[-200.76687622 0.31315747]
[-206.74926758 -15.39822960]
[-220.68699646 -20.94256020]
[-234.62474060 -26.48689079]
[-248.56246948 -32.03121948]
[-262.50021362 -37.57555008]
[-276.43792725 -43.11988068]
[-290.37567139 -48.66421127]
[-304.31338501 -54.20854187]
[-318.25112915 -59.75287247]
[-332.18887329 -65.29720306]
[-346.12658691 -70.84152985]
[-367.09042358 -66.44120026]
[-379.22192383 -83.12953949]
[-393.41125488 -87.99401855]
[-407.60055542 -92.85848999]
[-421.78988647 -97.72296906]
[-435.85440063 -91.02767181]
[-450.17510986 -96.16307068]
[-456.47137451 -109.61270142]
[-470.66070557 -114.47718048]
[-484.85000610 -119.34165955]
[-501.79394531 -118.75869751]
[-507.04464722 -134.87905884]
[-493.00781250 -144.38714600]
[-479.98553467 -133.53097534]
[-465.79620361 -128.66650391]
[-451.60690308 -123.80202484]
[-438.38305664 -130.55964661]
[-423.92376709 -125.82849884]
[-416.92541504 -111.91229248]
[-402.73608398 -107.04781342]
[-388.54675293 -102.18333435]
[-374.35745239 -97.31886292]
[-367.10488892 -102.48081207]
[-358.15304565 -103.73809052]
[-349.49942017 -100.68209076]
[-343.13406372 -93.88112640]
[-340.58227539 -84.77926636]
[-326.64453125 -79.23493195]
[-312.70678711 -73.69060516]
[-298.76907349 -68.14627075]
[-284.83132935 -62.60194397]
[-270.89361572 -57.05761337]
[-256.95587158 -51.51328278]
[-243.01814270 -45.96895218]
[-229.08039856 -40.42462158]
[-215.14266968 -34.88029099]
[-201.20494080 -29.33596230]
[-190.19335938 -36.04225540]
[-177.13516235 -35.16454315]
[-166.81758118 -26.79984474]
[-163.15235901 -13.83080101]
[-149.30575562 -8.06265259]
[-135.45915222 -2.29450488]
[-121.61254883 3.47364330]
[-104.36267090 0.27841100]
[-93.29470062 14.98740292]
[-79.35696411 20.53173256]
[-71.96990967 20.08226967]
[-65.24052429 26.27928352]
[-51.39392090 32.04743195]
[-37.54731750 37.81557846]
[-23.70071220 43.58372879]
[-9.85410786 49.35187531]
[3.99249744 55.12002563]
[17.83910179 60.88817215]
[31.68570709 66.65631866]
[45.53231049 72.42446899]
[59.37891769 78.19261932]
[73.22552490 83.96076202]
[87.07212830 89.72891235]
[101.60686493 86.02197266]
[110.99964142 74.32685852]
[120.39241791 62.63174438]
[129.78520203 50.93663025]
[139.17797852 39.24151611]
[148.57075500 27.54640007]
[151.17964172 11.94177628]
[165.18185425 6.86363125]
[174.57463074 -4.83148384]
[176.53863525 -21.11259842]
[191.72470093 -27.30254936]
[204.51069641 -17.03364563]
[201.74348450 -0.86965573]
[186.26974487 4.56129408]
[176.87696838 16.25640869]
[174.93991089 31.02451897]
[160.26586914 36.93917847]
[150.87309265 48.63429260]
[141.48031616 60.32940674]
[132.08753967 72.02452087]
[122.69475555 83.71963501]
[113.30197906 95.41475677]
[127.25581360 89.91107178]
[139.82395935 98.09896088]
[140.42799377 113.08679199]
[128.55949402 122.25951385]
[114.20796204 117.89650726]
[124.51135254 128.79789734]
[134.81474304 139.69927979]
[149.91712952 144.41398621]
[153.03623962 158.97834778]
[163.33961487 169.87973022]
[173.64300537 180.78111267]
[183.94639587 191.68251038]
[194.24978638 202.58389282]
[209.35217285 207.29859924]
[212.47128296 221.86296082]
[222.77465820 232.76434326]
[233.07804871 243.66572571]
[244.30570984 253.61256409]
[256.36953735 262.52682495]
[268.43338013 271.44107056]
[280.49722290 280.35531616]
[292.77294922 288.97543335]
[305.25338745 297.29641724]
[317.73379517 305.61743164]
[330.21423340 313.93841553]
[336.79779053 314.74703979]
[341.30090332 318.24136353]
[342.95675659 322.73391724]
[355.16262817 331.45266724]
[367.36849976 340.17141724]
[379.57440186 348.89013672]
[391.78027344 357.60888672]
[406.45559692 352.56756592]
[421.28146362 357.14718628]
[430.55706787 369.58676147]
[430.71572876 385.10302734]
[421.69644165 397.72964478]
[406.96731567 402.61148071]
[392.19198608 397.87130737]
[383.05184937 385.33184814]
[383.06152344 369.81475830]
[370.85565186 361.09603882]
[358.64978027 352.37728882]
[346.44387817 343.65853882]
[334.23800659 334.93981934]
[321.89324951 326.41885376]
[309.41281128 318.09783936]
[296.93237305 309.77685547]
[284.45196533 301.45587158]
[280.92941284 301.79187012]
[277.06933594 300.42996216]
[273.67535400 297.23037720]
[271.58297729 292.41915894]
[259.51913452 283.50491333]
[247.45530701 274.59066772]
[235.39146423 265.67642212]
[240.19393921 279.88684082]
[237.94099426 294.71667480]
[229.13493347 306.85971069]
[215.73899841 313.60870361]
[200.73974609 313.45898438]
[187.48117065 306.44396973]
[178.91921997 294.12762451]
[176.96272278 279.25576782]
[182.04785156 265.14401245]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 146]
[3 145]
[4 144]
[6 142]
[7 141]
[8 140]
[9 139]
[10 138]
[12 136]
[13 135]
[14 134]
[15 107]
[16 106]
[17 105]
[18 104]
[19 103]
[20 102]
[21 101]
[22 100]
[23 99]
[24 98]
[25 97]
[26 96]
[27 94]
[28 93]
[31 91]
[32 90]
[33 89]
[34 88]
[37 84]
[38 83]
[39 82]
[40 81]
[41 80]
[42 79]
[43 78]
[44 77]
[45 76]
[46 75]
[47 74]
[49 69]
[50 68]
[51 67]
[52 66]
[55 63]
[56 62]
[57 61]
[108 129]
[109 128]
[110 127]
[111 126]
[112 125]
[113 124]
[115 122]
[116 121]
[147 185]
[148 184]
[149 183]
[150 182]
[151 178]
[152 177]
[153 176]
[154 175]
[157 174]
[158 173]
[159 172]
[160 171]
[161 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
