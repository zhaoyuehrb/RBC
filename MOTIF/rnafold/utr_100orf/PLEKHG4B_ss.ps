%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:11:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGCGGCCUCGGCCCAGUGCACAGCGGGACCAGGCAGAGUUCGGGGAAAGCGUCGGAGUUCGGGAGACCAGGGUCCAGCAUGGGUUUCAGCACAGCAGACGGCGGGGGCGGCCCAGGCGCCCGGGAUCUGGAAUCUCUUGAUGCCUGUAUCCAGAGGACGCUCUCUGCCUUGUACCCAC\
) } def
/len { sequence length } bind def

/coor [
[9.78890228 396.26165771]
[2.09010315 406.87747192]
[-8.73612118 414.22064209]
[-21.38444901 417.43212891]
[-34.33877945 416.14941406]
[-41.07933807 429.54959106]
[-47.35335541 443.17443848]
[-53.15335464 457.00772095]
[-58.95335770 470.84103394]
[-56.34739304 487.03179932]
[-69.23509979 497.17276001]
[-84.35871887 490.83175659]
[-86.16035461 474.53186035]
[-72.78665161 465.04101562]
[-66.98664856 451.20773315]
[-61.18664551 437.37445068]
[-62.14427948 434.71365356]
[-62.09168243 431.50857544]
[-60.81441879 428.14718628]
[-58.24421692 425.08850098]
[-54.47951889 422.80902100]
[-47.73896408 409.40884399]
[-58.41925430 396.34536743]
[-62.34030533 379.87677002]
[-58.66896820 363.29409790]
[-48.09433365 349.93292236]
[-32.69900513 342.50238037]
[-15.54907990 342.53582764]
[-9.27506256 328.91094971]
[-3.00104594 315.28610229]
[3.15514612 301.60760498]
[9.19305515 287.87649536]
[7.23334169 273.11135864]
[19.87107277 263.59304810]
[25.90898132 249.86193848]
[31.94688988 236.13081360]
[37.98479843 222.39968872]
[44.02270889 208.66857910]
[50.06061554 194.93745422]
[56.09852600 181.20632935]
[62.13643265 167.47521973]
[56.51222610 153.73098755]
[62.43991852 139.71966553]
[76.89426422 133.91366577]
[82.93217468 120.18254852]
[75.36669159 111.35945129]
[72.17958832 99.87039948]
[74.21790314 87.81824493]
[81.34720612 77.52180481]
[92.43023682 71.07003021]
[105.50264740 69.90052795]
[118.11991882 74.48719788]
[122.21021271 60.05565262]
[126.30050659 45.62410736]
[130.39079285 31.19256020]
[134.48109436 16.76101494]
[138.57138062 2.32947040]
[142.53697205 -12.13683891]
[146.37756348 -26.63683510]
[150.21813965 -41.13683319]
[153.93344116 -55.66943359]
[157.52317810 -70.23356628]
[161.11291504 -84.79769135]
[156.90304565 -100.04850769]
[167.46134949 -110.55429840]
[171.05108643 -125.11842346]
[174.64082336 -139.68255615]
[166.72717285 -153.09939575]
[170.57514954 -167.81835938]
[183.41484070 -175.28013611]
[187.00456238 -189.84425354]
[186.01966858 -198.95213318]
[190.78399658 -204.62771606]
[194.62458801 -219.12771606]
[198.46516418 -233.62770081]
[202.30575562 -248.12770081]
[200.92237854 -253.21464539]
[201.57975769 -257.85330200]
[203.76004028 -261.33670044]
[206.73867798 -263.26879883]
[211.32466125 -277.55056763]
[208.17698669 -293.05548096]
[219.43495178 -302.80780029]
[224.02091980 -317.08956909]
[228.60690308 -331.37133789]
[233.19287109 -345.65310669]
[237.77885437 -359.93487549]
[242.36483765 -374.21664429]
[241.24661255 -379.36834717]
[242.14321899 -383.96676636]
[244.50086975 -387.33264160]
[247.57554626 -389.10797119]
[252.89460754 -403.13323975]
[243.43620300 -417.14096069]
[244.17381287 -433.86065674]
[254.61970520 -446.72326660]
[270.51074219 -450.79296875]
[275.58694458 -464.90792847]
[270.07946777 -479.97601318]
[278.54901123 -493.60122681]
[294.49850464 -495.33148193]
[305.69281006 -483.83944702]
[303.54467773 -467.94085693]
[289.70190430 -459.83175659]
[284.62573242 -445.71676636]
[293.13256836 -435.40863037]
[295.44714355 -422.13552856]
[290.85824585 -409.35253906]
[280.46588135 -400.44097900]
[266.91986084 -397.81414795]
[261.60076904 -383.78890991]
[256.64660645 -369.63064575]
[252.06062317 -355.34890747]
[247.47463989 -341.06713867]
[242.88867188 -326.78536987]
[238.30268860 -312.50360107]
[233.71670532 -298.22183228]
[237.19239807 -283.73843384]
[225.60643005 -272.96459961]
[221.02044678 -258.68283081]
[216.80575562 -244.28710938]
[212.96516418 -229.78712463]
[209.12458801 -215.28712463]
[205.28399658 -200.78712463]
[201.56869507 -186.25451660]
[197.97895813 -171.69039917]
[205.88027954 -159.11642456]
[202.44725037 -144.29519653]
[189.20494080 -136.09281921]
[185.61520386 -121.52868652]
[182.02548218 -106.96456146]
[186.49211121 -92.75546265]
[175.67704773 -81.20795441]
[172.08731079 -66.64382935]
[168.49757385 -52.07970047]
[169.95339966 -44.81391525]
[164.71813965 -37.29624557]
[160.87756348 -22.79624939]
[157.03697205 -8.29625320]
[158.36717224 -1.00642085]
[153.00292969 6.41976357]
[148.91264343 20.85130882]
[144.82234192 35.28285599]
[140.73205566 49.71440125]
[136.64175415 64.14594269]
[132.55146790 78.57749176]
[138.23185730 92.46032715]
[151.26518250 99.88545990]
[164.29849243 107.31059265]
[180.68533325 106.67520905]
[189.19889832 120.69130707]
[181.08117676 134.94033813]
[164.68298340 134.76409912]
[156.87336731 120.34391022]
[143.84004211 112.91877747]
[130.80673218 105.49364471]
[126.88505554 114.01891327]
[120.76420593 120.74068451]
[113.14845276 125.14614868]
[104.84154510 126.97299957]
[96.66329193 126.22045135]
[90.62538910 139.95156860]
[96.11695862 154.52827454]
[89.79805756 168.36758423]
[75.86755371 173.51312256]
[69.82964325 187.24424744]
[63.79173660 200.97535706]
[57.75382996 214.70648193]
[51.71591949 228.43760681]
[45.67800903 242.16871643]
[39.64010239 255.89984131]
[33.60219193 269.63095093]
[35.13003540 285.37823486]
[22.92417526 293.91439819]
[16.88626671 307.64550781]
[16.29216766 316.78720093]
[10.62381077 321.56011963]
[4.34979343 335.18496704]
[-1.92422366 348.80984497]
[7.21670532 358.39010620]
[12.53768444 370.48059082]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 22]
[6 21]
[7 16]
[8 15]
[9 14]
[28 179]
[29 178]
[30 177]
[31 175]
[32 174]
[34 172]
[35 171]
[36 170]
[37 169]
[38 168]
[39 167]
[40 166]
[41 165]
[44 162]
[45 161]
[52 146]
[53 145]
[54 144]
[55 143]
[56 142]
[57 141]
[58 139]
[59 138]
[60 137]
[61 135]
[62 134]
[63 133]
[65 131]
[66 130]
[67 129]
[70 126]
[71 125]
[73 124]
[74 123]
[75 122]
[76 121]
[80 120]
[81 119]
[83 117]
[84 116]
[85 115]
[86 114]
[87 113]
[88 112]
[92 111]
[93 110]
[97 105]
[98 104]
[147 156]
[148 155]
[149 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
