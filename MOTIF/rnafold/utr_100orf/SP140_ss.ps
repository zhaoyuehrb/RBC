%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:37:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUUUCUUUUCCUCUUUGACUGAGCACCGAGGGGCAGUUGGCAGCUUCACCUCAGAGCUGCAGGAAGGAACGGGGCAGUGAAAAUCGAAUCGGGUGUGAUCCUAGGCCAAGCUCAUGGCCCAGCAGGGCCAGCAGGGGCAGAUGGCAAGUGGAGACAGCAAUCUCAACUUCAGGAUGGUCGCAGAGAUCCAGAACGUAGAGGGUCAGAACCUGC\
) } def
/len { sequence length } bind def

/coor [
[-159.52224731 183.15734863]
[-173.38044739 188.89759827]
[-187.23863220 194.63784790]
[-197.02738953 207.06727600]
[-211.74679565 204.78945923]
[-225.60499573 210.52970886]
[-239.46318054 216.26995850]
[-253.32138062 222.01020813]
[-263.11013794 234.43965149]
[-277.82952881 232.16183472]
[-291.68774414 237.90208435]
[-305.54592896 243.64233398]
[-319.40411377 249.38258362]
[-333.26229858 255.12283325]
[-347.07839966 260.96371460]
[-360.85162354 266.90490723]
[-374.62487793 272.84609985]
[-364.75146484 290.81573486]
[-373.20300293 316.65509033]
[-384.55224609 326.46301270]
[-395.90145874 336.27090454]
[-407.25067139 346.07882690]
[-418.59991455 355.88674927]
[-419.87670898 360.02798462]
[-422.17245483 363.22753906]
[-425.06671143 365.28088379]
[-428.11581421 366.14086914]
[-430.90606689 365.91149902]
[-442.80636597 375.04290771]
[-448.57873535 390.39257812]
[-464.80007935 392.80105591]
[-474.78323364 379.79074097]
[-468.25842285 364.74551392]
[-451.93780518 363.14260864]
[-440.03750610 354.01119995]
[-428.40780640 344.53750610]
[-417.05859375 334.72961426]
[-405.70938110 324.92169189]
[-394.36013794 315.11376953]
[-383.01092529 305.30587769]
[-385.83059692 298.35607910]
[-394.28958130 277.50671387]
[-409.26419067 278.37890625]
[-424.23883057 279.25106812]
[-439.21343994 280.12322998]
[-454.18804932 280.99542236]
[-469.16268921 281.86758423]
[-484.13729858 282.73974609]
[-493.32968140 295.39022827]
[-508.51541138 299.12213135]
[-522.52429199 292.17337036]
[-528.74176025 277.82495117]
[-524.23211670 262.85174561]
[-511.12463379 254.32365417]
[-495.60830688 256.26736450]
[-485.00949097 267.76513672]
[-470.03485107 266.89297485]
[-455.06024170 266.02078247]
[-440.08560181 265.14862061]
[-425.11099243 264.27645874]
[-410.13638306 263.40426636]
[-395.16174316 262.53210449]
[-380.56607056 259.07287598]
[-366.79281616 253.13166809]
[-353.01959229 247.19047546]
[-348.12469482 241.65693665]
[-339.00256348 241.26463318]
[-325.14437866 235.52438354]
[-311.28616333 229.78413391]
[-297.42797852 224.04388428]
[-283.56979370 218.30363464]
[-274.77224731 206.28479004]
[-259.06161499 208.15202332]
[-245.20343018 202.41177368]
[-231.34524536 196.67152405]
[-217.48704529 190.93127441]
[-208.68951416 178.91241455]
[-192.97888184 180.77964783]
[-179.12069702 175.03939819]
[-165.26249695 169.29914856]
[-165.44767761 162.64968872]
[-164.10963440 156.11499023]
[-161.31057739 150.04029846]
[-157.19013977 144.74853516]
[-151.95841980 140.52302551]
[-145.88525391 137.59242249]
[-139.28639221 136.11828613]
[-132.50697327 136.18626404]
[-125.90354919 137.80108643]
[-119.82529449 140.88591003]
[-114.59557343 145.28593445]
[-110.49470520 150.77619934]
[-96.00582123 146.89392090]
[-81.51692963 143.01162720]
[-67.02804565 139.12934875]
[-52.53915787 135.24705505]
[-40.81446075 122.18740845]
[-23.06759644 127.10618591]
[-8.63670540 123.01358795]
[5.79418612 118.92098999]
[20.22507668 114.82838440]
[34.65596771 110.73578644]
[49.08686066 106.64318848]
[63.51774979 102.55059052]
[69.32878113 76.87158966]
[91.65574646 60.61725998]
[120.44612885 63.19844818]
[128.32077026 50.43169785]
[136.19541931 37.66494751]
[144.07006836 24.89819717]
[143.75009155 4.73985100]
[161.15823364 -3.68196750]
[168.65823364 -16.67234802]
[176.15823364 -29.66272926]
[183.65823364 -42.65311050]
[182.36097717 -64.04547119]
[200.66622925 -73.58298492]
[207.59245300 -86.88815308]
[214.51869202 -100.19331360]
[221.44491577 -113.49847412]
[228.37113953 -126.80363464]
[235.29737854 -140.10879517]
[234.04187012 -156.45982361]
[247.72550964 -165.49807739]
[262.27172852 -157.92579651]
[262.71664429 -141.53268433]
[248.60253906 -133.18257141]
[241.67631531 -119.87741089]
[234.75007629 -106.57225037]
[227.82385254 -93.26708221]
[220.89761353 -79.96192169]
[213.97138977 -66.65676117]
[217.98228455 -58.74287033]
[217.90270996 -49.73344421]
[213.62413025 -41.64846420]
[205.99354553 -36.35865402]
[196.64862061 -35.15311050]
[189.14862061 -22.16272926]
[181.64862061 -9.17234898]
[174.14862061 3.81803250]
[177.66938782 13.40569115]
[175.28349304 23.56240463]
[167.54328918 30.88152885]
[156.83682251 32.77284622]
[148.96217346 45.53959656]
[141.08752441 58.30634689]
[133.21287537 71.07309723]
[140.99447632 83.89677429]
[155.95483398 82.80690765]
[170.91519165 81.71703339]
[185.87553406 80.62716675]
[199.07705688 71.90762329]
[212.33287048 78.69973755]
[227.29322815 77.60986328]
[242.25357056 76.51999664]
[257.21392822 75.43013000]
[267.35681152 63.30999374]
[283.10629272 61.99509811]
[295.11853027 72.26554871]
[296.26681519 88.02806091]
[285.86996460 99.93103027]
[270.09616089 100.91262054]
[258.30380249 90.39048004]
[243.34344482 91.48034668]
[228.38308716 92.57022095]
[213.42274475 93.66008759]
[201.29127502 102.30167389]
[186.96540833 95.58751678]
[172.00505066 96.67739105]
[157.04470825 97.76725769]
[142.08435059 98.85712433]
[140.00556946 104.49238586]
[137.21232605 109.53362274]
[133.82823181 113.89642334]
[146.23934937 122.32045746]
[158.65045166 130.74449158]
[171.06156921 139.16851807]
[184.85041809 132.40368652]
[200.17324829 133.45559692]
[212.90827942 142.04130554]
[219.62986755 155.85130310]
[218.52993774 171.17076111]
[209.90434265 183.87881470]
[196.07334900 190.55708313]
[180.75741577 189.40913391]
[168.07646179 180.74374390]
[161.44157410 166.89189148]
[162.63754272 151.57963562]
[150.22642517 143.15559387]
[137.81530762 134.73156738]
[125.40419769 126.30754089]
[120.11369324 130.54339600]
[114.13243866 133.73031616]
[107.66582489 135.75885010]
[100.93595886 136.55932617]
[94.17394257 136.10424805]
[87.61200714 134.40927124]
[81.47550964 131.53257751]
[75.97519684 127.57296753]
[71.29995728 122.66643524]
[67.61035156 116.98147583]
[53.17945862 121.07408142]
[38.74856949 125.16667938]
[24.31767654 129.25927734]
[9.88678646 133.35188293]
[-4.54410553 137.44447327]
[-18.97499657 141.53707886]
[-25.92914963 152.39704895]
[-38.03007889 155.51008606]
[-48.65687180 149.73594666]
[-63.14575958 153.61824036]
[-77.63465118 157.50051880]
[-92.12353516 161.38279724]
[-106.61241913 165.26509094]
[-116.41139221 187.23493958]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 80]
[2 79]
[3 78]
[5 76]
[6 75]
[7 74]
[8 73]
[10 71]
[11 70]
[12 69]
[13 68]
[14 67]
[15 65]
[16 64]
[17 63]
[19 40]
[20 39]
[21 38]
[22 37]
[23 36]
[28 35]
[29 34]
[42 62]
[43 61]
[44 60]
[45 59]
[46 58]
[47 57]
[48 56]
[92 214]
[93 213]
[94 212]
[95 211]
[96 210]
[98 207]
[99 206]
[100 205]
[101 204]
[102 203]
[103 202]
[104 201]
[107 147]
[108 146]
[109 145]
[110 144]
[112 140]
[113 139]
[114 138]
[115 137]
[117 132]
[118 131]
[119 130]
[120 129]
[121 128]
[122 127]
[148 171]
[149 170]
[150 169]
[151 168]
[153 166]
[154 165]
[155 164]
[156 163]
[174 191]
[175 190]
[176 189]
[177 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
