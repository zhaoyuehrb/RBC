%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:54:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGCACCAUGCUCAAGUGCAUCCCGCUGUGGCGCUGCAACCGGCACGUGGAGUCGGUGGACAAGCGGCACUGUUCGCUGCAGGCCGUGCCGGAGGAGAUCUACCGCU\
) } def
/len { sequence length } bind def

/coor [
[35.36436081 230.58462524]
[20.35837364 236.63719177]
[4.43393898 234.35395813]
[-4.52343988 246.38580322]
[-13.48081875 258.41766357]
[-22.43819809 270.44949341]
[-16.91255188 284.85333252]
[-20.07376099 299.95336914]
[-30.91309166 310.93118286]
[-45.97175598 314.28381348]
[-60.44458771 308.94146729]
[-69.71335602 296.60885620]
[-70.82043457 281.22125244]
[-63.41255951 267.68881226]
[-49.85355377 260.32968140]
[-34.47004700 261.49212646]
[-25.51266670 249.46026611]
[-16.55528831 237.42842102]
[-7.59790897 225.39657593]
[-13.84612370 213.15982056]
[-14.18079758 199.35774231]
[-8.47836876 186.71133423]
[2.18886518 177.73870850]
[15.75390720 174.25369263]
[29.55545998 176.99946594]
[38.85899353 165.23323059]
[40.68363953 150.45080566]
[55.31225586 144.42468262]
[64.61578369 132.65844727]
[73.91931915 120.89221954]
[83.22285461 109.12598419]
[81.64501190 94.72262573]
[90.63192749 83.35681915]
[105.01091003 81.57048798]
[114.31444550 69.80425262]
[109.60002136 56.75873947]
[111.96858215 43.20161438]
[120.68817902 32.69482422]
[133.37277222 27.94433212]
[146.63432312 30.10365295]
[156.27613831 18.61298561]
[165.91795349 7.12231874]
[175.55976868 -4.36834764]
[185.20158386 -15.85901451]
[194.84339905 -27.34968185]
[204.48521423 -38.84034729]
[214.12702942 -50.33101273]
[207.80117798 -63.06066132]
[206.83706665 -77.19910431]
[211.34851074 -90.58718109]
[220.61569214 -101.19309998]
[233.19972229 -107.42080688]
[247.16606140 -108.35009766]
[260.38183594 -103.87247467]
[270.35375977 -115.07785034]
[280.32571411 -126.28322601]
[290.29763794 -137.48860168]
[300.26959229 -148.69398499]
[310.24151611 -159.89935303]
[320.21347046 -171.10473633]
[330.18539429 -182.31010437]
[340.15734863 -193.51548767]
[336.71148682 -208.64511108]
[342.84762573 -222.89738464]
[356.20629883 -230.79200745]
[371.65084839 -229.29335022]
[383.24249268 -218.97766113]
[386.52401733 -203.81153870]
[380.23361206 -189.62667847]
[366.79006958 -181.87742615]
[351.36270142 -183.54354858]
[341.39077759 -172.33816528]
[331.41882324 -161.13279724]
[321.44689941 -149.92741394]
[311.47494507 -138.72204590]
[301.50302124 -127.51667023]
[291.53109741 -116.31128693]
[281.55914307 -105.10591125]
[271.58721924 -93.90053558]
[278.00482178 -79.34447479]
[277.46716309 -63.38766098]
[270.03060913 -49.19408798]
[257.12442017 -39.59992981]
[241.27636719 -36.54684067]
[225.61769104 -40.68920135]
[215.97587585 -29.19853401]
[206.33406067 -17.70786667]
[196.69224548 -6.21720028]
[187.05043030 5.27346611]
[177.40861511 16.76413345]
[167.76679993 28.25479889]
[158.12498474 39.74546814]
[162.61694336 55.46043015]
[156.85163879 70.93061829]
[142.89404297 80.05383301]
[126.08068085 79.10778046]
[116.77714539 90.87401581]
[118.35498810 105.27737427]
[109.36807251 116.64318085]
[94.98908997 118.42951202]
[85.68555450 130.19575500]
[76.38201904 141.96199036]
[67.07849121 153.72822571]
[64.58839417 169.35223389]
[50.62522888 174.53675842]
[41.32169342 186.30299377]
[47.57931900 201.52787781]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 19]
[4 18]
[5 17]
[6 16]
[25 106]
[26 105]
[28 103]
[29 102]
[30 101]
[31 100]
[34 97]
[35 96]
[40 92]
[41 91]
[42 90]
[43 89]
[44 88]
[45 87]
[46 86]
[47 85]
[54 79]
[55 78]
[56 77]
[57 76]
[58 75]
[59 74]
[60 73]
[61 72]
[62 71]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
