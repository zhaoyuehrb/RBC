%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:32:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGAGCUCUGAGCGCCUGCGGUCUCCUGUGUGCUGCUCUCUGUGGGGUCCUGUAGACCCAGAGAGGCUCAGCUGCACUCGCCCGGCUGGGAGAGCUGGGUGUGGGGAACAUGGCCGGGCCUCCGAGGCUCCUGCUGCUGCCCCUGCUUCUGGCGCUGGCUCGCGGCCUGCCUGGGGCCCUGGCUGCCCAAGAGGUGCAGCAGUCUCCCC\
) } def
/len { sequence length } bind def

/coor [
[152.62130737 87.37885284]
[159.51544189 74.05490112]
[146.30650330 81.16293335]
[133.09757996 88.27096558]
[119.88864136 95.37899017]
[106.67971039 102.48702240]
[112.68776703 107.74700165]
[116.69377899 115.24027252]
[118.09934235 124.35312653]
[116.47429657 134.33267212]
[111.58629608 144.32975769]
[102.23394775 156.05723572]
[92.88159943 167.78469849]
[83.52925873 179.51217651]
[74.17691040 191.23965454]
[72.81536865 197.71067810]
[68.96749115 201.89421082]
[64.36514282 203.17254639]
[54.66614914 214.61499023]
[44.96715546 226.05743408]
[35.26816177 237.49987793]
[32.87396622 253.72331238]
[17.52940559 259.50921631]
[5.01965046 248.90551758]
[8.21366405 232.82043457]
[23.82571793 227.80088806]
[33.52471161 216.35844421]
[43.22370529 204.91600037]
[52.92269897 193.47355652]
[62.44943619 181.88729858]
[71.80178070 170.15983582]
[81.15412903 158.43235779]
[90.50647736 146.70487976]
[99.85882568 134.97741699]
[96.40400696 128.32051086]
[86.03955078 108.34983826]
[71.06639862 109.24690247]
[56.09324646 110.14395905]
[41.12009430 111.04102325]
[26.14694405 111.93808746]
[11.17379093 112.83515167]
[6.81715202 115.71315002]
[2.24902964 116.54820251]
[-1.71679378 115.60195160]
[-4.48839045 113.42118835]
[-19.48671150 113.64557648]
[-34.48503494 113.86997223]
[-49.48335648 114.09436035]
[-64.48167419 114.31874847]
[-76.64171600 124.78359985]
[-92.37770081 121.65976715]
[-99.61833191 107.34359741]
[-92.80921936 92.81722260]
[-77.17372131 89.22403717]
[-64.70606995 99.32042694]
[-49.70774460 99.09603882]
[-34.70942307 98.87165070]
[-19.71110344 98.64725494]
[-4.71278143 98.42286682]
[10.27672863 97.86199951]
[25.24988174 96.96493530]
[40.22303391 96.06787109]
[55.19618607 95.17080688]
[70.16933441 94.27375031]
[85.14248657 93.37668610]
[99.57167816 89.27809143]
[112.78060913 82.17005920]
[125.98954773 75.06202698]
[139.19847107 67.95400238]
[152.40740967 60.84597015]
[164.98747253 52.67638397]
[176.85353088 43.50051880]
[188.71960449 34.32465363]
[200.58566284 25.14879036]
[212.45173645 15.97292614]
[224.31779480 6.79706192]
[236.18386841 -2.37880254]
[248.04992676 -11.55466747]
[251.49703979 -26.15320969]
[244.98878479 -39.66774368]
[238.48051453 -53.18227768]
[231.97225952 -66.69680786]
[225.46400452 -80.21134186]
[218.95574951 -93.72587585]
[212.44749451 -107.24040985]
[205.93923950 -120.75494385]
[199.43098450 -134.26947021]
[184.82405090 -140.90402222]
[181.04376221 -156.49533081]
[190.99000549 -169.08308411]
[207.03289795 -169.01103210]
[216.86569214 -156.33445740]
[212.94551086 -140.77772522]
[219.45378113 -127.26319885]
[225.96203613 -113.74866486]
[232.47029114 -100.23413086]
[238.97854614 -86.71959686]
[245.48680115 -73.20506287]
[251.99505615 -59.69053268]
[258.50329590 -46.17599869]
[265.01156616 -32.66146469]
[278.93328857 -27.07706070]
[292.97680664 -32.34768295]
[307.02032471 -37.61830521]
[321.06387329 -42.88892746]
[308.69720459 -51.37810516]
[307.47076416 -66.32788086]
[318.28848267 -76.71906281]
[333.17684937 -74.89251709]
[341.16195679 -62.19454956]
[336.35885620 -47.98536682]
[350.75698853 -52.19177628]
[365.15512085 -56.39818954]
[379.55322266 -60.60459900]
[393.95135498 -64.81101227]
[408.31762695 -69.12500000]
[422.65121460 -73.54632568]
[436.98480225 -77.96765137]
[451.31838989 -82.38898468]
[465.65200806 -86.81031036]
[472.93066406 -92.33058929]
[480.23318481 -91.18883514]
[494.63131714 -95.39524841]
[501.99172974 -100.80602264]
[509.27633667 -99.55516052]
[523.73577881 -103.54570770]
[538.19525146 -107.53626251]
[552.65466309 -111.52681732]
[556.39733887 -122.81181335]
[565.03460693 -130.80682373]
[576.34191895 -133.61035156]
[587.48199463 -130.63812256]
[595.71685791 -122.74038696]
[610.28924561 -126.29659271]
[624.86157227 -129.85279846]
[639.43389893 -133.40899658]
[654.00628662 -136.96520996]
[667.01654053 -149.99598694]
[683.65655518 -144.42228699]
[698.17407227 -148.19609070]
[712.69158936 -151.96987915]
[720.72570801 -165.31495667]
[735.50225830 -168.93531799]
[748.17523193 -161.19380188]
[762.69274902 -164.96759033]
[777.21026611 -168.74139404]
[791.72778320 -172.51519775]
[805.53631592 -182.35197449]
[818.81121826 -171.80621338]
[812.35247803 -156.13073730]
[795.50158691 -157.99768066]
[780.98406982 -154.22387695]
[766.46655273 -150.45007324]
[751.94903564 -146.67626953]
[744.65039062 -133.74316406]
[729.98132324 -129.70918274]
[716.46539307 -137.45236206]
[701.94787598 -133.67855835]
[687.43035889 -129.90475464]
[681.03521729 -119.63634491]
[668.97070312 -116.37383270]
[657.56250000 -122.39285278]
[642.99011230 -118.83665466]
[628.41778564 -115.28044891]
[613.84539795 -111.72424316]
[599.27307129 -108.16803741]
[590.72619629 -91.98020172]
[572.75299072 -87.09588623]
[556.64520264 -97.06737518]
[542.18579102 -93.07682037]
[527.72631836 -89.08626556]
[513.26690674 -85.09571838]
[498.83770752 -80.99711609]
[484.43957520 -76.79071045]
[470.07333374 -72.47671509]
[455.73971558 -68.05538940]
[441.40612793 -63.63406372]
[427.07254028 -59.21273422]
[412.73895264 -54.79140854]
[407.27343750 -49.81559753]
[398.15777588 -50.41287994]
[383.75964355 -46.20647049]
[369.36151123 -42.00006104]
[354.96337891 -37.79364777]
[340.56524658 -33.58723831]
[326.33447266 -28.84540558]
[312.29095459 -23.57478333]
[298.24743652 -18.30416107]
[284.20391846 -13.03353786]
[281.30877686 -5.67926311]
[275.03686523 -0.08596241]
[266.43579102 2.21772766]
[257.22579956 0.31139845]
[245.35972595 9.48726273]
[233.49366760 18.66312790]
[221.62759399 27.83899117]
[209.76153564 37.01485825]
[197.89546204 46.19071960]
[186.02940369 55.36658478]
[174.16333008 64.54244995]
[189.13754272 63.66334534]
[202.84307861 69.75912476]
[212.21849060 81.46817017]
[215.16957092 96.17501068]
[211.03715515 110.59455109]
[200.74429321 121.50587463]
[186.59011841 126.47170258]
[171.73628235 124.38280487]
[159.50070190 115.70578766]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 70]
[3 69]
[4 68]
[5 67]
[6 66]
[11 34]
[12 33]
[13 32]
[14 31]
[15 30]
[18 29]
[19 28]
[20 27]
[21 26]
[36 65]
[37 64]
[38 63]
[39 62]
[40 61]
[41 60]
[45 59]
[46 58]
[47 57]
[48 56]
[49 55]
[71 200]
[72 199]
[73 198]
[74 197]
[75 196]
[76 195]
[77 194]
[78 193]
[79 101]
[80 100]
[81 99]
[82 98]
[83 97]
[84 96]
[85 95]
[86 94]
[87 93]
[102 189]
[103 188]
[104 187]
[105 186]
[111 185]
[112 184]
[113 183]
[114 182]
[115 181]
[116 179]
[117 178]
[118 177]
[119 176]
[120 175]
[122 174]
[123 173]
[125 172]
[126 171]
[127 170]
[128 169]
[133 166]
[134 165]
[135 164]
[136 163]
[137 162]
[139 159]
[140 158]
[141 157]
[144 154]
[145 153]
[146 152]
[147 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
