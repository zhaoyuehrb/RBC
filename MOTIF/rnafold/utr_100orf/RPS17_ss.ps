%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:07:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUCCGCCAGGGGGCGCUGUGUGGCUCCCGAGUAGGCUCAGAGCGACCGUGGCCGGGCGGAAGCGGCUUUCUGGCCUAAGCUUUAACAGGCUUCGCCUGUGCUUCCUGUUUCCUCUUUUACCAAGGACCCGCCAACAUGGGCCGCGUUCGCACCAAAACCGUGAAGAAGGCGGCCCGGGUCAUCAUAGAAAAGUACUACACGCGCCUGGGCAACGACUUCCACACGAACAAGCGCG\
) } def
/len { sequence length } bind def

/coor [
[41.48099136 576.93695068]
[38.78033829 579.17767334]
[35.81742477 593.88214111]
[32.85451508 608.58654785]
[29.89160538 623.29101562]
[35.63427734 638.65179443]
[24.99542046 651.13165283]
[8.91938019 647.89239502]
[3.94380665 632.26629639]
[15.18714428 620.32812500]
[18.15005493 605.62365723]
[21.11296654 590.91918945]
[24.07587624 576.21472168]
[26.74584579 561.45428467]
[29.12181664 546.64367676]
[31.49778557 531.83300781]
[33.87375641 517.02239990]
[36.24972534 502.21176147]
[38.13367081 487.33053589]
[39.52351761 472.39505005]
[40.91336823 457.45959473]
[42.30321503 442.52410889]
[43.69306564 427.58865356]
[45.08291245 412.65316772]
[32.09974670 420.16564941]
[18.08232498 414.82601929]
[13.38778496 400.57955933]
[21.48480797 387.95266724]
[36.39069748 386.27505493]
[47.09169769 396.78582764]
[49.46767044 381.97518921]
[51.84363937 367.16458130]
[54.21960831 352.35394287]
[42.61697388 338.17776489]
[45.12202072 319.70791626]
[60.60384369 308.76483154]
[62.58637619 293.89642334]
[64.56890869 279.02801514]
[66.55143738 264.15960693]
[68.53397369 249.29118347]
[70.51650238 234.42277527]
[68.28907013 227.38986206]
[72.62512207 219.37092590]
[74.80456543 204.53010559]
[76.98400879 189.68928528]
[74.91384888 185.40335083]
[75.50168610 179.77331543]
[79.42296600 174.48600769]
[81.99504852 159.70817566]
[84.56712341 144.93034363]
[87.13920593 130.15251160]
[76.45262909 122.80559540]
[69.45141602 111.88940430]
[67.23132324 99.11242676]
[70.13981628 86.47435760]
[58.25466156 77.32322693]
[46.24924850 68.33044434]
[34.12569427 59.49758911]
[21.94386101 50.74527740]
[9.70428658 42.07389832]
[-2.53528762 33.40251923]
[-14.77486134 24.73113823]
[-27.01443481 16.05975723]
[-39.25400925 7.38837767]
[-52.71259308 0.76519537]
[-67.05036163 -3.64255881]
[-81.38813782 -8.05031300]
[-95.72590637 -12.45806694]
[-111.58082581 -8.26836777]
[-122.94311523 -20.09336281]
[-118.12421417 -35.76851273]
[-102.08141327 -39.16856384]
[-91.31815338 -26.79583931]
[-76.98038483 -22.38808441]
[-62.64260864 -17.98033142]
[-48.30483627 -13.57257652]
[-44.09167862 -19.77735710]
[-56.50123978 -28.20367241]
[-68.91079712 -36.62998962]
[-81.32035828 -45.05630493]
[-87.85447693 -58.55835342]
[-72.89404297 -57.46586609]
[-60.48448563 -49.03955078]
[-48.07492447 -40.61323547]
[-35.66536331 -32.18691635]
[-31.45220566 -38.39169693]
[-40.83782578 -50.09255600]
[-50.22344589 -61.79341507]
[-59.60906982 -73.49427795]
[-68.99468994 -85.19513702]
[-78.38031006 -96.89599609]
[-93.00747681 -105.46818542]
[-88.81949615 -121.89672852]
[-71.87363434 -122.42028809]
[-66.67945099 -106.28161621]
[-57.29383087 -94.58075714]
[-47.90821075 -82.87989807]
[-38.52258682 -71.17903900]
[-29.13696671 -59.47817993]
[-19.75134468 -47.77731705]
[-30.58262825 -4.85119629]
[-18.34305573 3.82018399]
[-6.10348129 12.49156380]
[6.13609266 21.16294479]
[18.37566566 29.83432388]
[30.61524010 38.50570297]
[37.87705612 39.80547333]
[42.95854950 47.37403107]
[55.08210754 56.20689011]
[59.83907318 56.36804962]
[64.54943848 59.50736618]
[67.40578461 65.43807220]
[79.29093933 74.58920288]
[100.43451691 67.22219086]
[121.37537384 75.14709473]
[133.49893188 66.31423187]
[145.62249756 57.48137665]
[157.74604797 48.64852142]
[169.86959839 39.81566238]
[165.99494934 24.20274544]
[168.40623474 8.33697510]
[176.70454407 -5.35385036]
[189.59242249 -14.78625774]
[205.07661438 -18.53813934]
[220.77642822 -16.06310654]
[234.28964233 -7.76983833]
[246.29505920 -16.76262093]
[258.30047607 -25.75540352]
[270.30587769 -34.74818420]
[282.31127930 -43.74096680]
[267.34378052 -44.72772980]
[255.74940491 -54.24459076]
[251.86399841 -68.73263550]
[257.14050293 -82.77394867]
[269.60577393 -91.11765289]
[284.59826660 -90.64356232]
[296.51144409 -81.52895355]
[300.89028931 -67.18232727]
[296.09768677 -52.96926498]
[308.98748779 -60.64079666]
[321.87731934 -68.31233215]
[334.76715088 -75.98386383]
[347.65698242 -83.65539551]
[360.54681396 -91.32692719]
[373.43661499 -98.99845886]
[381.33828735 -112.70518494]
[396.23223877 -112.56553650]
[409.12207031 -120.23706818]
[422.01187134 -127.90859985]
[430.64208984 -144.18447876]
[448.19229126 -143.71189880]
[460.97927856 -151.55360413]
[473.76629639 -159.39532471]
[475.89343262 -174.88755798]
[487.51580811 -185.34962463]
[503.14562988 -185.84165955]
[515.40301514 -176.13134766]
[518.50042725 -160.80357361]
[510.97528076 -147.09567261]
[496.38079834 -141.48008728]
[481.60800171 -146.60832214]
[468.82101440 -138.76660156]
[456.03399658 -130.92489624]
[452.91595459 -119.24868011]
[442.34240723 -112.60801697]
[429.68341064 -115.01877594]
[416.79357910 -107.34724426]
[403.90377808 -99.67571259]
[396.92407227 -86.51770020]
[381.10815430 -86.10863495]
[368.21832275 -78.43710327]
[355.32852173 -70.76557159]
[342.43869019 -63.09403610]
[329.54885864 -55.42250443]
[316.65902710 -47.75097275]
[303.76919556 -40.07944107]
[291.30407715 -31.73555756]
[279.29867554 -22.74277496]
[267.29324341 -13.74999237]
[255.28784180 -4.75721073]
[243.28242493 4.23557138]
[247.27095032 17.68085480]
[246.43161011 31.71002769]
[240.84477234 44.63865662]
[231.16206360 54.90748978]
[218.53038025 61.27050400]
[204.45610046 62.94608307]
[190.62545776 59.71296310]
[178.70246887 51.93922043]
[166.57890320 60.77207565]
[154.45535278 69.60493469]
[142.33178711 78.43778992]
[130.20823669 87.27064514]
[132.67507935 97.37081146]
[131.85491943 107.73546600]
[127.83026123 117.32196045]
[121.00596619 125.16591644]
[112.06852722 130.47825623]
[101.91703796 132.72459412]
[99.34496307 147.50242615]
[96.77288055 162.28025818]
[94.20079803 177.05809021]
[91.82482910 191.86872864]
[89.64538574 206.70954895]
[87.46594238 221.55036926]
[85.38491058 236.40531921]
[83.40238190 251.27372742]
[81.41984558 266.14212036]
[79.43731689 281.01052856]
[77.45478058 295.87893677]
[75.47225189 310.74734497]
[84.37934113 318.58920288]
[88.36216736 329.64093018]
[86.54261017 341.12539673]
[79.48545074 350.21548462]
[69.03024292 354.72991943]
[66.65426636 369.54052734]
[64.27829742 384.35116577]
[61.90232849 399.16180420]
[60.01838303 414.04302979]
[58.62853622 428.97848511]
[57.23868942 443.91397095]
[55.84883881 458.84942627]
[54.45899200 473.78491211]
[53.06914139 488.72039795]
[66.05230713 481.20788574]
[80.06973267 486.54754639]
[84.76427460 500.79400635]
[76.66724396 513.42089844]
[61.76135635 515.09851074]
[51.06035614 504.58773804]
[48.68438721 519.39837646]
[46.30841827 534.20898438]
[43.93244553 549.01959229]
[41.55647659 563.83026123]
[43.40471649 568.67401123]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 13]
[3 12]
[4 11]
[5 10]
[14 235]
[15 234]
[16 233]
[17 232]
[18 231]
[19 225]
[20 224]
[21 223]
[22 222]
[23 221]
[24 220]
[30 219]
[31 218]
[32 217]
[33 216]
[36 211]
[37 210]
[38 209]
[39 208]
[40 207]
[41 206]
[43 205]
[44 204]
[45 203]
[48 202]
[49 201]
[50 200]
[51 199]
[55 113]
[56 112]
[57 109]
[58 108]
[59 106]
[60 105]
[61 104]
[62 103]
[63 102]
[64 101]
[65 76]
[66 75]
[67 74]
[68 73]
[86 100]
[87 99]
[88 98]
[89 97]
[90 96]
[91 95]
[115 193]
[116 192]
[117 191]
[118 190]
[119 189]
[126 181]
[127 180]
[128 179]
[129 178]
[130 177]
[139 176]
[140 175]
[141 174]
[142 173]
[143 172]
[144 171]
[145 170]
[147 168]
[148 167]
[149 166]
[151 163]
[152 162]
[153 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
