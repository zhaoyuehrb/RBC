%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:16:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCGGGGCUGGCAGCAGUGGCUGCCCGCACUGCGCCCGGGCGCUCGCCUUCGCUGCAGCUCCCGGUGCCGCCGCUCGGGCCGGCCCCCCGGCAGGCCCUCCUCGUUAUGGCCGCGGCCUCCUCCCCGCCCAGGGCCGAGAGGAAGCGCUGGGGUUGGGGCCGCCUGCCAGGCGCCCGGCGGGGCAGCGCGGGCCUGGCCAAGAAGU\
) } def
/len { sequence length } bind def

/coor [
[11.66345215 966.70043945]
[18.38025856 952.88812256]
[31.11232376 944.29803467]
[29.98601723 929.34039307]
[28.85971260 914.38275146]
[20.18860245 902.27233887]
[26.86784744 887.93017578]
[25.74154282 872.97253418]
[24.61523819 858.01483154]
[23.48893356 843.05718994]
[22.36262894 828.09954834]
[7.84971046 824.30810547]
[-0.44865867 836.80358887]
[-8.74702740 849.29907227]
[-17.04539680 861.79455566]
[-25.34376526 874.29003906]
[-33.64213562 886.78552246]
[-34.12798309 903.17742920]
[-48.69307327 910.71337891]
[-62.35409164 901.64093018]
[-61.05775070 885.29315186]
[-46.13761520 878.48712158]
[-37.83924866 865.99163818]
[-29.54087830 853.49615479]
[-21.24250984 841.00067139]
[-12.94414043 828.50518799]
[-4.64577150 816.00970459]
[0.85932148 802.05645752]
[3.32824039 787.26104736]
[5.79715919 772.46557617]
[0.26022568 758.63836670]
[10.16343307 746.29992676]
[12.63235188 731.50451660]
[15.10127068 716.70910645]
[17.57019043 701.91369629]
[12.03325653 688.08648682]
[21.93646431 675.74804688]
[24.40538216 660.95263672]
[26.65163231 646.12176514]
[28.67470741 631.25885010]
[30.69778061 616.39587402]
[32.72085571 601.53295898]
[34.74393082 586.66998291]
[36.76700211 571.80706787]
[38.79007721 556.94409180]
[40.81315231 542.08117676]
[33.30263138 526.22125244]
[44.69516754 511.75527954]
[46.49460602 496.86358643]
[33.33799744 487.48312378]
[26.66844177 472.66256714]
[28.39247131 456.40768433]
[38.13373947 443.16461182]
[53.31004333 436.60357666]
[54.88544464 421.68652344]
[56.46084595 406.76947021]
[50.10304260 393.29998779]
[59.24693680 380.38876343]
[60.82233810 365.47171021]
[62.39773941 350.55465698]
[63.97314072 335.63763428]
[61.54911041 328.65457153]
[65.68597412 320.50881958]
[67.48541260 305.61712646]
[69.28485870 290.72546387]
[71.08429718 275.83377075]
[72.88373566 260.94210815]
[74.68318176 246.05043030]
[76.48262024 231.15875244]
[78.28205872 216.26707458]
[68.91606140 204.74259949]
[70.52880859 189.61468506]
[82.68025208 179.86889648]
[84.47969055 164.97721863]
[78.32506561 151.41368103]
[87.66199493 138.64135742]
[89.46143341 123.74967957]
[91.26087952 108.85800171]
[88.79196167 94.06258392]
[82.25469971 80.56205750]
[75.71743774 67.06153107]
[69.18017578 53.56100082]
[62.64291000 40.06047440]
[49.66471481 31.01188660]
[51.08178711 16.18484497]
[44.54452515 2.68431854]
[38.00726318 -10.81620789]
[24.14139175 -19.57232666]
[25.06175613 -35.94562531]
[39.82156372 -43.09266281]
[53.23719025 -33.66117477]
[51.50778961 -17.35346985]
[58.04505157 -3.85294318]
[64.58231354 9.64758301]
[77.09292603 17.73052406]
[76.14344025 33.52321243]
[82.68070221 47.02373886]
[89.21796417 60.52426529]
[95.75522614 74.02479553]
[102.29248810 87.52532196]
[109.77130890 88.08847046]
[110.50682068 73.10651398]
[111.24233246 58.12455750]
[105.28414154 44.35865784]
[113.98427582 32.13950348]
[128.94192505 33.26584244]
[135.71408081 46.65008926]
[127.76162720 59.36845398]
[126.24530029 74.29161835]
[124.72896576 89.21477509]
[132.20779419 89.77793121]
[140.69303894 77.40859222]
[149.17829895 65.03925323]
[157.66354370 52.66991425]
[165.77316284 40.05111313]
[173.49980164 27.19424820]
[181.22645569 14.33738327]
[188.95309448 1.48051894]
[182.76754761 -12.75038528]
[186.16090393 -27.89187431]
[197.82836914 -38.12173843]
[213.28353882 -39.50638580]
[226.58360291 -31.51339149]
[232.61441040 -17.21622276]
[229.05699158 -2.11243558]
[217.27923584 7.99025726]
[201.80995178 9.20716381]
[194.08331299 22.06402779]
[186.35667419 34.92089081]
[178.63002014 47.77775574]
[179.17745972 50.52852631]
[178.66740417 53.66203690]
[176.94854736 56.77627945]
[174.01791382 59.42192459]
[170.03288269 61.15516663]
[161.54763794 73.52450562]
[153.06237793 85.89384460]
[144.57713318 98.26317596]
[106.15254974 110.65744019]
[104.35311127 125.54911804]
[102.55367279 140.44079590]
[108.57958984 155.06948853]
[99.37136841 166.77667236]
[97.57192230 181.66833496]
[107.05223846 194.02801514]
[105.01521301 209.10464478]
[93.17373657 218.06651306]
[91.37429810 232.95819092]
[89.57485962 247.84986877]
[87.77541351 262.74154663]
[85.97597504 277.63320923]
[84.17652893 292.52490234]
[82.37709045 307.41656494]
[80.57765198 322.30825806]
[78.89018250 337.21301270]
[77.31478119 352.13006592]
[75.73937988 367.04711914]
[74.16397858 381.96414185]
[80.40909576 396.50061035]
[71.37788391 408.34487915]
[69.80248260 423.26193237]
[68.22708130 438.17895508]
[79.95180511 445.80899048]
[87.21031189 457.68981934]
[88.63458252 471.47286987]
[84.00335693 484.46224976]
[74.27423096 494.14190674]
[61.38628387 498.66302490]
[59.58684158 513.55468750]
[66.91901398 524.16735840]
[65.11269379 536.53448486]
[55.67609787 544.10424805]
[53.65302277 558.96716309]
[51.62995148 573.83013916]
[49.60687637 588.69305420]
[47.58380127 603.55603027]
[45.56072617 618.41894531]
[43.53765488 633.28192139]
[41.51457977 648.14483643]
[43.66113663 654.40081787]
[42.49938202 659.96582031]
[39.20080185 663.42156982]
[36.73188400 678.21697998]
[42.09222412 693.10241699]
[32.36560822 704.38262939]
[29.89669037 719.17803955]
[27.42777061 733.97344971]
[24.95885277 748.76885986]
[30.31919289 763.65435791]
[20.59257889 774.93450928]
[18.12365913 789.72991943]
[15.65474129 804.52532959]
[37.32028198 826.97326660]
[38.44658661 841.93090820]
[39.57289124 856.88854980]
[40.69919586 871.84619141]
[41.82550430 886.80383301]
[50.57717514 899.98413086]
[43.81736755 913.25640869]
[44.94367218 928.21405029]
[46.06997681 943.17175293]
[59.94484329 949.75836182]
[68.65430450 962.40905762]
[69.85556030 977.72094727]
[63.22547531 991.57507324]
[50.54751205 1000.24481201]
[35.23197937 1001.39807129]
[21.39867592 994.72460938]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 201]
[4 200]
[5 199]
[7 197]
[8 196]
[9 195]
[10 194]
[11 193]
[12 27]
[13 26]
[14 25]
[15 24]
[16 23]
[17 22]
[28 192]
[29 191]
[30 190]
[32 188]
[33 187]
[34 186]
[35 185]
[37 183]
[38 182]
[39 179]
[40 178]
[41 177]
[42 176]
[43 175]
[44 174]
[45 173]
[46 172]
[48 169]
[49 168]
[54 162]
[55 161]
[56 160]
[58 158]
[59 157]
[60 156]
[61 155]
[63 154]
[64 153]
[65 152]
[66 151]
[67 150]
[68 149]
[69 148]
[70 147]
[73 144]
[74 143]
[76 141]
[77 140]
[78 139]
[79 100]
[80 99]
[81 98]
[82 97]
[83 96]
[85 94]
[86 93]
[87 92]
[111 138]
[112 137]
[113 136]
[114 135]
[115 130]
[116 129]
[117 128]
[118 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
