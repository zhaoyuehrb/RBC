%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:50:50 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FIGLA)
} def

/sequence { (\
CUGCCAUGGACCCCGCGCCCGGCGUCCUAGAUCCCCGCGCCGCGCCGCCCGCGCUCCUGGGCACCCCGCAAGCCGAGGUGCUGGAGGACGUGUUGCGGGAGCAGU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 30 0.048989955 ubox
1 101 0.007513419 ubox
1 104 0.975764353 ubox
2 24 0.004193708 ubox
2 29 0.049113574 ubox
2 100 0.007449812 ubox
2 103 0.989167792 ubox
3 23 0.005619902 ubox
3 28 0.048244857 ubox
3 102 0.991642780 ubox
3 105 0.007526232 ubox
4 22 0.005623746 ubox
4 101 0.989321256 ubox
4 104 0.008116740 ubox
5 21 0.005608602 ubox
6 32 0.049096469 ubox
7 29 0.122898376 ubox
7 31 0.051859115 ubox
8 14 0.008528249 ubox
8 19 0.005145029 ubox
8 27 0.997730869 ubox
8 28 0.029225156 ubox
9 13 0.008412369 ubox
9 18 0.005152346 ubox
9 26 0.999610348 ubox
9 27 0.021173901 ubox
10 25 0.999657244 ubox
11 22 0.003708812 ubox
11 24 0.996386825 ubox
12 21 0.004286727 ubox
12 22 0.147474591 ubox
12 99 0.007626845 ubox
13 21 0.140300927 ubox
13 22 0.985285867 ubox
13 98 0.007656420 ubox
14 21 0.986848207 ubox
14 24 0.047821663 ubox
14 97 0.007670780 ubox
15 20 0.940581408 ubox
15 23 0.076358932 ubox
15 25 0.010028997 ubox
15 45 0.003388916 ubox
15 96 0.007664926 ubox
16 22 0.076383486 ubox
16 24 0.011465455 ubox
16 44 0.003609214 ubox
16 95 0.007659407 ubox
17 23 0.012820614 ubox
17 43 0.003606765 ubox
17 45 0.005633896 ubox
17 94 0.005343621 ubox
18 22 0.012728701 ubox
18 42 0.003288775 ubox
18 44 0.005724830 ubox
20 42 0.005989929 ubox
21 41 0.006872402 ubox
22 40 0.006882670 ubox
22 91 0.005825012 ubox
23 39 0.006882568 ubox
23 90 0.005978841 ubox
24 38 0.006874571 ubox
24 89 0.005980417 ubox
25 31 0.003217975 ubox
25 37 0.006661343 ubox
25 88 0.005976583 ubox
26 30 0.003414831 ubox
26 87 0.005967195 ubox
27 86 0.005865172 ubox
28 85 0.005193297 ubox
28 100 0.011131472 ubox
28 103 0.004127678 ubox
29 82 0.003961725 ubox
30 81 0.004108767 ubox
32 100 0.234420549 ubox
33 78 0.004133945 ubox
33 99 0.217082283 ubox
34 77 0.004128047 ubox
34 84 0.003207429 ubox
34 98 0.177355457 ubox
34 99 0.973791142 ubox
35 83 0.003221731 ubox
35 97 0.125470550 ubox
35 98 0.984057723 ubox
35 99 0.005945895 ubox
36 75 0.004144363 ubox
36 95 0.004492410 ubox
36 97 0.992000983 ubox
36 98 0.005119637 ubox
37 43 0.003249103 ubox
37 74 0.004112709 ubox
37 81 0.003796245 ubox
37 94 0.004149173 ubox
37 96 0.999895031 ubox
38 42 0.003225766 ubox
38 80 0.003806397 ubox
38 95 0.999835955 ubox
38 97 0.004346028 ubox
39 73 0.004064418 ubox
39 79 0.003766224 ubox
39 93 0.058405058 ubox
39 94 0.967667159 ubox
39 96 0.005287454 ubox
40 72 0.004060936 ubox
40 78 0.003733107 ubox
40 92 0.059295024 ubox
40 95 0.005302688 ubox
41 77 0.003577723 ubox
41 90 0.008776065 ubox
41 92 0.995363843 ubox
42 54 0.008047887 ubox
42 69 0.004478027 ubox
42 89 0.008087305 ubox
42 91 0.999284757 ubox
42 93 0.011192443 ubox
43 53 0.008214051 ubox
43 68 0.004483068 ubox
43 90 0.999772225 ubox
43 92 0.011454967 ubox
44 52 0.008392744 ubox
44 67 0.004455638 ubox
44 89 0.999321469 ubox
44 91 0.011405980 ubox
45 51 0.008390542 ubox
45 87 0.999114807 ubox
45 90 0.010499129 ubox
45 98 0.003729871 ubox
46 86 0.998102743 ubox
46 90 0.004403265 ubox
46 97 0.003962641 ubox
47 54 0.009164580 ubox
47 62 0.006844468 ubox
47 79 0.005718228 ubox
47 81 0.004227575 ubox
47 89 0.006116103 ubox
47 96 0.004091408 ubox
48 53 0.009158776 ubox
48 61 0.006868215 ubox
48 78 0.005761946 ubox
48 80 0.004240295 ubox
48 84 0.651040357 ubox
48 87 0.019760930 ubox
48 95 0.004086896 ubox
48 99 0.004659678 ubox
49 60 0.006913781 ubox
49 77 0.005767047 ubox
49 78 0.004244277 ubox
49 83 0.645161685 ubox
49 84 0.756163780 ubox
49 86 0.019444326 ubox
49 87 0.003363637 ubox
49 98 0.004726034 ubox
50 59 0.007045476 ubox
50 75 0.006005099 ubox
50 77 0.004240018 ubox
50 80 0.004241490 ubox
50 83 0.762586129 ubox
50 86 0.003353837 ubox
50 92 0.006261314 ubox
50 97 0.004726275 ubox
51 58 0.005369449 ubox
51 74 0.006029586 ubox
51 79 0.004376275 ubox
51 81 0.517818064 ubox
51 82 0.747938741 ubox
51 91 0.006415136 ubox
51 93 0.003381718 ubox
51 96 0.004674782 ubox
52 75 0.003627058 ubox
52 78 0.004009977 ubox
52 80 0.518269491 ubox
52 83 0.022160409 ubox
52 90 0.006431030 ubox
52 92 0.003607696 ubox
52 95 0.004573850 ubox
53 73 0.008174741 ubox
53 79 0.458612705 ubox
53 81 0.854172617 ubox
53 82 0.005714127 ubox
53 89 0.006474329 ubox
53 91 0.004856086 ubox
54 72 0.008589167 ubox
54 77 0.024431654 ubox
54 78 0.312917109 ubox
54 80 0.853484339 ubox
54 86 0.006271049 ubox
54 90 0.005070188 ubox
55 71 0.008487015 ubox
55 76 0.033262337 ubox
55 77 0.141980926 ubox
55 78 0.003947932 ubox
55 85 0.010855763 ubox
55 88 0.012230907 ubox
56 75 0.034951958 ubox
56 77 0.082826371 ubox
56 78 0.947594874 ubox
56 84 0.011167383 ubox
56 87 0.012721418 ubox
57 72 0.012583942 ubox
57 77 0.984527818 ubox
57 83 0.011131004 ubox
57 86 0.012722497 ubox
58 68 0.013479663 ubox
58 70 0.004203614 ubox
58 71 0.011300021 ubox
58 75 0.031821214 ubox
58 76 0.991944892 ubox
58 85 0.012518157 ubox
59 67 0.016946002 ubox
59 69 0.005140170 ubox
59 74 0.036195802 ubox
60 66 0.016961591 ubox
60 67 0.005452170 ubox
60 73 0.034866620 ubox
60 74 0.998779804 ubox
60 82 0.017957900 ubox
61 65 0.016689988 ubox
61 66 0.005405817 ubox
61 69 0.031033777 ubox
61 73 0.998925108 ubox
61 81 0.018761859 ubox
62 68 0.031615081 ubox
62 72 0.998200854 ubox
62 80 0.018811686 ubox
63 79 0.018858866 ubox
64 78 0.018853386 ubox
65 77 0.018824796 ubox
65 84 0.004074724 ubox
66 83 0.004082163 ubox
67 75 0.018746327 ubox
68 74 0.018380490 ubox
68 81 0.004683251 ubox
69 80 0.004708229 ubox
70 79 0.004321147 ubox
1 104 0.9500000 lbox
2 103 0.9500000 lbox
3 102 0.9500000 lbox
4 101 0.9500000 lbox
8 27 0.9500000 lbox
9 26 0.9500000 lbox
10 25 0.9500000 lbox
11 24 0.9500000 lbox
13 22 0.9500000 lbox
14 21 0.9500000 lbox
15 20 0.9500000 lbox
34 99 0.9500000 lbox
35 98 0.9500000 lbox
36 97 0.9500000 lbox
37 96 0.9500000 lbox
38 95 0.9500000 lbox
39 94 0.9500000 lbox
41 92 0.9500000 lbox
42 91 0.9500000 lbox
43 90 0.9500000 lbox
44 89 0.9500000 lbox
45 87 0.9500000 lbox
46 86 0.9500000 lbox
49 84 0.9500000 lbox
50 83 0.9500000 lbox
51 82 0.9500000 lbox
53 81 0.9500000 lbox
54 80 0.9500000 lbox
56 78 0.9500000 lbox
57 77 0.9500000 lbox
58 76 0.9500000 lbox
60 74 0.9500000 lbox
61 73 0.9500000 lbox
62 72 0.9500000 lbox
showpage
end
%%EOF
