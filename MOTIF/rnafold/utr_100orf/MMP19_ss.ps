%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:42:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUUCCCCUCAGCUGUUAUAAAGAGGACUAGAGGCUGGAGAGUAAAAAGAACUGGGGGUAAGAGCCCCUCUGCCUAGCACUGCUCCCCCAAGGCUCCCAGAAAUCUCAGGUCAGAGGCACGGACAGCCUCUGGAGCUCUCGUCUGGUGGGACCAUGAACUGCCAGCAGCUGUGGCUGGGCUUCCUACUCCCCAUGACAGUCUCAGGCCGGGUCCUGGGGCUUGCAGAGGUGGCGCCUGUGGACUACCUGUCAC\
) } def
/len { sequence length } bind def

/coor [
[171.64341736 757.36816406]
[171.12251282 741.51214600]
[176.07557678 726.41235352]
[185.92021179 713.90338135]
[199.47850037 705.51171875]
[196.34771729 690.84210205]
[193.12628174 676.19207764]
[189.81431580 661.56231689]
[186.50234985 646.93249512]
[183.19038391 632.30267334]
[172.83387756 621.59790039]
[177.33317566 606.42999268]
[174.02120972 591.80017090]
[161.43125916 579.55804443]
[167.07298279 562.01605225]
[163.58032227 547.42834473]
[160.08766174 532.84063721]
[151.05451965 530.65588379]
[143.38154602 525.31048584]
[138.13764954 517.49810791]
[136.07179260 508.25933838]
[137.50619507 498.84332275]
[142.28695679 490.53863525]
[149.79927063 484.49722290]
[147.03230286 469.75463867]
[144.26533508 455.01205444]
[141.49835205 440.26947021]
[138.73138428 425.52688599]
[135.96441650 410.78430176]
[127.07259369 405.81820679]
[122.26795197 396.59024048]
[123.34265900 386.02166748]
[130.18287659 377.60937500]
[127.78140259 362.80288696]
[125.37992859 347.99636841]
[122.97845459 333.18984985]
[113.30334473 321.86547852]
[118.73145294 307.00457764]
[116.32997894 292.19805908]
[113.92850494 277.39154053]
[111.52703094 262.58502197]
[100.20555115 261.28854370]
[89.50830078 257.32693481]
[80.05381775 250.92321777]
[72.39019012 242.44189453]
[66.96331787 232.36802673]
[64.09095001 221.27961731]
[63.94407272 209.81436157]
[66.53678131 198.63302612]
[71.72510529 188.38139343]
[79.21500397 179.65286255]
[88.57904053 172.95420837]
[99.28074646 168.67608643]
[97.79895020 153.74946594]
[96.31715393 138.82283020]
[94.83535767 123.89620209]
[93.35356140 108.96957397]
[91.77948761 94.05239105]
[90.11318970 79.14523315]
[88.44689178 64.23806763]
[77.18575287 49.65260315]
[84.87279510 33.86380005]
[83.02225494 18.97838974]
[81.17170715 4.09297752]
[79.32116699 -10.79243469]
[77.47061920 -25.67784691]
[75.62007904 -40.56325912]
[67.51809692 -45.29020691]
[62.55910110 -53.09007263]
[61.74103546 -62.15877533]
[65.12076569 -70.46580505]
[71.82921600 -76.20885468]
[70.53215027 -91.15267181]
[69.23508453 -106.09648895]
[65.78923035 -111.68693542]
[65.67963409 -117.33435822]
[68.09542847 -121.42522430]
[67.16838837 -136.39654541]
[66.24134064 -151.36787415]
[65.22172546 -166.33317566]
[64.10958862 -181.29190063]
[62.99744415 -196.25061035]
[61.88530350 -211.20932007]
[60.77316284 -226.16804504]
[43.85976410 -233.64532471]
[33.15446854 -248.61920166]
[31.56586266 -266.87185669]
[39.44945145 -283.31594849]
[54.53281403 -293.41262817]
[52.86651611 -308.31979370]
[43.64408875 -321.17504883]
[49.91967392 -334.68304443]
[48.25337601 -349.59020996]
[46.49491882 -364.48678589]
[44.64437485 -379.37219238]
[42.79383087 -394.25762939]
[40.85126877 -409.13128662]
[38.81676102 -423.99267578]
[36.78225327 -438.85406494]
[34.74774170 -453.71545410]
[32.71323395 -468.57684326]
[18.51160622 -470.85903931]
[5.54177666 -477.04135132]
[-5.15031147 -486.61526489]
[-12.70519829 -498.79919434]
[-16.51899147 -512.60223389]
[-16.29163361 -526.90472412]
[-12.05048084 -540.54913330]
[-4.14737511 -552.43383789]
[6.77053404 -561.60168457]
[19.81377220 -567.31756592]
[17.96322823 -582.20294189]
[16.11268234 -597.08837891]
[14.26213837 -611.97375488]
[12.41159439 -626.85919189]
[10.56104946 -641.74456787]
[8.71050453 -656.63000488]
[6.85996056 -671.51544189]
[-6.36511469 -679.85998535]
[-11.08307934 -694.76885986]
[-5.06625557 -709.20257568]
[8.84439659 -716.34594727]
[24.08069229 -712.82611084]
[33.44852066 -700.30499268]
[32.52467728 -684.69470215]
[21.74537277 -673.36596680]
[23.59591675 -658.48052979]
[25.44646072 -643.59515381]
[27.29700661 -628.70971680]
[29.14755058 -613.82434082]
[30.99809456 -598.93890381]
[32.84864044 -584.05346680]
[34.69918442 -569.16809082]
[50.12110519 -566.36010742]
[63.93552399 -558.91076660]
[74.78207397 -547.53997803]
[81.58842468 -533.35455322]
[83.67627716 -517.74023438]
[80.82897949 -502.22662354]
[73.31390381 -488.33718872]
[61.85739899 -477.43963623]
[47.57461929 -470.61135864]
[49.60912704 -455.74996948]
[51.64363861 -440.88858032]
[53.67814636 -426.02719116]
[55.71265411 -411.16580200]
[59.72253418 -404.98223877]
[57.67924500 -396.10815430]
[59.52978897 -381.22274780]
[61.38033295 -366.33734131]
[65.31343079 -360.10464478]
[63.16053772 -351.25653076]
[64.82683563 -336.34936523]
[73.93007660 -324.56036377]
[67.77367401 -309.98608398]
[69.43997192 -295.07894897]
[80.74012756 -291.92831421]
[90.35107422 -285.14147949]
[97.14012909 -275.48983765]
[100.29763031 -264.08404541]
[99.43348694 -252.24623108]
[94.62516785 -241.35670471]
[86.41139221 -232.69303894]
[75.73188019 -227.28018188]
[76.84401703 -212.32147217]
[77.95616150 -197.36274719]
[79.06829834 -182.40403748]
[80.18044281 -167.44532776]
[83.80049896 -161.02574158]
[81.21266937 -152.29492188]
[82.13970947 -137.32359314]
[83.06675720 -122.35227203]
[84.17889404 -107.39355469]
[85.47596741 -92.44973755]
[86.77303314 -77.50592041]
[100.00029755 -61.64422989]
[90.50548553 -42.41380310]
[92.35603333 -27.52839088]
[94.20657349 -12.64297867]
[96.05712128 2.24243283]
[97.90766907 17.12784386]
[99.75820923 32.01325607]
[109.09551239 39.67641449]
[110.77298737 52.04286957]
[103.35404968 62.57177353]
[105.02034760 77.47893524]
[106.68664551 92.38609314]
[110.63088989 99.38824463]
[108.28018951 107.48777771]
[109.76198578 122.41440582]
[111.24378204 137.34103394]
[112.72557831 152.26766968]
[114.20737457 167.19429016]
[132.40328979 172.02841187]
[147.31286621 183.47053528]
[156.65663147 199.73925781]
[159.01837158 218.31779480]
[154.05976868 236.34321594]
[142.56855774 251.04771423]
[126.33354950 260.18356323]
[128.73503113 274.99005127]
[131.13650513 289.79656982]
[133.53796387 304.60308838]
[143.38485718 316.98654175]
[137.78497314 330.78836060]
[140.18644714 345.59487915]
[142.58792114 360.40139771]
[144.98939514 375.20791626]
[158.41671753 390.26745605]
[150.70700073 408.01733398]
[153.47398376 422.75991821]
[156.24095154 437.50250244]
[159.00791931 452.24508667]
[161.77488708 466.98767090]
[164.54185486 481.73025513]
[182.63169861 492.50106812]
[186.76988220 512.84240723]
[174.67536926 529.34802246]
[178.16802979 543.93572998]
[181.66069031 558.52343750]
[192.21304321 565.90893555]
[194.83277893 578.11059570]
[188.65100098 588.48822021]
[191.96296692 603.11798096]
[202.55635071 614.86920166]
[197.82017517 628.99072266]
[201.13214111 643.62054443]
[204.44410706 658.25030518]
[207.75608826 672.88012695]
[212.69023132 680.53375244]
[211.01736450 687.71130371]
[214.14813232 702.38092041]
[228.36697388 704.03210449]
[241.36300659 709.98120117]
[251.87338257 719.63562012]
[258.88131714 732.04345703]
[261.71435547 745.98718262]
[260.10900879 760.10345459]
[254.23507690 773.01593018]
[244.67787170 783.47009277]
[232.37986755 790.45446777]
[235.32896423 805.16168213]
[238.27806091 819.86889648]
[250.78041077 829.92230225]
[250.57135010 845.96398926]
[237.81124878 855.68817139]
[222.28857422 851.63525391]
[215.91098022 836.91436768]
[223.57083130 822.81799316]
[220.62173462 808.11077881]
[217.67263794 793.40356445]
[202.06694031 791.22442627]
[188.12942505 783.81640625]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 232]
[6 231]
[7 229]
[8 228]
[9 227]
[10 226]
[12 224]
[13 223]
[15 220]
[16 219]
[17 218]
[24 215]
[25 214]
[26 213]
[27 212]
[28 211]
[29 210]
[33 208]
[34 207]
[35 206]
[36 205]
[38 203]
[39 202]
[40 201]
[41 200]
[53 193]
[54 192]
[55 191]
[56 190]
[57 189]
[58 187]
[59 186]
[60 185]
[62 182]
[63 181]
[64 180]
[65 179]
[66 178]
[67 177]
[72 175]
[73 174]
[74 173]
[77 172]
[78 171]
[79 170]
[80 168]
[81 167]
[82 166]
[83 165]
[84 164]
[89 156]
[90 155]
[92 153]
[93 152]
[94 150]
[95 149]
[96 148]
[97 146]
[98 145]
[99 144]
[100 143]
[101 142]
[111 133]
[112 132]
[113 131]
[114 130]
[115 129]
[116 128]
[117 127]
[118 126]
[241 251]
[242 250]
[243 249]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
