%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:49:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCUCGUGCCCGCGCCGGUCGGUUGGUGGCGCCUUUGUCCUACGGCGGGCAGGUGGGCCGACGCGGAGGCGGCAGCGGCGGGCCUGAGGCGAAGGAGCGGCCGGGAGCCCGCCGCGCUGGUAGCGAUAUUAAUAAGGCAGCGGAAAGAAGAAAUAUGAAUACGGCUCCAUCAAGACCCAGCCCCACACGAAGGGAUCCAUAUGGCUUUGGAGACAGUCGAGAUUCAAGGCGUGAUCGAUCCCCAAUUCGAGGAA\
) } def
/len { sequence length } bind def

/coor [
[89.36799622 200.42802429]
[97.85950470 186.39854431]
[97.67471313 171.39968872]
[97.48992157 156.40081787]
[97.30512238 141.40196228]
[97.12033081 126.40309906]
[83.90514374 119.30670166]
[71.29998779 127.43750000]
[58.69482422 135.56829834]
[46.08966446 143.69909668]
[40.59411621 150.95948792]
[33.27874756 151.85130310]
[20.57437325 159.82620239]
[12.32634068 176.30430603]
[-5.23441696 176.23620605]
[-17.83957863 184.36700439]
[-30.44473839 192.49780273]
[-42.99957657 200.70610046]
[-55.50361252 208.99157715]
[-68.00764465 217.27705383]
[-80.51168060 225.56253052]
[-93.01571655 233.84800720]
[-105.51975250 242.13346863]
[-118.02378845 250.41894531]
[-104.00818634 255.76338196]
[-99.32742310 270.01434326]
[-107.44455719 282.62832642]
[-122.35414124 284.27285767]
[-133.02532959 273.73123169]
[-131.56251526 258.80178833]
[-144.55290222 266.30178833]
[-157.54328918 273.80178833]
[-170.53366089 281.30178833]
[-183.52404785 288.80178833]
[-187.13020325 294.28918457]
[-192.19972229 296.77871704]
[-196.92816162 296.32202148]
[-210.09938049 303.49969482]
[-223.27059937 310.67736816]
[-236.44181824 317.85504150]
[-240.66615295 333.08428955]
[-254.46287537 340.79312134]
[-269.64663696 336.40802002]
[-277.20916748 322.53057861]
[-272.66375732 307.39401245]
[-258.70712280 299.97863770]
[-243.61949158 304.68380737]
[-230.44827271 297.50613403]
[-217.27705383 290.32846069]
[-204.10583496 283.15078735]
[-191.02404785 275.81140137]
[-178.03366089 268.31140137]
[-165.04328918 260.81140137]
[-152.05290222 253.31140137]
[-139.06251526 245.81140137]
[-126.30926514 237.91491699]
[-113.80522919 229.62944031]
[-101.30119324 221.34396362]
[-88.79715729 213.05848694]
[-76.29312134 204.77301025]
[-63.78908539 196.48754883]
[-51.28504944 188.20207214]
[-47.45603561 181.90534973]
[-38.57553864 179.89265442]
[-25.97037888 171.76184082]
[-13.36521721 163.63104248]
[-10.51705647 151.89268494]
[-0.10627141 145.01153564]
[12.59948158 147.12182617]
[25.30385590 139.14694214]
[37.95886230 131.09393311]
[50.56402206 122.96313477]
[63.16918564 114.83233643]
[75.77434540 106.70153809]
[77.25035095 91.77433014]
[66.48167419 81.33232117]
[55.71299362 70.89031219]
[44.94431305 60.44830704]
[34.17563248 50.00629807]
[23.40695572 39.56428909]
[12.63827610 29.12227821]
[1.86959767 18.68026924]
[-8.89908123 8.23826027]
[-19.73187828 -2.13721633]
[-30.62838173 -12.44576645]
[-43.50137711 -12.86470509]
[-52.36291122 -21.65150642]
[-52.85701370 -33.72034836]
[-63.62569046 -44.16235733]
[-74.39437103 -54.60436630]
[-89.39315033 -50.99324036]
[-103.95571899 -56.08589172]
[-113.43521881 -68.25727844]
[-114.80677032 -83.62355042]
[-107.63272095 -97.28139496]
[-94.20228577 -104.87263489]
[-78.80106354 -103.97492981]
[-66.34352875 -94.87474823]
[-60.80483627 -80.47591400]
[-63.95236206 -65.37304688]
[-53.18368149 -54.93103790]
[-42.41500473 -44.48902893]
[-25.18097687 -41.11661148]
[-20.31983185 -23.34226990]
[-9.42332745 -13.03372002]
[-2.42428327 -10.72647953]
[1.54292810 -2.53041863]
[12.31160736 7.91159058]
[23.08028603 18.35359955]
[33.84896469 28.79560852]
[44.61764526 39.23761749]
[55.38632202 49.67962646]
[66.15499878 60.12163544]
[76.92368317 70.56364441]
[87.69235992 81.00565338]
[102.54206085 78.88756561]
[109.96189880 65.85122681]
[117.38173676 52.81489563]
[124.80157471 39.77856064]
[132.22140503 26.74222565]
[123.71650696 12.54724598]
[123.54000092 -3.90564537]
[131.64527893 -18.11651611]
[145.73359680 -26.24651337]
[161.90519714 -26.15471268]
[169.16386414 -39.28146744]
[176.42253113 -52.40822220]
[162.39796448 -47.08736038]
[147.89952087 -50.93380737]
[138.35697937 -62.50704956]
[137.34408569 -77.47280884]
[145.24018860 -90.22630310]
[159.08811951 -95.99125671]
[173.70175171 -92.60864258]
[183.60813904 -81.34527588]
[185.09696960 -66.41793060]
[193.61209106 -78.76672363]
[195.89732361 -87.58102417]
[202.30895996 -91.21431732]
[210.97557068 -103.45726776]
[219.64218140 -115.70022583]
[209.99473572 -127.30148315]
[203.67951965 -141.00479126]
[201.12713623 -155.87582397]
[202.51159668 -170.90066528]
[207.73849487 -185.05487061]
[216.45147705 -197.37341309]
[228.05645752 -207.01638794]
[241.76219177 -213.32630920]
[256.63421631 -215.87295532]
[271.65850830 -214.48269653]
[285.81072998 -209.25032043]
[298.12588501 -200.53259277]
[307.76437378 -188.92388916]
[314.06900024 -175.21571350]
[316.60989380 -160.34271240]
[315.21383667 -145.31893921]
[309.97601318 -131.16876221]
[301.25354004 -118.85695648]
[289.64111328 -109.22295380]
[275.93048096 -102.92362213]
[261.05651855 -100.38846588]
[246.03327942 -101.79032135]
[231.88513184 -107.03361511]
[223.21852112 -94.79066467]
[214.55191040 -82.54770660]
[205.96089172 -70.25160217]
[197.44577026 -57.90280914]
[189.54928589 -45.14955139]
[182.29061890 -32.02279663]
[175.03195190 -18.89604187]
[182.82746887 -7.70060921]
[185.05540466 5.82537222]
[181.22569275 19.05662537]
[172.02957153 29.40021133]
[159.21569824 34.80365372]
[145.25775146 34.16206360]
[137.83790588 47.19839859]
[130.41807556 60.23473358]
[122.99823761 73.27106476]
[115.57839966 86.30740356]
[128.33987427 78.42420197]
[141.10133362 70.54100037]
[149.96400452 58.43921661]
[163.91921997 52.93902969]
[178.65542603 55.73976517]
[189.61978149 65.97611237]
[193.42478943 80.48548889]
[188.89485168 94.78512573]
[177.42781067 104.45781708]
[162.56324768 102.44671631]
[147.69866943 100.43561554]
[159.77938843 109.32698059]
[171.86010742 118.21834564]
[183.94081116 127.10970306]
[196.02153015 136.00106812]
[208.10224915 144.89244080]
[223.80297852 146.84111023]
[229.46693420 160.61677551]
[241.54765320 169.50814819]
[256.26681519 164.96359253]
[270.67120361 169.89985657]
[279.30480957 182.22563171]
[279.02828979 197.09376526]
[291.10900879 205.98513794]
[303.18972778 214.87649536]
[315.27044678 223.76786804]
[327.35116577 232.65922546]
[339.43188477 241.55058289]
[351.51257324 250.44195557]
[363.59329224 259.33331299]
[377.32705688 252.57740784]
[392.62701416 252.98931885]
[405.97735596 260.47442627]
[414.31030273 273.31268311]
[415.71093750 288.55398560]
[409.85745239 302.69595337]
[398.09494019 312.48889160]
[383.12631226 315.68243408]
[368.39126587 311.54275513]
[357.27578735 301.02111816]
[352.33416748 286.53527832]
[354.70193481 271.41403198]
[342.62121582 262.52267456]
[330.54049683 253.63130188]
[318.45977783 244.73994446]
[306.37908936 235.84857178]
[294.29837036 226.95721436]
[282.21765137 218.06584167]
[270.13693237 209.17448425]
[256.02316284 213.85844421]
[241.68804932 209.27932739]
[232.69285583 196.99356079]
[232.65629578 181.58885193]
[220.57557678 172.69749451]
[205.73893738 171.38478088]
[199.21087646 156.97314453]
[187.13017273 148.08178711]
[175.04945374 139.19041443]
[162.96873474 130.29905701]
[150.88803101 121.40769196]
[138.80731201 112.51632690]
[132.13528442 115.94182587]
[142.77449036 126.51572418]
[136.00578308 139.90170288]
[121.18331146 137.60076904]
[118.79122162 122.79280853]
[112.11919403 126.21830750]
[112.30398560 141.21716309]
[112.48877716 156.21603394]
[112.67357635 171.21488953]
[112.85836792 186.21376038]
[121.69295502 200.02976990]
[113.90603638 214.46223450]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 252]
[3 251]
[4 250]
[5 249]
[6 248]
[7 74]
[8 73]
[9 72]
[10 71]
[12 70]
[13 69]
[15 66]
[16 65]
[17 64]
[18 62]
[19 61]
[20 60]
[21 59]
[22 58]
[23 57]
[24 56]
[30 55]
[31 54]
[32 53]
[33 52]
[34 51]
[37 50]
[38 49]
[39 48]
[40 47]
[75 115]
[76 114]
[77 113]
[78 112]
[79 111]
[80 110]
[81 109]
[82 108]
[83 107]
[84 105]
[85 104]
[88 102]
[89 101]
[90 100]
[116 181]
[117 180]
[118 179]
[119 178]
[120 177]
[125 171]
[126 170]
[127 169]
[136 168]
[137 167]
[139 166]
[140 165]
[141 164]
[192 242]
[193 241]
[194 240]
[195 239]
[196 238]
[197 237]
[199 235]
[200 234]
[204 230]
[205 229]
[206 228]
[207 227]
[208 226]
[209 225]
[210 224]
[211 223]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
