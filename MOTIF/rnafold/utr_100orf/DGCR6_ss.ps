%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:58:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGAGGCGCGCCGCGAUCGGGGACUGUCCUAAGACGGGCGGGGCGCGCUGCGCUAGGGACUGUCAUAAAAGGGGCGGGACGCGCCGCGGUCGGGAUGACGUGAGCUGGGGGCGCUCGUCGCUGCAGCCGGCGGCUAGCGGGCGUCCGCGCCAUGGAGCGCUACGCGGGCGCCUUGGAGGAGGUGGCGGACGGUGCCCGGCAGCAGGAGCGACACUACCAGCUGCUGUCGGCGUUACAGAGCCUGGUGAAGG\
) } def
/len { sequence length } bind def

/coor [
[298.84762573 778.59448242]
[298.10287476 763.61297607]
[297.35815430 748.63146973]
[288.99850464 736.30401611]
[296.04107666 722.13671875]
[295.29635620 707.15521240]
[294.55160522 692.17370605]
[293.80688477 677.19219971]
[292.50469971 662.24884033]
[290.64688110 647.36437988]
[288.78906250 632.47985840]
[286.93124390 617.59533691]
[285.07342529 602.71081543]
[283.21560669 587.82635498]
[281.26538086 572.95367432]
[279.22290039 558.09338379]
[278.91207886 545.51495361]
[283.68667603 535.70758057]
[291.23446655 530.31311035]
[284.91864014 516.70758057]
[278.60281372 503.10205078]
[272.28701782 489.49652100]
[259.91012573 481.21026611]
[261.11749268 465.43521118]
[254.80168152 451.82968140]
[248.48587036 438.22415161]
[242.17004395 424.61862183]
[235.85423279 411.01309204]
[229.53840637 397.40756226]
[223.22259521 383.80203247]
[209.95416260 382.46328735]
[198.98793030 374.68627930]
[193.24452209 362.41137695]
[194.31796265 348.79333496]
[202.03480530 337.39071655]
[195.88841248 323.70782471]
[177.38072205 320.92242432]
[164.20889282 307.41464233]
[161.85301208 288.54357910]
[171.45060730 271.95114136]
[164.79887390 258.50665283]
[158.14715576 245.06214905]
[151.49542236 231.61764526]
[144.84370422 218.17315674]
[138.19197083 204.72865295]
[131.54025269 191.28414917]
[124.88851929 177.83966064]
[119.12113953 173.25062561]
[118.23883820 164.18666077]
[111.75456238 150.66061401]
[105.27029419 137.13455200]
[98.78601837 123.60848999]
[92.30175018 110.08243561]
[81.72811890 99.44296265]
[68.24258423 92.87483215]
[54.75704575 86.30670929]
[41.27151108 79.73857880]
[28.53864670 88.21333313]
[13.37354088 89.17060852]
[-0.14472336 82.45324707]
[-8.43019676 69.95497131]
[-9.34115791 55.08770370]
[-22.82669640 48.51957703]
[-36.31223297 41.95145035]
[-49.79777145 35.38332367]
[-63.28330994 28.81519890]
[-76.76884460 22.24707413]
[-87.69172668 32.73115540]
[-101.51654816 38.83413696]
[-116.56694031 39.83708954]
[-131.02513123 35.63821411]
[-143.15151978 26.76282692]
[-151.49389648 14.29770470]
[-155.06143188 -0.24195504]
[-153.44232178 -15.09671021]
[-166.92785645 -21.66483498]
[-180.41339111 -28.23296165]
[-193.89892578 -34.80108643]
[-208.75572205 -29.41118240]
[-223.03672791 -36.18087769]
[-228.26925659 -51.09383392]
[-221.34895325 -65.30245209]
[-206.38150024 -70.37702179]
[-192.24684143 -63.30688095]
[-187.33081055 -48.28662491]
[-173.84526062 -41.71849823]
[-160.35972595 -35.15037155]
[-146.87419128 -28.58224678]
[-136.17681885 -39.01544571]
[-122.52980042 -45.17075729]
[-107.57229614 -46.28768158]
[-93.10814667 -42.21216202]
[-80.88831329 -33.41751480]
[-72.39893341 -20.94952774]
[-68.68057251 -6.30214548]
[-70.20072174 8.76153564]
[-56.71518326 15.32966137]
[-43.22964478 21.89778709]
[-29.74410820 28.46591377]
[-16.25856972 35.03403854]
[-2.77303219 41.60216522]
[9.49406242 33.15326309]
[24.44258881 31.97109604]
[38.06579971 38.47298050]
[46.66186523 51.00312424]
[47.83963394 66.25304413]
[61.32517242 72.82116699]
[74.81070709 79.38929749]
[88.29624939 85.95742035]
[101.20832825 78.32340240]
[101.95306396 63.34190369]
[102.69779968 48.36040115]
[103.44253540 33.37890244]
[104.18727112 18.39739990]
[104.93200684 3.41589952]
[105.67674255 -11.56560135]
[106.42147827 -26.54710197]
[107.16621399 -41.52860260]
[107.91094208 -56.51010513]
[99.13325500 -72.71171570]
[109.25109100 -87.06436157]
[109.80973816 -102.05395508]
[110.36839294 -117.04354858]
[110.92704773 -132.03314209]
[111.48569489 -147.02273560]
[101.66972351 -159.71234131]
[105.61053467 -175.26385498]
[120.28507233 -181.74748230]
[134.43629456 -174.18954468]
[137.20858765 -158.38783264]
[126.47528839 -146.46408081]
[125.91664124 -131.47448730]
[125.35798645 -116.48489380]
[124.79933167 -101.49530029]
[124.24068451 -86.50570679]
[132.22950745 -77.44503021]
[131.90333557 -64.96923828]
[122.89244843 -55.76536942]
[122.14771271 -40.78386688]
[121.40297699 -25.80236626]
[120.65824127 -10.82086563]
[119.91350555 4.16063499]
[119.16876984 19.14213562]
[118.42403412 34.12363815]
[117.67929840 49.10513687]
[116.93456268 64.08663940]
[116.18982697 79.06813812]
[130.16102600 84.52761078]
[139.77108765 73.01037598]
[149.38116455 61.49314880]
[158.99122620 49.97592163]
[157.32092285 34.26014709]
[167.31741333 22.01899910]
[183.04997253 20.51493645]
[195.18473816 30.64029121]
[196.52238464 46.38787079]
[186.26930237 58.41491318]
[170.50845337 59.58599091]
[160.89839172 71.10321808]
[151.28831482 82.62045288]
[141.67825317 94.13768005]
[130.21589661 102.76381683]
[117.63883209 105.88784027]
[105.82780457 103.59816742]
[112.31207275 117.12422180]
[118.79634857 130.65028381]
[125.28061676 144.17633057]
[131.76489258 157.70239258]
[138.33302307 171.18792725]
[144.98474121 184.63243103]
[151.63647461 198.07691956]
[158.28819275 211.52142334]
[164.93992615 224.96592712]
[171.59164429 238.41041565]
[178.24337769 251.85491943]
[184.89509583 265.29940796]
[196.31254578 265.22842407]
[206.88888550 269.39227295]
[215.11909485 277.15750122]
[219.84732056 287.38110352]
[220.42909241 298.57879639]
[216.81889343 309.14044189]
[209.57131958 317.56143188]
[215.71771240 331.24432373]
[232.33113098 334.48855591]
[243.61770630 346.87966919]
[245.26806641 363.39187622]
[236.82812500 377.48620605]
[243.14393616 391.09173584]
[249.45976257 404.69726562]
[255.77557373 418.30279541]
[262.09140015 431.90832520]
[268.40722656 445.51385498]
[274.72302246 459.11938477]
[287.55166626 468.37878418]
[285.89254761 483.18069458]
[292.20834351 496.78622437]
[298.52416992 510.39175415]
[304.83999634 523.99731445]
[314.73309326 535.27233887]
[327.40200806 543.30346680]
[340.07092285 551.33453369]
[352.73983765 559.36566162]
[365.40872192 567.39678955]
[381.20687866 568.25061035]
[387.81365967 581.59979248]
[400.48257446 589.63085938]
[413.20108032 597.58319092]
[425.96875000 605.45635986]
[441.84786987 603.16876221]
[453.43768311 614.26177979]
[451.84750366 630.22583008]
[438.29714966 638.81463623]
[423.18133545 633.43963623]
[418.09558105 618.22399902]
[405.32791138 610.35083008]
[398.00485229 609.51739502]
[392.45144653 602.29980469]
[379.78253174 594.26867676]
[364.89056396 593.98925781]
[357.37762451 580.06567383]
[344.70870972 572.03460693]
[332.03979492 564.00347900]
[319.37091064 555.97235107]
[306.70199585 547.94122314]
[294.08319092 556.05084229]
[296.12567139 570.91113281]
[300.38406372 578.96099854]
[298.10009766 585.96850586]
[299.95791626 600.85302734]
[301.81573486 615.73754883]
[303.67355347 630.62200928]
[305.53137207 645.50653076]
[307.38919067 660.39105225]
[317.29702759 649.12890625]
[332.25863647 648.05639648]
[343.67160034 657.79003906]
[344.97381592 672.73339844]
[335.41659546 684.29455566]
[320.49499512 685.82611084]
[308.78839111 676.44750977]
[309.53311157 691.42901611]
[310.27786255 706.41052246]
[311.02258301 721.39196777]
[319.43551636 734.79101562]
[312.33966064 747.88671875]
[313.08438110 762.86822510]
[313.82913208 777.84973145]
[324.70965576 789.63928223]
[322.13378906 805.47418213]
[308.07748413 813.20727539]
[293.32357788 806.90637207]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 248]
[2 247]
[3 246]
[5 244]
[6 243]
[7 242]
[8 241]
[9 234]
[10 233]
[11 232]
[12 231]
[13 230]
[14 229]
[15 227]
[16 226]
[19 199]
[20 198]
[21 197]
[22 196]
[24 194]
[25 193]
[26 192]
[27 191]
[28 190]
[29 189]
[30 188]
[35 184]
[36 183]
[40 176]
[41 175]
[42 174]
[43 173]
[44 172]
[45 171]
[46 170]
[47 169]
[49 168]
[50 167]
[51 166]
[52 165]
[53 164]
[54 109]
[55 108]
[56 107]
[57 106]
[62 101]
[63 100]
[64 99]
[65 98]
[66 97]
[67 96]
[75 88]
[76 87]
[77 86]
[78 85]
[110 147]
[111 146]
[112 145]
[113 144]
[114 143]
[115 142]
[116 141]
[117 140]
[118 139]
[119 138]
[121 135]
[122 134]
[123 133]
[124 132]
[125 131]
[148 161]
[149 160]
[150 159]
[151 158]
[200 225]
[201 224]
[202 223]
[203 222]
[204 221]
[206 219]
[207 218]
[208 216]
[209 215]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
