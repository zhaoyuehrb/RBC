%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:52:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCGAUACCGGUUUCAGAGUCCUGGGCAGCGUGCGCGCUCUUCCUGGCGGCUGCGCAGGUGUGAAAAUCACAAAUGUCAAAUGAUGGAAGAUCCAGGAAUCGGGACAGGCGCUACGAUGAGGUCCCAAGCGACCUGCCCUAUCAAGAUACCACCAUAAGAACCCACCCAACUC\
) } def
/len { sequence length } bind def

/coor [
[96.89161682 208.01803589]
[86.60126495 222.53024292]
[69.81694031 227.93643188]
[65.82639313 242.39587402]
[61.83583832 256.85531616]
[66.48307800 272.58221436]
[54.99220276 284.28228760]
[39.18403244 279.91952515]
[35.32066345 263.98193359]
[47.37639618 252.86477661]
[51.36694717 238.40533447]
[55.35750198 223.94589233]
[46.44078064 215.65248108]
[41.88156128 204.28285217]
[42.60645676 191.98219299]
[48.53873825 181.09979248]
[58.60126877 173.74032593]
[70.91157532 171.35691833]
[75.41859436 157.05004883]
[79.92561340 142.74316406]
[84.43263245 128.43627930]
[74.97539520 116.79322815]
[60.04845428 118.27186584]
[45.12150955 119.75049591]
[30.19456673 121.22912598]
[17.22431564 130.28909302]
[3.79632306 123.84407806]
[-11.13062096 125.32270813]
[-26.05756378 126.80133820]
[-40.98450851 128.27996826]
[-55.91145325 129.75860596]
[-64.17522430 133.73037720]
[-71.11925507 131.12733459]
[-86.07034302 132.33776855]
[-101.02142334 133.54821777]
[-106.46443939 147.80781555]
[-117.56134033 158.28739929]
[-132.10882568 162.90621948]
[-147.21847534 160.74722290]
[-159.89025879 152.23907471]
[-167.60818481 139.07106018]
[-168.83985901 123.85772705]
[-163.34072876 109.61966705]
[-152.20263672 99.18386841]
[-137.63708496 94.62236786]
[-122.53605652 96.84085083]
[-109.89787292 105.39883423]
[-102.23185730 118.59712982]
[-87.28077698 117.38668823]
[-72.32969666 116.17624664]
[-57.39008331 114.83165741]
[-42.46313858 113.35302734]
[-27.53619576 111.87439728]
[-12.60925198 110.39576721]
[2.31769180 108.91713715]
[14.22026920 99.96292114]
[28.71593666 106.30218506]
[43.64287949 104.82354736]
[58.56982422 103.34491730]
[73.49676514 101.86628723]
[78.89322662 87.87063599]
[68.82296753 76.75354767]
[58.75269699 65.63645172]
[48.68243027 54.51936340]
[38.61216354 43.40227127]
[23.49736404 35.72248077]
[26.69283295 19.07239532]
[43.57682037 17.53378105]
[49.72925568 33.33200455]
[59.79952240 44.44909668]
[69.86978912 55.56618881]
[79.94005585 66.68328094]
[90.01032257 77.80036926]
[97.16376495 75.54685974]
[92.65673828 61.23998260]
[88.14971924 46.93310547]
[83.64270020 32.62622833]
[79.13568115 18.31934738]
[74.62888336 4.01240015]
[88.93589783 -0.49417773]
[93.44255829 13.81232834]
[97.94957733 28.11920738]
[102.45659637 42.42608643]
[106.96362305 56.73296356]
[111.47064209 71.03984070]
[118.62407684 68.78633118]
[120.50407410 53.90460968]
[122.38407898 39.02289200]
[124.26407623 24.14117050]
[120.25057983 7.66912699]
[134.96784973 -0.74743217]
[147.12962341 11.06474018]
[139.14579773 26.02116966]
[137.26579285 40.90288925]
[135.38580322 55.78461075]
[133.50579834 70.66632843]
[144.71282959 80.63640594]
[159.27447510 77.03661346]
[170.81451416 66.21357727]
[185.02668762 70.67040253]
[199.58833313 67.07061005]
[214.14997864 63.47082138]
[228.49673462 59.09239960]
[242.58700562 53.94804001]
[256.67727661 48.80368423]
[263.69366455 42.90156937]
[271.06689453 43.69593048]
[285.24725342 38.80533600]
[299.42758179 33.91474152]
[313.60794067 29.02414703]
[327.74380493 24.00646973]
[341.83407593 18.86211205]
[355.92434692 13.71775436]
[370.01461792 8.57339764]
[383.91113281 2.92656851]
[397.59597778 -3.21545362]
[402.98062134 -18.07416916]
[417.33001709 -24.69760323]
[432.13098145 -19.15618896]
[438.60232544 -4.73755026]
[432.90475464 10.00399113]
[418.41848755 16.32253838]
[403.73800659 10.46941280]
[390.05316162 16.61143494]
[388.93634033 19.21723938]
[386.70269775 21.52973747]
[383.46157837 23.11480904]
[379.47967529 23.58704567]
[375.15896606 22.66366386]
[361.06869507 27.80801964]
[346.97842407 32.95237732]
[332.88815308 38.09673691]
[327.66586304 43.36201096]
[318.49853516 43.20449066]
[304.31817627 48.09508133]
[290.13784790 52.98567581]
[275.95748901 57.87627029]
[261.82162476 62.89394760]
[247.73136902 68.03830719]
[233.64109802 73.18266296]
[246.64035034 80.66726685]
[250.70016479 95.10741425]
[243.50566101 108.26944733]
[229.15908813 112.64846039]
[215.84075928 105.74758148]
[211.14468384 91.50163269]
[217.74977112 78.03246307]
[203.18812561 81.63225555]
[188.62648010 85.23204803]
[178.12799072 95.79759979]
[162.87426758 91.59825897]
[148.31262207 95.19805145]
[163.27227783 96.29743195]
[177.40371704 101.32757568]
[189.69345093 109.92771912]
[199.26007080 121.48107147]
[205.41744995 135.15902710]
[207.72398376 149.98063660]
[206.01426697 164.88287354]
[200.41091919 178.79698181]
[191.31579590 190.72505188]
[179.38121033 199.81159973]
[165.46307373 205.40495300]
[150.55960083 207.10397339]
[135.73966980 204.78677368]
[122.06612396 198.61956787]
[110.51964569 189.04466248]
[101.92833710 176.74874878]
[96.90834808 162.61370850]
[95.81971741 147.65325928]
[98.73950958 132.94329834]
[94.23249054 147.25018311]
[89.72547150 161.55706787]
[85.21845245 175.86393738]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 12]
[4 11]
[5 10]
[18 174]
[19 173]
[20 172]
[21 171]
[22 60]
[23 59]
[24 58]
[25 57]
[27 55]
[28 54]
[29 53]
[30 52]
[31 51]
[33 50]
[34 49]
[35 48]
[61 73]
[62 72]
[63 71]
[64 70]
[65 69]
[86 96]
[87 95]
[88 94]
[89 93]
[97 152]
[98 151]
[100 149]
[101 148]
[102 147]
[103 140]
[104 139]
[105 138]
[107 137]
[108 136]
[109 135]
[110 134]
[111 132]
[112 131]
[113 130]
[114 129]
[115 124]
[116 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
