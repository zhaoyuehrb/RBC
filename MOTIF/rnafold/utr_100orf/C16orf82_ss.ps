%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:58:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAACACAGAGUUUUCAAAGGGCAGCCUUAUAUACGGAGUCACCUCUCCCCAGAGAGGUCACAGCCAACAUUCAGAGGCCUCCCAGGGCCCCCUCUCCCUGGAUAAACCACUUCAGCUGCCCCCCAUUUUUCUCGAGGGAGAAAAAGGGGAAUCCUCUGUCCAGAAUGAGCAGGAAGGAGAGCCAAGCCUACAGUCAC\
) } def
/len { sequence length } bind def

/coor [
[314.28698730 408.54077148]
[309.02185059 400.27139282]
[306.48120117 390.77246094]
[306.91769409 380.91973877]
[310.30859375 371.62719727]
[316.35638428 363.76211548]
[308.89059448 350.75204468]
[301.42480469 337.74197388]
[293.95901489 324.73190308]
[286.49322510 311.72183228]
[279.02743530 298.71176147]
[264.62817383 295.07891846]
[256.87145996 281.99121094]
[260.77957153 266.91259766]
[253.31376648 253.90254211]
[245.84796143 240.89247131]
[239.09831238 236.83222961]
[234.36756897 230.57713318]
[232.31642151 223.04295349]
[233.21556091 215.32090759]
[221.46702576 205.99504089]
[209.71849060 196.66915894]
[197.96995544 187.34327698]
[186.22143555 178.01741028]
[174.47290039 168.69152832]
[162.72436523 159.36566162]
[151.18754578 169.55905151]
[138.02421570 177.54216003]
[123.65264130 183.06129456]
[108.52947998 185.94111633]
[93.13529205 186.09008789]
[77.95923615 183.50347900]
[63.48353958 178.26350403]
[50.16817856 170.53663635]
[38.43626404 160.56842041]
[28.66057777 148.67559814]
[21.15175247 135.23606873]
[16.14838791 120.67689514]
[13.80946922 105.46070099]
[-1.18632555 105.10552979]
[-15.16583347 112.51389313]
[-27.70633316 104.47740936]
[-42.70212555 104.12223816]
[-57.69792175 103.76706696]
[-72.69371796 103.41188812]
[-87.68951416 103.05671692]
[-102.68530273 102.70154572]
[-117.68109894 102.34637451]
[-131.80613708 110.67796326]
[-145.94897461 102.37662506]
[-145.56068420 85.98207855]
[-131.04067993 78.35961914]
[-117.32592773 87.35057831]
[-102.33013153 87.70574951]
[-87.33433533 88.06092834]
[-72.33854675 88.41609955]
[-57.34275055 88.77127075]
[-42.34695435 89.12644196]
[-27.35116005 89.48161316]
[-14.44425201 82.04784393]
[-0.83115351 90.10973358]
[14.16464138 90.46490479]
[19.02787781 69.96431732]
[28.71043968 51.25140381]
[17.11058998 41.74122620]
[5.51073980 32.23104858]
[-8.83257103 37.72331619]
[-23.99784470 35.29225922]
[-35.90570068 25.59181786]
[-41.35298157 11.23136234]
[-38.87439728 -3.92621708]
[-29.13667870 -15.80360699]
[-14.75921917 -21.20584869]
[0.39051601 -18.67976761]
[12.23732471 -8.90486622]
[17.59447289 5.48945665]
[15.02091789 20.63119888]
[26.62076759 30.14137650]
[38.22061920 39.65155411]
[46.04338455 32.56624985]
[54.67201233 26.48809242]
[63.97763062 21.50786209]
[73.82125854 17.69993782]
[70.53292847 3.06481147]
[67.24460602 -11.57031536]
[63.95628357 -26.20544243]
[60.66796112 -40.84056854]
[57.37963867 -55.47569275]
[43.07915878 -61.49864578]
[35.07886124 -74.79431915]
[36.45501709 -90.25025177]
[46.67847443 -101.92331696]
[61.81809616 -105.32499695]
[76.05239868 -99.14727020]
[83.90798950 -85.76559448]
[82.36425018 -70.32550049]
[72.01476288 -58.76401901]
[75.30308533 -44.12889099]
[78.59140778 -29.49376488]
[81.87973785 -14.85863876]
[85.16806030 -0.22351216]
[88.45638275 14.41161442]
[102.54085541 13.67404270]
[116.55757141 15.23872471]
[130.13270569 19.06393242]
[142.90422058 25.04764938]
[154.53150940 33.03029633]
[164.70448303 42.79897690]
[173.15182495 54.09317017]
[179.64826965 66.61166382]
[184.02053833 80.02060699]
[186.15203857 93.96238708]
[185.98593140 108.06517792]
[183.52662659 121.95288849]
[178.83973694 135.25512695]
[172.05023193 147.61712646]
[183.79876709 156.94299316]
[195.54730225 166.26887512]
[207.29583740 175.59475708]
[219.04437256 184.92062378]
[230.79290771 194.24650574]
[242.54144287 203.57237244]
[257.42196655 205.46177673]
[271.12835693 199.36793518]
[284.83474731 193.27409363]
[291.41290283 186.92199707]
[298.80593872 187.19413757]
[312.60684204 181.31744385]
[326.40771484 175.44073486]
[340.20858765 169.56402588]
[354.00946045 163.68731689]
[367.81036377 157.81060791]
[381.61123657 151.93391418]
[395.41210938 146.05720520]
[404.82855225 132.63101196]
[421.13818359 134.34213257]
[427.56304932 149.43031311]
[417.49380493 162.37413025]
[401.28881836 159.85807800]
[387.48794556 165.73478699]
[373.68707275 171.61149597]
[359.88616943 177.48820496]
[346.08529663 183.36491394]
[332.28442383 189.24160767]
[318.48352051 195.11831665]
[304.68264771 200.99502563]
[290.92858887 206.98048401]
[277.22219849 213.07432556]
[263.51580811 219.16816711]
[258.85803223 233.42666626]
[266.32382202 246.43673706]
[273.78964233 259.44680786]
[288.78005981 263.68057251]
[296.16610718 276.98098755]
[292.03750610 291.24597168]
[299.50329590 304.25604248]
[306.96908569 317.26611328]
[314.43487549 330.27618408]
[321.90066528 343.28625488]
[329.36645508 356.29632568]
[350.06320190 357.22686768]
[365.89352417 370.37530518]
[370.54333496 390.27896118]
[362.28994751 408.82604980]
[370.75836182 421.20690918]
[384.93572998 428.22924805]
[385.73474121 443.10241699]
[394.20318604 455.48327637]
[405.00375366 456.87072754]
[413.08776855 463.83416748]
[415.93939209 473.88751221]
[412.84805298 483.63949585]
[420.92138672 496.28152466]
[428.99475098 508.92355347]
[446.13970947 512.37402344]
[455.30828857 526.86871338]
[451.24316406 543.18328857]
[459.51507568 555.69628906]
[474.42080688 562.53381348]
[475.68255615 578.88433838]
[462.00238037 587.92785645]
[447.45327759 580.36114502]
[447.00207520 563.96820068]
[438.73016357 551.45520020]
[425.86322021 550.66912842]
[415.64776611 542.49127197]
[411.95626831 529.73443604]
[416.35272217 516.99694824]
[408.27935791 504.35488892]
[400.20602417 491.71286011]
[382.44018555 484.09426880]
[381.82229614 463.95169067]
[373.35388184 451.57083130]
[359.78225708 445.43405151]
[358.37750244 429.67532349]
[349.90908813 417.29446411]
[340.45455933 419.39538574]
[330.77658081 418.55166626]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 160]
[7 159]
[8 158]
[9 157]
[10 156]
[11 155]
[14 152]
[15 151]
[16 150]
[20 122]
[21 121]
[22 120]
[23 119]
[24 118]
[25 117]
[26 116]
[39 62]
[40 61]
[42 59]
[43 58]
[44 57]
[45 56]
[46 55]
[47 54]
[48 53]
[64 79]
[65 78]
[66 77]
[83 102]
[84 101]
[85 100]
[86 99]
[87 98]
[88 97]
[123 149]
[124 148]
[125 147]
[127 146]
[128 145]
[129 144]
[130 143]
[131 142]
[132 141]
[133 140]
[134 139]
[164 196]
[165 195]
[167 193]
[168 192]
[172 190]
[173 189]
[174 188]
[177 184]
[178 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
