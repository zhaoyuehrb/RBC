%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:41:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGAGGCGGGGCUGCGGCGGCUGCGGUGUUCCUCCGACUUCCGGACAUCUCCCUGGGAGUCGCGCAGAGUGGAGUCAAAGGCAACCAGUGCUCGCUGCGGUCUCUGGGGAUCGGGACCGCGGCGGCGGCCCGCGAGCGGGAUGUUCCGGGGCUUGAGCAGUUGGUUGGGCUUGCAGCAGCCGGUGGCAGGCGGUGGGCAGCCCAAUGGAGAUGCUCCACCCGAGCAGCCGUCCGAGACGG\
) } def
/len { sequence length } bind def

/coor [
[109.89797211 449.70523071]
[98.94270325 460.56735229]
[83.84929657 463.75991821]
[69.43399811 458.26422119]
[60.29667664 445.83392334]
[59.35301971 430.43542480]
[66.90414429 416.98239136]
[80.54051208 409.76763916]
[81.70769501 394.81311035]
[74.41059113 387.69653320]
[72.17739868 377.52673340]
[75.97795868 367.59783936]
[84.78686523 361.26211548]
[86.34188080 346.34292603]
[83.91433716 339.37893677]
[88.01514435 331.24060059]
[89.76370239 316.34286499]
[91.51226044 301.44512939]
[93.16407776 286.53637695]
[94.71909332 271.61718750]
[96.27411652 256.69799805]
[97.82913208 241.77882385]
[99.38414764 226.85964966]
[100.93916321 211.94046021]
[102.49417877 197.02128601]
[103.75839996 182.07466125]
[104.73134613 167.10624695]
[105.70429993 152.13783264]
[106.67725372 137.16941833]
[94.40213776 137.74996948]
[82.46137238 134.34172058]
[72.12993622 127.22308350]
[64.53806305 117.07291412]
[49.94572067 120.54618073]
[35.35338211 124.01945496]
[20.85612679 127.87038422]
[6.46373272 132.09637451]
[-7.92866182 136.32235718]
[-22.32105637 140.54835510]
[-36.71345139 144.77433777]
[-51.10584641 149.00032043]
[-65.49823761 153.22631836]
[-79.89063263 157.45230103]
[-94.28302765 161.67828369]
[-108.67542267 165.90428162]
[-113.76289368 180.56364441]
[-126.51452637 189.40534973]
[-142.02705383 189.02955627]
[-154.33558655 179.58076477]
[-158.70726013 164.69224548]
[-153.46105957 150.08891296]
[-140.61425781 141.38607788]
[-125.10671997 141.93013000]
[-112.90141296 151.51188660]
[-98.50901794 147.28588867]
[-84.11662292 143.05990601]
[-69.72422791 138.83392334]
[-55.33183289 134.60792542]
[-40.93943787 130.38194275]
[-26.54704475 126.15595245]
[-12.15464973 121.92996216]
[2.23774457 117.70397949]
[16.63013840 113.47798920]
[18.08995628 111.10798645]
[20.56677818 109.16718292]
[23.90401077 108.04225159]
[27.80932808 108.05691528]
[31.88010979 109.42711639]
[46.47245026 105.95384216]
[61.06478882 102.48056793]
[63.00659180 87.60678864]
[49.79502487 80.50366211]
[36.58345413 73.40052795]
[18.18556786 74.37680054]
[9.56035995 59.08356094]
[-3.74230361 52.15253448]
[-17.04496765 45.22150803]
[-33.88563538 43.26490784]
[-36.66745758 26.54073906]
[-21.36696243 19.23792076]
[-10.11394119 31.91884613]
[3.18872309 38.84987259]
[16.49138641 45.78089905]
[28.10612488 42.44794846]
[39.23925400 48.09629059]
[43.68658447 60.18896103]
[56.89815521 67.29209137]
[70.10972595 74.39521790]
[73.75730133 70.74021149]
[77.84671783 67.59886932]
[82.30633545 65.02389526]
[77.70813751 50.74605560]
[72.11008453 43.55504608]
[73.14422607 36.25294495]
[68.73175812 21.91662025]
[64.31929016 7.58029795]
[59.90682602 -6.75602436]
[55.49435806 -21.09234619]
[51.08189392 -35.42866898]
[46.66942596 -49.76499176]
[42.25696182 -64.10131073]
[37.84449387 -78.43763733]
[33.43202972 -92.77395630]
[29.01956177 -107.11028290]
[24.60709572 -121.44660187]
[9.88291550 -126.34335327]
[0.87643152 -138.97912598]
[1.05082154 -154.49522400]
[10.33902931 -166.92538452]
[25.16954803 -171.48994446]
[39.83974457 -166.43376160]
[48.70862198 -153.70103455]
[48.36592484 -138.18774414]
[38.94342041 -125.85906982]
[43.35588455 -111.52275085]
[47.76835251 -97.18642426]
[52.18081665 -82.85010529]
[56.59328461 -68.51377869]
[61.00574875 -54.17745972]
[65.41821289 -39.84113693]
[69.83068085 -25.50481224]
[74.24314880 -11.16849041]
[78.65561676 3.16783214]
[83.06807709 17.50415421]
[87.48054504 31.84047699]
[91.98597717 46.14785767]
[96.58417511 60.42568970]
[111.50335693 61.98070526]
[118.94706726 48.95799255]
[126.39078522 35.93527985]
[133.83450317 22.91256523]
[141.27822876 9.88985157]
[137.34457397 -5.18211269]
[145.07907104 -18.28295708]
[159.47212219 -21.94021225]
[166.91584778 -34.96292496]
[174.35955811 -47.98564148]
[181.80328369 -61.00835419]
[178.98825073 -76.80250549]
[189.68923950 -88.75524902]
[205.69738770 -87.69746399]
[214.73258972 -74.44059753]
[209.86383057 -59.15417480]
[194.82598877 -53.56463623]
[187.38227844 -40.54192352]
[179.93855286 -27.51920891]
[172.49484253 -14.49649525]
[176.64764404 -0.23852156]
[169.28416443 13.07440090]
[154.30093384 17.33356857]
[146.85722351 30.35628319]
[139.41349792 43.37899780]
[131.96978760 56.40171051]
[124.52606964 69.42442322]
[137.17602539 90.06510162]
[135.17489624 113.74327850]
[150.04867554 115.68508148]
[164.92245483 117.62688446]
[179.79624939 119.56868744]
[194.67002869 121.51049805]
[211.51872253 114.05685425]
[225.01771545 125.28426361]
[239.91545105 127.03282166]
[254.52346802 120.95696259]
[266.26202393 130.12513733]
[281.15975952 131.87368774]
[296.05749512 133.62225342]
[310.95526123 135.37080383]
[325.85299683 137.11936951]
[340.75073242 138.86791992]
[355.64846802 140.61648560]
[370.54620361 142.36503601]
[379.41287231 140.26011658]
[385.62551880 144.23420715]
[400.49929810 146.17601013]
[417.34799194 138.72238159]
[430.84698486 149.94978333]
[445.74472046 151.69833374]
[460.35275269 145.62248230]
[472.09130859 154.79064941]
[486.98904419 156.53921509]
[501.88677979 158.28776550]
[513.14141846 147.43113708]
[528.74499512 146.40040588]
[541.32995605 155.68225098]
[544.95410156 170.89408875]
[537.90612793 184.85333252]
[523.51397705 190.96887207]
[508.57315063 186.35311890]
[500.13821411 173.18550110]
[485.24047852 171.43695068]
[470.34274292 169.68840027]
[456.80029297 175.88931274]
[443.99615479 166.59608459]
[429.09841919 164.84751892]
[419.42755127 172.09217834]
[407.01364136 170.77114868]
[398.55749512 161.04978943]
[383.68371582 159.10798645]
[368.79763794 157.26277161]
[353.89990234 155.51422119]
[339.00216675 153.76565552]
[324.10443115 152.01710510]
[309.20669556 150.26853943]
[294.30895996 148.51998901]
[279.41122437 146.77143860]
[264.51348877 145.02287292]
[250.97103882 151.22380066]
[238.16688538 141.93055725]
[223.26914978 140.18200684]
[213.59829712 147.42666626]
[201.18438721 146.10563660]
[192.72822571 136.38427734]
[177.85444641 134.44247437]
[162.98065186 132.50067139]
[148.10687256 130.55886841]
[133.23309326 128.61706543]
[121.64566040 138.14236450]
[120.67271423 153.11077881]
[119.69976044 168.07919312]
[118.72681427 183.04760742]
[121.01937866 187.69094849]
[121.28870392 192.29168701]
[119.88645935 196.09066772]
[117.41335297 198.57629395]
[115.85833740 213.49548340]
[114.30332184 228.41465759]
[112.74830627 243.33383179]
[111.19329071 258.25302124]
[109.63827515 273.17221069]
[108.08325958 288.09136963]
[110.30310059 296.92999268]
[106.40999603 303.19369507]
[104.66143799 318.09143066]
[102.91287994 332.98916626]
[101.26106262 347.89794922]
[99.70604706 362.81710815]
[108.73094177 380.85760498]
[96.66221619 395.98028564]
[95.49503326 410.93481445]
[107.84688568 420.17791748]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 240]
[9 239]
[13 237]
[14 236]
[16 235]
[17 234]
[18 233]
[19 231]
[20 230]
[21 229]
[22 228]
[23 227]
[24 226]
[25 225]
[26 221]
[27 220]
[28 219]
[29 218]
[33 70]
[34 69]
[35 68]
[36 63]
[37 62]
[38 61]
[39 60]
[40 59]
[41 58]
[42 57]
[43 56]
[44 55]
[45 54]
[71 88]
[72 87]
[73 86]
[75 83]
[76 82]
[77 81]
[91 127]
[92 126]
[94 125]
[95 124]
[96 123]
[97 122]
[98 121]
[99 120]
[100 119]
[101 118]
[102 117]
[103 116]
[104 115]
[105 114]
[128 154]
[129 153]
[130 152]
[131 151]
[132 150]
[135 147]
[136 146]
[137 145]
[138 144]
[156 217]
[157 216]
[158 215]
[159 214]
[160 213]
[162 210]
[163 209]
[165 207]
[166 206]
[167 205]
[168 204]
[169 203]
[170 202]
[171 201]
[172 200]
[174 199]
[175 198]
[177 195]
[178 194]
[180 192]
[181 191]
[182 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
