%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:38:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGCCCCAGCACGUUGUCCCAGGCAACCCCAGGAAGCCGGGCGGCGCAGCGCGAGCCACUGACCCGGUCCCCGGGGUCAGAGGAGCAAAGGGCAAGCUGUCGGAGGCCAGUAUGGAACCAGAGAGGAAGGGGCUAUCGUUGGCUUCUUCUUCAGAUGGAGACGGGAGAGAAGAAAAUAAAUUAAAACAAGGAAUUUCCCAAGACUUGGCUU\
) } def
/len { sequence length } bind def

/coor [
[69.25215912 161.30068970]
[68.80974579 146.30722046]
[68.36733246 131.31375122]
[58.03800583 120.43694305]
[43.08733368 119.22145844]
[28.13665962 118.00598145]
[13.17743111 116.90078735]
[-1.78954232 115.90594482]
[-16.07249069 122.71093750]
[-28.25857925 114.14656830]
[-43.22555161 113.15171814]
[-58.19252396 112.15687561]
[-70.02369690 122.28906250]
[-85.18816376 121.06694031]
[-94.77474213 109.72528076]
[-109.74171448 108.73043823]
[-124.70868683 107.73559570]
[-139.67565918 106.74075317]
[-154.64263916 105.74590302]
[-169.60960388 104.75106049]
[-179.57154846 116.50120544]
[-194.36921692 120.09043121]
[-208.27839661 114.34597778]
[-216.04492188 101.66453552]
[-231.01190186 100.66969299]
[-251.34687805 113.12954712]
[-270.19781494 99.74023438]
[-285.19415283 100.07205963]
[-300.19049072 100.40389252]
[-315.18679810 100.73572540]
[-330.18313599 101.06755829]
[-338.69192505 104.38562775]
[-345.40270996 101.29205322]
[-360.40231323 101.40267181]
[-371.45480347 112.37902832]
[-386.66809082 112.27753448]
[-397.06423950 101.67304230]
[-412.06384277 101.78366089]
[-427.06344604 101.89427948]
[-442.06301880 102.00489807]
[-457.06262207 102.11551666]
[-472.06222534 102.22613525]
[-487.06057739 102.44736481]
[-502.05691528 102.77919769]
[-517.05322266 103.11103058]
[-523.44128418 113.13530731]
[-533.76898193 118.77416992]
[-545.41589355 118.72861481]
[-555.48962402 113.12561035]
[-561.54443359 103.45787811]
[-576.54400635 103.34725952]
[-590.53131104 111.90804291]
[-604.80767822 103.83841705]
[-604.68670654 87.43971252]
[-590.29296875 79.58152008]
[-576.43341064 88.34766388]
[-561.43383789 88.45828247]
[-549.18981934 74.84798431]
[-530.56622314 74.50527191]
[-517.38507080 88.11470032]
[-502.38873291 87.78286743]
[-487.39242554 87.45103455]
[-480.77578735 84.16088104]
[-472.17282104 87.22653961]
[-457.17324829 87.11592102]
[-442.17364502 87.00530243]
[-427.17404175 86.89468384]
[-412.17446899 86.78406525]
[-397.17486572 86.67344666]
[-386.93624878 75.91677856]
[-371.72610474 75.59091949]
[-360.51293945 86.40307617]
[-345.51333618 86.29245758]
[-330.51495361 86.07122803]
[-315.51864624 85.73939514]
[-300.52230835 85.40756226]
[-285.52597046 85.07573700]
[-270.52966309 84.74390411]
[-267.52926636 78.99802399]
[-262.86422729 74.42358398]
[-256.96835327 71.49053192]
[-250.40390015 70.51409912]
[-243.80798340 71.62120819]
[-237.83067322 74.73500061]
[-233.07104492 79.57926178]
[-230.01705933 85.70272064]
[-215.05007935 86.69756317]
[-205.67343140 75.15562439]
[-191.12632751 71.30263519]
[-176.93388367 76.81881714]
[-168.61476135 89.78408813]
[-153.64778137 90.77893066]
[-138.68081665 91.77377319]
[-123.71384430 92.76862335]
[-108.74687195 93.76346588]
[-93.77989960 94.75830841]
[-82.77654266 84.78525543]
[-67.58373260 85.58095551]
[-57.19768143 97.18990326]
[-42.23070908 98.18474579]
[-27.26373482 99.17959595]
[-14.05132484 92.30343628]
[-0.79469794 100.93897247]
[14.17227554 101.93381500]
[21.05378723 99.24131012]
[29.35214043 103.05530548]
[44.30281448 104.27079010]
[59.25348663 105.48626709]
[46.34557724 97.84519958]
[37.24792099 85.91906738]
[33.28997803 71.45066071]
[35.05013275 56.55429459]
[42.27116776 43.40679550]
[53.89785385 33.92945099]
[68.23116302 29.50719833]
[83.17652893 30.78627968]
[96.54994965 37.57977676]
[106.39714050 48.89493561]
[111.27922058 63.07911301]
[123.55591583 54.46036911]
[135.83261108 45.84162521]
[138.53363037 28.55725861]
[152.62260437 18.76746368]
[169.10159302 22.12970161]
[181.24983215 13.33083057]
[193.39808655 4.53195953]
[205.54632568 -4.26691103]
[217.69458008 -13.06578159]
[229.84281921 -21.86465263]
[241.99107361 -30.66352272]
[254.13931274 -39.46239471]
[266.28756714 -48.26126480]
[278.43579102 -57.06013489]
[290.58404541 -65.85900879]
[302.73229980 -74.65787506]
[314.88055420 -83.45674896]
[321.07513428 -98.64091492]
[337.35684204 -100.59994507]
[346.97644043 -87.31855011]
[340.03811646 -72.45949554]
[323.67941284 -71.30850220]
[311.53115845 -62.50962830]
[299.38293457 -53.71075821]
[287.23468018 -44.91188812]
[275.08642578 -36.11301804]
[262.93817139 -27.31414795]
[250.78993225 -18.51527786]
[238.64169312 -9.71640682]
[226.49343872 -0.91753584]
[214.34519958 7.88133478]
[202.19696045 16.68020630]
[190.04870605 25.47907639]
[177.90046692 34.27794647]
[177.66642761 47.16017914]
[169.94047546 57.71329117]
[157.36213684 61.95260239]
[144.45135498 58.11832428]
[132.17465210 66.73706818]
[119.89796448 75.35580444]
[119.73204803 82.85397339]
[134.72837830 83.18603516]
[134.39607239 98.18235779]
[119.40021515 97.85030365]
[119.23429871 105.34846497]
[131.11775208 114.50181580]
[143.00119019 123.65515900]
[154.88462830 132.80850220]
[166.76808167 141.96185303]
[178.65151978 151.11518860]
[190.34803772 141.61317444]
[203.92085266 135.06523132]
[218.63798523 131.82449341]
[233.70578003 132.06570435]
[248.31164551 135.77587891]
[261.66790771 142.75492859]
[273.05426025 152.62646484]
[281.85668945 164.85815430]
[287.60046387 178.79034424]
[289.97583008 193.67169189]
[288.85467529 208.69964600]
[284.29751587 223.06379700]
[276.55004883 235.98950195]
[266.03012085 246.77966309]
[253.30505371 254.85241699]
[239.06108093 259.77239990]
[224.06637573 261.27426147]
[209.12957764 259.27703857]
[195.05622864 253.88841248]
[182.60525513 245.39900208]
[172.44813538 234.26663208]
[165.13264465 221.09164429]
[161.05326843 206.58456421]
[160.43003845 191.52772522]
[163.29652405 176.73313904]
[169.49818420 162.99864197]
[157.61473083 153.84529114]
[145.73129272 144.69195557]
[133.84783936 135.53860474]
[121.96440125 126.38525391]
[110.08095551 117.23191071]
[103.40091705 120.64176941]
[110.22062683 134.00184631]
[120.83503723 144.60063171]
[114.03498840 157.97073364]
[99.21794891 155.63507080]
[96.86055756 140.82154846]
[90.04084778 127.46147919]
[83.36080933 130.87133789]
[83.80322266 145.86480713]
[84.24563599 160.85827637]
[90.75650787 176.51219177]
[77.51674652 187.10205078]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 210]
[2 209]
[3 208]
[4 108]
[5 107]
[6 106]
[7 104]
[8 103]
[10 101]
[11 100]
[12 99]
[15 96]
[16 95]
[17 94]
[18 93]
[19 92]
[20 91]
[24 87]
[25 86]
[27 78]
[28 77]
[29 76]
[30 75]
[31 74]
[33 73]
[34 72]
[37 69]
[38 68]
[39 67]
[40 66]
[41 65]
[42 64]
[43 62]
[44 61]
[45 60]
[50 57]
[51 56]
[119 159]
[120 158]
[121 157]
[124 153]
[125 152]
[126 151]
[127 150]
[128 149]
[129 148]
[130 147]
[131 146]
[132 145]
[133 144]
[134 143]
[135 142]
[136 141]
[164 200]
[165 199]
[166 198]
[167 197]
[168 196]
[169 195]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
