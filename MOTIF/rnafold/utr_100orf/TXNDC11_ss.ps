%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:58:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGACCCCGCGGCGGCGGCGCGGCUGACGUGGAGCGUCCGGGUUAGCGGGUGCGGCGAGCUGCGGGAUUGGGGAGCAACGGGCCGGGCCGGGCCUUCGGGCCCGAGGCGGCGGCGGCGGUAUAAAGCCGGCGACUGGGAGCAUGUAAUGUCGGAAUGCGGAGGCCGCGGCGGCGGCAGCAGCAGCAGCGAGGACGCCGAGGACGAGGGAGGGGGCGGCGGCGGCCCCGCGGGCUCAGACUGCCUCA\
) } def
/len { sequence length } bind def

/coor [
[96.76152039 212.67640686]
[96.19390106 197.68714905]
[95.62627411 182.69789124]
[95.05865479 167.70863342]
[94.49103546 152.71937561]
[82.23732758 149.94165039]
[70.98165894 144.35783386]
[61.35646057 136.28164673]
[49.07823181 144.89820862]
[36.80000305 153.51477051]
[24.52177620 162.13133240]
[12.24354935 170.74789429]
[-0.03467908 179.36445618]
[-12.31290722 187.98101807]
[-24.59113503 196.59757996]
[-31.98050880 213.47656250]
[-49.52006149 214.31365967]
[-61.68860245 223.08444214]
[-68.35964966 237.43043518]
[-83.20861816 238.59553528]
[-95.37715912 247.36631775]
[-107.54570007 256.13711548]
[-119.71424103 264.90789795]
[-126.89006805 281.87875366]
[-144.41766357 282.93707275]
[-156.47457886 291.86068726]
[-168.53149414 300.78430176]
[-180.58840942 309.70788574]
[-192.64532471 318.63150024]
[-204.70223999 327.55511475]
[-211.19175720 341.98413086]
[-226.02485657 343.33648682]
[-238.08175659 352.26010132]
[-250.13867188 361.18371582]
[-262.19558716 370.10729980]
[-271.32998657 384.39013672]
[-287.58328247 379.56661987]
[-287.44763184 362.61318970]
[-271.11920166 358.05038452]
[-259.06228638 349.12680054]
[-247.00537109 340.20318604]
[-234.94845581 331.27957153]
[-229.32131958 317.48883057]
[-213.62585449 315.49819946]
[-201.56893921 306.57458496]
[-189.51202393 297.65097046]
[-177.45510864 288.72738647]
[-165.39819336 279.80377197]
[-153.34127808 270.88015747]
[-151.25201416 258.98120117]
[-141.30184937 251.44587708]
[-128.48501587 252.73934937]
[-116.31648254 243.96856689]
[-104.14794159 235.19778442]
[-91.97940063 226.42700195]
[-86.17872620 212.70834351]
[-70.45938110 210.91589355]
[-58.29084396 202.14511108]
[-56.05162048 190.27346802]
[-46.00718689 182.86428833]
[-33.20769501 184.31935120]
[-20.92946815 175.70278931]
[-8.65123940 167.08622742]
[3.62698817 158.46966553]
[15.90521622 149.85310364]
[28.18344498 141.23654175]
[40.46167374 132.61997986]
[52.73989868 124.00342560]
[48.13714981 116.69701385]
[44.69131470 108.52807617]
[42.56063461 99.68434143]
[41.87216568 90.38204193]
[42.71674728 80.86056519]
[45.14489365 71.37635040]
[49.16371918 62.19597626]
[54.73505783 53.58877945]
[61.77486420 45.81911469]
[51.20177078 35.17911148]
[35.62646103 34.96128464]
[25.05541039 24.02019119]
[25.35905838 9.17285538]
[14.78596497 -1.46714902]
[4.21287155 -12.10715294]
[-6.36022186 -22.74715805]
[-16.93331528 -33.38716125]
[-27.50640869 -44.02716827]
[-38.27896118 -54.46517944]
[-49.24711609 -64.69746399]
[-60.21527100 -74.92974091]
[-71.18342590 -85.16202545]
[-86.88968658 -91.54557800]
[-85.10353088 -108.40517426]
[-68.40835571 -111.35602570]
[-60.95114136 -96.13018036]
[-49.98298645 -85.89789581]
[-39.01483536 -75.66561127]
[-28.04668045 -65.43333435]
[-24.55317307 -65.18080902]
[-21.00550461 -63.23876572]
[-18.18962288 -59.59865189]
[-16.86640549 -54.60026169]
[-6.29331112 -43.96025467]
[4.27978230 -33.32025146]
[14.85287571 -22.68024635]
[25.42597008 -12.04024220]
[35.99906158 -1.40023828]
[50.84801865 -1.61021733]
[61.72220993 9.02964211]
[61.84177399 24.60601807]
[72.41487122 35.24602127]
[86.24575043 29.44026756]
[86.05650330 14.44146156]
[85.77263641 -0.55585271]
[85.39417267 -15.55107784]
[77.31114197 -29.15163612]
[84.72486115 -42.07007599]
[84.34639740 -57.06529999]
[83.96793365 -72.06052399]
[83.58946228 -87.05574799]
[70.73386383 -95.74557495]
[65.47286987 -110.34357452]
[69.82945251 -125.23651886]
[82.12841034 -134.69776917]
[97.64054108 -135.08927917]
[110.40112305 -126.26051331]
[115.50344086 -111.60630035]
[110.98555756 -96.76148987]
[98.58468628 -87.43421936]
[98.96315765 -72.43898773]
[99.34162140 -57.44376755]
[99.72008514 -42.44853973]
[107.77604675 -29.92054176]
[100.38939667 -15.92954254]
[100.76786041 -0.93431765]
[104.07025909 5.65659523]
[101.05530548 14.25221348]
[101.24455261 29.25102043]
[108.34462738 31.66741562]
[113.17763519 17.46734428]
[127.37763214 22.30057526]
[122.54476929 36.50020599]
[129.64485168 38.91660309]
[138.94425964 27.14710617]
[148.24366760 15.37761211]
[157.54307556 3.60811734]
[151.26089478 -10.34870625]
[152.19595337 -25.62562561]
[160.13334656 -38.71211624]
[173.24914551 -46.60099792]
[188.52941895 -47.47946548]
[202.46289062 -41.14565277]
[211.84773254 -29.05502129]
[214.52737427 -13.98591137]
[209.88607788 0.59890550]
[198.99035645 11.34794521]
[184.34397888 15.79115772]
[169.31256104 12.90752506]
[160.01315308 24.67702103]
[150.71374512 36.44651413]
[141.41433716 48.21601105]
[155.87017822 79.08357239]
[152.15231323 109.47723389]
[166.38265991 114.22035217]
[180.61300659 118.96347046]
[196.15168762 115.98688507]
[205.77932739 127.35164642]
[220.00967407 132.09475708]
[234.24003601 136.83787537]
[248.47038269 141.58099365]
[262.70074463 146.32411194]
[276.93109131 151.06723022]
[286.03649902 150.81007385]
[291.31039429 155.96098328]
[305.47976685 160.88327026]
[319.64913940 165.80554199]
[335.22412109 163.02523804]
[344.70761108 174.51055908]
[358.87701416 179.43283081]
[374.45199585 176.65254211]
[383.93548584 188.13786316]
[398.10485840 193.06013489]
[400.87878418 172.62940979]
[421.59347534 156.24876404]
[436.59320068 156.15414429]
[450.46206665 147.40277100]
[464.84744263 155.27630615]
[464.95089722 171.67512512]
[450.66598511 179.72953796]
[436.68780518 171.15383911]
[421.68811035 171.24845886]
[419.81561279 178.51095581]
[434.34057617 182.25596619]
[445.04708862 192.76170349]
[430.59558105 196.78094482]
[416.07058716 193.03593445]
[414.19808960 200.29841614]
[427.28207397 207.63392639]
[440.36602783 214.96943665]
[453.45001221 222.30494690]
[465.13500977 212.61860657]
[479.53131104 207.81120300]
[494.69189453 208.53286743]
[508.56643677 214.68601990]
[519.27856445 225.43849182]
[525.37945557 239.33609009]
[526.04406738 254.49929810]
[521.18255615 268.87738037]
[511.45230103 280.52587891]
[498.16931152 287.86938477]
[483.13000488 289.91476440]
[468.36831665 286.38537598]
[455.88061523 277.75857544]
[447.35577393 265.20101929]
[443.94671631 250.41107178]
[446.11450195 235.38891602]
[433.03051758 228.05340576]
[419.94656372 220.71789551]
[406.86257935 213.38238525]
[393.18258667 207.22950745]
[379.01321411 202.30723572]
[364.45172119 205.43960571]
[353.95471191 193.60221863]
[339.78533936 188.67993164]
[325.22384644 191.81231689]
[314.72686768 179.97491455]
[300.55749512 175.05264282]
[286.38812256 170.13037109]
[272.18795776 165.29757690]
[257.95761108 160.55445862]
[243.72726440 155.81134033]
[229.49691772 151.06822205]
[215.26657104 146.32511902]
[201.03620911 141.58200073]
[186.51538086 144.89784241]
[175.86988831 133.19381714]
[161.63954163 128.45069885]
[147.40919495 123.70758820]
[140.69419861 133.96562195]
[131.80206299 142.40649414]
[121.20850372 148.57859802]
[109.48029327 152.15174866]
[110.04791260 167.14100647]
[110.61553192 182.13026428]
[111.18315887 197.11952209]
[111.75077820 212.10877991]
[120.93517303 225.69476318]
[113.51921844 240.32130432]
[97.13182068 240.94187927]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 245]
[2 244]
[3 243]
[4 242]
[5 241]
[8 68]
[9 67]
[10 66]
[11 65]
[12 64]
[13 63]
[14 62]
[15 61]
[17 58]
[18 57]
[20 55]
[21 54]
[22 53]
[23 52]
[25 49]
[26 48]
[27 47]
[28 46]
[29 45]
[30 44]
[32 42]
[33 41]
[34 40]
[35 39]
[77 110]
[78 109]
[81 106]
[82 105]
[83 104]
[84 103]
[85 102]
[86 101]
[87 97]
[88 96]
[89 95]
[90 94]
[111 137]
[112 136]
[113 134]
[114 133]
[116 131]
[117 130]
[118 129]
[119 128]
[142 160]
[143 159]
[144 158]
[145 157]
[162 237]
[163 236]
[164 235]
[166 233]
[167 232]
[168 231]
[169 230]
[170 229]
[171 228]
[173 227]
[174 226]
[175 225]
[177 223]
[178 222]
[180 220]
[181 219]
[183 190]
[184 189]
[196 218]
[197 217]
[198 216]
[199 215]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
