%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:44:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUUCUUUGCAGCUACCAGGACAGAGCUUGGUGAGAUAAUUCUUUUAUUCUUCAACUUUUAUUUUAACUUCAAUGGUACAUGUGCAGGGAUGGAAAUUAAACACCUCUUGUUUUUGGUUGCUGCUGCUUGCUUACUGCCUAUGUUGUCCAUGAAAAAGAAAUCAGCUAGAGACCAAUUUAAUAAGCUCG\
) } def
/len { sequence length } bind def

/coor [
[122.91907501 282.74215698]
[127.38083649 274.40115356]
[121.15981293 260.75201416]
[114.93878937 247.10289001]
[108.71776581 233.45376587]
[102.49674225 219.80462646]
[96.27571869 206.15548706]
[90.05470276 192.50634766]
[83.83367920 178.85722351]
[79.66913605 96.91149902]
[67.72516632 87.83727264]
[55.78119659 78.76304626]
[43.83722687 69.68881989]
[31.89325905 60.61459732]
[16.22400093 58.42714310]
[10.77039242 44.56686020]
[-1.17357755 35.49263382]
[-13.11754704 26.41840744]
[-25.06151772 17.34418106]
[-37.00548553 8.26995468]
[-48.94945526 -0.80427164]
[-60.89342499 -9.87849808]
[-76.34898376 -7.93851662]
[-88.33260345 -17.31121826]
[-90.08683014 -32.05768585]
[-102.03079987 -41.13191223]
[-113.97476959 -50.20613861]
[-124.67008209 -48.11186600]
[-134.54554749 -52.17493057]
[-140.42306519 -60.82608032]
[-140.55628967 -71.06428528]
[-152.19534302 -80.52644348]
[-163.83439636 -89.98860168]
[-175.47344971 -99.45075989]
[-188.63357544 -96.53518677]
[-200.88908386 -101.66170502]
[-207.84655762 -112.74940491]
[-207.15263367 -125.62585449]
[-218.63447571 -135.27816772]
[-230.11633301 -144.93046570]
[-241.59819031 -154.58277893]
[-253.08003235 -164.23509216]
[-259.53930664 -165.76940918]
[-263.62924194 -169.74601746]
[-264.77398682 -174.39862061]
[-275.93215942 -184.42335510]
[-287.09033203 -194.44808960]
[-298.24850464 -204.47280884]
[-309.40667725 -214.49754333]
[-320.56484985 -224.52227783]
[-331.72302246 -234.54699707]
[-342.88119507 -244.57173157]
[-354.03936768 -254.59646606]
[-369.60205078 -253.93267822]
[-380.77520752 -264.25814819]
[-381.31213379 -279.09887695]
[-392.47030640 -289.12359619]
[-407.56182861 -286.03292847]
[-421.41751099 -292.34744263]
[-428.81072998 -305.45483398]
[-427.08874512 -320.22552490]
[-438.24691772 -330.25024414]
[-449.40509033 -340.27496338]
[-460.56326294 -350.29971313]
[-474.88925171 -344.91226196]
[-490.07650757 -346.81106567]
[-502.63513184 -355.55975342]
[-509.67922974 -369.14794922]
[-509.59011841 -384.45318604]
[-502.38827515 -397.95846558]
[-489.72863770 -406.56030273]
[-474.52029419 -408.28213501]
[-460.25799561 -402.72824097]
[-450.21914673 -391.17489624]
[-446.71057129 -376.27694702]
[-450.53851318 -361.45788574]
[-439.38034058 -351.43313599]
[-428.22219849 -341.40841675]
[-417.06402588 -331.38369751]
[-402.56143188 -334.67202759]
[-388.73992920 -328.71969604]
[-380.98294067 -315.61691284]
[-382.44555664 -300.28176880]
[-371.28738403 -290.25704956]
[-356.47412109 -291.30685425]
[-345.01531982 -281.29928589]
[-344.01464844 -265.75463867]
[-332.85647583 -255.72990417]
[-321.69830322 -245.70516968]
[-310.54013062 -235.68045044]
[-299.38195801 -225.65571594]
[-288.22378540 -215.63098145]
[-277.06561279 -205.60624695]
[-265.90744019 -195.58152771]
[-254.74926758 -185.55679321]
[-243.42771912 -175.71694946]
[-231.94587708 -166.06463623]
[-220.46401978 -156.41232300]
[-208.98217773 -146.76000977]
[-197.50032043 -137.10769653]
[-180.83071899 -139.27680969]
[-167.48207092 -128.51310730]
[-166.01129150 -111.08981323]
[-154.37223816 -101.62765503]
[-142.73318481 -92.16549683]
[-131.09413147 -82.70333862]
[-111.83734894 -81.06557465]
[-104.90054321 -62.15010834]
[-92.95657349 -53.07588196]
[-81.01260376 -44.00165558]
[-66.33561707 -46.26478958]
[-54.09347153 -37.23237991]
[-51.81919861 -21.82246780]
[-39.87522888 -12.74824142]
[-27.93126106 -3.67401505]
[-15.98729038 5.40021133]
[-4.04332113 14.47443771]
[7.90064907 23.54866409]
[19.84461784 32.62289047]
[34.65956497 34.16129684]
[40.96748352 48.67062759]
[52.91145325 57.74485397]
[64.85542297 66.81907654]
[76.79939270 75.89330292]
[88.74336243 84.96752930]
[84.07610321 70.71212006]
[91.45293427 57.65140152]
[106.07112885 54.28861237]
[118.41345215 62.81311798]
[120.44437408 77.67499542]
[110.84204865 89.19815063]
[125.29302216 85.17703247]
[134.40119934 71.97019196]
[150.41493225 71.00070953]
[161.04985046 83.01229095]
[158.14776611 98.79067230]
[143.93489075 106.23204041]
[129.31414795 99.62799835]
[114.86317444 103.64912415]
[115.41778564 111.12858582]
[117.08164215 133.56698608]
[131.96765137 135.41270447]
[146.85366821 137.25843811]
[161.73966980 139.10415649]
[175.22647095 130.41589355]
[190.38143921 135.67956543]
[195.57899475 150.85734558]
[186.83201599 164.30613708]
[170.85043335 165.70916748]
[159.89395142 153.99017334]
[145.00793457 152.14443970]
[130.12193298 150.29872131]
[115.23591614 148.45298767]
[110.79763794 154.49879456]
[101.92108917 166.59039307]
[97.48281097 172.63619995]
[103.70383453 186.28533936]
[109.92485809 199.93446350]
[116.14588165 213.58360291]
[122.36690521 227.23274231]
[128.58792114 240.88186646]
[134.80894470 254.53100586]
[141.02996826 268.18014526]
[159.20671082 279.50924683]
[156.42481995 299.95071411]
[163.31150818 313.27639771]
[170.19819641 326.60208130]
[177.08488464 339.92773438]
[192.11618042 337.96920776]
[206.91015625 341.27279663]
[219.68038940 349.43963623]
[228.88479614 361.48348999]
[233.41189575 375.95004272]
[232.71502686 391.09237671]
[226.87834167 405.08197021]
[216.60664368 416.22952271]
[203.14028931 423.18893433]
[188.10540771 425.11978149]
[173.31753540 421.78890991]
[160.56237793 413.59857178]
[151.38018799 401.53775024]
[146.87974548 387.06286621]
[147.60452271 371.92184448]
[153.46697998 357.94305420]
[163.75920105 346.81442261]
[156.87252808 333.48876953]
[149.98583984 320.16308594]
[143.09915161 306.83740234]
[134.28425598 305.55007935]
[126.94436646 300.26248169]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 163]
[3 162]
[4 161]
[5 160]
[6 159]
[7 158]
[8 157]
[9 156]
[10 125]
[11 124]
[12 123]
[13 122]
[14 121]
[16 119]
[17 118]
[18 117]
[19 116]
[20 115]
[21 114]
[22 113]
[25 110]
[26 109]
[27 108]
[31 106]
[32 105]
[33 104]
[34 103]
[38 100]
[39 99]
[40 98]
[41 97]
[42 96]
[45 95]
[46 94]
[47 93]
[48 92]
[49 91]
[50 90]
[51 89]
[52 88]
[53 87]
[56 84]
[57 83]
[61 79]
[62 78]
[63 77]
[64 76]
[131 139]
[132 138]
[141 153]
[142 152]
[143 151]
[144 150]
[165 188]
[166 187]
[167 186]
[168 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
