%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:50:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCACUUCCGCCCGGGCGCAUUGUAGCCCCGCGGACAGCUGGGCCAGGGUGCGGGCCUGCGCCUCCCUCGGCUCCUGGCGCGGGCCUCGGGGAGAGGGGUGGAAGAUGUCUAUGGAUGUGACAUUCCUGGGGACGGGUGCAGCAUACCCAUCUCCAACCCGGGGUGCCUCUGCUGUGGUCCUUCGGUGUGAAGGCGAGUGCUGGC\
) } def
/len { sequence length } bind def

/coor [
[127.25194550 471.26251221]
[139.87921143 462.61318970]
[138.06246948 447.72363281]
[136.24572754 432.83404541]
[132.31391907 426.57324219]
[134.51617432 417.70495605]
[132.92559814 402.78952026]
[131.33503723 387.87408447]
[129.74447632 372.95864868]
[128.04077148 358.05572510]
[126.22402954 343.16613770]
[124.40728760 328.27655029]
[122.59054565 313.38699341]
[109.86503601 298.83093262]
[118.03128815 280.40292358]
[115.76349640 265.57534790]
[113.49571228 250.74775696]
[111.22792816 235.92018127]
[107.10792542 229.78157043]
[109.04000854 220.85052490]
[106.99751282 205.99023438]
[104.95500946 191.12994385]
[95.55674744 179.57478333]
[101.34285736 164.84957886]
[99.30036163 149.98928833]
[97.25785828 135.12899780]
[95.21535492 120.26871490]
[78.41758728 108.71191406]
[78.36694336 86.08293152]
[63.55699539 83.70269012]
[48.74705124 81.32245636]
[33.93710709 78.94221497]
[19.12716103 76.56198120]
[4.31721592 74.18173981]
[-6.57495403 81.09378815]
[-18.86285400 78.80433655]
[-26.05728912 69.07734680]
[-40.82940674 66.47262573]
[-55.60152435 63.86790085]
[-61.93934631 65.76807404]
[-67.45619202 64.38735199]
[-70.77952576 60.95343781]
[-85.46578979 57.90159988]
[-100.15204620 54.84975815]
[-114.83831024 51.79792023]
[-129.52456665 48.74607849]
[-144.23356628 45.80577087]
[-158.96444702 42.97716522]
[-173.69534302 40.14855576]
[-188.42622375 37.31995010]
[-205.67691040 43.75749969]
[-218.49084473 31.76904678]
[-233.26295471 29.16432381]
[-248.03507996 26.55960274]
[-260.83581543 35.82873535]
[-276.42813110 33.24905777]
[-285.56143188 20.35104370]
[-282.81701660 4.78685713]
[-269.82318115 -4.20954561]
[-254.28887939 -1.30075908]
[-245.43035889 11.78748512]
[-230.65823364 14.39220810]
[-215.88612366 16.99693108]
[-205.79873657 10.31719398]
[-193.46884155 12.36851788]
[-185.59761047 22.58906364]
[-170.86672974 25.41767120]
[-156.13584900 28.24627876]
[-141.40495300 31.07488441]
[-134.24108887 29.24846268]
[-126.47273254 34.05981827]
[-111.78646851 37.11165619]
[-97.10020447 40.16349792]
[-82.41394806 43.21533966]
[-67.72768402 46.26717758]
[-52.99679947 49.09578705]
[-38.22468185 51.70050812]
[-23.45256805 54.30522919]
[-7.31111145 47.42239380]
[6.69745445 59.37179565]
[21.50739861 61.75203323]
[36.31734467 64.13227081]
[51.12728882 66.51251221]
[65.93723297 68.89274597]
[80.74717712 71.27298737]
[94.72212982 65.82315826]
[104.01078033 54.04516602]
[113.29942322 42.26717377]
[122.58806610 30.48918152]
[131.87670898 18.71118927]
[141.16535950 6.93319702]
[150.45399475 -4.84479523]
[143.79199219 -19.05950165]
[145.96003723 -35.48505783]
[157.19703674 -48.81976700]
[174.67681885 -54.26514435]
[178.72377014 -68.70890808]
[182.77072144 -83.15266418]
[186.81767273 -97.59642029]
[190.86462402 -112.04018402]
[194.91157532 -126.48394012]
[198.95852661 -140.92770386]
[191.22409058 -149.96121216]
[188.83657837 -161.48893738]
[192.27606201 -172.62222290]
[200.57710266 -180.62806702]
[211.59609985 -183.59985352]
[216.07954407 -197.91413879]
[220.56298828 -212.22842407]
[225.04641724 -226.54270935]
[229.52986145 -240.85699463]
[225.42398071 -256.73382568]
[237.30883789 -268.03347778]
[252.95831299 -263.13183594]
[256.27355957 -247.07130432]
[243.84414673 -236.37355042]
[239.36070251 -222.05926514]
[234.87727356 -207.74497986]
[230.39382935 -193.43069458]
[225.91038513 -179.11640930]
[235.35571289 -163.43782043]
[230.25692749 -145.52615356]
[213.40228271 -136.88075256]
[209.35533142 -122.43698883]
[205.30838013 -107.99323273]
[201.26142883 -93.54946899]
[197.21447754 -79.10571289]
[193.16752625 -64.66195679]
[189.12057495 -50.21819305]
[200.23722839 -40.14744568]
[214.21218872 -45.59727478]
[228.18714905 -51.04710388]
[242.16209412 -56.49693298]
[256.13705444 -61.94676208]
[266.18304443 -74.16922760]
[280.85171509 -71.58476257]
[294.82666016 -77.03459167]
[308.80163574 -82.48442078]
[322.77658081 -87.93424988]
[336.75152588 -93.38407898]
[344.48959351 -107.43762207]
[360.32540894 -110.00788116]
[372.11111450 -99.12317657]
[370.80572510 -83.13332367]
[357.41061401 -74.30436707]
[342.20135498 -79.40912628]
[328.22640991 -73.95929718]
[314.25143433 -68.50946808]
[300.27648926 -63.05963898]
[286.30154419 -57.60980988]
[277.25512695 -45.77714920]
[261.58688354 -47.97180557]
[247.61192322 -42.52197647]
[233.63697815 -37.07214737]
[219.66201782 -31.62232018]
[205.68705750 -26.17249107]
[199.46109009 -4.45979404]
[181.75648499 7.10266638]
[162.23199463 4.44384861]
[152.94334412 16.22183990]
[143.65469360 27.99983215]
[134.36605835 39.77782440]
[125.07741547 51.55581665]
[115.78877258 63.33380890]
[106.50012207 75.11180115]
[115.11924744 80.20712280]
[120.88687134 87.99598694]
[123.09349060 97.10366821]
[121.63200378 106.03549957]
[116.97766113 113.42144012]
[110.07564545 118.22621918]
[112.11814880 133.08650208]
[114.16064453 147.94679260]
[116.20314789 162.80708313]
[125.74750519 175.42515564]
[119.81529999 189.08744812]
[121.85780334 203.94773865]
[123.90029907 218.80802917]
[126.05550385 233.65238953]
[128.32328796 248.47996521]
[130.59107971 263.30755615]
[132.85887146 278.13513184]
[141.98513794 284.06015015]
[146.25444031 293.82934570]
[144.47778320 304.11877441]
[137.48011780 311.57025146]
[139.29685974 326.45980835]
[141.11360168 341.34939575]
[142.93034363 356.23898315]
[147.07725525 364.38143921]
[144.65989685 371.36807251]
[146.25047302 386.28350830]
[147.84103394 401.19894409]
[149.43159485 416.11437988]
[151.13529968 431.01730347]
[152.95204163 445.90689087]
[154.76878357 460.79644775]
[169.10530090 466.15582275]
[179.30039978 477.57153320]
[183.01132202 492.42034912]
[179.38529968 507.29016113]
[169.25559998 518.76391602]
[154.94993591 524.20513916]
[139.75563049 522.36334229]
[127.16426086 513.66186523]
[120.06919861 500.10018921]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 197]
[3 196]
[4 195]
[6 194]
[7 193]
[8 192]
[9 191]
[10 189]
[11 188]
[12 187]
[13 186]
[15 182]
[16 181]
[17 180]
[18 179]
[20 178]
[21 177]
[22 176]
[24 174]
[25 173]
[26 172]
[27 171]
[29 85]
[30 84]
[31 83]
[32 82]
[33 81]
[34 80]
[37 78]
[38 77]
[39 76]
[42 75]
[43 74]
[44 73]
[45 72]
[46 71]
[47 69]
[48 68]
[49 67]
[50 66]
[52 63]
[53 62]
[54 61]
[86 165]
[87 164]
[88 163]
[89 162]
[90 161]
[91 160]
[92 159]
[96 129]
[97 128]
[98 127]
[99 126]
[100 125]
[101 124]
[102 123]
[107 120]
[108 119]
[109 118]
[110 117]
[111 116]
[130 156]
[131 155]
[132 154]
[133 153]
[134 152]
[136 150]
[137 149]
[138 148]
[139 147]
[140 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
