%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:12:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCUGCUCCUUGCUAUAGAAGACCUGGGACAGAGGACUGCUGUCUGCCCUCUCUGGUCACCCUGCCUAGCUAGAGGAUCUGUGACCCCAGCCAUGAGGACCCUCGCCAUCCUUGCUGCCAUUCUCCUGGUGGCCCUGCAGGCCCAGGCUGAGCCACUCCAGGCAAGAGCUGAUGAGGUUGCUGCAGCCCCGG\
) } def
/len { sequence length } bind def

/coor [
[90.74655151 205.76472473]
[89.77058411 190.79650879]
[88.79461670 175.82829285]
[87.81864166 160.86007690]
[86.84267426 145.89186096]
[85.86669922 130.92364502]
[73.93550110 121.83262634]
[59.24493408 124.86367798]
[44.55437088 127.89472198]
[29.86380386 130.92578125]
[15.17323685 133.95681763]
[0.53395295 137.22659302]
[-14.05016994 140.73420715]
[-28.63429260 144.24182129]
[-43.21841431 147.74943542]
[-57.74351120 151.49397278]
[-72.20573425 155.47444153]
[-86.66796112 159.45489502]
[-95.02455139 174.81501770]
[-111.57673645 179.29814148]
[-125.96488953 170.60389709]
[-140.36041260 174.81922913]
[-154.75592041 179.03457642]
[-169.15144348 183.24990845]
[-180.22113037 194.55355835]
[-194.60986328 190.70471191]
[-209.00538635 194.92005920]
[-223.40089417 199.13539124]
[-237.79641724 203.35073853]
[-241.51310730 218.18762207]
[-252.08741760 229.10005188]
[-266.60754395 233.22700500]
[-281.14657593 229.55648804]
[-291.82434082 219.17135620]
[-306.21984863 223.38668823]
[-320.61535645 227.60202026]
[-335.01089478 231.81736755]
[-345.93887329 244.04483032]
[-361.93472290 240.43023682]
[-366.54324341 224.69195557]
[-355.02362061 213.02018738]
[-339.22622681 217.42184448]
[-324.83071899 213.20651245]
[-310.43518066 208.99116516]
[-296.03967285 204.77583313]
[-292.65014648 190.27146912]
[-282.38735962 179.33840942]
[-267.93457031 174.98143005]
[-253.14434814 178.46653748]
[-242.01174927 188.95521545]
[-227.61624146 184.73988342]
[-213.22071838 180.52453613]
[-198.82519531 176.30920410]
[-188.78517151 165.30705261]
[-173.36677551 168.85438538]
[-158.97126770 164.63905334]
[-144.57574463 160.42372131]
[-130.18022156 156.20837402]
[-125.63403320 144.14236450]
[-114.80404663 136.79209900]
[-101.52275848 137.02975464]
[-90.64842224 144.99267578]
[-76.18620300 141.01220703]
[-61.72397614 137.03175354]
[-58.62116623 133.38298035]
[-53.18755722 131.65373230]
[-46.72603226 133.16531372]
[-32.14190674 129.65769958]
[-17.55778503 126.15008545]
[-2.97366261 122.64246368]
[0.24626985 119.09662628]
[5.73328686 117.54516602]
[12.14218712 119.26625824]
[26.83275414 116.23520660]
[41.52331924 113.20415497]
[56.21388626 110.17311096]
[70.90444946 107.14205933]
[74.05935669 88.69207001]
[87.04462433 76.72577667]
[103.58071136 75.28211975]
[116.65419769 83.68388367]
[130.17628479 77.19134521]
[143.69837952 70.69880676]
[157.22047424 64.20626831]
[170.74255371 57.71372986]
[184.26464844 51.22119141]
[193.35614014 38.27301788]
[208.17842102 39.73916245]
[221.70050049 33.24662399]
[234.71118164 25.78189278]
[247.14068604 17.38500595]
[259.57015991 8.98811817]
[262.69674683 -6.27170610]
[275.42163086 -14.61028194]
[289.95028687 -11.53552151]
[302.37979126 -19.93240929]
[314.80926514 -28.32929802]
[314.25521851 -42.11046219]
[320.53671265 -54.26754761]
[331.91613770 -61.67081833]
[345.35958862 -62.47416306]
[357.34533691 -56.57437515]
[369.90985107 -64.76783752]
[382.47439575 -72.96129608]
[394.97180176 -81.25674438]
[407.40130615 -89.65363312]
[419.83078003 -98.05052185]
[420.17556763 -114.95414734]
[430.42156982 -128.19354248]
[446.37847900 -132.67745972]
[461.71044922 -126.83108521]
[474.00161743 -135.42916870]
[486.29278564 -144.02726746]
[498.58395386 -152.62535095]
[510.87515259 -161.22343445]
[518.55175781 -179.85226440]
[537.85931396 -180.72784424]
[549.86407471 -189.72145081]
[561.86889648 -198.71505737]
[573.87365723 -207.70866394]
[585.87847900 -216.70227051]
[597.88323975 -225.69587708]
[601.57470703 -241.30847168]
[616.14361572 -248.02609253]
[630.41394043 -240.69558716]
[633.43878174 -224.94026184]
[622.89764404 -212.84626770]
[606.87683105 -213.69108582]
[594.87207031 -204.69747925]
[582.86724854 -195.70387268]
[570.86248779 -186.71026611]
[558.85766602 -177.71665955]
[546.85290527 -168.72305298]
[546.31457520 -158.50042725]
[540.10137939 -150.08996582]
[530.07568359 -146.41987610]
[519.47320557 -148.93226624]
[507.18206787 -140.33418274]
[494.89089966 -131.73609924]
[482.59973145 -123.13800049]
[470.30856323 -114.53990936]
[471.30807495 -101.21823883]
[465.54483032 -89.04629517]
[454.42907715 -81.25269318]
[440.80599976 -79.96300507]
[428.22766113 -85.62103271]
[415.79818726 -77.22414398]
[403.36868286 -68.82725525]
[399.58026123 -62.46810150]
[390.66784668 -60.39677429]
[378.10333252 -52.20331573]
[365.53878784 -44.00985336]
[365.23974609 -27.60375023]
[355.12374878 -14.47382259]
[339.01675415 -9.91013813]
[323.20614624 -15.89980507]
[310.77667236 -7.50291729]
[298.34716797 0.89397043]
[295.77667236 15.52025318]
[283.29101562 24.21295357]
[267.96707153 21.41761017]
[255.53756714 29.81449699]
[243.10807800 38.21138763]
[258.05364990 39.48793030]
[270.00708008 48.54971313]
[275.27270508 62.59510803]
[272.22256470 77.28172302]
[261.79968262 88.06892395]
[247.22648621 91.62163544]
[233.00854492 86.84147644]
[223.54159546 75.20632172]
[221.75251770 60.31339264]
[228.19303894 46.76871490]
[214.67095947 53.26125336]
[206.54664612 65.74504089]
[190.75718689 64.74328613]
[177.23509216 71.23582458]
[163.71301270 77.72836304]
[150.19091797 84.22090149]
[136.66882324 90.71343994]
[123.14673615 97.20597839]
[120.17620850 117.39114380]
[100.83491516 129.94766235]
[101.81089020 144.91587830]
[102.78685760 159.88409424]
[103.76282501 174.85231018]
[104.73880005 189.82052612]
[105.71476746 204.78874207]
[116.77603912 216.40888977]
[114.44497681 232.28169250]
[100.50977325 240.23088074]
[85.66032410 234.15853882]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 188]
[2 187]
[3 186]
[4 185]
[5 184]
[6 183]
[7 77]
[8 76]
[9 75]
[10 74]
[11 73]
[12 70]
[13 69]
[14 68]
[15 67]
[16 64]
[17 63]
[18 62]
[21 58]
[22 57]
[23 56]
[24 55]
[26 53]
[27 52]
[28 51]
[29 50]
[34 45]
[35 44]
[36 43]
[37 42]
[81 181]
[82 180]
[83 179]
[84 178]
[85 177]
[86 176]
[88 174]
[89 173]
[90 163]
[91 162]
[92 161]
[95 158]
[96 157]
[97 156]
[102 152]
[103 151]
[104 150]
[105 148]
[106 147]
[107 146]
[111 141]
[112 140]
[113 139]
[114 138]
[115 137]
[117 133]
[118 132]
[119 131]
[120 130]
[121 129]
[122 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
