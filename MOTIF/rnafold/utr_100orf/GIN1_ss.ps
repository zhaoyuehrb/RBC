%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:41:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCCGCUUCCGGCAGCGCGAGAUAAAUCACGAGAGGAAGCUUAAAUCUGUCGUUUGAAUUUAGGACCACCUCGGUUCACAAUGGUCCGUAGUGGAAAAAAUGGUGACCUUCAUCUUAAACAGAUUGCAUAUUACAAACGAACUGGUGAAUAUCAUUCAACUACACUGCCAAGUGAGAGAA\
) } def
/len { sequence length } bind def

/coor [
[-4.98574352 264.69442749]
[-11.00906658 275.52856445]
[-20.05447197 283.96856689]
[-31.23493767 289.20733643]
[-43.46038437 290.75076294]
[-55.54394531 288.46417236]
[-66.31719208 282.58398438]
[-77.49876404 292.58261108]
[-88.68032837 302.58123779]
[-99.86190033 312.57986450]
[-111.04346466 322.57849121]
[-122.22503662 332.57711792]
[-119.32892609 344.76693726]
[-121.88536835 356.95864868]
[-129.34722900 366.84289551]
[-140.24423218 372.57424927]
[-152.47229004 373.11563110]
[-163.69975281 368.42538452]
[-175.21795654 378.03427124]
[-180.85838318 392.81588745]
[-195.58786011 395.02755737]
[-207.10606384 404.63647461]
[-208.27874756 420.39718628]
[-220.30683899 430.64904785]
[-236.05427551 429.30981445]
[-246.17840576 417.17401123]
[-244.67274475 401.44158936]
[-232.43057251 391.44635010]
[-216.71496582 393.11825562]
[-205.19676208 383.50936890]
[-200.38020325 369.41503906]
[-184.82685852 366.51605225]
[-173.30865479 356.90716553]
[-175.31791687 339.38168335]
[-166.34208679 324.01367188]
[-149.80114746 317.03167725]
[-132.22366333 321.39553833]
[-121.04209137 311.39691162]
[-109.86052704 301.39828491]
[-98.67895508 291.39965820]
[-87.49739075 281.40103149]
[-76.31581879 271.40240479]
[-81.85047150 254.62530518]
[-79.49922180 237.06271362]
[-69.68807220 222.24415588]
[-54.34687424 213.16801453]
[-36.52989197 211.69482422]
[-19.80776978 218.16610718]
[-9.15574455 207.60511780]
[1.49628043 197.04414368]
[5.08679533 182.58877563]
[20.33434677 178.36708069]
[30.98637199 167.80609131]
[41.63839722 157.24511719]
[52.29042435 146.68412781]
[62.94244766 136.12315369]
[73.59447479 125.56216431]
[84.24649811 115.00118256]
[70.99917603 122.03740692]
[56.45340347 118.37400818]
[48.11919785 105.90239716]
[50.29952240 91.06170654]
[61.86867523 81.51420593]
[76.85347748 82.18930054]
[87.51808167 92.74030304]
[80.35504150 79.56111908]
[73.19200134 66.38193512]
[66.02896881 53.20275116]
[58.86592865 40.02356720]
[51.70288849 26.84438324]
[36.52482224 28.08781052]
[22.15536690 23.04413223]
[11.08412266 12.58720112]
[5.22924709 -1.47126031]
[5.60513449 -16.69553757]
[12.14665890 -30.44793129]
[23.72046280 -40.34575653]
[38.32131195 -44.67415619]
[53.41952515 -42.68320847]
[66.39924622 -34.71785736]
[75.01165009 -22.15814781]
[77.76459503 -7.18012524]
[74.18112183 7.62117767]
[64.88207245 19.68134499]
[72.04511261 32.86052704]
[79.20815277 46.03971100]
[86.37118530 59.21889496]
[93.53422546 72.39807892]
[100.69726562 85.57726288]
[114.44201660 91.58406830]
[128.97969055 87.88865662]
[143.51736450 84.19323730]
[158.05503845 80.49781799]
[172.59269714 76.80239868]
[187.13037109 73.10697937]
[190.22717285 57.14568329]
[199.93498230 44.17554855]
[214.27287292 36.75864410]
[230.35174561 36.33243942]
[244.95646667 42.93147278]
[255.18875122 55.19057846]
[269.66082764 51.24614334]
[284.13293457 47.30171204]
[298.60501099 43.35728073]
[313.07711792 39.41284561]
[327.54919434 35.46841431]
[342.02130127 31.52397919]
[345.72836304 27.77876091]
[350.06997681 26.02272415]
[354.17575073 26.16229248]
[357.34039307 27.76961517]
[371.99633789 24.57541656]
[386.65231323 21.38121986]
[401.30825806 18.18702126]
[415.96423340 14.99282360]
[430.62017822 11.79862595]
[430.43594360 -3.25298333]
[433.28567505 -18.03350639]
[439.05270386 -31.93768883]
[447.50085449 -44.39616394]
[458.28417969 -54.89876556]
[470.96115112 -63.01541901]
[485.01257324 -68.41374969]
[499.86309814 -70.87270355]
[514.90460205 -70.29158020]
[529.52117920 -66.69419098]
[543.11425781 -60.22782898]
[555.12713623 -51.15729904]
[565.06805420 -39.85403061]
[572.52978516 -26.78088570]
[577.20684814 -12.47320175]
[578.90771484 2.48313165]
[577.56274414 17.47566032]
[573.22705078 31.89045143]
[566.07806396 45.13722992]
[556.40863037 56.67354202]
[544.61462402 66.02699280]
[531.17907715 72.81455231]
[516.65216064 76.75828552]
[501.62869263 77.69669342]
[486.72390747 75.59134674]
[472.54815674 70.52845764]
[459.68191528 62.71535873]
[448.65203857 52.47198486]
[439.91018677 40.21779251]
[433.81436157 26.45458412]
[419.15841675 29.64878082]
[404.50247192 32.84297943]
[389.84649658 36.03717804]
[375.19055176 39.23137665]
[360.53457642 42.42557144]
[345.96572876 45.99607086]
[331.49365234 49.94050598]
[317.02154541 53.88493729]
[302.54943848 57.82937241]
[288.07736206 61.77380371]
[273.60525513 65.71823883]
[259.13317871 69.66267395]
[257.28274536 83.42505646]
[250.30064392 95.47841644]
[239.21420288 103.98332977]
[225.67991638 107.62734222]
[211.73599243 105.82743073]
[199.49542236 98.82299805]
[190.82579041 87.64464569]
[176.28811646 91.34006500]
[161.75045776 95.03548431]
[147.21278381 98.73090363]
[132.67510986 102.42632294]
[118.13743591 106.12174225]
[94.80747986 125.65320587]
[84.15545654 136.21418762]
[73.50343323 146.77517700]
[62.85140610 157.33615112]
[52.19937897 167.89714050]
[41.54735565 178.45811462]
[30.89533043 189.01910400]
[26.54291153 204.22985840]
[12.05726337 207.69616699]
[1.40523803 218.25714111]
[-9.24678707 228.81813049]
[-4.04410601 240.15026855]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 42]
[8 41]
[9 40]
[10 39]
[11 38]
[12 37]
[18 33]
[19 32]
[21 30]
[22 29]
[48 181]
[49 180]
[50 179]
[52 177]
[53 176]
[54 175]
[55 174]
[56 173]
[57 172]
[58 171]
[65 89]
[66 88]
[67 87]
[68 86]
[69 85]
[70 84]
[90 170]
[91 169]
[92 168]
[93 167]
[94 166]
[95 165]
[101 158]
[102 157]
[103 156]
[104 155]
[105 154]
[106 153]
[107 152]
[111 151]
[112 150]
[113 149]
[114 148]
[115 147]
[116 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
