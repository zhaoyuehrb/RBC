%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:55:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCUCAAGUCAGAUCUCUUCUCAUAAGGGCACUGUGUGGAGCUUCUGAGAUCUGUGGAGGUUUUUCUCUGCAAAUGCAGGAAGAAAUCAGGUGGAUGGAUGCAUAAUUAUGGCCCUGCUCCUGGUCUCUUUGCUGGCAUUCCUGAGCUUGGGCUCAGGAUGUCAUCAUCGGAUCUGUCACUGCUCUAACAGGGUUUUUCUCUGCCAAG\
) } def
/len { sequence length } bind def

/coor [
[-7.75108433 405.18014526]
[-15.21598816 404.45544434]
[-22.48921776 417.57412720]
[-29.76244736 430.69281006]
[-37.03567505 443.81152344]
[-44.30890656 456.93020630]
[-40.71237946 467.19537354]
[-43.30563354 477.53247070]
[-50.99831009 484.58731079]
[-61.08716202 486.20843506]
[-68.74775696 499.10476685]
[-69.14341736 514.92102051]
[-82.29549408 521.91186523]
[-89.95609283 534.80822754]
[-97.61669159 547.70452881]
[-95.06635284 563.54357910]
[-105.96587372 575.31555176]
[-121.95407867 573.99005127]
[-130.76617432 560.58386230]
[-125.64228821 545.38104248]
[-110.51301575 540.04394531]
[-102.85242462 527.14758301]
[-95.19182587 514.25128174]
[-95.34410858 499.35745239]
[-81.64408875 491.44418335]
[-73.98348999 478.54785156]
[-75.15853119 459.24740601]
[-57.42760086 449.65698242]
[-50.15436935 436.53829956]
[-42.88114166 423.41958618]
[-35.60791016 410.30090332]
[-28.33468246 397.18218994]
[-6.26874161 380.02218628]
[13.78177547 384.21096802]
[17.32144737 369.63461304]
[20.86112022 355.05822754]
[24.40079308 340.48184204]
[22.92448425 333.24014282]
[28.10319710 325.71560669]
[31.85949707 311.19354248]
[35.61579895 296.67147827]
[39.37209702 282.14941406]
[43.12839890 267.62738037]
[46.88470078 253.10531616]
[34.48711014 243.02313232]
[27.70274925 228.49087524]
[27.93585014 212.39649963]
[35.19049072 197.96284485]
[48.05961990 188.10235596]
[63.99768066 184.82940674]
[67.53735352 170.25303650]
[71.07702637 155.67666626]
[74.61669922 141.10028076]
[78.15637207 126.52391052]
[81.69604492 111.94753265]
[74.61893463 98.72200775]
[60.52779770 93.58004761]
[46.43665695 88.43808746]
[32.34551620 83.29612732]
[18.25437355 78.15416718]
[4.16323280 73.01220703]
[-9.92790794 67.87024689]
[-25.97795296 71.23596954]
[-36.71471405 58.84024429]
[-31.09313011 43.43473053]
[-14.89620590 40.86730194]
[-4.78594828 53.77910614]
[9.30519295 58.92106628]
[23.39633369 64.06302643]
[37.48747253 69.20498657]
[51.57861328 74.34694672]
[65.66975403 79.48890686]
[79.76089478 84.63086700]
[85.96964264 80.42355347]
[77.55522156 68.00592804]
[89.97297668 59.59169388]
[98.38713837 72.00893402]
[104.59588623 67.80162811]
[105.04249573 52.80827713]
[105.48909760 37.81492615]
[102.69673157 31.82208252]
[103.26476288 26.16749382]
[106.17882538 22.38367844]
[107.07164764 7.41027308]
[107.96446228 -7.56313276]
[108.85727692 -22.53653908]
[101.95509338 -36.77277756]
[110.43621826 -49.01695251]
[111.32903290 -63.99035645]
[112.22184753 -78.96376038]
[113.11466217 -93.93717194]
[114.00748444 -108.91057587]
[114.90029907 -123.88397980]
[112.28722382 -132.63667297]
[115.91950989 -139.07315063]
[117.03515625 -154.03161621]
[106.99882507 -165.94419861]
[108.34333801 -181.09829712]
[119.76202393 -190.59300232]
[120.87767029 -205.55145264]
[110.97195435 -214.67785645]
[108.17201996 -227.65364075]
[113.28103638 -239.69441223]
[124.22752380 -246.49176025]
[125.56575775 -261.43194580]
[126.90399170 -276.37213135]
[119.51705933 -291.01333618]
[128.72837830 -304.58108521]
[145.06213379 -303.11804199]
[151.71556091 -288.12924194]
[141.84417725 -275.03390503]
[140.50595093 -260.09371948]
[139.16770935 -245.15351868]
[150.49291992 -232.72056580]
[149.29840088 -215.60658264]
[135.83612061 -204.43580627]
[134.72047424 -189.47735596]
[144.60437012 -178.39384460]
[143.68603516 -163.20794678]
[131.99360657 -152.91595459]
[130.87796021 -137.95750427]
[129.87370300 -122.99116516]
[128.98088074 -108.01776123]
[128.08807373 -93.04434967]
[127.19525909 -78.07094574]
[126.30243683 -63.09754181]
[125.40962219 -48.12413406]
[132.37567139 -34.95889664]
[123.83068085 -21.64372253]
[122.93786621 -6.67031670]
[122.04505157 8.30308914]
[121.15223694 23.27649498]
[120.48245239 38.26153183]
[120.03584290 53.25488281]
[119.58924103 68.24822998]
[131.13554382 77.82335663]
[145.78732300 74.61007690]
[160.43911743 71.39680481]
[175.09089661 68.18353271]
[189.74269104 64.97026062]
[204.39447021 61.75698471]
[212.10652161 56.86187744]
[219.28828430 58.60665512]
[233.98628235 55.61188126]
[248.68428040 52.61710739]
[263.38229370 49.62233353]
[278.08029175 46.62755966]
[292.77828979 43.63278580]
[307.47628784 40.63801193]
[319.39004517 29.36882401]
[335.02691650 34.31052017]
[338.30105591 50.37950134]
[325.84426880 61.04537964]
[310.47106934 55.33601379]
[295.77307129 58.33078766]
[281.07507324 61.32556534]
[266.37707520 64.32033539]
[251.67906189 67.31510925]
[236.98106384 70.30988312]
[222.28305054 73.30466461]
[207.60774231 76.40876770]
[192.95596313 79.62204742]
[178.30416870 82.83531952]
[163.65238953 86.04859161]
[149.00059509 89.26186371]
[134.34881592 92.47514343]
[131.72236633 103.87155914]
[125.78181458 112.72716522]
[117.87767792 118.24853516]
[109.47585297 120.23162842]
[101.92772675 119.03778076]
[96.27241516 115.48720551]
[92.73274231 130.06358337]
[89.19306946 144.63995361]
[85.65340424 159.21633911]
[82.11373138 173.79270935]
[78.57405853 188.36907959]
[89.83523560 196.90913391]
[96.96929932 209.05941772]
[98.92761230 222.96878052]
[95.44720459 236.53260803]
[87.08554077 247.71124268]
[75.13148499 254.83673096]
[61.40676117 256.86160278]
[57.65045929 271.38366699]
[53.89415741 285.90573120]
[50.13785553 300.42779541]
[46.38155746 314.94985962]
[42.62525558 329.47189331]
[38.97716904 344.02151489]
[35.43749619 358.59790039]
[31.89782333 373.17428589]
[28.35815048 387.75064087]
[28.91636276 402.74026489]
[33.53037262 417.01300049]
[38.14438248 431.28573608]
[52.93608856 435.97454834]
[62.11970139 448.48217773]
[62.16393280 463.99917603]
[53.05177307 476.55895996]
[38.28703308 481.33203125]
[23.54706001 476.48303223]
[14.49967098 463.87652588]
[14.62377357 448.35992432]
[23.87164688 435.89974976]
[19.25763893 421.62701416]
[14.64362907 407.35427856]
[7.17872429 406.62954712]
[10.41378593 421.27655029]
[-2.51665449 428.87942505]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 32]
[3 31]
[4 30]
[5 29]
[6 28]
[10 26]
[11 25]
[13 23]
[14 22]
[15 21]
[34 193]
[35 192]
[36 191]
[37 190]
[39 189]
[40 188]
[41 187]
[42 186]
[43 185]
[44 184]
[50 177]
[51 176]
[52 175]
[53 174]
[54 173]
[55 172]
[56 73]
[57 72]
[58 71]
[59 70]
[60 69]
[61 68]
[62 67]
[78 135]
[79 134]
[80 133]
[83 132]
[84 131]
[85 130]
[86 129]
[88 127]
[89 126]
[90 125]
[91 124]
[92 123]
[93 122]
[95 121]
[96 120]
[99 117]
[100 116]
[104 113]
[105 112]
[106 111]
[136 166]
[137 165]
[138 164]
[139 163]
[140 162]
[141 161]
[143 160]
[144 159]
[145 158]
[146 157]
[147 156]
[148 155]
[149 154]
[194 207]
[195 206]
[196 205]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
