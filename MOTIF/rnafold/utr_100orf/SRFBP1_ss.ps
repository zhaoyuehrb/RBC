%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:26:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGGCGACGCAGCCGCGGUCUGAGAGACCGGUUCACGUGCAGGCAGCGGCGGAUCAUAUUCCUUCAUCUACCAUGGCUCAGCCGGGAACUCUGAACCUCAAUAACGAGGUUGUGAAGAUGAGAAAAGAAGUGAAGAGAAUUCGAGUUUUAGUUAUCCGAAAACUUGUCAGGA\
) } def
/len { sequence length } bind def

/coor [
[99.91094208 138.23684692]
[96.93451691 152.93856812]
[93.95808411 167.64030457]
[99.68663025 183.00636292]
[89.03630066 195.47642517]
[72.96324921 192.22236633]
[68.00204468 176.59167480]
[79.25635529 164.66386414]
[82.23278046 149.96214294]
[85.20921326 135.26040649]
[65.09373474 124.15159607]
[53.37475967 101.72217560]
[39.83500290 108.17779541]
[26.29524803 114.63341522]
[12.75549221 121.08902740]
[-0.78426433 127.54464722]
[-9.91105938 140.46797180]
[-24.72927284 138.96138000]
[-38.26902771 145.41700745]
[-51.80878448 151.87261963]
[-65.34854126 158.32823181]
[-78.88829803 164.78385925]
[-79.34803009 174.55546570]
[-83.33018494 183.42707825]
[-90.24283600 190.18374634]
[-99.09601593 193.91729736]
[-108.64340210 194.14825439]
[-117.55770874 190.88706970]
[-124.61523438 184.62663269]
[-138.58779907 190.08259583]
[-146.31968689 204.13952637]
[-162.15437317 206.71673584]
[-173.94485474 195.83720398]
[-172.64646912 179.84678650]
[-159.25523376 171.01194763]
[-144.04374695 176.11003113]
[-130.07118225 170.65408325]
[-123.53079987 151.32055664]
[-104.61346436 142.91246033]
[-85.34391785 151.24409485]
[-71.80416107 144.78848267]
[-58.26440430 138.33287048]
[-44.72464752 131.87724304]
[-31.18489075 125.42163086]
[-23.02655029 112.96006012]
[-7.23988199 114.00489044]
[6.29987431 107.54927826]
[19.83963013 101.09365845]
[33.37938690 94.63803864]
[46.91914368 88.18241882]
[47.19152069 73.18489838]
[33.89510345 66.24188995]
[20.59868622 59.29888916]
[5.59684801 64.27085114]
[-8.48907185 57.10409546]
[-13.30214787 42.05052948]
[-5.98686647 28.04116821]
[9.11674500 23.38751602]
[23.04798126 30.85050392]
[27.54168892 46.00247192]
[40.83810425 52.94547653]
[54.13452530 59.88847733]
[67.73233795 53.55606079]
[70.97523499 38.91080475]
[74.21813965 24.26554489]
[77.46103668 9.62028694]
[80.70394135 -5.02497196]
[83.94683838 -19.67023087]
[87.18974304 -34.31549072]
[68.10940552 -35.36082840]
[51.07636261 -53.17132187]
[46.77914429 -67.54261017]
[41.30359268 -74.89963531]
[42.53693008 -82.21399689]
[38.50138474 -96.66094208]
[34.46583939 -111.10789490]
[30.43029213 -125.55484772]
[20.34557724 -139.18330383]
[30.64970207 -152.64663696]
[46.43935013 -146.47221375]
[44.87724304 -129.59039307]
[48.91278839 -115.14344025]
[52.94833374 -100.69648743]
[56.98387909 -86.24954224]
[61.15043259 -71.83982849]
[65.44764709 -57.46854019]
[72.86864471 -56.38279724]
[82.16995239 -68.15078735]
[87.71063232 -54.21131516]
[95.13162994 -53.12557602]
[103.36582947 -65.66342926]
[100.37104034 -80.94966888]
[108.90029907 -93.54753876]
[123.49184418 -96.30841827]
[131.72604370 -108.84627533]
[139.96025085 -121.38413239]
[148.19445801 -133.92198181]
[156.42864990 -146.45985413]
[164.66285706 -158.99771118]
[161.21153259 -174.42054749]
[169.74710083 -187.72164917]
[185.20555115 -191.00973511]
[198.41567993 -182.33401489]
[201.54014587 -166.84165955]
[192.72525024 -153.72398376]
[177.20071411 -150.76350403]
[168.96652222 -138.22564697]
[160.73231506 -125.68778229]
[152.49810791 -113.14992523]
[144.26390076 -100.61206818]
[136.02969360 -88.07421112]
[139.29351807 -73.58686829]
[131.12147522 -60.75439835]
[115.90369415 -57.42922974]
[107.66948700 -44.89136887]
[101.83499908 -31.07258797]
[98.59209442 -16.42733002]
[95.34919739 -1.78207135]
[92.10629272 12.86318684]
[88.86339569 27.50844574]
[85.62049866 42.15370560]
[82.37759399 56.79896164]
[94.98246002 54.55467987]
[107.46158600 55.84004211]
[118.86524963 60.41522598]
[128.36453247 67.79548645]
[135.31143188 77.29853821]
[139.28239441 88.10572815]
[140.10250854 99.33166504]
[137.84901428 110.09642029]
[132.83474731 119.59448242]
[143.95758057 129.65840149]
[155.08041382 139.72232056]
[170.50473022 143.24386597]
[174.75111389 157.52032471]
[185.87394714 167.58424377]
[196.99679565 177.64816284]
[212.56170654 177.03913879]
[223.69848633 187.40382385]
[224.18318176 202.24635315]
[235.30601501 212.31027222]
[246.42886353 222.37419128]
[257.55169678 232.43811035]
[272.97601318 235.95965576]
[277.22238159 250.23611450]
[288.34524536 260.30004883]
[303.81005859 257.98211670]
[317.11968994 266.19113159]
[321.98968506 281.05105591]
[316.12060547 295.54547119]
[302.28366089 302.83056641]
[287.01220703 299.46652222]
[277.51696777 287.04177856]
[278.28131104 271.42288208]
[267.15847778 261.35894775]
[252.52973938 258.55725098]
[247.48777771 243.56095886]
[236.36494446 233.49703979]
[225.24209595 223.43312073]
[214.11926270 213.36920166]
[199.30236816 214.36688232]
[187.87887573 204.31907654]
[186.93287659 188.77099609]
[175.81002808 178.70707703]
[164.68719482 168.64315796]
[150.05845642 165.84146118]
[145.01649475 150.84515381]
[133.89366150 140.78123474]
[122.77082062 130.71731567]
[118.66184235 133.37362671]
[114.24729919 135.48348999]
[109.59947205 137.01234436]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 10]
[2 9]
[3 8]
[12 50]
[13 49]
[14 48]
[15 47]
[16 46]
[18 44]
[19 43]
[20 42]
[21 41]
[22 40]
[29 37]
[30 36]
[51 62]
[52 61]
[53 60]
[63 122]
[64 121]
[65 120]
[66 119]
[67 118]
[68 117]
[69 116]
[71 86]
[72 85]
[74 84]
[75 83]
[76 82]
[77 81]
[90 115]
[91 114]
[94 111]
[95 110]
[96 109]
[97 108]
[98 107]
[99 106]
[131 169]
[132 168]
[133 167]
[135 165]
[136 164]
[137 163]
[140 160]
[141 159]
[142 158]
[143 157]
[145 155]
[146 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
