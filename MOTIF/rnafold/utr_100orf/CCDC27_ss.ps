%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:05:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCCACCACUGCUCCCAGGAGCCCACAGGACCUGGAGCUCUGGAAGCUGAUCUCCUCCCACUGCACCAGCCAGCAGGUUCAUGUUCGAGGCCAUCUUCCCCUCCACACCCCAAGCCAGGCUGAAGAGAGAUCCACGGGAAAAGCCGGGCCUGUCCUCAUUCAGGUCCACAUUCAGGCAAC\
) } def
/len { sequence length } bind def

/coor [
[92.86121368 221.70263672]
[101.28328705 207.63136292]
[101.02437592 192.63360596]
[100.76547241 177.63583374]
[100.50656128 162.63807678]
[80.64192963 151.80305481]
[68.25393677 135.95394897]
[56.68964005 145.50732422]
[45.12534332 155.06069946]
[43.48087692 170.55049133]
[31.61694336 180.07423401]
[16.85993385 178.41102600]
[5.29563570 187.96440125]
[-6.26866150 197.51777649]
[-17.83296013 207.07115173]
[-29.39725685 216.62454224]
[-34.03599167 224.52424622]
[-41.24460602 226.24092102]
[-52.97207642 235.59327698]
[-64.69954681 244.94561768]
[-66.92291260 257.66790771]
[-76.90506744 265.21478271]
[-88.95346832 263.96743774]
[-100.84062195 273.11596680]
[-106.59089661 288.47390747]
[-122.80873871 290.90573120]
[-132.81060791 277.90979004]
[-126.30744934 262.85519409]
[-109.98915100 261.22882080]
[-98.10199738 252.08029175]
[-92.30869293 235.52680969]
[-74.05189514 233.21813965]
[-62.32442474 223.86579895]
[-50.59695435 214.51345825]
[-38.95063400 205.06024170]
[-27.38633728 195.50686646]
[-15.82203960 185.95347595]
[-4.25774145 176.40010071]
[7.30655622 166.84672546]
[8.45844555 152.04103088]
[20.05019569 142.18780518]
[35.57196426 143.49639893]
[47.13626480 133.94302368]
[58.70056152 124.38964844]
[53.05089188 109.81222534]
[52.38940048 94.19229889]
[56.78636932 79.18941498]
[65.77463531 66.39757538]
[78.39922333 57.17588425]
[93.31881714 52.50410080]
[93.57772064 37.50633621]
[93.83663177 22.50857162]
[94.09554291 7.51080656]
[94.35445404 -7.48695898]
[94.61336517 -22.48472404]
[94.74282074 -37.48416519]
[94.74282074 -52.48416519]
[84.96296692 -41.11075974]
[70.91803741 -35.84387207]
[56.07123947 -37.98221588]
[44.08348083 -46.99851227]
[37.91070175 -60.66953278]
[39.07498550 -75.62428284]
[47.28923798 -88.17521667]
[60.52799988 -95.22753906]
[75.52685547 -95.04228973]
[88.58739471 -87.66514587]
[96.48879242 -74.91632080]
[98.80973053 -89.73567200]
[101.13066864 -104.55503082]
[103.45161438 -119.37438202]
[105.77255249 -134.19374084]
[98.74124908 -151.19966125]
[110.25662994 -164.42750549]
[112.32143402 -179.28471375]
[104.99764252 -196.16673279]
[116.28298950 -209.59136963]
[118.09103394 -224.48199463]
[109.05642700 -232.25682068]
[104.95019531 -243.31864929]
[106.68772888 -254.86801147]
[113.72087860 -264.04144287]
[124.20326233 -268.62145996]
[126.52420044 -283.44082642]
[128.84513855 -298.26016235]
[121.88410187 -309.13876343]
[124.13922882 -321.44784546]
[133.86146545 -328.67263794]
[136.43785095 -343.44973755]
[139.01423645 -358.22680664]
[141.59062195 -373.00390625]
[130.16838074 -383.37384033]
[126.18787384 -398.27886963]
[130.91926575 -412.96276855]
[142.85278320 -422.74002075]
[158.18049622 -424.49072266]
[172.01136780 -417.65621948]
[179.93203735 -404.41738892]
[179.41503906 -388.99868774]
[170.62533569 -376.32019043]
[156.36770630 -370.42752075]
[153.79132080 -355.65042114]
[151.21493530 -340.87335205]
[148.63854980 -326.09625244]
[155.55838013 -309.98117065]
[143.66448975 -295.93923950]
[141.34355164 -281.11987305]
[139.02261353 -266.30053711]
[150.68064880 -252.21080017]
[148.32339478 -233.75460815]
[132.98167419 -222.67395020]
[131.17361450 -207.78330994]
[138.39047241 -198.05517578]
[136.98876953 -185.61997986]
[127.17863464 -177.21990967]
[125.11383820 -162.36270142]
[132.16169739 -152.51144409]
[130.54556274 -140.10229492]
[120.59190369 -131.87278748]
[118.27096558 -117.05344391]
[115.95002747 -102.23408508]
[113.62908173 -87.41473389]
[111.30814362 -72.59538269]
[115.26731873 -62.89416504]
[109.74282074 -52.48416519]
[109.74282074 -37.48416519]
[112.89516449 -30.77791214]
[109.61112976 -22.22581482]
[109.35221863 -7.22804928]
[109.09330750 7.76971626]
[108.83439636 22.76748085]
[108.57549286 37.76524734]
[108.31658173 52.76301193]
[127.63397217 56.38468552]
[145.15072632 68.06721497]
[157.48323059 86.83742523]
[161.78552246 110.31185150]
[176.56260681 112.88823700]
[189.34553528 103.59456635]
[204.94277954 106.14433289]
[214.10078430 119.02481079]
[211.38626099 134.59422302]
[198.40968323 143.61553955]
[182.86982727 140.73655701]
[173.98622131 127.66532135]
[159.20913696 125.08893585]
[152.70088196 138.60346985]
[163.92854309 148.55030823]
[175.15620422 158.49714661]
[186.38386536 168.44398499]
[197.61152649 178.39082336]
[208.83918762 188.33766174]
[220.06684875 198.28450012]
[235.18872070 194.80479431]
[249.45469666 200.90904236]
[257.37918091 214.25003052]
[255.91508484 229.69787598]
[245.62536621 241.31257629]
[230.46662903 244.62803650]
[216.26771545 238.36938477]
[208.48840332 224.94322205]
[210.12001038 209.51216125]
[198.89234924 199.56532288]
[187.66468811 189.61848450]
[176.43702698 179.67164612]
[165.20936584 169.72480774]
[153.98170471 159.77796936]
[142.75404358 149.83113098]
[135.94160461 152.96813965]
[142.21562195 166.59298706]
[152.39286804 177.61224365]
[145.05786133 190.69648743]
[130.34735107 187.76371765]
[128.59077454 172.86700439]
[122.31674957 159.24215698]
[115.50432587 162.37916565]
[115.76323700 177.37692261]
[116.02214050 192.37469482]
[116.28105164 207.37245178]
[125.18379974 221.14465332]
[117.46829224 235.61541748]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 179]
[3 178]
[4 177]
[5 176]
[7 44]
[8 43]
[9 42]
[12 39]
[13 38]
[14 37]
[15 36]
[16 35]
[18 34]
[19 33]
[20 32]
[23 30]
[24 29]
[50 133]
[51 132]
[52 131]
[53 130]
[54 129]
[55 128]
[56 126]
[57 125]
[68 123]
[69 122]
[70 121]
[71 120]
[72 119]
[74 116]
[75 115]
[77 112]
[78 111]
[83 108]
[84 107]
[85 106]
[88 104]
[89 103]
[90 102]
[91 101]
[137 146]
[138 145]
[147 168]
[148 167]
[149 166]
[150 165]
[151 164]
[152 163]
[153 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
