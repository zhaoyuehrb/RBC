%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:56:56 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (LIPT2)
} def

/sequence { (\
GGUGGGCACGAUGCGGCAACCCGCCGUUCGGUUGGUGCGCCUGGGUCGGGUGCCGUACGCCGAGCUACUGGGGCUGCAGGACCGCUGGCUGCGGCGGCUGCAGGCCGAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 21 0.009154137 ubox
1 22 0.004504764 ubox
1 25 0.955691494 ubox
1 41 0.147306772 ubox
1 61 0.104831994 ubox
1 66 0.183912994 ubox
1 69 0.038839697 ubox
2 9 0.003654651 ubox
2 20 0.009224860 ubox
2 21 0.004413824 ubox
2 24 0.956410701 ubox
2 40 0.147559329 ubox
2 58 0.014582070 ubox
2 60 0.104900738 ubox
2 65 0.194721185 ubox
2 68 0.044509464 ubox
3 8 0.003426944 ubox
3 10 0.003657529 ubox
3 19 0.008845300 ubox
3 23 0.956034176 ubox
3 39 0.147480673 ubox
3 57 0.014741360 ubox
3 59 0.104544595 ubox
3 62 0.017271894 ubox
3 64 0.192987585 ubox
3 67 0.045618574 ubox
4 9 0.005380434 ubox
4 17 0.003950661 ubox
4 21 0.020538154 ubox
4 22 0.956155836 ubox
4 38 0.147230258 ubox
4 41 0.010597376 ubox
4 42 0.003543906 ubox
4 56 0.014635088 ubox
4 58 0.103758868 ubox
4 61 0.026260654 ubox
4 66 0.040895950 ubox
5 20 0.028796276 ubox
5 21 0.955874838 ubox
5 33 0.011631734 ubox
5 40 0.010606135 ubox
5 41 0.004251204 ubox
5 54 0.096982789 ubox
5 60 0.025756522 ubox
5 61 0.202997452 ubox
5 65 0.034656949 ubox
5 66 0.083822107 ubox
6 14 0.083227526 ubox
6 17 0.275567492 ubox
6 20 0.910314554 ubox
6 32 0.012933491 ubox
6 36 0.146377722 ubox
6 38 0.013792516 ubox
6 40 0.004252583 ubox
6 53 0.097074253 ubox
6 56 0.006549511 ubox
6 60 0.203271052 ubox
6 65 0.088824938 ubox
7 13 0.111828558 ubox
7 16 0.373823067 ubox
7 31 0.013341349 ubox
7 34 0.019576223 ubox
7 35 0.145155929 ubox
7 37 0.014032952 ubox
7 39 0.004218225 ubox
7 52 0.097062806 ubox
7 55 0.007783380 ubox
7 59 0.193350194 ubox
7 64 0.091157569 ubox
8 12 0.090706800 ubox
8 32 0.042106033 ubox
8 33 0.023425703 ubox
8 36 0.013887047 ubox
8 51 0.094147302 ubox
9 15 0.806281243 ubox
9 26 0.003239944 ubox
9 30 0.050776585 ubox
9 31 0.042603215 ubox
9 34 0.130548970 ubox
9 35 0.011440266 ubox
9 48 0.062004889 ubox
9 50 0.073993290 ubox
9 59 0.077699354 ubox
9 62 0.087423325 ubox
10 14 0.755507750 ubox
10 25 0.003696454 ubox
10 29 0.054970494 ubox
10 33 0.131174711 ubox
10 47 0.096419509 ubox
10 58 0.158469324 ubox
10 61 0.087461995 ubox
11 28 0.052547459 ubox
11 32 0.130930070 ubox
11 46 0.096811003 ubox
12 18 0.052369880 ubox
12 30 0.013143061 ubox
12 31 0.129122985 ubox
12 45 0.096485820 ubox
12 57 0.221991400 ubox
12 59 0.010433571 ubox
13 17 0.053133027 ubox
13 24 0.013736063 ubox
13 27 0.146788244 ubox
13 29 0.011847286 ubox
13 38 0.005701119 ubox
13 46 0.004446186 ubox
13 56 0.229943769 ubox
13 58 0.007394371 ubox
14 23 0.013953498 ubox
14 26 0.148765703 ubox
14 37 0.005707262 ubox
14 43 0.096169305 ubox
14 45 0.004664097 ubox
14 55 0.230403834 ubox
15 21 0.005415927 ubox
15 22 0.014057286 ubox
15 25 0.149577587 ubox
15 36 0.005698339 ubox
15 41 0.093711950 ubox
15 42 0.024771172 ubox
15 54 0.230459148 ubox
16 20 0.007208576 ubox
16 21 0.013895078 ubox
16 24 0.149581852 ubox
16 38 0.005979605 ubox
16 40 0.095047363 ubox
16 41 0.018551484 ubox
16 53 0.230461961 ubox
17 23 0.149486051 ubox
17 34 0.005818591 ubox
17 37 0.006950588 ubox
17 39 0.096195424 ubox
17 52 0.230292730 ubox
18 33 0.005837263 ubox
18 36 0.005127395 ubox
18 51 0.162458807 ubox
19 32 0.005836534 ubox
19 36 0.096056054 ubox
19 51 0.162536867 ubox
20 31 0.005758285 ubox
20 35 0.096597516 ubox
20 49 0.006870878 ubox
20 50 0.230304239 ubox
21 30 0.005673994 ubox
21 34 0.096497161 ubox
21 35 0.008277102 ubox
21 48 0.006824395 ubox
21 49 0.230333232 ubox
22 34 0.008612962 ubox
22 37 0.005447554 ubox
22 48 0.230320770 ubox
23 32 0.095926278 ubox
23 33 0.006284130 ubox
23 36 0.005920454 ubox
23 46 0.047929212 ubox
23 47 0.225148433 ubox
24 31 0.096960762 ubox
24 35 0.006286288 ubox
24 44 0.034331640 ubox
24 45 0.226498628 ubox
25 30 0.096822974 ubox
25 34 0.006292586 ubox
25 43 0.036206861 ubox
25 44 0.226077094 ubox
26 33 0.005775396 ubox
26 38 0.004100891 ubox
26 40 0.013825235 ubox
26 42 0.035758713 ubox
26 46 0.005788149 ubox
26 65 0.954829490 ubox
27 37 0.004013205 ubox
27 39 0.013554823 ubox
27 44 0.008562457 ubox
27 45 0.019938802 ubox
27 64 0.955373769 ubox
28 35 0.003601863 ubox
28 43 0.031332195 ubox
28 44 0.021589176 ubox
28 63 0.956065161 ubox
29 34 0.004023127 ubox
29 37 0.013567734 ubox
29 39 0.064420074 ubox
29 43 0.040718826 ubox
29 62 0.956655592 ubox
30 36 0.012880689 ubox
30 38 0.063823672 ubox
30 41 0.201382998 ubox
30 42 0.024224473 ubox
30 61 0.956662103 ubox
30 66 0.004140775 ubox
31 38 0.084394308 ubox
31 40 0.201713435 ubox
31 41 0.023225889 ubox
31 58 0.011620876 ubox
31 60 0.956575059 ubox
31 65 0.004537163 ubox
32 37 0.083789088 ubox
32 39 0.193048593 ubox
32 57 0.017647480 ubox
32 59 0.913793801 ubox
32 63 0.005428933 ubox
32 64 0.003740523 ubox
33 39 0.031557055 ubox
33 55 0.260620617 ubox
33 57 0.640754384 ubox
33 59 0.230760600 ubox
33 62 0.006195534 ubox
33 63 0.003265310 ubox
34 38 0.039588289 ubox
34 41 0.012702828 ubox
34 54 0.268030536 ubox
34 56 0.663469454 ubox
34 58 0.325577051 ubox
34 61 0.007606926 ubox
35 40 0.012816254 ubox
35 53 0.248104164 ubox
35 56 0.068497926 ubox
35 58 0.236205140 ubox
35 60 0.007665707 ubox
36 52 0.228119686 ubox
36 55 0.149978153 ubox
36 57 0.237530220 ubox
36 59 0.007725914 ubox
37 51 0.202826519 ubox
37 53 0.906126935 ubox
37 54 0.118082404 ubox
37 56 0.131164224 ubox
38 50 0.202448884 ubox
38 52 0.919854390 ubox
38 55 0.128086060 ubox
39 46 0.004866742 ubox
39 51 0.928003565 ubox
39 53 0.033523709 ubox
39 54 0.102227592 ubox
40 45 0.005130579 ubox
40 49 0.201877523 ubox
40 50 0.933758007 ubox
40 52 0.046507588 ubox
41 48 0.201953435 ubox
41 49 0.933853050 ubox
41 50 0.046587057 ubox
42 48 0.930485839 ubox
42 49 0.046028450 ubox
42 62 0.004526000 ubox
42 67 0.131025401 ubox
43 47 0.886835099 ubox
43 61 0.005574686 ubox
43 66 0.145403863 ubox
44 53 0.003424683 ubox
44 60 0.005571417 ubox
44 65 0.146832783 ubox
44 66 0.016655568 ubox
45 58 0.005480684 ubox
45 65 0.017219201 ubox
46 57 0.005424844 ubox
46 63 0.146713954 ubox
46 64 0.015573180 ubox
47 55 0.005871170 ubox
47 62 0.147091985 ubox
48 54 0.005884278 ubox
48 61 0.142558018 ubox
49 53 0.005790575 ubox
49 60 0.137744996 ubox
49 61 0.039520412 ubox
50 58 0.125188893 ubox
50 60 0.053624910 ubox
51 57 0.124130998 ubox
51 59 0.064673859 ubox
52 56 0.103339446 ubox
52 58 0.065556002 ubox
53 59 0.003666073 ubox
59 65 0.008300297 ubox
60 64 0.008256367 ubox
64 110 0.014925668 ubox
65 109 0.014312174 ubox
66 108 0.009638085 ubox
68 109 0.988829299 ubox
69 107 0.011782994 ubox
69 108 0.991938312 ubox
70 106 0.013986430 ubox
71 105 0.011342158 ubox
71 106 0.999553342 ubox
72 105 0.999563122 ubox
72 106 0.020262103 ubox
73 105 0.021739515 ubox
74 103 0.999597260 ubox
74 104 0.017503623 ubox
75 102 0.999712426 ubox
75 103 0.008711276 ubox
76 101 0.999986619 ubox
77 100 0.999858727 ubox
78 99 0.984757395 ubox
79 98 0.928865310 ubox
79 99 0.168071538 ubox
80 98 0.341229966 ubox
82 94 0.094631447 ubox
82 97 0.990823334 ubox
83 93 0.094938243 ubox
83 96 0.995351358 ubox
84 92 0.094943334 ubox
84 95 0.995462345 ubox
85 91 0.094922223 ubox
85 94 0.995470368 ubox
86 93 0.994446983 ubox
87 92 0.991963910 ubox
1 25 0.9500000 lbox
2 24 0.9500000 lbox
3 23 0.9500000 lbox
4 22 0.9500000 lbox
5 21 0.9500000 lbox
6 20 0.9500000 lbox
9 15 0.9500000 lbox
10 14 0.9500000 lbox
26 65 0.9500000 lbox
27 64 0.9500000 lbox
28 63 0.9500000 lbox
29 62 0.9500000 lbox
30 61 0.9500000 lbox
31 60 0.9500000 lbox
32 59 0.9500000 lbox
33 57 0.9500000 lbox
34 56 0.9500000 lbox
37 53 0.9500000 lbox
38 52 0.9500000 lbox
39 51 0.9500000 lbox
40 50 0.9500000 lbox
41 49 0.9500000 lbox
42 48 0.9500000 lbox
43 47 0.9500000 lbox
68 109 0.9500000 lbox
69 108 0.9500000 lbox
71 106 0.9500000 lbox
72 105 0.9500000 lbox
74 103 0.9500000 lbox
75 102 0.9500000 lbox
76 101 0.9500000 lbox
77 100 0.9500000 lbox
78 99 0.9500000 lbox
79 98 0.9500000 lbox
82 97 0.9500000 lbox
83 96 0.9500000 lbox
84 95 0.9500000 lbox
85 94 0.9500000 lbox
86 93 0.9500000 lbox
87 92 0.9500000 lbox
showpage
end
%%EOF
