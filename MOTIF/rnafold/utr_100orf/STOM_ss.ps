%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:25:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCUCGAUUGGGGGCGGGGCGGCAAUCUGGGUCUUGUGCCUCUGGCUCCUCAGGGCAUUCCCGGCGGCUCCGGGUUUGGCAACGAGGACGGGGGAGUGCGACUGCGUCUCGGGCAGCAUGGCCGAGAAGCGGCACACACGGGACUCCGAAGCCCAGCGGCUCCCCGACUCCUUCAAGGACAGCCCCAGUAAGGGCCUUGGACCUUGCGGAUGGAUUU\
) } def
/len { sequence length } bind def

/coor [
[336.79016113 482.95687866]
[344.02310181 472.26507568]
[336.21328735 459.45855713]
[328.40347290 446.65203857]
[315.17111206 439.81436157]
[314.59185791 424.00375366]
[306.78204346 411.19726562]
[302.43878174 409.22244263]
[299.28750610 404.50100708]
[298.93783569 397.90722656]
[291.50033569 384.88095093]
[284.06280518 371.85470581]
[276.62530518 358.82846069]
[269.18780518 345.80218506]
[261.65661621 332.82986450]
[254.03216553 319.91213989]
[246.40769958 306.99441528]
[238.78324890 294.07669067]
[231.15879822 281.15893555]
[225.05508423 276.99862671]
[223.51908875 267.99966431]
[216.08157349 254.97341919]
[208.64405823 241.94715881]
[195.86425781 240.32606506]
[186.20629883 231.50984192]
[183.34579468 218.55046082]
[188.54533386 206.12889099]
[181.29629517 192.99681091]
[174.04727173 179.86473083]
[166.79824829 166.73263550]
[159.54922485 153.60055542]
[153.56794739 149.26605225]
[152.29191589 140.22659302]
[145.23287964 126.99140930]
[138.17384338 113.75622559]
[118.12330627 132.24899292]
[93.33216095 132.73623657]
[76.38311005 118.21334076]
[73.80111694 98.53137207]
[59.68937302 93.44623566]
[45.57762909 88.36109924]
[31.46588135 83.27596283]
[17.35413551 78.19082642]
[3.24238825 73.10569000]
[-3.31321049 73.89582825]
[-8.50646973 71.60399628]
[-11.19917297 67.66532135]
[-25.15851593 62.17562866]
[-39.11785889 56.68593216]
[-53.07720184 51.19623566]
[-67.03654480 45.70653915]
[-80.09435272 53.87965012]
[-95.28341675 52.80924988]
[-106.79356384 43.11489105]
[-110.34567261 28.67465210]
[-124.30501556 23.18495560]
[-138.44294739 32.47467041]
[-155.16604614 31.51459694]
[-167.89279175 20.88105774]
[-171.73283386 4.91829252]
[-185.76983643 -0.36967260]
[-199.80683899 -5.65763807]
[-213.84384155 -10.94560337]
[-227.88084412 -16.23356819]
[-243.03007507 -10.95338631]
[-256.52633667 -19.62695694]
[-258.01641846 -35.60065842]
[-246.35729980 -46.62083435]
[-230.49282837 -44.23374939]
[-222.59288025 -30.27057076]
[-208.55587769 -24.98260498]
[-194.51887512 -19.69463921]
[-180.48187256 -14.40667439]
[-166.44487000 -9.11870956]
[-156.02555847 -17.46153831]
[-142.73805237 -19.58483887]
[-130.03495789 -14.82863617]
[-121.27055359 -4.33466482]
[-118.81531525 9.22561359]
[-104.85597229 14.71530914]
[-92.41903687 6.56297255]
[-77.38867188 7.30602217]
[-65.53936005 16.86882210]
[-61.54684830 31.74719620]
[-47.58750534 37.23689270]
[-33.62816238 42.72658920]
[-19.66881943 48.21628571]
[-5.70947742 53.70598221]
[8.32752419 58.99394608]
[22.43927193 64.07908630]
[36.55101776 69.16422272]
[50.66276550 74.24935913]
[64.77451324 79.33448792]
[78.88625336 84.41962433]
[87.70815277 68.93503571]
[107.32474518 60.08979797]
[110.11847687 45.35225677]
[112.91220856 30.61471748]
[115.70594025 15.87717915]
[113.98588562 10.95985699]
[114.29016113 6.33582926]
[116.16903687 2.72606444]
[118.95207977 0.56913036]
[122.38014984 -14.03389454]
[125.80821991 -28.63691902]
[121.42955017 -43.84013748]
[131.87074280 -54.46231461]
[135.29881287 -69.06533813]
[138.72688293 -83.66836548]
[142.15495300 -98.27139282]
[145.58302307 -112.87441254]
[149.01109314 -127.47743988]
[144.63241577 -142.68066406]
[155.07362366 -153.30284119]
[158.50169373 -167.90586853]
[156.23521423 -184.70762634]
[171.75292969 -191.53672791]
[182.61088562 -178.51593018]
[173.10470581 -164.47779846]
[169.67665100 -149.87477112]
[174.30050659 -135.71604919]
[163.61412048 -124.04936981]
[160.18605042 -109.44635010]
[156.75798035 -94.84332275]
[153.32991028 -80.24029541]
[149.90184021 -65.63726807]
[146.47377014 -51.03424835]
[151.09764099 -36.87553406]
[140.41123962 -25.20885086]
[136.98316956 -10.60582542]
[133.55509949 3.99719930]
[130.44348145 18.67090988]
[127.64974976 33.40845108]
[124.85601807 48.14598846]
[122.06228638 62.88352966]
[128.29078674 67.06153107]
[141.75579834 60.45141983]
[140.74780273 75.41754150]
[146.97630310 79.59554291]
[159.55244446 71.41991425]
[172.12857056 63.24428558]
[179.08033752 48.39150620]
[195.44007874 47.25529099]
[204.37829590 61.00448227]
[196.70011902 75.49508667]
[180.30419922 75.82041931]
[167.72807312 83.99604797]
[155.15193176 92.17167664]
[151.40902710 106.69718933]
[158.46806335 119.93237305]
[165.52709961 133.16755676]
[172.68130493 146.35153198]
[179.93032837 159.48361206]
[187.17936707 172.61569214]
[194.42839050 185.74778748]
[201.67741394 198.87986755]
[218.57267761 203.42478943]
[226.78947449 218.48741150]
[221.67031860 234.50964355]
[229.10783386 247.53590393]
[236.54534912 260.56216431]
[244.07652283 273.53448486]
[251.70097351 286.45220947]
[259.32543945 299.36993408]
[266.94989014 312.28768921]
[274.57434082 325.20541382]
[281.62756348 331.00128174]
[282.21405029 338.36468506]
[289.65155029 351.39093018]
[297.08908081 364.41720581]
[304.52658081 377.44345093]
[311.96411133 390.46969604]
[319.58856201 403.38745117]
[327.39837646 416.19393921]
[341.18933105 423.94763184]
[341.20999146 438.84222412]
[349.01980591 451.64874268]
[356.82962036 464.45526123]
[374.38800049 463.62341309]
[389.86877441 471.76040649]
[399.04623413 486.54315186]
[399.46713257 503.84878540]
[391.10568237 518.90441895]
[399.28131104 531.48052979]
[407.63732910 543.93756104]
[416.17196655 556.27288818]
[423.62417603 561.54589844]
[424.73922729 568.84796143]
[433.09524536 581.30499268]
[441.45123291 593.76202393]
[449.80725098 606.21899414]
[458.16323853 618.67602539]
[466.51925659 631.13305664]
[482.02990723 631.57971191]
[494.29513550 641.08465576]
[498.59872437 655.99298096]
[493.28585815 670.57220459]
[480.39944458 679.21624756]
[464.89453125 678.60131836]
[452.73315430 668.96392822]
[448.59152222 654.00976562]
[454.06225586 639.48907471]
[445.70623779 627.03204346]
[437.35021973 614.57501221]
[428.99423218 602.11804199]
[420.63821411 589.66101074]
[412.28222656 577.20397949]
[403.83666992 564.80749512]
[395.30200195 552.47222900]
[390.85220337 550.75091553]
[387.43414307 546.21887207]
[386.70516968 539.65618896]
[378.52954102 527.08001709]
[366.06399536 529.10095215]
[353.71411133 526.24847412]
[343.32122803 518.91156006]
[336.44848633 508.15057373]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 178]
[3 177]
[4 176]
[6 174]
[7 173]
[10 172]
[11 171]
[12 170]
[13 169]
[14 168]
[15 166]
[16 165]
[17 164]
[18 163]
[19 162]
[21 161]
[22 160]
[23 159]
[27 156]
[28 155]
[29 154]
[30 153]
[31 152]
[33 151]
[34 150]
[35 149]
[39 94]
[40 93]
[41 92]
[42 91]
[43 90]
[44 89]
[47 88]
[48 87]
[49 86]
[50 85]
[51 84]
[55 80]
[56 79]
[60 74]
[61 73]
[62 72]
[63 71]
[64 70]
[96 135]
[97 134]
[98 133]
[99 132]
[103 131]
[104 130]
[105 129]
[107 127]
[108 126]
[109 125]
[110 124]
[111 123]
[112 122]
[114 120]
[115 119]
[139 148]
[140 147]
[141 146]
[183 213]
[184 212]
[185 209]
[186 208]
[188 207]
[189 206]
[190 205]
[191 204]
[192 203]
[193 202]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
