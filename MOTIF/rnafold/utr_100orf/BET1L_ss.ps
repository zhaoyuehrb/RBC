%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:29:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUGGGGGCGGGGCCGGAAGCUCUUUCCCCGCGACUGCGCCACGUCUGAGGCGGCUGUGGCCGCGUCGGUGUCCGCGUCGAGGAGCCGGGGCAGGGCACGAUGGCGGACUGGGCUCGGGCUCAGAGCCCGGGCGCUGUGGAAGAGAUUCUAGACCGGGAGAACAAGCGAAUGGCUGACAGCCUGGCCUCCAAAGUCACCA\
) } def
/len { sequence length } bind def

/coor [
[97.20693207 568.33911133]
[100.57138062 553.48651123]
[109.69126892 541.29028320]
[122.98651123 533.86358643]
[121.58882141 518.92883301]
[120.19113159 503.99407959]
[118.79344177 489.05932617]
[117.39575195 474.12460327]
[115.99806213 459.18984985]
[114.60037231 444.25512695]
[105.71082306 432.30416870]
[112.12857056 417.84307861]
[110.73088074 402.90835571]
[109.33319092 387.97360229]
[107.93550110 373.03884888]
[106.18981934 358.14077759]
[104.09708405 343.28747559]
[102.00435638 328.43420410]
[84.69953156 317.56735229]
[80.97461700 297.17730713]
[93.67412567 280.42605591]
[90.66202545 265.73159790]
[87.64991760 251.03712463]
[75.11473846 243.07440186]
[71.85070801 228.21502686]
[80.28774261 215.12097168]
[77.27563477 200.42651367]
[74.26352692 185.73205566]
[71.13724518 171.06146240]
[67.89698029 156.41561890]
[64.65671539 141.76977539]
[61.41644287 127.12393188]
[49.79358673 117.64189148]
[34.79540253 117.40861511]
[19.79721642 117.17533112]
[4.79902983 116.94205475]
[-3.83750153 119.93933868]
[-10.43010902 116.58671570]
[-25.42285347 116.12021637]
[-40.41559601 115.65372467]
[-55.41151810 115.30382538]
[-70.40970612 115.07054901]
[-85.40789032 114.83726501]
[-100.40607452 114.60398865]
[-115.40562439 114.48735046]
[-130.40562439 114.48735046]
[-145.40562439 114.48735046]
[-156.40231323 125.83848572]
[-172.20571899 126.00557709]
[-183.43995667 114.88949585]
[-183.43995667 99.08520508]
[-172.20571899 87.96911621]
[-156.40231323 88.13620758]
[-145.40562439 99.48735046]
[-130.40562439 99.48735046]
[-115.40562439 99.48735046]
[-108.71193695 96.34137726]
[-100.17279816 99.60580444]
[-85.17461395 99.83908081]
[-70.17642212 100.07235718]
[-55.17823792 100.30563354]
[-48.43643951 97.26414490]
[-39.94910049 100.66098022]
[-24.95635605 101.12747192]
[-9.96361160 101.59397125]
[5.03230715 101.94387054]
[20.03049278 102.17714691]
[35.02867889 102.41042328]
[50.02686310 102.64369965]
[57.79460907 89.81163025]
[50.63381195 76.63122559]
[43.47301483 63.45082474]
[36.31221390 50.27042389]
[29.15141678 37.09002304]
[21.99061966 23.90962219]
[14.72754478 10.78530312]
[7.36263323 -2.28214025]
[-6.15361881 -10.50537014]
[-5.66218472 -25.39186478]
[-13.02709579 -38.45930862]
[-20.39200783 -51.52675247]
[-35.68000793 -55.53332138]
[-43.58495331 -69.21862030]
[-39.41697311 -84.46340179]
[-25.64886475 -92.22322083]
[-10.44899654 -87.89429474]
[-2.83518243 -74.04491425]
[-7.32456350 -58.89166260]
[0.04034754 -45.82421875]
[7.40525866 -32.75677872]
[20.39472389 -25.46821785]
[20.43007660 -9.64705181]
[27.79498863 3.42039227]
[33.82220078 7.70702887]
[35.17102051 16.74882507]
[42.33181763 29.92922592]
[49.49261475 43.10962677]
[56.65341568 56.29002762]
[63.81421280 69.47042847]
[70.97501373 82.65083313]
[88.14539337 68.13020325]
[110.74975586 67.54231262]
[119.30023956 55.21797562]
[127.85072327 42.89364243]
[136.40119934 30.56930733]
[144.95169067 18.24497414]
[153.50216675 5.92063856]
[151.98016357 -6.89218998]
[159.36154175 -16.98253441]
[171.24639893 -19.25997734]
[179.98751831 -31.44984627]
[188.72862244 -43.63971329]
[197.46974182 -55.82958221]
[206.21086121 -68.01945496]
[214.95198059 -80.20932007]
[223.69308472 -92.39919281]
[232.43420410 -104.58905792]
[228.38179016 -119.69243622]
[235.03254700 -133.84523010]
[249.24620056 -140.36491394]
[264.31149292 -136.17309570]
[273.11502075 -123.24903870]
[271.50009155 -107.69506836]
[260.22918701 -96.85530090]
[244.62406921 -95.84793854]
[235.88296509 -83.65807343]
[227.14184570 -71.46820831]
[218.40072632 -59.27833557]
[209.65960693 -47.08846664]
[200.91850281 -34.89859772]
[192.17738342 -22.70873070]
[183.43626404 -10.51886082]
[182.65762329 7.00975895]
[165.82650757 14.47112274]
[157.27603149 26.79545784]
[148.72554016 39.11979294]
[140.17506409 51.44412613]
[131.62457275 63.76846313]
[123.07408905 76.09279633]
[131.23715210 88.67708588]
[145.97668457 85.89387512]
[160.71620178 83.11065674]
[175.45573425 80.32743835]
[187.53022766 69.23065186]
[203.09445190 74.39657593]
[206.13728333 90.51095581]
[193.52850342 100.99669647]
[178.23895264 95.06697083]
[163.49942017 97.85018158]
[148.75990295 100.63339996]
[134.02037048 103.41661835]
[129.05738831 117.87683868]
[118.30673981 128.69915771]
[103.94345856 133.73580933]
[88.85533142 132.00532532]
[76.06228638 123.88366699]
[79.30255127 138.52951050]
[82.54282379 153.17535400]
[85.78308868 167.82119751]
[90.69573975 175.53086853]
[88.95799255 182.71995544]
[91.97009277 197.41441345]
[94.98220062 212.10887146]
[107.89044952 220.82751465]
[110.73582458 235.77270508]
[102.34437561 248.02502441]
[105.35648346 262.71948242]
[108.36859131 277.41394043]
[117.68208313 280.18981934]
[125.29664612 286.13479614]
[130.18988037 294.39700317]
[131.72441101 303.81744385]
[129.73065186 313.09219360]
[124.52438354 320.95321655]
[116.85765839 326.34146118]
[118.95038605 341.19476318]
[121.04311371 356.04806519]
[124.26909637 360.17010498]
[125.46659088 364.66781616]
[124.83305359 368.70382690]
[122.87023926 371.64117432]
[124.26792908 386.57592773]
[125.66561890 401.51065063]
[127.06330872 416.44540405]
[136.05284119 429.46456909]
[129.53511047 442.85742188]
[130.93280029 457.79217529]
[132.33049011 472.72689819]
[133.72817993 487.66165161]
[135.12586975 502.59637451]
[136.52355957 517.53112793]
[137.92124939 532.46588135]
[152.36363220 537.29675293]
[163.58813477 547.58898926]
[169.65003967 561.55944824]
[169.49906921 576.78759766]
[163.16140747 590.63513184]
[151.73507690 600.70281982]
[137.19975281 605.24645996]
[122.07377625 603.47869873]
[108.97781372 595.70599365]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 192]
[5 191]
[6 190]
[7 189]
[8 188]
[9 187]
[10 186]
[12 184]
[13 183]
[14 182]
[15 181]
[16 177]
[17 176]
[18 175]
[21 168]
[22 167]
[23 166]
[26 163]
[27 162]
[28 161]
[29 159]
[30 158]
[31 157]
[32 156]
[33 69]
[34 68]
[35 67]
[36 66]
[38 65]
[39 64]
[40 63]
[41 61]
[42 60]
[43 59]
[44 58]
[45 56]
[46 55]
[47 54]
[70 100]
[71 99]
[72 98]
[73 97]
[74 96]
[75 95]
[76 93]
[77 92]
[79 90]
[80 89]
[81 88]
[102 139]
[103 138]
[104 137]
[105 136]
[106 135]
[107 134]
[110 132]
[111 131]
[112 130]
[113 129]
[114 128]
[115 127]
[116 126]
[117 125]
[140 151]
[141 150]
[142 149]
[143 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
