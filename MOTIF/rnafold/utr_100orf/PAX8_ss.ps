%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:20:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAACAAACUUCAGAAGGAGGAGAGACACCGGGCCCAGGGCACCCUCGCGGGCGGACCCAACCAGUGAGGGCCUGCAGCCGGCCGGCCAGGGCAGCGGCAGGCGCGGCCCGGACCUACGGGAGGAAGCCCCGAGCCCUCGGCGGGCUGCGAGCGACUCCCCGGCGAUGCCUCACAACUCCAUCAGAUCUGGCCAUGGAGGGCUGAACCAGCUGGGAGGGGCCUUUGUGAAUGGCAGACCUCUGCCGGAAGUGGU\
CCGCCAGCGCA\
) } def
/len { sequence length } bind def

/coor [
[121.37969208 211.11167908]
[115.86438751 225.06092834]
[127.84883881 235.58316040]
[135.48747253 249.55238342]
[137.87084961 265.26712036]
[134.72839355 280.82040405]
[126.45893097 294.33129883]
[114.08019257 304.17227173]
[99.10360718 309.16528320]
[83.34971619 308.72280884]
[77.99891663 322.73596191]
[72.64812469 336.74914551]
[67.29732513 350.76232910]
[70.42416382 366.86059570]
[57.87025070 377.41198730]
[42.54998016 371.56207275]
[40.22353363 355.32879639]
[53.28415680 345.41152954]
[58.63495255 331.39834595]
[63.98574829 317.38519287]
[69.33654022 303.37200928]
[58.37162399 294.44454956]
[50.68404007 282.55187988]
[47.03483582 268.84692383]
[47.79278183 254.66323853]
[52.89713669 241.38523865]
[61.86230087 230.31292725]
[73.82397461 222.53477478]
[87.62246704 218.82063293]
[101.91513824 219.54562378]
[107.43044281 205.59637451]
[109.27892303 190.71070862]
[107.34290314 175.83616638]
[105.40688324 160.96163940]
[103.47087097 146.08709717]
[101.53485107 131.21255493]
[99.59883118 116.33802032]
[90.87702942 117.65934753]
[81.24581146 114.01158142]
[66.63890839 117.42310333]
[52.03200531 120.83461761]
[37.42510605 124.24613190]
[32.39032364 128.44602966]
[26.82485580 129.36146545]
[22.43442535 127.56177521]
[7.75129366 130.62863159]
[-6.93183756 133.69551086]
[-21.61496925 136.76237488]
[-36.29809952 139.82923889]
[-50.98123169 142.89610291]
[-65.56781006 146.39349365]
[-80.04521179 150.31837463]
[-94.52262115 154.24327087]
[-105.69438171 166.24841309]
[-121.61426544 162.31275940]
[-125.90525055 146.48495483]
[-114.15314484 135.04728699]
[-98.44750977 139.76586914]
[-83.97010040 135.84097290]
[-69.49269867 131.91607666]
[-81.13326263 122.45578766]
[-81.11565399 107.45580292]
[-69.45291138 98.02285767]
[-54.78070831 101.14159393]
[-47.96308899 114.50273895]
[-54.04809570 128.21296692]
[-39.36496353 125.14610291]
[-24.68183327 122.07923889]
[-9.99870205 119.01237488]
[4.68442869 115.94551086]
[19.36755943 112.87864685]
[34.01359177 109.63922882]
[48.62049103 106.22771454]
[63.22739410 102.81620026]
[77.83429718 99.40468597]
[84.08010864 85.76687622]
[77.12128448 72.47872925]
[70.16246033 59.19058990]
[63.20363998 45.90244293]
[56.24481583 32.61429977]
[49.28599167 19.32615662]
[36.02950668 10.69041061]
[36.97933960 -4.17387819]
[30.02051735 -17.46202278]
[23.06169319 -30.75016594]
[16.10287094 -44.03831100]
[11.75167942 -46.79735184]
[9.13412285 -50.56425095]
[8.34472942 -54.51883698]
[9.14233685 -57.92049026]
[2.65680647 -71.44594574]
[-3.82872391 -84.97139740]
[-10.31425476 -98.49684906]
[-16.79978561 -112.02230835]
[-28.66688728 -117.01824188]
[-33.79825592 -128.38957214]
[-29.94693756 -139.83407593]
[-36.27287674 -153.43490601]
[-42.59881973 -167.03572083]
[-47.73940277 -171.10545349]
[-49.77339172 -176.36618042]
[-48.90938187 -181.03182983]
[-54.91353989 -194.77774048]
[-60.91769791 -208.52365112]
[-77.38269806 -210.20567322]
[-90.67065430 -219.91401672]
[-97.20263672 -234.91633606]
[-95.27882385 -251.07083130]
[-85.51973724 -263.96960449]
[-91.68521118 -277.64392090]
[-97.85068512 -291.31823730]
[-104.01616669 -304.99255371]
[-118.88408661 -310.35168457]
[-125.53211212 -324.68972778]
[-120.01608276 -339.50015259]
[-105.60856628 -345.99621582]
[-90.85727692 -340.32391357]
[-84.51390076 -325.84851074]
[-90.34185028 -311.15802002]
[-84.17636871 -297.48370361]
[-78.01089478 -283.80938721]
[-71.84542084 -270.13507080]
[-58.21430969 -269.67413330]
[-46.04985428 -263.36123657]
[-37.74660110 -252.37490845]
[-34.96652222 -238.81987000]
[-38.30660629 -225.32376099]
[-47.17178345 -214.52780151]
[-41.16762543 -200.78189087]
[-35.16347122 -187.03598022]
[-28.99799347 -173.36166382]
[-22.67205238 -159.76084900]
[-16.34611130 -146.16001892]
[-1.45467532 -136.84767151]
[-3.27433109 -118.50783539]
[3.21119928 -104.98238373]
[9.69672966 -91.45693207]
[16.18226051 -77.93147278]
[22.66778946 -64.40602112]
[29.39101410 -50.99713516]
[36.34983826 -37.70898819]
[43.30866241 -24.42084503]
[50.26748276 -11.13270092]
[63.02622986 -3.44741344]
[62.57413864 12.36733246]
[69.53295898 25.65547752]
[76.49178314 38.94362259]
[83.45060730 52.23176575]
[90.40943146 65.51991272]
[97.36825562 78.80805206]
[93.80268860 64.23799133]
[100.92778015 51.03825378]
[115.06483459 46.02389908]
[128.91485596 51.78384399]
[135.32704163 65.34422302]
[130.99078369 79.70377350]
[118.14286041 87.44899750]
[132.47273254 83.01562500]
[146.80259705 78.58225250]
[161.13247681 74.14888000]
[175.46234131 69.71550751]
[156.91841125 43.11956406]
[166.93692017 2.10122919]
[177.57467651 -8.47412682]
[188.21243286 -19.04948235]
[195.18246460 -34.50441360]
[211.96290588 -32.08511353]
[214.28344727 -15.29072475]
[198.78778076 -8.41172695]
[188.15002441 2.16362929]
[177.51226807 12.73898506]
[181.26226807 19.23417473]
[194.25265503 11.73417568]
[207.24314880 4.23437643]
[214.74275208 17.22498894]
[201.75265503 24.72455597]
[188.76226807 32.22455597]
[192.51226807 38.71974564]
[206.98966980 34.79485703]
[221.46708679 30.86997032]
[235.94448853 26.94507980]
[250.42189026 23.02019119]
[264.89929199 19.09530258]
[268.15591431 4.14027071]
[277.99835205 -7.58086967]
[292.16485596 -13.37468624]
[307.40011597 -11.90980244]
[320.20312500 -3.52283788]
[327.63189697 9.85894489]
[327.97930908 25.16050911]
[321.16555786 38.86566925]
[308.75640869 47.82507706]
[293.60333252 49.97992706]
[279.18844604 44.83505249]
[268.82418823 33.57270813]
[254.34677124 37.49759674]
[239.86936951 41.42248535]
[225.39196777 45.34737396]
[210.91456604 49.27226257]
[196.43716431 53.19715118]
[197.23101807 68.17613220]
[212.04217529 70.54878998]
[226.85333252 72.92145538]
[241.66448975 75.29411316]
[256.47564697 77.66677856]
[273.07177734 74.20195007]
[280.99545288 89.19033051]
[268.78631592 100.95355225]
[254.10299683 92.47793579]
[239.29182434 90.10527802]
[224.48066711 87.73261261]
[209.66950989 85.35995483]
[194.85835266 82.98728943]
[179.89572144 84.04537201]
[165.56584167 88.47874451]
[151.23597717 92.91211700]
[136.90609741 97.34549713]
[122.57623291 101.77886963]
[114.47336578 114.40200806]
[116.40938568 129.27653503]
[118.34540558 144.15107727]
[120.28141785 159.02561951]
[122.21743774 173.90014648]
[124.15345764 188.77468872]
[143.72566223 185.70578003]
[164.53312683 202.23306274]
[171.64782715 215.43841553]
[178.76251221 228.64375305]
[185.87719727 241.84910583]
[197.96621704 246.28118896]
[203.62689209 257.39849854]
[200.31828308 269.01153564]
[207.27709961 282.29968262]
[214.23593140 295.58782959]
[221.19474792 308.87597656]
[234.45123291 317.51171875]
[233.50140381 332.37600708]
[240.46022034 345.66415405]
[247.41905212 358.95230103]
[254.37786865 372.24044800]
[267.63436890 380.87619019]
[266.68450928 395.74047852]
[273.64334106 409.02862549]
[288.80065918 413.50427246]
[296.28021240 427.42663574]
[291.64456177 442.53576660]
[277.64389038 449.86770630]
[262.58462524 445.07257080]
[255.40110779 430.99517822]
[260.35519409 415.98742676]
[253.39637756 402.69927979]
[240.63763428 395.01400757]
[241.08972168 379.19924927]
[234.13090515 365.91110229]
[227.17207336 352.62298584]
[220.21325684 339.33483887]
[207.45451355 331.64953613]
[207.90660095 315.83477783]
[200.94778442 302.54666138]
[193.98895264 289.25851440]
[187.03013611 275.97036743]
[171.71705627 267.36892700]
[172.67185974 248.96379089]
[165.55717468 235.75845337]
[158.44247437 222.55310059]
[151.32778931 209.34776306]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 31]
[2 30]
[10 21]
[11 20]
[12 19]
[13 18]
[32 224]
[33 223]
[34 222]
[35 221]
[36 220]
[37 219]
[39 75]
[40 74]
[41 73]
[42 72]
[45 71]
[46 70]
[47 69]
[48 68]
[49 67]
[50 66]
[51 60]
[52 59]
[53 58]
[76 150]
[77 149]
[78 148]
[79 147]
[80 146]
[81 145]
[83 143]
[84 142]
[85 141]
[86 140]
[90 139]
[91 138]
[92 137]
[93 136]
[94 135]
[97 133]
[98 132]
[99 131]
[102 130]
[103 129]
[104 128]
[109 122]
[110 121]
[111 120]
[112 119]
[157 218]
[158 217]
[159 216]
[160 215]
[161 214]
[163 171]
[164 170]
[165 169]
[178 200]
[179 199]
[180 198]
[181 197]
[182 196]
[183 195]
[201 213]
[202 212]
[203 211]
[204 210]
[205 209]
[226 266]
[227 265]
[228 264]
[229 263]
[232 261]
[233 260]
[234 259]
[235 258]
[237 256]
[238 255]
[239 254]
[240 253]
[242 251]
[243 250]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
