%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:31:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUCAGUGGUAGCGCGGGGACUGGCUGGGAAGCGGUCGGUCGAGUGUGGCCUGUGUGGACUCGCAUCUUGCCCGAAGCCGGGCGGAGGAGAGCUCAAGCUAAGGGUGAUCAGCCCAUGACCUAAACCUCCAGACAAAAUAAAACGGAAAAUUUGCUAGAAUCAAGAAUGAUGGAUCCAUGUUCAGUUGGAGUCCAGCUUCGUACUACAAAUGAGUGCCAUAAAACCUACUAUACUCGUCACACAGGUUUUAAGA\
CUUUGCAAGAAU\
) } def
/len { sequence length } bind def

/coor [
[41.81035995 414.31369019]
[27.77742767 409.01181030]
[24.18118095 394.44927979]
[20.35553932 408.95324707]
[16.52989769 423.45718384]
[17.36749840 432.51760864]
[12.57347107 438.10821533]
[8.57807541 452.56631470]
[4.58268023 467.02441406]
[9.22465611 482.75286865]
[-2.27014065 494.44909668]
[-18.07684708 490.08102417]
[-21.93487930 474.14215088]
[-9.87542534 463.02902222]
[-5.88002968 448.57092285]
[-1.88463461 434.11282349]
[2.02595091 419.63153076]
[5.85159254 405.12759399]
[9.67723370 390.62365723]
[-3.54120970 383.53332520]
[-13.50828171 394.74301147]
[-23.47535324 405.95272827]
[-33.44242477 417.16244507]
[-43.40949631 428.37213135]
[-53.37657166 439.58184814]
[-63.34364319 450.79153442]
[-73.31071472 462.00125122]
[-83.27778625 473.21096802]
[-83.77719879 489.24624634]
[-96.71122742 498.73782349]
[-112.15799713 494.40460205]
[-118.26806641 479.57064819]
[-110.35431671 465.61526489]
[-94.48748779 463.24389648]
[-84.52041626 452.03417969]
[-74.55334473 440.82446289]
[-64.58627319 429.61477661]
[-54.61920166 418.40505981]
[-44.65213013 407.19537354]
[-34.68505859 395.98565674]
[-24.71798706 384.77593994]
[-14.75091457 373.56625366]
[-6.82367563 360.83209229]
[-1.16474771 346.94049072]
[4.49418020 333.04888916]
[10.15310860 319.15728760]
[1.31691444 301.76318359]
[8.28097534 283.21054077]
[26.94949913 275.69790649]
[32.11650085 261.61593628]
[37.28350449 247.53396606]
[42.45050812 233.45198059]
[47.61751175 219.37001038]
[52.78451157 205.28802490]
[57.95151520 191.20605469]
[63.11851883 177.12406921]
[68.28552246 163.04209900]
[73.45252228 148.96011353]
[72.80854034 141.62370300]
[78.76351166 134.74395752]
[84.09523010 120.72351074]
[80.62778473 114.07318878]
[69.22700500 123.82112122]
[61.15653229 136.46499634]
[46.36156464 138.93661499]
[34.61950302 129.60258484]
[33.69021225 114.63140106]
[44.18782425 103.91691589]
[59.17352295 104.53923798]
[73.69288635 100.77253723]
[70.22544098 94.12221527]
[55.67765045 90.46685028]
[41.12985229 86.81149292]
[26.58205986 83.15612793]
[12.03426456 79.50076294]
[-3.58104181 84.51017761]
[-15.54352093 73.29273224]
[-11.54719925 57.38796997]
[4.29684973 53.15734863]
[15.68962669 64.95297241]
[30.23742104 68.60832977]
[44.78521729 72.26369476]
[59.33301163 75.91905975]
[73.88080597 79.57441711]
[82.39620972 67.22582245]
[73.80857086 54.92734528]
[65.22093964 42.62886810]
[56.63330460 30.33039093]
[48.04566956 18.03191566]
[25.47660255 22.30295181]
[3.27085423 9.99345589]
[-6.88949394 -15.89778709]
[-18.44270706 -25.46456528]
[-29.99592209 -35.03134155]
[-46.24581528 -37.23883057]
[-52.20776749 -52.51584625]
[-41.74863434 -65.14670563]
[-25.62787437 -62.13785934]
[-20.42914391 -46.58455658]
[-8.87592983 -37.01778030]
[2.67728448 -27.45100021]
[8.31124973 -32.40159988]
[19.57917976 -42.30279922]
[25.21314430 -47.25339890]
[17.21140671 -59.94087982]
[9.20966721 -72.62836456]
[1.20792782 -85.31584167]
[-14.05827045 -90.24765015]
[-19.58570290 -105.30843353]
[-11.13419533 -118.94483948]
[4.81297779 -120.69618988]
[16.02251053 -109.21899414]
[13.89540863 -93.31758118]
[21.89714813 -80.63009644]
[29.89888763 -67.94261932]
[37.90062714 -55.25513840]
[46.44370270 -53.03266525]
[54.16103745 -49.18470383]
[60.75682449 -43.95168304]
[65.99783325 -37.62477112]
[69.72137451 -30.53064156]
[71.83972931 -23.01520538]
[72.34090424 -15.42705345]
[71.28595734 -8.10143471]
[68.80293274 -1.34548497]
[65.07799530 4.57465649]
[60.34414673 9.44428062]
[68.93177795 21.74275589]
[77.51941681 34.04123306]
[86.10704803 46.33971024]
[94.69468689 58.63818741]
[93.05452728 43.72812653]
[91.41437531 28.81806564]
[89.77422333 13.90800571]
[88.13406372 -1.00205457]
[89.13732910 -15.96846581]
[95.37113953 -29.61176491]
[106.02899933 -40.16685867]
[119.73205566 -46.26819229]
[134.70748901 -47.12640762]
[149.01785278 -42.63047409]
[160.81175232 -33.36204529]
[168.56338501 -20.52022552]
[171.26985168 -5.76641369]
[168.58103943 8.99062729]
[160.84478760 21.84171295]
[149.06451416 31.12290573]
[140.42698669 43.38640213]
[131.78947449 55.64989853]
[123.15196228 67.91339111]
[114.51445007 80.17688751]
[127.97401428 73.55570221]
[141.43357849 66.93451691]
[154.89314270 60.31333542]
[168.35270691 53.69215012]
[174.64460754 47.11911392]
[182.00907898 47.07327652]
[195.54533386 40.61032104]
[209.08158875 34.14736557]
[209.16950989 22.74295425]
[213.47198486 12.23618698]
[221.33686829 4.11910105]
[231.60919189 -0.47095594]
[242.80055237 -0.91060579]
[253.30484009 2.82515955]
[261.62869263 10.16484165]
[275.38378906 4.18181372]
[289.13891602 -1.80121374]
[292.58908081 -14.79940701]
[302.74002075 -23.32138252]
[315.75195312 -24.43537712]
[326.86779785 -17.95848656]
[340.69210815 -23.77986526]
[354.51641846 -29.60124207]
[368.34072876 -35.42261887]
[382.13067627 -41.32492447]
[395.88580322 -47.30795288]
[409.64093018 -53.29098129]
[423.39605713 -59.27400589]
[426.62097168 -74.45226288]
[438.17407227 -84.81111908]
[453.61288452 -86.36738586]
[467.00094604 -78.52264404]
[473.19021606 -64.29335785]
[469.80081177 -49.15098190]
[458.13604736 -38.91806412]
[442.68121338 -37.52937317]
[429.37908936 -45.51888657]
[415.62396240 -39.53585815]
[401.86883545 -33.55282974]
[388.11370850 -27.56980324]
[383.25045776 -22.03929710]
[374.16210938 -21.59831047]
[360.33779907 -15.77693176]
[346.51348877 -9.95555401]
[332.68917847 -4.13417625]
[327.00079346 11.70893002]
[311.29782104 18.65745735]
[295.12194824 11.95390797]
[281.36682129 17.93693542]
[267.61169434 23.91996384]
[264.59887695 42.39954376]
[250.91918945 55.40380096]
[232.01095581 57.51130295]
[215.54455566 47.68362045]
[202.00830078 54.14657593]
[188.47204590 60.60953140]
[174.97389221 67.15171814]
[161.51432800 73.77290344]
[148.05476379 80.39408875]
[134.59519958 87.01527405]
[121.13563538 93.63645935]
[120.34474182 108.61559296]
[133.03222656 116.61733246]
[145.71969604 124.61907196]
[158.40718079 132.62080383]
[171.09466553 140.62254333]
[183.26454163 131.55290222]
[197.88999939 127.49574280]
[212.99305725 128.99977112]
[226.53114319 135.86157227]
[236.67337036 147.15315247]
[242.04806519 161.34742737]
[241.92834473 176.52470398]
[236.33039856 190.63241577]
[226.01130676 201.76260376]
[212.36665344 208.40997314]
[197.24174500 209.67556763]
[182.68211365 205.38818359]
[170.65682983 196.12768555]
[162.79220581 183.14645386]
[160.15188599 168.20011902]
[163.09292603 153.31002808]
[150.40544128 145.30828857]
[137.71797180 137.30654907]
[125.03048706 129.30480957]
[112.34300232 121.30307007]
[98.11566925 126.05522919]
[92.78395081 140.07566833]
[87.53450012 154.12712097]
[82.36750031 168.20910645]
[77.20049286 182.29107666]
[72.03349304 196.37304688]
[66.86649323 210.45503235]
[61.69948959 224.53700256]
[56.53248596 238.61898804]
[51.36548233 252.70095825]
[46.19847870 266.78292847]
[41.03147507 280.86492920]
[47.75130844 289.07366943]
[50.45491028 299.24850464]
[48.72275543 309.55126953]
[42.93056107 318.14898682]
[34.17025757 323.54003906]
[24.04470825 324.81622314]
[18.38578033 338.70782471]
[12.72685146 352.59942627]
[7.06792355 366.49102783]
[18.69408798 357.01303101]
[30.09752083 347.26818848]
[44.48764420 343.03448486]
[59.35144806 345.05120850]
[72.09320831 352.96624756]
[80.48778534 365.39730835]
[83.06918335 380.17349243]
[79.38661957 394.71444702]
[70.08318329 406.48074341]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 19]
[4 18]
[5 17]
[7 16]
[8 15]
[9 14]
[20 42]
[21 41]
[22 40]
[23 39]
[24 38]
[25 37]
[26 36]
[27 35]
[28 34]
[43 258]
[44 257]
[45 256]
[46 255]
[49 249]
[50 248]
[51 247]
[52 246]
[53 245]
[54 244]
[55 243]
[56 242]
[57 241]
[58 240]
[60 239]
[61 238]
[71 84]
[72 83]
[73 82]
[74 81]
[75 80]
[85 131]
[86 130]
[87 129]
[88 128]
[89 127]
[92 101]
[93 100]
[94 99]
[104 116]
[105 115]
[106 114]
[107 113]
[151 212]
[152 211]
[153 210]
[154 209]
[155 208]
[157 207]
[158 206]
[159 205]
[166 201]
[167 200]
[168 199]
[172 196]
[173 195]
[174 194]
[175 193]
[176 191]
[177 190]
[178 189]
[179 188]
[213 237]
[214 236]
[215 235]
[216 234]
[217 233]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
