%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:34:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAUUCUCAUGACUAAGCAAAUGUUUGACUGAAACCAGCCCAUAUAAAUGUCACUGUGCCUCUAACUCUCUGUAGCCAUUCCUGAAUUUCUUUCAGCACUGGGAAAACCAGUCUAUGCACCAAAAAUGUCUAAAACUGGAACCAAGAUUACUUUCUAUGAAGACAAAAAUUUUCAAGGCCGUCGCUAUGACUGUGAUUGCGACUGUGCAGAUUUCCACACAUACC\
) } def
/len { sequence length } bind def

/coor [
[-11.50097179 381.87155151]
[-17.40918159 395.65896606]
[-28.01554680 406.26580811]
[-41.80270386 412.17462158]
[-56.79825211 412.54013062]
[-70.85690308 407.30999756]
[-81.96741486 397.23245239]
[-88.54030609 383.74923706]
[-89.63523865 368.78927612]
[-85.09473419 354.49114990]
[-96.61513519 364.09741211]
[-108.13552856 373.70370483]
[-119.65592194 383.30996704]
[-129.57873535 394.55886841]
[-137.67239380 407.18792725]
[-145.76605225 419.81695557]
[-153.85971069 432.44598389]
[-161.95336914 445.07504272]
[-162.17205811 461.47271729]
[-176.61241150 469.24499512]
[-190.41944885 460.39636230]
[-189.38966370 444.02960205]
[-174.58241272 436.98138428]
[-166.48875427 424.35232544]
[-158.39509583 411.72329712]
[-150.30143738 399.09426880]
[-142.20777893 386.46520996]
[-147.69213867 381.34936523]
[-164.14521790 366.00186157]
[-176.18168640 374.95306396]
[-188.21813965 383.90423584]
[-194.22099304 399.16522217]
[-210.47674561 401.32916260]
[-220.26286316 388.16998291]
[-213.51223755 373.22473145]
[-197.16932678 371.86776733]
[-185.13285828 362.91659546]
[-173.09640503 353.96542358]
[-187.95082092 356.05023193]
[-191.84245300 341.56384277]
[-189.58418274 326.73483276]
[-181.55676270 314.06356812]
[-169.11378479 305.68667603]
[-154.35333252 303.01666260]
[-139.76428223 306.50369263]
[-127.80657959 315.55984497]
[-120.49652863 328.65805054]
[-119.06671143 343.58975220]
[-123.75759125 357.83609009]
[-129.26219177 371.78958130]
[-117.74179840 362.18328857]
[-106.22140503 352.57702637]
[-94.70101166 342.97076416]
[-91.38777924 333.28897095]
[-80.70523071 328.97497559]
[-71.09896088 317.45458984]
[-61.49268341 305.93417358]
[-51.88641357 294.41378784]
[-58.50427628 284.44088745]
[-62.32859039 273.08422852]
[-63.09317398 261.11096191]
[-60.73881149 249.33187866]
[-55.41775131 238.54661560]
[-47.48388672 229.48925781]
[-37.46923065 222.77844238]
[-26.04823685 218.87504578]
[-13.99239349 218.05058289]
[-2.11809301 220.36834717]
[8.76864052 225.67857361]
[19.00031090 214.70983887]
[29.23197937 203.74111938]
[39.46364975 192.77239990]
[49.69532013 181.80366516]
[59.92699051 170.83494568]
[68.02064514 158.20590210]
[73.71270752 144.32785034]
[79.40476227 130.44978333]
[70.54221344 121.99073029]
[64.95166779 111.08908081]
[63.25407791 98.95571899]
[65.63800812 86.93834686]
[71.83866119 76.37178802]
[62.55634689 64.58880615]
[53.27403259 52.80582809]
[43.99171829 41.02284622]
[34.70940399 29.23986816]
[19.01182365 25.92843819]
[11.94258213 11.52686214]
[18.92459679 -2.91720366]
[34.60186005 -6.32350826]
[46.94812012 3.92097378]
[46.49238205 19.95755196]
[55.77469635 31.74053192]
[65.05701447 43.52351379]
[74.33932495 55.30649567]
[83.62164307 67.08947754]
[79.22748566 48.26175308]
[77.78247070 28.63411903]
[74.47370148 14.00360012]
[71.16493988 -0.62691772]
[67.85617065 -15.25743580]
[64.54740143 -29.88795471]
[51.80234909 -39.63183212]
[51.61808014 -55.67382431]
[64.13594818 -65.70789337]
[79.75331879 -62.03675461]
[86.48988342 -47.47659302]
[79.17792511 -33.19672012]
[82.48668671 -18.56620216]
[85.79545593 -3.93568444]
[89.10422516 10.69483376]
[92.41298676 25.32535172]
[99.78131104 26.72456741]
[102.57974243 11.98791885]
[105.37817383 -2.74872923]
[108.17660522 -17.48537636]
[110.97502899 -32.22202682]
[113.77346039 -46.95867157]
[116.57189178 -61.69532013]
[119.37054443 -76.43192291]
[134.10711670 -73.63304138]
[131.30853271 -58.89689255]
[128.51011658 -44.16024399]
[125.71167755 -29.42359543]
[122.91325378 -14.68694782]
[120.11482239 0.04970044]
[117.31639099 14.78634834]
[114.51795959 29.52299690]
[121.88628387 30.92221069]
[130.32788086 18.52303886]
[138.76947021 6.12386656]
[147.21107483 -6.27530575]
[147.88549805 -22.66057968]
[162.53633118 -30.02841759]
[176.09205627 -20.79941940]
[174.60769653 -4.46758795]
[159.61024475 2.16628957]
[151.16865540 14.56546211]
[142.72705078 26.96463394]
[134.28546143 39.36380768]
[139.40129089 44.84816742]
[150.37017822 34.61666870]
[160.60150146 45.58570862]
[149.63296509 55.81689453]
[154.74879456 61.30125809]
[167.70428467 53.74114609]
[180.65977478 46.18103409]
[184.43655396 30.83464813]
[198.00172424 22.72529793]
[213.30732727 26.66411209]
[221.27279663 40.31426620]
[217.17239380 55.57736206]
[203.43878174 63.39807892]
[188.21989441 59.13652420]
[175.26440430 66.69663239]
[162.30891418 74.25674438]
[164.56697083 81.40875244]
[171.34112549 102.86476898]
[186.28898621 101.61514282]
[201.23684692 100.36551666]
[216.18470764 99.11589050]
[231.13255310 97.86626434]
[246.08041382 96.61663818]
[256.09323120 84.38883972]
[271.82778931 82.90576935]
[283.94903564 93.04730988]
[285.26565552 108.79666138]
[274.99655151 120.81001282]
[259.23416138 121.96005249]
[247.33004761 111.56449127]
[232.38218689 112.81411743]
[217.43432617 114.06374359]
[202.48646545 115.31336975]
[187.53862000 116.56300354]
[172.59075928 117.81262970]
[130.23606873 146.84147644]
[93.28282166 136.14184570]
[87.59075928 150.01989746]
[81.89870453 163.89796448]
[99.28660583 167.18167114]
[104.49355316 182.47511292]
[116.65327454 191.25811768]
[128.81298828 200.04112244]
[140.97271729 208.82412720]
[153.13243103 217.60713196]
[168.84996033 219.41537476]
[174.63685608 233.13984680]
[186.79656982 241.92286682]
[201.91380310 237.92243958]
[216.04362488 244.62185669]
[222.51437378 258.85784912]
[218.27073669 273.90863037]
[205.31646729 282.66766357]
[189.76814270 280.99920654]
[178.96722412 269.69107056]
[178.01356506 254.08258057]
[165.85385132 245.29957581]
[151.00605774 244.11955261]
[144.34942627 229.76686096]
[132.18971252 220.98385620]
[120.02998352 212.20085144]
[107.87026215 203.41784668]
[95.71054840 194.63482666]
[85.57815552 196.65101624]
[75.78089142 191.65689087]
[70.89571381 181.06661987]
[60.66404343 192.03533936]
[50.43237686 203.00405884]
[40.20070648 213.97279358]
[29.96903610 224.94151306]
[19.73736572 235.91023254]
[27.77135658 252.26824951]
[28.90204811 270.42349243]
[22.98197937 287.58758545]
[10.94456100 301.13452148]
[-5.34300566 309.00231934]
[-23.36931992 310.00686646]
[-40.36601639 304.02005005]
[-49.97229004 315.54046631]
[-59.57855988 327.06085205]
[-69.18483734 338.58123779]
[-54.88848114 334.04095459]
[-39.92844772 335.13522339]
[-26.44493675 341.70748901]
[-16.36691284 352.81756592]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 53]
[11 52]
[12 51]
[13 50]
[14 27]
[15 26]
[16 25]
[17 24]
[18 23]
[29 38]
[30 37]
[31 36]
[55 221]
[56 220]
[57 219]
[58 218]
[69 211]
[70 210]
[71 209]
[72 208]
[73 207]
[74 206]
[75 179]
[76 178]
[77 177]
[82 96]
[83 95]
[84 94]
[85 93]
[86 92]
[98 112]
[99 111]
[100 110]
[101 109]
[102 108]
[129 140]
[130 139]
[131 138]
[132 137]
[145 156]
[146 155]
[147 154]
[158 175]
[159 174]
[160 173]
[161 172]
[162 171]
[163 170]
[181 203]
[182 202]
[183 201]
[184 200]
[185 199]
[187 197]
[188 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
