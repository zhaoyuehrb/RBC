%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:19:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCGCAGCGCUGCGCGGCGCCGGCGGCCGCCGAGGCCUGGGUGGAAGUUGGCGCUGCUGCCGCCGCCCUGCAGCCCACUCGCUGCCUCGGCAGCGCGCUGCUCUUCUAAGAUGGCUGCCGCUACCGGUGCGGUGGCAGCCUCGGCCGCCUCGGGUCAGGCGGAAGGUAAAAAGAUCACCGAUCUGCGGGUCAUCGAUCUGAAGUCCGAGC\
) } def
/len { sequence length } bind def

/coor [
[115.54415131 128.22612000]
[109.70176697 114.41117096]
[102.79412842 117.33255768]
[98.62634277 131.74191284]
[94.45854950 146.15127563]
[90.29076385 160.56062317]
[86.12297821 174.96998596]
[90.57677460 190.75274658]
[78.94310760 202.31085205]
[63.18969727 197.75431824]
[59.52230072 181.77050781]
[71.71362305 170.80220032]
[75.88140869 156.39283752]
[80.04919434 141.98348999]
[84.21698761 127.57412720]
[88.38477325 113.16477203]
[76.73691559 103.71345520]
[63.49501801 110.75988770]
[50.25312424 117.80632782]
[37.01123047 124.85276031]
[23.76933670 131.89920044]
[10.52744198 138.94563293]
[-2.71445179 145.99206543]
[-15.95634651 153.03849792]
[-29.19824028 160.08493042]
[-33.90863419 174.93249512]
[-47.43817520 181.88993835]
[-61.56402588 177.30780029]
[-74.80591583 184.35423279]
[-88.04781342 191.40066528]
[-101.28970337 198.44709778]
[-114.53160095 205.49353027]
[-116.55265808 220.87843323]
[-127.25514221 232.11392212]
[-142.52372742 234.87976074]
[-156.48735046 228.11239624]
[-163.77668762 214.41401672]
[-161.58885193 199.05195618]
[-150.76510620 187.93322754]
[-135.46740723 185.33319092]
[-121.57803345 192.25164795]
[-108.33614349 185.20520020]
[-95.09424591 178.15876770]
[-81.85235596 171.11233521]
[-68.61045837 164.06590271]
[-64.51955414 149.79005432]
[-51.19076920 142.45532227]
[-36.24467468 146.84303284]
[-23.00278091 139.79660034]
[-9.76088619 132.75016785]
[3.48100781 125.70373535]
[16.72290230 118.65730286]
[29.96479607 111.61086273]
[43.20669174 104.56443024]
[56.44858551 97.51799774]
[69.69047546 90.47156525]
[75.94007874 76.83548737]
[72.63323212 62.20453644]
[69.32638550 47.57358551]
[66.01953888 32.94263077]
[62.71268845 18.31167984]
[59.40583801 3.68072867]
[56.09899139 -10.95022297]
[52.79214478 -25.58117485]
[49.48529434 -40.21212769]
[46.17844772 -54.84307861]
[42.87159729 -69.47402954]
[39.45643616 -84.08007812]
[35.93314362 -98.66042328]
[10.86463547 -106.36550903]
[0.65762454 -136.05865479]
[-10.25862789 -146.34628296]
[-21.17488098 -156.63392639]
[-32.09113312 -166.92155457]
[-43.00738525 -177.20918274]
[-58.79531860 -176.49038696]
[-70.41085052 -187.20742798]
[-70.96268463 -203.00209045]
[-60.12343979 -214.50366211]
[-44.32383347 -214.88847351]
[-32.93750381 -203.92823792]
[-32.71974945 -188.12544250]
[-21.80349922 -177.83781433]
[-10.88724613 -167.55017090]
[0.02900674 -157.26254272]
[10.94525909 -146.97489929]
[17.78626060 -150.04910278]
[31.46826553 -156.19749451]
[38.30926895 -159.27169800]
[37.86476898 -174.26510620]
[37.42026901 -189.25851440]
[36.97576904 -204.25193787]
[36.53126907 -219.24534607]
[36.08676910 -234.23875427]
[35.64226913 -249.23216248]
[22.99126816 -258.02185059]
[18.00003624 -272.40728760]
[22.38467789 -286.80307007]
[34.26319885 -295.74951172]
[33.81869888 -310.74291992]
[20.54620171 -318.60705566]
[13.65276432 -332.40863037]
[15.33805847 -347.74368286]
[25.06431198 -359.71881104]
[39.72791290 -364.51278687]
[54.64976120 -360.59591675]
[65.06834412 -349.21801758]
[67.65914154 -334.00973511]
[61.59542465 -319.82400513]
[48.81211090 -311.18743896]
[49.25661087 -296.19403076]
[61.64426422 -287.96697998]
[66.87401581 -273.85623169]
[62.74375534 -259.20034790]
[50.63568115 -249.67666626]
[51.08018112 -234.68325806]
[51.52468109 -219.68984985]
[51.96918106 -204.69642639]
[52.41368103 -189.70301819]
[52.85818100 -174.70960999]
[53.30268097 -159.71618652]
[63.21778107 -150.33566284]
[68.73696899 -138.64070129]
[69.56492615 -126.45339203]
[66.09617615 -115.48896027]
[59.29736328 -107.11549377]
[50.51348877 -102.18371582]
[54.03678131 -87.60337067]
[58.66306686 -81.84049988]
[57.50255203 -72.78087616]
[60.80939865 -58.14992905]
[64.11624908 -43.51897430]
[67.42309570 -28.88802338]
[70.72994232 -14.25707150]
[74.03678894 0.37388051]
[77.34363556 15.00483227]
[80.65048981 29.63578415]
[83.95733643 44.26673508]
[87.26418304 58.89768982]
[90.57102966 73.52864075]
[137.47113037 92.40512085]
[150.71301270 99.45155334]
[163.95491028 106.49798584]
[177.19680786 113.54441833]
[190.43870544 120.59085846]
[205.20216370 123.24420929]
[220.06895447 121.24959564]
[234.93574524 119.25497437]
[249.80253601 117.26036072]
[264.66934204 115.26573944]
[279.53613281 113.27112579]
[288.92575073 100.55850983]
[304.56658936 98.29145050]
[317.17922974 107.81495667]
[319.28079224 123.47889709]
[309.62445068 135.99012756]
[293.93917847 137.92597961]
[281.53073120 128.13792419]
[266.66394043 130.13253784]
[251.79714966 132.12715149]
[236.93035889 134.12176514]
[222.06356812 136.11637878]
[207.19677734 138.11100769]
[204.68972778 145.17958069]
[218.82687378 150.19366455]
[232.96403503 155.20774841]
[247.95867920 155.60800171]
[252.21145630 169.99250793]
[239.84504700 178.48202515]
[227.94993591 169.34489441]
[213.81278992 164.33081055]
[199.67564392 159.31672668]
[197.16860962 166.38529968]
[207.45623779 177.30154419]
[217.74386597 188.21780396]
[228.03150940 199.13404846]
[238.31913757 210.05030823]
[253.61511230 208.22286987]
[266.89889526 215.66558838]
[273.17874146 229.34140015]
[270.23672485 243.91819763]
[280.52435303 254.83444214]
[290.81198120 265.75070190]
[301.09963989 276.66696167]
[316.95416260 280.85806274]
[320.99011230 296.75280762]
[309.05563354 308.00003052]
[293.42788696 303.02957153]
[290.18338013 286.95458984]
[279.89575195 276.03833008]
[269.60809326 265.12207031]
[259.32046509 254.20582581]
[244.59500122 256.27911377]
[231.31523132 249.20016479]
[224.67251587 235.49879456]
[227.40289307 220.33793640]
[217.11524963 209.42169189]
[206.82762146 198.50543213]
[196.53997803 187.58918762]
[186.25234985 176.67292786]
[180.25584412 168.82650757]
[176.72750854 160.45582581]
[175.58671570 152.22474670]
[176.58976746 144.73329163]
[179.35437012 138.48014832]
[183.39227295 133.83274841]
[170.15037537 126.78631592]
[156.90847778 119.73988342]
[143.66658020 112.69344330]
[130.42468262 105.64701080]
[123.51705170 108.56839752]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 16]
[4 15]
[5 14]
[6 13]
[7 12]
[17 56]
[18 55]
[19 54]
[20 53]
[21 52]
[22 51]
[23 50]
[24 49]
[25 48]
[28 45]
[29 44]
[30 43]
[31 42]
[32 41]
[57 140]
[58 139]
[59 138]
[60 137]
[61 136]
[62 135]
[63 134]
[64 133]
[65 132]
[66 131]
[67 130]
[68 128]
[69 127]
[71 86]
[72 85]
[73 84]
[74 83]
[75 82]
[89 121]
[90 120]
[91 119]
[92 118]
[93 117]
[94 116]
[95 115]
[99 111]
[100 110]
[141 210]
[142 209]
[143 208]
[144 207]
[145 206]
[146 163]
[147 162]
[148 161]
[149 160]
[150 159]
[151 158]
[173 200]
[174 199]
[175 198]
[176 197]
[177 196]
[181 192]
[182 191]
[183 190]
[184 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
