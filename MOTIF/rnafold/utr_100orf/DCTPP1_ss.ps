%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:47:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGCUCUGGAGGCGGGGCUUCGAGCGUGGCUCGUGGGUUUUCCGUGAAGUCGCGGUGCAGCGGUGGGCGGCAUGUCUGUGGCCGGUGGGGAGAUUCGUGGGGACACGGGGGGAGAGGACACUGCUGCUCCCGGCCGGUUCAGCUUCAGCCCGGAGCCCACGCUCGAGGACA\
) } def
/len { sequence length } bind def

/coor [
[26.87905121 388.05755615]
[20.79459572 401.76812744]
[14.71014023 415.47866821]
[8.62568474 429.18923950]
[2.54122901 442.89978027]
[-3.54322648 456.61035156]
[-9.62768269 470.32089233]
[-15.71213818 484.03146362]
[-21.79659271 497.74200439]
[-19.52556419 513.98315430]
[-32.61996078 523.85577393]
[-47.60939407 517.20379639]
[-49.07401657 500.87017822]
[-35.50715256 491.65756226]
[-29.42269516 477.94699097]
[-23.33823967 464.23645020]
[-17.25378418 450.52587891]
[-11.16932869 436.81533813]
[-5.08487320 423.10476685]
[0.99958241 409.39422607]
[7.08403826 395.68365479]
[13.16849327 381.97311401]
[18.24187279 367.85711670]
[22.27742004 353.41018677]
[26.31296539 338.96322632]
[30.34851265 324.51626587]
[34.38405991 310.06933594]
[38.41960526 295.62237549]
[42.45515060 281.17541504]
[46.49069595 266.72848511]
[50.39490509 252.24548340]
[54.16744995 237.72763062]
[57.93999481 223.20977783]
[56.57404327 215.91902161]
[61.91510010 208.46379089]
[65.95064545 194.01683044]
[69.98619080 179.56988525]
[74.02174377 165.12294006]
[78.05728912 150.67597961]
[82.09283447 136.22903442]
[68.71061707 128.41362000]
[58.75402451 115.65695953]
[54.03308487 99.46340179]
[39.41787720 96.08766174]
[24.80266571 92.71192169]
[10.18745422 89.33618164]
[-4.42775583 85.96044159]
[-19.94413757 91.26834869]
[-32.11950684 80.28234100]
[-28.42889023 64.30387878]
[-12.66887569 59.77022934]
[-1.05201554 71.34523010]
[13.56319523 74.72097015]
[28.17840576 78.09671021]
[42.79361725 81.47245026]
[57.40882492 84.84819031]
[64.71139526 71.74580383]
[54.15305328 61.09115982]
[43.59471130 50.43651199]
[28.38504028 46.08032227]
[24.92232895 31.59381294]
[14.36398792 20.93916893]
[-1.60780764 19.42877197]
[-10.26422024 5.92151260]
[-4.96479177 -9.22099686]
[10.22521114 -14.38271904]
[23.65331650 -5.60402250]
[25.01863289 10.38082886]
[35.57697296 21.03547287]
[50.03144455 24.62957382]
[54.24935913 39.87817383]
[64.80770111 50.53281784]
[75.36603546 61.18746185]
[88.64923096 56.88844681]
[102.18655396 56.86386490]
[114.67648315 60.85885620]
[124.99536896 68.24403381]
[136.29911804 58.38374710]
[147.60285950 48.52346039]
[152.03369141 40.49380875]
[159.20256042 38.58903122]
[170.68348694 28.93563080]
[182.16442871 19.28222847]
[193.64535522 9.62882614]
[205.12629700 -0.02457530]
[216.60722351 -9.67797661]
[228.08816528 -19.33137894]
[233.67134094 -34.13471603]
[248.39215088 -36.40338516]
[259.87307739 -46.05678558]
[271.35400391 -55.71018600]
[282.83496094 -65.36358643]
[294.31588745 -75.01699066]
[293.41995239 -93.99159241]
[311.41708374 -108.17232513]
[319.65130615 -120.71018219]
[327.88549805 -133.24804688]
[336.11972046 -145.78590393]
[344.35391235 -158.32376099]
[352.58810425 -170.86161804]
[352.98992920 -187.25584412]
[367.51620483 -194.86633301]
[381.22354126 -185.86407471]
[380.01101685 -169.50981140]
[365.12597656 -162.62741089]
[356.89175415 -150.08955383]
[348.65756226 -137.55169678]
[340.42337036 -125.01383972]
[332.18914795 -112.47597504]
[323.95495605 -99.93811798]
[333.60836792 -88.45718384]
[347.37359619 -94.41690826]
[356.96362305 -107.00029755]
[371.71737671 -104.95664215]
[385.48260498 -110.91635895]
[391.06408691 -125.70224762]
[405.50021362 -132.13450623]
[420.22625732 -126.39699554]
[426.50555420 -111.89367676]
[420.61267090 -97.22911072]
[406.04376221 -91.10353088]
[391.44232178 -97.15112305]
[377.67709351 -91.19140625]
[369.07162476 -79.03429413]
[353.33331299 -80.65166473]
[339.56808472 -74.69194794]
[322.50842285 -59.39621735]
[303.96929932 -63.53605652]
[292.48834229 -53.88265610]
[281.00741577 -44.22925186]
[269.52648926 -34.57585144]
[258.04556274 -24.92245102]
[253.28356934 -10.80959034]
[237.74156189 -7.85044527]
[226.26063538 1.80295658]
[214.77969360 11.45635796]
[203.29876709 21.10976028]
[191.81782532 30.76316261]
[180.33689880 40.41656494]
[168.85595703 50.06996536]
[157.46315002 59.82721329]
[146.15940857 69.68750000]
[134.85565186 79.54778290]
[140.23757935 96.23885345]
[138.04220581 113.63819885]
[128.68292236 128.46926880]
[113.92223358 137.93917847]
[96.53977966 140.26458740]
[92.50423431 154.71153259]
[88.46868896 169.15847778]
[84.43314362 183.60543823]
[80.39759827 198.05238342]
[76.36205292 212.49932861]
[72.45784760 226.98233032]
[68.68529510 241.50016785]
[64.91275024 256.01803589]
[65.78299713 265.14764404]
[60.93764877 270.76400757]
[56.90209961 285.21096802]
[52.86655426 299.65792847]
[48.83100891 314.10485840]
[44.79546356 328.55181885]
[40.75991440 342.99877930]
[36.72436905 357.44570923]
[32.68882370 371.89266968]
[45.39751816 363.92465210]
[60.37145996 364.80847168]
[72.05461121 374.21612549]
[76.11196899 388.65695190]
[71.03806305 402.77273560]
[58.71556091 411.32586670]
[43.71667862 411.14270020]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 22]
[2 21]
[3 20]
[4 19]
[5 18]
[6 17]
[7 16]
[8 15]
[9 14]
[23 165]
[24 164]
[25 163]
[26 162]
[27 161]
[28 160]
[29 159]
[30 158]
[31 156]
[32 155]
[33 154]
[35 153]
[36 152]
[37 151]
[38 150]
[39 149]
[40 148]
[43 56]
[44 55]
[45 54]
[46 53]
[47 52]
[57 73]
[58 72]
[59 71]
[61 69]
[62 68]
[77 143]
[78 142]
[79 141]
[81 140]
[82 139]
[83 138]
[84 137]
[85 136]
[86 135]
[87 134]
[89 132]
[90 131]
[91 130]
[92 129]
[93 128]
[95 110]
[96 109]
[97 108]
[98 107]
[99 106]
[100 105]
[111 126]
[112 125]
[114 123]
[115 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
