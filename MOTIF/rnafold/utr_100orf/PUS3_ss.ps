%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:17:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCACAGUGACAGCUUCCUUUCUCGGAAACGCGGCGCGGCCGGCUGCCGGAAAACAGGGCAGACCUGUAUGGUUCGUUUAUUCCUGGGGUUGUCAUAUCAUGGCUUAUAAUGACACAGACAGAAACCAGACUGAGAAGCUCCUAAAAAGAGUACGAGAACUGGAGCAAGAGGUGCAAAGACUUAAAAAGGAACAGGCCA\
) } def
/len { sequence length } bind def

/coor [
[204.93827820 404.32846069]
[199.38999939 390.39230347]
[193.84172058 376.45614624]
[188.29344177 362.51998901]
[175.29374695 362.67178345]
[162.98695374 358.38348389]
[152.84693909 350.14572144]
[146.09596252 338.92340088]
[143.55720520 326.04284668]
[145.55459595 313.03497314]
[151.87153625 301.45339966]
[161.77423096 292.68887329]
[156.66867065 278.58450317]
[151.56309509 264.48013306]
[146.45751953 250.37577820]
[141.35195923 236.27140808]
[127.79698181 230.20524597]
[122.41828918 215.97415161]
[128.87294006 201.79757690]
[123.76737213 187.69320679]
[118.66180420 173.58883667]
[113.55623627 159.48448181]
[108.45066833 145.38011169]
[103.34510040 131.27574158]
[81.03300476 125.09212494]
[68.99781036 105.31282806]
[54.03564835 104.24810791]
[39.07348251 103.18338776]
[24.11131859 102.11866760]
[9.14915371 101.05394745]
[0.35708979 103.56809235]
[-6.04020452 99.85248566]
[-20.98369598 98.55170441]
[-35.92718887 97.25092316]
[-46.12739563 108.79483795]
[-60.99538040 112.08062744]
[-74.78414917 106.05286407]
[-82.28965759 93.21521759]
[-97.23315430 91.91442871]
[-111.65230560 98.42584991]
[-123.66066742 89.61400604]
[-138.60415649 88.31321716]
[-153.55744934 87.13043213]
[-168.51962280 86.06571198]
[-183.48178101 85.00099182]
[-198.44393921 83.93627167]
[-213.40611267 82.87155151]
[-222.56440735 95.28643036]
[-236.98896790 100.75777435]
[-252.07696533 97.53971100]
[-263.01385498 86.65911102]
[-266.30975342 71.58792114]
[-260.91293335 57.13531876]
[-248.54548645 47.91306686]
[-233.15383911 46.86395645]
[-219.64939880 54.32275772]
[-212.34138489 67.90938568]
[-197.37922668 68.97410583]
[-182.41705322 70.03882599]
[-167.45489502 71.10354614]
[-152.49273682 72.16826630]
[-145.59085083 69.50460815]
[-137.30337524 73.36972809]
[-122.35987854 74.67050934]
[-109.00958252 68.06605530]
[-95.93237305 76.97093964]
[-80.98887634 78.27172089]
[-71.37810516 66.92399597]
[-56.75522232 63.36936951]
[-42.67858887 69.17469788]
[-34.62640762 82.30742645]
[-19.68291283 83.60820770]
[-4.73942137 84.90899658]
[10.21387291 86.09178162]
[25.17603683 87.15650177]
[40.13820267 88.22122192]
[55.10036850 89.28594208]
[70.06253052 90.35066223]
[71.98343658 81.64293671]
[76.50093079 73.34329224]
[83.51051331 66.23477936]
[92.67144012 61.06643677]
[103.41957092 58.48249817]
[106.24424744 43.75085831]
[109.06891632 29.01922035]
[111.89359283 14.28758049]
[101.81153107 -0.00253474]
[105.11401367 -16.83263588]
[119.27986145 -25.88906670]
[121.87162781 -40.66345978]
[124.46339417 -55.43785477]
[127.05516052 -70.21224976]
[129.64692688 -84.98664856]
[117.72411346 -96.97766113]
[115.31810760 -113.54744720]
[123.18058777 -128.14170837]
[138.04067993 -135.10644531]
[140.39889526 -149.91992188]
[142.75711060 -164.73338318]
[145.11531067 -179.54685974]
[134.05686951 -190.43217468]
[131.54183960 -205.74407959]
[138.53732300 -219.59481812]
[152.35339355 -226.65849304]
[167.67752075 -224.21899414]
[178.61723328 -213.21434021]
[180.96600342 -197.87606812]
[173.82067871 -184.10203552]
[159.92878723 -177.18864441]
[157.57057190 -162.37516785]
[155.21235657 -147.56170654]
[152.85415649 -132.74824524]
[163.12652588 -124.21212006]
[167.87536621 -111.61293030]
[165.75924683 -98.20619965]
[157.22560120 -87.51291656]
[144.42132568 -82.39488220]
[141.82955933 -67.62048340]
[139.23779297 -52.84609222]
[136.64602661 -38.07169724]
[134.05426025 -23.29730034]
[142.86016846 -13.88283443]
[144.65966797 -0.92156750]
[138.57322693 10.88182354]
[126.62523651 17.11225510]
[123.80056000 31.84389496]
[120.97588348 46.57553482]
[118.15120697 61.30717468]
[123.39134979 66.67289734]
[132.93295288 55.09888458]
[138.15473938 41.03712463]
[152.82833862 37.92498398]
[163.30854797 48.65649033]
[159.84963989 63.25224304]
[145.66831970 68.13945007]
[133.87162781 77.40433502]
[139.11177063 82.77005005]
[153.90615845 80.29499054]
[168.70054626 77.81992340]
[183.49494934 75.34485626]
[191.27578735 61.78047180]
[205.97300720 56.43953705]
[220.64703369 61.84387970]
[228.36924744 75.44172668]
[225.49343872 90.81260681]
[213.37748718 100.69884491]
[197.74217224 100.43246460]
[185.97000122 90.13925171]
[171.17561340 92.61431122]
[156.38122559 95.08937836]
[141.58682251 97.56444550]
[132.72183228 116.29815674]
[117.44946289 126.17017365]
[122.55503082 140.27453613]
[127.66060638 154.37890625]
[132.76617432 168.48327637]
[137.87173462 182.58764648]
[142.97731018 196.69200134]
[157.01075745 203.45219421]
[161.98760986 217.82875061]
[155.45632935 231.16584778]
[160.56188965 245.27020264]
[165.66746521 259.37457275]
[170.77302551 273.47894287]
[175.87860107 287.58331299]
[192.98403931 288.99865723]
[207.70504761 297.71615601]
[217.10829163 311.94265747]
[219.34465027 328.79281616]
[214.01266479 344.87457275]
[202.22959900 356.97171021]
[207.77787781 370.90786743]
[213.32615662 384.84402466]
[218.87443542 398.78018188]
[222.10266113 384.13168335]
[230.84167480 371.94030762]
[243.67747498 364.17871094]
[258.53311157 362.10275269]
[273.00491333 366.04830933]
[284.75119019 375.37701416]
[291.87136841 388.57940674]
[293.21337891 403.51925659]
[288.56002808 417.77920532]
[278.66427612 429.05191040]
[265.12731934 435.51339722]
[250.13951111 436.11816406]
[236.12596130 430.76831055]
[225.35270691 420.32739258]
[228.40959167 435.01260376]
[241.76354980 443.46524048]
[245.14775085 458.90295410]
[236.55438232 472.16680908]
[221.08175659 475.38760376]
[207.90951538 466.65447998]
[204.85249329 451.14868164]
[213.72438049 438.06948853]
[210.66749573 423.38427734]
[205.46475220 419.36550903]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 174]
[2 173]
[3 172]
[4 171]
[12 165]
[13 164]
[14 163]
[15 162]
[16 161]
[19 158]
[20 157]
[21 156]
[22 155]
[23 154]
[24 153]
[26 78]
[27 77]
[28 76]
[29 75]
[30 74]
[32 73]
[33 72]
[34 71]
[38 67]
[39 66]
[41 64]
[42 63]
[43 61]
[44 60]
[45 59]
[46 58]
[47 57]
[83 128]
[84 127]
[85 126]
[86 125]
[89 121]
[90 120]
[91 119]
[92 118]
[93 117]
[97 112]
[98 111]
[99 110]
[100 109]
[137 151]
[138 150]
[139 149]
[140 148]
[188 197]
[189 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
