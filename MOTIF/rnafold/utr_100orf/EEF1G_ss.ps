%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:57:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACUGUCGUACGUAUGUCUUCUGUUUCGUCCUCGCUUUCCGGCUGCUGUUUCUCCACGGCUCUCCUCUUUCCCCCUCCCUUCUCUCCCGGGCGGCUUACUUUGCGGCAGCGCCGAGAACCCCACCCCCUUUCUUUGCGGAAUCACCAUGGCGGCUGGGACCCUGUACACGUAUCCUGAAAACUGGAGGGCCUUCAAGGCUCUCAUCGCUGCUCAGUACAGCGGGGCUCAGGUCCGCGUGCUCUCCG\
) } def
/len { sequence length } bind def

/coor [
[99.85911560 125.65596008]
[87.15134430 120.87789154]
[79.19226837 110.64635468]
[64.35243988 112.83257294]
[49.51261520 115.01878357]
[34.67278671 117.20499420]
[19.83296013 119.39120483]
[4.99313354 121.57742310]
[-9.84669399 123.76363373]
[-24.68652153 125.94984436]
[-38.86714935 137.71392822]
[-54.91521835 130.58795166]
[-69.72604370 132.96273804]
[-84.53686523 135.33750916]
[-96.93802643 145.16204834]
[-110.72974396 139.53729248]
[-125.54056549 141.91207886]
[-140.35139465 144.28684998]
[-152.75254822 154.11138916]
[-166.54426575 148.48663330]
[-181.35508728 150.86141968]
[-196.16590881 153.23619080]
[-210.97673035 155.61097717]
[-211.80801392 177.15386963]
[-217.56088257 197.92446899]
[-227.92527771 216.81414795]
[-242.34503174 232.81532288]
[-260.04776001 245.07528687]
[-280.08627319 252.94157410]
[-301.38919067 255.99673462]
[-322.81817627 254.08047485]
[-343.22897339 247.29803467]
[-361.53222656 236.01446533]
[-376.75189209 220.83493042]
[-389.20401001 229.19819641]
[-401.65615845 237.56147766]
[-408.38442993 252.51681519]
[-424.72528076 253.89819336]
[-433.86865234 240.28457642]
[-426.40863037 225.68046570]
[-410.01943970 225.10934448]
[-397.56729126 216.74606323]
[-385.11514282 208.38279724]
[-389.14822388 200.28395081]
[-392.37521362 191.83152771]
[-406.96188354 195.32856750]
[-421.54855347 198.82560730]
[-436.13519287 202.32264709]
[-450.72186279 205.81968689]
[-458.76916504 219.42176819]
[-474.09814453 223.26860046]
[-487.61437988 215.07792664]
[-491.29891968 199.70915222]
[-482.96582031 186.28025818]
[-467.55892944 182.75840759]
[-454.21890259 191.23303223]
[-439.63223267 187.73599243]
[-425.04559326 184.23893738]
[-410.45892334 180.74189758]
[-395.87225342 177.24485779]
[-396.89584351 167.14903259]
[-396.81338501 157.00062561]
[-395.62557983 146.92044067]
[-393.34634399 137.02851868]
[-390.00253296 127.44270325]
[-385.63375854 118.27719879]
[-380.29177856 109.64123535]
[-374.03997803 101.63776398]
[-366.95257568 94.36224365]
[-359.11380005 87.90145874]
[-350.61676025 82.33253479]
[-341.56253052 77.72198486]
[-332.05877686 74.12493896]
[-322.21856689 71.58444977]
[-312.15896606 70.13101959]
[-301.99975586 69.78220367]
[-291.86178589 70.54241180]
[-281.86587524 72.40284729]
[-272.13104248 75.34161377]
[-262.77322388 79.32397461]
[-253.90400696 84.30274200]
[-245.62904358 90.21887207]
[-238.04704285 97.00212860]
[-231.24844360 104.57194519]
[-225.31436157 112.83837891]
[-220.31565857 121.70314789]
[-216.31207275 131.06083679]
[-213.35151672 140.80015564]
[-198.54069519 138.42536926]
[-183.72987366 136.05059814]
[-168.91905212 133.67581177]
[-157.57725525 124.02113342]
[-142.72616577 129.47602844]
[-127.91534424 127.10125732]
[-113.10452271 124.72647858]
[-101.76272583 115.07179260]
[-86.91163635 120.52668762]
[-72.10082245 118.15190887]
[-57.28999710 115.77713013]
[-49.95918655 106.17367554]
[-37.65683746 104.06259918]
[-26.87273407 111.11001587]
[-12.03290653 108.92380524]
[2.80692124 106.73759460]
[17.64674950 104.55137634]
[32.48657608 102.36516571]
[47.32640457 100.17895508]
[62.16622925 97.99274445]
[77.00605774 95.80653381]
[85.66619110 78.03629303]
[106.74263763 71.71139526]
[106.93341827 56.71260452]
[99.37226105 42.81513977]
[107.27080536 30.18730736]
[107.46158600 15.18851948]
[107.65236664 0.18973312]
[107.84314728 -14.80905342]
[108.03392792 -29.80784035]
[94.54289246 -37.03630066]
[85.96601105 -49.71287918]
[84.27418518 -64.92459869]
[89.85618591 -79.17591095]
[101.42931366 -89.19196320]
[116.33413696 -92.67115784]
[131.14564514 -88.81398010]
[142.46026611 -78.50679779]
[147.67796326 -64.11811829]
[145.59977722 -48.95435715]
[136.70324707 -36.50003433]
[123.03271484 -29.61705971]
[122.84193420 -14.61827374]
[122.65115356 0.38051295]
[122.46037292 15.37930012]
[122.26959229 30.37808609]
[129.84439087 43.20273590]
[121.93220520 56.90338516]
[121.74142456 71.90216827]
[131.39945984 83.37920380]
[146.21028137 85.75398254]
[161.02110291 88.12875366]
[175.01603699 77.61415100]
[191.94999695 80.43064880]
[201.40769958 94.35002899]
[216.24752808 96.53624725]
[231.08735657 98.72245789]
[235.01728821 97.00517273]
[238.90087891 96.64905548]
[242.31976318 97.47492218]
[244.95549011 99.18713379]
[246.61860657 101.41579437]
[261.32806396 104.35384369]
[276.03750610 107.29189301]
[290.74694824 110.22994232]
[305.49258423 112.98066711]
[320.27200317 115.54363251]
[335.05142212 118.10659027]
[349.83084106 120.66954803]
[364.61026001 123.23250580]
[373.57611084 121.61725616]
[379.56085205 125.92319489]
[394.30648804 128.67391968]
[409.05209351 131.42465210]
[423.79772949 134.17538452]
[438.54336548 136.92610168]
[453.28897095 139.67683411]
[460.25543213 133.38537598]
[469.19900513 131.02586365]
[478.09429932 133.00244141]
[484.98602295 138.75167847]
[488.41864014 146.89541626]
[503.04861450 150.20664978]
[517.67858887 153.51789856]
[524.05834961 151.93486023]
[529.47528076 153.55250549]
[532.63629150 157.10389709]
[547.17724609 160.78617859]
[561.71826172 164.46846008]
[576.25927734 168.15074158]
[586.15301514 154.45909119]
[600.52056885 145.64567566]
[617.13641357 143.04249573]
[633.43945312 147.02210999]
[646.92773438 156.94462585]
[655.54260254 171.26042175]
[657.98278809 187.75205994]
[672.61273193 191.06330872]
[687.24267578 194.37454224]
[701.87268066 197.68577576]
[716.50262451 200.99700928]
[731.13256836 204.30824280]
[745.76251221 207.61949158]
[760.39251709 210.93072510]
[777.17559814 208.53001404]
[784.12854004 223.99266052]
[771.19494629 234.95433044]
[757.08123779 225.56068420]
[742.45129395 222.24945068]
[727.82135010 218.93820190]
[713.19140625 215.62696838]
[698.56140137 212.31573486]
[683.93145752 209.00450134]
[669.30151367 205.69326782]
[654.67156982 202.38201904]
[647.74200439 213.65675354]
[637.66241455 222.26737976]
[625.40155029 227.36793518]
[612.14343262 228.45066833]
[599.17315674 225.39659119]
[587.75219727 218.48837280]
[578.99578857 208.38418579]
[573.76385498 196.05511475]
[572.57702637 182.69174194]
[558.03601074 179.00946045]
[543.49499512 175.32717896]
[528.95397949 171.64489746]
[514.36730957 168.14785767]
[499.73736572 164.83660889]
[485.10742188 161.52537537]
[465.97753906 169.30488586]
[450.53826904 154.42245483]
[435.79263306 151.67173767]
[421.04699707 148.92100525]
[406.30136108 146.17027283]
[391.55575562 143.41955566]
[376.81011963 140.66882324]
[362.04730225 138.01193237]
[347.26788330 135.44897461]
[332.48846436 132.88600159]
[317.70904541 130.32304382]
[302.92962646 127.76008606]
[298.59576416 129.71507263]
[292.98983765 128.98484802]
[287.80889893 124.93939209]
[273.09945679 122.00134277]
[258.39001465 119.06329346]
[243.68055725 116.12524414]
[228.90113831 113.56228638]
[214.06130981 111.37607574]
[199.22148132 109.18985748]
[190.06877136 118.23987579]
[177.18356323 120.40541840]
[165.22450256 114.67668915]
[158.64633179 102.93957520]
[143.83551025 100.56480408]
[129.02468872 98.19002533]
[124.73155975 112.99866486]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 109]
[4 108]
[5 107]
[6 106]
[7 105]
[8 104]
[9 103]
[10 102]
[12 99]
[13 98]
[14 97]
[16 95]
[17 94]
[18 93]
[20 91]
[21 90]
[22 89]
[23 88]
[34 43]
[35 42]
[36 41]
[45 60]
[46 59]
[47 58]
[48 57]
[49 56]
[111 137]
[112 136]
[114 134]
[115 133]
[116 132]
[117 131]
[118 130]
[138 245]
[139 244]
[140 243]
[143 239]
[144 238]
[145 237]
[150 236]
[151 235]
[152 234]
[153 233]
[154 230]
[155 229]
[156 228]
[157 227]
[158 226]
[160 225]
[161 224]
[162 223]
[163 222]
[164 221]
[165 220]
[170 218]
[171 217]
[172 216]
[175 215]
[176 214]
[177 213]
[178 212]
[185 203]
[186 202]
[187 201]
[188 200]
[189 199]
[190 198]
[191 197]
[192 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
