%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:51:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAUAGGGGCGGGGCCUAUGAGAUCCCGGCCUCAGGGUGGACGCAGUGGUUCUGCACUGAGGCCCUCGUCAUGGUGGCGCCUGUGUGGUACUUGGUAGCGGCGGCUCUGCUAGUCGGCUUUAUCCUCUUCCUGACUCGCAGCCGGGGCCGGGCGGCAUCAGCCGGCCAAG\
) } def
/len { sequence length } bind def

/coor [
[58.84411621 120.16285706]
[65.86377716 106.90675354]
[79.96246338 101.77991486]
[64.99346161 100.81605530]
[50.02446365 99.85219574]
[35.75563431 106.68674469]
[23.55184364 98.14761353]
[8.58284283 97.18375397]
[-6.38615799 96.21989441]
[-21.35515785 95.25603485]
[-36.32415771 94.29217529]
[-48.13433075 104.44882965]
[-63.30129623 103.25810242]
[-72.91133118 91.93631744]
[-87.88033295 90.97245789]
[-102.84932709 90.00859833]
[-111.65283966 92.58721924]
[-118.08367920 88.88703918]
[-133.03244019 87.64835358]
[-147.98121643 86.40966034]
[-162.92997742 85.17097473]
[-169.27153015 96.46923065]
[-179.38676453 104.49025726]
[-191.74301147 108.06399536]
[-204.48510742 106.69082642]
[-215.71389771 100.61112976]
[-223.76937866 90.76406097]
[-227.47598267 78.64268494]
[-242.36915588 76.85568237]
[-257.26232910 75.06867218]
[-272.15548706 73.28166962]
[-287.04867554 71.49466705]
[-301.94183350 69.70766449]
[-316.83502197 67.92065430]
[-331.72817993 66.13365173]
[-346.35186768 72.17178345]
[-358.06671143 62.97334290]
[-372.95989990 61.18633652]
[-387.85305786 59.39933014]
[-402.74624634 57.61232758]
[-417.65518188 55.96220398]
[-432.57867432 54.44910049]
[-444.66430664 64.63306427]
[-460.40396118 63.20516205]
[-470.45959473 51.01253891]
[-468.86535645 35.28886032]
[-456.56710815 25.36271286]
[-440.86114502 27.12309837]
[-431.06558228 39.52561188]
[-416.14208984 41.03871536]
[-409.14352417 38.57563782]
[-400.95922852 42.71915436]
[-386.06607056 44.50615692]
[-371.17288208 46.29316330]
[-356.27972412 48.08016586]
[-342.72131348 41.91421890]
[-329.94119263 51.24047852]
[-315.04800415 53.02748489]
[-300.15484619 54.81448746]
[-285.26165771 56.60149384]
[-270.36849976 58.38849640]
[-255.47532654 60.17550278]
[-240.58215332 61.96250534]
[-225.68898010 63.74951172]
[-215.90188599 49.62245941]
[-200.23706055 42.34000778]
[-182.95101929 43.97992706]
[-168.79101562 54.18198395]
[-161.69128418 70.22220612]
[-146.74252319 71.46089172]
[-131.79374695 72.69958496]
[-116.84498596 73.93827820]
[-101.88546753 75.03959656]
[-86.91647339 76.00345612]
[-71.94747162 76.96731567]
[-60.96478653 66.97150421]
[-45.77036285 67.73575592]
[-35.36029816 79.32318115]
[-20.39129829 80.28704071]
[-5.42229843 81.25090027]
[9.54670238 82.21475983]
[24.51570320 83.17861938]
[37.71384811 76.27512360]
[50.98832321 84.88319397]
[65.95732117 85.84705353]
[80.92632294 86.81091309]
[112.00197601 79.66154480]
[125.95065308 74.14480591]
[139.89932251 68.62805939]
[146.76034546 62.53893280]
[154.15527344 63.14068604]
[168.20294189 57.88112259]
[182.25061035 52.62155914]
[196.29827881 47.36199570]
[210.34594727 42.10243225]
[205.04666138 31.27096939]
[207.20903015 16.56537247]
[215.52825928 4.08376694]
[223.84748840 -8.39783764]
[224.36071777 -24.78895187]
[238.93836975 -32.30054092]
[252.58421326 -23.20532608]
[251.26057434 -6.85968399]
[236.32908630 -0.07861088]
[228.00987244 12.40299416]
[219.69064331 24.88459969]
[227.77915955 37.51692963]
[242.59663391 35.18402100]
[257.41412354 32.85111618]
[272.23159790 30.51820946]
[284.66046143 20.72875786]
[298.43624878 26.39247131]
[313.25372314 24.05956459]
[328.07119751 21.72665787]
[342.88867188 19.39375114]
[357.70614624 17.06084442]
[372.52362061 14.72793865]
[376.43789673 0.01065850]
[386.00485229 -11.83808804]
[399.56701660 -18.76543427]
[414.77459717 -19.57117653]
[428.99282837 -14.11571312]
[439.75827026 -3.34423804]
[445.20581055 10.87702656]
[444.39157104 26.08415985]
[437.45666504 39.64243698]
[425.60256958 49.20279694]
[410.88311768 53.10886002]
[395.84851074 50.68386841]
[383.10360718 42.34797287]
[374.85650635 29.54541206]
[360.03903198 31.87831879]
[345.22155762 34.21122742]
[330.40408325 36.54413223]
[315.58660889 38.87704086]
[300.76913452 41.20994568]
[289.40011597 50.83253098]
[274.56448364 45.33568192]
[259.74700928 47.66859055]
[244.92955017 50.00149536]
[230.11207581 52.33440399]
[215.60549927 56.15010071]
[201.55783081 61.40966415]
[187.51016235 66.66922760]
[173.46249390 71.92878723]
[159.41482544 77.18835449]
[145.41606140 82.57673645]
[131.46739197 88.09347534]
[117.51871490 93.61022186]
[112.13034058 107.60898590]
[118.78011322 121.05445099]
[131.83341980 129.99433899]
[130.54020691 144.83270264]
[137.18998718 158.27816772]
[143.83975220 171.72363281]
[150.48953247 185.16909790]
[164.42803955 193.80911255]
[163.64443970 210.18952942]
[148.94482422 217.45957947]
[135.45091248 208.14044189]
[137.04406738 191.81886292]
[130.39428711 178.37339783]
[123.74452209 164.92794800]
[117.09474945 151.48248291]
[104.51707458 143.50428772]
[105.33464813 127.70422363]
[98.68487549 114.25875854]
[99.37869263 129.24270630]
[89.84566498 140.82377625]
[75.00770569 143.02265930]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 86]
[4 85]
[5 84]
[7 82]
[8 81]
[9 80]
[10 79]
[11 78]
[14 75]
[15 74]
[16 73]
[18 72]
[19 71]
[20 70]
[21 69]
[28 64]
[29 63]
[30 62]
[31 61]
[32 60]
[33 59]
[34 58]
[35 57]
[37 55]
[38 54]
[39 53]
[40 52]
[41 50]
[42 49]
[87 149]
[88 148]
[89 147]
[91 146]
[92 145]
[93 144]
[94 143]
[95 142]
[97 106]
[98 105]
[99 104]
[107 141]
[108 140]
[109 139]
[110 138]
[112 136]
[113 135]
[114 134]
[115 133]
[116 132]
[117 131]
[150 167]
[151 166]
[153 164]
[154 163]
[155 162]
[156 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
