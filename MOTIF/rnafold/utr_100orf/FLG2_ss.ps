%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:13:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCUGCAAGCUGCAUCAGGCUUUAUCCUACUUGUUCCUUUGGUGAACCAGGUUCACUUAAACUUGCAAAAAGAUGACCGACCUCUUGAGAAGUGUUGUCACCGUAAUUGAUGUUUUCUACAAAUACACCAAGCAAGAUGGGGAGUGUGGCACACUGAGCAAGGGUGAACUAA\
) } def
/len { sequence length } bind def

/coor [
[154.93040466 666.80914307]
[153.03965759 651.92877197]
[151.14891052 637.04846191]
[149.25816345 622.16809082]
[147.36741638 607.28771973]
[145.34242249 592.42504883]
[143.18333435 577.58123779]
[131.58358765 564.43225098]
[138.49516296 547.38165283]
[136.06843567 532.57922363]
[131.86880493 526.46606445]
[133.73403931 517.48791504]
[131.57495117 502.64410400]
[119.52017975 493.97128296]
[117.11910248 478.94830322]
[126.29770660 466.36294556]
[124.13861847 451.51916504]
[121.97953033 436.67535400]
[112.49084473 425.19433594]
[118.16118622 410.42416382]
[116.00209808 395.58035278]
[113.84300995 380.73657227]
[111.68391418 365.89276123]
[109.05752563 363.49157715]
[107.48036194 359.68472290]
[107.60671997 354.98712158]
[109.83245850 350.18914795]
[108.48016357 335.25024414]
[107.12786865 320.31130981]
[105.77557373 305.37240601]
[104.28846741 290.44628906]
[102.66668701 275.53424072]
[101.04489899 260.62216187]
[99.42311096 245.71008301]
[97.80133057 230.79801941]
[95.66578674 228.93173218]
[94.15415192 226.09254456]
[93.64623260 222.51872253]
[94.42675781 218.58335876]
[96.64080811 214.75686646]
[96.09927368 199.76664734]
[95.55773926 184.77642822]
[95.01620483 169.78620911]
[94.47466278 154.79598999]
[93.93312836 139.80577087]
[71.32772064 133.98231506]
[53.81628036 115.32250214]
[48.52690125 87.98830414]
[59.39450073 59.92223358]
[46.27083206 52.65798569]
[33.14715958 45.39373779]
[20.02349091 38.12949371]
[6.89982128 30.86524582]
[-6.22384834 23.60099792]
[-21.34214211 28.20672607]
[-35.24964142 20.69959450]
[-39.69527054 5.53345013]
[-32.04152298 -8.29390144]
[-16.82922363 -12.57893753]
[-3.08356476 -4.77942371]
[1.04039872 10.47732830]
[14.16406822 17.74157524]
[27.28773880 25.00582314]
[40.41140747 32.27006912]
[53.53507996 39.53431702]
[66.65874481 46.79856491]
[73.08517456 42.93191147]
[65.05073547 30.26511192]
[57.62303543 17.23325729]
[70.47608948 9.50027180]
[78.51016235 22.16684341]
[85.93803406 35.19860077]
[92.36446381 31.33194923]
[92.09365082 16.33439255]
[91.82283783 1.33683836]
[91.55202484 -13.66071701]
[91.28121185 -28.65827179]
[91.01039886 -43.65582657]
[87.90850067 -49.55773926]
[88.23056030 -55.27531052]
[91.01039886 -59.19745255]
[91.28121185 -74.19500732]
[83.79432678 -88.13262177]
[91.76014709 -100.71812439]
[92.03096008 -115.71568298]
[83.62004852 -129.79362488]
[91.84169769 -143.98294067]
[108.23816681 -143.68687439]
[115.94218445 -129.20999146]
[107.02851105 -115.44487000]
[106.75769806 -100.44731140]
[114.26396179 -87.58242798]
[106.27877045 -73.92419434]
[106.00795746 -58.92663956]
[106.00795746 -43.92663956]
[106.27877045 -28.92908478]
[106.54958344 -13.93152905]
[106.82039642 1.06602609]
[107.09120941 16.06358147]
[107.36202240 31.06113625]
[113.82308960 34.86961746]
[120.77564240 21.57819176]
[127.72819519 8.28676414]
[134.68074036 -5.00466299]
[139.81948853 -19.09697533]
[154.79927063 -19.87565804]
[161.37147522 -6.39210939]
[151.53068542 4.92754364]
[143.26887512 17.44722366]
[135.00704956 29.96690369]
[126.74523926 42.48658371]
[133.20631409 46.29506683]
[146.45898438 39.26893997]
[159.71166992 32.24281311]
[165.77626038 17.39019012]
[181.20967102 13.00964832]
[194.17272949 22.46156311]
[194.72128296 38.49523544]
[182.43450928 48.81100464]
[166.73779297 45.49549103]
[153.48512268 52.52161789]
[140.23243713 59.54774475]
[150.23381042 81.03261566]
[150.22813416 103.32278442]
[141.38256836 122.24057770]
[126.41939545 134.71276855]
[108.92334747 139.26422119]
[109.46488953 154.25445557]
[110.00642395 169.24467468]
[110.54795837 184.23489380]
[111.08949280 199.22511292]
[111.63103485 214.21533203]
[112.71339417 229.17623901]
[114.33518219 244.08830261]
[115.95697021 259.00036621]
[117.57875061 273.91244507]
[119.20053864 288.82452393]
[123.25183105 297.05087280]
[120.71449280 304.02011108]
[122.06678772 318.95901489]
[123.41908264 333.89794922]
[124.77137756 348.83685303]
[126.52771759 363.73367310]
[128.68679810 378.57748413]
[130.84590149 393.42126465]
[133.00498962 408.26507568]
[142.64810181 420.80783081]
[136.82333374 434.51626587]
[138.98242188 449.36007690]
[141.14151001 464.20385742]
[153.52510071 473.65289307]
[155.50326538 488.73739624]
[146.41874695 500.48501587]
[148.57783508 515.32879639]
[150.87083435 530.15252686]
[153.29756165 544.95489502]
[163.31341553 553.11761475]
[165.01419067 565.52099609]
[158.02713013 575.42211914]
[160.18621826 590.26593018]
[164.53186035 598.34069824]
[162.24777222 605.39697266]
[164.13851929 620.27734375]
[166.02926636 635.15771484]
[167.92001343 650.03802490]
[169.81076050 664.91839600]
[183.47814941 672.26568604]
[190.18635559 686.25781250]
[187.35592651 701.51452637]
[176.07524109 712.16937256]
[160.68193054 714.12530518]
[147.09504700 706.63018799]
[140.53901672 692.56610107]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 166]
[2 165]
[3 164]
[4 163]
[5 162]
[6 160]
[7 159]
[9 156]
[10 155]
[12 154]
[13 153]
[16 150]
[17 149]
[18 148]
[20 146]
[21 145]
[22 144]
[23 143]
[27 142]
[28 141]
[29 140]
[30 139]
[31 137]
[32 136]
[33 135]
[34 134]
[35 133]
[40 132]
[41 131]
[42 130]
[43 129]
[44 128]
[45 127]
[49 66]
[50 65]
[51 64]
[52 63]
[53 62]
[54 61]
[73 100]
[74 99]
[75 98]
[76 97]
[77 96]
[78 95]
[81 94]
[82 93]
[84 91]
[85 90]
[112 122]
[113 121]
[114 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
