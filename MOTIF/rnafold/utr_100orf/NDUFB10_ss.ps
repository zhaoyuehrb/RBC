%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:54:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGCCGCCCUCGGCGUCCUCUGUAGCGGGCGACCUAGGCCGCGGGACCCGGACGGAGGUAGAGGCCAGGGCAGCGCGUCCGGGAGCGGAGUCCGCGCCCGCCGCCGCCAUGCCGGACAGCUGGGACAAGGAUGUGUACCCUGAGCCCCCGCGCCGCACGCCGGUGCAGCCCAAUCCCAUCGUCUACAUGAUGAAAGCGUUCGACCUCA\
) } def
/len { sequence length } bind def

/coor [
[-72.34627533 120.90650177]
[-79.33720398 113.68490601]
[-84.31777954 104.85779572]
[-86.92770386 94.97721863]
[-100.80726624 100.66560364]
[-110.64244843 113.05833435]
[-125.35322571 110.72548676]
[-139.23278809 116.41386414]
[-153.11235046 122.10224915]
[-166.99192810 127.79062653]
[-180.87149048 133.47901917]
[-187.62600708 139.62951660]
[-195.00148010 139.14695740]
[-208.96458435 144.62707520]
[-222.92768860 150.10719299]
[-229.97380066 168.92214966]
[-248.30207825 176.37542725]
[-265.92691040 168.07762146]
[-279.63009644 174.17866516]
[-293.33328247 180.27970886]
[-307.03646851 186.38076782]
[-320.73965454 192.48181152]
[-334.44284058 198.58287048]
[-348.14602661 204.68391418]
[-353.48873901 216.42407227]
[-365.02838135 221.22334290]
[-376.36883545 217.01235962]
[-390.16174316 222.90773010]
[-403.95465088 228.80311584]
[-417.74758911 234.69848633]
[-421.28988647 247.69384766]
[-431.52078247 256.15261841]
[-444.56228638 257.15927124]
[-455.63555908 250.56961060]
[-469.51513672 256.25799561]
[-473.06295776 271.36404419]
[-484.83428955 281.47421265]
[-500.30279541 282.70092773]
[-513.52050781 274.57250977]
[-519.40502930 260.21450806]
[-515.69354248 245.14782715]
[-503.81320190 235.16595459]
[-488.33230591 234.10710144]
[-475.20352173 242.37843323]
[-461.32394409 236.69004822]
[-455.49911499 220.91352844]
[-439.75643921 214.09661865]
[-423.64294434 220.90556335]
[-409.85003662 215.01019287]
[-396.05712891 209.11482239]
[-382.26422119 203.21943665]
[-372.51034546 188.63116455]
[-354.24707031 190.98072815]
[-340.54388428 184.87968445]
[-326.84069824 178.77862549]
[-313.13751221 172.67758179]
[-299.43432617 166.57653809]
[-285.73114014 160.47547913]
[-272.02798462 154.37443542]
[-271.06649780 144.15318298]
[-265.90838623 135.18341064]
[-257.42642212 129.11735535]
[-247.11238098 127.10430908]
[-236.81483459 129.57334900]
[-228.40780640 136.14408875]
[-214.44470215 130.66397095]
[-200.48159790 125.18385315]
[-186.55987549 119.59944916]
[-172.68029785 113.91106415]
[-158.80073547 108.22268677]
[-144.92117310 102.53430176]
[-131.04161072 96.84591675]
[-122.19918823 84.86005402]
[-106.49565125 86.78603363]
[-92.61608887 81.09765625]
[-87.13597107 67.13455200]
[-93.44132996 53.52416992]
[-99.74668884 39.91378784]
[-111.56545258 34.74728775]
[-116.53681183 23.28073883]
[-112.49595642 11.87855625]
[-118.59700012 -1.82462525]
[-124.69805145 -15.52780724]
[-130.79910278 -29.23098946]
[-143.48051453 -38.69102859]
[-141.58879089 -53.46501541]
[-147.68983459 -67.16819763]
[-153.79087830 -80.87137604]
[-159.89193726 -94.57456207]
[-171.85789490 -106.58506012]
[-163.62927246 -121.40822601]
[-147.10749817 -117.60464478]
[-146.18875122 -100.67561340]
[-140.08770752 -86.97242737]
[-133.98664856 -73.26924896]
[-127.88560486 -59.56606674]
[-115.64057922 -51.08616638]
[-117.09592438 -35.33203888]
[-110.99487305 -21.62885666]
[-104.89382172 -7.92567492]
[-98.79277039 5.77750683]
[-84.06021881 15.31203175]
[-86.13630676 33.60842896]
[-79.83094788 47.21881104]
[-73.52558899 60.82918930]
[-65.55799103 55.79018784]
[-56.72330475 52.78325653]
[-47.52506638 51.93299484]
[-38.47679138 53.24239731]
[-30.07331085 56.59510422]
[-22.76371384 61.76427078]
[-16.92736435 68.42737579]
[-12.85430145 76.18608093]
[-10.73099709 84.58992004]
[4.26228952 85.03865051]
[19.25557518 85.48738098]
[34.24886322 85.93611908]
[49.24214935 86.38484955]
[56.02253342 83.44260406]
[64.45590210 86.95410919]
[79.44079590 87.62707520]
[94.42568970 88.30004883]
[108.72581482 83.77162933]
[120.59188080 74.59577179]
[132.45794678 65.41990662]
[132.12852478 50.01868057]
[140.82928467 37.52268219]
[155.05157471 32.60427856]
[169.27264404 36.95160675]
[181.13870239 27.77574348]
[193.00477600 18.59988022]
[192.40597534 3.09436178]
[201.06343079 -9.78307056]
[215.64813232 -15.08078289]
[230.55200195 -10.76169682]
[240.04417419 1.51341248]
[240.47471619 17.02451324]
[231.67808533 29.80727196]
[217.03675842 34.94645691]
[202.18063354 30.46594429]
[190.31457520 39.64181137]
[178.44850159 48.81767273]
[179.07817078 63.67504501]
[170.73982239 76.20246124]
[156.45677185 81.47953796]
[141.63380432 77.28597260]
[129.76774597 86.46183777]
[117.90167999 95.63769531]
[120.16588593 102.78775787]
[124.69430542 117.08787537]
[126.95851135 124.23793793]
[141.94340515 124.91091156]
[156.92829895 125.58388519]
[171.91319275 126.25685883]
[186.89810181 126.92982483]
[201.88299561 127.60279846]
[214.64710999 117.88390350]
[230.16810608 121.94322205]
[236.53961182 136.66679382]
[228.87394714 150.75994873]
[213.05155945 153.41163635]
[201.21002197 142.58769226]
[186.22512817 141.91471863]
[171.24023438 141.24174500]
[156.25532532 140.56878662]
[141.27043152 139.89581299]
[126.28553772 139.22283936]
[123.08204651 146.00425720]
[136.64488220 152.41123962]
[150.20771790 158.81822205]
[163.77055359 165.22520447]
[177.33328247 171.63243103]
[170.92584229 185.19505310]
[157.36357117 178.78805542]
[143.80073547 172.38105774]
[130.23789978 165.97407532]
[116.67505646 159.56709290]
[113.47156525 166.34851074]
[123.50852203 177.49568176]
[133.54548645 188.64285278]
[143.58244324 199.79002380]
[153.61940002 210.93719482]
[163.65635681 222.08436584]
[179.41159058 226.63462830]
[183.08537292 242.61697388]
[170.89842224 253.59013367]
[155.38764954 248.26588440]
[152.50918579 232.12132263]
[142.47222900 220.97415161]
[132.43527222 209.82698059]
[122.39831543 198.67980957]
[112.36135101 187.53263855]
[102.32439423 176.38546753]
[82.12693024 150.21395874]
[80.22928619 122.80129242]
[93.75271606 103.28495026]
[78.76782227 102.61197662]
[63.78292847 101.93900299]
[48.79341507 101.37813568]
[33.80012894 100.92940521]
[18.80684471 100.48066711]
[3.81355739 100.03193665]
[-11.17972946 99.58320618]
[-14.20556927 108.45927429]
[-19.42286491 116.35268402]
[-26.52832985 122.72752380]
[-35.08903503 127.13828278]
[-44.56868362 129.26083374]
[-54.36116028 128.91589355]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 75]
[5 74]
[7 72]
[8 71]
[9 70]
[10 69]
[11 68]
[13 67]
[14 66]
[15 65]
[18 59]
[19 58]
[20 57]
[21 56]
[22 55]
[23 54]
[24 53]
[27 51]
[28 50]
[29 49]
[30 48]
[34 45]
[35 44]
[76 105]
[77 104]
[78 103]
[81 101]
[82 100]
[83 99]
[84 98]
[86 96]
[87 95]
[88 94]
[89 93]
[114 203]
[115 202]
[116 201]
[117 200]
[118 199]
[120 198]
[121 197]
[122 196]
[123 148]
[124 147]
[125 146]
[129 142]
[130 141]
[131 140]
[151 167]
[152 166]
[153 165]
[154 164]
[155 163]
[156 162]
[178 193]
[179 192]
[180 191]
[181 190]
[182 189]
[183 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
