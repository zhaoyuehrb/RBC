%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:09:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGGAGUCCCCGGCACACAUCCUGUGUCCAUGUUUGGGCAUUUACGUCACGGCGGCAGGGCCGGGGCCUCCCAAAAUGGCAGUGGCCCGGGGAGUCGGAAGCCCGGAGCCAGCGCCGCCGCAGCUAUAUAAGUGGGGGGGCUGUGGGCUGGGGGAGCCCGGCAGCGCUUUGGAGA\
) } def
/len { sequence length } bind def

/coor [
[62.41447067 127.91921997]
[57.56567001 118.57115936]
[43.03161240 122.28075409]
[28.49755096 125.99034882]
[13.96349239 129.69995117]
[-0.57056731 133.40954590]
[-12.02858448 144.31938171]
[-26.27399826 139.96995544]
[-40.80805588 143.67955017]
[-55.34211731 147.38914490]
[-69.87617493 151.09875488]
[-84.41023254 154.80834961]
[-98.94429779 158.51794434]
[-113.47835541 162.22753906]
[-101.28837585 170.96850586]
[-98.68653870 185.74113464]
[-107.15662384 198.12086487]
[-121.86829376 201.04776001]
[-134.43176270 192.85269165]
[-137.68231201 178.20912170]
[-129.76501465 165.46716309]
[-144.61233521 167.60188293]
[-159.45965576 169.73660278]
[-174.30697632 171.87132263]
[-189.15429688 174.00604248]
[-200.01644897 217.05056763]
[-213.76997375 223.03726196]
[-227.52349854 229.02395630]
[-241.27703857 235.01063538]
[-255.03056335 240.99732971]
[-264.33953857 254.49826050]
[-280.66229248 252.91740417]
[-287.20739746 237.88099670]
[-277.24182129 224.85720825]
[-261.01724243 227.24380493]
[-247.26371765 221.25711060]
[-233.51019287 215.27041626]
[-219.75666809 209.28373718]
[-206.00314331 203.29704285]
[-206.80485535 195.84001160]
[-221.71891785 197.44343567]
[-235.43658447 191.37504578]
[-223.32234192 182.52938843]
[-208.40827942 180.92594910]
[-209.20999146 173.46893311]
[-223.92176819 170.54257202]
[-238.63356018 167.61622620]
[-253.98002625 173.39704895]
[-266.48626709 162.78924561]
[-263.28695679 146.70520020]
[-247.67326355 141.69081116]
[-235.70719910 152.90443420]
[-220.99542236 155.83079529]
[-206.28364563 158.75715637]
[-191.28901672 159.15872192]
[-176.44169617 157.02400208]
[-161.59437561 154.88928223]
[-146.74705505 152.75456238]
[-131.89973450 150.61984253]
[-117.18795013 147.69348145]
[-102.65389252 143.98388672]
[-88.11983490 140.27429199]
[-73.58577728 136.56468201]
[-59.05171585 132.85508728]
[-44.51765442 129.14549255]
[-29.98359489 125.43589783]
[-19.56515121 114.79139709]
[-4.28016472 118.87548828]
[10.25389481 115.16588593]
[24.78795433 111.45629120]
[39.32201385 107.74669647]
[53.85607147 104.03709412]
[54.75142670 90.09411621]
[59.76360321 77.05239868]
[68.43659210 66.09850311]
[79.98129272 58.22905731]
[93.34735107 54.16003418]
[107.31867981 54.26164627]
[112.05567169 40.02925873]
[116.79267120 25.79686928]
[109.97146606 11.79297543]
[114.97820282 -2.57321024]
[128.37080383 -8.98987865]
[133.10780334 -23.22226715]
[137.84480286 -37.45465469]
[142.58178711 -51.68704605]
[147.19157410 -65.96114349]
[151.67378235 -80.27581787]
[156.15599060 -94.59048462]
[160.63818359 -108.90515900]
[165.12039185 -123.21983337]
[154.66273499 -134.46852112]
[151.24610901 -149.44256592]
[155.78959656 -164.11404419]
[167.07099915 -174.53640747]
[182.05569458 -177.90606689]
[196.71286011 -173.31661987]
[207.09979248 -162.00259399]
[210.42247009 -147.00741577]
[205.78710938 -132.36471558]
[194.44058228 -122.01328278]
[179.43505859 -118.73762512]
[174.95286560 -104.42295837]
[170.47065735 -90.10828400]
[165.98844910 -75.79360962]
[161.50624084 -61.47893906]
[162.51144409 -54.13233185]
[156.81417847 -46.95005035]
[152.07717896 -32.71766281]
[147.34019470 -18.48527336]
[142.60319519 -4.25288486]
[149.47917175 8.90981388]
[144.87792969 23.41095924]
[131.02505493 30.53386307]
[126.28806305 44.76625061]
[121.55107117 58.99863815]
[139.48579407 71.71486664]
[150.20262146 92.08633423]
[164.91439819 89.15998077]
[179.62619019 86.23362732]
[194.33796692 83.30727386]
[199.19886780 68.73788452]
[210.70387268 58.56288910]
[225.75817871 55.51931381]
[240.31227112 60.42586517]
[250.45114136 71.96270752]
[253.44750977 87.02648163]
[248.49536133 101.56510925]
[236.92680359 111.66777802]
[221.85371399 114.61692047]
[207.33067322 109.61922455]
[197.26431274 98.01905060]
[182.55253601 100.94540405]
[167.84075928 103.87176514]
[153.12898254 106.79811859]
[149.16055298 121.26364899]
[160.31965637 131.28733826]
[171.47877502 141.31101990]
[186.91569519 144.77684021]
[191.21360779 159.03787231]
[202.37272644 169.06156921]
[213.53182983 179.08525085]
[224.69093323 189.10893250]
[235.85005188 199.13262939]
[247.09817505 209.05632019]
[258.43441772 218.87922668]
[269.77066040 228.70213318]
[281.10690308 238.52505493]
[292.44314575 248.34796143]
[308.48348999 248.64227295]
[318.13970947 261.45388794]
[314.00436401 276.95480347]
[299.24975586 283.25405884]
[285.19433594 275.51940918]
[282.62023926 259.68420410]
[271.28399658 249.86129761]
[259.94775391 240.03837585]
[248.61149597 230.21546936]
[237.27525330 220.39256287]
[230.13795471 218.38211060]
[225.82635498 210.29173279]
[214.66725159 200.26805115]
[203.50814819 190.24435425]
[192.34902954 180.22067261]
[181.18992615 170.19699097]
[166.55117798 167.44813538]
[161.45507812 152.47012329]
[150.29597473 142.44644165]
[139.13687134 132.42276001]
[130.55810547 139.98165894]
[120.59870911 145.36436462]
[109.79283905 148.33979797]
[98.70741272 148.80438232]
[87.91240692 146.78494263]
[77.95150757 142.43476868]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 72]
[3 71]
[4 70]
[5 69]
[6 68]
[8 66]
[9 65]
[10 64]
[11 63]
[12 62]
[13 61]
[14 60]
[21 59]
[22 58]
[23 57]
[24 56]
[25 55]
[26 39]
[27 38]
[28 37]
[29 36]
[30 35]
[45 54]
[46 53]
[47 52]
[78 116]
[79 115]
[80 114]
[83 111]
[84 110]
[85 109]
[86 108]
[87 106]
[88 105]
[89 104]
[90 103]
[91 102]
[118 135]
[119 134]
[120 133]
[121 132]
[136 169]
[137 168]
[138 167]
[140 165]
[141 164]
[142 163]
[143 162]
[144 161]
[145 159]
[146 158]
[147 157]
[148 156]
[149 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
