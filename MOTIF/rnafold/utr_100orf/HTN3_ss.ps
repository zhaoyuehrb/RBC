%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:24:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAGAUUUCAACGUGUUUAAAUACAUCAGCCAUCUAGGAAAGGACAUCUCUUGAGACUUCACUUCAGCUUCACUGACUUCUGGAUUCUCCUCUUGAGUAAAAGGACUCAGCCAACUAUGAAGUUUUUUGUUUUUGCUUUAAUCUUGGCUCUCAUGCUUUCCAUGACUGGAGCUGAUUCACAUGCAAAGAGACAUCAUGGGUAUAAAAGAAAAUUCC\
) } def
/len { sequence length } bind def

/coor [
[87.34982300 305.26852417]
[89.81795502 286.04461670]
[90.03411102 271.04617310]
[90.25026703 256.04772949]
[90.46642303 241.04928589]
[82.91333008 228.21183777]
[90.84869385 214.52459717]
[91.06484985 199.52615356]
[91.28101349 184.52770996]
[91.49716949 169.52926636]
[86.41326141 170.25198364]
[81.18968201 170.59727478]
[75.85478210 170.54937744]
[70.43843079 170.09465027]
[62.08242416 182.55166626]
[53.72641754 195.00866699]
[45.37041092 207.46568298]
[48.67126846 222.92141724]
[40.00647354 236.13871765]
[24.51670074 239.27598572]
[11.39175224 230.47193909]
[8.41843033 214.94985962]
[17.36075211 201.91873169]
[32.91339874 199.10968018]
[41.26940536 186.65266418]
[49.62541199 174.19564819]
[57.98141861 161.73864746]
[52.75509262 156.35946655]
[38.21183777 160.03286743]
[42.30243683 145.60112000]
[37.07611084 140.22195435]
[24.38346863 148.21549988]
[19.44180870 163.47851562]
[4.37746668 168.99623108]
[-9.25348377 160.53591919]
[-10.99454308 144.58761597]
[0.48987931 133.38549805]
[16.38991737 135.52285767]
[29.08255959 127.52930450]
[28.12127304 121.92089844]
[27.59640884 116.32310486]
[27.50099182 110.76940155]
[12.80524063 113.77522278]
[-1.89050913 116.78103638]
[-16.58625984 119.78684998]
[-28.49154091 131.06498718]
[-44.13211823 126.13504028]
[-47.41830826 110.06851959]
[-34.96955490 99.39328766]
[-19.59207535 105.09110260]
[-4.89632511 102.08528900]
[9.79942513 99.07946777]
[24.49517441 96.07365417]
[26.75625229 81.24504852]
[13.62416840 73.99602509]
[0.49208441 66.74700165]
[-12.63999939 59.49797058]
[-28.46085930 59.60257721]
[-35.86404037 46.67809677]
[-48.99612427 39.42907333]
[-62.12820816 32.18004608]
[-75.26029205 24.93102074]
[-93.25342560 30.87368393]
[-109.59346771 21.92597198]
[-114.11989594 4.18436003]
[-127.45542908 -2.68321514]
[-140.79095459 -9.55078983]
[-154.12649536 -16.41836548]
[-169.78254700 -12.91588974]
[-182.19146729 -23.08439064]
[-181.83416748 -39.12346649]
[-168.98475647 -48.72930527]
[-153.50019836 -44.53313828]
[-147.25891113 -29.75389671]
[-133.92338562 -22.88632202]
[-120.58785248 -16.01874733]
[-107.25231934 -9.15117264]
[-97.40447998 -14.89984798]
[-85.88525391 -15.18616486]
[-75.55123138 -9.82348537]
[-69.02085114 -0.04037439]
[-68.01126862 11.79893780]
[-54.87918472 19.04796219]
[-41.74710083 26.29698753]
[-28.61501503 33.54601288]
[-13.73344994 32.92290878]
[-5.39097404 46.36588669]
[7.74110985 53.61491394]
[20.87319374 60.86394119]
[34.00527954 68.11296844]
[42.58924103 55.75356674]
[53.40987778 45.53830719]
[65.95755768 37.85404968]
[79.66001892 32.97088623]
[76.86628723 18.23334694]
[74.07255554 3.49580789]
[71.27882385 -11.24173164]
[68.48509216 -25.97927094]
[65.69136047 -40.71681213]
[52.49071884 -49.40695190]
[49.38318634 -64.90271759]
[58.21240616 -78.01074982]
[73.74015808 -80.95427704]
[86.75411224 -71.98696136]
[89.53330231 -56.42895508]
[80.42890167 -43.51054001]
[83.22263336 -28.77300262]
[86.01636505 -14.03546238]
[88.81009674 0.70207691]
[91.60382843 15.43961620]
[94.39755249 30.17715645]
[113.70656586 31.30686378]
[131.97048950 37.67420578]
[147.79676819 48.79369354]
[159.97869873 63.81749725]
[167.58743286 81.60010529]
[182.39935303 79.23223877]
[197.21128845 76.86437988]
[212.02320862 74.49651337]
[226.83514404 72.12864685]
[241.64707947 69.76078033]
[254.05282593 59.94203186]
[267.84191895 65.57321930]
[282.65383911 63.20535660]
[297.46575928 60.83749390]
[312.27770996 58.46962738]
[327.08963013 56.10176086]
[316.63665771 45.34372330]
[318.38333130 30.44576836]
[331.04122925 22.39731979]
[345.27328491 27.13528633]
[350.58129883 41.16472626]
[343.04971313 54.13692093]
[357.99368286 52.84154892]
[372.93765259 51.54617691]
[387.88162231 50.25080490]
[402.82556152 48.95543289]
[406.80838013 34.34849167]
[415.53198242 22.00869370]
[427.92776489 13.41423035]
[442.48861694 9.58653545]
[457.45227051 10.96892071]
[471.01443481 17.37532234]
[481.54650879 28.01507568]
[487.79107666 41.59045410]
[502.73504639 40.29508209]
[517.67901611 38.99971008]
[532.62298584 37.70433807]
[547.56689453 36.40896225]
[562.51086426 35.11359024]
[577.45483398 33.81821823]
[592.36730957 32.20013809]
[607.24133301 30.26010704]
[622.11535645 28.32007599]
[636.98937988 26.38004303]
[651.86340332 24.44001198]
[662.74536133 12.65180492]
[678.73553467 13.95352650]
[687.56756592 27.34660721]
[682.46630859 42.55702209]
[667.34497070 47.91664124]
[653.80340576 39.31402588]
[638.92938232 41.25405884]
[624.05535889 43.19408798]
[609.18133545 45.13412094]
[594.30737305 47.07415390]
[591.88110352 49.62583160]
[588.10046387 51.13162994]
[583.46929932 50.96868896]
[578.75024414 48.76218033]
[563.80627441 50.05755234]
[548.86230469 51.35292816]
[533.91833496 52.64830017]
[518.97436523 53.94367218]
[504.03039551 55.23904419]
[489.08645630 56.53441620]
[485.27096558 70.98181915]
[476.72677612 83.27513885]
[464.46923828 91.91964722]
[449.96664429 95.85621643]
[434.96432495 94.59111786]
[421.27459717 88.25780487]
[410.55776978 77.60314178]
[404.12094116 63.89939499]
[389.17697144 65.19476318]
[374.23303223 66.49013519]
[359.28906250 67.78550720]
[344.34509277 69.08087921]
[329.45748901 70.91368866]
[314.64556885 73.28155518]
[299.83361816 75.64942169]
[285.02169800 78.01728821]
[270.20977783 80.38514709]
[258.86346436 90.03453827]
[244.01493835 84.57270813]
[229.20300293 86.94057465]
[214.39108276 89.30844116]
[199.57914734 91.67630768]
[184.76722717 94.04416656]
[169.95529175 96.41203308]
[169.55465698 108.29258728]
[167.15087891 119.93431854]
[162.81318665 131.00195312]
[156.66650391 141.17674255]
[148.88786316 150.16566467]
[139.70127869 157.70983887]
[129.37130737 163.59201050]
[118.19547272 167.64274597]
[106.49561310 169.74542236]
[106.27944946 184.74386597]
[106.06329346 199.74230957]
[105.84713745 214.74075317]
[113.38476562 228.65098572]
[105.46486664 241.26544189]
[105.24871063 256.26388550]
[105.03255463 271.26232910]
[104.81639099 286.26077271]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 217]
[3 216]
[4 215]
[5 214]
[7 212]
[8 211]
[9 210]
[10 209]
[14 27]
[15 26]
[16 25]
[17 24]
[31 39]
[32 38]
[42 53]
[43 52]
[44 51]
[45 50]
[54 90]
[55 89]
[56 88]
[57 87]
[59 85]
[60 84]
[61 83]
[62 82]
[65 77]
[66 76]
[67 75]
[68 74]
[94 111]
[95 110]
[96 109]
[97 108]
[98 107]
[99 106]
[116 200]
[117 199]
[118 198]
[119 197]
[120 196]
[121 195]
[123 193]
[124 192]
[125 191]
[126 190]
[127 189]
[133 188]
[134 187]
[135 186]
[136 185]
[137 184]
[145 176]
[146 175]
[147 174]
[148 173]
[149 172]
[150 171]
[151 170]
[152 166]
[153 165]
[154 164]
[155 163]
[156 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
