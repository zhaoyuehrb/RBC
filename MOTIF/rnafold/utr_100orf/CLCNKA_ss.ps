%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:06:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCACUGGAGCUGGGAGCAAAGGAGGCUCUGUGAGAGGAGGGCCAGUUCAGCCGCAGCAGGAGGACUGACAGGGGCCUGAUGGAGGAGUUGGUGGGGCUGCGUGAGGGCUUCUCAGGGGACCCUGUGACUCUGCAGGAGCUGUGGGGCCCCUGUCCCCACAUCCGCCGAGCCAUCCAAG\
) } def
/len { sequence length } bind def

/coor [
[10.87345886 415.41177368]
[0.65072399 416.76031494]
[-4.93885851 430.67996216]
[-10.52844048 444.59960938]
[-8.49088860 460.28906250]
[-20.41359711 469.21643066]
[-26.00317955 483.13607788]
[-18.47342491 496.84143066]
[-21.56562614 512.17022705]
[-33.81973648 521.88470459]
[-49.44974136 521.39794922]
[-61.07563400 510.93981934]
[-63.20801544 495.44830322]
[-54.84004593 482.23803711]
[-39.92282486 477.54650879]
[-34.33324432 463.62686157]
[-36.77059937 448.93304443]
[-24.44808769 439.01000977]
[-18.85850525 425.09036255]
[-13.26892281 411.17071533]
[-22.22931290 393.89819336]
[-15.53507233 375.30395508]
[2.93886328 367.46899414]
[7.79639292 353.27731323]
[12.65392303 339.08560181]
[17.38810921 324.85226440]
[21.99859619 310.57839966]
[26.60908318 296.30453491]
[31.21957016 282.03067017]
[35.83005524 267.75677490]
[32.37923431 253.26744080]
[43.98368454 242.51350403]
[48.59417343 228.23962402]
[53.20465851 213.96575928]
[52.26606750 206.61444092]
[58.02101517 199.48539734]
[62.87854385 185.29368591]
[54.17613602 173.23524475]
[54.24372482 158.18667603]
[63.26497269 145.92002869]
[77.94912720 141.26365662]
[82.80665588 127.07196045]
[87.66418457 112.88025665]
[79.15660095 101.76493073]
[80.72051239 85.70430756]
[66.95109558 79.75425720]
[53.18167496 73.80420685]
[39.41225433 67.85416412]
[25.64283562 61.90410995]
[11.87341690 55.95406342]
[-0.40010577 59.97629547]
[-11.75566769 54.71639252]
[-16.32149124 43.49637604]
[-29.98556709 37.30823898]
[-44.68569946 43.11182785]
[-59.15056229 36.74446487]
[-64.79840851 21.98379517]
[-58.27846909 7.58706045]
[-43.45891190 2.09558988]
[-29.13191414 8.76737499]
[-23.79743195 23.64416313]
[-10.13335609 29.83229828]
[7.19931126 27.15966034]
[17.82346725 42.18464279]
[31.59288597 48.13469315]
[45.36230469 54.08473969]
[59.13172531 60.03479004]
[72.90114594 65.98484039]
[86.67056274 71.93489075]
[101.37274170 68.96067047]
[111.74674225 58.12646103]
[122.12074280 47.29225540]
[132.49475098 36.45804596]
[142.86874390 25.62383652]
[153.24275208 14.78962612]
[163.61674500 3.95541739]
[173.99075317 -6.87879181]
[184.36476135 -17.71300125]
[194.73875427 -28.54721069]
[198.69445801 -43.86592484]
[213.08514404 -47.70746994]
[223.45913696 -58.54167557]
[233.83314514 -69.37588501]
[244.20715332 -80.21009827]
[247.60365295 -103.81938934]
[269.91900635 -109.91374207]
[279.11056519 -121.76766205]
[288.30212402 -133.62158203]
[297.49365234 -145.47550964]
[306.68521118 -157.32942200]
[315.87677002 -169.18334961]
[325.06829834 -181.03726196]
[324.22921753 -193.92578125]
[332.15124512 -203.61375427]
[344.15481567 -205.24165344]
[353.55072021 -216.93426514]
[362.94662476 -228.62687683]
[372.34249878 -240.31947327]
[381.63659668 -252.09318542]
[390.82812500 -263.94711304]
[387.60989380 -277.04263306]
[392.45892334 -289.41687012]
[403.39233398 -296.62493896]
[416.28677368 -296.21728516]
[425.68267822 -307.90988159]
[435.07858276 -319.60247803]
[444.47448730 -331.29510498]
[444.17395020 -347.33532715]
[456.61877441 -357.45986938]
[472.26232910 -353.90200806]
[479.10424805 -339.39105225]
[471.89596558 -325.05856323]
[456.16708374 -321.89920044]
[446.77117920 -310.20657349]
[437.37527466 -298.51397705]
[427.97940063 -286.82138062]
[430.51904297 -270.20870972]
[420.06243896 -256.62399292]
[402.68206787 -254.75555420]
[393.49050903 -242.90164185]
[391.87213135 -235.66950989]
[384.03512573 -230.92356873]
[374.63922119 -219.23097229]
[365.24331665 -207.53836060]
[355.84741211 -195.84574890]
[354.11956787 -178.39356995]
[336.92224121 -171.84571838]
[327.73068237 -159.99180603]
[318.53912354 -148.13787842]
[309.34759521 -136.28395081]
[300.15603638 -124.43003845]
[290.96447754 -112.57611847]
[281.77294922 -100.72219849]
[284.37921143 -94.69665527]
[284.98614502 -88.10784912]
[283.50152588 -81.60683441]
[280.04138184 -75.84606934]
[274.92163086 -71.41389465]
[268.62939453 -68.77452087]
[261.77679443 -68.21955109]
[255.04135132 -69.83609009]
[244.66735840 -59.00188446]
[234.29335022 -48.16767502]
[223.91935730 -37.33346558]
[220.70567322 -22.78968620]
[205.57296753 -18.17320824]
[195.19895935 -7.33899879]
[184.82496643 3.49521017]
[174.45095825 14.32941914]
[164.07696533 25.16362762]
[153.70295715 35.99783707]
[143.32894897 46.83204651]
[132.95495605 57.66625595]
[122.58095551 68.50046539]
[112.20694733 79.33467102]
[120.43793488 104.45565796]
[101.85588837 117.73778534]
[96.99835968 131.92948914]
[92.14082336 146.12118530]
[100.89186096 158.79895020]
[100.50437164 174.02075195]
[91.33647919 185.95446777]
[77.07024384 190.15121460]
[72.21271515 204.34292603]
[67.47853088 218.57624817]
[62.86804581 232.85011292]
[58.25755692 247.12399292]
[61.37860489 262.63430786]
[50.10392761 272.36727905]
[45.49344254 286.64114380]
[40.88295364 300.91500854]
[36.27246857 315.18890381]
[31.66198158 329.46276855]
[32.00038147 338.61853027]
[26.84562492 343.94311523]
[21.98809433 358.13482666]
[17.13056564 372.32653809]
[24.09460449 380.47091675]
[27.01338959 390.69747925]
[25.42169952 401.13079834]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 20]
[3 19]
[4 18]
[6 16]
[7 15]
[23 177]
[24 176]
[25 175]
[26 173]
[27 172]
[28 171]
[29 170]
[30 169]
[32 167]
[33 166]
[34 165]
[36 164]
[37 163]
[41 159]
[42 158]
[43 157]
[45 69]
[46 68]
[47 67]
[48 66]
[49 65]
[50 64]
[53 62]
[54 61]
[70 155]
[71 154]
[72 153]
[73 152]
[74 151]
[75 150]
[76 149]
[77 148]
[78 147]
[79 146]
[81 144]
[82 143]
[83 142]
[84 141]
[86 133]
[87 132]
[88 131]
[89 130]
[90 129]
[91 128]
[92 127]
[95 125]
[96 124]
[97 123]
[98 122]
[99 120]
[100 119]
[104 116]
[105 115]
[106 114]
[107 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
