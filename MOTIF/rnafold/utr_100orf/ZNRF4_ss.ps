%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:18:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCUGGUCUCCAUGUCAUCUGCCAGAAAGGCCACCUGCGCCAGCACCUCCUGAGACCGGCCUUCAAAGACACGACGCAUGCCGCUCUGCCGUCCGGAGCACUUAAUGCCUAGAGCCAGCAGGGUCCCAGUGGCCGCGUCACUGCCUCUGAGCCACGCGGUCAUUCCAACUCAACUGC\
) } def
/len { sequence length } bind def

/coor [
[88.87056732 160.99449158]
[66.19087982 151.97244263]
[48.75085831 134.89581299]
[35.42200470 141.77633667]
[22.09315109 148.65686035]
[8.76429749 155.53738403]
[-4.56455564 162.41792297]
[-17.89340973 169.29844666]
[-31.22226334 176.17897034]
[-44.55111694 183.05949402]
[-41.22148895 195.08108521]
[-40.76590347 207.69885254]
[-43.27941895 220.22703552]
[-48.69382858 231.96844482]
[-56.77763748 242.25329590]
[-67.14526367 250.47731018]
[-79.27506256 256.13702393]
[-92.53541565 258.86016846]
[-106.21758270 258.42947388]
[-119.57354736 254.79817200]
[-131.85690308 248.09635925]
[-143.77062988 257.21026611]
[-155.68434143 266.32418823]
[-159.21853638 281.97311401]
[-173.71913147 288.83694458]
[-188.06251526 281.65036011]
[-191.24565125 265.92626953]
[-180.82673645 253.72685242]
[-164.79824829 254.41046143]
[-152.88453674 245.29655457]
[-140.97080994 236.18264771]
[-143.87149048 229.26628113]
[-157.70429993 235.06741333]
[-163.50521851 221.23449707]
[-149.67283630 215.43354797]
[-152.57350159 208.51718140]
[-167.42422485 210.62808228]
[-182.27496338 212.73898315]
[-194.84098816 223.27590942]
[-210.15452576 217.40841675]
[-212.46232605 201.17247009]
[-199.39030457 191.27021790]
[-184.38584900 197.88824463]
[-169.53512573 195.77735901]
[-154.68440247 193.66645813]
[-147.93246460 174.29704285]
[-135.24742126 158.62596130]
[-118.30891418 148.35191345]
[-99.23715210 144.48399353]
[-80.32862091 147.24638367]
[-63.77972031 156.07894897]
[-51.43164444 169.73065186]
[-38.10279083 162.85011292]
[-24.77393723 155.96958923]
[-11.44508362 149.08906555]
[1.88377047 142.20854187]
[15.21262455 135.32800293]
[28.54147720 128.44747925]
[41.87033081 121.56695557]
[39.81820297 114.91117859]
[38.52552032 108.06723785]
[38.00859451 101.12149048]
[38.27395248 94.16159821]
[39.31824112 87.27537537]
[41.12828445 80.54972839]
[43.68124008 74.06953430]
[46.94489288 67.91654968]
[50.87805939 62.16844177]
[55.43110275 56.89773560]
[60.54656982 52.17094421]
[66.15990448 48.04771423]
[72.20027924 44.58008194]
[78.59146118 41.81180191]
[85.25279999 39.77781296]
[92.10023499 38.50377655]
[99.04736328 38.00577164]
[100.63284302 23.08979797]
[102.21832275 8.17382526]
[103.80380249 -6.74214792]
[89.99715424 -18.45665169]
[85.99842834 -35.95542908]
[93.21924591 -52.21735001]
[108.60781860 -60.83271027]
[109.66590118 -75.79534912]
[110.72399139 -90.75798035]
[111.78207397 -105.72061920]
[112.84015656 -120.68325043]
[113.89823914 -135.64588928]
[104.51078796 -148.65570068]
[108.96788025 -164.06718445]
[123.85042572 -170.05796814]
[137.74180603 -162.03244019]
[139.98573303 -146.14709473]
[128.86087036 -134.58779907]
[127.80279541 -119.62516785]
[126.74470520 -104.66253662]
[125.68662262 -89.69989777]
[124.62854004 -74.73726654]
[123.57045746 -59.77462769]
[133.94578552 -53.40667725]
[140.65887451 -43.16470337]
[142.37867737 -30.96708679]
[138.71641541 -19.13013077]
[130.31124878 -9.92817783]
[118.71977234 -5.15666962]
[117.13429260 9.75930405]
[115.54882050 24.67527771]
[113.96334076 39.59125137]
[126.13425446 43.77551651]
[137.17909241 50.38239288]
[146.62194824 59.12720108]
[154.05595398 69.63314819]
[159.16078186 81.44754028]
[161.71647644 94.06133270]
[161.61293030 106.93100739]
[158.85458374 119.50203705]
[172.41796875 125.90788269]
[185.98133850 132.31373596]
[200.70077515 127.21707916]
[214.36471558 133.90673828]
[219.13287354 147.97087097]
[232.69625854 154.37672424]
[246.25962830 160.78256226]
[259.82299805 167.18841553]
[273.39541626 159.90174866]
[288.47967529 161.97985840]
[299.31967163 172.41818237]
[301.90362549 187.06268311]
[315.46701050 193.46852112]
[329.03039551 199.87437439]
[342.59375000 206.28021240]
[356.15713501 212.68606567]
[369.72052002 219.09190369]
[383.28387451 225.49775696]
[396.84725952 231.90361023]
[410.41064453 238.30944824]
[423.97399902 244.71530151]
[437.53738403 251.12113953]
[452.25680542 246.02449036]
[465.92074585 252.71414185]
[470.68893433 266.77828979]
[484.25228882 273.18414307]
[498.38037109 266.48104858]
[513.49865723 270.47753906]
[522.46868896 283.28659058]
[521.05517578 298.86016846]
[509.92550659 309.84487915]
[494.33474731 311.05410767]
[481.64440918 301.91687012]
[477.84646606 286.74749756]
[464.28308105 280.34167480]
[450.39224243 285.59335327]
[436.54580688 279.29013062]
[431.13153076 264.68450928]
[417.56814575 258.27868652]
[404.00479126 251.87281799]
[390.44140625 245.46697998]
[376.87802124 239.06112671]
[363.31466675 232.65528870]
[349.75128174 226.24943542]
[336.18789673 219.84359741]
[322.62454224 213.43774414]
[309.06115723 207.03190613]
[295.49780273 200.62605286]
[282.54623413 207.93328857]
[267.59857178 206.19235229]
[256.41140747 195.86273193]
[253.41716003 180.75178528]
[239.85379028 174.34594727]
[226.29040527 167.94009399]
[212.72703552 161.53425598]
[198.83619690 166.78593445]
[184.98974609 160.48271179]
[179.57548523 145.87710571]
[166.01211548 139.47125244]
[152.44874573 133.06541443]
[135.62225342 150.74690247]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 59]
[4 58]
[5 57]
[6 56]
[7 55]
[8 54]
[9 53]
[10 52]
[21 31]
[22 30]
[23 29]
[36 45]
[37 44]
[38 43]
[76 108]
[77 107]
[78 106]
[79 105]
[83 99]
[84 98]
[85 97]
[86 96]
[87 95]
[88 94]
[116 176]
[117 175]
[118 174]
[121 171]
[122 170]
[123 169]
[124 168]
[128 164]
[129 163]
[130 162]
[131 161]
[132 160]
[133 159]
[134 158]
[135 157]
[136 156]
[137 155]
[138 154]
[141 151]
[142 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
