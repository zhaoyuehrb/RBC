%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:21:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGUUACAUGAAAUCUGCAGUUUCAUAAUUUCCGUGGGUCGGGCCGGGCGGGCCAGGCGCUGGGCACGGUGAUGGCCACCACUGGGGCCCUGGGCAACUACUACGUGGACUCGUUCCUGCUGGGCGCCGACGCCGCGGAUGAGCUGAGCGUUGGCCGCUAUGCGCCGGGGA\
) } def
/len { sequence length } bind def

/coor [
[92.49994659 250.01502991]
[79.62007141 242.32679749]
[72.50123596 229.12368774]
[73.15579987 214.13798523]
[81.39863586 201.60594177]
[84.17398071 186.86491394]
[86.94931793 172.12390137]
[89.72466278 157.38288879]
[92.50000000 142.64187622]
[85.00000000 142.64187622]
[75.49719238 154.24777222]
[65.99438477 165.85365295]
[56.49157333 177.45954895]
[46.98876572 189.06542969]
[37.48595810 200.67131042]
[27.98314857 212.27720642]
[28.13646889 228.31951904]
[15.59926510 238.32942200]
[-0.01099490 234.62815857]
[-6.71945524 220.05503845]
[0.62004095 205.78929138]
[16.37726021 202.77439880]
[25.88006973 191.16850281]
[35.38287735 179.56262207]
[44.88568497 167.95674133]
[54.38849640 156.35084534]
[63.89130402 144.74496460]
[73.39411163 133.13906860]
[63.36465073 117.55943298]
[61.24563599 99.98411560]
[66.75352478 84.03134155]
[78.10378265 72.68124390]
[92.50000000 67.72077942]
[92.50000000 52.72077942]
[92.50000000 37.72077942]
[92.50000000 22.72077942]
[92.50000000 7.72078037]
[92.50000000 -7.27921963]
[92.50000000 -22.27922058]
[92.36458588 -37.27861023]
[92.09377289 -52.27616501]
[91.82296753 -67.27371979]
[91.55215454 -82.27127075]
[91.28134155 -97.26882935]
[90.87514496 -112.26332855]
[90.33361053 -127.25354767]
[89.79207611 -142.24377441]
[81.56159973 -155.75561523]
[88.83437347 -168.75392151]
[88.29283905 -183.74414062]
[87.75129700 -198.73435974]
[87.20976257 -213.72457886]
[86.66822815 -228.71481323]
[86.12669373 -243.70503235]
[52.53590393 -271.71783447]
[46.23756790 -285.33148193]
[39.93923187 -298.94509888]
[33.64089584 -312.55874634]
[27.34255981 -326.17236328]
[12.78025246 -331.70202637]
[6.58677530 -345.59790039]
[11.94819069 -359.44674683]
[5.64985418 -373.06039429]
[-7.16687155 -382.33627319]
[-5.48873091 -397.13604736]
[-11.78706741 -410.74966431]
[-22.23721695 -413.92022705]
[-29.06184578 -422.16192627]
[-30.18095207 -432.58251953]
[-25.46397018 -441.69448853]
[-31.26671600 -455.52661133]
[-37.06946182 -469.35876465]
[-42.87220764 -483.19091797]
[-57.11760712 -490.56979370]
[-60.08893967 -506.33529663]
[-49.50685501 -518.39343262]
[-33.48902130 -517.49426270]
[-24.32294846 -504.32754517]
[-29.04006577 -488.99365234]
[-23.23731995 -475.16149902]
[-17.43457413 -461.32937622]
[-11.63182926 -447.49722290]
[4.57952833 -436.99468994]
[1.82656395 -417.04800415]
[8.12490082 -403.43438721]
[20.49112701 -395.13223267]
[19.26348495 -379.35870361]
[25.56182098 -365.74508667]
[39.58780289 -360.86578369]
[46.16913986 -347.14935303]
[40.95619202 -332.47070312]
[47.25452805 -318.85705566]
[53.55286407 -305.24343872]
[59.85120010 -291.62982178]
[66.14953613 -278.01617432]
[73.60556793 -277.20529175]
[75.22758484 -292.11734009]
[90.13960266 -290.49508667]
[88.51763916 -275.58349609]
[95.97367859 -274.77261353]
[105.05128479 -286.71398926]
[114.12889862 -298.65539551]
[123.20651245 -310.59680176]
[127.97850037 -326.86529541]
[144.93225098 -326.78338623]
[149.54679871 -310.46951294]
[135.14790344 -301.51919556]
[126.07029724 -289.57778931]
[116.99268341 -277.63638306]
[107.91506958 -265.69500732]
[121.56254578 -271.91964722]
[136.16468811 -268.48785400]
[145.61074829 -256.83572388]
[145.94769287 -241.83950806]
[137.03453064 -229.77487183]
[122.60124969 -225.69067383]
[108.68797302 -231.29608154]
[101.11691284 -244.24656677]
[101.65844727 -229.25634766]
[102.19998169 -214.26612854]
[102.74152374 -199.27589417]
[103.28305817 -184.28567505]
[103.82459259 -169.29545593]
[112.01633453 -156.85581970]
[104.78229523 -142.78530884]
[105.32383728 -127.79508972]
[105.86537170 -112.80486298]
[109.26094055 -106.21105957]
[106.27889252 -97.53964233]
[106.54970551 -82.54208374]
[106.82051849 -67.54453278]
[107.09133148 -52.54697418]
[107.36214447 -37.54941940]
[110.63811493 -30.89538574]
[107.50000000 -22.27922058]
[107.50000000 -7.27921963]
[107.50000000 7.72078037]
[107.50000000 22.72077942]
[107.50000000 37.72077942]
[107.50000000 52.72077942]
[107.50000000 67.72077942]
[125.13998413 74.96552277]
[136.87287903 91.59595490]
[137.92431641 113.20704651]
[126.60588837 133.13906860]
[136.10870361 144.74496460]
[151.59115601 146.45701599]
[161.06301880 158.36241150]
[159.33541870 173.11201477]
[168.83822632 184.71791077]
[178.34103394 196.32379150]
[187.84384155 207.92968750]
[203.60107422 210.94458008]
[210.94056702 225.21032715]
[204.23210144 239.78344727]
[188.62184143 243.48471069]
[176.08464050 233.47480774]
[176.23796082 217.43249512]
[166.73515320 205.82659912]
[157.23234558 194.22071838]
[147.72953796 182.61483765]
[132.92900085 181.39833069]
[123.12647247 169.76367188]
[124.50280762 154.24777222]
[115.00000000 142.64187622]
[107.50000000 142.64187622]
[110.27533722 157.38288879]
[113.05068207 172.12390137]
[115.82601929 186.86491394]
[118.60136414 201.60594177]
[126.84423828 214.13809204]
[127.49874115 229.12380981]
[120.37984467 242.32688904]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 28]
[11 27]
[12 26]
[13 25]
[14 24]
[15 23]
[16 22]
[33 141]
[34 140]
[35 139]
[36 138]
[37 137]
[38 136]
[39 135]
[40 133]
[41 132]
[42 131]
[43 130]
[44 129]
[45 127]
[46 126]
[47 125]
[49 123]
[50 122]
[51 121]
[52 120]
[53 119]
[54 118]
[55 95]
[56 94]
[57 93]
[58 92]
[59 91]
[62 88]
[63 87]
[65 85]
[66 84]
[70 82]
[71 81]
[72 80]
[73 79]
[100 110]
[101 109]
[102 108]
[103 107]
[145 165]
[146 164]
[149 161]
[150 160]
[151 159]
[152 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
