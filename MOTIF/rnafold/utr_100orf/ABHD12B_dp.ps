%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:32:01 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ABHD12B)
} def

/sequence { (\
GGGACACGGCGCGGGAUGGACGCGCAGGACUGCCAGGCGGCCGCAUCGCCCGAGCCGCCCGGGCCCCCAGCCCGUAGCUGCGUGGCCGCCUGGUGGGACAUGGUCGACCGCAACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 31 0.020703351 ubox
1 34 0.006925439 ubox
1 105 0.014209347 ubox
1 109 0.651200463 ubox
1 115 0.237181188 ubox
2 30 0.022294724 ubox
2 31 0.017669177 ubox
2 33 0.007356985 ubox
2 34 0.004802320 ubox
2 104 0.011698273 ubox
2 105 0.031591726 ubox
2 108 0.649098875 ubox
2 109 0.269214652 ubox
2 114 0.239638295 ubox
2 115 0.176560619 ubox
3 30 0.019685703 ubox
3 33 0.005427807 ubox
3 104 0.018602340 ubox
3 105 0.579513352 ubox
3 108 0.267861404 ubox
3 114 0.178358826 ubox
4 104 0.583469534 ubox
5 32 0.006270722 ubox
5 102 0.063288281 ubox
5 103 0.581607050 ubox
6 31 0.006232532 ubox
6 101 0.065395289 ubox
6 104 0.145487707 ubox
7 13 0.004021362 ubox
7 102 0.417782127 ubox
7 103 0.149144184 ubox
7 106 0.122064979 ubox
7 110 0.270113827 ubox
8 12 0.003877378 ubox
8 101 0.296115141 ubox
8 105 0.109237278 ubox
8 109 0.269508375 ubox
8 115 0.288897029 ubox
9 23 0.003430212 ubox
9 25 0.879738782 ubox
9 104 0.049894031 ubox
9 108 0.135716004 ubox
9 111 0.009770992 ubox
9 114 0.290374831 ubox
10 22 0.003491644 ubox
10 24 0.890977857 ubox
10 103 0.049002415 ubox
10 106 0.029801509 ubox
10 110 0.009398128 ubox
11 21 0.003439251 ubox
11 23 0.893042479 ubox
11 25 0.024864611 ubox
11 105 0.005968683 ubox
11 109 0.004834431 ubox
11 111 0.447995552 ubox
12 22 0.893047585 ubox
12 24 0.024928530 ubox
12 110 0.448499103 ubox
13 21 0.892128094 ubox
13 23 0.024865289 ubox
13 109 0.448356647 ubox
13 115 0.018619882 ubox
14 108 0.448074625 ubox
14 109 0.013023983 ubox
14 114 0.018762837 ubox
14 115 0.007283499 ubox
15 105 0.007827440 ubox
15 108 0.017773982 ubox
15 114 0.007373971 ubox
16 101 0.003844770 ubox
16 104 0.007648753 ubox
17 24 0.005069018 ubox
17 26 0.011514623 ubox
17 100 0.004003894 ubox
17 103 0.007323119 ubox
17 106 0.065993382 ubox
17 110 0.019410113 ubox
18 23 0.007377929 ubox
18 25 0.012814181 ubox
18 99 0.004035522 ubox
18 105 0.061433516 ubox
18 109 0.022300916 ubox
18 115 0.003366826 ubox
19 104 0.032114492 ubox
19 105 0.442478431 ubox
19 108 0.022412672 ubox
19 114 0.003410236 ubox
20 104 0.443770886 ubox
21 102 0.019280743 ubox
21 103 0.443449053 ubox
21 106 0.033101478 ubox
22 101 0.018512485 ubox
22 104 0.041863910 ubox
22 105 0.033602951 ubox
22 111 0.003688265 ubox
23 102 0.333799445 ubox
23 103 0.050241076 ubox
23 110 0.003690372 ubox
24 101 0.301807461 ubox
24 104 0.007159149 ubox
24 109 0.003670189 ubox
24 111 0.006200772 ubox
25 102 0.193584764 ubox
25 103 0.008824259 ubox
25 110 0.006342071 ubox
26 31 0.003779891 ubox
26 101 0.204365300 ubox
27 34 0.003540084 ubox
27 105 0.006712828 ubox
27 109 0.099710642 ubox
27 115 0.050359023 ubox
28 33 0.003828617 ubox
28 104 0.004311191 ubox
28 105 0.095452028 ubox
28 108 0.099353096 ubox
28 114 0.050559051 ubox
29 104 0.095759682 ubox
30 96 0.987928576 ubox
30 97 0.037689848 ubox
30 103 0.094119081 ubox
31 95 0.987003994 ubox
31 96 0.028807697 ubox
31 100 0.003998934 ubox
31 102 0.091355832 ubox
31 112 0.003329378 ubox
32 94 0.997141986 ubox
32 99 0.004776341 ubox
32 101 0.014004245 ubox
32 111 0.003525842 ubox
33 93 0.999776160 ubox
33 110 0.003184693 ubox
34 92 0.999940245 ubox
35 91 0.999747393 ubox
36 90 0.999986946 ubox
37 89 0.999994129 ubox
38 88 0.999980181 ubox
39 87 0.999976903 ubox
40 86 0.999993592 ubox
41 85 0.999982238 ubox
42 82 0.010461616 ubox
42 84 0.999684224 ubox
43 47 0.003771004 ubox
43 49 0.024539223 ubox
43 55 0.014506728 ubox
43 58 0.003325321 ubox
43 81 0.024105166 ubox
43 83 0.994766428 ubox
44 48 0.024452558 ubox
44 54 0.014566876 ubox
44 57 0.003335925 ubox
44 80 0.024220121 ubox
44 82 0.964705361 ubox
44 84 0.017377977 ubox
45 79 0.020511818 ubox
45 83 0.034595018 ubox
46 53 0.296648077 ubox
46 82 0.010634502 ubox
47 52 0.317312203 ubox
47 57 0.009394012 ubox
47 80 0.039543269 ubox
47 82 0.250998930 ubox
47 84 0.004933032 ubox
48 55 0.091121001 ubox
48 56 0.010268601 ubox
48 58 0.023052762 ubox
48 64 0.718244416 ubox
48 78 0.029494882 ubox
48 79 0.019731367 ubox
48 81 0.462499204 ubox
48 83 0.015949409 ubox
49 54 0.091408914 ubox
49 57 0.023065258 ubox
49 63 0.719689667 ubox
49 77 0.029514578 ubox
49 80 0.462123541 ubox
49 82 0.017092985 ubox
50 62 0.719703125 ubox
50 85 0.004217790 ubox
51 57 0.013071608 ubox
51 61 0.719684615 ubox
51 80 0.037138775 ubox
51 82 0.034465703 ubox
51 84 0.006899892 ubox
52 56 0.013920718 ubox
52 60 0.715898122 ubox
52 79 0.034956937 ubox
52 81 0.061202231 ubox
52 83 0.016808783 ubox
53 79 0.470157608 ubox
54 64 0.021208065 ubox
54 75 0.006242863 ubox
54 78 0.478195675 ubox
54 81 0.489084849 ubox
55 63 0.021252620 ubox
55 74 0.005424059 ubox
55 77 0.477709469 ubox
55 80 0.489073759 ubox
56 62 0.021245406 ubox
56 74 0.004868845 ubox
56 80 0.020859892 ubox
56 82 0.012349602 ubox
57 75 0.264493566 ubox
57 78 0.498195312 ubox
57 79 0.006779941 ubox
57 81 0.024251444 ubox
58 74 0.227338465 ubox
58 77 0.497717386 ubox
58 80 0.024235882 ubox
60 74 0.650255985 ubox
61 72 0.005031461 ubox
61 73 0.693497851 ubox
62 71 0.004933053 ubox
62 72 0.693920907 ubox
63 71 0.693918889 ubox
64 70 0.692917438 ubox
68 80 0.711639644 ubox
69 79 0.717783444 ubox
70 78 0.718606852 ubox
70 81 0.041601823 ubox
71 77 0.717575233 ubox
71 80 0.041619127 ubox
73 80 0.004147893 ubox
73 82 0.004666712 ubox
74 79 0.003504873 ubox
74 81 0.016136004 ubox
75 80 0.015535131 ubox
92 109 0.007269295 ubox
93 108 0.007509954 ubox
93 111 0.018767763 ubox
94 107 0.007651291 ubox
94 110 0.020555225 ubox
95 99 0.006244223 ubox
95 101 0.003407100 ubox
95 105 0.005773176 ubox
95 109 0.039521688 ubox
95 111 0.005373990 ubox
95 115 0.024737920 ubox
96 104 0.005581539 ubox
96 105 0.011024100 ubox
96 108 0.039468485 ubox
96 109 0.010857897 ubox
96 114 0.025174682 ubox
96 115 0.025009663 ubox
97 104 0.010940491 ubox
97 105 0.563074772 ubox
97 108 0.011631096 ubox
97 114 0.039897873 ubox
98 104 0.563224353 ubox
99 103 0.557763129 ubox
101 110 0.149150291 ubox
101 112 0.054793589 ubox
102 109 0.209222533 ubox
102 111 0.060511038 ubox
102 115 0.112375071 ubox
103 108 0.208167315 ubox
103 111 0.029537512 ubox
103 114 0.113705101 ubox
104 110 0.028994900 ubox
104 113 0.112378685 ubox
1 109 0.9500000 lbox
2 108 0.9500000 lbox
9 25 0.9500000 lbox
10 24 0.9500000 lbox
11 23 0.9500000 lbox
12 22 0.9500000 lbox
13 21 0.9500000 lbox
30 96 0.9500000 lbox
31 95 0.9500000 lbox
32 94 0.9500000 lbox
33 93 0.9500000 lbox
34 92 0.9500000 lbox
35 91 0.9500000 lbox
36 90 0.9500000 lbox
37 89 0.9500000 lbox
38 88 0.9500000 lbox
39 87 0.9500000 lbox
40 86 0.9500000 lbox
41 85 0.9500000 lbox
42 84 0.9500000 lbox
43 83 0.9500000 lbox
44 82 0.9500000 lbox
48 64 0.9500000 lbox
49 63 0.9500000 lbox
50 62 0.9500000 lbox
51 61 0.9500000 lbox
52 60 0.9500000 lbox
68 80 0.9500000 lbox
69 79 0.9500000 lbox
70 78 0.9500000 lbox
71 77 0.9500000 lbox
97 105 0.9500000 lbox
98 104 0.9500000 lbox
99 103 0.9500000 lbox
showpage
end
%%EOF
