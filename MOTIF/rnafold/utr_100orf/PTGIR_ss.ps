%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:58:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGCUGACACACAGACCGACACAGGCAGCGAGAGACACGAGGAGCAAAGCAAGUGAAGGCACAGACGCACGGGACAGGAGAGCCUGGGCAAGACUGGAGAGCCCAGACCUGGGAUGGCGGAUUCGUGCAGGAACCUCACCUACGUGCGGGGCUCGGUGGGGCCGGCCACCAGCACCCUGAUGUUCGUGGCCGGUGUGGUGGGCAACGGGCUGG\
) } def
/len { sequence length } bind def

/coor [
[92.74868774 296.38531494]
[101.57167816 283.97262573]
[114.68387604 276.22729492]
[112.92627716 261.33062744]
[111.16868591 246.43395996]
[101.99339294 234.70095825]
[108.06038666 220.08924866]
[106.30279541 205.19256592]
[104.43590546 190.30920410]
[102.45981598 175.43994141]
[100.48373413 160.57066345]
[98.50765228 145.70140076]
[88.30901337 144.20594788]
[78.70446777 140.46412659]
[70.18208313 134.66607666]
[63.17492294 127.10643768]
[49.79984283 133.89666748]
[44.80451202 148.65080261]
[31.14354897 155.34652710]
[17.10852242 150.49331665]
[3.73344254 157.28353882]
[-9.64163780 164.07377625]
[-14.63696575 178.82791138]
[-28.29792976 185.52363586]
[-42.33295441 180.67042542]
[-55.70803833 187.46066284]
[-65.94110870 204.83035278]
[-85.18663788 202.94686890]
[-98.35662079 210.12681580]
[-96.70700836 225.23797607]
[-100.97055817 239.82875061]
[-110.49710083 251.67414856]
[-123.83391571 258.96783447]
[-138.94723511 260.59756470]
[-153.53239441 256.31481934]
[-165.36523438 246.77268982]
[-172.64137268 233.42630005]
[-174.25122070 218.31085205]
[-169.94929504 203.73133850]
[-160.39161682 191.91105652]
[-147.03565979 184.65249634]
[-131.91810608 183.06253052]
[-117.34426880 187.38362122]
[-105.53656769 196.95683289]
[-92.36658478 189.77688599]
[-90.37555695 179.75732422]
[-83.04502869 172.33081055]
[-72.62276459 170.11811829]
[-62.49826813 174.08557129]
[-49.12318420 167.29534912]
[-44.75823593 153.10087585]
[-31.29073143 146.02409363]
[-16.43186760 150.69869995]
[-3.05678725 143.90846252]
[10.31829357 137.11824036]
[14.68324280 122.92377472]
[28.15074730 115.84697723]
[43.00961304 120.52158356]
[56.38469315 113.73135376]
[54.35809708 102.76798248]
[55.04495239 91.64004517]
[58.40442657 81.00911713]
[64.23680115 71.50721741]
[72.19532013 63.69924164]
[81.80686188 58.04937363]
[92.50000000 54.89351273]
[92.50000000 39.89351273]
[92.50000000 24.89351273]
[92.50000000 9.89351273]
[92.50000000 -5.10648727]
[92.50000000 -20.10648727]
[92.27980042 -35.10486984]
[91.83945465 -50.09840775]
[80.62277222 -60.90690613]
[80.38978577 -76.11875916]
[90.76316071 -86.74554443]
[90.32281494 -101.73908234]
[89.88246918 -116.73261261]
[79.81293488 -123.04739380]
[74.09953308 -133.33303833]
[74.06002045 -144.97904968]
[79.58856201 -155.09286499]
[89.21070862 -161.21821594]
[89.21070862 -176.21821594]
[89.21070862 -191.21821594]
[89.21070862 -206.21821594]
[81.47340393 -220.01838684]
[89.21070862 -232.74565125]
[89.21070862 -247.74565125]
[76.01619720 -255.48207092]
[68.51515198 -268.69686890]
[68.63498688 -283.79165649]
[76.24338531 -296.71325684]
[89.21070862 -304.04226685]
[89.21070862 -319.04226685]
[89.21070862 -334.04226685]
[76.75117493 -340.39743042]
[68.28534698 -351.44784546]
[65.41983795 -365.00265503]
[68.65799713 -378.40524292]
[77.31259155 -389.05386353]
[89.65067291 -394.90670776]
[89.87087250 -409.90509033]
[90.09106445 -424.90347290]
[90.31126404 -439.90185547]
[81.85289764 -453.95132446]
[90.02660370 -468.16830444]
[106.42398834 -467.92758179]
[114.17681885 -453.47677612]
[105.30964661 -439.68164062]
[105.08945465 -424.68325806]
[104.86925507 -409.68487549]
[104.64905548 -394.68649292]
[118.72210693 -386.74322510]
[126.91564178 -372.70556641]
[126.91119385 -356.35772705]
[118.61527252 -342.16235352]
[104.21070862 -334.04226685]
[104.21070862 -319.04226685]
[104.21070862 -304.04226685]
[117.17802429 -296.71325684]
[124.78642273 -283.79165649]
[124.90625763 -268.69686890]
[117.40521240 -255.48207092]
[104.21070862 -247.74565125]
[104.21070862 -232.74565125]
[111.94800568 -220.01838684]
[104.21070862 -206.21821594]
[104.21070862 -191.21821594]
[104.21070862 -176.21821594]
[104.21070862 -161.21821594]
[117.91099548 -149.07415771]
[118.38975525 -130.45301819]
[104.87599945 -117.17295837]
[105.31635284 -102.17942810]
[105.75669861 -87.18589020]
[116.73585510 -77.18621063]
[117.39601898 -61.98690414]
[106.83299255 -50.53875351]
[107.27333832 -35.54521942]
[110.07016754 -31.67649269]
[110.46790314 -26.01025391]
[107.50000000 -20.10648727]
[107.50000000 -5.10648727]
[107.50000000 9.89351273]
[107.50000000 24.89351273]
[107.50000000 39.89351273]
[107.50000000 54.89351273]
[132.52310181 64.44039154]
[149.02941895 87.27647400]
[163.92608643 85.51887512]
[178.82276917 83.76128387]
[193.71943665 82.00369263]
[208.61610413 80.24609375]
[221.42884827 70.01058197]
[236.59870911 76.24011993]
[238.52024841 92.52630615]
[225.21675110 102.11529541]
[210.37370300 95.14276886]
[195.47703552 96.90036011]
[180.58035278 98.65795898]
[165.68368530 100.41555023]
[150.78701782 102.17314148]
[147.94169617 116.90081024]
[161.11167908 124.08075714]
[174.28164673 131.26071167]
[187.45162964 138.44065857]
[200.62161255 145.62060547]
[213.79158020 152.80055237]
[229.61167908 152.61285400]
[237.08264160 165.49826050]
[250.25262451 172.67820740]
[263.42260742 179.85815430]
[276.59259033 187.03810120]
[291.68103027 182.33554077]
[305.63638306 189.75334167]
[310.17916870 204.89067078]
[302.61422729 218.76679993]
[287.42971802 223.14929199]
[273.63433838 215.43807983]
[269.41262817 200.20808411]
[256.24264526 193.02813721]
[243.07267761 185.84819031]
[229.90269470 178.66824341]
[215.02461243 179.36950684]
[206.61163330 165.97053528]
[193.44166565 158.79058838]
[180.27168274 151.61062622]
[167.10169983 144.43067932]
[153.93171692 137.25073242]
[140.76174927 130.07078552]
[127.84450531 139.33093262]
[113.37691498 143.72531128]
[115.35300446 158.59458923]
[117.32908630 173.46385193]
[119.30516815 188.33311462]
[123.53697205 196.42552185]
[121.19947052 203.43498230]
[122.95706177 218.33164978]
[132.25807190 231.13015747]
[126.06536102 244.67636108]
[127.82295227 259.57302856]
[129.58055115 274.46969604]
[144.13528442 278.95074463]
[155.60482788 288.96920776]
[162.00199890 302.78933716]
[162.21847534 318.01669312]
[156.21673584 332.01309204]
[145.03662109 342.35354614]
[130.61514282 347.24649048]
[115.45092010 345.84423828]
[102.17124939 338.38967896]
[93.07691193 326.17440796]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 203]
[4 202]
[5 201]
[7 199]
[8 198]
[9 196]
[10 195]
[11 194]
[12 193]
[16 59]
[17 58]
[20 55]
[21 54]
[22 53]
[25 50]
[26 49]
[28 45]
[29 44]
[66 148]
[67 147]
[68 146]
[69 145]
[70 144]
[71 143]
[72 140]
[73 139]
[76 136]
[77 135]
[78 134]
[83 131]
[84 130]
[85 129]
[86 128]
[88 126]
[89 125]
[94 120]
[95 119]
[96 118]
[102 113]
[103 112]
[104 111]
[105 110]
[150 163]
[151 162]
[152 161]
[153 160]
[154 159]
[164 191]
[165 190]
[166 189]
[167 188]
[168 187]
[169 186]
[171 184]
[172 183]
[173 182]
[174 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
