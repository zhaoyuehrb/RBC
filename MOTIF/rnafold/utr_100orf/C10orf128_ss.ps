%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:14:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGAGCCUUGGGUCACAUGGCUCAUUGUGCCUGCGCUGCCAGCAGCCAGGAGCCAGGAGCCAAGAGCAGAGCGCCAGCAUGAACUUGGGGGUCAGCAUGCUGAGGAUCCUCUUCCUCCUGGAUGUAGGAGGAGCUCAAGUGCUGGCAACAGGCAAGACCCCUGGGGCUGAAAUUGAUU\
) } def
/len { sequence length } bind def

/coor [
[91.43795776 313.98626709]
[95.51431274 299.34210205]
[104.88839722 287.37570190]
[118.13072205 279.91183472]
[116.29252625 265.02490234]
[114.45432281 250.13795471]
[112.61611938 235.25100708]
[110.77791595 220.36407471]
[108.93972015 205.47712708]
[106.84053802 190.62474060]
[104.48101807 175.81147766]
[102.12149811 160.99821472]
[99.76198578 146.18496704]
[97.40246582 131.37170410]
[89.12220764 129.53988647]
[81.63142395 125.56415558]
[75.47376251 119.73307800]
[71.09613037 112.46984863]
[56.30414581 114.95926666]
[41.51216125 117.44867706]
[26.72017479 119.93809509]
[11.92819118 122.42751312]
[-2.86379337 124.91693115]
[-9.84203625 138.65048218]
[-23.41037369 145.56088257]
[-38.27032852 143.18478394]
[-48.75621033 132.64039612]
[-63.54819489 135.12980652]
[-75.87289429 145.05010986]
[-89.70776367 139.53233337]
[-104.49974823 142.02175903]
[-119.29173279 144.51116943]
[-134.08370972 147.00057983]
[-142.05439758 151.52285767]
[-149.15695190 149.40151978]
[-163.99035645 151.63095093]
[-178.82374573 153.86038208]
[-193.65715027 156.08982849]
[-206.13861084 166.72677612]
[-221.49853516 160.98176575]
[-223.93591309 144.76477051]
[-210.94340515 134.75843811]
[-195.88658142 141.25642395]
[-181.05317688 139.02699280]
[-166.21978760 136.79756165]
[-151.38639832 134.56811523]
[-136.57313538 132.20860291]
[-121.78115082 129.71919250]
[-106.98916626 127.22976685]
[-92.19718170 124.74034882]
[-80.93049622 114.99811554]
[-66.03761292 120.33782959]
[-51.24562454 117.84841156]
[-44.78875351 104.45263672]
[-31.52511787 97.34349060]
[-16.44230270 99.43204498]
[-5.35320997 110.12494659]
[9.43877411 107.63552856]
[24.23075867 105.14611053]
[39.02274323 102.65670013]
[53.81472778 100.16728210]
[68.60671234 97.67786407]
[73.38690948 83.18708038]
[84.42022705 72.64672852]
[99.11423492 68.53340912]
[114.01636505 71.81361389]
[123.70291901 60.36063766]
[117.57035065 46.42676163]
[118.09358215 31.27376747]
[125.11531067 17.90531349]
[137.19538879 8.94804955]
[151.90591431 6.13557386]
[166.31906128 9.97311592]
[176.00561523 -1.47985828]
[185.69216919 -12.93283272]
[195.37872314 -24.38580704]
[205.06527710 -35.83878326]
[214.75184631 -47.29175568]
[224.43840027 -58.74473190]
[234.12495422 -70.19770813]
[226.48434448 -82.71381378]
[223.69264221 -97.34781647]
[226.26832581 -112.25884247]
[234.04396057 -125.51203918]
[246.16700745 -135.32957458]
[261.19088745 -140.32849121]
[277.24682617 -139.71377563]
[282.15661621 -153.88748169]
[287.06640625 -168.06118774]
[291.97619629 -182.23489380]
[296.88598633 -196.40859985]
[301.79577637 -210.58230591]
[306.70556641 -224.75602722]
[300.05523682 -238.84185791]
[305.23635864 -253.14607239]
[318.70602417 -259.39935303]
[323.61581421 -273.57305908]
[323.08700562 -290.51873779]
[339.22406006 -295.71792603]
[348.68725586 -281.65078735]
[337.78952026 -268.66326904]
[332.87976074 -254.48954773]
[339.59506226 -241.24417114]
[334.81774902 -226.80007935]
[320.87927246 -219.84623718]
[315.96948242 -205.67253113]
[311.05969238 -191.49882507]
[306.14990234 -177.32510376]
[301.24011230 -163.15139771]
[296.33032227 -148.97769165]
[291.42053223 -134.80398560]
[302.43759155 -124.62439728]
[316.17974854 -130.63713074]
[329.92190552 -136.64987183]
[343.66409302 -142.66261292]
[357.40625000 -148.67535400]
[371.14840698 -154.68809509]
[384.89056396 -160.70083618]
[398.63272095 -166.71357727]
[412.37487793 -172.72631836]
[421.65823364 -186.24485779]
[437.98397827 -184.69491577]
[444.55758667 -169.67094421]
[434.61666870 -156.62829590]
[418.38760376 -158.98416138]
[404.64544678 -152.97142029]
[390.90328979 -146.95867920]
[377.16113281 -140.94593811]
[363.41897583 -134.93319702]
[349.67681885 -128.92045593]
[335.93466187 -122.90771484]
[322.19250488 -116.89497375]
[308.45034790 -110.88223267]
[310.13085938 -92.91681671]
[304.69436646 -76.03353882]
[293.24932861 -62.88743210]
[277.82791138 -55.44525528]
[261.02835083 -54.69295502]
[245.57792664 -60.51115036]
[235.89137268 -49.05817413]
[226.20481873 -37.60520172]
[216.51826477 -26.15222549]
[206.83169556 -14.69925117]
[197.14514160 -3.24627662]
[187.45858765 8.20669842]
[177.77203369 19.65967178]
[183.94837952 33.23605728]
[183.61627197 48.20933914]
[176.78805542 61.60845566]
[164.77032471 70.75144958]
[149.91430664 73.78224182]
[135.15589905 70.04719543]
[125.46933746 81.50016785]
[131.46667480 99.11741638]
[126.46624756 117.04313660]
[112.21572876 129.01219177]
[114.57524109 143.82543945]
[116.93476105 158.63870239]
[119.29428101 173.45196533]
[121.65379333 188.26522827]
[125.54315186 193.66969299]
[126.02456665 199.36907959]
[123.82666016 203.63893127]
[125.66486359 218.52586365]
[127.50305939 233.41281128]
[129.34126282 248.29975891]
[131.17945862 263.18670654]
[133.01766968 278.07363892]
[147.67781067 282.09216309]
[159.68112183 291.41894531]
[167.19718933 304.63171387]
[169.07984924 319.71563721]
[165.04203796 334.37048340]
[155.69946289 346.36151123]
[142.47682190 353.86016846]
[127.39046478 355.72299194]
[112.74094391 351.66592407]
[100.76220703 342.30758667]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 168]
[5 167]
[6 166]
[7 165]
[8 164]
[9 163]
[10 160]
[11 159]
[12 158]
[13 157]
[14 156]
[18 62]
[19 61]
[20 60]
[21 59]
[22 58]
[23 57]
[27 53]
[28 52]
[30 50]
[31 49]
[32 48]
[33 47]
[35 46]
[36 45]
[37 44]
[38 43]
[66 153]
[67 152]
[73 146]
[74 145]
[75 144]
[76 143]
[77 142]
[78 141]
[79 140]
[80 139]
[87 111]
[88 110]
[89 109]
[90 108]
[91 107]
[92 106]
[93 105]
[96 102]
[97 101]
[112 133]
[113 132]
[114 131]
[115 130]
[116 129]
[117 128]
[118 127]
[119 126]
[120 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
