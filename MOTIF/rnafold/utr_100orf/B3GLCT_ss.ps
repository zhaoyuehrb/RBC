%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:09:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGAAGGGUCAGCCGCGGCGGCAGGGCGGCGGCGGCAGCGGCGCAGCUCCGCUCCCCGCGCGUCUCCCUUCCCCGCGCCCAGGUAGGGCGCUCAGCCUCCGCCGCCAGGAUGCGGCCGCCCGCCUGCUGGUGGCUGCUCGCGCCGCCGGCGCUGCUCGCGCUCCUCACCUGCUCCCUGGCUUUUGGUUUGGCUUCUGAAGAUACAAAGA\
) } def
/len { sequence length } bind def

/coor [
[99.95088959 291.90789795]
[109.83527374 280.41552734]
[123.05570221 272.99957275]
[120.60997772 258.20031738]
[118.16425323 243.40104675]
[115.71852112 228.60177612]
[113.27279663 213.80250549]
[100.83335114 208.95457458]
[92.34568024 198.50930786]
[90.10979462 185.12759399]
[94.81518555 172.28712463]
[105.33323669 163.37861633]
[103.10811615 148.54457092]
[100.88300323 133.71052551]
[98.65788269 118.87648010]
[86.43139648 110.18666077]
[71.69043732 112.96227264]
[56.94947052 115.73788452]
[42.20850754 118.51348877]
[34.35412979 123.17681122]
[27.22751236 121.21897888]
[12.44685936 123.77481079]
[0.16683789 133.75036621]
[-13.69267178 128.29478455]
[-28.47332573 130.85061646]
[-43.25397873 133.40644836]
[-58.03463364 135.96228027]
[-70.31465149 145.93783569]
[-84.17416382 140.48226929]
[-98.95481873 143.03810120]
[-113.73547363 145.59393311]
[-128.51612854 148.14976501]
[-143.27734375 150.81556702]
[-158.01831055 153.59117126]
[-172.75926208 156.36677551]
[-187.50022888 159.14239502]
[-201.18606567 171.46226501]
[-217.50581360 165.00993347]
[-232.20382690 168.00471497]
[-246.90182495 170.99948120]
[-261.59982300 173.99426270]
[-276.29782104 176.98902893]
[-283.59594727 190.81913757]
[-298.09585571 196.67457581]
[-312.95120239 191.79060364]
[-321.14767456 178.47326660]
[-318.81521606 163.01060486]
[-307.05511475 152.70362854]
[-291.42010498 152.41897583]
[-279.29260254 162.29103088]
[-264.59460449 159.29624939]
[-249.89660645 156.30148315]
[-235.19859314 153.30670166]
[-220.50059509 150.31193542]
[-213.56770325 140.39924622]
[-201.34706116 137.78395081]
[-190.27583313 144.40142822]
[-175.53488159 141.62582397]
[-160.79391479 138.85020447]
[-146.05294800 136.07460022]
[-140.06132507 131.74768066]
[-131.07196045 133.36911011]
[-116.29130554 130.81327820]
[-101.51065063 128.25744629]
[-86.72999573 125.70161438]
[-75.50718689 115.90887451]
[-60.59046555 121.18163300]
[-45.80981064 118.62580109]
[-31.02915764 116.06996918]
[-16.24850464 113.51413727]
[-5.02569342 103.72139740]
[9.89102745 108.99415588]
[24.67168045 106.43832397]
[39.43289948 103.77252960]
[54.17386246 100.99691772]
[68.91482544 98.22130585]
[83.65578461 95.44569397]
[96.66474152 87.97795868]
[106.49532318 76.64836121]
[116.32589722 65.31877136]
[125.64078522 53.56151581]
[134.42138672 41.40006256]
[143.20199585 29.23860550]
[151.98258972 17.07715034]
[160.76319885 4.91569424]
[169.45301819 -7.31079102]
[178.05158997 -19.60162926]
[186.65014648 -31.89246750]
[195.15698242 -44.24697495]
[203.57159424 -56.66447067]
[211.98620605 -69.08197021]
[220.40083313 -81.49946594]
[218.73785400 -94.28997803]
[226.00204468 -104.45930481]
[237.85537720 -106.87284851]
[246.45393372 -119.16368866]
[255.05250549 -131.45452881]
[251.19692993 -144.35990906]
[255.41648865 -156.94584656]
[265.95828247 -164.68875122]
[278.84103394 -164.94236755]
[287.62164307 -177.10382080]
[296.40225220 -189.26527405]
[305.18283081 -201.42672729]
[313.96343994 -213.58819580]
[310.30044556 -226.54956055]
[314.70690918 -239.07127380]
[325.36282349 -246.65635681]
[338.24792480 -246.71813965]
[347.20861816 -258.74752808]
[349.82546997 -267.49908447]
[356.39337158 -270.88796997]
[365.53216553 -282.78259277]
[374.67095947 -294.67721558]
[383.80978394 -306.57186890]
[392.85977173 -318.53421021]
[401.82046509 -330.56356812]
[403.85940552 -346.25283813]
[417.66741943 -351.83749390]
[426.62811279 -363.86685181]
[435.58880615 -375.89624023]
[438.20565796 -384.64779663]
[444.77355957 -388.03668213]
[453.91235352 -399.93130493]
[463.05117798 -411.82595825]
[464.66418457 -428.14556885]
[479.71347046 -434.66104126]
[492.71759033 -424.66983032]
[490.29904175 -408.44998169]
[474.94580078 -402.68716431]
[465.80700684 -390.79251099]
[456.66818237 -378.89788818]
[447.61819458 -366.93554688]
[438.65750122 -354.90615845]
[429.69680786 -342.87680054]
[428.29879761 -328.04794312]
[413.84985352 -321.60287476]
[404.88916016 -309.57351685]
[403.41433716 -302.33148193]
[395.70440674 -297.43307495]
[386.56561279 -285.53842163]
[377.42678833 -273.64379883]
[368.28799438 -261.74917603]
[359.23800659 -249.78681946]
[350.27731323 -237.75744629]
[353.41897583 -221.23568726]
[343.44287109 -207.27888489]
[326.12490845 -204.80758667]
[317.34429932 -192.64613342]
[308.56369019 -180.48468018]
[299.78308105 -168.32321167]
[291.00250244 -156.16175842]
[294.38980103 -139.68859863]
[284.62258911 -125.58482361]
[267.34335327 -122.85595703]
[258.74478149 -110.56512451]
[250.14620972 -98.27428436]
[249.56823730 -80.73481750]
[232.81832886 -73.08484650]
[224.40370178 -60.66734695]
[215.98908997 -48.24985123]
[207.57447815 -35.83235931]
[206.42451477 -28.53171539]
[198.94097900 -23.29390335]
[190.34242249 -11.00306511]
[181.74386597 1.28777277]
[180.48533630 8.57048512]
[172.92465210 13.69629765]
[164.14404297 25.85775375]
[155.36344910 38.01921082]
[146.58283997 50.18066406]
[137.80224609 62.34212112]
[152.74447632 61.02700424]
[164.32826233 70.55674744]
[165.91786194 85.47228241]
[156.60270691 97.22930908]
[141.71891785 99.09287262]
[129.79261780 89.99543762]
[127.65549469 75.14935303]
[117.82491302 86.47894287]
[107.99433136 97.80853271]
[110.91056061 99.60620117]
[113.28829193 102.63008881]
[114.72303009 106.69671631]
[114.87309265 111.50389862]
[113.49192810 116.65136719]
[115.71704102 131.48541260]
[117.94216156 146.31945801]
[120.16728210 161.15350342]
[135.27946472 168.75071716]
[142.81079102 183.71002197]
[139.97009277 200.04685974]
[128.07206726 211.35678101]
[130.51779175 226.15605164]
[132.96351624 240.95532227]
[135.40925598 255.75459290]
[137.85498047 270.55386353]
[152.75843811 273.32205200]
[165.81474304 281.02322388]
[175.44731140 292.72747803]
[180.49295044 307.02145386]
[180.34236145 322.17904663]
[175.01374817 336.36996460]
[165.15055847 347.88052368]
[151.94381714 355.32083130]
[136.98831177 357.79235840]
[122.08998108 354.99673462]
[109.04787445 347.27148438]
[99.43689728 335.54949951]
[94.41761780 321.24624634]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 197]
[4 196]
[5 195]
[6 194]
[7 193]
[12 189]
[13 188]
[14 187]
[15 186]
[16 77]
[17 76]
[18 75]
[19 74]
[21 73]
[22 72]
[24 70]
[25 69]
[26 68]
[27 67]
[29 65]
[30 64]
[31 63]
[32 62]
[33 60]
[34 59]
[35 58]
[36 57]
[38 54]
[39 53]
[40 52]
[41 51]
[42 50]
[78 181]
[79 180]
[80 179]
[81 172]
[82 171]
[83 170]
[84 169]
[85 168]
[86 166]
[87 165]
[88 164]
[89 162]
[90 161]
[91 160]
[92 159]
[95 157]
[96 156]
[97 155]
[101 152]
[102 151]
[103 150]
[104 149]
[105 148]
[109 145]
[110 144]
[112 143]
[113 142]
[114 141]
[115 140]
[116 138]
[117 137]
[119 135]
[120 134]
[121 133]
[123 132]
[124 131]
[125 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
