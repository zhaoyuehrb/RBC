%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:51:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGCUAUUUUGAAAGUGACCCUGGGCUGGGGCGCCGGGGCGAGCGCGGCGGCGCGGAACCAUGACAGAAGAUGACCGAGGCGGCGCUGGUGGAGGGCCAGGUCAAGCUGCGGGACGGCAAGAAGUGGAAGAGUAGGUGGCUGGUGCUGCGGAAGCCGUCGCCCGUGGCAG\
) } def
/len { sequence length } bind def

/coor [
[394.32287598 379.66516113]
[386.91479492 392.70819092]
[375.91775513 402.90942383]
[362.35601807 409.31872559]
[347.49270630 411.33917236]
[332.71218872 408.78256226]
[319.39111328 401.88699341]
[308.77017212 391.29476929]
[301.83859253 377.99237061]
[299.24197388 363.21884155]
[301.22219849 348.35012817]
[307.59478760 334.77108765]
[317.76623535 323.74649048]
[330.78915405 316.30313110]
[345.45059204 313.13427734]
[360.38580322 314.53527832]
[348.29931641 305.65176392]
[336.21282959 296.76821899]
[324.12637329 287.88470459]
[312.03988647 279.00115967]
[304.76025391 277.56802368]
[299.81497192 269.84176636]
[287.89373779 260.73770142]
[275.97250366 251.63362122]
[261.16146851 250.05816650]
[254.88984680 235.53311157]
[242.96859741 226.42903137]
[232.21409607 230.36869812]
[220.77775574 228.59213257]
[211.53532410 221.42845154]
[206.86766052 210.57592773]
[208.04791260 198.70059204]
[196.46916199 189.16473389]
[184.89041138 179.62887573]
[173.31166077 170.09301758]
[161.73291016 160.55715942]
[150.15415955 151.02130127]
[135.41098022 148.90283203]
[129.67718506 134.15718079]
[118.09844208 124.62132263]
[97.72739410 132.80032349]
[75.43949890 125.21602631]
[62.64922714 103.57836151]
[47.98276901 100.43273926]
[33.31630707 97.28710938]
[18.64984894 94.14148712]
[3.21880460 99.69260406]
[-9.12772274 88.89930725]
[-5.68868399 72.86480713]
[9.99813271 68.08403015]
[21.79547501 79.47502899]
[36.46193314 82.62065125]
[51.12839508 85.76628113]
[65.79485321 88.91190338]
[73.29485321 75.92152405]
[63.23743057 64.79280853]
[52.31280518 64.86872101]
[43.34595871 59.02157974]
[39.18450928 49.39801788]
[40.98892593 39.29313278]
[31.34711075 27.80246544]
[21.70529747 16.31179810]
[6.23599768 17.52851105]
[-6.97647142 9.39154053]
[-12.85164547 -4.97028208]
[-9.13040066 -20.03454208]
[2.75636816 -30.00872612]
[18.23795700 -31.05755615]
[31.36137772 -22.77773476]
[37.08040619 -8.35302258]
[33.19596481 6.66998386]
[42.83777618 18.16065025]
[52.47959137 29.65131760]
[71.07446289 34.87280273]
[74.36614227 54.73538589]
[84.42356873 65.86409760]
[97.09788513 63.58857346]
[109.44378662 65.74597931]
[119.99881744 71.84223938]
[127.59466553 80.93132019]
[131.48556519 91.75456238]
[131.41777039 102.91201019]
[127.63429260 113.04257202]
[139.21304321 122.57843018]
[154.78440857 125.37897491]
[159.69001770 139.44255066]
[171.26876831 148.97840881]
[182.84751892 158.51426697]
[194.42626953 168.05012512]
[206.00502014 177.58598328]
[217.58377075 187.12184143]
[236.32461548 184.55851746]
[250.76583862 196.27597046]
[252.07267761 214.50779724]
[263.99389648 223.61186218]
[279.65765381 225.83850098]
[285.07656860 239.71237183]
[296.99780273 248.81645203]
[308.91906738 257.92050171]
[320.92343140 266.91470337]
[333.00988770 275.79821777]
[345.09637451 284.68176270]
[357.18286133 293.56527710]
[369.26931763 302.44882202]
[379.37161255 303.66287231]
[385.10729980 310.64736938]
[399.33871460 315.38732910]
[413.57009888 320.12728882]
[427.80151367 324.86727905]
[442.03289795 329.60723877]
[456.26431274 334.34719849]
[470.49569702 339.08715820]
[484.72711182 343.82711792]
[499.04318237 348.30484009]
[513.43908691 352.51882935]
[527.83502197 356.73278809]
[542.23095703 360.94674683]
[556.62683105 365.16070557]
[566.24395752 354.97482300]
[579.25250244 349.95794678]
[593.08648682 351.03842163]
[605.04364014 357.94781494]
[612.81292725 369.28479004]
[614.92132568 382.79873657]
[629.23736572 387.27645874]
[643.55346680 391.75418091]
[657.86950684 396.23190308]
[671.28540039 385.96075439]
[688.01361084 385.69836426]
[701.47521973 395.35037231]
[706.49359131 410.96194458]
[720.88952637 415.17593384]
[735.28540039 419.38989258]
[749.99316406 412.98190308]
[764.10528564 420.61264038]
[766.79614258 436.42840576]
[756.00158691 448.29672241]
[740.00225830 447.11325073]
[731.07147217 433.78579712]
[716.67553711 429.57183838]
[702.27960205 425.35787964]
[692.49853516 434.47561646]
[679.38195801 437.58523560]
[666.34063721 433.76794434]
[656.82043457 423.92065430]
[653.39178467 410.54797363]
[639.07574463 406.07025146]
[624.75964355 401.59252930]
[610.44360352 397.11480713]
[598.84313965 408.33874512]
[583.07714844 412.21392822]
[567.41546631 407.59362793]
[556.14868164 395.64514160]
[552.41290283 379.55664062]
[538.01696777 375.34268188]
[523.62103271 371.12869263]
[509.22512817 366.91473389]
[494.82922363 362.70077515]
[490.25381470 364.18630981]
[484.69644165 362.78628540]
[479.98715210 358.05853271]
[465.75573730 353.31857300]
[451.52435303 348.57858276]
[437.29293823 343.83862305]
[423.06155396 339.09866333]
[408.83013916 334.35870361]
[394.59875488 329.61874390]
[380.36734009 324.87878418]
[390.13345337 336.26397705]
[396.01080322 350.06460571]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 104]
[17 103]
[18 102]
[19 101]
[20 100]
[22 99]
[23 98]
[24 97]
[26 95]
[27 94]
[32 91]
[33 90]
[34 89]
[35 88]
[36 87]
[37 86]
[39 84]
[40 83]
[43 54]
[44 53]
[45 52]
[46 51]
[55 76]
[56 75]
[60 73]
[61 72]
[62 71]
[106 168]
[107 167]
[108 166]
[109 165]
[110 164]
[111 163]
[112 162]
[113 161]
[114 158]
[115 157]
[116 156]
[117 155]
[118 154]
[124 149]
[125 148]
[126 147]
[127 146]
[131 141]
[132 140]
[133 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
