%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:51:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGGGACGUAGCGUCGCCGCGCCAGGUCUCUAGCAGCUGCCGCUGAGCCGCCGGACGGACGCUCGUCUUCGCCCGCCAUGGCCGAGAGCGACUGGGACACGGUGACGGUGCUGCGCAAGAAGGGCCCUACGGCCGCCCAGGCCAAAUCCAAGCAGGCUAUCUUAGCGGCACAGAGAC\
) } def
/len { sequence length } bind def

/coor [
[70.34828949 137.14750671]
[62.56272125 129.28500366]
[56.80604553 119.83541107]
[42.35766220 123.86582947]
[27.90928078 127.89624786]
[13.46089840 131.92666626]
[-0.98748404 135.95707703]
[-15.43586636 139.98748779]
[-29.88424873 144.01791382]
[-37.33543777 149.35292053]
[-44.62163162 147.98989868]
[-59.13851929 151.76611328]
[-73.65541077 155.54234314]
[-88.17230225 159.31857300]
[-102.68919373 163.09480286]
[-117.17238617 166.99827576]
[-131.62077332 171.02868652]
[-146.03321838 175.18574524]
[-160.40864563 179.46910095]
[-174.78407288 183.75247192]
[-182.14048767 189.21742249]
[-189.44947815 187.98248291]
[-203.89785767 192.01289368]
[-208.82446289 196.49217224]
[-214.43199158 197.61924744]
[-218.92428589 195.92166138]
[-233.50521851 199.44253540]
[-241.13903809 204.51277161]
[-248.37290955 202.89488220]
[-263.01339722 206.15931702]
[-277.65386963 209.42375183]
[-285.37548828 214.35923767]
[-292.57986450 212.61463928]
[-307.27536011 215.62162781]
[-321.97085571 218.62863159]
[-329.25747681 232.46479797]
[-343.75250244 238.33230591]
[-358.61190796 233.46067810]
[-366.81945801 220.15016174]
[-364.49987793 204.68557739]
[-352.74832153 194.36882019]
[-337.11358643 194.07115173]
[-324.97787476 203.93312073]
[-310.28234863 200.92613220]
[-295.58685303 197.91912842]
[-280.91830444 194.78327942]
[-266.27783203 191.51884460]
[-251.63735962 188.25440979]
[-237.02609253 184.86161804]
[-222.44515991 181.34074402]
[-207.92826843 177.56451416]
[-193.47988892 173.53408813]
[-179.06742859 169.37704468]
[-164.69201660 165.09368896]
[-150.31658936 160.81031799]
[-144.78800964 155.87257385]
[-135.65118408 156.58030701]
[-121.20280457 152.54989624]
[-115.58842468 147.70993042]
[-106.46541595 148.57791138]
[-91.94853210 144.80168152]
[-77.43164062 141.02545166]
[-62.91474915 137.24923706]
[-48.39785767 133.47300720]
[-33.91466522 129.56953430]
[-19.46628189 125.53911591]
[-5.01790047 121.50869751]
[9.43048191 117.47827911]
[23.87886429 113.44786072]
[38.32724762 109.41744995]
[52.77562714 105.38703156]
[54.22046280 87.21738434]
[62.39746094 70.92749786]
[76.10414124 58.91290283]
[93.32485962 52.94042206]
[93.58811188 37.94272995]
[93.85135651 22.94504166]
[94.11460876 7.94735146]
[86.62068939 -5.98648405]
[94.58016205 -18.57600784]
[94.84340668 -33.57369614]
[87.34949493 -47.50753403]
[95.30896759 -60.09705734]
[95.57221222 -75.09474182]
[88.07829285 -89.02857971]
[96.03776550 -101.61810303]
[96.30101776 -116.61579132]
[86.23696136 -129.10957336]
[89.87063599 -144.73570251]
[104.41460419 -151.50715637]
[118.71196747 -144.22946167]
[121.79502106 -128.48542786]
[111.29870605 -116.35254669]
[111.03545380 -101.35485840]
[118.54820251 -88.49375153]
[110.56990051 -74.83149719]
[110.30665588 -59.83380890]
[117.81939697 -46.97270584]
[109.84110260 -33.31044769]
[109.57785034 -18.31275940]
[117.09059906 -5.45165825]
[109.11229706 8.21059990]
[108.84905243 23.20829010]
[108.58580017 38.20597839]
[108.32255554 53.20367050]
[124.43460083 59.23099518]
[137.34597778 70.59864044]
[145.36540222 85.81756592]
[147.44244385 102.89424133]
[162.08291626 106.15867615]
[176.72338867 109.42311859]
[191.36386108 112.68756104]
[206.00433350 115.95200348]
[220.64479065 119.21643829]
[235.28526306 122.48088074]
[246.58901978 116.22957611]
[258.73010254 119.26988220]
[265.31658936 129.43775940]
[279.89752197 132.95863342]
[294.47845459 136.47950745]
[309.05938721 140.00038147]
[320.47109985 133.94842529]
[332.55694580 137.20133972]
[338.96398926 147.48323059]
[353.48086548 151.25946045]
[367.99777222 155.03569031]
[382.51464844 158.81192017]
[396.24774170 142.90440369]
[416.05715942 136.11097717]
[436.51834106 140.21368408]
[452.06756592 154.02136230]
[458.51489258 173.71429443]
[473.38513184 175.68305969]
[488.25537109 177.65184021]
[503.12561035 179.62060547]
[516.68377686 171.04417419]
[531.79473877 176.43299866]
[536.86657715 191.65324402]
[528.00866699 205.02922058]
[512.01605225 206.30004883]
[501.15686035 194.49084473]
[486.28662109 192.52207947]
[471.41638184 190.55329895]
[456.54614258 188.58453369]
[452.52554321 197.20825195]
[446.55718994 204.63658142]
[438.97961426 210.43745422]
[430.22518921 214.27140808]
[420.79556274 215.91146851]
[411.23266602 215.25653076]
[402.08786011 212.33764648]
[393.88989258 207.31655884]
[387.11450195 200.47677612]
[382.15670776 192.20755005]
[379.30786133 182.98175049]
[378.73843384 173.32881165]
[364.22152710 169.55258179]
[349.70465088 165.77635193]
[335.18774414 162.00012207]
[318.56250000 167.57986450]
[305.53848267 154.58131409]
[290.95758057 151.06044006]
[276.37664795 147.53956604]
[261.79571533 144.01867676]
[245.27093506 149.88932800]
[232.02082825 137.12135315]
[217.38035583 133.85691833]
[202.73988342 130.59246826]
[188.09941101 127.32803345]
[173.45893860 124.06359100]
[158.81846619 120.79914856]
[144.17799377 117.53471375]
[138.92660522 127.27416992]
[131.56562805 135.53552246]
[122.49394989 141.87103271]
[112.20322418 145.93737793]
[101.25115967 147.51416016]
[90.23128510 146.51594543]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 71]
[4 70]
[5 69]
[6 68]
[7 67]
[8 66]
[9 65]
[11 64]
[12 63]
[13 62]
[14 61]
[15 60]
[16 58]
[17 57]
[18 55]
[19 54]
[20 53]
[22 52]
[23 51]
[26 50]
[27 49]
[29 48]
[30 47]
[31 46]
[33 45]
[34 44]
[35 43]
[75 105]
[76 104]
[77 103]
[78 102]
[80 100]
[81 99]
[83 97]
[84 96]
[86 94]
[87 93]
[109 172]
[110 171]
[111 170]
[112 169]
[113 168]
[114 167]
[115 166]
[118 164]
[119 163]
[120 162]
[121 161]
[124 159]
[125 158]
[126 157]
[127 156]
[132 144]
[133 143]
[134 142]
[135 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
