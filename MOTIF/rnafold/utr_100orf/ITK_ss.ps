%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:16:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCAUUCUUUGCCCCAAAACUCUUUCCUUUGGUUGUGCUAAGAGGUGAUGCCCAAGGUGCACCACCUUUCAAGAACUGGAUCAUGAACAACUUUAUCCUCCUGGAAGAACAGCUCAUCAAGAAAUCCCAACAAAAGAGAAGAACUUCUCCCUCGAACUUUAAAGUCCGCUUCUUUGUGUUAA\
) } def
/len { sequence length } bind def

/coor [
[306.37918091 369.49606323]
[297.90240479 369.57455444]
[294.33190918 384.14340210]
[290.76141357 398.71224976]
[297.81622314 413.12091064]
[290.81973267 427.55798340]
[275.13906860 430.94857788]
[262.80307007 420.69171143]
[263.27490234 404.65560913]
[276.19256592 395.14175415]
[279.76306152 380.57290649]
[283.33355713 366.00405884]
[275.87139893 362.09088135]
[269.21621704 356.90753174]
[263.58209229 350.61642456]
[259.15115356 343.41571045]
[256.06741333 335.53302002]
[254.43232727 327.21826172]
[254.30133057 318.73562622]
[255.68203735 310.35537720]
[258.53378296 302.34500122]
[262.76898193 294.96087646]
[268.25564575 288.43997192]
[259.56433105 276.21453857]
[250.87303162 263.98913574]
[242.18171692 251.76370239]
[225.78132629 252.12557983]
[212.25624084 242.55213928]
[207.04209900 226.64862061]
[212.37831116 210.61056519]
[203.47840881 198.53613281]
[194.47518921 186.53854370]
[185.36933899 174.61868286]
[176.26347351 162.69880676]
[167.15760803 150.77894592]
[158.05174255 138.85908508]
[144.17704773 133.44224548]
[141.94805908 117.77883911]
[132.84219360 105.85897064]
[116.95405579 128.29591370]
[89.90747833 131.01100159]
[70.32871246 112.60468292]
[56.07886124 107.92047882]
[41.82901001 103.23626709]
[27.57916260 98.55206299]
[13.32931328 93.86785126]
[-0.92053539 89.18364716]
[-16.44676781 92.22447968]
[-26.12133980 80.89964294]
[-40.37118912 76.21543121]
[-54.62103653 71.53121948]
[-67.81459045 79.92551422]
[-83.31032562 77.82402039]
[-93.79162598 66.21900940]
[-94.30953979 50.59000397]
[-84.61952972 38.31654739]
[-69.29692078 35.19379044]
[-55.57658005 42.69620132]
[-49.93682861 57.28137589]
[-35.68698120 61.96558380]
[-21.43713188 66.64978790]
[-6.93014336 63.27391434]
[3.76367307 74.93379974]
[18.01352119 79.61800385]
[32.26337051 84.30221558]
[46.51321793 88.98641968]
[60.76306915 93.67063141]
[75.01291656 98.35483551]
[84.72032928 86.91953278]
[77.78458405 73.61933136]
[70.84883881 60.31912231]
[57.60736084 51.66037750]
[58.58300018 36.79776001]
[51.64725494 23.49755669]
[36.49774170 18.99558067]
[29.04235840 5.06027269]
[33.70425034 -10.04079628]
[47.71760178 -17.34843063]
[62.76853943 -12.52713966]
[69.92761230 1.56268954]
[64.94745636 16.56181145]
[71.88320160 29.86201668]
[84.62859344 37.56944275]
[84.14904022 53.38338089]
[91.08478546 66.68358612]
[98.02053070 79.98378754]
[105.49291992 79.34081268]
[104.20696259 64.39603424]
[102.92100525 49.45125961]
[97.07981873 35.63530731]
[108.41455841 25.81066322]
[121.26097107 33.55468369]
[117.86578369 48.16530228]
[119.15174103 63.11007690]
[120.43769836 78.05485535]
[127.91007996 77.41187286]
[132.47180176 63.12234116]
[137.03352356 48.83281326]
[133.01461792 32.93374252]
[144.96113586 21.69931221]
[160.58355713 26.68653488]
[163.81083679 42.76498795]
[151.32305908 53.39453506]
[146.76133728 67.68406677]
[142.19961548 81.97359467]
[144.76205444 96.75310516]
[153.86791992 108.67297363]
[168.39393616 114.94239807]
[169.97160339 129.75321960]
[179.07746887 141.67308044]
[188.18333435 153.59295654]
[197.28919983 165.51281738]
[206.39506531 177.43267822]
[214.11148071 182.36836243]
[215.55284119 189.63623047]
[224.45274353 201.71066284]
[238.20510864 200.59204102]
[250.61322021 206.37480164]
[258.47552490 217.44869995]
[259.82211304 230.85404968]
[254.40713501 243.07238770]
[263.09844971 255.29780579]
[271.78976440 267.52322388]
[280.48107910 279.74865723]
[303.24874878 274.91836548]
[325.53726196 281.41723633]
[342.05831909 297.64642334]
[348.91909790 319.70516968]
[344.53927612 342.32836914]
[356.98443604 350.70202637]
[369.42959595 359.07568359]
[381.87475586 367.44934082]
[394.67626953 365.74539185]
[404.87460327 372.99633789]
[407.30761719 384.86160278]
[419.60717773 393.44766235]
[431.90676880 402.03372192]
[444.20632935 410.61978149]
[456.50592041 419.20584106]
[468.80548096 427.79190063]
[481.10507202 436.37796021]
[501.23153687 437.17227173]
[508.71145630 454.98745728]
[521.29852295 463.14624023]
[533.88555908 471.30505371]
[546.47265625 479.46383667]
[558.75427246 470.54611206]
[573.42901611 466.67102051]
[588.51220703 468.36260986]
[601.96398926 475.39212036]
[611.96514893 486.80883789]
[617.16302490 501.06881714]
[616.85473633 516.24346924]
[611.08190918 530.28051758]
[600.62530518 541.28155518]
[586.89904785 547.75891113]
[571.75958252 548.83642578]
[557.25439453 544.36846924]
[545.34509277 534.95922852]
[537.64239502 521.88128662]
[535.18798828 506.90328979]
[538.31384277 492.05090332]
[525.72680664 483.89212036]
[513.13970947 475.73330688]
[500.55267334 467.57452393]
[490.76162720 470.60278320]
[480.71301270 467.66748047]
[473.80718994 459.50955200]
[472.51901245 448.67755127]
[460.21942139 440.09149170]
[447.91986084 431.50543213]
[435.62026978 422.91937256]
[423.32070923 414.33331299]
[411.02111816 405.74725342]
[398.72155762 397.16119385]
[381.19171143 396.61309814]
[373.50109863 379.89450073]
[361.05593872 371.52084351]
[348.61077881 363.14718628]
[336.16561890 354.77352905]
[329.84262085 360.41989136]
[322.61129761 364.84362793]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 12]
[3 11]
[4 10]
[23 124]
[24 123]
[25 122]
[26 121]
[30 116]
[31 115]
[32 113]
[33 112]
[34 111]
[35 110]
[36 109]
[38 107]
[39 106]
[42 68]
[43 67]
[44 66]
[45 65]
[46 64]
[47 63]
[49 61]
[50 60]
[51 59]
[69 86]
[70 85]
[71 84]
[73 82]
[74 81]
[96 105]
[97 104]
[98 103]
[129 180]
[130 179]
[131 178]
[132 177]
[135 175]
[136 174]
[137 173]
[138 172]
[139 171]
[140 170]
[141 169]
[143 165]
[144 164]
[145 163]
[146 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
