%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:39:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCCCGCGCCCGGCCCGCGCCCUGCCCAGUGCGGCCUCCUUUCCACCCGCCGCUGCCUGCCCGCGCCGUCCGGCGCCCGAGCUGCCCGCGGGCUGGGUCCCCGCGGCCCGAGCCGCCCCGGCCGGGACCCCGAACAAGGCCGAGAUGACUUCCAAGGAGGACGGCAAGGCGGCGCCGGGGGAGGAGCGGCGGCGCAGCCCGCUGGACCACCUGCCUCCGCCUGCCAACUCCAACAAGCCACUGA\
) } def
/len { sequence length } bind def

/coor [
[160.45867920 129.69474792]
[145.94529724 125.90505219]
[131.43191528 122.11535645]
[116.91853333 118.32566833]
[83.96937561 115.95453644]
[69.11714172 118.05477905]
[54.26490021 120.15502167]
[39.41266251 122.25526428]
[24.56042290 124.35550690]
[9.76666641 126.83436584]
[-4.95895815 129.69023132]
[-19.68458366 132.54609680]
[-34.41020966 135.40196228]
[-49.13583374 138.25782776]
[-63.86145782 141.11369324]
[-78.58708191 143.96955872]
[-93.31270599 146.82543945]
[-108.03833008 149.68130493]
[-122.76395416 152.53717041]
[-137.48957825 155.39303589]
[-142.57237244 169.81913757]
[-154.11732483 179.69895935]
[-168.95880127 182.45521545]
[-183.09263611 177.44615173]
[-192.75642395 166.11140442]
[-207.48205566 168.96726990]
[-217.55409241 192.71145630]
[-249.18800354 197.14926147]
[-262.71438599 203.63285828]
[-276.24078369 210.11643982]
[-286.89208984 227.24879456]
[-306.09530640 224.87443542]
[-319.45169067 231.70135498]
[-332.80807495 238.52827454]
[-346.16448975 245.35519409]
[-359.52087402 252.18211365]
[-358.66229248 267.38681030]
[-364.06832886 281.62390137]
[-374.80230713 292.42672729]
[-389.00457764 297.92361450]
[-404.21444702 297.16223145]
[-417.79672241 290.27447510]
[-427.39822388 278.45367432]
[-431.35540771 263.74789429]
[-428.98266602 248.70494080]
[-420.69110107 235.93115234]
[-407.91726685 227.63963318]
[-392.87432861 225.26695251]
[-378.16854858 229.22418213]
[-366.34777832 238.82572937]
[-352.99139404 231.99880981]
[-339.63500977 225.17189026]
[-326.27862549 218.34495544]
[-312.92224121 211.51803589]
[-310.67431641 201.57908630]
[-303.17770386 194.35734558]
[-292.73074341 192.40104675]
[-282.72436523 196.59005737]
[-269.19796753 190.10647583]
[-255.67160034 183.62287903]
[-256.48413086 176.16702271]
[-270.21072388 170.11880493]
[-258.10919189 161.25531006]
[-258.92172241 153.79945374]
[-273.52716064 150.38165283]
[-288.13259888 146.96385193]
[-302.73803711 143.54605103]
[-317.34344482 140.12825012]
[-332.87506104 145.39146423]
[-345.01873779 134.37045288]
[-341.28213501 118.40267181]
[-325.50915527 113.91442108]
[-313.92565918 125.52281189]
[-299.32022095 128.94061279]
[-284.71478271 132.35841370]
[-270.10937500 135.77621460]
[-255.50393677 139.19403076]
[-243.47761536 134.52635193]
[-231.51004028 134.60960388]
[-221.28683472 138.77442932]
[-214.02688599 145.81730652]
[-210.33792114 154.24165344]
[-195.61228943 151.38578796]
[-190.88623047 137.26028442]
[-179.64953613 127.33089447]
[-164.85368347 124.33934021]
[-150.45246887 129.18719482]
[-140.34544373 140.66740417]
[-125.61981964 137.81153870]
[-110.89419556 134.95567322]
[-96.16857147 132.09980774]
[-81.44294739 129.24394226]
[-66.71732330 126.38807678]
[-51.99169922 123.53221130]
[-37.26607513 120.67633820]
[-22.54044914 117.82047272]
[-7.81482506 114.96460724]
[6.91079998 112.10874176]
[8.58641052 109.88879395]
[11.23222446 108.19088745]
[14.65658665 107.38416290]
[18.53913689 107.76264954]
[22.46018028 109.50326538]
[37.31241989 107.40302277]
[52.16465759 105.30278015]
[67.01689911 103.20253754]
[81.86913300 101.10229492]
[90.88615417 89.11508179]
[88.78591156 74.26284027]
[86.68567657 59.41060638]
[84.58543396 44.55836868]
[80.29428101 36.52145767]
[82.55445862 29.50318146]
[80.64405823 14.62533379]
[78.73365021 -0.25251454]
[76.82324982 -15.13036251]
[68.80887604 -30.07044601]
[80.94649506 -41.90744400]
[95.68092346 -33.52097321]
[91.70109558 -17.04076576]
[93.61150360 -2.16291714]
[95.52190399 12.71493053]
[97.43230438 27.59277916]
[99.43766785 42.45812607]
[101.53791046 57.31036377]
[103.63815308 72.16260529]
[105.73839569 87.01483917]
[111.01580048 72.97386169]
[113.49318695 58.17985916]
[122.75403595 46.38000107]
[136.53540039 40.45766830]
[151.46969604 41.86002731]
[163.90763855 50.24439621]
[170.80992126 63.56200027]
[170.48991394 78.55858612]
[163.02581787 91.56963348]
[150.24153137 99.41579437]
[135.26179504 100.17996979]
[120.70822144 103.81228638]
[135.22160339 107.60197449]
[149.73498535 111.39167023]
[164.24836731 115.18135834]
[183.44676208 108.98542786]
[196.57066345 123.20387268]
[211.17608643 126.62167358]
[220.22125244 125.53035736]
[225.94564819 130.17750549]
[240.50624084 133.78153992]
[255.76118469 129.58665466]
[266.25659180 140.15527344]
[280.81719971 143.75932312]
[295.37777710 147.36335754]
[305.22082520 137.73298645]
[318.43069458 134.24563599]
[331.53546143 137.70742798]
[341.14505005 147.11241150]
[344.82827759 159.93171692]
[359.34164429 163.72140503]
[373.85504150 167.51109314]
[388.36840820 171.30078125]
[399.11596680 163.20562744]
[412.36975098 162.77725220]
[423.29241943 169.94816589]
[428.02609253 181.91795349]
[442.48989868 185.89266968]
[456.95370483 189.86738586]
[471.41748047 193.84211731]
[480.49780273 193.09805298]
[486.04000854 197.96104431]
[500.45187378 202.12016296]
[514.86370850 206.27926636]
[529.27557373 210.43836975]
[543.68743896 214.59747314]
[555.92303467 205.23812866]
[571.14556885 204.88223267]
[583.51251221 213.45677185]
[588.40057373 227.50117493]
[602.81243896 231.66029358]
[617.22430420 235.81939697]
[631.63616943 239.97850037]
[640.81268311 234.19346619]
[651.43927002 234.39640808]
[660.02624512 240.27998352]
[663.88574219 249.71081543]
[678.18670654 254.23661804]
[692.08807373 247.20887756]
[706.52679443 252.00242615]
[713.14099121 265.29858398]
[727.44195557 269.82440186]
[741.74291992 274.35018921]
[756.04388428 278.87600708]
[770.34478760 283.40182495]
[784.64575195 287.92761230]
[798.55480957 280.42343140]
[813.67211914 285.03231812]
[821.02886963 299.01995850]
[816.26037598 314.08770752]
[802.19573975 321.29614258]
[787.17926025 316.36862183]
[780.11993408 302.22857666]
[765.81896973 297.70275879]
[751.51806641 293.17694092]
[737.21710205 288.65115356]
[722.91613770 284.12533569]
[708.61523438 279.59951782]
[695.55572510 286.66958618]
[680.98803711 282.28347778]
[673.66088867 268.53756714]
[659.35992432 264.01174927]
[640.81317139 269.52694702]
[627.47705078 254.39036560]
[613.06518555 250.23126221]
[598.65332031 246.07215881]
[584.24145508 241.91304016]
[572.62207031 251.19360352]
[557.58813477 251.86054993]
[544.89587402 243.44873047]
[539.52838135 229.00933838]
[525.11651611 224.85023499]
[510.70462036 220.69113159]
[496.29275513 216.53201294]
[481.88088989 212.37290955]
[467.44277954 208.30592346]
[452.97897339 204.33119202]
[438.51516724 200.35647583]
[424.05136108 196.38174438]
[409.78948975 205.31416321]
[393.15518188 201.07357788]
[384.57873535 185.81416321]
[370.06533813 182.02447510]
[355.55197144 178.23478699]
[341.03857422 174.44509888]
[328.67611694 185.26148987]
[312.13610840 186.58271790]
[297.93130493 177.68952942]
[291.77374268 161.92395020]
[277.21313477 158.31991577]
[262.65255737 154.71586609]
[248.43907166 159.16854858]
[236.90219116 148.34213257]
[222.34159851 144.73809814]
[207.75828552 141.22709656]
[193.15286255 137.80929565]
[185.01603699 143.94346619]
[174.62829590 144.61270142]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 142]
[2 141]
[3 140]
[4 139]
[5 107]
[6 106]
[7 105]
[8 104]
[9 103]
[10 98]
[11 97]
[12 96]
[13 95]
[14 94]
[15 93]
[16 92]
[17 91]
[18 90]
[19 89]
[20 88]
[25 83]
[26 82]
[28 60]
[29 59]
[30 58]
[32 54]
[33 53]
[34 52]
[35 51]
[36 50]
[64 77]
[65 76]
[66 75]
[67 74]
[68 73]
[108 127]
[109 126]
[110 125]
[111 124]
[113 123]
[114 122]
[115 121]
[116 120]
[144 243]
[145 242]
[147 241]
[148 240]
[150 238]
[151 237]
[152 236]
[157 232]
[158 231]
[159 230]
[160 229]
[164 226]
[165 225]
[166 224]
[167 223]
[169 222]
[170 221]
[171 220]
[172 219]
[173 218]
[177 214]
[178 213]
[179 212]
[180 211]
[184 209]
[185 208]
[188 205]
[189 204]
[190 203]
[191 202]
[192 201]
[193 200]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
