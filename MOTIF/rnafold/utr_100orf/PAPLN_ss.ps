%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:10:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGUUCCUUGCGGCCCGGCCGACCUCGCGGGCUUGGGCCUGGGCGGGCACCGACGGAGCGGCCCUGGCUGCAGCCUCCCGGCGCCAGCGAAGACAGGCUGAGAUGCGGCUGCUCCUGCUCGUGCCGCUGCUGCUGGCUCCAGCGCCCGGGUCCUCGGCUCCCAAGGUGAGGCGGCAGAGUGACACCUGGGGACCCUGGAGCC\
) } def
/len { sequence length } bind def

/coor [
[101.15786743 222.61285400]
[93.41654205 208.15589905]
[102.29467773 194.36782837]
[102.52680969 179.36962891]
[102.75893402 164.37142944]
[102.99106598 149.37321472]
[103.22319031 134.37501526]
[96.19330597 131.76144409]
[90.96595764 145.82113647]
[76.90634918 140.59356689]
[82.13353729 126.53431702]
[75.10365295 123.92075348]
[65.48161316 135.42797852]
[55.85956955 146.93521118]
[46.23752975 158.44244385]
[36.61548615 169.94967651]
[26.99344635 181.45689392]
[32.34658432 195.85272217]
[29.76881218 210.99374390]
[19.95353317 222.80711365]
[5.54100990 228.11511230]
[-9.59186077 225.48988342]
[-21.37441444 215.63761902]
[-26.63720131 201.20854187]
[-23.96455956 186.08396912]
[-14.07541466 174.33235168]
[0.37010071 169.11482239]
[15.48621655 171.83485413]
[25.10825729 160.32763672]
[34.73030090 148.82040405]
[44.35234070 137.31317139]
[53.97438049 125.80594635]
[63.59642410 114.29871368]
[69.22755432 89.23934174]
[86.95274353 77.40879059]
[83.50186920 62.81113815]
[80.05099487 48.21348572]
[76.60012817 33.61582947]
[73.14925385 19.01817703]
[69.69838715 4.42052460]
[66.24751282 -10.17712879]
[62.79664230 -24.77478218]
[59.34576797 -39.37243652]
[55.89489746 -53.97008896]
[39.05031967 -62.43156052]
[35.65466690 -84.17420959]
[28.52620316 -97.37213135]
[21.39773941 -110.57004547]
[14.26927567 -123.76796722]
[7.14081287 -136.96588135]
[0.30464622 -143.03421021]
[0.00595207 -150.42366028]
[-6.91741705 -163.73030090]
[-24.38782310 -173.77912903]
[-22.71833420 -193.03936768]
[-30.05018425 -206.12539673]
[-37.38203430 -219.21141052]
[-44.71388626 -232.29743958]
[-52.04573441 -245.38345337]
[-59.37758636 -258.46948242]
[-66.70943451 -271.55551147]
[-74.04128265 -284.64151001]
[-81.37313843 -297.72753906]
[-96.66552734 -298.02746582]
[-109.66871643 -305.88964844]
[-116.94234467 -319.11691284]
[-116.62072754 -334.10867310]
[-108.89035797 -346.84078979]
[-116.22220612 -359.92681885]
[-123.15145874 -365.88861084]
[-123.56447601 -373.27255249]
[-130.69293213 -386.47048950]
[-137.82139587 -399.66839600]
[-144.94985962 -412.86630249]
[-152.07832336 -426.06423950]
[-159.20678711 -439.26214600]
[-176.77479553 -439.34658813]
[-191.80560303 -448.26831055]
[-200.20780945 -463.49395752]
[-199.74754333 -480.78900146]
[-190.64157104 -495.39511108]
[-198.17504883 -508.36608887]
[-212.65982056 -516.05529785]
[-212.97270203 -532.45141602]
[-198.79180908 -540.68762207]
[-184.70526123 -532.29113770]
[-185.20405579 -515.89959717]
[-177.67057800 -502.92858887]
[-165.10646057 -504.32052612]
[-152.90480042 -500.84231567]
[-142.88957214 -492.97708130]
[-136.57176208 -481.86654663]
[-134.92152405 -469.14520264]
[-138.21926880 -456.70004272]
[-146.00888062 -446.39059448]
[-138.88041687 -433.19268799]
[-131.75195312 -419.99478149]
[-124.62348175 -406.79684448]
[-117.49501801 -393.59893799]
[-110.36655426 -380.40103149]
[-103.13618469 -367.25866699]
[-95.80433655 -354.17263794]
[-80.90928650 -354.11709595]
[-67.95574951 -346.56317139]
[-60.47303391 -333.45306396]
[-60.55768585 -318.25799561]
[-68.28711700 -305.05938721]
[-60.95526505 -291.97335815]
[-53.62341309 -278.88735962]
[-46.29156494 -265.80133057]
[-38.95971298 -252.71530151]
[-31.62786293 -239.62928772]
[-24.29601288 -226.54325867]
[-16.96416283 -213.45724487]
[-9.63231182 -200.37121582]
[0.41979223 -198.49285889]
[7.93399334 -191.23680115]
[10.25852871 -180.82780457]
[6.38923359 -170.65367126]
[13.31260300 -157.34703064]
[20.33872986 -144.09434509]
[27.46719360 -130.89642334]
[34.59565735 -117.69850922]
[41.72412109 -104.50059509]
[48.85258484 -91.30267334]
[44.06785202 -105.51908875]
[50.05136490 -119.27400208]
[63.71381760 -125.46572113]
[78.00125885 -120.89744568]
[85.53704834 -107.92779541]
[82.43044281 -93.25302124]
[70.28340149 -84.44921875]
[83.74716949 -91.06185150]
[97.21094513 -97.67448425]
[110.67471313 -104.28712463]
[119.35317230 -118.20172882]
[135.73136902 -117.37291718]
[142.96080017 -102.65328979]
[133.60446167 -89.18515015]
[117.28734589 -90.82334900]
[103.82357788 -84.21071625]
[90.35980988 -77.59808350]
[76.89604187 -70.98545074]
[70.49255371 -57.42095947]
[73.94342041 -42.82330704]
[77.39429474 -28.22565460]
[80.84516907 -13.62800026]
[84.29603577 0.96965283]
[87.74691010 15.56730652]
[91.19777679 30.16495895]
[94.64865112 44.76261139]
[98.09952545 59.36026764]
[101.55039215 73.95791626]
[116.92422485 80.14643097]
[125.46831512 94.34681702]
[123.73471069 110.82853699]
[135.01548767 120.71508789]
[150.49362183 123.99197388]
[154.96551514 138.19941711]
[166.24630737 148.08596802]
[177.52708435 157.97251892]
[188.80787659 167.85906982]
[204.28601074 171.13595581]
[208.75790405 185.34339905]
[220.03869629 195.22994995]
[231.31947327 205.11650085]
[242.60026550 215.00305176]
[253.88104248 224.88960266]
[269.43438721 224.03421021]
[280.73385620 234.22126770]
[281.45349121 249.05426025]
[292.73428345 258.94082642]
[308.48593140 257.65213013]
[320.48104858 267.94253540]
[321.60314941 283.70693970]
[311.18649292 295.59259033]
[295.41110229 296.54794312]
[283.63623047 286.00619507]
[282.84771729 270.22158813]
[271.56695557 260.33505249]
[256.76770020 261.56719971]
[245.18655396 251.70153809]
[243.99449158 236.17037964]
[232.71371460 226.28382874]
[221.43292236 216.39727783]
[210.15214539 206.51072693]
[198.87135315 196.62417603]
[184.20010376 194.05444336]
[178.92132568 179.13984680]
[167.64054871 169.25329590]
[156.35975647 159.36674500]
[145.07896423 149.48019409]
[130.40771484 146.91046143]
[125.12894440 131.99588013]
[113.84815979 122.10932159]
[116.25758362 128.25642395]
[118.22139740 134.60714722]
[117.98926544 149.60534668]
[117.75714111 164.60354614]
[117.52500916 179.60176086]
[117.29288483 194.59996033]
[125.74007416 208.65617371]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 201]
[4 200]
[5 199]
[6 198]
[7 197]
[12 33]
[13 32]
[14 31]
[15 30]
[16 29]
[17 28]
[35 153]
[36 152]
[37 151]
[38 150]
[39 149]
[40 148]
[41 147]
[42 146]
[43 145]
[44 144]
[46 125]
[47 124]
[48 123]
[49 122]
[50 121]
[52 120]
[53 119]
[55 115]
[56 114]
[57 113]
[58 112]
[59 111]
[60 110]
[61 109]
[62 108]
[63 107]
[68 102]
[69 101]
[71 100]
[72 99]
[73 98]
[74 97]
[75 96]
[76 95]
[81 88]
[82 87]
[132 143]
[133 142]
[134 141]
[135 140]
[156 195]
[157 194]
[159 192]
[160 191]
[161 190]
[162 189]
[164 187]
[165 186]
[166 185]
[167 184]
[168 183]
[171 180]
[172 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
