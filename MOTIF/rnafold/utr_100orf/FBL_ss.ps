%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:03:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGUCACGCAGCGCACGUCGCCGCGCGCCUGCGCUCUUUUCCACGUGCGAAAGCCCCGGACUCGUGGAGUUGUGAACGCCGCGGACUCCGGAGCCGCACAAACCAGGGCUCGCCAUGAAGCCAGGAUUCAGUCCCCGUGGGGGUGGCUUUGGCGGCCGAGGGGGCUUUGGUGACCGUGGUGGUCGUGGAGGCCGAGGGGGCUUUGGCGGGGGCC\
) } def
/len { sequence length } bind def

/coor [
[76.31848145 265.22964478]
[74.13446808 280.06979370]
[71.95044708 294.90994263]
[75.62615967 311.46066284]
[60.73980713 319.57440186]
[48.82219315 307.51593018]
[57.11029816 292.72592163]
[59.29431534 277.88577271]
[61.47833252 263.04562378]
[54.41617584 260.52056885]
[33.22970200 252.94538879]
[25.50935173 265.80603027]
[17.78899956 278.66668701]
[10.06864738 291.52731323]
[16.26115990 305.75518799]
[12.87520790 320.89834595]
[1.21276116 331.13391113]
[-14.24173260 332.52612305]
[-27.54570389 324.53964233]
[-33.58350754 310.24542236]
[-30.03347969 295.13989258]
[-18.26068306 285.03143311]
[-2.79199648 283.80697632]
[4.92835522 270.94631958]
[12.64870739 258.08569336]
[20.36905861 245.22503662]
[26.93367958 231.73779297]
[32.29214096 217.72755432]
[37.65060806 203.71731567]
[43.00907135 189.70706177]
[40.32888031 175.05558777]
[52.48549271 164.93000793]
[57.84395599 150.91976929]
[63.20241928 136.90953064]
[68.56088257 122.89928436]
[57.14152145 132.62544250]
[47.60237122 144.20147705]
[33.17382050 148.30232239]
[18.97221756 143.47381592]
[10.03343201 131.42816162]
[9.52714920 116.43669891]
[17.63289642 103.81541443]
[31.47638321 98.03978729]
[46.14902496 101.15802002]
[61.14068604 101.65803528]
[48.22397995 94.03184509]
[35.30727768 86.40566254]
[22.39056969 78.77947235]
[9.47386456 71.15328979]
[4.26025152 71.10395050]
[0.01061578 69.24705505]
[-2.74830222 66.25175476]
[-3.83131170 62.89924240]
[-16.40141296 54.71434402]
[-32.18798447 53.66805267]
[-38.63159180 40.23938370]
[-51.20169067 32.05448532]
[-63.77179337 23.86958694]
[-76.34189606 15.68468857]
[-88.91199493 7.49979067]
[-107.31903076 6.93932486]
[-114.64802551 -9.00739288]
[-127.33638000 -17.00774956]
[-140.02473450 -25.00810432]
[-152.71308899 -33.00846100]
[-165.40144348 -41.00881577]
[-178.08979797 -49.00917053]
[-193.88996887 -49.82468414]
[-200.52909851 -63.15776825]
[-213.21745300 -71.15812683]
[-225.90580750 -79.15847778]
[-242.52882385 -82.49185181]
[-243.92744446 -99.38801575]
[-228.07876587 -105.40928650]
[-217.90545654 -91.84683228]
[-205.21710205 -83.84648132]
[-192.52874756 -75.84612274]
[-177.63612366 -75.60285187]
[-170.08943176 -61.69752502]
[-157.40109253 -53.69717026]
[-144.71273804 -45.69681168]
[-132.02438354 -37.69645691]
[-119.33602142 -29.69610214]
[-106.64767456 -21.69574738]
[-94.78684235 -24.06245613]
[-84.15118408 -17.50362778]
[-80.72709656 -5.07031059]
[-68.15699768 3.11458731]
[-55.58689499 11.29948521]
[-43.01679230 19.48438263]
[-30.44669342 27.66928101]
[-15.55921841 28.13013268]
[-8.21651554 42.14424133]
[4.35358620 50.32913971]
[17.10005188 58.23657990]
[30.01675606 65.86277008]
[42.93346405 73.48895264]
[55.85016632 81.11514282]
[68.76687622 88.74132538]
[81.10878754 73.13036346]
[99.97586823 67.50853729]
[118.44441223 73.68286896]
[129.88327026 89.17773438]
[143.32218933 82.51475525]
[156.76110840 75.85176849]
[165.68817139 62.78968430]
[180.52780151 64.06831360]
[193.96672058 57.40532684]
[207.40563965 50.74234390]
[213.70173645 44.12868500]
[221.08996582 44.08180237]
[234.62481689 37.61589432]
[248.15965271 31.14998627]
[261.69448853 24.68407822]
[275.22933960 18.21817017]
[288.76419067 11.75226116]
[302.29904175 5.28635311]
[307.82666016 -11.31229401]
[323.34387207 -18.63210678]
[339.03814697 -12.58444786]
[352.47708130 -19.24743080]
[365.91598511 -25.91041374]
[379.35491943 -32.57339478]
[392.79385376 -39.23637772]
[379.62185669 -46.41265106]
[376.87200928 -61.15843964]
[386.57205200 -72.59999084]
[401.56903076 -72.30014801]
[410.80401611 -60.48001480]
[407.46591187 -45.85461426]
[421.35534668 -51.51884460]
[435.24478149 -57.18307495]
[449.13421631 -62.84730530]
[463.02365112 -68.51153564]
[476.91308594 -74.17576599]
[490.80252075 -79.83998871]
[492.35540771 -90.38986206]
[498.10208130 -99.27645874]
[506.95010376 -104.93380737]
[517.26800537 -106.39825439]
[527.18591309 -103.47207642]
[534.93444824 -96.74714661]
[549.05877686 -101.79727173]
[563.18310547 -106.84738922]
[573.57269287 -118.77916718]
[588.16192627 -115.77851868]
[602.28619385 -120.82864380]
[612.48028564 -133.67436218]
[628.66015625 -131.00154114]
[634.18133545 -115.55976868]
[623.36413574 -103.23419952]
[607.33636475 -106.70432281]
[593.21203613 -101.65420532]
[583.83270264 -90.08364868]
[568.23321533 -92.72307587]
[554.10888672 -87.67295837]
[539.98461914 -82.62283325]
[532.96197510 -64.44878387]
[514.55175781 -57.19126511]
[496.46676636 -65.95055389]
[482.57733154 -60.28632355]
[468.68789673 -54.62209320]
[454.79843140 -48.95786667]
[440.90899658 -43.29363632]
[427.01956177 -37.62940598]
[413.13012695 -31.96517754]
[399.45681763 -25.79745674]
[386.01791382 -19.13447380]
[372.57897949 -12.47149086]
[359.14004517 -5.80850744]
[345.70114136 0.85447520]
[343.33489990 13.51880169]
[333.96731567 22.64481735]
[320.86126709 24.74105263]
[308.76495361 18.82119751]
[295.23010254 25.28710556]
[281.69525146 31.75301361]
[268.16040039 38.21892166]
[254.62556458 44.68482971]
[241.09071350 51.15073776]
[227.55587769 57.61664581]
[214.06863403 64.18126678]
[200.62969971 70.84425354]
[187.19078064 77.50723267]
[179.22496033 90.09273529]
[163.42410278 89.29069519]
[149.98516846 95.95367432]
[136.54624939 102.61666107]
[132.43510437 117.04228210]
[140.34254456 129.78874207]
[148.24998474 142.53520203]
[156.15742493 155.28167725]
[164.06486511 168.02813721]
[179.29408264 173.07301331]
[184.70968628 188.17436218]
[176.15728760 201.74772644]
[160.19757080 203.38078308]
[149.07345581 191.82078552]
[151.31840515 175.93557739]
[143.41096497 163.18911743]
[135.50352478 150.44264221]
[127.59608459 137.69618225]
[119.68863678 124.94972229]
[101.87390137 132.43739319]
[82.57112122 128.25775146]
[77.21266174 142.26799011]
[71.85419464 156.27822876]
[66.49573517 170.28846741]
[68.79264832 185.94206238]
[57.01931000 195.06553650]
[51.66084671 209.07577515]
[46.30238342 223.08601379]
[40.94392014 237.09625244]
[54.70444489 237.88945007]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 9]
[2 8]
[3 7]
[11 26]
[12 25]
[13 24]
[14 23]
[27 213]
[28 212]
[29 211]
[30 210]
[32 208]
[33 207]
[34 206]
[35 205]
[45 99]
[46 98]
[47 97]
[48 96]
[49 95]
[53 94]
[54 93]
[56 91]
[57 90]
[58 89]
[59 88]
[60 87]
[62 84]
[63 83]
[64 82]
[65 81]
[66 80]
[67 79]
[69 77]
[70 76]
[71 75]
[103 188]
[104 187]
[105 186]
[107 184]
[108 183]
[109 182]
[111 181]
[112 180]
[113 179]
[114 178]
[115 177]
[116 176]
[117 175]
[120 171]
[121 170]
[122 169]
[123 168]
[124 167]
[130 166]
[131 165]
[132 164]
[133 163]
[134 162]
[135 161]
[136 160]
[142 157]
[143 156]
[144 155]
[146 153]
[147 152]
[189 203]
[190 202]
[191 201]
[192 200]
[193 199]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
