%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:18:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUGCCCCACCCUGUCCUCUGGAACCUCUGCGAGAUUUAGAGGAAAGAACCAGUUUUCAGGCGGAUUGCCUCAGAUCACACUAUCUCCACUUGCCCAGCCCUGUGGAAGAUUAGCGGCCAUGUAUUCCAAUGUGAUAGGAACUGUAACCUCUGGAAAAAGGAAGGUUUAUCUUUUGUCCUUGCUGCUCAUUGGCUUCUGGGACUGCGUGACCUGUCACG\
) } def
/len { sequence length } bind def

/coor [
[195.71272278 163.56892395]
[177.03349304 154.54537964]
[164.11796570 138.25424194]
[159.57345581 117.92107391]
[144.79315186 115.36323547]
[130.01284790 112.80540466]
[126.12518311 122.31649017]
[119.17561340 130.57164001]
[109.59571075 136.57876587]
[98.13785553 139.50123596]
[85.81775665 138.76065063]
[73.82451630 134.11820984]
[62.62969589 144.10198975]
[57.48016739 159.06170654]
[42.83169556 161.75828552]
[31.63687325 171.74206543]
[20.44205284 181.72584534]
[9.24723053 191.70964050]
[-1.94759130 201.69342041]
[-13.14241314 211.67720032]
[-24.33723450 221.66099548]
[-35.53205490 231.64477539]
[-46.72687912 241.62855530]
[-48.23963165 254.43333435]
[-57.76375961 262.51840210]
[-69.84358978 261.96752930]
[-81.17983246 271.79043579]
[-92.51607513 281.61334229]
[-100.52697754 296.55526733]
[-117.10263062 292.99377441]
[-118.26891327 276.07998657]
[-102.33898163 270.27709961]
[-91.00273895 260.45419312]
[-79.66649628 250.63127136]
[-74.82495880 233.76042175]
[-56.71066284 230.43374634]
[-45.51584244 220.44995117]
[-34.32101822 210.46617126]
[-23.12619781 200.48239136]
[-11.93137646 190.49859619]
[-0.73655474 180.51481628]
[10.45826721 170.53103638]
[21.65308952 160.54724121]
[32.84791183 150.56346130]
[37.19670868 136.31785583]
[52.64591217 132.90716553]
[63.84073257 122.92338562]
[62.29885864 115.58358765]
[49.29057312 123.05249023]
[38.16757202 112.98874664]
[44.30172729 99.30035400]
[59.21511078 100.90399170]
[57.67324066 93.56419373]
[43.40739059 88.92893982]
[29.45255852 95.84995270]
[15.05099106 90.94592285]
[8.53886414 77.59947205]
[-5.72698355 72.96421814]
[-20.05756569 68.53314209]
[-34.44995880 64.30715179]
[-48.84235382 60.08116531]
[-63.23474884 55.85517502]
[-77.94783020 62.25086212]
[-92.05356598 54.60836029]
[-94.73123932 38.79034424]
[-83.92677307 26.93104362]
[-67.92842102 28.12789726]
[-59.00876236 41.46278381]
[-44.61636734 45.68877029]
[-30.22397232 49.91476059]
[-15.83157730 54.14074707]
[-11.29020882 52.68220139]
[-5.78441238 54.05633926]
[-1.09172881 58.69836807]
[13.17411900 63.33362198]
[26.28738785 56.36384964]
[40.82101822 60.86143494]
[48.04264832 74.66309357]
[62.30849457 79.29834747]
[72.12653351 74.44312286]
[81.87498474 72.86638641]
[76.63302612 58.81214142]
[71.39105988 44.75789642]
[66.04888916 30.74143410]
[60.60676956 16.76347542]
[55.16465378 2.78551412]
[49.62287521 -11.15323353]
[43.98171997 -25.05205917]
[38.34056091 -38.95088196]
[32.69940186 -52.84970856]
[16.46156311 -59.36607742]
[10.08909798 -75.29756927]
[17.07340431 -90.59982300]
[11.23435211 -104.41667938]
[-0.50077522 -116.65281677]
[8.00856495 -131.31663513]
[24.45493317 -127.19918823]
[25.05120659 -110.25572968]
[30.89025879 -96.43887329]
[43.38660812 -93.31298065]
[51.92997742 -83.41395569]
[53.23333740 -70.20762634]
[46.59822464 -58.49086761]
[52.23938370 -44.59204102]
[57.88054276 -30.69321632]
[63.52170181 -16.79439163]
[68.94615936 -11.78210831]
[69.14261627 -2.65660143]
[74.58473206 11.32135868]
[80.02684784 25.29932022]
[85.37918091 30.38855171]
[85.44530487 39.51593399]
[90.68727112 53.57017899]
[95.92922974 67.62442780]
[120.83534241 74.88749695]
[132.57067871 98.02510071]
[147.35098267 100.58293152]
[162.13128662 103.14076233]
[166.30169678 94.32256317]
[172.20834351 86.57089996]
[179.59024048 80.22206116]
[188.12255859 75.55047607]
[197.43083191 72.75686646]
[207.10745239 71.95965576]
[216.72946167 73.18989563]
[225.87713623 76.39013672]
[234.15216064 81.41705322]
[241.19509888 88.04788208]
[246.70091248 95.99028778]
[250.43225098 104.89524078]
[252.22959900 114.37236786]
[252.01815796 124.00705719]
[266.41055298 128.23304749]
[280.80294800 132.45903015]
[295.19534302 136.68501282]
[309.58773804 140.91101074]
[323.98013306 145.13699341]
[338.37252808 149.36299133]
[352.76492310 153.58897400]
[370.55813599 148.83551025]
[382.15982056 162.00621033]
[396.61108398 166.02624512]
[405.71066284 165.31106567]
[411.23925781 170.20825195]
[425.63165283 174.43423462]
[440.02404785 178.66023254]
[455.02059937 178.98150635]
[469.58078003 175.37576294]
[484.14093018 171.77003479]
[498.70111084 168.16430664]
[513.23516846 164.45471191]
[527.74237061 160.64143372]
[534.25445557 146.42428589]
[548.40362549 139.76593018]
[563.50921631 143.81024170]
[572.43872070 156.64759827]
[570.97595215 172.21661377]
[559.81152344 183.16607666]
[544.21704102 184.32597351]
[531.55566406 175.14863586]
[517.04846191 178.96191406]
[511.38226318 183.69923401]
[502.30685425 182.72448730]
[487.74667358 186.33021545]
[473.18649292 189.93594360]
[458.62631226 193.54167175]
[456.92761230 200.84677124]
[471.53778076 204.24421692]
[486.14794922 207.64166260]
[501.09295654 206.35823059]
[506.93164062 220.17523193]
[495.59503174 229.99771118]
[482.75051880 222.25184631]
[468.14031982 218.85440063]
[453.53015137 215.45693970]
[451.83142090 222.76203918]
[463.30676270 232.42207336]
[474.78213501 242.08210754]
[486.25747681 251.74212646]
[497.73284912 261.40216064]
[512.14868164 256.29031372]
[527.08898926 259.06222534]
[538.55969238 268.87496948]
[543.54522705 283.01712036]
[540.80108643 297.65731812]
[552.27642822 307.31735229]
[563.75177002 316.97738647]
[579.98327637 319.31640625]
[585.82128906 334.64120483]
[575.26019287 347.18692017]
[559.16436768 344.04763794]
[554.09173584 328.45272827]
[542.61639404 318.79269409]
[531.14105225 309.13265991]
[517.18322754 314.33306885]
[502.39804077 311.83212280]
[490.77301025 302.20275879]
[485.49404907 287.95391846]
[488.07281494 272.87753296]
[476.59744263 263.21749878]
[465.12210083 253.55744934]
[453.64672852 243.89741516]
[442.17138672 234.23738098]
[435.79803467 193.05261230]
[421.40563965 188.82662964]
[407.01324463 184.60064697]
[392.59106445 180.47752380]
[378.13977051 176.45747375]
[367.46032715 182.12979126]
[355.39093018 178.90383911]
[348.53894043 167.98136902]
[334.14654541 163.75538635]
[319.75415039 159.52938843]
[305.36175537 155.30340576]
[290.96936035 151.07740784]
[276.57696533 146.85142517]
[262.18457031 142.62544250]
[247.79216003 138.39944458]
[235.00250244 154.56002808]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 118]
[5 117]
[6 116]
[12 47]
[13 46]
[15 44]
[16 43]
[17 42]
[18 41]
[19 40]
[20 39]
[21 38]
[22 37]
[23 36]
[26 34]
[27 33]
[28 32]
[53 79]
[54 78]
[57 75]
[58 74]
[59 71]
[60 70]
[61 69]
[62 68]
[81 114]
[82 113]
[83 112]
[84 110]
[85 109]
[86 108]
[87 106]
[88 105]
[89 104]
[90 103]
[93 99]
[94 98]
[132 218]
[133 217]
[134 216]
[135 215]
[136 214]
[137 213]
[138 212]
[139 211]
[141 208]
[142 207]
[144 206]
[145 205]
[146 204]
[147 166]
[148 165]
[149 164]
[150 163]
[151 161]
[152 160]
[176 203]
[177 202]
[178 201]
[179 200]
[180 199]
[185 194]
[186 193]
[187 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
