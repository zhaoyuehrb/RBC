%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:00:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCAAUGGCUAGUACUAUGUGUCAACUUGUCUAGGCUAUACUGCUCAGCUGUGUGGUCAAACAGUAGUCUAGAUGUUGCUGUGAAGGUAUUUUGUAGAUGUGAUCAACAUUUACAAUCAGUUGAUUUUAAGUAAAGCAGUUUAACUUCCAUAAUGUGGAUGGGCCUCAUCCAAUUAGUUGAAGGUGUUAAGAGAAAAGACCAAGGUUUCCUGGAAAAGGAAUUCUACCACAAGACUAACAUAAAAAUGCGCU\
) } def
/len { sequence length } bind def

/coor [
[93.17712402 206.12576294]
[92.99160004 191.12690735]
[92.80608368 176.12805176]
[92.62055969 161.12919617]
[92.43503571 146.13034058]
[77.74246216 138.36698914]
[67.42192078 126.45205688]
[62.42087173 112.40577698]
[62.85339737 98.35440063]
[48.30999756 94.68157959]
[33.76660156 91.00876617]
[22.32873726 96.93107605]
[10.30408192 93.59178162]
[3.97819281 83.30138397]
[-10.51866722 79.44897461]
[-25.01552582 75.59656525]
[-39.51238632 71.74415588]
[-50.37801361 82.50916290]
[-65.07603455 86.36467743]
[-79.63370514 82.37211609]
[-90.16785431 71.70030212]
[-93.92065430 57.28565216]
[-108.41751099 53.43323898]
[-122.91437531 49.58082962]
[-137.41123962 45.72842026]
[-151.90809631 41.87601089]
[-166.40495300 38.02360153]
[-180.90180969 34.17119217]
[-199.72116089 59.88496399]
[-243.50061035 54.21120071]
[-257.94873047 58.24261475]
[-272.39682007 62.27402878]
[-286.84490967 66.30544281]
[-301.29302979 70.33686066]
[-315.74111938 74.36827087]
[-330.18923950 78.39968872]
[-344.63732910 82.43110657]
[-359.08544922 86.46251678]
[-373.53353882 90.49393463]
[-387.98165894 94.52534485]
[-402.27026367 99.08996582]
[-416.37969971 104.18151093]
[-430.48913574 109.27304840]
[-444.59857178 114.36459351]
[-458.70800781 119.45613098]
[-462.89654541 134.39720154]
[-475.08816528 143.99638367]
[-490.59490967 144.56259155]
[-503.45413208 135.87809753]
[-508.72119141 121.28228760]
[-504.37078857 106.38753510]
[-492.07577515 96.92118073]
[-476.56378174 96.52322388]
[-463.79953003 105.34669495]
[-449.69009399 100.25514984]
[-435.58065796 95.16361237]
[-421.47122192 90.07206726]
[-407.36178589 84.98052979]
[-420.53176880 77.80056763]
[-424.87728882 63.44381714]
[-417.89968872 50.16553116]
[-403.61108398 45.60084534]
[-390.22760010 52.37449265]
[-385.44485474 66.59156799]
[-392.01306152 80.07723999]
[-377.56497192 76.04582977]
[-363.11685181 72.01441193]
[-348.66876221 67.98300171]
[-334.22064209 63.95158386]
[-319.77255249 59.92016983]
[-305.32443237 55.88875580]
[-290.87634277 51.85734177]
[-276.42822266 47.82592773]
[-261.98013306 43.79450989]
[-247.53202820 39.76309586]
[-246.65280151 32.31481171]
[-244.89434814 17.41823959]
[-244.01512146 9.96995449]
[-257.12741089 2.68519258]
[-270.23971558 -4.59956884]
[-283.35198975 -11.88433075]
[-299.11074829 -8.87739086]
[-311.19274902 -19.43221092]
[-310.32977295 -35.45203781]
[-297.18377686 -44.64782715]
[-281.83929443 -39.96536255]
[-276.06723022 -24.99662399]
[-262.95495605 -17.71186256]
[-249.84265137 -10.42710114]
[-236.73036194 -3.14233947]
[-231.52635193 -8.54311275]
[-221.11834717 -19.34465981]
[-215.91433716 -24.74543190]
[-223.68051147 -37.57845688]
[-231.44668579 -50.41148376]
[-239.21286011 -63.24451065]
[-246.97903442 -76.07753754]
[-254.74520874 -88.91056061]
[-262.51138306 -101.74359131]
[-270.27755737 -114.57661438]
[-278.04373169 -127.40963745]
[-285.80990601 -140.24266052]
[-300.98245239 -145.45544434]
[-306.23092651 -160.61569214]
[-297.52914429 -174.09376526]
[-281.55236816 -175.55043030]
[-270.55661011 -163.86828613]
[-272.97686768 -148.00883484]
[-265.21069336 -135.17581177]
[-257.44451904 -122.34278870]
[-249.67835999 -109.50975800]
[-241.91218567 -96.67673492]
[-234.14601135 -83.84371185]
[-226.37983704 -71.01068115]
[-218.61366272 -58.17765808]
[-210.84748840 -45.34463120]
[-203.08131409 -32.51160431]
[-181.11155701 -17.79939651]
[-172.80149841 2.52409029]
[-177.04940796 19.67433167]
[-162.55253601 23.52674103]
[-148.05567932 27.37915039]
[-133.55882263 31.23156166]
[-119.06196594 35.08397293]
[-104.56510162 38.93638229]
[-90.06824493 42.78879166]
[-79.65472412 32.13871384]
[-65.21248627 28.10414886]
[-50.59325790 31.86508179]
[-39.74818039 42.50844193]
[-35.65997696 57.24729919]
[-21.16311646 61.09970856]
[-6.66625690 64.95211792]
[7.83060265 68.80452728]
[24.51612663 63.33001709]
[37.43941498 76.46537018]
[51.98281479 80.13818359]
[66.52621460 83.81100464]
[81.10010529 65.78158569]
[104.54423523 59.25366592]
[128.50967407 67.93443298]
[139.93382263 58.21389008]
[151.35797119 48.49334717]
[162.78210449 38.77280426]
[174.20625305 29.05226326]
[185.63040161 19.33172035]
[197.05453491 9.61117744]
[194.05435181 0.91355830]
[193.53784180 -8.24904537]
[195.53134155 -17.18310928]
[199.87168884 -25.21588326]
[206.21951294 -31.74604225]
[214.08569336 -36.28869629]
[222.86907959 -38.51139450]
[231.90243530 -38.25841522]
[240.50305176 -35.56161499]
[248.02442932 -30.63705635]
[260.13784790 -39.48382568]
[272.25125122 -48.33059692]
[284.36465454 -57.17736816]
[296.47805786 -66.02413940]
[308.59146118 -74.87091064]
[312.47271729 -90.43739319]
[327.12234497 -96.97713470]
[341.30239868 -89.47341156]
[344.13513184 -73.68242645]
[333.44757080 -61.71768188]
[317.43823242 -62.75749969]
[305.32482910 -53.91073227]
[293.21142578 -45.06396103]
[281.09802246 -36.21718979]
[268.98461914 -27.37041855]
[256.87121582 -18.52364731]
[258.59933472 2.40314174]
[247.19224548 20.19458771]
[227.19779968 27.45101929]
[206.77508545 21.03532028]
[195.35093689 30.75586319]
[183.92678833 40.47640610]
[172.50265503 50.19694901]
[161.07850647 59.91749191]
[149.65435791 69.63803101]
[138.23022461 79.35857391]
[142.97122192 93.58963013]
[157.94253540 94.51667786]
[172.91386414 95.44372559]
[187.16584778 88.57410431]
[199.39059448 97.08319855]
[214.36192322 98.01023865]
[225.00282288 86.55139160]
[240.52616882 84.66455078]
[253.60227966 93.24063110]
[258.05703735 108.23026276]
[251.78704834 122.55580902]
[237.75279236 129.45317078]
[222.58082581 125.66564178]
[213.43487549 112.98156738]
[198.46356201 112.05451965]
[185.28242493 118.99044800]
[171.98681641 110.41504669]
[157.01550293 109.48800659]
[142.04417419 108.56095886]
[142.60707092 113.93098450]
[142.46870422 119.53579712]
[154.79721069 128.08024597]
[167.12573242 136.62467957]
[182.87551880 138.12637329]
[188.92868042 151.73550415]
[201.25720215 160.27995300]
[213.58572388 168.82440186]
[225.91424561 177.36885071]
[238.24276733 185.91328430]
[254.22148132 184.47781372]
[265.20172119 196.17454529]
[262.76043701 212.03076172]
[248.77032471 219.88291931]
[233.96342468 213.70753479]
[229.69831848 198.24180603]
[217.36979675 189.69737244]
[205.04127502 181.15292358]
[192.71275330 172.60847473]
[180.38423157 164.06402588]
[165.51628113 163.17349243]
[158.58129883 148.95320129]
[146.25277710 140.40876770]
[133.92425537 131.86431885]
[127.30165863 135.38444519]
[134.34191895 148.62962341]
[141.38217163 161.87480164]
[148.42242432 175.11999512]
[155.46267700 188.36517334]
[162.50292969 201.61035156]
[169.54318237 214.85552979]
[176.58343506 228.10070801]
[183.62368774 241.34590149]
[194.41233826 251.76727295]
[187.83486938 265.24826050]
[172.98114014 263.15853882]
[170.37850952 248.38615417]
[163.33825684 235.14096069]
[156.29800415 221.89578247]
[149.25775146 208.65060425]
[142.21749878 195.40542603]
[135.17723083 182.16024780]
[128.13697815 168.91505432]
[121.09673309 155.66987610]
[114.05648041 142.42469788]
[107.43389130 145.94482422]
[107.61940765 160.94367981]
[107.80493164 175.94253540]
[107.99045563 190.94137573]
[108.17597961 205.94023132]
[110.60483551 225.16912842]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 252]
[2 251]
[3 250]
[4 249]
[5 248]
[9 138]
[10 137]
[11 136]
[14 134]
[15 133]
[16 132]
[17 131]
[22 126]
[23 125]
[24 124]
[25 123]
[26 122]
[27 121]
[28 120]
[30 75]
[31 74]
[32 73]
[33 72]
[34 71]
[35 70]
[36 69]
[37 68]
[38 67]
[39 66]
[40 65]
[41 58]
[42 57]
[43 56]
[44 55]
[45 54]
[78 90]
[79 89]
[80 88]
[81 87]
[93 117]
[94 116]
[95 115]
[96 114]
[97 113]
[98 112]
[99 111]
[100 110]
[101 109]
[102 108]
[141 183]
[142 182]
[143 181]
[144 180]
[145 179]
[146 178]
[147 177]
[157 173]
[158 172]
[159 171]
[160 170]
[161 169]
[162 168]
[184 202]
[185 201]
[186 200]
[188 198]
[189 197]
[204 226]
[205 225]
[206 224]
[208 222]
[209 221]
[210 220]
[211 219]
[212 218]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
