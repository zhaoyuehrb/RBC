%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:53:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGGACUGCGCAUGUGCAGGACCCAGCAGGUCUAGAGCUUUUCUGUGUUUCUCCGGACUUCGAGCCAUGGCGGUGACGGAAGCGAGCCUGUUGCGCCAGUGCCCCCUGCUUCUGCCCCAGAACCGGUCGAAAACCGUGUAUGAGGGAUUCAUCUCGGCUCAGGGAA\
) } def
/len { sequence length } bind def

/coor [
[-114.66481781 241.08261108]
[-123.86251831 238.68421936]
[-131.49424744 233.11592102]
[-144.88473511 239.87574768]
[-158.27520752 246.63557434]
[-171.66567993 253.39540100]
[-176.81137085 270.09405518]
[-192.13113403 277.77233887]
[-207.95344543 272.12765503]
[-221.21516418 279.13668823]
[-234.47689819 286.14572144]
[-247.73863220 293.15475464]
[-261.00036621 300.16378784]
[-263.00878906 318.14913940]
[-275.28027344 331.23617554]
[-292.79083252 334.34130859]
[-308.53405762 326.41271973]
[-321.52444458 333.91271973]
[-330.75576782 351.80252075]
[-350.05371094 351.06668091]
[-362.75457764 359.04718018]
[-375.45544434 367.02764893]
[-388.15631104 375.00814819]
[-400.85717773 382.98861694]
[-405.81454468 398.24652100]
[-420.88455200 403.74874878]
[-434.50677490 395.27441406]
[-436.23141479 379.32431030]
[-424.73547363 368.13403320]
[-408.83764648 370.28775024]
[-396.13677979 362.30728149]
[-383.43591309 354.32678223]
[-370.73504639 346.34631348]
[-358.03417969 338.36581421]
[-356.65188599 328.19018555]
[-349.73504639 320.30471802]
[-339.40164185 317.49221802]
[-329.02444458 320.92233276]
[-316.03405762 313.42233276]
[-316.56503296 301.24734497]
[-311.82608032 289.94149780]
[-302.66510010 281.68710327]
[-290.78976440 278.10586548]
[-278.44952393 279.94061279]
[-268.00939941 286.90203857]
[-254.74766541 279.89300537]
[-241.48593140 272.88397217]
[-228.22419739 265.87496948]
[-214.96246338 258.86593628]
[-212.91505432 246.11991882]
[-203.75430298 236.74966431]
[-190.67459106 234.34400940]
[-178.42549133 240.00492859]
[-165.03501892 233.24510193]
[-151.64454651 226.48527527]
[-138.25407410 219.72544861]
[-133.59196472 199.86042786]
[-115.57563782 189.67469788]
[-95.59559631 196.10026550]
[-82.74772644 188.35865784]
[-69.89986420 180.61706543]
[-65.77643585 174.44580078]
[-56.73857880 172.85342407]
[-43.74819565 165.35342407]
[-30.75781631 157.85342407]
[-17.76743507 150.35342407]
[-4.77705383 142.85342407]
[-2.69057989 138.51531982]
[2.16481280 135.46220398]
[8.84226799 135.32629395]
[22.10399818 128.31726074]
[26.56696510 122.38690948]
[35.67988968 121.30379486]
[49.07036209 114.54396820]
[62.46083450 107.78414154]
[75.85131073 101.02432251]
[89.24178314 94.26449585]
[99.84838104 83.65789032]
[106.60820770 70.26741791]
[113.36803436 56.87694931]
[120.12785339 43.48647308]
[126.88768005 30.09600067]
[133.64750671 16.70552826]
[140.40733337 3.31505489]
[147.16716003 -10.07541847]
[144.60070801 -31.32317162]
[162.22978210 -42.01248169]
[168.22816467 -55.76091385]
[174.09773254 -69.56483459]
[179.83798218 -83.42302704]
[185.57823181 -97.28121948]
[179.29939270 -111.78472900]
[185.19273376 -126.44911194]
[199.76181030 -132.57426453]
[214.36306763 -126.52621460]
[220.33383179 -111.89318848]
[214.13175964 -97.35668945]
[199.43643188 -91.54096985]
[193.69618225 -77.68276978]
[187.95591736 -63.82458115]
[188.30284119 -56.41062164]
[181.97659302 -49.76253510]
[175.97821045 -36.01410294]
[180.55781555 -28.32313919]
[181.06848145 -19.24832916]
[177.26705933 -10.84061527]
[169.89944458 -5.05924797]
[160.55763245 -3.31559348]
[153.79780579 10.07487965]
[147.03797913 23.46535301]
[140.27815247 36.85582733]
[133.51832581 50.24629974]
[126.75850677 63.63677216]
[119.99868011 77.02724457]
[113.23885345 90.41771698]
[119.74710846 103.93225098]
[134.43089294 106.99603271]
[149.11466980 110.05981445]
[163.82644653 112.98616791]
[178.56494141 115.77484131]
[189.66825867 109.15805817]
[201.90780640 111.81205750]
[208.81494141 121.77447510]
[223.49871826 124.83824921]
[238.21049500 127.76460266]
[252.94898987 130.55328369]
[267.68750000 133.34194946]
[282.42599487 136.13063049]
[296.43801880 128.31765747]
[311.22756958 134.53446960]
[315.44934082 150.01205444]
[305.86480713 162.87734985]
[289.82632446 163.26118469]
[279.63729858 150.86912537]
[264.89880371 148.08044434]
[250.16030884 145.29177856]
[235.42181396 142.50309753]
[228.23501587 144.35702515]
[220.43493652 139.52203369]
[205.75115967 136.45825195]
[189.42492676 142.84567261]
[175.77626038 130.51333618]
[161.03776550 127.72466278]
[153.85096741 129.57858276]
[146.05088806 124.74358368]
[131.36711121 121.67980957]
[116.68333435 118.61602783]
[106.27175140 118.51031494]
[98.91146088 114.04802704]
[96.00160217 107.65496826]
[82.61112976 114.41479492]
[69.22065735 121.17462158]
[55.83018494 127.93444061]
[42.43971252 134.69425964]
[29.11302757 141.57899475]
[15.85129738 148.58802795]
[2.72294617 155.84381104]
[-10.26743507 163.34381104]
[-23.25781631 170.84381104]
[-36.24819565 178.34381104]
[-49.23857880 185.84381104]
[-62.15826797 193.46493530]
[-75.00613403 201.20652771]
[-87.85400391 208.94812012]
[-87.36087799 218.73139954]
[-90.46910095 227.95962524]
[-96.70578003 235.36212158]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 56]
[4 55]
[5 54]
[6 53]
[9 49]
[10 48]
[11 47]
[12 46]
[13 45]
[17 39]
[18 38]
[20 34]
[21 33]
[22 32]
[23 31]
[24 30]
[59 164]
[60 163]
[61 162]
[63 161]
[64 160]
[65 159]
[66 158]
[67 157]
[70 156]
[71 155]
[73 154]
[74 153]
[75 152]
[76 151]
[77 150]
[78 115]
[79 114]
[80 113]
[81 112]
[82 111]
[83 110]
[84 109]
[85 108]
[87 103]
[88 102]
[89 100]
[90 99]
[91 98]
[116 147]
[117 146]
[118 145]
[119 143]
[120 142]
[123 140]
[124 139]
[125 137]
[126 136]
[127 135]
[128 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
