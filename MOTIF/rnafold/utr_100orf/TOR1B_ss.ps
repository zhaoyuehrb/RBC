%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:02:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAAGUCCGUCCUGCCGCUUGGCCGCGGGGCGCCUGGCUCAGUGGCUUCUGCGGGCUUCGAGGAGCGGGAUGUUGCGGGCUGGGUGGCUCCGGGGCGCGGCGGCGCUGGCGCUGCUGCUGGCGGCCCGAGUGGUGGCGGCGUUCGAGCCCAUCACCGUGGGCCUAGCCA\
) } def
/len { sequence length } bind def

/coor [
[81.89965820 126.00797272]
[77.81810760 140.44200134]
[73.73655701 154.87602234]
[69.65500641 169.31004333]
[77.58560181 182.98048401]
[73.44622803 198.23306274]
[59.69269943 206.01869202]
[44.48474121 201.71827698]
[36.84495926 187.88320923]
[41.30590820 172.72155762]
[55.22098541 165.22848511]
[59.30253601 150.79446411]
[63.38409042 136.36044312]
[67.46563721 121.92642212]
[62.59514999 107.73916626]
[50.50867081 98.85563660]
[38.42219543 89.97210693]
[26.33571815 81.08857727]
[14.24924278 72.20504761]
[2.16276574 63.32152176]
[-13.26005650 65.50654602]
[-25.39091301 56.32520676]
[-27.37895203 41.60843658]
[-39.46542740 32.72490692]
[-51.55190659 23.84137917]
[-67.25390625 21.90287781]
[-72.92679596 8.13089180]
[-85.01326752 -0.75263745]
[-97.09974670 -9.63616657]
[-109.18622589 -18.51969528]
[-121.27269745 -27.40322304]
[-133.35917664 -36.28675079]
[-145.52674866 -45.05888367]
[-157.77438354 -53.71887207]
[-170.02201843 -62.37886429]
[-182.26965332 -71.03885651]
[-194.51728821 -79.69884491]
[-206.76492310 -88.35883331]
[-219.01255798 -97.01882935]
[-231.26019287 -105.67881775]
[-243.50782776 -114.33880615]
[-252.35806274 -116.75218964]
[-255.89892578 -123.27209473]
[-267.98541260 -132.15562439]
[-280.07189941 -141.03915405]
[-292.15835571 -149.92268372]
[-304.24484253 -158.80621338]
[-316.41241455 -167.57833862]
[-328.66003418 -176.23832703]
[-340.90768433 -184.89831543]
[-353.15530396 -193.55831909]
[-365.40295410 -202.21830750]
[-377.65057373 -210.87829590]
[-390.97201538 -203.42832947]
[-406.20715332 -202.50466919]
[-420.33105469 -208.29069519]
[-430.53939819 -219.63760376]
[-434.80532837 -234.29246521]
[-432.28179932 -249.34552002]
[-423.46990967 -261.80798340]
[-410.11923218 -269.20544434]
[-394.88058472 -270.06912231]
[-380.77957153 -264.22750854]
[-370.61599731 -252.84046936]
[-366.40780640 -238.16893005]
[-368.99060059 -223.12593079]
[-356.74295044 -214.46594238]
[-344.49533081 -205.80595398]
[-332.24768066 -197.14595032]
[-320.00006104 -188.48596191]
[-307.75241089 -179.82597351]
[-300.44769287 -178.52680969]
[-295.36129761 -170.89268494]
[-283.27484131 -162.00915527]
[-271.18835449 -153.12562561]
[-259.10186768 -144.24209595]
[-247.01539612 -135.35856628]
[-234.84783936 -126.58644104]
[-222.60020447 -117.92645264]
[-210.35256958 -109.26646423]
[-198.10493469 -100.60646820]
[-185.85729980 -91.94647980]
[-173.60966492 -83.28649139]
[-161.36203003 -74.62649536]
[-149.11439514 -65.96650696]
[-136.86676025 -57.30651855]
[-129.56202698 -56.00735855]
[-124.47564697 -48.37322998]
[-112.38916779 -39.48970032]
[-100.30269623 -30.60617256]
[-88.21621704 -21.72264290]
[-76.12973785 -12.83911419]
[-64.04326630 -3.95558524]
[-49.20577240 -2.65249276]
[-42.66837692 11.75490284]
[-30.58189964 20.63843155]
[-18.49542236 29.52195930]
[-3.85620570 27.02618027]
[8.52774906 35.86316681]
[11.04629421 51.23504639]
[23.13277054 60.11857224]
[35.21924591 69.00210571]
[47.30572510 77.88563538]
[59.39220047 86.76915741]
[71.47867584 95.65268707]
[111.49016571 74.81550598]
[124.61613464 67.55541992]
[137.74209595 60.29532623]
[150.86807251 53.03523636]
[163.99404907 45.77514648]
[177.12001038 38.51505661]
[181.24880981 23.25961304]
[194.99693298 15.46445274]
[210.20788574 19.75430870]
[217.85725403 33.58408356]
[213.40681458 48.74881744]
[199.49693298 56.25154495]
[184.38009644 51.64102936]
[171.25413513 58.90111923]
[158.12815857 66.16120911]
[145.00219727 73.42129517]
[131.87622070 80.68138885]
[118.75025177 87.94147491]
[118.19921875 102.93135071]
[130.75671387 111.13557434]
[143.31420898 119.33979797]
[155.87171936 127.54402161]
[168.42921448 135.74824524]
[180.98670959 143.95246887]
[187.61726379 144.70404053]
[192.16767883 148.18801880]
[193.84713745 152.69586182]
[206.09477234 161.35585022]
[218.34240723 170.01583862]
[230.59004211 178.67582703]
[242.83767700 187.33581543]
[255.08531189 195.99580383]
[273.43966675 197.24150085]
[280.18927002 213.42300415]
[292.59393311 221.85653687]
[304.99859619 230.29005432]
[320.47463989 227.08564758]
[333.63763428 235.83270264]
[336.67822266 251.34173584]
[327.79251099 264.41152954]
[312.25219727 267.28799438]
[299.27706909 258.26458740]
[296.56506348 242.69471741]
[284.16040039 234.26118469]
[271.75573730 225.82765198]
[259.79373169 227.78060913]
[249.38255310 220.82357788]
[246.42532349 208.24343872]
[234.17768860 199.58345032]
[221.93005371 190.92346191]
[209.68241882 182.26347351]
[197.43478394 173.60348511]
[185.18714905 164.94349670]
[172.78248596 156.50996399]
[160.22499084 148.30574036]
[147.66749573 140.10151672]
[135.10998535 131.89729309]
[122.55249786 123.69306946]
[109.99499512 115.48885345]
[102.97116089 118.11862946]
[110.05809021 131.33889771]
[117.98944092 144.07049561]
[109.24166870 156.25558472]
[94.64225769 152.81217957]
[92.26163483 138.00204468]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 14]
[2 13]
[3 12]
[4 11]
[15 105]
[16 104]
[17 103]
[18 102]
[19 101]
[20 100]
[23 97]
[24 96]
[25 95]
[27 93]
[28 92]
[29 91]
[30 90]
[31 89]
[32 88]
[33 86]
[34 85]
[35 84]
[36 83]
[37 82]
[38 81]
[39 80]
[40 79]
[41 78]
[43 77]
[44 76]
[45 75]
[46 74]
[47 73]
[48 71]
[49 70]
[50 69]
[51 68]
[52 67]
[53 66]
[106 123]
[107 122]
[108 121]
[109 120]
[110 119]
[111 118]
[124 164]
[125 163]
[126 162]
[127 161]
[128 160]
[129 159]
[132 158]
[133 157]
[134 156]
[135 155]
[136 154]
[137 153]
[139 150]
[140 149]
[141 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
