%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:53:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGGCGGCUCGGCGAUGGCUCUCCCGCAGGCGCAGAAACGGCUGCUGGGCAGCUGAUGGGCAGGAGCUUACCAGGCUGGCUUGCUCUGAGCUGCGGUUACUGUGUCCAGGCCCCGGGUUCUCAGAACUGUCAUACAUAAAGUACACAGAAAUGAAGAGAAAAGUCGUGAAUACUCACAAGCUGAGAUUGAGUCCUAAUGAGGAAGCCUUCAUUUUGAAGGAAGAUUAUGAAAGAAGGCGAAAACUAAGAU\
) } def
/len { sequence length } bind def

/coor [
[51.54577255 124.52526855]
[48.93282700 118.47823334]
[47.07125473 112.15931702]
[32.12833405 113.46665192]
[17.18541336 114.77398682]
[8.93487263 118.63048553]
[2.04824924 116.00328827]
[-12.90980816 117.12424469]
[-27.86786461 118.24519348]
[-42.82592010 119.36614227]
[-56.00929642 128.11309814]
[-69.27919006 121.34854126]
[-84.23724365 122.46949768]
[-94.52509308 134.16555786]
[-109.71065521 135.08927917]
[-120.79766846 125.20932007]
[-135.75572205 126.33026886]
[-150.71377563 127.45122528]
[-165.67184448 128.57217407]
[-170.57429504 144.36921692]
[-182.21284485 156.74012756]
[-198.51338196 162.91259766]
[-216.31303406 161.27296448]
[-231.97300720 151.76573181]
[-243.81616211 160.97114563]
[-249.96365356 175.54917908]
[-264.76071167 177.25090027]
[-276.60388184 186.45632935]
[-288.44702148 195.66174316]
[-300.29016113 204.86717224]
[-306.43765259 219.44519043]
[-321.23474121 221.14692688]
[-333.07788086 230.35234070]
[-334.79412842 246.06317139]
[-347.16903687 255.89356995]
[-362.86083984 254.01133728]
[-372.55987549 241.53315735]
[-370.51184082 225.86213684]
[-357.93182373 216.29559326]
[-342.28332520 218.50920105]
[-330.44015503 209.30377197]
[-325.13977051 195.38418579]
[-309.49560547 193.02401733]
[-297.65243530 183.81860352]
[-285.80929565 174.61317444]
[-273.96615601 165.40776062]
[-268.66574097 151.48815918]
[-253.02157593 149.12800598]
[-241.17842102 139.92257690]
[-244.33367920 125.25818634]
[-258.91485596 121.73832703]
[-273.49603271 118.21846008]
[-288.07717896 114.69860077]
[-302.65835571 111.17874146]
[-317.23953247 107.65888214]
[-327.83328247 115.95104218]
[-341.07479858 116.62650299]
[-352.12826538 109.66253662]
[-357.08557129 97.78571320]
[-371.62173462 94.08435059]
[-386.15789795 90.38299561]
[-400.69406128 86.68163300]
[-415.23019409 82.98027039]
[-429.76635742 79.27890778]
[-444.30252075 75.57754517]
[-458.88369751 72.05768585]
[-473.50762939 68.71987152]
[-488.13153076 65.38205719]
[-502.75546265 62.04424667]
[-517.37939453 58.70643234]
[-534.16680908 61.07663727]
[-541.09161377 45.60138702]
[-528.13812256 34.66322708]
[-514.04156494 44.08251190]
[-499.41763306 47.42032623]
[-484.79373169 50.75814056]
[-470.16979980 54.09595490]
[-455.54586792 57.43376923]
[-451.11715698 55.71129608]
[-445.56066895 56.73408890]
[-440.60116577 61.04138947]
[-426.06500244 64.74275208]
[-411.52883911 68.44411469]
[-396.99267578 72.14546967]
[-382.45651245 75.84683228]
[-367.92037964 79.54819489]
[-353.38421631 83.24955750]
[-339.29147339 74.04988861]
[-322.57928467 77.97908783]
[-313.71966553 93.07770538]
[-299.13848877 96.59757233]
[-284.55734253 100.11743164]
[-269.97616577 103.63729095]
[-255.39498901 107.15715027]
[-240.81381226 110.67700958]
[-231.39556885 96.32540131]
[-217.20220947 87.30159760]
[-200.89715576 84.96160126]
[-185.40563965 89.43761444]
[-173.39009094 99.66407776]
[-166.79278564 113.61411285]
[-151.83473206 112.49316406]
[-136.87667847 111.37221527]
[-121.91861725 110.25125885]
[-112.42797089 98.82921600]
[-97.27434540 97.47932434]
[-85.35820007 107.51143646]
[-70.40013885 106.39048767]
[-58.28666687 97.72370911]
[-43.94687271 104.40808868]
[-28.98881531 103.28713226]
[-14.03075886 102.16618347]
[0.92729771 101.04523468]
[15.87807655 99.83106232]
[30.82099724 98.52372742]
[45.76391602 97.21639252]
[54.21816254 70.78828430]
[74.62382507 51.98593140]
[101.65397644 45.71772385]
[128.25234985 53.61998367]
[137.75016785 42.01001358]
[147.24798584 30.40004158]
[156.74580383 18.79006958]
[166.24362183 7.18009806]
[175.74143982 -4.42987347]
[162.88307190 -22.20983315]
[165.11439514 -48.66164017]
[186.99726868 -70.92097473]
[191.59693909 -85.19834137]
[196.19660950 -99.47570038]
[200.79627991 -113.75305939]
[195.62097168 -125.54850769]
[199.72674561 -137.33421326]
[210.40339661 -142.98529053]
[215.18069458 -157.20419312]
[219.95799255 -171.42311096]
[214.13386536 -186.37165833]
[222.31410217 -200.17250061]
[238.22352600 -202.23881531]
[249.65779114 -190.98550415]
[247.84550476 -175.04513550]
[234.17691040 -166.64581299]
[229.39961243 -152.42689514]
[224.62231445 -138.20799255]
[229.01213074 -121.20532990]
[215.07363892 -109.15338898]
[210.47396851 -94.87602997]
[205.87429810 -80.59866333]
[201.27462769 -66.32130432]
[207.47142029 -62.09640503]
[215.92121887 -74.48999023]
[224.37101746 -86.88356781]
[237.88542175 -93.39210510]
[236.76460266 -78.43376923]
[228.31480408 -66.04018402]
[219.86500549 -53.64660645]
[226.06179810 -49.42170334]
[237.67176819 -58.91952515]
[238.99577332 -74.66825104]
[251.12178040 -84.80410767]
[266.85565186 -83.31366730]
[276.86273193 -71.08117676]
[275.20602417 -55.36396027]
[262.86840820 -45.48676300]
[247.16958618 -47.30955124]
[235.55961609 -37.81173325]
[243.38113403 -25.01236916]
[257.12957764 -31.01074982]
[270.87802124 -37.00913239]
[284.62643433 -43.00751114]
[293.92391968 -56.51634979]
[310.24804688 -54.94935608]
[316.80593872 -39.91851807]
[306.85140991 -26.88627243]
[290.62481689 -29.25907707]
[276.87640381 -23.26069641]
[263.12796021 -17.26231575]
[249.37951660 -11.26393604]
[235.58085632 6.24331093]
[217.46537781 14.38263035]
[200.05157471 13.20614624]
[187.35140991 5.06794500]
[177.85359192 16.67791748]
[168.35577393 28.28788757]
[158.85795593 39.89786148]
[149.36013794 51.50783157]
[139.86231995 63.11780167]
[144.64427185 69.07766724]
[148.54238892 75.64970398]
[151.47953796 82.70379639]
[153.39753723 90.10030365]
[154.25843811 97.69278717]
[154.04518127 105.33095551]
[168.62635803 108.85081482]
[183.20753479 112.37067413]
[197.78869629 115.89053345]
[213.35673523 110.73606110]
[225.42304993 121.84173584]
[221.57485962 137.78298950]
[205.77085876 142.16082764]
[194.26884460 130.47171021]
[179.68766785 126.95184326]
[165.10649109 123.43198395]
[150.52532959 119.91212463]
[146.68948364 127.73793793]
[141.65119934 134.84938049]
[151.71591187 145.97148132]
[161.78063965 157.09359741]
[171.84535217 168.21571350]
[181.91007996 179.33782959]
[191.97480774 190.45994568]
[206.97146606 195.50082397]
[209.77423096 210.12934875]
[219.83894348 221.25146484]
[229.90367126 232.37358093]
[245.45181274 233.31846619]
[255.50044250 244.74124146]
[254.50381470 259.55819702]
[264.56854248 270.68029785]
[280.36367798 271.21768188]
[291.09136963 282.82336426]
[290.38705444 298.61196899]
[278.66857910 309.21633911]
[262.88833618 308.34512329]
[252.40843201 296.51519775]
[253.44642639 280.74502563]
[243.38171387 269.62292480]
[228.53913879 269.13928223]
[218.17364502 258.00326538]
[218.78155518 242.43829346]
[208.71682739 231.31619263]
[198.65211487 220.19407654]
[184.37533569 215.94871521]
[180.85269165 200.52465820]
[170.78796387 189.40254211]
[160.72325134 178.28044128]
[150.65852356 167.15832520]
[140.59381104 156.03620911]
[130.52908325 144.91409302]
[124.86650085 148.27999878]
[118.83804321 150.93554688]
[112.53241730 152.84164429]
[106.04239655 153.97027588]
[99.46347046 154.30482483]
[92.89244080 153.84034729]
[86.42598724 152.58370972]
[80.15925598 150.55339050]
[74.18444061 147.77926636]
[68.58946991 144.30213928]
[63.45664597 140.17318726]
[58.86149979 135.45314026]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 116]
[4 115]
[5 114]
[7 113]
[8 112]
[9 111]
[10 110]
[12 108]
[13 107]
[16 104]
[17 103]
[18 102]
[19 101]
[24 49]
[25 48]
[27 46]
[28 45]
[29 44]
[30 43]
[32 41]
[33 40]
[50 95]
[51 94]
[52 93]
[53 92]
[54 91]
[55 90]
[59 87]
[60 86]
[61 85]
[62 84]
[63 83]
[64 82]
[65 81]
[66 78]
[67 77]
[68 76]
[69 75]
[70 74]
[120 187]
[121 186]
[122 185]
[123 184]
[124 183]
[125 182]
[128 149]
[129 148]
[130 147]
[131 146]
[134 144]
[135 143]
[136 142]
[157 166]
[158 165]
[167 178]
[168 177]
[169 176]
[170 175]
[193 204]
[194 203]
[195 202]
[196 201]
[206 239]
[207 238]
[208 237]
[209 236]
[210 235]
[211 234]
[213 232]
[214 231]
[215 230]
[218 227]
[219 226]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
