%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:53:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUAAACGUGUUGGGGGCACUGAGUAAUGUAGCCAUUUCUGACCCGGCAGCCAGGAAAAUGUGAAACAAUUUGCUUCUGGAAACAGGACAGCCGGGGCCGUGUUCCUGCAACAGCAGACCAAGCACCGCGGCGGACCCAGGCAAGCACGGAACAAGCUGAGACGGAUGAUAAUAUGGAUACAAAAUCUAUUCUAGAAGAACUUCUUCUCAAAAGAUCACAGCAAAAGAAGAAAAUGUCACCAAAUAAUUACAAAG\
AACGGCUUUUUGUUUUGA\
) } def
/len { sequence length } bind def

/coor [
[232.64033508 197.28648376]
[217.83323669 194.88862610]
[206.16081238 185.46766663]
[200.69161987 171.50027466]
[202.86344910 156.65834045]
[212.10534668 144.84362793]
[225.98614502 139.16232300]
[211.34066772 135.92039490]
[196.69520569 132.67846680]
[182.04972839 129.43653870]
[167.40425110 126.19460297]
[152.67187500 123.37374878]
[137.86471558 120.97628021]
[123.05754852 118.57881927]
[108.25038147 116.18135834]
[94.54486847 122.27716827]
[86.40897369 134.87904358]
[78.27307129 147.48091125]
[70.20954895 160.12921143]
[62.21866608 172.82353210]
[68.10858917 187.17932129]
[64.40281677 202.24739075]
[52.52629852 212.23377991]
[37.04579163 213.29850769]
[23.91387558 205.03216553]
[18.18003464 190.61334229]
[22.04904747 175.58634949]
[34.03319931 165.72938538]
[49.52434540 164.83265686]
[57.51522446 152.13833618]
[58.41561508 144.83108521]
[65.67120361 139.34500122]
[73.80709839 126.74314117]
[81.94300079 114.14126587]
[78.43125153 107.51423645]
[65.24966431 114.67285919]
[52.06808090 121.83148193]
[38.67321014 128.58258057]
[31.64964867 115.32853699]
[44.75740051 108.03547668]
[58.08256912 101.14781952]
[71.40773773 94.26016235]
[67.89598846 87.63312531]
[52.89993286 87.28919220]
[37.90387344 86.94525146]
[22.90781975 86.60131073]
[7.91176271 86.25737000]
[-7.08429384 85.91342926]
[-22.57334328 103.71147156]
[-45.89775085 104.05604553]
[-61.54325104 87.11575317]
[-76.50776672 88.14684296]
[-91.47229004 89.17794037]
[-106.43680573 90.20903778]
[-121.40132904 91.24013519]
[-136.36584473 92.27123260]
[-151.31756592 93.47383118]
[-166.25450134 94.84778595]
[-181.19145203 96.22173309]
[-196.12838745 97.59568787]
[-203.94485474 111.00025940]
[-218.16104126 117.21955872]
[-233.31053162 113.86212921]
[-243.56805420 102.21897888]
[-244.98936462 86.76713562]
[-237.02795410 73.44815063]
[-222.74513245 67.38343811]
[-207.63294983 70.90500641]
[-197.50233459 82.65874481]
[-182.56539917 81.28479004]
[-167.62844849 79.91084290]
[-152.69151306 78.53688812]
[-149.02368164 75.53130341]
[-143.43869019 74.77365112]
[-137.39694214 77.30670929]
[-122.43242645 76.27561188]
[-107.46790314 75.24452209]
[-92.50338745 74.21342468]
[-77.53886414 73.18232727]
[-62.57434845 72.15122986]
[-60.46070480 65.58007050]
[-56.80041122 59.70191956]
[-51.80434418 54.87558365]
[-45.76528168 51.39870834]
[-39.04075623 49.48942184]
[-32.03187943 49.27269745]
[-25.15943909 50.77219772]
[-18.83861923 53.90824509]
[-13.45392895 58.50195312]
[-9.33580589 64.28543091]
[-6.74035406 70.91737366]
[8.25570202 71.26131439]
[23.25175858 71.60525513]
[38.24781418 71.94919586]
[53.24386978 72.29313660]
[68.23992920 72.63706970]
[75.93763733 59.76286316]
[68.53714752 46.71553421]
[61.13666153 33.66820145]
[53.73617554 20.62087440]
[46.33568954 7.57354450]
[38.93520355 -5.47378492]
[17.54032898 -6.46614981]
[1.26462400 -20.17716217]
[-3.28760076 -40.82588959]
[5.59849310 -59.86189651]
[-2.68135810 -72.36965942]
[-10.96120930 -84.87741852]
[-19.24106216 -97.38517761]
[-34.15109634 -104.21327209]
[-35.42322159 -120.56300354]
[-21.74878120 -129.61517334]
[-7.19486856 -122.05767822]
[-6.73330116 -105.66503143]
[1.54655027 -93.15726471]
[9.82640171 -80.64950562]
[18.10625267 -68.14174652]
[26.84035873 -70.13600159]
[35.81102753 -69.68016815]
[44.34225082 -66.79590607]
[51.78768921 -61.68831635]
[57.57962799 -54.73146439]
[61.27225876 -46.44097519]
[62.57598877 -37.43583679]
[61.38010025 -28.39218140]
[57.76203918 -19.99252892]
[51.98253250 -12.87427139]
[59.38301849 0.17305811]
[66.78350830 13.22038746]
[74.18399048 26.26771736]
[81.58448029 39.31504440]
[88.98496246 52.36237717]
[109.90280914 61.91135406]
[120.01493073 77.90119934]
[119.02381897 92.98571014]
[110.64785004 101.37419128]
[125.45500946 103.77165222]
[140.26217651 106.16911316]
[155.06935120 108.56658173]
[148.35145569 95.15502167]
[154.54122925 81.49168396]
[169.05352783 77.69783020]
[181.13821411 86.58380127]
[181.84342957 101.56721497]
[170.64617920 111.54912567]
[185.29165649 114.79106140]
[199.93713379 118.03298950]
[214.58261108 121.27491760]
[229.22807312 124.51684570]
[244.03524780 126.91431427]
[258.95544434 128.45942688]
[273.87567139 130.00454712]
[288.79586792 131.54966736]
[303.71606445 133.09478760]
[318.66064453 134.38308716]
[333.62518311 135.41418457]
[348.58969116 136.44528198]
[363.55419922 137.47637939]
[378.51873779 138.50747681]
[384.71237183 124.69212341]
[395.23925781 113.84974670]
[408.81494141 107.27550507]
[423.79257202 105.74549866]
[438.36245728 109.42518616]
[450.77081299 117.85173798]
[459.53091431 129.99215698]
[463.60110474 144.36987305]
[478.56561279 145.40097046]
[493.53015137 146.43206787]
[508.49465942 147.46316528]
[522.79406738 140.69279480]
[534.95935059 149.28665161]
[549.92388916 150.31774902]
[564.22326660 143.54737854]
[576.38854980 152.14125061]
[591.35308838 153.17234802]
[606.31762695 154.20343018]
[618.17327881 144.09994507]
[633.33477783 145.35879517]
[642.89385986 156.72363281]
[657.85833740 157.75473022]
[672.82287598 158.78582764]
[682.81323242 147.05986023]
[697.61956787 143.50648499]
[711.51477051 149.28460693]
[719.25061035 161.98483276]
[734.21508789 163.01593018]
[749.17962646 164.04701233]
[755.22137451 161.51396179]
[760.80633545 162.27160645]
[764.47418213 165.27720642]
[779.41113281 166.65115356]
[794.34808350 168.02510071]
[809.34783936 167.93911743]
[824.26806641 166.39399719]
[839.18823242 164.84887695]
[854.10845947 163.30375671]
[869.02868652 161.75863647]
[883.94885254 160.21351624]
[899.08093262 152.56777954]
[910.61682129 164.99191284]
[901.87170410 179.51634216]
[885.49401855 175.13372803]
[870.57379150 176.67884827]
[855.65356445 178.22395325]
[840.73333740 179.76907349]
[825.81317139 181.31419373]
[810.89294434 182.85931396]
[824.96392822 188.05621338]
[836.61718750 197.50086975]
[844.61547852 210.19053650]
[848.10955811 224.77789307]
[846.72851562 239.71418762]
[840.61895752 253.41357422]
[830.42950439 264.42153931]
[817.24206543 271.56936646]
[802.45672607 274.09811401]
[787.64337158 271.73931885]
[774.37469482 264.74343872]
[764.05950928 253.85321045]
[757.79302979 240.22488403]
[756.24053955 225.30545044]
[759.56689453 210.67890930]
[767.41888428 197.89823914]
[778.96289062 188.32037354]
[792.97412109 182.96205139]
[778.03717041 181.58808899]
[763.10021973 180.21414185]
[748.14849854 179.01153564]
[733.18402100 177.98043823]
[718.21948242 176.94934082]
[708.81488037 188.46853638]
[694.25848389 192.28628540]
[680.07946777 186.73573303]
[671.79174805 173.75035095]
[656.82727051 172.71925354]
[641.86273193 171.68815613]
[630.83526611 181.63453674]
[615.64440918 180.80203247]
[605.28649902 169.16795349]
[590.32202148 168.13685608]
[575.35748291 167.10575867]
[562.12847900 173.94989014]
[548.89276123 165.28227234]
[533.92828369 164.25117493]
[520.69921875 171.09530640]
[507.46356201 162.42768860]
[492.49905396 161.39659119]
[477.53451538 160.36549377]
[462.57000732 159.33439636]
[456.56631470 173.01800537]
[446.22390747 183.84220886]
[432.77703857 190.48725891]
[417.84017944 192.13385010]
[403.21395874 188.56405640]
[390.66821289 180.18998718]
[381.72793579 168.00627136]
[377.48764038 153.47198486]
[362.52310181 152.44090271]
[347.55859375 151.40980530]
[332.59408569 150.37870789]
[317.62954712 149.34761047]
[314.76480103 151.34237671]
[310.80245972 152.06907654]
[306.33972168 151.03157043]
[302.17095947 148.01499939]
[287.25076294 146.46987915]
[272.33053589 144.92475891]
[257.41033936 143.37963867]
[242.49012756 141.83451843]
[253.86987305 151.60699463]
[258.91067505 165.73463440]
[256.28732300 180.50346375]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 149]
[8 148]
[9 147]
[10 146]
[11 145]
[12 139]
[13 138]
[14 137]
[15 136]
[16 34]
[17 33]
[18 32]
[19 30]
[20 29]
[43 96]
[44 95]
[45 94]
[46 93]
[47 92]
[48 91]
[51 80]
[52 79]
[53 78]
[54 77]
[55 76]
[56 75]
[57 72]
[58 71]
[59 70]
[60 69]
[97 132]
[98 131]
[99 130]
[100 129]
[101 128]
[102 127]
[106 117]
[107 116]
[108 115]
[109 114]
[150 270]
[151 269]
[152 268]
[153 267]
[154 266]
[155 262]
[156 261]
[157 260]
[158 259]
[159 258]
[167 250]
[168 249]
[169 248]
[170 247]
[172 245]
[173 244]
[175 242]
[176 241]
[177 240]
[180 237]
[181 236]
[182 235]
[186 231]
[187 230]
[188 229]
[191 228]
[192 227]
[193 226]
[194 208]
[195 207]
[196 206]
[197 205]
[198 204]
[199 203]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
