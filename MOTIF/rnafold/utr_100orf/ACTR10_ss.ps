%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:30:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCGCCGACGCCCGAGCGCCGGAGCCCCGGCCCCGCCCCGCGAGCGCCGAGACUUGUUGGCCGCGGAGACUGCGACCCUCUUCUCUCAGUCUGCCUUACUACCAUGCCGCUCUACGAGGGCCUGGGGAGCGGCGGGGAGAAGACGGCGGUCGUGAUCGACCUGGGAGAGGCCUUUACCAAGUGUGGAUUUGCUGGAGAAACUG\
) } def
/len { sequence length } bind def

/coor [
[93.04931641 311.28338623]
[105.88377380 303.51959229]
[120.87821198 303.11099243]
[134.11592102 310.16384888]
[127.63740540 296.63500977]
[121.15889740 283.10620117]
[107.85774231 281.92135620]
[96.79099274 274.25619507]
[90.91139221 262.02572632]
[91.85173035 248.37947083]
[99.47303009 236.89062500]
[93.20362091 223.26364136]
[86.93421936 209.63665771]
[80.66481018 196.00968933]
[73.26264954 194.80221558]
[63.76911163 206.41569519]
[58.45832443 192.38728333]
[51.05615997 191.17980957]
[40.78121948 202.10801697]
[30.50628090 213.03620911]
[20.23134041 223.96441650]
[9.95639992 234.89262390]
[6.73056269 250.97135925]
[-8.89139366 255.96000671]
[-20.83893967 244.72665405]
[-16.82146454 228.82722473]
[-0.97180271 224.61767578]
[9.30313778 213.68946838]
[19.57807732 202.76127625]
[29.85301781 191.83306885]
[40.12796021 180.90486145]
[47.67753220 169.48651123]
[57.26556778 161.85200500]
[67.53704834 158.21168518]
[77.17922974 158.35466003]
[72.19390869 144.20733643]
[67.20858765 130.06002808]
[55.10054398 121.20590973]
[40.10765839 120.74398804]
[25.11477280 120.28205872]
[10.12188625 119.82013702]
[-4.87099981 119.35820770]
[-9.47846889 121.83502197]
[-14.11147308 122.25137329]
[-17.97964478 120.94344330]
[-20.54114723 118.51277161]
[-35.49670029 117.35891724]
[-50.45225525 116.20505524]
[-65.40781403 115.05120087]
[-80.36336517 113.89734650]
[-92.20064545 124.36894226]
[-107.97007751 123.31988525]
[-118.31594086 111.37255096]
[-117.10021210 95.61509705]
[-105.04416656 85.39612579]
[-89.30044556 86.77838135]
[-79.20951080 98.94178772]
[-64.25395203 100.09564972]
[-49.29840088 101.24950409]
[-34.34284592 102.40335846]
[-19.38729095 103.55721283]
[-4.40907383 104.36532593]
[10.58381176 104.82724762]
[25.57669830 105.28917694]
[40.56958389 105.75109863]
[55.56246948 106.21302795]
[62.14495468 92.73448944]
[52.56225586 81.19448090]
[42.97955322 69.65447235]
[33.39685059 58.11446381]
[23.81414795 46.57445526]
[14.23144627 35.03444672]
[-0.53731799 29.36045265]
[-2.71552706 14.62598133]
[-12.29822922 3.08597159]
[-27.77357101 4.22325993]
[-40.94409561 -3.98142672]
[-46.74546814 -18.37321854]
[-42.94694519 -33.41817856]
[-31.00913239 -43.33121490]
[-15.52236271 -44.30055618]
[-2.44161773 -35.95347977]
[3.20329094 -21.49959946]
[-0.75821960 -6.49673033]
[8.82448292 5.04327917]
[22.90782738 9.89185238]
[25.77145576 25.45174408]
[35.35415649 36.99175262]
[44.93685913 48.53176117]
[54.51956177 60.07177353]
[64.10226440 71.61177826]
[73.68496704 83.15179443]
[83.71208191 76.67563629]
[94.45503998 74.95581818]
[103.95217896 77.49155426]
[111.25124359 64.38722229]
[118.55030823 51.28288651]
[119.99373627 42.25743484]
[126.06401825 38.03420639]
[133.56401062 25.04382706]
[135.14625549 16.04167557]
[141.28085327 11.91242504]
[148.98001099 -0.96092021]
[149.42298889 -16.77592468]
[162.59593201 -23.72738457]
[170.29508972 -36.60073090]
[177.99424744 -49.47407532]
[185.69340515 -62.34741974]
[193.39254761 -75.22076416]
[201.09170532 -88.09410858]
[208.79086304 -100.96746063]
[216.49002075 -113.84080505]
[224.18916321 -126.71414948]
[224.63215637 -142.52914429]
[237.80509949 -149.48060608]
[245.50424194 -162.35395813]
[241.40678406 -177.61784363]
[249.37490845 -191.26646423]
[264.68127441 -195.20231628]
[278.24487305 -187.09033203]
[282.01867676 -171.74322510]
[273.76376343 -158.26614380]
[258.37759399 -154.65480042]
[250.67843628 -141.78146362]
[250.78614807 -126.88724518]
[237.06251526 -119.01499176]
[229.36335754 -106.14164734]
[221.66419983 -93.26830292]
[213.96505737 -80.39495850]
[206.26589966 -67.52161407]
[198.56674194 -54.64826584]
[190.86758423 -41.77492142]
[183.16844177 -28.90157509]
[175.46928406 -16.02823067]
[175.57699585 -1.13401389]
[161.85334778 6.73823404]
[154.15420532 19.61157990]
[146.55439758 32.54382706]
[139.05439758 45.53420639]
[131.65464783 58.58195114]
[124.35557556 71.68628693]
[117.05651093 84.79062653]
[124.84536743 106.37693787]
[109.48991394 126.81909180]
[81.35590363 125.07470703]
[86.34122467 139.22201538]
[91.32654572 153.36933899]
[103.36605072 162.31642151]
[118.35004425 163.00917053]
[133.33404541 163.70191956]
[148.31803894 164.39466858]
[163.30203247 165.08743286]
[177.61109924 157.07601929]
[191.56343079 165.69371033]
[190.80606079 182.07536316]
[176.11810303 189.36892700]
[162.60928345 180.07142639]
[147.62528992 179.37866211]
[132.64129639 178.68591309]
[117.65729523 177.99316406]
[102.67330170 177.30041504]
[94.29179382 189.74028015]
[100.56119537 203.36726379]
[106.83060455 216.99423218]
[113.10000610 230.62121582]
[129.72795105 233.70623779]
[141.12896729 245.97123718]
[142.95663452 262.44958496]
[134.68771362 276.62768555]
[141.16622925 290.15649414]
[147.64472961 303.68533325]
[155.14472961 316.67572021]
[163.62178040 329.05065918]
[172.09883118 341.42562866]
[180.57586670 353.80059814]
[189.05291748 366.17556763]
[203.23515320 373.18801880]
[204.04454041 388.06063843]
[212.52159119 400.43557739]
[220.99864197 412.81054688]
[229.47567749 425.18551636]
[237.95272827 437.56048584]
[252.96910095 444.15139771]
[254.50019836 460.47891235]
[240.97094727 469.74667358]
[226.29908752 462.42080688]
[225.57775879 446.03753662]
[217.10072327 433.66256714]
[208.62367249 421.28759766]
[200.14662170 408.91262817]
[191.66958618 396.53768921]
[178.09368896 390.41033936]
[176.67794800 374.65258789]
[168.20091248 362.27764893]
[159.72386169 349.90267944]
[151.24681091 337.52770996]
[142.76977539 325.15274048]
[142.25865173 340.14404297]
[134.40728760 352.92510986]
[121.26622772 360.15786743]
[106.26762390 359.95327759]
[93.32874298 352.36480713]
[85.82889557 339.37432861]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 171]
[5 170]
[6 169]
[11 165]
[12 164]
[13 163]
[14 162]
[18 31]
[19 30]
[20 29]
[21 28]
[22 27]
[35 147]
[36 146]
[37 145]
[38 66]
[39 65]
[40 64]
[41 63]
[42 62]
[46 61]
[47 60]
[48 59]
[49 58]
[50 57]
[67 92]
[68 91]
[69 90]
[70 89]
[71 88]
[72 87]
[74 85]
[75 84]
[95 142]
[96 141]
[97 140]
[99 139]
[100 138]
[102 137]
[103 136]
[105 134]
[106 133]
[107 132]
[108 131]
[109 130]
[110 129]
[111 128]
[112 127]
[113 126]
[115 124]
[116 123]
[148 161]
[149 160]
[150 159]
[151 158]
[152 157]
[172 197]
[173 196]
[174 195]
[175 194]
[176 193]
[178 191]
[179 190]
[180 189]
[181 188]
[182 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
