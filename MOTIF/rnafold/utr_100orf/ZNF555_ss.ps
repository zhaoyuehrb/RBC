%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:44:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAGCUCUGUCUAAUCAGGCCCCUGGGACGGGACGCCUCUGUCCUAGCCGUGAGUGCCCCGCCUGCCCCUAGCGGUCCCUGGCGUCCCGGUUCCUGUCGCGCUCACCUGCGCCGGUAGCGAAGAAAUCGCCCCGGGACAUGGACUCAGUGGUCUUUGAGGAUGUGGCUGUGGACUUCACCCUGGAGGAGUGGGCUUUGCUGGAUUCUGCUCAGAGGGACCUCUACAGAGAUGUGAUGC\
) } def
/len { sequence length } bind def

/coor [
[189.97462463 364.93554688]
[195.56254578 378.85372925]
[190.53530884 364.72125244]
[185.50807190 350.58877563]
[180.48085022 336.45629883]
[166.16535950 332.43078613]
[156.85511780 320.60778809]
[156.28526306 305.39172363]
[164.88375854 292.61001587]
[159.85652161 278.47753906]
[154.82929993 264.34506226]
[149.80206299 250.21258545]
[144.77482605 236.08010864]
[130.45933533 232.05461121]
[121.14910126 220.23159790]
[120.57924652 205.01553345]
[129.17774963 192.23382568]
[124.15051270 178.10134888]
[119.12327576 163.96887207]
[114.09604645 149.83639526]
[109.06880951 135.70390320]
[104.04158020 121.57143402]
[89.66442871 117.29387665]
[77.72920227 126.37960815]
[65.79398346 135.46533203]
[53.85876083 144.55107117]
[41.92354202 153.63679504]
[29.98831940 162.72251892]
[18.05309868 171.80825806]
[6.11787701 180.89398193]
[-5.81734419 189.97972107]
[-17.75256538 199.06544495]
[-21.32373619 214.70597839]
[-35.84051132 221.53553772]
[-50.16686249 214.31506348]
[-53.31283951 198.58349609]
[-42.86511612 186.40873718]
[-26.83829498 187.13021851]
[-14.90307426 178.04449463]
[-2.96785307 168.95877075]
[8.96736813 159.87303162]
[20.90258980 150.78730774]
[32.83781052 141.70156860]
[44.77303314 132.61584473]
[56.70825195 123.53011322]
[68.64347839 114.44438171]
[80.57869720 105.35865784]
[83.51713562 90.64928436]
[75.98869324 77.67536163]
[68.46025085 64.70144653]
[60.84670639 51.77728653]
[53.14838409 38.90344620]
[45.45005798 26.02960396]
[37.75173187 13.15576172]
[30.05340767 0.28192022]
[18.05873108 -8.72517109]
[3.54879713 -12.52804375]
[-10.96113586 -16.33091736]
[-25.58818245 -19.65499878]
[-40.31654739 -22.49670029]
[-55.04491043 -25.33840370]
[-69.77327728 -28.18010521]
[-80.34695435 -16.94619179]
[-95.32112885 -13.23435974]
[-109.91759491 -18.22904396]
[-119.47866058 -30.33645630]
[-120.95344543 -45.69316864]
[-113.87133026 -59.39890671]
[-100.49221039 -67.08022308]
[-85.08529663 -66.28603363]
[-72.56689453 -57.26976013]
[-66.93157196 -42.90847015]
[-52.20320892 -40.06676865]
[-37.47484589 -37.22506714]
[-22.74648094 -34.38336182]
[-28.96180344 -48.03509521]
[-22.28450775 -61.46691132]
[-7.64890480 -64.75311279]
[4.12974453 -55.46530533]
[4.34738350 -40.46688461]
[-7.15826321 -30.84084892]
[7.35166979 -27.03797722]
[21.86160278 -23.23510551]
[32.64104080 -33.66600800]
[29.31695938 -48.29305267]
[25.99287796 -62.92009735]
[22.66879463 -77.54714203]
[19.34471321 -92.17419434]
[16.02063179 -106.80123901]
[12.69654942 -121.42828369]
[0.85627079 -122.29237366]
[-10.34687710 -129.78361511]
[-17.21600342 -143.22567749]
[-16.69501686 -159.94096375]
[-22.45803070 -173.78970337]
[-28.22104454 -187.63845825]
[-33.20885086 -191.93125916]
[-35.02225113 -197.29196167]
[-33.94823074 -201.92778015]
[-39.34521866 -215.92321777]
[-44.74221039 -229.91867065]
[-50.13919830 -243.91410828]
[-64.68674469 -250.09022522]
[-70.52870178 -264.77514648]
[-64.19913483 -279.25659180]
[-49.45326233 -284.94296265]
[-35.03955078 -278.46063232]
[-29.50940132 -263.65548706]
[-36.14374924 -249.31109619]
[-30.74676132 -235.31565857]
[-25.34977341 -221.32020569]
[-19.95278549 -207.32476807]
[-14.37230206 -193.40145874]
[-8.60928822 -179.55271912]
[-2.84627438 -165.70397949]
[4.58240366 -166.73583984]
[19.43976021 -168.79957581]
[26.86843681 -169.83143616]
[28.63883972 -184.72659302]
[30.40924454 -199.62174988]
[32.17964935 -214.51690674]
[23.42327118 -227.95957947]
[28.61022377 -243.14099121]
[43.76151657 -248.41525269]
[57.25437546 -239.73640442]
[58.73823547 -223.76213074]
[47.07480240 -212.74650574]
[45.30440140 -197.85134888]
[43.53399658 -182.95619202]
[41.76359177 -168.06103516]
[44.28925323 -139.76751709]
[27.32359505 -124.75236511]
[30.64767838 -110.12532043]
[33.97175980 -95.49827576]
[37.29584122 -80.87122345]
[40.61992264 -66.24417877]
[43.94400406 -51.61713409]
[47.26808929 -36.99008942]
[50.00572586 -30.30541039]
[50.73125839 -23.48887062]
[49.58382034 -17.10378456]
[46.84988022 -11.62763977]
[42.92724991 -7.41640425]
[50.62557602 5.45743704]
[58.32389832 18.33127785]
[66.02222443 31.20512009]
[73.72055054 44.07896042]
[79.83917999 48.19870758]
[81.43417358 57.17300415]
[88.96261597 70.14692688]
[96.49105835 83.12084198]
[110.30162048 88.97475433]
[124.86029053 85.36293030]
[139.41896057 81.75111389]
[153.97761536 78.13928986]
[168.53628540 74.52747345]
[180.06738281 63.69490051]
[194.28323364 68.13997650]
[208.84190369 64.52816010]
[223.40055847 60.91633987]
[234.93165588 50.08377075]
[249.14750671 54.52884674]
[263.70617676 50.91702652]
[275.23727417 40.08446121]
[289.45312500 44.52953720]
[304.01177979 40.91771698]
[310.72027588 26.79220390]
[324.96044922 20.33061218]
[340.00848389 24.58390808]
[348.75918579 37.54381180]
[347.08074951 53.09106064]
[335.76565552 63.88470840]
[320.15655518 64.82833862]
[307.62359619 55.47638321]
[293.06494141 59.08820343]
[282.57519531 69.66242981]
[267.31799316 65.47569275]
[252.75933838 69.08751678]
[242.26957703 79.66174316]
[227.01239014 75.47500610]
[212.45372009 79.08682251]
[197.89505005 82.69864655]
[187.40528870 93.27287292]
[172.14810181 89.08613586]
[157.58944702 92.69795227]
[143.03077698 96.30977631]
[128.47210693 99.92159271]
[113.91344452 103.53341675]
[116.27620697 107.11214447]
[117.76261139 111.51664734]
[118.17405701 116.54419708]
[123.20128632 130.67668152]
[128.22851562 144.80915833]
[133.25575256 158.94163513]
[138.28298950 173.07411194]
[143.31022644 187.20658875]
[158.04911804 191.68667603]
[167.21670532 203.84434509]
[167.46459961 218.89102173]
[158.90730286 231.05287170]
[163.93453979 245.18534851]
[168.96177673 259.31784058]
[173.98899841 273.45031738]
[179.01623535 287.58279419]
[193.75512695 292.06286621]
[202.92271423 304.22052002]
[203.17062378 319.26721191]
[194.61332703 331.42907715]
[199.64056396 345.56155396]
[204.66778564 359.69403076]
[209.69502258 373.82650757]
[216.26664734 387.31033325]
[224.30072021 399.97735596]
[232.33479309 412.64440918]
[240.36886597 425.31143188]
[255.14274597 432.42932129]
[256.09542847 448.80078125]
[242.24685669 457.58422852]
[227.84326172 449.74404907]
[227.70184326 433.34548950]
[219.66777039 420.67846680]
[211.63369751 408.01144409]
[203.59962463 395.34439087]
[189.90715027 401.46945190]
[193.99536133 415.90161133]
[198.08357239 430.33374023]
[210.21417236 441.36914062]
[206.45863342 457.33248901]
[190.68032837 461.80203247]
[179.11061096 450.17990112]
[183.65142822 434.42193604]
[179.56323242 419.98980713]
[175.47502136 405.55767822]
[160.55128479 404.04696655]
[149.12843323 394.32489014]
[145.25181580 379.83450317]
[150.29429626 365.70745850]
[162.47012329 356.94680786]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 211]
[3 210]
[4 209]
[5 208]
[9 204]
[10 203]
[11 202]
[12 201]
[13 200]
[17 196]
[18 195]
[19 194]
[20 193]
[21 192]
[22 191]
[23 47]
[24 46]
[25 45]
[26 44]
[27 43]
[28 42]
[29 41]
[30 40]
[31 39]
[32 38]
[48 151]
[49 150]
[50 149]
[51 147]
[52 146]
[53 145]
[54 144]
[55 143]
[56 83]
[57 82]
[58 81]
[59 75]
[60 74]
[61 73]
[62 72]
[84 138]
[85 137]
[86 136]
[87 135]
[88 134]
[89 133]
[90 132]
[94 115]
[95 114]
[96 113]
[99 112]
[100 111]
[101 110]
[102 109]
[118 130]
[119 129]
[120 128]
[121 127]
[152 188]
[153 187]
[154 186]
[155 185]
[156 184]
[158 182]
[159 181]
[160 180]
[162 178]
[163 177]
[165 175]
[166 174]
[212 223]
[213 222]
[214 221]
[215 220]
[224 233]
[225 232]
[226 231]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
