%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:34:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGUUGCCAUGGGGACGGAGCUUGGGUGGCAACCAGAACUAGGGAGCUGGUGGAGAAGGUGGCGGCCGCUGGAAGGAGGCCCGGGAGGUGGCUGAGGGGUCCAGGCGGCGGGACGACUCUGGCCUUUUGAAGACCGGGAGGAAACUCUACAGAGAAGAAUGUCAGAUGCAGCAGAAGCUCCCCGAGAAGCAACAGGAGAAAAUGGAGAAACAGAAAUGAAAGAAGAGGAGGAACCUAAUCCAAAUUAUAAAGAA\
GUAG\
) } def
/len { sequence length } bind def

/coor [
[251.82511902 517.66064453]
[251.21261597 502.67315674]
[243.87966919 504.24725342]
[237.23179626 517.69366455]
[230.58392334 531.14007568]
[223.93605042 544.58648682]
[217.28817749 558.03289795]
[210.64030457 571.47930908]
[203.99243164 584.92565918]
[197.34455872 598.37207031]
[190.69668579 611.81848145]
[192.29678345 630.17718506]
[177.29762268 639.31219482]
[170.81271362 652.83795166]
[164.32778931 666.36370850]
[169.80912781 681.18701172]
[163.12753296 695.50946045]
[148.24710083 700.83374023]
[133.99612427 694.00109863]
[128.82943726 679.06518555]
[135.81236267 664.88726807]
[150.80204773 659.87878418]
[157.28695679 646.35302734]
[163.77188110 632.82727051]
[160.05487061 621.33618164]
[165.32197571 610.02465820]
[177.25027466 605.17059326]
[183.89814758 591.72424316]
[190.54602051 578.27783203]
[197.19389343 564.83142090]
[203.84176636 551.38500977]
[210.48965454 537.93859863]
[217.13752747 524.49218750]
[223.78540039 511.04580688]
[230.43327332 497.59939575]
[209.64787292 484.12789917]
[197.29156494 463.32897949]
[195.49099731 439.78210449]
[204.11108398 418.41656494]
[220.88763428 403.48007202]
[215.06376648 389.65682983]
[200.52346802 379.80780029]
[203.00866699 361.54785156]
[197.01820374 347.79598999]
[191.02772522 334.04409790]
[185.03726196 320.29220581]
[179.04678345 306.54034424]
[173.05632019 292.78845215]
[167.06585693 279.03656006]
[153.15319824 273.84295654]
[146.88211060 259.98193359]
[152.42398071 245.42427063]
[146.43350220 231.67237854]
[131.52345276 232.66024780]
[117.14812469 228.47946167]
[105.04791260 219.61610413]
[96.69463348 207.12434387]
[93.11251831 192.50111389]
[94.75266266 177.50677490]
[101.43629456 163.95314026]
[112.37405396 153.48457336]
[106.38358307 139.73269653]
[100.39311218 125.98081207]
[94.40264893 112.22892761]
[83.48052979 101.94751740]
[69.39204407 96.79829407]
[55.30355453 91.64907837]
[41.21506500 86.49985504]
[27.12657547 81.35063171]
[13.03808689 76.20140839]
[-1.05040193 71.05219269]
[-12.84612751 80.78913879]
[-27.83287430 83.29795837]
[-41.96923447 78.00365448]
[-51.49382019 66.42185211]
[-53.92601013 51.72661209]
[-68.01449585 46.57738876]
[-84.06627655 49.93483734]
[-94.79664612 37.53358078]
[-89.16712189 22.13096619]
[-72.96887970 19.57188416]
[-62.86527634 32.48889923]
[-48.77679062 37.63812256]
[-37.44171906 27.97469711]
[-22.69349098 25.26439667]
[-8.47485447 30.33359718]
[1.36195481 41.91521835]
[4.09881973 56.96370316]
[18.18730927 62.11292267]
[32.27579880 67.26214600]
[46.36428452 72.41136932]
[60.45277405 77.56058502]
[74.54126740 82.70980835]
[88.62975311 87.85903168]
[94.05965424 82.68542480]
[83.71260834 71.82546234]
[94.57273102 61.47859192]
[104.91944885 72.33821869]
[110.34934998 67.16461182]
[105.88681030 52.84379959]
[101.42426300 38.52298355]
[96.96171570 24.20217133]
[92.32646179 9.93632412]
[87.51917267 -4.27247572]
[82.71188354 -18.48127556]
[77.90460205 -32.69007492]
[66.15265656 -43.28263855]
[69.40293121 -57.81828308]
[64.59564209 -72.02708435]
[59.78835297 -86.23588562]
[48.03641129 -96.82844543]
[51.28668594 -111.36408997]
[46.47939682 -125.57289124]
[41.67211151 -139.78169250]
[29.00300789 -150.19447327]
[31.95275116 -166.32614136]
[47.48689651 -171.58183289]
[59.62524796 -160.55494690]
[55.88090897 -144.58897400]
[60.68819809 -130.38017273]
[65.49548340 -116.17137909]
[76.90357971 -106.59512329]
[73.99715424 -91.04317474]
[78.80444336 -76.83437347]
[83.61172485 -62.62557220]
[95.01982117 -53.04931641]
[92.11339569 -37.49736404]
[96.92068481 -23.28856277]
[101.72797394 -9.07976246]
[106.53526306 5.12903690]
[110.31674194 8.00041771]
[112.35208130 13.26527500]
[111.28253174 19.73962593]
[115.74507141 34.06044006]
[120.20761871 48.38125229]
[124.67016602 62.70206451]
[132.16961670 62.79268646]
[154.66796875 63.06454849]
[159.47526550 48.85574722]
[164.28254700 34.64694977]
[169.08984375 20.43814850]
[165.34550476 4.47218609]
[177.48385620 -6.55471134]
[193.01799011 -1.29901719]
[195.96774292 14.83266163]
[183.29862976 25.24543571]
[178.49134827 39.45423508]
[173.68406677 53.66303635]
[168.87677002 67.87183380]
[179.90762329 57.70717621]
[191.80229187 66.84594727]
[199.91903687 79.46015930]
[203.30726624 94.07247925]
[201.57014465 108.97155762]
[194.91113281 122.41244507]
[184.11012268 132.82099915]
[170.43206787 138.97819519]
[155.47892761 140.16291809]
[141.00196838 136.23641968]
[128.69667053 127.65855408]
[120.00466156 115.43489075]
[108.15452576 106.23846436]
[114.14499664 119.99034119]
[120.13546753 133.74223328]
[126.12593842 147.49411011]
[141.24052429 146.61399841]
[155.71708679 150.95002747]
[167.81393433 159.96037292]
[176.08258057 172.54208374]
[179.54119873 187.16601562]
[177.79112244 202.06272888]
[171.06274414 215.43650818]
[160.18539429 225.68191528]
[166.17585754 239.43379211]
[180.61007690 245.28965759]
[186.48936462 259.32135010]
[180.81773376 273.04608154]
[186.80819702 286.79797363]
[192.79867554 300.54986572]
[198.78913879 314.30175781]
[204.77961731 328.05361938]
[210.77008057 341.80551147]
[216.76054382 355.55740356]
[228.44041443 360.98202515]
[233.15486145 372.53482056]
[228.88702393 383.83294678]
[234.71089172 397.65621948]
[242.20817566 396.02447510]
[249.92689514 395.58361816]
[257.67764282 396.36282349]
[265.26733398 398.36102295]
[272.50405884 401.54660034]
[279.20190430 405.85769653]
[285.18572998 411.20333862]
[290.29577637 417.46530151]
[294.39181519 424.50064087]
[297.35702515 432.14511108]
[299.10122681 440.21670532]
[299.56350708 448.52029419]
[298.71426392 456.85205078]
[296.55618286 465.00473022]
[293.12481689 472.77258301]
[288.48806763 479.95669556]
[282.74487305 486.37005615]
[294.32565308 495.90347290]
[305.90643311 505.43685913]
[317.48718262 514.97027588]
[311.46432495 501.23254395]
[309.65322876 486.34228516]
[312.20736694 471.56134033]
[318.91027832 458.14227295]
[329.19400024 447.22232056]
[342.18698120 439.72683716]
[356.78817749 436.29101562]
[371.76025391 437.20602417]
[385.83438110 442.39434814]
[397.81790161 451.41625977]
[406.69531250 463.50726318]
[411.71423340 477.64266968]
[412.44943237 492.62466431]
[408.83853149 507.18353271]
[401.18759155 520.08557129]
[390.14492798 530.23742676]
[376.64639282 536.77874756]
[361.83584595 539.15527344]
[346.96838379 537.16546631]
[333.30068970 530.97601318]
[342.69345093 542.67108154]
[352.08624268 554.36621094]
[367.81427002 557.52978516]
[375.01873779 571.86419678]
[368.17294312 586.37335205]
[352.52841187 589.92700195]
[340.08630371 579.79913330]
[340.39111328 563.75903320]
[330.99835205 552.06390381]
[321.60556030 540.36877441]
[315.32687378 539.17102051]
[310.05892944 534.27081299]
[307.95379639 526.55102539]
[296.37301636 517.01763916]
[284.79223633 507.48422241]
[273.21148682 497.95083618]
[265.87854004 499.52493286]
[271.47103882 513.44342041]
[277.06356812 527.36187744]
[282.65609741 541.28033447]
[288.24862671 555.19879150]
[293.84115601 569.11724854]
[302.75064087 581.18463135]
[303.73812866 596.15209961]
[296.49133301 609.28540039]
[283.30236816 616.43041992]
[268.34298706 615.32720947]
[256.34487915 606.32470703]
[251.10307312 592.27038574]
[254.27508545 577.61059570]
[253.66259766 562.62310791]
[253.05009460 547.63562012]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 35]
[4 34]
[5 33]
[6 32]
[7 31]
[8 30]
[9 29]
[10 28]
[11 27]
[13 24]
[14 23]
[15 22]
[40 187]
[41 186]
[43 183]
[44 182]
[45 181]
[46 180]
[47 179]
[48 178]
[49 177]
[52 174]
[53 173]
[61 165]
[62 164]
[63 163]
[64 162]
[65 94]
[66 93]
[67 92]
[68 91]
[69 90]
[70 89]
[71 88]
[76 83]
[77 82]
[99 136]
[100 135]
[101 134]
[102 133]
[103 130]
[104 129]
[105 128]
[106 127]
[108 125]
[109 124]
[110 123]
[112 121]
[113 120]
[114 119]
[138 149]
[139 148]
[140 147]
[141 146]
[204 243]
[205 242]
[206 241]
[207 240]
[227 237]
[228 236]
[229 235]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
