%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:26:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCAUAACAACAUAGGAACAGGUCACCCGCGUGUUACUCAAAACUGUAGGACGGCAGUGAGGGCUUUGCUAAUCCCAGAACAGAGGUGUAACCUGGCUGCAUAUCCAGCCUCGAGAAAAUGUCUACAGCAGAUCUGAUGGAGAACCUCAGGGAGGAACUCACCUGUUUCAUCUGCUUAGACUAUUUCAGCAGCCCAGUGACCACCGAGUGUGGGCACA\
) } def
/len { sequence length } bind def

/coor [
[41.56932831 267.20352173]
[39.24301910 282.02203369]
[36.91670990 296.84054565]
[34.59040070 311.65905762]
[37.97420120 326.27239990]
[35.84088516 341.11993408]
[28.47956848 354.18939209]
[16.88790894 363.70956421]
[2.63688016 368.39016724]
[-12.34212875 367.59689331]
[-26.01906776 361.43725586]
[-36.54034805 350.74600220]
[-42.48006439 336.97213745]
[-43.03322220 321.98233032]
[-38.12485886 307.80813599]
[-28.42018318 296.37051392]
[-15.23268318 289.21899414]
[-5.67711592 277.65649414]
[3.87845111 266.09399414]
[13.43401814 254.53150940]
[22.98958397 242.96902466]
[32.54515076 231.40653992]
[25.70675278 228.32655334]
[11.77760124 233.89241028]
[-2.15155005 239.45826721]
[-16.08070183 245.02412415]
[-19.99189186 259.92407227]
[-31.78880119 269.55145264]
[-46.81488419 270.37658691]
[-59.29616165 262.29229736]
[-73.22531128 267.85815430]
[-87.15446472 273.42401123]
[-97.09846497 285.72958374]
[-111.78811646 283.26721191]
[-125.71726227 288.83306885]
[-139.64642334 294.39892578]
[-153.57556152 299.96478271]
[-157.25637817 315.03897095]
[-169.11633301 325.04501343]
[-184.59504700 326.13537598]
[-197.74064636 317.89080811]
[-203.49836731 303.48150635]
[-199.65425110 288.44812012]
[-187.68644714 278.57131958]
[-172.19680786 277.64892578]
[-159.14141846 286.03561401]
[-145.21226501 280.46975708]
[-131.28312683 274.90390015]
[-117.35397339 269.33804321]
[-108.40627289 257.43057251]
[-92.72031403 259.49484253]
[-78.79116821 253.92900085]
[-64.86201477 248.36314392]
[-61.38882828 233.90371704]
[-49.93180466 224.14663696]
[-34.74881363 222.99330139]
[-21.64655685 231.09497070]
[-7.71740532 225.52911377]
[6.21174574 219.96325684]
[20.14089775 214.39739990]
[31.51548386 204.61892700]
[39.10846329 191.68266296]
[46.70144653 178.74641418]
[54.29442596 165.81016541]
[61.88740921 152.87390137]
[61.57455444 148.11369324]
[64.24464417 143.10542297]
[69.88831329 139.67993164]
[77.84926605 126.96681976]
[85.81021118 114.25370789]
[72.72882843 121.59383392]
[62.45694351 132.52490234]
[48.55514908 138.15873718]
[33.57130051 137.46279907]
[20.25156593 130.56463623]
[11.03711987 118.72850800]
[7.61673975 104.12368011]
[10.61729527 89.42685699]
[19.48886108 77.33159637]
[32.60549927 70.05465698]
[47.56325912 68.92972565]
[61.62075043 74.16297150]
[72.20089722 84.79417419]
[85.48745728 91.75601959]
[77.16509247 79.27651215]
[68.84272003 66.79700470]
[60.52035522 54.31748962]
[46.70205688 44.49450684]
[52.31587219 28.49696159]
[69.24228668 29.46282387]
[72.99986267 45.99512100]
[81.32223511 58.47463226]
[89.64459991 70.95414734]
[97.96697235 83.43365479]
[111.81484985 77.66856384]
[108.82257080 62.97005081]
[105.83029175 48.27153778]
[102.83802032 33.57302475]
[99.84574127 18.87451172]
[86.52907562 10.36322689]
[83.21279907 -5.08921099]
[91.86439514 -18.31514740]
[107.35103607 -21.46786690]
[120.48476410 -12.67691803]
[123.47357178 2.84218550]
[114.54425812 15.88223457]
[117.53652954 30.58074760]
[120.52880859 45.27926254]
[123.52108765 59.97777176]
[126.51335907 74.67628479]
[133.11344910 78.23841858]
[140.23791504 65.03834534]
[153.43788147 72.16301727]
[146.31362915 85.36268616]
[152.91372681 88.92481995]
[166.84288025 83.35896301]
[180.77203369 77.79310608]
[194.70118713 72.22724915]
[200.99700928 57.97943497]
[215.20243835 52.53329468]
[228.74674988 58.62321091]
[242.67590332 53.05735397]
[256.60507202 47.49150085]
[270.53421021 41.92564392]
[284.46334839 36.35979080]
[291.26623535 30.27309799]
[298.63244629 30.81557655]
[312.64001465 25.45010376]
[326.64758301 20.08462906]
[340.65512085 14.71915627]
[354.66268921 9.35368252]
[368.67025757 3.98820877]
[382.67779541 -1.37726486]
[382.02383423 -45.76835632]
[394.06994629 -54.70654678]
[406.11605835 -63.64473343]
[418.16217041 -72.58292389]
[423.18524170 -80.20496368]
[430.44580078 -81.56146240]
[442.61886597 -90.32593536]
[448.85641479 -105.49251556]
[465.14358521 -107.40548706]
[474.72558594 -94.09693909]
[467.74523926 -79.25756836]
[451.38336182 -78.15284729]
[439.21026611 -69.38837433]
[427.10034180 -60.53681564]
[415.05426025 -51.59862518]
[403.00814819 -42.66043472]
[390.96203613 -33.72224426]
[393.59445190 -26.69940376]
[408.39080811 -24.23610115]
[398.85931396 -12.65372276]
[401.49176025 -5.63088131]
[416.44509888 -6.81313086]
[431.39843750 -7.99537992]
[446.35177612 -9.17762947]
[461.30511475 -10.35987854]
[471.37292480 -22.54242706]
[487.11401367 -23.95457077]
[499.18942261 -13.75850964]
[500.43505859 1.99661434]
[490.11190796 13.96356487]
[474.34448242 15.04256344]
[462.48736572 4.59345865]
[447.53402710 5.77570772]
[432.58068848 6.95795679]
[417.62734985 8.14020634]
[402.67401123 9.32245541]
[388.04327393 12.63029385]
[374.03573608 17.99576759]
[360.02816772 23.36124039]
[346.02059937 28.72671509]
[332.01306152 34.09218597]
[318.00549316 39.45766068]
[303.99792480 44.82313538]
[290.02920532 50.28894043]
[276.10006714 55.85479736]
[262.17089844 61.42065048]
[248.24176025 66.98650360]
[234.31260681 72.55236053]
[228.69471741 86.29917908]
[214.64787292 92.14217377]
[200.26702881 86.15640259]
[186.33789062 91.72225952]
[172.40873718 97.28811646]
[158.47958374 102.85397339]
[98.52333069 122.21466064]
[90.56237793 134.92776489]
[82.60142517 147.64088440]
[74.82366180 160.46688843]
[67.23068237 173.40313721]
[59.63769913 186.33940125]
[52.04471970 199.27565002]
[44.45173645 212.21189880]
[58.28417969 218.55151367]
[67.18010712 235.58364868]
[72.24295044 249.70339966]
[77.30579376 263.82315063]
[89.24692535 274.20199585]
[86.25941467 288.79391479]
[91.32225800 302.91366577]
[96.38510132 317.03341675]
[101.44794464 331.15319824]
[115.28302765 339.27539062]
[117.41613770 355.17599487]
[106.21094513 366.65744019]
[90.26311493 364.91210938]
[81.80644989 351.27890015]
[87.32818604 336.21603394]
[82.26534271 322.09628296]
[77.20249939 307.97650146]
[72.13965607 293.85675049]
[60.56065750 284.48785400]
[63.18603897 268.88601685]
[58.12319183 254.76625061]
[53.06034851 240.64648438]
[46.22195053 237.56649780]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 60]
[24 59]
[25 58]
[26 57]
[30 53]
[31 52]
[32 51]
[34 49]
[35 48]
[36 47]
[37 46]
[61 195]
[62 194]
[63 193]
[64 192]
[65 191]
[68 190]
[69 189]
[70 188]
[84 94]
[85 93]
[86 92]
[87 91]
[95 110]
[96 109]
[97 108]
[98 107]
[99 106]
[115 187]
[116 186]
[117 185]
[118 184]
[121 181]
[122 180]
[123 179]
[124 178]
[125 177]
[127 176]
[128 175]
[129 174]
[130 173]
[131 172]
[132 171]
[133 170]
[134 150]
[135 149]
[136 148]
[137 147]
[139 146]
[140 145]
[154 169]
[155 168]
[156 167]
[157 166]
[158 165]
[197 217]
[198 216]
[199 215]
[201 213]
[202 212]
[203 211]
[204 210]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
