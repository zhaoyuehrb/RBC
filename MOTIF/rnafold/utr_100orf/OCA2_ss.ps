%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:46:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUACUUCGAAGGCUGUGCUCCGCUCACCAUCCAGAGCGGAGGUGCGGACCUUAAACUCACUCCUGGAGAAAGAUCUGCAAGUGCGCAGAGAGAAGACUGGCAGUGGAGCAUGCAUCUGGAGGGCAGAGACGGCAGGCGGUACCCCGGCGCGCCGGCGGUGGAGCUCCUGCAGACGUCCGUGCCCAGCGGACUCGCUGAACUUGUGGCCG\
) } def
/len { sequence length } bind def

/coor [
[205.60359192 122.02045441]
[194.34698486 123.11485291]
[183.44587708 119.91519165]
[174.48591614 112.84697723]
[168.78526306 102.90129089]
[153.81890869 103.90554810]
[138.85256958 104.90981293]
[123.88622284 105.91407013]
[111.89913177 136.57626343]
[66.33396912 140.04812622]
[54.23821259 148.91902161]
[42.14245987 157.78991699]
[30.04670906 166.66081238]
[18.01733208 175.62150574]
[6.05499554 184.67150879]
[-5.90734148 193.72151184]
[-17.86967850 202.77151489]
[-29.83201408 211.82151794]
[-41.79435349 220.87150574]
[-53.68898392 230.01031494]
[-65.51525116 239.23741150]
[-77.34152222 248.46450806]
[-89.16779327 257.69161987]
[-100.99406433 266.91870117]
[-112.82033539 276.14581299]
[-124.64660645 285.37289429]
[-123.98075867 300.87570190]
[-132.58242798 313.79043579]
[-147.14408875 319.15118408]
[-162.06649780 314.89660645]
[-171.61166382 302.66265869]
[-172.10929871 287.15356445]
[-163.36802673 274.33288574]
[-148.74906921 269.13040161]
[-133.87370300 273.54663086]
[-122.04743195 264.31954956]
[-110.22116089 255.09243774]
[-98.39488983 245.86534119]
[-86.56861877 236.63824463]
[-74.74235535 227.41114807]
[-62.91608429 218.18405151]
[-59.57619476 211.59109497]
[-50.84435272 208.90917969]
[-38.88201523 199.85917664]
[-26.91967773 190.80917358]
[-14.95734119 181.75917053]
[-2.99500465 172.70918274]
[8.96733189 163.65917969]
[12.40500832 157.11668396]
[21.17581367 154.56506348]
[33.27156448 145.69416809]
[45.36731720 136.82327271]
[57.46306992 127.95237732]
[56.24020767 120.55274200]
[42.20078659 115.27119446]
[53.79447937 105.75347137]
[52.57161713 98.35383606]
[38.26492691 93.84620667]
[23.95824242 89.33857727]
[10.86950397 97.89538574]
[-4.65103245 95.98568726]
[-15.27504444 84.51117706]
[-15.98619938 68.88977051]
[-6.44871044 56.49742126]
[8.83411121 53.18541336]
[22.64618492 60.51758194]
[28.46586990 75.03189087]
[42.77255630 79.53952026]
[57.07924271 84.04714966]
[61.28655243 77.83840179]
[48.86905670 69.42378235]
[42.32247162 55.92777634]
[57.28367615 57.00628662]
[69.70117188 65.42090607]
[73.90847778 59.21215820]
[64.41958618 47.59489441]
[54.93068314 35.97763062]
[45.44178772 24.36036873]
[35.95288849 12.74310589]
[20.20517731 11.40699577]
[10.07863998 -0.72679085]
[11.58116913 -16.45949364]
[23.82134247 -26.45718002]
[39.53728104 -24.78839874]
[49.40499878 -12.44320965]
[47.57015228 3.25420713]
[57.05904770 14.87147045]
[66.54795074 26.48873329]
[76.03684235 38.10599899]
[85.52574158 49.72325897]
[109.02938080 57.87517166]
[121.87096405 74.17140198]
[122.88196564 90.94772339]
[137.84831238 89.94346619]
[152.81465149 88.93920898]
[167.78099060 87.93494415]
[177.27169800 71.31381226]
[194.72463989 63.83019257]
[213.01602173 68.34174347]
[224.79789734 82.84967804]
[239.70446777 81.17813873]
[254.61105347 79.50659943]
[262.76541138 64.68760681]
[277.99459839 57.71818924]
[294.21441650 61.16487885]
[305.07373047 73.47555542]
[319.95376587 71.58226013]
[329.62274170 59.36962509]
[344.74017334 57.66152573]
[356.32348633 66.95468903]
[371.20352173 65.06139374]
[379.32153320 60.87384033]
[386.31896973 63.25238800]
[401.22555542 61.58084869]
[416.89492798 48.89884567]
[434.26074219 57.40272903]
[449.11093140 55.28810501]
[463.96112061 53.17348099]
[478.81130981 51.05885696]
[488.29739380 38.70361710]
[503.38772583 36.77063370]
[515.10809326 45.89030457]
[529.95831299 43.77568054]
[544.80853271 41.66105652]
[559.65869141 39.54643250]
[574.50891113 37.43180847]
[583.99499512 25.07656479]
[599.08532715 23.14358139]
[610.80572510 32.26325226]
[625.65588379 30.14862633]
[640.50610352 28.03400230]
[655.35626221 25.91937828]
[670.15557861 23.47365189]
[684.89654541 20.69804001]
[699.63751221 17.92243004]
[714.37841797 15.14681911]
[729.11938477 12.37120819]
[736.97381592 7.70788765]
[744.10040283 9.66572189]
[758.88104248 7.10988951]
[773.66174316 4.55405712]
[785.94171143 -5.42149496]
[799.80126953 0.03407717]
[814.58190918 -2.52175522]
[829.34313965 -5.18755054]
[844.08410645 -7.96316147]
[858.82501221 -10.73877239]
[870.95520020 -20.89604950]
[884.89440918 -15.64743042]
[899.63531494 -18.42304039]
[914.08215332 -27.29585075]
[926.60742188 -15.86988926]
[919.09539795 -0.67103851]
[902.41094971 -3.68207836]
[887.66998291 -0.90646744]
[876.59423828 9.05228043]
[861.60064697 4.00219011]
[846.85968018 6.77780104]
[832.11871338 9.55341244]
[826.12707520 13.88032913]
[817.13775635 12.25889874]
[802.35705566 14.81473064]
[791.13427734 24.60747337]
[776.21752930 19.33471107]
[761.43688965 21.89054298]
[746.65625000 24.44637489]
[731.89501953 27.11217117]
[717.15405273 29.88778114]
[702.41308594 32.66339111]
[687.67211914 35.43900299]
[672.93115234 38.21461487]
[670.65118408 40.90422058]
[666.95520020 42.62311554]
[662.31359863 42.71780014]
[657.47088623 40.76957703]
[642.62072754 42.88420105]
[627.77050781 44.99882507]
[612.92034912 47.11344910]
[604.21142578 59.14218903]
[589.18133545 61.49826431]
[576.62353516 52.28200531]
[561.77331543 54.39662933]
[546.92315674 56.51125336]
[532.07293701 58.62587738]
[517.22271729 60.74050140]
[508.51382446 72.76924133]
[493.48373413 75.12531281]
[480.92593384 65.90905762]
[466.07574463 68.02368164]
[451.22555542 70.13830566]
[436.37536621 72.25292969]
[431.00061035 80.94345093]
[421.53073120 85.33316040]
[410.99102783 83.75356293]
[402.89709473 76.48741913]
[387.99050903 78.15896606]
[373.09680176 79.94142914]
[358.21676636 81.83471680]
[349.32974243 93.73246002]
[334.26623535 95.86450195]
[321.84704590 86.46229553]
[306.96701050 88.35559082]
[301.65951538 100.60600281]
[290.90563965 108.69908905]
[277.44998169 110.43544006]
[264.79351807 105.25545502]
[256.28259277 94.41316986]
[241.37600708 96.08471680]
[226.46943665 97.75625610]
[222.89015198 108.32221222]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 96]
[6 95]
[7 94]
[8 93]
[10 53]
[11 52]
[12 51]
[13 50]
[14 48]
[15 47]
[16 46]
[17 45]
[18 44]
[19 43]
[20 41]
[21 40]
[22 39]
[23 38]
[24 37]
[25 36]
[26 35]
[57 69]
[58 68]
[59 67]
[75 90]
[76 89]
[77 88]
[78 87]
[79 86]
[100 209]
[101 208]
[102 207]
[106 202]
[107 201]
[110 198]
[111 197]
[113 196]
[114 195]
[116 191]
[117 190]
[118 189]
[119 188]
[122 185]
[123 184]
[124 183]
[125 182]
[126 181]
[129 178]
[130 177]
[131 176]
[132 175]
[133 171]
[134 170]
[135 169]
[136 168]
[137 167]
[139 166]
[140 165]
[141 164]
[143 162]
[144 161]
[145 159]
[146 158]
[147 157]
[149 155]
[150 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
