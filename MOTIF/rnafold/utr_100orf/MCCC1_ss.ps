%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:58:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUUCUUGGAUCAGCCCAAAGGUAGGCUCAGGCUCCGACGGUGGCCGGCGGGGGUCACGAGGCUUCGUAGUGGAGGAACGGGUUUGGCGUGUGGGACGCAGCUGCCUCUGUACUGGGGAGUCACGGAGUGGCCGGGCUCCAGGGACAUGGCGGCGGCCUCUGCGGUGUCGGUGCUGCUGGUGGCGGCGGAGAGGAACCGGUGGCAUCGUCUCCCGAGCCUGCUCCUGCCGCCGAGGACAUGGGUGU\
) } def
/len { sequence length } bind def

/coor [
[80.68357086 576.08831787]
[80.68357086 561.08831787]
[80.68357086 546.08831787]
[80.68357086 531.08831787]
[80.68357086 516.08831787]
[80.68357086 501.08834839]
[72.94627380 488.36108398]
[80.68357086 474.56091309]
[80.68357086 459.56091309]
[68.29118347 448.17517090]
[67.97328949 431.01129150]
[80.41605377 418.69860840]
[80.22604370 403.69979858]
[72.32814789 391.07156372]
[79.89001465 377.17449951]
[79.70000458 362.17568970]
[67.60172272 371.04315186]
[53.09212494 367.23901367]
[46.90081406 353.57635498]
[53.60616302 340.15853882]
[68.24967957 336.90777588]
[80.00305939 346.22866821]
[80.76279449 331.24789429]
[81.52252960 316.26715088]
[82.28227234 301.28640747]
[83.04200745 286.30566406]
[83.80174255 271.32492065]
[73.65716553 260.47949219]
[74.21424103 245.27606201]
[85.65869141 234.70903015]
[86.41842651 219.72828674]
[87.17816925 204.74754333]
[87.93790436 189.76678467]
[88.69763947 174.78604126]
[89.45738220 159.80529785]
[90.21711731 144.82455444]
[83.62596130 142.85832214]
[77.40280914 139.92883301]
[71.68754578 136.10192871]
[66.60861206 131.46362305]
[62.28016281 126.11816406]
[58.79948044 120.18569183]
[44.43165588 124.49447632]
[30.06383514 128.80326843]
[15.69601250 133.11206055]
[1.32818937 137.42085266]
[-13.03963375 141.72964478]
[-20.31222153 155.76121521]
[-35.40159225 160.46083069]
[-49.35549164 153.04029846]
[-53.89531326 137.90208435]
[-46.32766724 124.02742004]
[-31.14230156 119.64790344]
[-17.34842300 127.36181641]
[-2.98060060 123.05302429]
[11.38722229 118.74423218]
[25.75504494 114.43544769]
[40.12286758 110.12665558]
[54.49068832 105.81786346]
[54.43976974 94.59535217]
[57.11489868 83.69622803]
[62.35601807 73.77262115]
[51.61590958 63.30122757]
[40.87580109 52.82983398]
[30.13569260 42.35844040]
[19.39558411 31.88704681]
[8.65547657 21.41565514]
[-6.62690115 17.32181549]
[-10.33836555 2.89703488]
[-21.07847404 -7.57435799]
[-31.81858253 -18.04575157]
[-42.55869293 -28.51714325]
[-53.29880142 -38.98853683]
[-68.58117676 -43.08237457]
[-72.29264069 -57.50715637]
[-83.03275299 -67.97854614]
[-87.22198486 -68.89125061]
[-90.57608795 -70.87889862]
[-92.86135101 -73.55139160]
[-93.99313354 -76.48284149]
[-94.03468323 -79.26280975]
[-104.23063660 -90.26473999]
[-114.42658997 -101.26667023]
[-124.62255096 -112.26860046]
[-141.40037537 -110.03437042]
[-156.05398560 -118.16792297]
[-162.89535522 -133.28514099]
[-159.40466309 -149.33682251]
[-169.73916626 -160.20872498]
[-180.07366943 -171.08061218]
[-190.40817261 -181.95249939]
[-206.34510803 -183.79469299]
[-214.71878052 -197.47903442]
[-209.10562134 -212.50807190]
[-193.81156921 -217.35281372]
[-180.56892395 -208.29679871]
[-179.53628540 -192.28700256]
[-169.20178223 -181.41511536]
[-158.86727905 -170.54322815]
[-148.53277588 -159.67132568]
[-135.53126526 -162.64535522]
[-122.65291595 -158.78153992]
[-113.28643036 -148.98510742]
[-109.95127106 -135.73663330]
[-113.62062073 -122.46456146]
[-103.42465973 -111.46262360]
[-93.22870636 -100.46069336]
[-83.03275299 -89.45876312]
[-72.56135559 -78.71865845]
[-61.82124710 -68.24726105]
[-47.30707550 -64.90241241]
[-42.82740784 -49.72864532]
[-32.08729935 -39.25725174]
[-21.34718895 -28.78586006]
[-10.60708141 -18.31446648]
[0.13302732 -7.84307384]
[14.64720058 -4.49821901]
[19.12686920 10.67554569]
[29.86697769 21.14693832]
[40.60708618 31.61833191]
[51.34719467 42.08972549]
[62.08730316 52.56111908]
[72.82741547 63.03250885]
[82.25711823 57.69001389]
[92.67693329 54.70852661]
[103.50538635 54.25443268]
[107.08093262 39.68681335]
[110.65647125 25.11919403]
[114.23200989 10.55157566]
[117.80755615 -4.01604223]
[109.40489197 -17.40151215]
[113.00966644 -32.78920746]
[126.48322296 -41.04988098]
[141.83195496 -37.28262329]
[149.94970703 -23.72247696]
[146.02038574 -8.41444206]
[132.37516785 -0.44050092]
[128.79963684 14.12711716]
[125.22409058 28.69473648]
[121.64855194 43.26235580]
[118.07300568 57.82997131]
[133.05238342 68.18043518]
[142.82624817 83.54225159]
[157.51919556 80.52277374]
[172.21214294 77.50329590]
[186.90509033 74.48381805]
[201.59803772 71.46434021]
[216.27157593 68.35186005]
[230.92509460 65.14649963]
[245.57861328 61.94114685]
[257.40664673 51.43360138]
[271.49331665 56.27248383]
[286.14682007 53.06712723]
[297.97485352 42.55958176]
[312.06152344 47.39846420]
[326.71505737 44.19310760]
[341.36856079 40.98775101]
[355.98031616 37.59703064]
[370.54794312 34.02149200]
[385.11553955 30.44594955]
[399.68316650 26.87040710]
[414.25079346 23.29486656]
[425.80883789 12.49105740]
[440.01358032 16.97153473]
[454.58117676 13.39599323]
[466.13922119 2.59218454]
[480.34396362 7.07266140]
[494.91159058 3.49711990]
[509.47921753 -0.07842153]
[524.04681396 -3.65396285]
[538.61444092 -7.22950411]
[550.17248535 -18.03331184]
[564.37719727 -13.55283642]
[578.94482422 -17.12837791]
[590.40209961 -28.86135483]
[606.22271729 -24.54392433]
[610.13177490 -8.61748886]
[598.10797119 2.53419948]
[582.52038574 -2.56075907]
[567.95275879 1.01478231]
[557.43670654 11.56284428]
[542.19000244 7.33811378]
[527.62237549 10.91365528]
[513.05474854 14.48919678]
[498.48712158 18.06473732]
[483.91949463 21.64027977]
[473.40344238 32.18834305]
[458.15673828 27.96361160]
[443.58911133 31.53915215]
[433.07302856 42.08721542]
[417.82632446 37.86248398]
[403.25872803 41.43802643]
[388.69110107 45.01356888]
[374.12347412 48.58910751]
[359.55584717 52.16464996]
[356.36914062 55.69228745]
[350.94125366 57.27016830]
[344.57394409 55.64127350]
[329.92041016 58.84663010]
[315.26687622 62.05198669]
[304.48699951 72.33026123]
[289.35220337 67.72064972]
[274.69866943 70.92600250]
[263.91876221 81.20428467]
[248.78396606 76.59466553]
[234.13044739 79.80002594]
[219.47692871 83.00537872]
[213.62850952 87.49404907]
[204.61752319 86.15728760]
[189.92457581 89.17676544]
[175.23162842 92.19624329]
[160.53866577 95.21572113]
[145.84571838 98.23519897]
[141.10850525 120.37242126]
[126.36246490 137.54949951]
[105.19786835 145.58428955]
[104.43812561 160.56503296]
[103.67839050 175.54577637]
[102.91865540 190.52653503]
[102.15891266 205.50727844]
[101.39917755 220.48802185]
[100.63944244 235.46876526]
[110.95612335 247.13940430]
[109.97223663 262.32119751]
[98.78249359 272.08465576]
[98.02275848 287.06539917]
[97.26301575 302.04614258]
[96.50328064 317.02688599]
[95.74354553 332.00762939]
[94.98380280 346.98840332]
[94.69879913 361.98568726]
[94.88880920 376.98446655]
[102.80030060 390.68554688]
[95.22484589 403.50979614]
[95.41485596 418.50860596]
[106.06723022 426.72747803]
[109.99126434 439.39358521]
[105.97071838 451.82519531]
[95.68357086 459.56091309]
[95.68357086 474.56091309]
[103.42087555 488.36108398]
[95.68357086 501.08834839]
[95.68357086 516.08831787]
[95.68357086 531.08831787]
[95.68357086 546.08831787]
[95.68357086 561.08831787]
[95.68357086 576.08831787]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 247]
[2 246]
[3 245]
[4 244]
[5 243]
[6 242]
[8 240]
[9 239]
[12 235]
[13 234]
[15 232]
[16 231]
[22 230]
[23 229]
[24 228]
[25 227]
[26 226]
[27 225]
[30 222]
[31 221]
[32 220]
[33 219]
[34 218]
[35 217]
[36 216]
[42 59]
[43 58]
[44 57]
[45 56]
[46 55]
[47 54]
[62 123]
[63 122]
[64 121]
[65 120]
[66 119]
[67 118]
[69 116]
[70 115]
[71 114]
[72 113]
[73 112]
[75 110]
[76 109]
[81 108]
[82 107]
[83 106]
[84 105]
[88 100]
[89 99]
[90 98]
[91 97]
[126 141]
[127 140]
[128 139]
[129 138]
[130 137]
[143 213]
[144 212]
[145 211]
[146 210]
[147 209]
[148 207]
[149 206]
[150 205]
[152 203]
[153 202]
[155 200]
[156 199]
[157 198]
[158 195]
[159 194]
[160 193]
[161 192]
[162 191]
[164 189]
[165 188]
[167 186]
[168 185]
[169 184]
[170 183]
[171 182]
[173 180]
[174 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
