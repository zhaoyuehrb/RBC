%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:07:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUCCUGACAGCACCUCCCGGACCGGACAUAACGGUCCCCGCGCGGCUCCCCGAACCGGAAGUGGAGGUGAGCUGUCGCGGGCGGCGCCCGGCCUUGCUCAACGCCCAGCAGUCCCCACCGUCGCUGCCGCCGCCACCGCCCUCGGCCGCUGCCGAGGCCUCCUGCAGCCAUCAUGUCCGCCAGCGCCGUCUACGUGCUGGACCUGAAGGGCAAGGUGCUCAUCUGCCGGAACUACCGUGGCGACGUGGACAUGU\
CAGAGGUGGAGCACUUCA\
) } def
/len { sequence length } bind def

/coor [
[97.27441406 215.13888550]
[89.92477417 202.06285095]
[92.60455322 187.30416870]
[104.08200073 177.64662170]
[119.08153534 177.52928162]
[130.70802307 187.00497437]
[128.82119751 172.12411499]
[126.93437195 157.24325562]
[125.04754639 142.36239624]
[123.16072083 127.48154449]
[115.93132782 125.48508453]
[111.93840790 139.94387817]
[107.94548798 154.40266418]
[108.61598206 169.38766479]
[94.57157898 174.65594482]
[85.22120667 162.92689514]
[93.48669434 150.40974426]
[97.47962189 135.95095825]
[101.47254181 121.49216461]
[94.24314117 119.49570465]
[84.98715210 131.29937744]
[75.73116302 143.10304260]
[66.47517395 154.90672302]
[57.21918869 166.71038818]
[47.96319962 178.51406860]
[51.36397552 193.77737427]
[44.11221695 207.63183594]
[29.63197517 213.53578186]
[14.76038074 208.70155334]
[6.51934528 195.41174316]
[8.80003452 179.94136047]
[20.52557564 169.59507751]
[36.15952682 169.25807190]
[45.41551590 157.45440674]
[54.67150497 145.65072632]
[63.92749405 133.84706116]
[73.18348694 122.04338837]
[82.43947601 110.23971558]
[74.59466553 97.45460510]
[59.87870407 100.35987091]
[45.16274643 103.26514435]
[30.44678879 106.17041016]
[15.73083115 109.07567596]
[1.03177023 112.06525421]
[-13.64991093 115.13906097]
[-28.33159065 118.21286011]
[-43.01327133 121.28665924]
[-57.69495392 124.36045837]
[-72.37663269 127.43425751]
[-84.29842377 137.83529663]
[-98.34113312 132.87026978]
[-113.02281189 135.94406128]
[-118.41187286 145.33789062]
[-127.87631226 150.13504028]
[-138.20317078 148.97627258]
[-146.03163147 142.48039246]
[-160.77993774 145.21675110]
[-175.52822876 147.95309448]
[-187.63793945 159.01145935]
[-203.18566895 153.79608154]
[-206.17726135 137.67210388]
[-193.53521729 127.22650146]
[-178.26458740 133.20480347]
[-163.51628113 130.46844482]
[-148.76799011 127.73209381]
[-134.98193359 114.14312744]
[-116.09661102 121.26238251]
[-101.41493225 118.18858337]
[-90.54327393 108.00740814]
[-75.45043182 112.75257874]
[-60.76875305 109.67877960]
[-46.08707428 106.60498047]
[-31.40539169 103.53117371]
[-16.72371101 100.45737457]
[-2.04203010 97.38357544]
[3.83870173 92.95372009]
[12.82556438 94.35971832]
[27.54152298 91.45445251]
[42.25748062 88.54918671]
[56.97343826 85.64391327]
[71.68939972 82.73864746]
[76.17720032 68.42572784]
[65.75457001 57.63829041]
[55.33194733 46.85084534]
[44.90932465 36.06340408]
[34.48669815 25.27596283]
[24.06407547 14.48852158]
[8.79202080 16.50608063]
[-4.58332729 9.22916889]
[-11.03277397 -4.36747217]
[-8.27231693 -18.97972298]
[-18.69494247 -29.76716423]
[-34.26565933 -30.20370483]
[-44.68201065 -41.29217911]
[-44.16987991 -56.13378525]
[-54.59250259 -66.92122650]
[-65.01512909 -77.70867157]
[-75.43775177 -88.49610901]
[-85.86037445 -99.28355408]
[-101.20653534 -96.98680878]
[-114.95626068 -104.17880249]
[-121.82249451 -118.09405518]
[-119.16503906 -133.38188171]
[-108.00573730 -144.16378784]
[-92.63556671 -146.29393005]
[-78.96467590 -138.95320129]
[-72.24979401 -124.96427155]
[-75.07293701 -109.70617676]
[-64.65030670 -98.91873932]
[-54.22768402 -88.13129425]
[-43.80506134 -77.34384918]
[-33.38243484 -66.55641174]
[-18.53199577 -66.55783081]
[-7.80830145 -55.76630783]
[-7.90750027 -40.18978882]
[2.51512432 -29.40234756]
[17.21366501 -31.65865326]
[30.58046532 -24.74542999]
[37.39309311 -11.12773895]
[34.85151672 4.06589746]
[45.27413940 14.85333920]
[55.69676590 25.64078140]
[66.11939240 36.42822266]
[76.54201508 47.21566391]
[86.96463776 58.00310516]
[140.12429810 98.73755646]
[154.06333923 93.19650269]
[167.97038269 87.57563782]
[181.84497070 81.87512970]
[195.71955872 76.17462921]
[209.59414673 70.47412109]
[223.40246582 64.61491394]
[237.14270020 58.59777069]
[250.88293457 52.58063126]
[264.62316895 46.56349182]
[278.36340332 40.54634857]
[292.10363770 34.52920914]
[292.49765015 15.82452393]
[301.32278442 -0.57798064]
[316.57827759 -11.11898327]
[334.87759399 -13.55020523]
[339.11859131 -27.93818665]
[343.35955811 -42.32616806]
[347.60055542 -56.71414948]
[351.84155273 -71.10213470]
[356.08251953 -85.49011230]
[360.32351685 -99.87809753]
[355.95001221 -115.68330383]
[367.64230347 -127.18211365]
[383.37234497 -122.54553986]
[386.95843506 -106.54329681]
[374.71151733 -95.63710785]
[370.47052002 -81.24913025]
[366.22952271 -66.86114502]
[361.98852539 -52.47316360]
[357.74755859 -38.08518219]
[353.50656128 -23.69719887]
[349.26556396 -9.30921745]
[356.67819214 -4.32210875]
[362.77459717 2.20878005]
[367.24035645 9.94668865]
[381.88583374 6.70475817]
[396.53131104 3.46282840]
[408.33303833 -7.07421255]
[422.43176270 -2.27051258]
[437.07723999 -5.51244259]
[451.72271729 -8.75437260]
[466.36819458 -11.99630260]
[481.81954956 -28.24974632]
[502.13134766 -20.74194908]
[516.61279297 -24.65191650]
[531.09423828 -28.56188202]
[545.57568359 -32.47184753]
[556.88195801 -43.53887939]
[571.18603516 -39.38660812]
[585.66748047 -43.29657364]
[600.14892578 -47.20653915]
[614.63037109 -51.11650467]
[629.11181641 -55.02647400]
[644.41552734 -73.30895996]
[666.48376465 -66.45844269]
[680.66217041 -71.35460663]
[694.84063721 -76.25077820]
[709.01904297 -81.14694214]
[723.19744873 -86.04311371]
[737.37585449 -90.93927765]
[751.55426025 -95.83544922]
[756.97595215 -110.50308990]
[770.58288574 -118.20925903]
[785.95031738 -115.31532288]
[795.82226562 -103.18772125]
[795.53747559 -87.55273438]
[785.23040771 -75.79271698]
[769.76770020 -73.46040344]
[756.45043945 -81.65702820]
[742.27203369 -76.76086426]
[728.09362793 -71.86469269]
[713.91522217 -66.96852875]
[699.73675537 -62.07235718]
[685.55834961 -57.17618942]
[671.37994385 -52.28002167]
[670.29260254 -45.99505997]
[667.31066895 -40.29866028]
[662.69244385 -35.75166702]
[656.85864258 -32.81250763]
[650.35467529 -31.79108429]
[643.79931641 -32.81635666]
[637.82604980 -35.82102966]
[633.02178955 -40.54502869]
[618.54034424 -36.63506317]
[604.05889893 -32.72509766]
[589.57745361 -28.81513214]
[575.09600830 -24.90516663]
[564.82556152 -14.11780167]
[549.48565674 -17.99040604]
[535.00421143 -14.08043957]
[520.52276611 -10.17047405]
[506.04132080 -6.26050806]
[503.68734741 1.17228568]
[498.54251099 7.15451431]
[491.37777710 10.67710686]
[483.31176758 11.10817528]
[475.63647461 8.30509567]
[469.61010742 2.64917111]
[454.96463013 5.89110088]
[440.31918335 9.13303089]
[425.67370605 12.37496090]
[414.91949463 22.68011665]
[399.77322388 18.10830116]
[385.12774658 21.35023117]
[370.48226929 24.59216118]
[368.33093262 38.79345322]
[361.21316528 51.31158829]
[350.05221558 60.46931458]
[336.31509399 65.02873230]
[321.81964111 64.35861206]
[308.49417114 58.52159882]
[298.12078857 48.26944351]
[284.38055420 54.28658295]
[270.64031982 60.30372238]
[256.90008545 66.32086182]
[243.15985107 72.33800507]
[229.41961670 78.35514832]
[226.88758850 82.36457062]
[221.82702637 84.84586334]
[215.29466248 84.34870911]
[201.42005920 90.04921722]
[187.54547119 95.74971771]
[173.67088318 101.45022583]
[168.69694519 106.87853241]
[159.60438538 107.13554382]
[145.66535950 112.67659760]
[138.04158020 125.59471893]
[139.92840576 140.47558594]
[141.81523132 155.35643005]
[143.70205688 170.23728943]
[145.58886719 185.11814880]
[148.07118225 199.91133118]
[151.14498901 214.59300232]
[154.21878052 229.27468872]
[157.29258728 243.95637512]
[160.36637878 258.63806152]
[163.44018555 273.31973267]
[172.60397339 287.58370972]
[161.43420410 300.33804321]
[146.08622742 293.13555908]
[148.75849915 276.39352417]
[145.68470764 261.71185303]
[142.61090088 247.03016663]
[139.53710938 232.34849548]
[136.46330261 217.66680908]
[133.38949585 202.98512268]
[125.49180603 215.73762512]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 257]
[7 256]
[8 255]
[9 254]
[10 253]
[20 38]
[21 37]
[22 36]
[23 35]
[24 34]
[25 33]
[39 81]
[40 80]
[41 79]
[42 78]
[43 77]
[44 75]
[45 74]
[46 73]
[47 72]
[48 71]
[49 70]
[51 68]
[52 67]
[56 65]
[57 64]
[58 63]
[82 125]
[83 124]
[84 123]
[85 122]
[86 121]
[87 120]
[91 116]
[92 115]
[95 112]
[96 111]
[97 110]
[98 109]
[99 108]
[126 252]
[127 251]
[128 249]
[129 248]
[130 247]
[131 246]
[132 243]
[133 242]
[134 241]
[135 240]
[136 239]
[137 238]
[141 158]
[142 157]
[143 156]
[144 155]
[145 154]
[146 153]
[147 152]
[161 231]
[162 230]
[163 229]
[165 227]
[166 226]
[167 225]
[168 224]
[170 218]
[171 217]
[172 216]
[173 215]
[175 213]
[176 212]
[177 211]
[178 210]
[179 209]
[181 201]
[182 200]
[183 199]
[184 198]
[185 197]
[186 196]
[187 195]
[258 272]
[259 271]
[260 270]
[261 269]
[262 268]
[263 267]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
