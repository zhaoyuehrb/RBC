%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:09:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCGCCUCUGGGCCCGCCUUCGGGGCCCGGAUCUCAAACAGUCGGGAAGAAGCACCGUGGCUGCUAUUAUCUGCUCUCCGCGCCUGACCCCUCCCAGGACUCGUGAUGCCAAGGCCGCUGCGAGCGGCUACGAAGAGUCGGGGUUGAGCCCCAGCUGAGCCGAGGGCUCGCACUCUUCUGGUCUCCCAGGCCCAACCCACCUGAAGAAAUGAGUGGUGGAUUGGCUCCAAGUAAGAGCACAGUGUAUGUAUCCA\
ACUUGCCUUUUUCCCUGACAAACAAUGACUUGUACCGGAUAUUUUCCAAGUAUG\
) } def
/len { sequence length } bind def

/coor [
[13.04596519 915.06921387]
[16.58456421 929.64587402]
[3.81483364 937.51568604]
[-7.61585283 927.80285645]
[-1.91072822 913.93023682]
[-0.77173156 898.97351074]
[0.36726516 884.01684570]
[-7.11108160 883.44732666]
[-13.02641964 897.23168945]
[-18.94175720 911.01605225]
[-24.85709572 924.80047607]
[-30.77243233 938.58483887]
[-36.68777084 952.36920166]
[-42.60310745 966.15356445]
[-48.51844788 979.93792725]
[-54.43378448 993.72229004]
[-47.22837448 1007.60089111]
[-50.68015671 1022.85278320]
[-63.15930176 1032.27636719]
[-78.77353668 1031.42224121]
[-90.15030670 1020.69366455]
[-91.91783905 1005.15625000]
[-83.24156189 992.14642334]
[-68.21815491 987.80694580]
[-62.30281448 974.02258301]
[-56.38747406 960.23822021]
[-50.47213745 946.45385742]
[-44.55680084 932.66949463]
[-38.64146423 918.88513184]
[-32.72612381 905.10076904]
[-26.81078720 891.31634521]
[-20.89544868 877.53198242]
[-35.70736313 866.21368408]
[-47.02125549 851.58569336]
[-54.13711929 834.67791748]
[-56.64703369 816.65625000]
[-54.45787811 798.74243164]
[-47.79253006 782.13128662]
[-37.16980362 767.91088867]
[-23.36486435 756.99145508]
[-7.35300207 750.04711914]
[9.75907516 747.47473145]
[10.67058849 732.50244141]
[11.58210182 717.53015137]
[12.41773796 702.55346680]
[13.17747498 687.57269287]
[13.93721294 672.59197998]
[14.69694996 657.61120605]
[15.45668793 642.63043213]
[16.21642494 627.64971924]
[16.97616386 612.66894531]
[17.73590088 597.68823242]
[18.49563789 582.70745850]
[19.17945671 567.72308350]
[19.78734207 552.73541260]
[8.00703049 543.66003418]
[3.77954721 529.21728516]
[8.92726612 514.88708496]
[21.67331123 506.23583984]
[22.28119469 491.24813843]
[22.88908005 476.26046753]
[15.67391491 463.23010254]
[23.96411896 449.75482178]
[24.57200241 434.76715088]
[25.17988586 419.77947998]
[25.71181870 404.78890991]
[26.16778564 389.79583740]
[26.62375450 374.80276489]
[13.88521004 367.08297729]
[6.67311907 353.93606567]
[7.01218700 338.84460449]
[14.91146564 325.86392212]
[28.33504868 318.53216553]
[28.79101562 303.53909302]
[29.24698257 288.54605103]
[29.70294952 273.55297852]
[30.15891838 258.55990601]
[30.61488533 243.56683350]
[10.37538433 229.67784119]
[4.13931561 205.93646240]
[-10.12653160 201.30119324]
[-24.39237976 196.66593933]
[-38.65822601 192.03068542]
[-52.99288559 187.61282349]
[-67.39304352 183.41336060]
[-81.79319763 179.21389771]
[-96.19335938 175.01443481]
[-108.38098907 184.61866760]
[-123.88749695 185.19128418]
[-136.75030518 176.51213074]
[-142.02340698 161.91850281]
[-137.67918396 147.02194214]
[-125.38807678 137.55049133]
[-109.87626648 137.14611816]
[-97.10836792 145.96430969]
[-91.99389648 160.61427307]
[-77.59373474 164.81373596]
[-63.19358063 169.01319885]
[-48.79342270 173.21266174]
[-45.57936859 171.88565063]
[-41.57160950 172.01869202]
[-37.44950867 173.96441650]
[-34.02297211 177.76484680]
[-19.75712395 182.40010071]
[-5.49127722 187.03535461]
[8.77457047 191.67060852]
[16.85979843 181.86260986]
[27.97609329 175.50544739]
[40.71668625 173.48086548]
[44.47647476 158.95970154]
[48.23626328 144.43855286]
[51.99604797 129.91738892]
[55.75583649 115.39624023]
[52.66194916 100.71877289]
[43.36062241 88.95079803]
[34.05929947 77.18281555]
[24.75797653 65.41483307]
[15.45665264 53.64685440]
[6.15532827 41.87887192]
[-3.14599586 30.11089134]
[-17.71120262 21.43384933]
[-13.40531349 5.03581095]
[3.54387188 4.63399601]
[8.62198448 20.80956841]
[17.92330933 32.57754898]
[27.22463226 44.34552765]
[36.52595520 56.11351013]
[45.82728195 67.88149261]
[55.12860489 79.64947510]
[64.42993164 91.41744995]
[71.53900146 89.02765656]
[85.75714111 84.24806976]
[92.86621094 81.85827637]
[93.17021942 66.86135864]
[93.47422028 51.86444092]
[93.77822876 36.86751938]
[94.08222961 21.87060165]
[94.38623047 6.87368298]
[94.69023895 -8.12323666]
[73.35443115 -5.34430361]
[51.54824066 -23.05167389]
[49.12668610 -37.85491943]
[46.70512772 -52.65816498]
[44.28356934 -67.46141052]
[41.86201477 -82.26465607]
[33.33795929 -96.91992188]
[45.06079865 -109.16783142]
[60.07526398 -101.29368591]
[56.66526031 -84.68621063]
[59.08681488 -69.88296509]
[61.50837326 -55.07971954]
[63.92992783 -40.27647400]
[66.35148621 -25.47323036]
[81.35195923 -25.39722824]
[96.35110474 -25.32121849]
[98.92255402 -40.09916306]
[97.31463623 -49.03700256]
[101.59566498 -55.01351547]
[104.31674194 -69.76464081]
[107.03781891 -84.51576996]
[109.75889587 -99.26689911]
[112.47997284 -114.01802063]
[109.40724945 -130.69119263]
[124.57821655 -138.25942993]
[136.05041504 -125.77644348]
[127.23109436 -111.29694366]
[124.51001740 -96.54582214]
[121.78894043 -81.79469299]
[119.06787109 -67.04356384]
[116.34679413 -52.29243851]
[113.70049286 -37.52771378]
[111.12904358 -22.74976921]
[109.68715668 -7.81923199]
[109.38315582 7.17768717]
[109.07914734 22.17460632]
[108.77514648 37.17152405]
[108.47113800 52.16844559]
[108.16713715 67.16536713]
[107.86312866 82.16228485]
[114.94761658 84.62399292]
[136.20108032 92.00914001]
[145.26199341 80.05506897]
[154.32290649 68.10099030]
[163.38381958 56.14691925]
[172.44473267 44.19284439]
[177.19396973 27.91767883]
[194.14781189 27.97590256]
[198.78515625 44.28330612]
[184.39880371 53.25375748]
[175.33789062 65.20783234]
[166.27697754 77.16190338]
[157.21606445 89.11597443]
[148.15515137 101.07005310]
[152.98252869 106.80995178]
[164.46249390 97.15539551]
[174.11685181 108.63552094]
[162.63726807 118.28975677]
[167.46464539 124.02965546]
[180.79507446 117.15216064]
[194.12548828 110.27467346]
[207.45590210 103.39717865]
[220.78633118 96.51969147]
[219.87013245 81.31835938]
[225.22216797 67.06088257]
[235.91514587 56.21744919]
[250.09646606 50.66675949]
[265.30911255 51.37049484]
[278.91741943 58.20673370]
[288.56362915 69.99105072]
[292.57650757 84.68175507]
[290.26080322 99.73357391]
[282.01773071 112.53870392]
[269.27542114 120.87857056]
[254.24156189 123.30825043]
[239.52088928 119.40677643]
[227.66381836 109.85010529]
[214.33340454 116.72760010]
[201.00297546 123.60509491]
[187.67256165 130.48258972]
[174.34213257 137.36007690]
[103.16439056 159.19692993]
[70.27699280 119.15602112]
[66.51720428 133.67718506]
[62.75741959 148.19833374]
[58.99763107 162.71949768]
[55.23784256 177.24064636]
[63.37060165 182.93261719]
[69.62051392 190.61363220]
[73.52098083 199.68920898]
[74.78655243 209.46157837]
[73.33383179 219.18336487]
[69.28678131 228.11470032]
[62.96632004 235.57955933]
[54.86484528 241.01687622]
[45.60795212 244.02279663]
[45.15198517 259.01586914]
[44.69601822 274.00894165]
[44.24005127 289.00201416]
[43.78408432 303.99508667]
[43.32811737 318.98812866]
[56.28136063 327.12207031]
[63.37723541 340.55877686]
[62.79860687 355.64294434]
[54.80093765 368.32730103]
[41.61682129 375.25872803]
[41.16085434 390.25180054]
[40.70488739 405.24487305]
[43.56047821 413.86553955]
[40.16756439 420.38735962]
[39.55968094 435.37503052]
[38.95179749 450.36270142]
[46.12348175 464.46508789]
[37.87675858 476.86834717]
[37.26887131 491.85604858]
[36.66098785 506.84371948]
[48.66455078 516.49877930]
[52.63483429 531.19879150]
[47.25159836 545.25170898]
[34.77501678 553.34326172]
[34.16713333 568.33093262]
[36.93521881 576.98010254]
[33.47638702 583.46722412]
[32.71664810 598.44793701]
[31.95691109 613.42871094]
[31.19717216 628.40942383]
[30.43743515 643.39019775]
[29.67769814 658.37097168]
[28.91796112 673.35168457]
[28.15822220 688.33245850]
[27.39848518 703.31317139]
[30.07877541 711.98999023]
[26.55438042 718.44165039]
[25.64286804 733.41394043]
[24.73135376 748.38623047]
[37.80625153 751.61767578]
[50.04535675 757.44915771]
[60.93391418 765.67486572]
[70.00611115 775.98773193]
[76.86495972 787.99066162]
[81.19960022 801.21166992]
[82.79920959 815.12249756]
[81.56302643 829.15960693]
[77.50587463 842.74737549]
[70.75900269 855.32116699]
[61.56615829 866.35113525]
[50.27487946 875.36444092]
[37.32346344 881.96557617]
[41.08325195 896.48669434]
[44.84303665 911.00787354]
[48.60282516 925.52899170]
[61.81601715 938.38879395]
[56.41190720 955.10809326]
[60.31866074 969.59039307]
[64.22541046 984.07275391]
[77.35983276 993.28503418]
[78.20268250 1009.30590820]
[66.10740662 1019.84558105]
[50.35245514 1016.81878662]
[43.02368927 1002.54754639]
[49.74310303 987.97949219]
[45.83634949 973.49719238]
[41.92959976 959.01483154]
[31.62640572 952.73919678]
[28.23228264 940.74621582]
[34.08166885 929.28881836]
[30.32188225 914.76763916]
[26.56209373 900.24652100]
[22.80230522 885.72534180]
[15.32395840 885.15582275]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 32]
[9 31]
[10 30]
[11 29]
[12 28]
[13 27]
[14 26]
[15 25]
[16 24]
[42 274]
[43 273]
[44 272]
[45 270]
[46 269]
[47 268]
[48 267]
[49 266]
[50 265]
[51 264]
[52 263]
[53 262]
[54 260]
[55 259]
[59 255]
[60 254]
[61 253]
[63 251]
[64 250]
[65 249]
[66 247]
[67 246]
[68 245]
[73 240]
[74 239]
[75 238]
[76 237]
[77 236]
[78 235]
[80 106]
[81 105]
[82 104]
[83 103]
[84 99]
[85 98]
[86 97]
[87 96]
[109 226]
[110 225]
[111 224]
[112 223]
[113 222]
[114 130]
[115 129]
[116 128]
[117 127]
[118 126]
[119 125]
[120 124]
[133 179]
[134 178]
[135 177]
[136 176]
[137 175]
[138 174]
[139 173]
[141 153]
[142 152]
[143 151]
[144 150]
[145 149]
[155 172]
[156 171]
[158 170]
[159 169]
[160 168]
[161 167]
[162 166]
[181 193]
[182 192]
[183 191]
[184 190]
[185 189]
[198 220]
[199 219]
[200 218]
[201 217]
[202 216]
[287 308]
[288 307]
[289 306]
[290 305]
[292 302]
[293 301]
[294 300]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
