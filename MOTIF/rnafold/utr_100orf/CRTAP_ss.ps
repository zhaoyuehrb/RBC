%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:27:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCUGGCGUCCCCGCCCCGAAAGCACUGGGCCCGCCGCGUCGCACCGUCCUCUUUCCUUUCCUUCUCCCUCCCCUUUUCCCUUCCUUCGUCCCUUCCUUCCUUCCUUUCGCCGGGCGCGAUGGAGCCGGGGCGCCGGGGGGCCGCGGCGCUGCUAGCGCUGCUGUGCGUGGCCUGCGCGCUGCGCGCCGGGCGCGCCCAAUACGAACGCUACAGCUUCC\
) } def
/len { sequence length } bind def

/coor [
[60.89474487 187.43106079]
[70.82227325 174.82852173]
[70.39587402 159.83459473]
[69.96946716 144.84065247]
[69.54306793 129.84671021]
[62.10470200 116.82093811]
[49.40789413 108.83401489]
[36.71108627 100.84708405]
[20.91005516 100.04828644]
[14.25682354 86.72222900]
[1.56001377 78.73529816]
[-11.13679600 70.74837494]
[-23.83360481 62.76144409]
[-36.64266586 54.95580673]
[-49.56138611 47.33303833]
[-62.48011017 39.71026611]
[-75.39883423 32.08749771]
[-88.31755066 24.46472740]
[-101.23627472 16.84195900]
[-116.20559692 15.88307571]
[-129.99131775 21.79525375]
[-143.77703857 27.70742989]
[-157.56275940 33.61960602]
[-171.34849548 39.53178406]
[-173.01928711 57.03210068]
[-183.27479553 71.20078278]
[-199.21392822 78.18376160]
[-216.40518188 76.13818359]
[-230.11874390 65.71780396]
[-243.73083496 72.01947784]
[-257.34292603 78.32115173]
[-270.95501709 84.62282562]
[-276.68490601 101.15493011]
[-292.29272461 108.28425598]
[-307.91250610 102.04142761]
[-321.43365479 108.53596497]
[-326.43145752 123.52920532]
[-340.60446167 130.52220154]
[-355.54400635 125.36613464]
[-362.38677979 111.12001038]
[-357.07305908 96.23579407]
[-342.75537109 89.54402924]
[-327.92816162 95.01482391]
[-314.40704346 88.52029419]
[-311.88381958 75.88887787]
[-302.40612793 66.88095093]
[-289.27795410 64.94567871]
[-277.25668335 71.01073456]
[-263.64459229 64.70906067]
[-250.03250122 58.40739059]
[-236.42041016 52.10571671]
[-236.64607239 39.48174667]
[-232.06597900 27.66566658]
[-223.32693481 18.42381477]
[-211.70021057 13.15199184]
[-198.89669800 12.66471863]
[-186.81515503 17.06958771]
[-177.26066589 25.74606133]
[-163.47494507 19.83388519]
[-149.68922424 13.92170715]
[-135.90350342 8.00953007]
[-122.11777496 2.09735298]
[-137.05033875 0.67654902]
[-151.98289490 -0.74425513]
[-166.91545105 -2.16505933]
[-181.52456665 1.23697042]
[-196.45056152 -0.25112638]
[-210.10043335 -6.47052860]
[-221.01736450 -16.75745201]
[-228.03619385 -30.01399803]
[-230.40783691 -44.82532120]
[-227.87915039 -59.61064529]
[-220.72004700 -72.79196167]
[-209.69458008 -82.96246338]
[-195.97947693 -89.03666687]
[-181.03851318 -90.36628723]
[-166.46632385 -86.80942535]
[-153.81816101 -78.74568939]
[-144.44392395 -67.03570557]
[-139.34432983 -52.93040466]
[-130.02267456 -41.17852402]
[-120.70101929 -29.42664146]
[-111.37935638 -17.67476082]
[-113.92572784 -32.45704651]
[-116.47209930 -47.23933411]
[-119.01847076 -62.02161789]
[-128.98616028 -74.30802155]
[-123.52172089 -88.16403961]
[-126.06809235 -102.94632721]
[-128.61447144 -117.72860718]
[-131.16084290 -132.51089478]
[-133.81221008 -147.27470398]
[-136.56845093 -162.01930237]
[-139.32469177 -176.76390076]
[-154.34362793 -178.47367859]
[-168.19065857 -184.53593445]
[-179.63455200 -194.41159058]
[-187.65771484 -207.22254944]
[-191.54672241 -221.82963562]
[-190.95576477 -236.93400574]
[-185.93740845 -251.19259644]
[-176.93788147 -263.33755493]
[-164.75738525 -272.28894043]
[-150.47903442 -277.25079346]
[-135.37243652 -277.78192139]
[-120.78086853 -273.83511353]
[-108.00178528 -265.76129150]
[-98.17150879 -254.27839661]
[-92.16413879 -240.40745544]
[-90.51383972 -225.38188171]
[-93.36736298 -210.53773499]
[-100.47097015 -197.19493103]
[-111.19301605 -186.53993225]
[-124.58010101 -179.52014160]
[-121.82386017 -164.77554321]
[-119.06761932 -150.03096008]
[-114.75194550 -144.03805542]
[-116.37855530 -135.05726624]
[-113.83217621 -120.27497864]
[-111.28580475 -105.49269867]
[-108.73943329 -90.71041107]
[-98.95388031 -79.48133087]
[-104.23619080 -64.56799316]
[-101.68981934 -49.78570557]
[-99.14344788 -35.00341797]
[-96.59706879 -20.22113228]
[-92.27489471 -11.91222286]
[-91.43395233 -3.43681931]
[-93.61350250 3.92323613]
[-80.69478607 11.54600620]
[-67.77606201 19.16877556]
[-54.85733795 26.79154587]
[-41.93861771 34.41431427]
[-29.01989555 42.03708649]
[-24.26023102 41.73563766]
[-19.25943375 44.41593933]
[-15.84667778 50.06463623]
[-3.14986777 58.05156326]
[9.54694176 66.03849030]
[22.24375153 74.02542114]
[37.13661957 74.25293732]
[44.69801331 88.15027618]
[57.39482117 96.13719940]
[70.09162903 104.12413025]
[112.54317474 70.69882202]
[126.71395111 65.78058624]
[140.88473511 60.86235809]
[155.05551147 55.94412994]
[169.22628784 51.02589798]
[183.39707947 46.10766983]
[197.56785583 41.18943787]
[211.73863220 36.27120972]
[224.71968079 25.36575317]
[238.79244995 34.82055664]
[233.60287476 50.96071243]
[216.65686035 50.44198990]
[202.48608398 55.36021805]
[188.31530762 60.27845001]
[174.14453125 65.19667816]
[159.97373962 70.11490631]
[145.80296326 75.03314209]
[131.63218689 79.95137024]
[117.46140289 84.86959839]
[116.50251770 99.83892059]
[129.92997742 106.52499390]
[145.73219299 105.75011444]
[153.67636108 118.34929657]
[167.10382080 125.03536987]
[180.53126526 131.72145081]
[193.95870972 138.40751648]
[207.38616943 145.09359741]
[223.18838501 144.31871033]
[231.13255310 156.91789246]
[244.56001282 163.60397339]
[260.36221313 162.82908630]
[268.30639648 175.42826843]
[281.73385620 182.11434937]
[295.16128540 188.80041504]
[308.58874512 195.48649597]
[322.01620483 202.17257690]
[338.88989258 203.82022095]
[341.97775269 220.49060059]
[326.81365967 228.07258606]
[315.33010864 215.60002136]
[301.90267944 208.91394043]
[288.47521973 202.22787476]
[275.04776001 195.54179382]
[261.62033081 188.85571289]
[246.77853394 190.10882568]
[237.87393188 177.03141785]
[224.44648743 170.34533691]
[209.60469055 171.59846497]
[200.70008850 158.52104187]
[187.27264404 151.83497620]
[173.84518433 145.14889526]
[160.41773987 138.46281433]
[146.99029541 131.77674866]
[132.14849854 133.02986145]
[123.24389648 119.95244598]
[109.81644440 113.26636505]
[103.49658203 117.30485535]
[112.07480621 129.60989380]
[120.65302277 141.91494751]
[129.23124695 154.21998596]
[137.80946350 166.52503967]
[147.96966553 177.55999756]
[141.85266113 191.25605774]
[126.85401917 191.05442810]
[121.10758972 177.19778442]
[113.54490662 164.24378967]
[105.98222351 151.28981018]
[98.41954803 138.33581543]
[90.85686493 125.38182831]
[84.53700256 129.42030334]
[84.96340942 144.41424561]
[85.38980865 159.40818787]
[85.81621552 174.40213013]
[96.44390869 186.42008972]
[93.53233337 202.19673157]
[79.31499481 209.62954712]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 217]
[3 216]
[4 215]
[5 214]
[6 144]
[7 143]
[8 142]
[10 140]
[11 139]
[12 138]
[13 137]
[14 134]
[15 133]
[16 132]
[17 131]
[18 130]
[19 129]
[20 62]
[21 61]
[22 60]
[23 59]
[24 58]
[29 51]
[30 50]
[31 49]
[32 48]
[35 44]
[36 43]
[83 126]
[84 125]
[85 124]
[86 123]
[88 121]
[89 120]
[90 119]
[91 118]
[92 116]
[93 115]
[94 114]
[145 163]
[146 162]
[147 161]
[148 160]
[149 159]
[150 158]
[151 157]
[152 156]
[164 200]
[165 199]
[167 197]
[168 196]
[169 195]
[170 194]
[171 193]
[173 191]
[174 190]
[176 188]
[177 187]
[178 186]
[179 185]
[180 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
