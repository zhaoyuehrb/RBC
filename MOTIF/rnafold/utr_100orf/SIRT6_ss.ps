%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:27:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCCGCUUCCGGCGGAAGCGGCCUCAACAAGGGAAACUUUAUUGUUCCCGUGGGGCAGUCGAGGAUGUCGGUGAAUUACGCGGCGGGGCUGUCGCCGUACGCGGACAAGGGCAAGUGCGGCCUCCCGGAGAUCUUCGACCCCCCGGAGGAGCUGGAGCGGAAGG\
) } def
/len { sequence length } bind def

/coor [
[102.50654602 290.40252686]
[97.49677277 275.71643066]
[102.10820770 260.90039062]
[114.56767273 251.65155029]
[114.28381348 236.65423584]
[113.99994659 221.65692139]
[113.71608734 206.65960693]
[113.43222809 191.66229248]
[110.14709473 185.00476074]
[113.28760529 176.37910461]
[113.28760529 161.37910461]
[113.28760529 146.37910461]
[113.28760529 131.37910461]
[113.28760529 116.37909698]
[100.45222473 119.26828003]
[89.65060425 114.05716705]
[76.43015289 121.14376068]
[63.20970917 128.23034668]
[49.98926544 135.31694031]
[47.76651001 150.56048584]
[37.11854553 161.44506836]
[22.27860260 163.94309998]
[8.97257710 157.30323792]
[-4.24786854 164.38983154]
[-17.46831512 171.47642517]
[-21.79766464 186.67616272]
[-35.64726257 194.28959656]
[-50.80038452 189.79978943]
[-58.26695633 175.87046814]
[-53.61719131 160.76565552]
[-39.60971069 153.44677734]
[-24.55490875 158.25598145]
[-11.33446217 151.16938782]
[1.88598382 144.08279419]
[3.72267079 129.32594299]
[14.01839542 118.35041809]
[28.97760963 115.50872040]
[42.90267181 122.09649658]
[56.12311554 115.00990295]
[69.34356689 107.92330933]
[82.56401062 100.83671570]
[84.30644989 90.81651306]
[91.53805542 83.08885956]
[102.22305298 80.48914337]
[112.97584534 84.30527496]
[120.13317108 93.71582794]
[128.43719482 81.22410583]
[136.74122620 68.73238373]
[144.92666626 56.16263962]
[152.99281311 43.51600647]
[161.05895996 30.86937332]
[163.04956055 21.90821648]
[169.39932251 18.06175041]
[177.70333862 5.57002687]
[186.00737000 -6.92169666]
[194.31140137 -19.41341972]
[195.11692810 -26.04752541]
[198.64491272 -30.57360840]
[203.17350769 -32.21251678]
[211.94429016 -44.38105774]
[220.71507263 -56.54959869]
[229.48585510 -68.71813965]
[238.25663757 -80.88668060]
[247.02743530 -93.05521393]
[255.79821777 -105.22375488]
[264.56900024 -117.39229584]
[273.33978271 -129.56083679]
[275.13223267 -145.28018188]
[288.85086060 -151.08085632]
[297.62164307 -163.24938965]
[306.27691650 -175.50038147]
[314.81582642 -187.83271790]
[317.14410400 -196.71212769]
[323.63488770 -200.31556702]
[332.40567017 -212.48410034]
[328.82885742 -219.98338318]
[327.96005249 -228.18043518]
[329.85494995 -236.13522339]
[334.25482178 -242.95004272]
[340.62088013 -247.87081909]
[348.19982910 -250.37051392]
[350.46218872 -265.19891357]
[352.72454834 -280.02731323]
[354.98690796 -294.85574341]
[357.24929810 -309.68414307]
[353.66104126 -326.25402832]
[368.59002686 -334.28903198]
[380.44378662 -322.16778564]
[372.07769775 -307.42178345]
[369.81533813 -292.59338379]
[367.55294800 -277.76495361]
[365.29058838 -262.93655396]
[363.02822876 -248.10813904]
[364.71597290 -247.14845276]
[366.31884766 -246.05290222]
[378.65118408 -254.59182739]
[390.98355103 -263.13076782]
[403.31588745 -271.66970825]
[415.64822388 -280.20861816]
[427.98056030 -288.74755859]
[440.31289673 -297.28649902]
[452.48144531 -306.05728149]
[464.48181152 -315.05676270]
[464.11224365 -330.56945801]
[472.95907593 -343.31753540]
[487.62048340 -348.39910889]
[502.45889282 -343.86022949]
[511.76861572 -331.44616699]
[511.96987915 -315.93038940]
[502.98529053 -303.27905273]
[488.26959229 -298.35681152]
[473.48132324 -303.05639648]
[461.48092651 -294.05688477]
[459.92800903 -289.49810791]
[455.46951294 -285.88510132]
[448.85183716 -284.95416260]
[436.51950073 -276.41522217]
[424.18716431 -267.87628174]
[411.85479736 -259.33737183]
[399.52246094 -250.79841614]
[387.19012451 -242.25949097]
[374.85778809 -233.72055054]
[369.00323486 -209.84301758]
[344.57421875 -203.71331787]
[335.80343628 -191.54478455]
[327.14816284 -179.29379272]
[318.60925293 -166.96145630]
[317.38146973 -159.63973999]
[309.79019165 -154.47860718]
[301.01940918 -142.31007385]
[299.85430908 -127.46110535]
[285.50833130 -120.79005432]
[276.73754883 -108.62151337]
[267.96676636 -96.45297241]
[259.19595337 -84.28443146]
[250.42518616 -72.11589813]
[241.65440369 -59.94735336]
[232.88362122 -47.77881622]
[224.11283875 -35.61027527]
[215.34205627 -23.44173431]
[206.80311584 -11.10939503]
[198.49909973 1.38232887]
[190.19506836 13.87405205]
[181.89103699 26.36577606]
[173.70559692 38.93551636]
[165.63945007 51.58214951]
[157.57330322 64.22878265]
[156.62347412 71.59170532]
[149.23294067 77.03640747]
[140.92892456 89.52812958]
[132.62489319 102.01985168]
[128.28759766 116.37909698]
[128.28759766 131.37910461]
[128.28759766 146.37910461]
[128.28759766 161.37910461]
[128.28759766 176.37910461]
[128.42953491 191.37843323]
[128.71340942 206.37574768]
[128.99726868 221.37306213]
[129.28112793 236.37036133]
[129.56498718 251.36767578]
[142.36552429 260.13842773]
[147.53431702 274.76931763]
[143.08387756 289.63449097]
[130.72547913 299.01797485]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 161]
[5 160]
[6 159]
[7 158]
[8 157]
[10 156]
[11 155]
[12 154]
[13 153]
[14 152]
[16 41]
[17 40]
[18 39]
[19 38]
[23 34]
[24 33]
[25 32]
[46 151]
[47 150]
[48 149]
[49 147]
[50 146]
[51 145]
[53 144]
[54 143]
[55 142]
[56 141]
[59 140]
[60 139]
[61 138]
[62 137]
[63 136]
[64 135]
[65 134]
[66 133]
[67 132]
[69 130]
[70 129]
[71 127]
[72 126]
[74 125]
[75 124]
[81 93]
[82 92]
[83 91]
[84 90]
[85 89]
[95 122]
[96 121]
[97 120]
[98 119]
[99 118]
[100 117]
[101 116]
[102 113]
[103 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
