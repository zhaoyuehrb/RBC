%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:20:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGUUUGAUAAAGACAGCUCCUCUUAGGAAGAACUGUCAUCCCCAAACACAUAGAGAGACACUCUCUGUCUCUCGAUUACAAUCAUGAUUUCCAGAAUGGAGAAGAUGACGAUGAUGAUGAAGAUAUUGAUUAUGUUUGCUCUUGGAAUGAACUACUGGUCUUGCUCAGGUUUCCCAGUGUACG\
) } def
/len { sequence length } bind def

/coor [
[85.46202850 140.25193787]
[73.02461243 131.23022461]
[61.31973648 140.61083984]
[49.61486435 149.99145508]
[37.90999603 159.37207031]
[26.20512199 168.75270081]
[14.50025082 178.13331604]
[2.79537868 187.51393127]
[6.13923883 202.36585999]
[2.71705294 217.13662720]
[-6.74023008 228.90863037]
[-20.31505585 235.38050842]
[-35.29188538 235.31692505]
[-48.70036697 228.78408813]
[-60.40523911 238.16470337]
[-72.11011505 247.54531860]
[-83.81498718 256.92593384]
[-95.51985931 266.30654907]
[-101.44976044 280.97442627]
[-116.21987915 282.89614868]
[-127.92475128 292.27676392]
[-133.85466003 306.94464111]
[-148.62477112 308.86633301]
[-160.32965088 318.24694824]
[-165.77667236 333.71505737]
[-181.94352722 336.46545410]
[-192.19914246 323.66879272]
[-185.99340820 308.48916626]
[-169.71026611 306.54208374]
[-158.00538635 297.16146851]
[-152.91268921 283.16455078]
[-137.30537415 280.57186890]
[-125.60049438 271.19125366]
[-120.50779724 257.19433594]
[-104.90047455 254.60168457]
[-93.19560242 245.22106934]
[-81.49073029 235.84043884]
[-69.78585815 226.45982361]
[-58.08098602 217.07920837]
[-61.53643036 202.56971741]
[-58.33631897 187.93862915]
[-49.06305695 176.09939575]
[-35.51377487 169.43327332]
[-20.35224533 169.31053162]
[-6.58523846 175.80905151]
[5.11963367 166.42843628]
[16.82450485 157.04782104]
[28.52937698 147.66720581]
[40.23424911 138.28659058]
[51.93912125 128.90597534]
[63.64399338 119.52535248]
[56.06454468 99.13677979]
[59.82615280 76.34561920]
[75.24252319 57.37065506]
[99.29035950 48.03131866]
[87.12538910 39.25558090]
[74.96041870 30.47984695]
[62.79545212 21.70411301]
[50.63048172 12.92837811]
[38.46551514 4.15264273]
[26.30054474 -4.62309217]
[14.13557529 -13.39882660]
[-1.86738551 -12.26534367]
[-12.62479973 -24.16734314]
[-9.88450050 -39.97462845]
[4.25139093 -47.56120682]
[18.93902779 -41.10729980]
[22.91131020 -25.56379700]
[35.07627869 -16.78806114]
[47.24124908 -8.01232624]
[59.40621948 0.76340866]
[71.57118988 9.53914356]
[83.73616028 18.31487846]
[95.90112305 27.09061432]
[108.06609344 35.86634827]
[114.95828247 32.90867996]
[108.48982239 19.37505150]
[96.75922394 10.02663040]
[98.75964355 -4.83938122]
[112.54415131 -10.75439644]
[124.69674683 -1.96152973]
[123.39012146 12.98083115]
[128.74264526 26.99334145]
[135.63482666 24.03567314]
[137.65550232 9.17239952]
[139.67617798 -5.69087315]
[141.69683838 -20.55414581]
[132.40135193 -33.05341339]
[134.66233826 -48.09809875]
[146.63575745 -56.88289642]
[148.65643311 -71.74617004]
[150.67710876 -86.60944366]
[152.69778442 -101.47271729]
[154.71844482 -116.33599091]
[156.73912048 -131.19926453]
[152.88160706 -147.70852661]
[167.67782593 -155.98551941]
[179.72734070 -144.05883789]
[171.60240173 -129.17858887]
[169.58172607 -114.31531525]
[167.56105042 -99.45204163]
[165.54037476 -84.58877563]
[163.51971436 -69.72550201]
[161.49903870 -54.86222458]
[170.69264221 -43.19975662]
[168.85513306 -28.09749794]
[156.56011963 -18.53347397]
[154.53944397 -3.67020130]
[152.51876831 11.19307137]
[150.49810791 26.05634499]
[162.73675537 34.72903442]
[176.09033203 27.89661217]
[189.44390869 21.06418991]
[194.39262390 6.29435921]
[208.03237915 -0.44446129]
[222.08265686 4.36441183]
[235.43623352 -2.46800995]
[248.78981018 -9.30043221]
[262.14340210 -16.13285446]
[275.49697876 -22.96527481]
[284.25811768 -36.13922501]
[299.11273193 -35.04838943]
[312.46630859 -41.88080978]
[320.91552734 -55.93579102]
[337.30511475 -55.37553406]
[344.77484131 -40.77638245]
[335.64050293 -27.15669060]
[319.29870605 -28.52723312]
[305.94512939 -21.69481087]
[298.13912964 -9.00956249]
[282.32937622 -9.61169815]
[268.97579956 -2.77927685]
[255.62223816 4.05314493]
[242.26866150 10.88556671]
[228.91508484 17.71798897]
[224.59497070 31.92616272]
[211.14987183 39.04543686]
[196.27632141 34.41776657]
[182.92274475 41.25018692]
[169.56916809 48.08261108]
[167.75065613 55.35880661]
[182.74516296 55.76483536]
[197.73966980 56.17086792]
[212.73417664 56.57690048]
[227.54318237 54.19083023]
[240.71609497 61.36537170]
[246.74478149 75.10054779]
[243.10838318 89.65309143]
[231.32740784 98.93796539]
[216.32801819 99.07276917]
[204.38098145 89.99951935]
[190.95854187 83.30340576]
[177.53608704 76.60729980]
[164.11363220 69.91119385]
[162.29512024 77.18739319]
[170.86415100 89.49884033]
[179.43316650 101.81029510]
[188.00219727 114.12174225]
[196.57121277 126.43319702]
[205.14024353 138.74464417]
[218.91618347 137.99935913]
[231.16178894 144.11491394]
[238.72135925 155.39562988]
[239.70619202 168.83070374]
[233.96545410 180.89755249]
[242.32533264 193.35197449]
[257.27883911 200.08435059]
[258.65573120 216.42558289]
[245.03961182 225.56523132]
[230.43754578 218.10119629]
[229.87091064 201.71183777]
[221.51103210 189.25741577]
[205.10546875 189.17808533]
[191.84228516 179.24261475]
[187.05949402 163.20262146]
[192.82879639 147.31367493]
[184.25976562 135.00222778]
[175.69075012 122.69076538]
[167.12171936 110.37931824]
[158.55270386 98.06786346]
[149.98367310 85.75641632]
[150.24787903 104.44472504]
[143.95831299 121.45479584]
[132.33091736 134.64199829]
[117.22456360 142.49780273]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 51]
[3 50]
[4 49]
[5 48]
[6 47]
[7 46]
[8 45]
[14 39]
[15 38]
[16 37]
[17 36]
[18 35]
[20 33]
[21 32]
[23 30]
[24 29]
[55 75]
[56 74]
[57 73]
[58 72]
[59 71]
[60 70]
[61 69]
[62 68]
[84 110]
[85 109]
[86 108]
[87 107]
[90 104]
[91 103]
[92 102]
[93 101]
[94 100]
[95 99]
[111 140]
[112 139]
[113 138]
[116 135]
[117 134]
[118 133]
[119 132]
[120 131]
[122 129]
[123 128]
[155 181]
[156 180]
[157 179]
[158 178]
[159 177]
[160 176]
[165 172]
[166 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
