%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:05:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUAGAGGGAGCUGUGUUUUGGUGACCUCUGAAACUCAGUACUGCAGCGAAUGAGCUCCUGACCUUGAGGAGUACUUAACAGAAUUAUGUCUCGAAGAAUCAUUGUGGGAACCCUUCAAAGAACCCAGCGAAACAUGAAUUCUGGAAUCUCGCAAGUCUUCCAGAGGGAACUCACCUGCCCCAUCU\
) } def
/len { sequence length } bind def

/coor [
[40.87126160 680.50671387]
[24.49293900 679.68054199]
[17.26112175 664.96209717]
[26.61528397 651.49243164]
[27.37096214 636.51147461]
[28.12664032 621.53051758]
[28.75645256 606.54376221]
[29.26035690 591.55218506]
[29.76426125 576.56066895]
[26.84059143 569.75573730]
[30.40465546 561.32214355]
[31.16033363 546.34118652]
[22.32848740 531.18682861]
[32.42835999 515.80114746]
[32.93226242 500.80963135]
[33.43616486 485.81811523]
[31.60057068 483.67327881]
[30.51312256 480.66464233]
[30.50994301 477.07681274]
[31.81674576 473.31173706]
[34.51107788 469.84643555]
[36.02051544 454.92257690]
[37.52995300 439.99868774]
[27.94155693 428.65859985]
[29.25974464 413.50216675]
[41.21931458 403.52185059]
[42.72875214 388.59799194]
[44.23818970 373.67413330]
[45.74762726 358.75027466]
[47.25706482 343.82641602]
[48.76650238 328.90255737]
[40.86987686 323.80126953]
[35.34920120 316.12039185]
[33.00223160 306.89727783]
[34.19454193 297.39675903]
[38.80331039 288.93777466]
[46.22848129 282.71020508]
[55.47061157 279.60757446]
[57.97876740 264.81875610]
[55.99329376 257.68344116]
[60.65528488 249.80345154]
[63.41152573 235.05885315]
[66.16777039 220.31425476]
[59.64468384 212.41589355]
[58.53371811 202.01144409]
[63.44379807 192.52320862]
[72.96293640 187.20651245]
[76.21295166 172.56283569]
[79.46295929 157.91914368]
[82.71297455 143.27546692]
[69.91552734 135.58836365]
[60.20556641 124.24892426]
[54.57960129 110.42088318]
[53.61501312 95.52337646]
[57.41078949 81.08528900]
[44.86054993 72.86996460]
[32.31031036 64.65464783]
[19.76007462 56.43932343]
[7.20983553 48.22399902]
[-5.34040213 40.00867462]
[-20.25796890 44.69911575]
[-34.68054581 38.65565872]
[-41.79822922 24.73184395]
[-38.25026703 9.50207138]
[-25.71190071 0.15737216]
[-10.10336304 1.11002827]
[1.20547271 11.91022491]
[2.87492037 27.45843887]
[15.42515850 35.67375946]
[27.97539711 43.88908386]
[40.52563477 52.10440445]
[53.07587051 60.31972885]
[65.62611389 68.53504944]
[71.97129059 62.77099228]
[79.26495361 58.26673889]
[87.26026917 55.17471313]
[95.68668365 53.59954071]
[104.25906372 53.59453201]
[112.68732452 55.15984726]
[120.68624878 58.24252701]
[129.42127991 46.04829788]
[138.15631104 33.85406876]
[146.89134216 21.65984154]
[155.62637329 9.46561146]
[164.36140442 -2.72861719]
[172.99369812 -14.99578953]
[181.52264404 -27.33503914]
[190.05158997 -39.67428970]
[198.58053589 -52.01353836]
[207.10948181 -64.35279083]
[208.59138489 -80.10443878]
[222.19288635 -86.17470551]
[230.72183228 -98.51395416]
[239.25077820 -110.85320282]
[231.09497070 -124.92079926]
[229.88967896 -141.07858276]
[235.82533264 -156.09239197]
[247.66809082 -166.97911072]
[263.01593018 -171.59951782]
[278.78576660 -169.07836914]
[287.10623169 -181.55914307]
[288.32330322 -197.33348083]
[301.82092285 -203.63137817]
[310.14138794 -216.11216736]
[318.46182251 -228.59295654]
[319.67889404 -244.36727905]
[333.17651367 -250.66517639]
[341.49697876 -263.14596558]
[349.81741333 -275.62673950]
[353.57247925 -292.15963745]
[370.49874878 -293.12808228]
[376.11499023 -277.13140869]
[362.29821777 -267.30630493]
[353.97775269 -254.82551575]
[345.65731812 -242.34472656]
[345.03536987 -227.46310425]
[330.94262695 -220.27249146]
[322.62216187 -207.79171753]
[314.30169678 -195.31092834]
[313.67977905 -180.42930603]
[299.58700562 -173.23869324]
[291.26657104 -160.75790405]
[298.91110229 -149.16780090]
[301.56536865 -135.49557495]
[298.79562378 -121.80205536]
[290.98822021 -110.16412354]
[279.29611206 -102.35975647]
[265.46868896 -99.59639740]
[251.59002686 -102.32425690]
[243.06108093 -89.98500824]
[234.53213501 -77.64575958]
[233.66029358 -62.77669144]
[219.44873047 -55.82384109]
[210.91978455 -43.48459244]
[202.39083862 -31.14534187]
[193.86189270 -18.80609322]
[185.33294678 -6.46684313]
[184.11347961 0.83847010]
[176.55563354 6.00641441]
[167.82060242 18.20064354]
[159.08557129 30.39487267]
[150.35054016 42.58909988]
[141.61550903 54.78332901]
[132.88047791 66.97756195]
[143.18865967 82.49723053]
[146.59338379 100.81462097]
[142.55043030 119.00180054]
[131.70602417 134.15165710]
[115.79359436 143.84255981]
[97.35665131 146.52548218]
[94.10664368 161.16915894]
[90.85662842 175.81283569]
[87.60662079 190.45652771]
[94.54051208 209.37037659]
[80.91236877 223.07049561]
[78.15612030 237.81509399]
[75.39987946 252.55969238]
[72.76758575 267.32690430]
[70.25942993 282.11572266]
[83.53252411 298.39947510]
[80.55916595 318.90020752]
[63.69036102 330.41198730]
[62.18092346 345.33587646]
[60.67148590 360.25973511]
[59.16204834 375.18359375]
[57.65261078 390.10745239]
[56.14317322 405.03131104]
[65.86210632 417.20422363]
[64.11872864 432.31762695]
[52.45381165 441.50814819]
[50.94437790 456.43200684]
[49.43494034 471.35586548]
[48.42770004 486.32199097]
[47.92379761 501.31353760]
[47.41989136 516.30505371]
[55.64906311 526.25476074]
[54.90855026 538.74353027]
[46.14128494 547.09686279]
[45.38560867 562.07781982]
[44.75579453 577.06457520]
[44.25189209 592.05609131]
[43.74798584 607.04766846]
[46.59189224 615.75054932]
[43.10759354 622.28619385]
[42.35191345 637.26715088]
[41.59623718 652.24810791]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 186]
[5 185]
[6 184]
[7 182]
[8 181]
[9 180]
[11 179]
[12 178]
[14 175]
[15 174]
[16 173]
[21 172]
[22 171]
[23 170]
[26 167]
[27 166]
[28 165]
[29 164]
[30 163]
[31 162]
[38 159]
[39 158]
[41 157]
[42 156]
[43 155]
[47 153]
[48 152]
[49 151]
[50 150]
[55 73]
[56 72]
[57 71]
[58 70]
[59 69]
[60 68]
[80 144]
[81 143]
[82 142]
[83 141]
[84 140]
[85 139]
[86 137]
[87 136]
[88 135]
[89 134]
[90 133]
[92 131]
[93 130]
[94 129]
[100 122]
[101 121]
[103 119]
[104 118]
[105 117]
[107 115]
[108 114]
[109 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
