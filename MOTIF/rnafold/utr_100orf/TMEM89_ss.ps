%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:01:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCUGGAACCUGCUGCCUUAGAGCCAGGCCUCUUCCCGGGGGAGGGGCGUUUGCCCGUUGCCAGGUGCCCGGGUUCCGGCCCUGGCACUAGCGACGGCCAUGCUGCAUGUGCUGGCCUCGCUGCCUUUGCUGCUCCUGCUGGUGACGUCUGCCUCCACCCACGCCUGGUCGAGACCCCUCUGGUACCAGGUGGGGCUGG\
) } def
/len { sequence length } bind def

/coor [
[188.86117554 430.69195557]
[184.67631531 445.09634399]
[180.49143982 459.50076294]
[181.10206604 468.62393188]
[176.12606812 474.09759521]
[171.71545410 488.43447876]
[179.33132935 502.28274536]
[174.84419250 517.43664551]
[160.91619873 524.90570068]
[145.81056213 520.25860596]
[138.48921204 506.25241089]
[143.29576111 491.19674683]
[157.37857056 484.02389526]
[161.78916931 469.68698120]
[166.08703613 455.31588745]
[170.27191162 440.91149902]
[174.45677185 426.50708008]
[181.16880798 416.34732056]
[189.72120667 409.61526489]
[198.92501831 406.53109741]
[207.60621643 406.96023560]
[202.08435059 393.01361084]
[196.56248474 379.06695557]
[184.68330383 370.08172607]
[186.79707336 354.40234375]
[181.27520752 340.45571899]
[175.75334167 326.50906372]
[170.23147583 312.56240845]
[164.70960999 298.61575317]
[152.83042908 289.63052368]
[154.94419861 273.95117188]
[149.42233276 260.00451660]
[139.70756531 256.80148315]
[133.22724915 248.60485840]
[132.31411743 237.97544861]
[137.51095581 228.40744019]
[132.42988586 214.29423523]
[127.34881592 200.18101501]
[122.26775360 186.06781006]
[117.07599640 171.99493408]
[111.77387238 157.96327209]
[106.47174835 143.93162537]
[101.16962433 129.89996338]
[95.86750031 115.86830139]
[83.59526062 107.24321747]
[68.59710693 107.00760651]
[53.59895706 106.77200317]
[38.60081100 106.53639221]
[24.54264069 114.98031616]
[10.33406925 106.79199982]
[10.59165573 90.39487457]
[25.05041695 82.65689850]
[38.83641815 91.53823853]
[53.83456802 91.77384949]
[68.83271790 92.00946045]
[83.83086395 92.24507141]
[86.53694916 85.25027466]
[91.94911194 71.26068878]
[94.65518951 64.26589966]
[83.40352631 54.34622192]
[72.15186310 44.42654419]
[60.90019226 34.50686646]
[49.64852905 24.58718681]
[38.39686203 14.66750908]
[27.14519501 4.74783087]
[18.63031006 1.41587949]
[15.79627514 -5.41710997]
[4.70180893 -15.51229763]
[-6.39265728 -25.60748482]
[-14.85415649 -29.07277107]
[-17.58051491 -35.94943237]
[-28.51504326 -46.21763992]
[-44.20027924 -52.65267944]
[-42.35882568 -69.50632477]
[-25.65406227 -72.40239716]
[-18.24683762 -57.15216827]
[-7.31230736 -46.88396454]
[3.70253015 -36.70195007]
[14.79699707 -26.60676384]
[25.89146233 -16.51157570]
[37.06487274 -6.50383520]
[48.31653976 3.41584301]
[59.56820679 13.33552074]
[70.81987000 23.25519943]
[82.07154083 33.17487717]
[93.32320404 43.09455490]
[104.57486725 53.01423264]
[111.67050934 50.58485413]
[132.95742798 43.29671097]
[135.76815796 28.56240082]
[138.57887268 13.82809258]
[141.38958740 -0.90621597]
[144.20031738 -15.64052486]
[147.01103210 -30.37483406]
[145.54455566 -39.40005493]
[149.98335266 -45.31770325]
[153.02516174 -60.00604630]
[156.06697083 -74.69438934]
[159.10877991 -89.38272858]
[162.15058899 -104.07106781]
[160.82604980 -113.11820984]
[165.35725403 -118.96540833]
[168.62940979 -133.60415649]
[158.98841858 -145.91616821]
[159.56864929 -161.54296875]
[170.09614563 -173.10609436]
[185.60014343 -175.14578247]
[198.76011658 -166.69894409]
[203.36233521 -151.75392151]
[197.23377991 -137.36730957]
[183.26815796 -130.33201599]
[179.99600220 -115.69326019]
[176.83892822 -101.02925873]
[173.79711914 -86.34091949]
[170.75531006 -71.65258026]
[167.71350098 -56.96423340]
[164.67169189 -42.27589417]
[161.74533081 -27.56411362]
[158.93461609 -12.82980537]
[156.12390137 1.90450370]
[153.31318665 16.63881302]
[150.50245667 31.37312126]
[147.69174194 46.10742950]
[161.59375000 51.74073410]
[172.40048218 62.14335632]
[178.55924988 75.82069397]
[179.18521118 90.80762482]
[174.18840027 104.95088959]
[164.28675842 116.21842957]
[150.90290833 122.99136353]
[135.95980835 124.29658508]
[121.60440826 119.94656372]
[109.89916229 110.56617737]
[115.20128632 124.59783936]
[120.50341034 138.62950134]
[125.80553436 152.66116333]
[131.10765076 166.69281006]
[137.07369995 173.62185669]
[136.38096619 180.98674011]
[141.46203613 195.09994507]
[146.54310608 209.21316528]
[151.62416077 223.32637024]
[167.59353638 235.61892700]
[163.36898804 254.48265076]
[168.89085388 268.42929077]
[181.16499329 278.41207886]
[178.65625000 293.09390259]
[184.17811584 307.04055786]
[189.69999695 320.98718262]
[195.22186279 334.93383789]
[200.74372864 348.88049316]
[213.01786804 358.86328125]
[210.50912476 373.54507446]
[216.03099060 387.49172974]
[221.55287170 401.43838501]
[229.39035034 414.22796631]
[239.31002808 425.47964478]
[249.31776428 436.65304565]
[259.41296387 447.74752808]
[269.50814819 458.84197998]
[277.60598755 463.08819580]
[279.67309570 470.19091797]
[289.59277344 481.44256592]
[299.51245117 492.69424438]
[309.43212891 503.94589233]
[319.35180664 515.19757080]
[329.27148438 526.44921875]
[339.19116211 537.70092773]
[349.11083984 548.95257568]
[353.29272461 550.19433594]
[356.53192139 552.47650146]
[358.61660767 555.37316895]
[359.49566650 558.43347168]
[359.27285767 561.23632812]
[368.46646118 573.08868408]
[377.66006470 584.94097900]
[393.33233643 588.37017822]
[400.29327393 602.82440186]
[393.20303345 617.21563721]
[377.50064087 620.50415039]
[365.23162842 610.16729736]
[365.80773926 594.13458252]
[356.61413574 582.28228760]
[347.42053223 570.42993164]
[337.85916138 558.87225342]
[327.93948364 547.62060547]
[318.01980591 536.36889648]
[308.10012817 525.11724854]
[298.18045044 513.86560059]
[288.26077271 502.61392212]
[278.34109497 491.36224365]
[268.42141724 480.11059570]
[258.41366577 468.93716431]
[248.31848145 457.84271240]
[238.22329712 446.74822998]
[231.39030457 443.91421509]
[228.05834961 435.39932251]
[218.13867188 424.14764404]
[210.81930542 425.78372192]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 17]
[2 16]
[3 15]
[5 14]
[6 13]
[21 155]
[22 154]
[23 153]
[25 151]
[26 150]
[27 149]
[28 148]
[29 147]
[31 145]
[32 144]
[36 142]
[37 141]
[38 140]
[39 139]
[40 137]
[41 136]
[42 135]
[43 134]
[44 133]
[45 56]
[46 55]
[47 54]
[48 53]
[59 87]
[60 86]
[61 85]
[62 84]
[63 83]
[64 82]
[65 81]
[67 80]
[68 79]
[69 78]
[71 77]
[72 76]
[89 123]
[90 122]
[91 121]
[92 120]
[93 119]
[94 118]
[96 117]
[97 116]
[98 115]
[99 114]
[100 113]
[102 112]
[103 111]
[156 198]
[157 197]
[158 195]
[159 194]
[160 193]
[162 192]
[163 191]
[164 190]
[165 189]
[166 188]
[167 187]
[168 186]
[169 185]
[174 184]
[175 183]
[176 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
