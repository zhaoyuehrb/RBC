%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:45:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUGCUCGCAUCUUGGCUUGCUGAGGCUGCGGGUCUUGGCCGGGCCUUCGAGAAUCCCCCGCCGCCUCCCCUUCUGGAUGUAUCUGCGCCGCCUCCUUUCUCCCUCCCCUUCCUUCCAGCCCUUCAUUCCCUCGGGGCGGGCGGGCAGGCCGGCAGGCCCCGCGCAAACCUGGGGAA\
) } def
/len { sequence length } bind def

/coor [
[174.86123657 276.98950195]
[175.85314941 272.69430542]
[170.94335938 258.52059937]
[166.03356934 244.34689331]
[161.12377930 230.17318726]
[156.21398926 215.99948120]
[151.30421448 201.82577515]
[145.44584656 215.63444519]
[132.66020203 223.47839355]
[117.69589233 222.44438171]
[106.11062622 212.91644287]
[102.20719147 198.43324280]
[107.43531036 184.37384033]
[119.85326385 175.95989990]
[134.84902954 176.31634521]
[146.85311890 185.31071472]
[143.97518921 170.58938599]
[141.09725952 155.86805725]
[138.21932983 141.14672852]
[135.34141541 126.42539215]
[132.46348572 111.70406342]
[129.58555603 96.98273468]
[105.07588196 124.98643494]
[79.68974304 106.26498413]
[64.71803284 105.34414673]
[49.74632645 104.42330933]
[34.77461624 103.50247192]
[19.80290794 102.58163452]
[5.55377722 109.45716095]
[-6.67450333 100.95314026]
[-21.64621162 100.03230286]
[-36.61791992 99.11146545]
[-51.58963013 98.19062805]
[-66.56134033 97.26979065]
[-81.55613708 96.87493896]
[-96.55556488 97.00656891]
[-111.55498505 97.13819885]
[-126.55440521 97.26982880]
[-141.55383301 97.40145874]
[-156.55325317 97.53308868]
[-165.45347595 110.24394226]
[-180.13607788 115.26396942]
[-194.95530701 110.66287994]
[-204.21286011 98.20987701]
[-204.34902954 82.69339752]
[-195.31144714 70.07984924]
[-180.57525635 65.21939087]
[-165.80680847 69.98097229]
[-156.68487549 82.53366852]
[-141.68545532 82.40203857]
[-126.68603516 82.27040863]
[-111.68661499 82.13877869]
[-96.68719482 82.00714874]
[-81.68776703 81.87551880]
[-79.62013245 79.94194794]
[-76.65099335 78.72322845]
[-73.05329132 78.57102966]
[-69.22353363 79.73010254]
[-65.64050293 82.29808044]
[-50.66879272 83.21891785]
[-35.69708252 84.13975525]
[-20.72537422 85.06059265]
[-5.75366592 85.98143005]
[7.42458725 79.04003906]
[20.72374535 87.60992432]
[35.69545364 88.53076935]
[50.66716385 89.45160675]
[65.63887024 90.37244415]
[80.61058044 91.29328156]
[85.30225372 79.16583252]
[97.62252045 70.35617065]
[90.08455658 57.38778305]
[75.59712982 49.70361328]
[75.27858734 33.30755997]
[89.45661926 25.06647682]
[103.54608154 33.45808411]
[103.05294037 49.84981537]
[110.59091187 62.81820297]
[117.96392059 64.19252014]
[112.97120667 50.04780960]
[122.72445679 38.65158081]
[137.47053528 41.39993668]
[142.46350098 55.54455566]
[132.70993042 66.94115448]
[140.08294678 68.31546783]
[151.78692627 58.93374634]
[163.49092102 49.55202484]
[175.19490051 40.17030334]
[179.95164490 32.33729553]
[187.18762207 30.72880173]
[199.05444336 21.55393028]
[210.92127991 12.37905693]
[222.78811646 3.20418382]
[234.65495300 -5.97068882]
[246.52177429 -15.14556122]
[258.38861084 -24.32043457]
[251.16587830 -37.50294113]
[246.09437561 -51.65307999]
[243.29899597 -66.42238617]
[242.84860229 -81.44715118]
[244.75425720 -96.35738373]
[248.96903992 -110.78589630]
[255.38917542 -124.37738037]
[263.85653687 -136.79713440]
[274.16262817 -147.73930359]
[286.05361938 -156.93443298]
[299.23672485 -164.15609741]
[313.38726807 -169.22642517]
[328.15682983 -172.02056885]
[343.18161011 -172.46974182]
[358.09170532 -170.56285095]
[372.51986694 -166.34687805]
[386.11080933 -159.92562866]
[398.52987671 -151.45724487]
[409.47119141 -141.15025330]
[418.66534424 -129.25848389]
[425.88589478 -116.07478333]
[430.95507812 -101.92381287]
[433.74801636 -87.15404510]
[434.19592285 -72.12920380]
[432.28781128 -57.21928787]
[428.07064819 -42.79146957]
[421.64828491 -29.20104218]
[413.17886353 -16.78268814]
[402.87097168 -5.84221649]
[390.97845459 3.35095239]
[377.79415894 10.57042885]
[363.64276123 15.63842583]
[348.87277222 18.43014145]
[333.84790039 18.87682343]
[318.93814087 16.96747589]
[304.51065063 12.74911690]
[290.92074585 6.32562685]
[278.50311279 -2.14481044]
[267.56347656 -12.45360184]
[255.69665527 -3.27872920]
[243.82981873 5.89614344]
[231.96298218 15.07101631]
[220.09616089 24.24588966]
[208.22932434 33.42076111]
[196.36248779 42.59563446]
[184.57662964 51.87429047]
[172.87263489 61.25601196]
[161.16865540 70.63773346]
[149.46466064 80.01945496]
[144.30688477 94.10481262]
[147.18481445 108.82614136]
[150.06274414 123.54747009]
[152.94065857 138.26879883]
[155.81858826 152.99012756]
[158.69651794 167.71145630]
[161.57444763 182.43278503]
[165.47792053 196.91598511]
[170.38769531 211.08969116]
[175.29748535 225.26339722]
[180.20727539 239.43710327]
[185.11706543 253.61080933]
[190.02685547 267.78451538]
[195.43104553 281.77719116]
[201.32295227 295.57159424]
[207.21487427 309.36596680]
[213.10679626 323.16036987]
[218.99870300 336.95477295]
[234.15530396 340.28002930]
[244.43751526 351.90136719]
[245.89163208 367.35015869]
[237.95851135 380.68603516]
[223.68859863 386.78103638]
[208.56896973 383.29156494]
[198.41343689 371.55935669]
[197.12698364 356.09570312]
[205.20431519 342.84667969]
[199.31239319 329.05227661]
[193.42048645 315.25790405]
[187.52856445 301.46350098]
[181.63664246 287.66909790]
[179.05644226 286.50445557]
[176.78926086 284.23269653]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 158]
[3 157]
[4 156]
[5 155]
[6 154]
[7 153]
[16 152]
[17 151]
[18 150]
[19 149]
[20 148]
[21 147]
[22 146]
[24 69]
[25 68]
[26 67]
[27 66]
[28 65]
[30 63]
[31 62]
[32 61]
[33 60]
[34 59]
[35 54]
[36 53]
[37 52]
[38 51]
[39 50]
[40 49]
[71 78]
[72 77]
[85 145]
[86 144]
[87 143]
[88 142]
[90 141]
[91 140]
[92 139]
[93 138]
[94 137]
[95 136]
[96 135]
[159 176]
[160 175]
[161 174]
[162 173]
[163 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
