%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:04:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUGCCCGGCGCGACCUGAUGAUGCCGAGCCCAGGCCGGUUCCGGCGAAGUUAAACCCUCGGAGCUGGCCUCGGACUGCUGGGGCGUUACCCCUUCGGCCACCCCCGCUGACCAUGGCAGUGUUUCAUGACGAGGUGGAAAUCGAGGACUUCCAAUAUGACGAGGACUCGGAGACGUAUUUCUAUCCCUGCCCAUGUGGAGAUAACUUCUCCA\
) } def
/len { sequence length } bind def

/coor [
[113.70753479 145.82083130]
[98.81091309 144.06277466]
[100.56868744 129.16659546]
[93.12034607 128.28779602]
[85.94039917 141.45776367]
[86.12810516 157.27786255]
[73.24269104 164.74882507]
[66.06273651 177.91880798]
[58.88278961 191.08879089]
[51.70284271 204.25875854]
[44.52289581 217.42874146]
[37.43980789 230.65107727]
[30.45396614 243.92503357]
[35.37752914 258.94281006]
[28.16538811 273.00555420]
[13.09638023 277.77008057]
[-0.88932014 270.40963745]
[-5.49424458 255.29110718]
[2.01362681 241.38401794]
[17.18000603 236.93919373]
[24.16584778 223.66522217]
[24.49917412 216.28381348]
[31.35291481 210.24879456]
[38.53286362 197.07881165]
[45.71281052 183.90884399]
[52.89276123 170.73886108]
[60.07270813 157.56887817]
[59.37144470 142.69079590]
[72.77042389 134.27781677]
[79.95037079 121.10784149]
[72.10350800 108.32399750]
[57.10997009 108.76434326]
[42.12007141 109.31473541]
[27.13461494 109.97513580]
[12.14915943 110.63553619]
[-2.83629560 111.29593658]
[-17.82175064 111.95633698]
[-32.80720520 112.61674500]
[-47.79265976 113.27714539]
[-62.77811813 113.93754578]
[-77.76357269 114.59794617]
[-92.74902344 115.25834656]
[-107.73448181 115.91875458]
[-122.71994019 116.57915497]
[-137.70539856 117.23955536]
[-143.24174500 131.42648315]
[-154.07435608 142.13041687]
[-168.32640076 147.49687195]
[-183.52865601 146.59603882]
[-197.04721069 139.58403015]
[-206.53991699 127.67568970]
[-210.36209106 112.93421936]
[-207.85151672 97.91367340]
[-199.44317627 85.21643829]
[-186.59385681 77.04240417]
[-171.52978516 74.80776215]
[-156.86090088 78.89967346]
[-145.12867737 88.60919952]
[-138.36579895 102.25409698]
[-123.38034058 101.59369659]
[-108.39488220 100.93329620]
[-93.40943146 100.27289581]
[-78.42397308 99.61249542]
[-63.43851852 98.95208740]
[-48.45306396 98.29168701]
[-33.46760941 97.63128662]
[-18.48215294 96.97088623]
[-3.49669743 96.31048584]
[11.48875809 95.65008545]
[26.47421265 94.98967743]
[41.45966721 94.32927704]
[48.00209808 90.89517975]
[56.66962051 93.77081299]
[71.66315460 93.33045959]
[80.60417175 81.28645325]
[76.68644714 66.80710602]
[72.76872253 52.32775879]
[68.85099792 37.84841537]
[64.93327332 23.36907005]
[61.01555252 8.88972378]
[54.82076645 -4.77133942]
[46.51011658 -17.25865555]
[38.19946289 -29.74596977]
[29.88880920 -42.23328781]
[14.50619221 -46.78901291]
[8.61086655 -61.70962524]
[16.72522163 -75.54930878]
[32.62461853 -77.69143677]
[44.11240005 -66.49275970]
[42.37612534 -50.54393768]
[50.68677902 -38.05662155]
[58.99742889 -25.56930733]
[67.30808258 -13.08199215]
[74.34737396 -15.67012119]
[95.46524048 -23.43450737]
[93.70764160 -38.33118057]
[91.95005035 -53.22785568]
[90.19245911 -68.12452698]
[88.43486023 -83.02120209]
[75.26213074 -91.44813538]
[70.63732147 -106.38617706]
[76.74412537 -120.78204346]
[90.69908905 -127.83844757]
[105.91312408 -124.22356415]
[115.20260620 -111.64424133]
[114.18134308 -96.04003906]
[103.33153534 -84.77879333]
[105.08912659 -69.88211823]
[106.84672546 -54.98544693]
[108.60431671 -40.08877563]
[110.36191559 -25.19210243]
[106.78721619 -12.86105824]
[100.36132812 -3.30926228]
[92.20787048 2.90644979]
[83.52939606 5.60314274]
[75.49489594 4.97199965]
[79.41262054 19.45134544]
[83.33034515 33.93069077]
[87.24806976 48.41003418]
[91.16579437 62.88938141]
[95.08351898 77.36872864]
[104.09870911 72.40968323]
[115.89570618 71.50700378]
[128.56260681 75.91635895]
[139.69740295 85.99642944]
[146.81727600 101.04264832]
[161.81565857 101.26284790]
[176.81404114 101.48303986]
[191.81242371 101.70323944]
[201.15396118 89.45407867]
[215.74639893 85.10507202]
[229.93380737 90.12319183]
[238.34519958 102.38640594]
[253.34358215 102.60660553]
[268.34197998 102.82679749]
[283.34197998 102.82679749]
[298.34036255 102.60660553]
[313.33874512 102.38640594]
[328.33712769 102.16620636]
[343.33551025 101.94601440]
[358.33389282 101.72581482]
[373.33227539 101.50561523]
[388.29956055 100.51541901]
[403.19622803 98.75782013]
[418.09289551 97.00022888]
[432.98956299 95.24263000]
[442.76947021 83.11862946]
[457.90185547 81.54838562]
[469.39996338 90.94673157]
[484.29663086 89.18913269]
[499.19329834 87.43154144]
[505.18753052 73.29064178]
[517.45874023 64.05419159]
[532.70611572 62.20674515]
[546.82818604 68.24525452]
[556.02612305 80.54539490]
[557.82574463 95.79848480]
[551.74304199 109.90152740]
[539.41412354 119.06086731]
[524.15545654 120.81269836]
[510.07156372 114.68577576]
[500.95089722 102.32821655]
[486.05422974 104.08580780]
[471.15756226 105.84339905]
[462.16244507 117.65965271]
[447.08013916 119.65431213]
[434.74716187 110.13930511]
[419.85049438 111.89690399]
[404.95382690 113.65449524]
[390.05715942 115.41208649]
[401.89807129 124.62038422]
[405.17074585 139.25901794]
[398.37847900 152.63305664]
[384.62765503 158.62593079]
[370.20715332 154.49682617]
[361.71215820 142.13418579]
[363.02783203 127.19198608]
[373.55245972 116.50399780]
[358.55407715 116.72419739]
[343.55569458 116.94439697]
[328.55731201 117.16459656]
[313.55892944 117.38478851]
[298.56054688 117.60498810]
[283.56216431 117.82518768]
[279.65280151 120.56491852]
[273.98132324 120.87943268]
[268.12176514 117.82518768]
[253.12338257 117.60498810]
[238.12500000 117.38478851]
[229.35723877 129.39579773]
[215.02862549 133.99525452]
[200.57014465 129.21974182]
[191.59222412 116.70162201]
[176.59384155 116.48143005]
[161.59545898 116.26123047]
[146.59707642 116.04103088]
[137.39303589 127.88525391]
[141.31076050 142.36459351]
[145.22848511 156.84394836]
[149.14620972 171.32328796]
[153.06393433 185.80264282]
[156.98165894 200.28198242]
[170.12306213 209.48432922]
[170.97804260 225.50459290]
[158.89076233 236.05337524]
[143.13351440 233.03857422]
[135.79394531 218.77287292]
[142.50231934 204.19970703]
[138.58459473 189.72036743]
[134.66687012 175.24101257]
[130.74914551 160.76167297]
[126.83142090 146.28231812]
[122.91369629 131.80297852]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 30]
[5 29]
[7 27]
[8 26]
[9 25]
[10 24]
[11 23]
[12 21]
[13 20]
[31 74]
[32 73]
[33 71]
[34 70]
[35 69]
[36 68]
[37 67]
[38 66]
[39 65]
[40 64]
[41 63]
[42 62]
[43 61]
[44 60]
[45 59]
[75 121]
[76 120]
[77 119]
[78 118]
[79 117]
[80 116]
[81 93]
[82 92]
[83 91]
[84 90]
[95 111]
[96 110]
[97 109]
[98 108]
[99 107]
[126 196]
[127 195]
[128 194]
[129 193]
[133 189]
[134 188]
[135 187]
[136 184]
[137 183]
[138 182]
[139 181]
[140 180]
[141 179]
[142 178]
[143 170]
[144 169]
[145 168]
[146 167]
[149 164]
[150 163]
[151 162]
[197 213]
[198 212]
[199 211]
[200 210]
[201 209]
[202 208]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
