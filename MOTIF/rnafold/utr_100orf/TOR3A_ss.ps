%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:45:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGCGCACUCAGCCCGGCCCGCCGGUCGCCACAGCAACACCAAUCCCGGGUUCAAGCCCGCCUAGGAAGUGCGGUCCCCGCCUGACCGCCCCGGGCUUAAGGGAGCCUGGCUAGGCCGGCAGCCGGAUGGUCCCGCAGCUCGGGGCCGGCCAUGCUUCGCGGUCCGUGGCGCCAGCUUUGGCUCUUUUUCCUGCUGCUGCUCCCGGGCGCGCCUGAGCCCCGCGGCGCCUCCAGGCCGUGGGAGGGAACCG\
) } def
/len { sequence length } bind def

/coor [
[43.91751480 217.10693359]
[46.66728973 202.36112976]
[53.73653793 189.13140869]
[64.46682739 178.64994812]
[77.85875702 171.89302063]
[92.66501617 169.48991394]
[107.50655365 171.66450500]
[121.00104523 178.21420288]
[131.89208984 188.52961731]
[127.13301849 174.30459595]
[122.37393951 160.07957458]
[117.61486053 145.85455322]
[112.85578156 131.62953186]
[83.61769867 126.49388885]
[71.92662048 102.17011261]
[57.20359421 99.30086517]
[42.48057175 96.43161774]
[27.75754547 93.56237793]
[13.03452206 90.69313049]
[1.93852699 97.23425293]
[-10.25151825 94.55946350]
[-17.13232231 84.63113403]
[-31.81858444 81.57929230]
[-46.50484467 78.52745819]
[-61.19110489 75.47561646]
[-75.87736511 72.42377472]
[-90.56362915 69.37193298]
[-105.24989319 66.32009125]
[-119.66824341 70.45664215]
[-130.50280762 80.83027649]
[-134.56843567 96.71746063]
[-150.43077087 100.87897491]
[-161.77201843 89.03379822]
[-156.92526245 73.36724091]
[-140.87643433 69.99571228]
[-130.04187012 59.62207794]
[-131.43077087 52.25180054]
[-145.91236877 56.16115189]
[-160.39398193 60.07050323]
[-172.83638000 68.44824982]
[-186.67582703 62.66294479]
[-189.45413208 47.92248917]
[-178.67027283 37.49615097]
[-164.03099060 40.77039719]
[-149.11976624 39.14082336]
[-134.20854187 37.51124954]
[-135.59742737 30.14097023]
[-149.46452332 24.42223740]
[-163.33160400 18.70350266]
[-177.19869995 12.98476791]
[-191.06578064 7.26603365]
[-204.93286133 1.54729927]
[-218.79995728 -4.17143488]
[-232.66703796 -9.89016914]
[-246.67185974 -15.26279068]
[-260.80575562 -20.28598404]
[-274.93969727 -25.30917931]
[-289.07360840 -30.33237267]
[-303.20751953 -35.35556793]
[-317.34143066 -40.37876129]
[-331.47534180 -45.40195465]
[-343.18362427 -35.56005096]
[-358.14736938 -32.91748428]
[-372.33044434 -38.08532715]
[-381.95809937 -49.58161163]
[-384.52142334 -64.25453949]
[-398.65533447 -69.27773285]
[-416.69723511 -65.53206635]
[-427.53237915 -79.35120392]
[-441.72760010 -84.19850922]
[-450.83239746 -84.00793457]
[-456.06829834 -89.19513702]
[-470.20220947 -94.21833038]
[-484.33615112 -99.24152374]
[-498.47006226 -104.26471710]
[-515.41943359 -103.87169647]
[-520.48919678 -120.04989624]
[-506.34664917 -129.40007019]
[-493.44686890 -118.39863586]
[-479.31292725 -113.37544250]
[-465.17901611 -108.35224915]
[-451.04510498 -103.32904816]
[-436.88027954 -98.39370728]
[-422.68508911 -93.54640198]
[-411.70919800 -98.59088135]
[-399.85464478 -94.68942261]
[-393.63214111 -83.41165161]
[-379.49822998 -78.38845825]
[-368.24990845 -88.15272522]
[-353.52648926 -90.99462891]
[-339.26315308 -86.05261993]
[-329.32330322 -74.55931091]
[-326.45214844 -59.53586960]
[-312.31823730 -54.51267624]
[-298.18432617 -49.48947906]
[-284.05041504 -44.46628571]
[-269.91650391 -39.44309235]
[-255.78257751 -34.41989899]
[-241.64866638 -29.39670372]
[-239.08000183 -30.45386505]
[-235.94326782 -30.57117844]
[-232.58934021 -29.52927017]
[-229.44132996 -27.23793221]
[-226.94830322 -23.75725555]
[-213.08122253 -18.03852081]
[-199.21412659 -12.31978703]
[-185.34704590 -6.60105276]
[-171.47996521 -0.88231826]
[-157.61286926 4.83641624]
[-143.74578857 10.55515003]
[-129.87869263 16.27388382]
[-115.30339813 21.06862259]
[-105.40803528 30.39242363]
[-101.16336060 41.48508453]
[-102.19805145 51.63383484]
[-87.51178741 54.68567276]
[-72.82553101 57.73751450]
[-58.13926697 60.78935242]
[-43.45300293 63.84119415]
[-28.76674271 66.89303589]
[-14.08048248 69.94487762]
[2.27951026 63.56367493]
[15.90376759 75.97010803]
[30.62679100 78.83935547]
[45.34981537 81.70859528]
[60.07283783 84.57784271]
[74.79586029 87.44709015]
[77.93219757 78.60181427]
[84.23353577 70.64587402]
[93.39640808 64.71057129]
[97.97849274 50.42755508]
[102.56056976 36.14453888]
[107.14264679 21.86152267]
[111.72473145 7.57850695]
[116.30680847 -6.70450926]
[120.88888550 -20.98752594]
[114.86053467 -35.85488892]
[122.85095215 -49.76649094]
[138.73059082 -52.05054474]
[150.31793213 -40.95491791]
[148.72416687 -24.99122429]
[135.17190552 -16.40544510]
[130.58982849 -2.12242961]
[126.00774384 12.16058636]
[121.42566681 26.44360161]
[116.84358215 40.72661972]
[112.26150513 55.00963593]
[107.67942810 69.29264832]
[120.95460510 76.27618408]
[130.12905884 64.40902710]
[139.30352783 52.54188156]
[144.20770264 36.31272888]
[161.16021729 36.53257370]
[165.64189148 52.88344574]
[151.17066956 61.71634293]
[141.99621582 73.58348846]
[132.82174683 85.45064545]
[133.90069580 90.10446930]
[134.33496094 94.78411865]
[134.13710022 99.40216064]
[149.08825684 98.19277954]
[164.03942871 96.98339844]
[178.98280334 95.68122101]
[193.91780090 94.28628540]
[208.85279846 92.89134979]
[223.78779602 91.49641418]
[238.72279358 90.10147858]
[246.95005798 86.19685364]
[253.85171509 88.78312683]
[268.80288696 87.57375336]
[281.93429565 78.74899292]
[295.24395752 85.43496704]
[310.19512939 84.22558594]
[318.47024536 80.42342377]
[325.33926392 83.09519958]
[340.30429077 82.07156372]
[355.26931763 81.04792023]
[359.55728149 78.16630554]
[364.07104492 77.28713226]
[368.01629639 78.16464996]
[370.80889893 80.27544403]
[385.80166626 79.80986786]
[400.79443359 79.34429169]
[407.98654175 65.77339935]
[421.00903320 57.63030624]
[436.35897827 57.10547256]
[449.90725708 64.34007263]
[458.00949097 77.38803864]
[458.48620605 92.73953247]
[451.20916748 106.26507568]
[438.13586426 114.32637024]
[422.78295898 114.75496674]
[409.28027344 107.43556976]
[401.26000977 94.33706665]
[386.26724243 94.80264282]
[371.27447510 95.26821899]
[356.29296875 96.01295471]
[341.32794189 97.03659058]
[326.36291504 98.06022644]
[311.40451050 99.17675781]
[296.45333862 100.38613892]
[284.39132690 109.12438965]
[270.01226807 102.52491760]
[255.06109619 103.73429871]
[240.11772156 105.03647614]
[225.18272400 106.43141174]
[210.24772644 107.82634735]
[195.31272888 109.22128296]
[180.37773132 110.61621857]
[174.02745056 114.35728455]
[165.24880981 111.93457031]
[150.29763794 113.14394379]
[135.34648132 114.35332489]
[127.08080292 126.87046051]
[131.83987427 141.09547424]
[136.59895325 155.32049561]
[141.35803223 169.54551697]
[146.11711121 183.77053833]
[154.30838013 191.41746521]
[154.15101624 201.36231995]
[161.78503418 214.27439880]
[169.41905212 227.18647766]
[177.05307007 240.09855652]
[184.68708801 253.01063538]
[192.32110596 265.92269897]
[199.95512390 278.83477783]
[207.58914185 291.74685669]
[223.04927063 293.07495117]
[234.75408936 303.26205444]
[238.20283508 318.39102173]
[232.06939697 332.64447021]
[218.71221924 340.54162598]
[203.26739502 339.04592896]
[191.67379761 328.73245239]
[188.38937378 313.56695557]
[194.67706299 299.38088989]
[187.04304504 286.46881104]
[179.40902710 273.55673218]
[171.77500916 260.64465332]
[164.14099121 247.73257446]
[156.50697327 234.82049561]
[148.87295532 221.90841675]
[141.23893738 208.99633789]
[141.90275574 223.98164368]
[138.01591492 238.46929932]
[129.94039917 251.10995483]
[118.42838287 260.72625732]
[104.55207062 266.42257690]
[89.60388947 267.66833496]
[74.97610474 264.34750366]
[62.03112793 256.76940918]
[51.97465134 245.63983154]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 218]
[10 217]
[11 216]
[12 215]
[13 214]
[15 127]
[16 126]
[17 125]
[18 124]
[19 123]
[22 121]
[23 120]
[24 119]
[25 118]
[26 117]
[27 116]
[28 115]
[29 36]
[30 35]
[47 111]
[48 110]
[49 109]
[50 108]
[51 107]
[52 106]
[53 105]
[54 104]
[55 99]
[56 98]
[57 97]
[58 96]
[59 95]
[60 94]
[61 93]
[66 88]
[67 87]
[69 84]
[70 83]
[72 82]
[73 81]
[74 80]
[75 79]
[130 148]
[131 147]
[132 146]
[133 145]
[134 144]
[135 143]
[136 142]
[149 157]
[150 156]
[151 155]
[160 213]
[161 212]
[162 211]
[163 209]
[164 208]
[165 207]
[166 206]
[167 205]
[169 204]
[170 203]
[172 201]
[173 200]
[175 199]
[176 198]
[177 197]
[181 196]
[182 195]
[183 194]
[220 243]
[221 242]
[222 241]
[223 240]
[224 239]
[225 238]
[226 237]
[227 236]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
