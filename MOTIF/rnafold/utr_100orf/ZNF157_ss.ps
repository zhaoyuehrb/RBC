%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:09:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGCUGCAGGACCCUCUACACACAGACAGCUGUCCAGCACGGAAGGUGGGCUGAGGCCCAGGGUGAACAUGCCAGCUAAUGGGACAUCACCCCAGAGAUUCCCUGCCCUGAUUCCAGGAGAACCUGGCAGAUCUUUUGAGGGGUCCGUGUCAUUCGAGGAUGUGGCUG\
) } def
/len { sequence length } bind def

/coor [
[44.22840881 473.57858276]
[36.53054428 459.09844971]
[45.45006561 445.33709717]
[45.72724915 430.33966064]
[46.00443268 415.34222412]
[46.28161621 400.34478760]
[46.55879974 385.34735107]
[46.83598328 370.34991455]
[47.11316681 355.35247803]
[39.94097137 350.00378418]
[35.99489975 341.82055664]
[36.28414536 332.60217285]
[40.87056351 324.44183350]
[48.82588959 319.25134277]
[49.93367767 304.29232788]
[51.04146576 289.33328247]
[52.14925385 274.37423706]
[45.80937958 270.36724854]
[42.10570526 284.90280151]
[27.13704491 285.87197876]
[21.58993530 271.93533325]
[33.12962723 262.35327148]
[26.78975296 258.34628296]
[13.75341892 265.76611328]
[0.71708512 273.18594360]
[-12.31924915 280.60577393]
[-20.13472176 295.02279663]
[-36.53299332 295.19238281]
[-44.64492798 280.94006348]
[-36.12565994 266.92739868]
[-19.73908615 267.56945801]
[-6.70275259 260.14959717]
[6.33358145 252.72976685]
[19.36991501 245.30993652]
[19.83817291 222.88812256]
[30.73789978 204.61054993]
[48.25564575 194.68223572]
[67.24678040 194.73059082]
[72.40602112 180.64576721]
[77.56525421 166.56094360]
[82.72448730 152.47612000]
[87.88372040 138.39129639]
[93.04295349 124.30646515]
[98.20218658 110.22164154]
[92.93334198 113.87209320]
[85.57640076 114.92844391]
[77.29795074 112.56620026]
[69.53668976 106.44520569]
[55.98798370 100.00839996]
[42.43927383 93.57158661]
[28.89056587 87.13478088]
[15.34185791 80.69796753]
[-0.95255166 82.54844666]
[-10.48342133 69.20323944]
[-3.44620895 54.39075470]
[12.91980457 53.34880829]
[21.77866745 67.14926147]
[35.32737350 73.58607483]
[48.87608337 80.02288055]
[62.42478943 86.45969391]
[75.97349548 92.89649963]
[87.42447662 83.20758057]
[83.31952667 68.78019714]
[79.21458435 54.35280991]
[75.10964203 39.92542648]
[71.00469208 25.49804115]
[66.89974976 11.07065582]
[53.15525436 8.35985661]
[41.97806549 0.02448788]
[35.52117157 -12.25857162]
[34.99747467 -26.05917549]
[40.45234299 -38.67464447]
[50.76591110 -47.65904236]
[46.92826843 -62.15982056]
[43.09062576 -76.66059875]
[30.00028992 -85.93543243]
[29.23385048 -101.96016693]
[41.37925720 -112.44199371]
[57.11959076 -109.34014893]
[64.38021851 -95.03411102]
[57.59140396 -80.49823761]
[61.42904282 -65.99745941]
[65.26668549 -51.49668503]
[80.94489288 -47.65954971]
[92.62376404 -36.38262177]
[97.05834961 -20.66789436]
[92.95053101 -4.76774263]
[81.32713318 6.96571064]
[85.43207550 21.39309502]
[89.53702545 35.82048035]
[93.64196777 50.24786377]
[97.74691010 64.67524719]
[101.85186005 79.10263062]
[99.15967560 64.34620667]
[106.06364441 51.02947998]
[119.67456818 44.72528839]
[134.29649353 48.07183075]
[143.81037903 59.66864014]
[144.23481750 74.66263580]
[135.39219666 86.77906799]
[120.98174286 90.94735718]
[135.72633362 88.19111633]
[150.47093201 85.43487549]
[165.21553040 82.67862701]
[179.96012878 79.92238617]
[184.01135254 65.24761200]
[193.99163818 53.83354568]
[207.88111877 47.90883636]
[222.90391541 48.59935379]
[236.08277893 55.71463013]
[244.82919312 67.79625702]
[259.57379150 65.04001617]
[274.31838989 62.28377151]
[289.06298828 59.52753067]
[303.75411987 56.49929428]
[318.38681030 53.20009995]
[333.01947021 49.90090179]
[347.65216064 46.60170746]
[362.28485107 43.30251312]
[373.96212769 31.78847694]
[389.69821167 36.40455246]
[393.30514526 52.40211868]
[381.07241821 63.32424927]
[365.58404541 57.93519211]
[350.95135498 61.23438644]
[336.31866455 64.53358459]
[321.68600464 67.83277893]
[307.05331421 71.13197327]
[303.77261353 74.65167999]
[298.23226929 76.12350464]
[291.81921387 74.27212524]
[277.07461548 77.02836609]
[262.33001709 79.78461456]
[247.58543396 82.54085541]
[243.79402161 96.96620178]
[234.07543945 108.36175537]
[220.31655884 114.43250275]
[205.22473145 113.92533875]
[191.79516602 106.88732910]
[182.71636963 94.66698456]
[167.97177124 97.42322540]
[153.22717285 100.17946625]
[138.48258972 102.93571472]
[123.73798370 105.69195557]
[112.28701019 115.38087463]
[107.12777710 129.46569824]
[101.96854401 143.55052185]
[96.80931091 157.63534546]
[91.65007782 171.72018433]
[86.49084473 185.80500793]
[81.33161163 199.88983154]
[93.23664856 209.28221130]
[100.62382507 223.22828674]
[101.79864502 239.58583069]
[96.06784821 255.60971069]
[83.93840790 268.41247559]
[67.10829163 275.48202515]
[66.00050354 290.44107056]
[64.89271545 305.40008545]
[63.78492737 320.35913086]
[74.30088043 339.00146484]
[62.11060333 355.62966919]
[61.83341980 370.62710571]
[61.55623627 385.62454224]
[61.27905273 400.62197876]
[61.00186920 415.61941528]
[60.72468567 430.61685181]
[60.44750214 445.61428833]
[68.85243225 459.69580078]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 168]
[4 167]
[5 166]
[6 165]
[7 164]
[8 163]
[9 162]
[14 160]
[15 159]
[16 158]
[17 157]
[23 34]
[24 33]
[25 32]
[26 31]
[38 151]
[39 150]
[40 149]
[41 148]
[42 147]
[43 146]
[44 145]
[48 61]
[49 60]
[50 59]
[51 58]
[52 57]
[62 93]
[63 92]
[64 91]
[65 90]
[66 89]
[67 88]
[73 83]
[74 82]
[75 81]
[101 144]
[102 143]
[103 142]
[104 141]
[105 140]
[111 134]
[112 133]
[113 132]
[114 131]
[115 128]
[116 127]
[117 126]
[118 125]
[119 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
