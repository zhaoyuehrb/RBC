%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:46:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUCUAUAAAUGGUAAGGCAAUCCUUGGCAGCCUGUCUGUCAGCACUGUCCGUGCCAUUCCCAGAGGAGCCUGAGAAGAGGCAGAGGAAGGCGAAACAUGGCUGCUCUAGGAGUCCAGAGUAUCAACUGGCAGACGGCCUUCAACCGACAAGCGCAUCACACAGACAAGUUCUCCAGCCAGGAGCUCAUCUUGCGGA\
) } def
/len { sequence length } bind def

/coor [
[214.48054504 293.40661621]
[204.57858276 290.62197876]
[195.41430664 285.93521118]
[187.34924316 279.52801514]
[180.70222473 271.65005493]
[175.73672485 262.60928345]
[172.65040588 252.75968933]
[171.56730652 242.48767090]
[172.53280640 232.19676208]
[175.51176453 222.29176331]
[180.38977051 213.16290283]
[186.97752380 205.17037964]
[178.08390808 193.09132385]
[169.19029236 181.01226807]
[160.10614014 169.07583618]
[150.83375549 157.28504944]
[141.56137085 145.49424744]
[132.28898621 133.70344543]
[123.01660919 121.91265869]
[98.18902588 129.08575439]
[78.68482971 115.75330353]
[76.79232788 94.42681885]
[64.04644775 86.51843262]
[51.30056763 78.61005402]
[38.55468369 70.70166779]
[20.14608192 70.54932404]
[12.45907974 54.77854156]
[-0.41067171 47.07337952]
[-13.28042316 39.36822128]
[-26.15017319 31.66305923]
[-39.01992416 23.95789719]
[-51.88967514 16.25273705]
[-64.75942993 8.54757595]
[-77.68990326 0.94475621]
[-90.68028259 -6.55524397]
[-103.67066193 -14.05524349]
[-114.00986481 -10.63436508]
[-124.31136322 -13.41703701]
[-131.23074341 -21.24939728]
[-132.66020203 -31.38035774]
[-145.40608215 -39.28874207]
[-154.35850525 -41.15739441]
[-158.29005432 -47.42506790]
[-170.90885925 -55.53467941]
[-179.83050537 -57.54513931]
[-183.66212463 -63.87440109]
[-196.15066528 -72.18320465]
[-205.03929138 -74.33496094]
[-208.77000427 -80.72421265]
[-221.12515259 -89.23011017]
[-233.48030090 -97.73600769]
[-251.86080933 -98.76409912]
[-258.78869629 -114.88278198]
[-271.27725220 -123.19158173]
[-283.76577759 -131.50038147]
[-296.25433350 -139.80918884]
[-314.64883423 -140.54553223]
[-321.83160400 -156.55226135]
[-334.45040894 -164.66186523]
[-347.06921387 -172.77148438]
[-362.86175537 -173.72338867]
[-369.38549805 -187.11331177]
[-382.00430298 -195.22291565]
[-394.62310791 -203.33253479]
[-410.01101685 -199.72860718]
[-423.39602661 -208.13200378]
[-426.83706665 -223.55714417]
[-418.29260254 -236.85255432]
[-402.83193970 -240.13031006]
[-389.62762451 -231.44577026]
[-386.51348877 -215.95132446]
[-373.89471436 -207.84172058]
[-361.27590942 -199.73210144]
[-346.38592529 -199.36026001]
[-338.95959473 -185.39028931]
[-326.34078979 -177.28067017]
[-313.72198486 -169.17106628]
[-301.83227539 -171.43452454]
[-291.25057983 -164.77249146]
[-287.94552612 -152.29772949]
[-275.45700073 -143.98893738]
[-262.96844482 -135.68013000]
[-250.47988892 -127.37133026]
[-238.55577087 -129.44586182]
[-228.08110046 -122.61679077]
[-224.97439575 -110.09115601]
[-212.61924744 -101.58525848]
[-200.26409912 -93.07936096]
[-187.84185791 -84.67175293]
[-175.35331726 -76.36294556]
[-162.79924011 -68.15348053]
[-150.18045044 -60.04387283]
[-137.49769592 -52.03462219]
[-124.75182343 -44.12623978]
[-105.43893433 -44.93921661]
[-96.17066193 -27.04562569]
[-83.18028259 -19.54562569]
[-70.18990326 -12.04562473]
[-62.81742859 -11.42313290]
[-57.05426788 -4.32217550]
[-44.18451691 3.38298559]
[-31.31476402 11.08814621]
[-18.44501305 18.79330826]
[-5.57526207 26.49846840]
[7.29448938 34.20362854]
[20.16423988 41.90879059]
[31.97615242 39.26923752]
[42.76388931 45.59217072]
[46.46306610 57.95579147]
[59.20895004 65.86417389]
[71.95483398 73.77255249]
[84.70071411 81.68093872]
[95.58266449 73.86592102]
[110.29128265 72.73554993]
[124.68079376 79.98033142]
[134.85842896 68.96145630]
[145.03607178 57.94257736]
[155.21371460 46.92370224]
[152.04849243 31.73288345]
[158.44740295 17.59663200]
[171.94993591 9.95062542]
[187.36407471 11.73491001]
[198.76278687 22.26339149]
[201.76303101 37.48765564]
[195.21115112 51.55365753]
[181.62648010 59.05273819]
[166.23258972 57.10134506]
[156.05494690 68.12021637]
[145.87730408 79.13909149]
[135.69966125 90.15796661]
[148.12605286 81.75648499]
[162.97831726 83.85658264]
[172.58819580 95.37397003]
[171.99407959 110.36220551]
[161.50273132 121.08281708]
[146.53085327 122.00074005]
[134.80740356 112.64027405]
[144.07978821 124.43106842]
[153.35217285 136.22186279]
[162.62455750 148.01266479]
[171.89694214 159.80345154]
[177.89831543 162.61833191]
[181.09042358 167.33641052]
[181.26934814 172.11865234]
[190.16296387 184.19770813]
[199.05657959 196.27676392]
[218.40071106 190.45695496]
[238.47648621 192.41174316]
[256.28170776 201.82595825]
[269.16229248 217.27069092]
[275.20806885 236.42001343]
[273.53588867 256.40130615]
[264.41864014 274.22616577]
[274.76980591 285.08215332]
[285.12100220 295.93817139]
[295.47216797 306.79418945]
[296.98162842 291.87033081]
[308.50827026 282.27154541]
[323.45886230 283.48837280]
[333.28158569 294.82476807]
[332.35787964 309.79629517]
[321.21609497 319.83923340]
[306.22988892 319.20922852]
[315.50225830 331.00003052]
[324.77465820 342.79083252]
[340.22039795 344.80749512]
[349.45593262 356.89712524]
[347.43817139 371.60983276]
[356.71057129 383.40063477]
[365.98294067 395.19143677]
[375.25534058 406.98223877]
[384.52770996 418.77304077]
[393.80010986 430.56381226]
[409.43450928 430.87908936]
[421.17440796 441.20907593]
[423.47659302 456.67626953]
[415.25402832 469.97753906]
[400.38919067 474.83242798]
[385.90075684 468.94860840]
[378.62973022 455.10421753]
[382.00930786 439.83621216]
[372.73690796 428.04541016]
[363.46453857 416.25460815]
[354.19213867 404.46380615]
[344.91976929 392.67303467]
[335.64736938 380.88223267]
[320.87368774 379.37445068]
[311.30218506 367.54901123]
[312.98385620 352.06320190]
[303.71145630 340.27239990]
[294.43908691 328.48162842]
[284.61618042 317.14538574]
[274.26498413 306.28936768]
[263.91378784 295.43334961]
[253.56262207 284.57733154]
[244.66233826 289.67639160]
[234.92419434 292.92147827]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 146]
[13 145]
[14 144]
[15 141]
[16 140]
[17 139]
[18 138]
[19 137]
[22 112]
[23 111]
[24 110]
[25 109]
[27 106]
[28 105]
[29 104]
[30 103]
[31 102]
[32 101]
[33 100]
[34 98]
[35 97]
[36 96]
[40 94]
[41 93]
[43 92]
[44 91]
[46 90]
[47 89]
[49 88]
[50 87]
[51 86]
[53 83]
[54 82]
[55 81]
[56 80]
[58 77]
[59 76]
[60 75]
[62 73]
[63 72]
[64 71]
[115 130]
[116 129]
[117 128]
[118 127]
[153 195]
[154 194]
[155 193]
[156 192]
[163 191]
[164 190]
[165 189]
[168 186]
[169 185]
[170 184]
[171 183]
[172 182]
[173 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
