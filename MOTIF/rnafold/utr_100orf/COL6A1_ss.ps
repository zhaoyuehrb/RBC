%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:13:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCUCACUCUGGCUGGGAGCAGAAGGCAGCCUCGGUCUCUGGGCGGCGGCGGCGGCCCACUCUGCCCUGGCCGCGCUGUGUGGUGACCGCAGGCCCCAGACAUGAGGGCGGCCCGUGCUCUGCUGCCCCUGCUGCUGCAGGCCUGCUGGACAGCCGCGCAGGAUGAGCCGGAGACCCCGAGGGCCGUGGCCUUCCAGGACU\
) } def
/len { sequence length } bind def

/coor [
[23.45753098 468.22308350]
[18.44860458 482.36206055]
[13.43967819 496.50103760]
[8.43075180 510.64001465]
[3.42182517 524.77899170]
[-1.58710122 538.91796875]
[-6.59602737 553.05694580]
[1.49428451 566.43902588]
[-0.96109909 581.88262939]
[-12.80282116 592.09576416]
[-28.43958282 592.25604248]
[-40.48818207 582.28784180]
[-43.25964355 566.89782715]
[-35.44536209 553.35266113]
[-20.73500443 548.04803467]
[-15.72607803 533.90905762]
[-10.71715164 519.77008057]
[-5.70822525 505.63107300]
[-0.69929868 491.49209595]
[4.30962753 477.35311890]
[9.31855392 463.21414185]
[2.12192130 440.63174438]
[20.58865356 424.66854858]
[24.03952599 410.07089233]
[27.49039841 395.47323608]
[30.94126892 380.87557983]
[34.39213943 366.27792358]
[37.84301376 351.68026733]
[25.67412758 335.26406860]
[29.62085342 314.91503906]
[47.54503632 303.93145752]
[50.08623505 289.14825439]
[52.62742996 274.36508179]
[55.16862488 259.58190918]
[57.48074341 244.76118469]
[59.56323242 229.90644836]
[61.64572144 215.05171204]
[63.72820663 200.19696045]
[65.81069946 185.34222412]
[67.89318085 170.48748779]
[69.97566986 155.63275146]
[72.05815887 140.77801514]
[74.14064789 125.92327881]
[65.91597748 113.37915802]
[51.46273041 109.36623383]
[37.00947952 105.35330963]
[22.55623055 101.34038544]
[8.10298061 97.32746124]
[-6.38088799 93.42649078]
[-20.89450836 89.63771820]
[-29.99492645 90.49800110]
[-35.60252380 85.67637634]
[-50.05577469 81.66345215]
[-64.50902557 77.65052795]
[-78.96227264 73.63760376]
[-93.41552734 69.62467957]
[-107.04813385 77.62014008]
[-122.32020569 73.55328369]
[-130.17109680 59.83689880]
[-125.94300079 44.60867691]
[-112.14437866 36.90325165]
[-96.96170807 41.29211044]
[-89.40259552 55.17142868]
[-74.94934845 59.18435287]
[-60.49609756 63.19727707]
[-46.04285049 67.21020508]
[-31.58959961 71.22312927]
[-17.10573006 75.12409210]
[-2.59211040 78.91287231]
[4.67853832 77.55976868]
[12.11590576 82.87421417]
[26.56915474 86.88713837]
[41.02240372 90.90006256]
[55.47565460 94.91298676]
[69.92890167 98.92591095]
[83.59098816 78.15113068]
[105.99932098 76.18528748]
[113.93060303 63.45364380]
[121.86188507 50.72200012]
[129.79316711 37.99035645]
[137.72444153 25.25871277]
[145.65573120 12.52707005]
[153.58702087 -0.20457432]
[161.51829529 -12.93621826]
[169.44958496 -25.66786194]
[165.17860413 -42.62873077]
[174.31312561 -57.14676666]
[190.78990173 -60.50202179]
[198.52320862 -73.35488129]
[206.15682983 -86.26718903]
[213.69030762 -99.23818207]
[221.22380066 -112.20917511]
[228.75727844 -125.18016815]
[236.29075623 -138.15116882]
[243.82423401 -151.12216187]
[251.35772705 -164.09315491]
[250.97518921 -182.50038147]
[266.51904297 -190.64038086]
[273.85089111 -203.72640991]
[281.18273926 -216.81242371]
[282.64898682 -225.83505249]
[288.73065186 -230.04295349]
[296.26416016 -243.01394653]
[292.43469238 -258.11273193]
[300.25949097 -271.15985107]
[314.67745972 -274.71759033]
[322.21093750 -287.68859863]
[329.74441528 -300.65957642]
[337.27789307 -313.63058472]
[344.71078491 -326.65948486]
[352.04263306 -339.74548340]
[359.37448120 -352.83151245]
[366.70632935 -365.91754150]
[359.37023926 -379.48901367]
[360.55880737 -394.87054443]
[369.89276123 -407.15390015]
[384.39367676 -412.41949463]
[399.43438721 -408.98715210]
[410.21542358 -397.95208740]
[413.29660034 -382.83554077]
[407.69473267 -368.46115112]
[395.19735718 -359.41577148]
[379.79235840 -358.58569336]
[372.46051025 -345.49966431]
[365.12866211 -332.41363525]
[357.79681396 -319.32763672]
[357.26956177 -311.95095825]
[350.24890137 -306.09710693]
[342.71539307 -293.12609863]
[335.18191528 -280.15512085]
[327.64843750 -267.18411255]
[331.70266724 -252.89779663]
[324.24743652 -239.63604736]
[309.23513794 -235.48046875]
[301.70166016 -222.50947571]
[294.26876831 -209.48057556]
[286.93692017 -196.39456177]
[279.60507202 -183.30853271]
[282.58331299 -171.58020020]
[276.57678223 -160.61625671]
[264.32870483 -156.55966187]
[256.79522705 -143.58866882]
[249.26174927 -130.61767578]
[241.72827148 -117.64669037]
[234.19479370 -104.67569733]
[226.66130066 -91.70470428]
[219.12782288 -78.73371124]
[218.48651123 -71.36608124]
[211.37606812 -65.62157440]
[203.64276123 -52.76871490]
[208.47196960 -40.81864548]
[205.49015808 -28.07936287]
[195.56822205 -19.25515747]
[182.18122864 -17.73657990]
[174.24993896 -5.00493574]
[166.31866455 7.72670794]
[158.38737488 20.45835304]
[150.45610046 33.18999481]
[142.52481079 45.92163849]
[134.59352112 58.65328598]
[126.66224670 71.38492584]
[118.73096466 84.11656952]
[124.02230835 91.90685272]
[126.10192108 101.39521790]
[124.45808411 111.26919556]
[119.11018372 120.07929993]
[110.63612366 126.45153809]
[100.11585236 129.29981995]
[88.99538422 128.00576782]
[86.91289520 142.86050415]
[84.83041382 157.71524048]
[82.74792480 172.56997681]
[80.66543579 187.42471313]
[78.58294678 202.27944946]
[76.50045776 217.13420105]
[74.41796875 231.98893738]
[72.33547974 246.84367371]
[74.45954895 253.11558533]
[73.27116394 258.68124390]
[69.95180511 262.12310791]
[67.41060638 276.90628052]
[64.86940765 291.68945312]
[62.32821655 306.47265625]
[69.99175262 312.44595337]
[74.92063904 320.75219727]
[76.47274780 330.22653198]
[74.47611237 339.55801392]
[69.24684143 347.47103882]
[61.53997421 352.89965820]
[52.44066620 355.13116455]
[48.98979568 369.72882080]
[45.53892136 384.32644653]
[42.08805084 398.92410278]
[38.63718033 413.52175903]
[35.18630600 428.11941528]
[39.87574387 432.36795044]
[43.16958618 437.72354126]
[44.82445145 443.74740601]
[44.73016357 449.95339966]
[42.91679001 455.84707642]
[39.55044937 460.96524048]
[34.91835785 464.91220093]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 21]
[2 20]
[3 19]
[4 18]
[5 17]
[6 16]
[7 15]
[23 195]
[24 194]
[25 193]
[26 192]
[27 191]
[28 190]
[31 183]
[32 182]
[33 181]
[34 180]
[35 177]
[36 176]
[37 175]
[38 174]
[39 173]
[40 172]
[41 171]
[42 170]
[43 169]
[44 75]
[45 74]
[46 73]
[47 72]
[48 71]
[49 69]
[50 68]
[52 67]
[53 66]
[54 65]
[55 64]
[56 63]
[77 162]
[78 161]
[79 160]
[80 159]
[81 158]
[82 157]
[83 156]
[84 155]
[85 154]
[88 150]
[89 149]
[90 147]
[91 146]
[92 145]
[93 144]
[94 143]
[95 142]
[96 141]
[98 138]
[99 137]
[100 136]
[102 135]
[103 134]
[106 131]
[107 130]
[108 129]
[109 128]
[110 126]
[111 125]
[112 124]
[113 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
