%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:09:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGUAGGCUACUGUUGCUCUAGGGUGGCAGGGGUUAGGGAAAAAUCAGGAGAGGCUGUAGGCUACUGUUCAUCUAGGAUGGCAGAGUUUAGUGAAGAAGAGGAAGACACUGUACGCUACUGUUGUUCUACAAUAGAAGAUGUUCCUGAAGAAAUAAAAGAGGCUAUAGCCUACUUUU\
) } def
/len { sequence length } bind def

/coor [
[81.46199036 405.13360596]
[89.87999725 391.05990601]
[89.61674500 376.06222534]
[89.35350037 361.06454468]
[89.09024811 346.06683350]
[88.82700348 331.06915283]
[88.56375122 316.07147217]
[88.30050659 301.07376099]
[88.03725433 286.07608032]
[87.77400970 271.07839966]
[87.51075745 256.08068848]
[76.65045929 245.95205688]
[76.16983795 230.74601746]
[86.86732483 219.42341614]
[86.60408020 204.42572021]
[83.83025360 200.50547791]
[83.50932312 194.79481506]
[86.60408020 188.89921570]
[86.86732483 173.90153503]
[87.13057709 158.90383911]
[87.39382172 143.90615845]
[76.06018066 116.76007843]
[87.26388550 99.11180878]
[72.43049622 96.88237762]
[57.59709930 94.65293884]
[42.76370239 92.42350006]
[27.93030739 90.19406891]
[13.09691143 87.96463013]
[-1.75547647 85.86544800]
[-16.62571335 83.89668274]
[-31.49595070 81.92790985]
[-46.38289261 80.08971405]
[-61.28538895 78.38221741]
[-75.87661743 84.49831390]
[-87.64040375 75.36252594]
[-102.54290009 73.65502930]
[-117.44540405 71.94753265]
[-132.03663635 78.06362915]
[-143.80041504 68.92784119]
[-158.70291138 67.22034454]
[-165.17042542 75.76900482]
[-174.53913879 80.80954742]
[-185.07516479 81.48559570]
[-194.86010742 77.74157715]
[-202.14039612 70.32059479]
[-205.64151001 60.61801910]
[-220.43350220 58.12860107]
[-235.60205078 64.36135101]
[-248.41694641 54.12854004]
[-245.69532776 37.95681000]
[-230.23695374 32.48225021]
[-217.94407654 43.33661652]
[-203.15209961 45.82603455]
[-188.19329834 33.38445663]
[-168.59979248 35.94921875]
[-156.99542236 52.31784821]
[-142.09292603 54.02534103]
[-128.56761169 47.78711700]
[-115.73790741 57.04503632]
[-100.83541107 58.75252914]
[-85.93290710 60.46002579]
[-72.40760803 54.22179794]
[-59.57789612 63.47972107]
[-44.67539978 65.18721008]
[-37.65165710 62.81792450]
[-29.52718353 67.05767822]
[-14.65694618 69.02644348]
[0.21329127 70.99520874]
[7.27753019 68.74954987]
[15.32634735 73.13123322]
[30.15974236 75.36067200]
[44.99313736 77.59011078]
[59.82653427 79.81954193]
[74.65992737 82.04898071]
[89.49332428 84.27841187]
[102.77986908 77.31653595]
[109.38958740 63.85133743]
[115.99931335 50.38613892]
[122.60903931 36.92094040]
[129.21876526 23.45574379]
[135.82849121 9.99054623]
[142.43821716 -3.47465158]
[149.04794312 -16.93984985]
[155.65765381 -30.40504646]
[162.26737976 -43.87024307]
[168.75869751 -57.39292526]
[175.13108826 -70.97204590]
[181.50347900 -84.55117035]
[178.86421204 -104.51688385]
[195.14257812 -114.92121887]
[201.03450012 -128.71562195]
[206.92640686 -142.51000977]
[212.81832886 -156.30439758]
[218.71025085 -170.09880066]
[208.31826782 -181.23103333]
[203.35874939 -195.62974548]
[204.69094849 -210.80027771]
[212.08407593 -224.11424255]
[224.25720215 -233.26492310]
[239.10127258 -236.66688538]
[254.04446411 -233.73074341]
[266.49777222 -224.96517944]
[274.30358887 -211.88890076]
[276.10949707 -196.76744080]
[271.60263062 -182.22068787]
[261.56384277 -170.76895142]
[247.73237610 -164.39631653]
[232.50463867 -164.20687866]
[226.61271667 -150.41249084]
[220.72080994 -136.61808777]
[214.82888794 -122.82369995]
[208.93696594 -109.02930450]
[213.59281921 -99.89349365]
[212.41117859 -89.48664856]
[205.54338074 -81.28984833]
[195.08261108 -78.17877960]
[188.71020508 -64.59965515]
[182.33781433 -51.02053070]
[182.34263611 -43.60794449]
[175.73258972 -37.26052094]
[169.12286377 -23.79532242]
[162.51313782 -10.33012486]
[155.90341187 3.13507271]
[149.29368591 16.60027122]
[142.68395996 30.06546783]
[136.07423401 43.53066635]
[129.46450806 56.99586487]
[122.85478973 70.46105957]
[116.24506378 83.92626190]
[119.49071503 90.68759918]
[127.95597076 78.30456543]
[142.91262817 79.44408417]
[149.40419006 92.96664429]
[140.93916321 105.34983826]
[125.98202515 104.21028137]
[129.22767639 110.97161865]
[143.86814880 114.23606110]
[158.50862122 117.50050354]
[173.98417664 112.07468414]
[186.24278259 122.96773529]
[182.67384338 138.97381592]
[166.94877625 143.62724304]
[155.24418640 132.14097595]
[140.60371399 128.87654114]
[125.96324158 125.61209106]
[120.07031250 130.25141907]
[131.35346985 140.13525391]
[142.63664246 150.01908875]
[157.23715210 153.45788574]
[166.88365173 164.94461060]
[167.74711609 179.91973877]
[159.48477173 192.43907166]
[145.37628174 197.53321838]
[131.02182007 193.18011475]
[122.11922455 181.10766602]
[122.20294952 166.10591125]
[115.24369812 152.81799316]
[108.28444672 139.53007507]
[102.39151764 144.16940308]
[102.12826538 159.16709900]
[101.86502075 174.16477966]
[101.60176849 189.16247559]
[101.60176849 204.16247559]
[101.86502075 219.16015625]
[112.95327759 230.10037231]
[113.00659943 245.31391907]
[102.50844574 255.81745911]
[102.77169800 270.81515503]
[103.03494263 285.81283569]
[103.29819489 300.81051636]
[103.56143951 315.80822754]
[103.82469177 330.80590820]
[104.08793640 345.80358887]
[104.35118866 360.80126953]
[104.61443329 375.79898071]
[104.87768555 390.79666138]
[113.78441620 404.56628418]
[106.07309723 419.03927612]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 176]
[3 175]
[4 174]
[5 173]
[6 172]
[7 171]
[8 170]
[9 169]
[10 168]
[11 167]
[14 164]
[15 163]
[18 162]
[19 161]
[20 160]
[21 159]
[23 75]
[24 74]
[25 73]
[26 72]
[27 71]
[28 70]
[29 68]
[30 67]
[31 66]
[32 64]
[33 63]
[35 61]
[36 60]
[37 59]
[39 57]
[40 56]
[46 53]
[47 52]
[76 129]
[77 128]
[78 127]
[79 126]
[80 125]
[81 124]
[82 123]
[83 122]
[84 121]
[85 120]
[86 118]
[87 117]
[88 116]
[90 112]
[91 111]
[92 110]
[93 109]
[94 108]
[136 145]
[137 144]
[138 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
