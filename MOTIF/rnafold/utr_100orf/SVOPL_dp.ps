%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:06:14 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SVOPL)
} def

/sequence { (\
AUGGCAACCAAGCCAACAGAGCCUGUCACGAUCCUCAGCCUUCGGAAAUUGAGCCUGGGGACCGCAGAGCCACAGGUUAAAGAGCCAAAGACGUUCACCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 94 0.003604345 ubox
2 10 0.020865462 ubox
2 15 0.889829816 ubox
2 18 0.009612156 ubox
2 72 0.015575568 ubox
2 87 0.130797642 ubox
2 93 0.003423863 ubox
2 97 0.005963771 ubox
2 100 0.008852666 ubox
3 9 0.023162685 ubox
3 14 0.988511130 ubox
3 17 0.005908361 ubox
3 23 0.004703963 ubox
3 71 0.017865811 ubox
3 86 0.145191438 ubox
3 99 0.012216704 ubox
4 8 0.022793209 ubox
4 13 0.988730227 ubox
4 22 0.004735325 ubox
4 70 0.017852544 ubox
4 85 0.145219613 ubox
4 98 0.011865229 ubox
5 12 0.987855752 ubox
5 21 0.004733489 ubox
5 69 0.017832208 ubox
5 84 0.145009435 ubox
6 78 0.009306175 ubox
6 95 0.003253244 ubox
7 77 0.009441618 ubox
7 94 0.003495466 ubox
8 76 0.009453405 ubox
8 93 0.003504354 ubox
9 25 0.006943329 ubox
9 75 0.009437282 ubox
10 24 0.006973395 ubox
10 78 0.005600621 ubox
11 77 0.004262753 ubox
11 78 0.127459127 ubox
12 22 0.014475928 ubox
12 77 0.143766332 ubox
12 85 0.007308757 ubox
13 21 0.014511016 ubox
13 76 0.144483842 ubox
13 84 0.007318964 ubox
14 75 0.144241507 ubox
15 78 0.032724226 ubox
15 95 0.018596384 ubox
16 26 0.097043163 ubox
16 77 0.046514751 ubox
16 94 0.029033624 ubox
17 25 0.103058860 ubox
17 76 0.047866240 ubox
17 93 0.030012128 ubox
18 24 0.102871270 ubox
18 78 0.019369837 ubox
19 23 0.100625415 ubox
19 27 0.020416150 ubox
19 42 0.003190604 ubox
19 77 0.006690047 ubox
19 78 0.057236938 ubox
19 95 0.004820485 ubox
19 96 0.189503427 ubox
20 26 0.020201241 ubox
20 41 0.003481956 ubox
20 77 0.049236270 ubox
20 78 0.809372384 ubox
20 94 0.004947115 ubox
20 95 0.189280825 ubox
21 40 0.003582916 ubox
21 65 0.003420506 ubox
21 70 0.383696509 ubox
21 77 0.886003046 ubox
21 85 0.005098022 ubox
21 94 0.185501304 ubox
22 64 0.003239169 ubox
22 69 0.384461975 ubox
22 76 0.893163577 ubox
22 84 0.005083218 ubox
22 93 0.182726149 ubox
23 38 0.006327529 ubox
23 67 0.403807653 ubox
23 69 0.016386671 ubox
23 75 0.893221100 ubox
23 90 0.011970784 ubox
24 37 0.006584277 ubox
24 66 0.404029481 ubox
24 68 0.017804880 ubox
24 72 0.015978570 ubox
24 74 0.892728463 ubox
24 89 0.011689655 ubox
24 93 0.038048665 ubox
25 36 0.006585161 ubox
25 65 0.403726941 ubox
25 70 0.058125693 ubox
25 71 0.021957281 ubox
25 73 0.890624431 ubox
25 92 0.155240601 ubox
26 64 0.267318990 ubox
26 68 0.511564916 ubox
26 69 0.055027118 ubox
26 72 0.713030532 ubox
26 91 0.156638961 ubox
27 67 0.671757444 ubox
27 90 0.156481476 ubox
28 94 0.003467474 ubox
29 44 0.004065182 ubox
29 64 0.938883270 ubox
29 93 0.003677768 ubox
29 100 0.004163588 ubox
30 43 0.004603123 ubox
30 63 0.973095163 ubox
30 92 0.003557347 ubox
30 99 0.004270216 ubox
31 42 0.004549068 ubox
32 46 0.003868255 ubox
32 60 0.005952253 ubox
32 61 0.982867828 ubox
32 68 0.004658046 ubox
33 45 0.004150208 ubox
33 59 0.006864098 ubox
33 60 0.999861678 ubox
33 67 0.003693961 ubox
34 44 0.004147479 ubox
34 58 0.007050534 ubox
34 59 0.999876343 ubox
34 69 0.004566826 ubox
35 58 0.999238231 ubox
35 68 0.004584795 ubox
36 57 0.999835358 ubox
36 67 0.004569332 ubox
37 56 0.999447103 ubox
38 54 0.148442318 ubox
38 55 0.986236568 ubox
38 65 0.004545066 ubox
39 45 0.020255004 ubox
39 53 0.198313526 ubox
39 60 0.004189055 ubox
39 64 0.004520990 ubox
40 44 0.020179278 ubox
40 53 0.893696991 ubox
40 59 0.004223742 ubox
40 60 0.004590566 ubox
40 90 0.007597365 ubox
41 48 0.006124425 ubox
41 52 0.792210108 ubox
41 53 0.355268380 ubox
41 58 0.004136643 ubox
41 59 0.004595489 ubox
41 89 0.007700890 ubox
42 46 0.003767729 ubox
42 47 0.008231539 ubox
42 51 0.661238759 ubox
42 52 0.600175199 ubox
42 57 0.003874116 ubox
42 58 0.004661010 ubox
42 88 0.007445708 ubox
43 51 0.736303273 ubox
43 57 0.004751237 ubox
44 50 0.676715448 ubox
44 55 0.010191188 ubox
44 56 0.004292617 ubox
44 86 0.008848205 ubox
45 49 0.440465820 ubox
45 54 0.011369334 ubox
45 55 0.004282627 ubox
45 85 0.008886392 ubox
49 81 0.007102280 ubox
50 80 0.006261537 ubox
52 78 0.009230309 ubox
53 70 0.004200863 ubox
53 77 0.010297452 ubox
54 69 0.004214174 ubox
54 76 0.010445196 ubox
55 67 0.004273532 ubox
55 75 0.010446211 ubox
56 66 0.004271446 ubox
56 74 0.010442480 ubox
57 65 0.004265498 ubox
57 73 0.010413981 ubox
58 71 0.009176353 ubox
59 70 0.009175554 ubox
59 71 0.004851577 ubox
60 70 0.004922576 ubox
61 77 0.004258927 ubox
62 76 0.005476347 ubox
63 75 0.005491518 ubox
63 100 0.017001597 ubox
64 70 0.138276894 ubox
64 85 0.013948620 ubox
64 99 0.019433792 ubox
65 69 0.141352283 ubox
65 84 0.014343971 ubox
67 78 0.004810072 ubox
67 96 0.092366062 ubox
68 77 0.004431330 ubox
68 78 0.086483597 ubox
68 95 0.092609456 ubox
69 77 0.094642499 ubox
69 85 0.005042224 ubox
69 94 0.092681578 ubox
70 76 0.095392116 ubox
70 84 0.005042180 ubox
70 93 0.092551146 ubox
71 75 0.094799152 ubox
72 94 0.006355616 ubox
73 93 0.006775135 ubox
75 86 0.289458043 ubox
75 99 0.275519348 ubox
76 85 0.289792827 ubox
76 92 0.010055522 ubox
76 98 0.275853330 ubox
77 83 0.009308793 ubox
77 84 0.287344155 ubox
77 91 0.010049418 ubox
77 97 0.273442800 ubox
78 82 0.010168798 ubox
78 83 0.250073065 ubox
78 90 0.009826406 ubox
79 95 0.013003113 ubox
80 94 0.011716564 ubox
80 95 0.007087731 ubox
81 94 0.007380527 ubox
81 95 0.004079401 ubox
82 94 0.003325415 ubox
82 95 0.008207065 ubox
82 96 0.926311293 ubox
83 94 0.008682920 ubox
83 95 0.926853991 ubox
84 94 0.926917172 ubox
85 93 0.926573917 ubox
87 95 0.008076387 ubox
88 94 0.008631881 ubox
88 95 0.019360187 ubox
89 94 0.020488943 ubox
89 95 0.006786387 ubox
90 94 0.005462108 ubox
90 96 0.065160643 ubox
91 95 0.056760285 ubox
92 100 0.067512484 ubox
93 99 0.069944851 ubox
2 15 0.9500000 lbox
3 14 0.9500000 lbox
4 13 0.9500000 lbox
5 12 0.9500000 lbox
20 78 0.9500000 lbox
21 77 0.9500000 lbox
22 76 0.9500000 lbox
23 75 0.9500000 lbox
24 74 0.9500000 lbox
25 73 0.9500000 lbox
26 72 0.9500000 lbox
29 64 0.9500000 lbox
30 63 0.9500000 lbox
32 61 0.9500000 lbox
33 60 0.9500000 lbox
34 59 0.9500000 lbox
35 58 0.9500000 lbox
36 57 0.9500000 lbox
37 56 0.9500000 lbox
38 55 0.9500000 lbox
40 53 0.9500000 lbox
41 52 0.9500000 lbox
42 51 0.9500000 lbox
82 96 0.9500000 lbox
83 95 0.9500000 lbox
84 94 0.9500000 lbox
85 93 0.9500000 lbox
showpage
end
%%EOF
