%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:28:37 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR5K4)
} def

/sequence { (\
AUGGCUAGGGAAAAUCACUCCUUAGCAGCUGAAUUCAUCCUCAUAGGAUUUACAAAUUAUCCAGAGCUGAAGACGCUUCUGUUUGUGGUGUUCUCUGCCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 100 0.810085450 ubox
3 99 0.999570367 ubox
4 26 0.006904212 ubox
4 98 0.999927190 ubox
5 25 0.006986331 ubox
5 97 0.981580066 ubox
6 24 0.007043888 ubox
6 97 0.189621231 ubox
7 23 0.007043563 ubox
7 94 0.003265210 ubox
7 96 0.978017410 ubox
8 22 0.007045346 ubox
8 93 0.003236628 ubox
8 94 0.026386255 ubox
8 95 0.999304112 ubox
8 96 0.009630441 ubox
9 21 0.007053199 ubox
9 93 0.029088147 ubox
9 94 0.998807226 ubox
9 95 0.010474341 ubox
10 20 0.007052608 ubox
10 92 0.028640015 ubox
10 93 0.999504384 ubox
11 19 0.006869907 ubox
11 91 0.029519564 ubox
11 92 0.996701403 ubox
12 91 0.854072232 ubox
12 92 0.020383258 ubox
13 91 0.024707230 ubox
14 89 0.981591877 ubox
14 91 0.005318514 ubox
15 88 0.995421688 ubox
16 87 0.999258959 ubox
16 90 0.034321297 ubox
17 86 0.999059861 ubox
17 89 0.034380419 ubox
17 91 0.005308071 ubox
18 85 0.998185389 ubox
18 88 0.034316496 ubox
18 90 0.005992651 ubox
19 48 0.005957588 ubox
19 73 0.007630100 ubox
19 87 0.031705320 ubox
20 47 0.006383974 ubox
20 72 0.007934740 ubox
20 87 0.010034080 ubox
20 88 0.006725305 ubox
21 28 0.003301514 ubox
21 46 0.006385434 ubox
21 72 0.004571310 ubox
21 87 0.006829939 ubox
22 32 0.012231620 ubox
22 45 0.006088728 ubox
22 70 0.014103210 ubox
22 71 0.004329064 ubox
23 31 0.012982066 ubox
23 69 0.014808506 ubox
23 70 0.003555478 ubox
23 81 0.969883594 ubox
23 85 0.005663504 ubox
24 30 0.013107859 ubox
24 68 0.015050127 ubox
24 77 0.024764305 ubox
24 78 0.004592833 ubox
24 80 0.991313519 ubox
24 83 0.066663821 ubox
24 84 0.008032374 ubox
25 29 0.012843111 ubox
25 67 0.015079115 ubox
25 76 0.025166742 ubox
25 79 0.991699790 ubox
25 82 0.082474064 ubox
25 83 0.005742502 ubox
26 66 0.015061068 ubox
26 69 0.015567345 ubox
26 75 0.025100612 ubox
26 81 0.083243185 ubox
27 41 0.003593866 ubox
27 68 0.015838884 ubox
27 77 0.975736253 ubox
27 78 0.046270609 ubox
27 80 0.081549684 ubox
28 40 0.003693652 ubox
28 67 0.015857893 ubox
28 76 0.995460578 ubox
28 77 0.025735729 ubox
28 79 0.079742408 ubox
28 98 0.003279979 ubox
29 64 0.014512995 ubox
29 66 0.015823231 ubox
29 72 0.021429014 ubox
29 75 0.982629015 ubox
29 97 0.003280181 ubox
30 37 0.008235206 ubox
30 43 0.008785678 ubox
30 52 0.006465580 ubox
30 54 0.003314986 ubox
30 63 0.014605303 ubox
30 65 0.014946494 ubox
30 71 0.018857357 ubox
30 75 0.172400349 ubox
31 36 0.009838053 ubox
31 39 0.004880957 ubox
31 42 0.011442286 ubox
31 51 0.007957888 ubox
31 53 0.003700788 ubox
31 61 0.004224059 ubox
31 62 0.014465609 ubox
31 74 0.740328136 ubox
32 38 0.004702202 ubox
32 41 0.011333704 ubox
32 50 0.008190518 ubox
32 58 0.008700345 ubox
32 60 0.004398572 ubox
32 78 0.003270905 ubox
33 49 0.007922434 ubox
33 57 0.009422719 ubox
33 60 0.008809866 ubox
33 77 0.003223061 ubox
34 48 0.007686114 ubox
34 56 0.009453174 ubox
34 59 0.008982912 ubox
34 70 0.011990535 ubox
34 71 0.988306038 ubox
34 72 0.013467537 ubox
34 73 0.006491009 ubox
35 47 0.007611101 ubox
35 55 0.008843599 ubox
35 69 0.007629095 ubox
35 70 0.997755870 ubox
35 71 0.011041415 ubox
35 72 0.004988160 ubox
35 73 0.030757615 ubox
36 46 0.007588002 ubox
36 69 0.998413944 ubox
36 72 0.031212888 ubox
37 49 0.026189532 ubox
37 68 0.968073609 ubox
38 48 0.032014730 ubox
38 65 0.013743257 ubox
38 70 0.031204558 ubox
38 73 0.003433465 ubox
39 47 0.032319628 ubox
39 64 0.012831205 ubox
39 69 0.031477393 ubox
39 72 0.003530176 ubox
40 46 0.032318279 ubox
40 64 0.027301622 ubox
40 66 0.994968302 ubox
41 45 0.029122838 ubox
41 63 0.027772328 ubox
41 65 0.998102892 ubox
41 70 0.003186347 ubox
42 64 0.997665034 ubox
42 69 0.003282184 ubox
43 60 0.016823243 ubox
43 68 0.003185466 ubox
44 59 0.017180606 ubox
45 58 0.016898118 ubox
46 57 0.015764869 ubox
46 61 0.007898818 ubox
46 62 0.997440311 ubox
47 58 0.045372470 ubox
47 60 0.005217551 ubox
47 61 0.997967174 ubox
48 57 0.049538948 ubox
48 60 0.995197776 ubox
49 55 0.017717171 ubox
49 56 0.059745804 ubox
49 59 0.976469905 ubox
50 54 0.022613874 ubox
50 55 0.062955985 ubox
50 56 0.088188617 ubox
51 55 0.081576886 ubox
51 59 0.056654164 ubox
51 87 0.003538427 ubox
52 58 0.072990025 ubox
52 86 0.004347459 ubox
53 85 0.004541032 ubox
54 84 0.004656940 ubox
55 83 0.004668308 ubox
56 82 0.004619792 ubox
57 65 0.003269285 ubox
58 64 0.003358027 ubox
59 84 0.004662339 ubox
62 69 0.003807294 ubox
62 81 0.016496701 ubox
63 68 0.003548303 ubox
63 80 0.016709142 ubox
64 78 0.007547959 ubox
64 79 0.016672689 ubox
64 84 0.007871433 ubox
65 77 0.013964161 ubox
65 78 0.012106367 ubox
65 83 0.008577516 ubox
66 76 0.018095228 ubox
66 77 0.003833819 ubox
66 82 0.008865604 ubox
67 75 0.018113029 ubox
67 81 0.008952230 ubox
68 75 0.003615045 ubox
69 74 0.007339731 ubox
69 79 0.009247750 ubox
70 78 0.009381954 ubox
71 77 0.009381656 ubox
71 80 0.005358746 ubox
71 84 0.015946187 ubox
72 76 0.009184244 ubox
72 79 0.005551598 ubox
72 83 0.017591292 ubox
72 92 0.004047626 ubox
73 78 0.005002970 ubox
73 82 0.018030646 ubox
73 91 0.004233240 ubox
74 81 0.018129162 ubox
74 90 0.004314360 ubox
75 80 0.012292111 ubox
75 82 0.006412188 ubox
75 89 0.004312815 ubox
76 81 0.006689723 ubox
76 88 0.004313508 ubox
77 87 0.004239595 ubox
2 100 0.9500000 lbox
3 99 0.9500000 lbox
4 98 0.9500000 lbox
5 97 0.9500000 lbox
7 96 0.9500000 lbox
8 95 0.9500000 lbox
9 94 0.9500000 lbox
10 93 0.9500000 lbox
11 92 0.9500000 lbox
12 91 0.9500000 lbox
14 89 0.9500000 lbox
15 88 0.9500000 lbox
16 87 0.9500000 lbox
17 86 0.9500000 lbox
18 85 0.9500000 lbox
23 81 0.9500000 lbox
24 80 0.9500000 lbox
25 79 0.9500000 lbox
27 77 0.9500000 lbox
28 76 0.9500000 lbox
29 75 0.9500000 lbox
34 71 0.9500000 lbox
35 70 0.9500000 lbox
36 69 0.9500000 lbox
37 68 0.9500000 lbox
40 66 0.9500000 lbox
41 65 0.9500000 lbox
42 64 0.9500000 lbox
46 62 0.9500000 lbox
47 61 0.9500000 lbox
48 60 0.9500000 lbox
49 59 0.9500000 lbox
showpage
end
%%EOF
