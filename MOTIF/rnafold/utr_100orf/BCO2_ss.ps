%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:14:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACCUGUCAGUGAGGGAGGGACAGUCCAGGCAGUUCUGUGCGUGUUCACUGUUUAGUAGUACUCAAAACUGCCAGUGUGAGAGGAUUUGGAAAUCACUGGAUCUGCUCAAUACAAAAAUGUUUUUUCGAGUCUUUCUCCAUUUUAUCAGGAGUCAUUCUGCCACUGCAGUGGAUUUCCUUCCUGUGAUGGUGCACCGGCUCCCAGUUUUCAAAAGGU\
) } def
/len { sequence length } bind def

/coor [
[318.61492920 367.96597290]
[321.08306885 348.74209595]
[321.29922485 333.74365234]
[321.51538086 318.74520874]
[321.73153687 303.74676514]
[300.92913818 296.08746338]
[286.89166260 280.20724487]
[282.29376221 260.51388550]
[287.34701538 241.93766785]
[275.01168823 233.40301514]
[262.67639160 224.86836243]
[250.34107971 216.33370972]
[243.05584717 215.11354065]
[237.89073181 207.58613586]
[225.67968750 198.87461853]
[213.46865845 190.16308594]
[201.25761414 181.45156860]
[189.04658508 172.74005127]
[176.83555603 164.02851868]
[164.62451172 155.31700134]
[152.41348267 146.60548401]
[140.20243835 137.89395142]
[126.87330627 148.27021790]
[111.03193665 154.13395691]
[94.15924072 154.93699646]
[77.83257294 150.60427856]
[63.57821655 141.54084778]
[52.72873306 128.59397888]
[46.29838562 112.97402191]
[31.37464142 114.48461151]
[16.45089912 115.99519348]
[1.52715480 117.50578308]
[-13.39658928 119.01637268]
[-28.32033348 120.52696228]
[-43.24407578 122.03754425]
[-54.65955353 137.16218567]
[-73.18788910 139.10110474]
[-87.00477600 127.08666229]
[-101.87879181 129.02668762]
[-116.75280762 130.96672058]
[-131.62681580 132.90675354]
[-134.62904358 147.74809265]
[-142.28973389 160.80920410]
[-153.77790833 170.67330933]
[-167.84741211 176.27043152]
[-182.97209167 176.99343872]
[-197.51133728 172.76390076]
[-209.88804626 164.04060364]
[-218.75967407 151.76979065]
[-223.16389465 137.28250122]
[-222.62298584 122.15020752]
[-217.19560242 108.01435852]
[-207.47047424 96.40830231]
[-194.50251770 88.59096527]
[-179.69837952 85.41033173]
[-164.66392517 87.21139526]
[-151.02996826 93.79879761]
[-140.27542114 104.45799255]
[-133.56684875 118.03274536]
[-118.69283295 116.09271240]
[-103.81882477 114.15267944]
[-88.94480896 112.21264648]
[-84.11726379 101.88201141]
[-74.80729675 95.09239197]
[-63.25783539 93.62258911]
[-52.32118988 97.95213318]
[-44.75466537 107.11380005]
[-29.83091927 105.60321808]
[-14.90717602 104.09262848]
[0.01656736 102.58203888]
[14.94031143 101.07145691]
[29.86405563 99.56086731]
[44.78779984 98.05027771]
[52.02288818 72.60684204]
[70.25673676 53.44329071]
[63.97193527 39.82340622]
[57.68713379 26.20352364]
[51.40232849 12.58363914]
[45.01955414 -0.99060714]
[38.53913116 -14.51850986]
[32.05871201 -28.04641342]
[19.11868858 -37.14950943]
[20.59811401 -51.97045898]
[14.11769485 -65.49835968]
[7.63727522 -79.02626801]
[1.15685534 -92.55416870]
[-5.32356453 -106.08206940]
[-11.80398464 -119.60997772]
[-18.28440475 -133.13787842]
[-24.76482391 -146.66578674]
[-39.75284195 -151.67924500]
[-46.73104858 -165.85952759]
[-41.55939865 -180.79370117]
[-27.30614090 -187.62159729]
[-12.42747784 -182.29234314]
[-5.75065851 -167.96768188]
[-11.23692131 -153.14619446]
[-4.75650120 -139.61830139]
[1.72391868 -126.09039307]
[8.20433807 -112.56249237]
[14.68475819 -99.03459167]
[21.16517830 -85.50668335]
[27.64559746 -71.97878265]
[34.12601852 -58.45087814]
[46.60251999 -50.31538773]
[45.58661652 -34.52683258]
[52.06703568 -20.99892998]
[58.54745483 -7.47102690]
[64.26908875 -2.79913163]
[65.02221680 6.29883528]
[71.30701447 19.91872025]
[77.59181976 33.53860474]
[83.87662506 47.15848923]
[91.31318665 45.44060135]
[98.91553497 44.76402664]
[106.53858948 45.14167786]
[114.03684998 46.56634521]
[121.26720428 49.01083755]
[128.09165955 52.42850113]
[134.37995911 56.75410461]
[140.01208496 61.90509415]
[144.88053894 67.78314972]
[148.89242554 74.27610016]
[151.97116089 81.26000977]
[154.05796814 88.60158539]
[155.11305237 96.16070557]
[155.11625671 103.79310608]
[154.06750488 111.35311890]
[151.98684692 118.69644165]
[148.91397095 125.68292236]
[161.12500000 134.39443970]
[173.33602905 143.10597229]
[185.54707336 151.81748962]
[197.75810242 160.52900696]
[209.96914673 169.24053955]
[222.18017578 177.95205688]
[234.39122009 186.66357422]
[246.60224915 195.37510681]
[258.87573242 203.99841309]
[271.21102905 212.53306580]
[283.54635620 221.06770325]
[295.88165283 229.60235596]
[307.71350098 220.53938293]
[322.50433350 216.46952820]
[338.17456055 218.30343628]
[352.39260864 226.09680176]
[362.92160034 238.99572754]
[367.96917725 255.32055664]
[366.48571777 272.78186035]
[380.59747314 277.86700439]
[394.70919800 282.95214844]
[408.82095337 288.03726196]
[422.93270874 293.12240601]
[437.04443359 298.20755005]
[447.96548462 287.60131836]
[462.34991455 282.80807495]
[477.32772827 284.72772217]
[489.93499756 292.92639160]
[497.70031738 305.73300171]
[499.12927246 320.57968140]
[513.24102783 325.66479492]
[527.35278320 330.74993896]
[541.46453857 335.83508301]
[557.07049561 333.23434448]
[566.42108154 344.82812500]
[580.53283691 349.91326904]
[594.64459229 354.99841309]
[608.75634766 360.08352661]
[622.86804199 365.16867065]
[631.99707031 365.13330078]
[637.14562988 370.43011475]
[651.18261719 375.71807861]
[665.21966553 381.00604248]
[680.36889648 375.72586060]
[693.86511230 384.39941406]
[695.35522461 400.37310791]
[683.69610596 411.39331055]
[667.83160400 409.00622559]
[659.93170166 395.04302979]
[645.89465332 389.75506592]
[631.85766602 384.46710205]
[617.78295898 379.28042603]
[603.67120361 374.19528198]
[589.55944824 369.11013794]
[575.44769287 364.02499390]
[561.33593750 358.93988037]
[546.73931885 361.90432739]
[536.37939453 349.94683838]
[522.26763916 344.86169434]
[508.15588379 339.77655029]
[494.04412842 334.69140625]
[483.47341919 345.21401978]
[469.32406616 350.12374878]
[454.38497925 348.39614868]
[441.62539673 340.32067871]
[433.60473633 327.45382690]
[431.95932007 312.31930542]
[417.84756470 307.23416138]
[403.73580933 302.14901733]
[389.62408447 297.06387329]
[375.51232910 291.97875977]
[361.40057373 286.89361572]
[355.23294067 291.16094971]
[365.17919922 302.38909912]
[375.12548828 313.61724854]
[388.61508179 320.17703247]
[392.82781982 334.57333374]
[385.00256348 347.37042236]
[370.26818848 350.18078613]
[358.28195190 341.16244507]
[356.89950562 326.22760010]
[349.89855957 312.96157837]
[342.89761353 299.69558716]
[336.72998047 303.96292114]
[336.51382446 318.96136475]
[336.29766846 333.95980835]
[336.08151245 348.95825195]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 217]
[3 216]
[4 215]
[5 214]
[9 142]
[10 141]
[11 140]
[12 139]
[14 138]
[15 137]
[16 136]
[17 135]
[18 134]
[19 133]
[20 132]
[21 131]
[22 130]
[29 73]
[30 72]
[31 71]
[32 70]
[33 69]
[34 68]
[35 67]
[38 62]
[39 61]
[40 60]
[41 59]
[75 113]
[76 112]
[77 111]
[78 110]
[79 108]
[80 107]
[81 106]
[83 104]
[84 103]
[85 102]
[86 101]
[87 100]
[88 99]
[89 98]
[90 97]
[149 202]
[150 201]
[151 200]
[152 199]
[153 198]
[154 197]
[160 191]
[161 190]
[162 189]
[163 188]
[165 186]
[166 185]
[167 184]
[168 183]
[169 182]
[171 181]
[172 180]
[173 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
