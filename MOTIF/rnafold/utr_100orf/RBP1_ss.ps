%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:39:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACGAACUGAACGUCUGAAACGAAGGUGGCGCGGCCUGGACAAACCUGACCCUUCGACAUCCCCCGCCCCUGCGCCCGCCCUCGCUAAGCGGGGAGGAGCGACCGCUACAAUGGAUCCUCCCGCAGGCUUUGUGCGCGCUGGGAAUCCAGCUGUCGCCGCCCCGCAGAGCCCCCUGUCCCCGGAGGGCGCUCAUUUCCGGGCCGCCCACC\
) } def
/len { sequence length } bind def

/coor [
[-42.86988831 523.51934814]
[-28.16940880 526.50195312]
[-15.83348656 535.03570557]
[-7.85814238 547.73980713]
[-5.53383493 562.55865479]
[-9.23665142 577.09442139]
[-18.36745262 588.99523926]
[-31.44882393 596.33532715]
[-46.36412048 597.92718506]
[-60.69995880 593.51318359]
[-72.13671875 583.80743408]
[-78.82386017 570.38055420]
[-79.67899323 555.40240479]
[-87.30696106 568.31805420]
[-94.93492889 581.23370361]
[-92.34455109 597.06622314]
[-103.21427155 608.86578369]
[-119.20577240 607.58068848]
[-128.05174255 594.19677734]
[-122.96630859 578.98107910]
[-107.85057831 573.60571289]
[-100.22261047 560.69006348]
[-92.59464264 547.77441406]
[-93.75100708 541.23962402]
[-90.78610992 534.35955811]
[-83.83464050 529.73089600]
[-78.40382385 515.74853516]
[-72.97300720 501.76617432]
[-67.54219055 487.78381348]
[-62.11137772 473.80145264]
[-62.61984253 466.42889404]
[-56.49510193 459.65313721]
[-50.85768509 445.75277710]
[-45.22027206 431.85244751]
[-39.58285904 417.95208740]
[-33.94544601 404.05175781]
[-28.30803108 390.15139771]
[-22.67061806 376.25106812]
[-17.03320503 362.35070801]
[-11.39579010 348.45037842]
[-5.75837660 334.55001831]
[-16.45121574 324.12927246]
[-22.35571861 310.37127686]
[-22.54351997 295.36029053]
[-16.95485878 281.38336182]
[-6.41244793 270.58190918]
[7.49950171 264.62368774]
[22.67329025 264.44519043]
[28.31070328 250.54486084]
[27.91154289 243.16557312]
[34.13601685 236.48130798]
[39.97879410 222.66601562]
[45.82156754 208.85073853]
[51.66434097 195.03546143]
[57.50711441 181.22018433]
[63.34988785 167.40489197]
[69.19266510 153.58961487]
[55.45385742 142.85534668]
[45.25897598 128.71165466]
[39.41908264 112.28378296]
[38.39877701 94.87865448]
[42.27923203 77.88096619]
[50.75173187 62.64297867]
[39.98912048 52.19471359]
[29.22651291 41.74644852]
[18.46390343 31.29818344]
[7.70129490 20.84991837]
[-3.06131387 10.40165329]
[-16.42836761 13.76330948]
[-29.60645866 10.11028194]
[-39.18223190 0.49974260]
[-42.73038483 -12.48267937]
[-39.42733002 -25.41792679]
[-50.03393173 -36.02452850]
[-60.64053345 -46.63113022]
[-75.94492340 -44.07080841]
[-89.81629944 -51.02527237]
[-96.92082977 -64.82038879]
[-94.52668762 -80.15165710]
[-83.55445862 -91.12388611]
[-68.22319031 -93.51802826]
[-54.42807388 -86.41349792]
[-47.47360992 -72.54212189]
[-50.03393173 -57.23773193]
[-39.42733002 -46.63113022]
[-28.82072830 -36.02452850]
[-12.69725895 -39.11042786]
[2.23796868 -31.90539360]
[10.01256561 -17.07067108]
[7.38695145 -0.36095595]
[18.14956093 10.08730984]
[28.91216850 20.53557587]
[39.67477798 30.98384094]
[50.43738556 41.43210602]
[61.19999695 51.88037109]
[78.90628052 41.89669418]
[98.89358521 38.19615936]
[100.44677734 23.27678871]
[101.99996185 8.35741806]
[103.55315399 -6.56195211]
[101.32926941 -15.42072296]
[105.24149323 -21.69031334]
[107.01559448 -36.58502960]
[108.67928314 -51.49248123]
[110.23246765 -66.41184998]
[111.78565979 -81.33122253]
[101.63420105 -93.44416809]
[103.10438538 -109.17992401]
[115.32397461 -119.20275116]
[131.04330444 -117.56628418]
[140.93638611 -105.24140167]
[139.13381958 -89.54025269]
[126.70503235 -79.77803802]
[125.15184021 -64.85866547]
[123.59864807 -49.93929291]
[126.03244781 -42.96147919]
[121.91030884 -34.81093216]
[120.13621521 -19.91621590]
[118.47252655 -5.00876379]
[116.91933441 9.91060638]
[115.36614227 24.82997704]
[113.81295776 39.74934769]
[124.85547638 43.40367508]
[135.01791382 49.06195831]
[143.94044495 56.52384949]
[151.30714417 65.52513885]
[156.85716248 75.74710846]
[171.26651001 71.57932281]
[185.67587280 67.41153717]
[200.08522034 63.24374771]
[214.49458313 59.07596207]
[228.90394592 54.90817642]
[243.31329346 50.74038696]
[257.72265625 46.57260132]
[271.93255615 41.76855087]
[285.91491699 36.33773804]
[299.89724731 30.90692139]
[311.80007935 14.63715935]
[330.76397705 18.41547203]
[344.57925415 12.57269764]
[358.39453125 6.72992373]
[372.20980835 0.88714981]
[386.02508545 -4.95562410]
[395.47448730 -18.35863304]
[411.77987671 -16.60743523]
[418.16763306 -1.50351226]
[408.06661987 11.41551304]
[391.86785889 8.85965633]
[378.05258179 14.70243073]
[364.23730469 20.54520416]
[350.42202759 26.38797951]
[336.60675049 32.23075485]
[333.63412476 42.00609970]
[325.60317993 48.67187881]
[315.01113892 49.84163666]
[305.32806396 44.88927841]
[291.34570312 50.32009125]
[277.36337280 55.75090790]
[290.62048340 62.76867294]
[295.16336060 77.06420898]
[288.38934326 90.44750977]
[274.17932129 95.25122070]
[260.67431641 88.72325134]
[255.61138916 74.60351562]
[261.89044189 60.98195648]
[247.48107910 65.14974213]
[233.07173157 69.31752777]
[218.66236877 73.48532104]
[204.25300598 77.65310669]
[189.84365845 81.82089233]
[175.43429565 85.98867798]
[161.02494812 90.15646362]
[161.76181030 102.53327942]
[160.01380920 114.80817413]
[155.85125732 126.48728943]
[149.44163513 137.10073853]
[141.04281616 146.22149658]
[130.99270630 153.48262024]
[119.69567108 158.59197998]
[107.60621643 161.34397888]
[95.21073151 161.62792969]
[83.00794220 159.43238831]
[77.16516876 173.24766541]
[71.32239532 187.06295776]
[65.47962189 200.87823486]
[59.63684845 214.69351196]
[53.79407501 228.50878906]
[47.95129776 242.32408142]
[42.21104813 256.18228149]
[36.57363510 270.08261108]
[47.33662033 280.77999878]
[53.16832352 294.74545288]
[53.20882416 309.83889771]
[47.48308563 323.76022339]
[36.89242172 334.39990234]
[23.07275581 340.15856934]
[8.14196777 340.18743896]
[2.50455356 354.08779907]
[-3.13286018 367.98812866]
[-8.77027416 381.88848877]
[-14.40768719 395.78881836]
[-20.04510117 409.68917847]
[-25.68251419 423.58950806]
[-31.31992912 437.48986816]
[-36.95734406 451.39019775]
[-42.59475708 465.29055786]
[-48.12902451 479.23226929]
[-53.55983734 493.21463013]
[-58.99065399 507.19699097]
[-64.42147064 521.17932129]
[-69.85228729 535.16168213]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 23]
[14 22]
[15 21]
[26 211]
[27 210]
[28 209]
[29 208]
[30 207]
[32 206]
[33 205]
[34 204]
[35 203]
[36 202]
[37 201]
[38 200]
[39 199]
[40 198]
[41 197]
[48 190]
[49 189]
[51 188]
[52 187]
[53 186]
[54 185]
[55 184]
[56 183]
[57 182]
[63 95]
[64 94]
[65 93]
[66 92]
[67 91]
[68 90]
[73 86]
[74 85]
[75 84]
[97 122]
[98 121]
[99 120]
[100 119]
[102 118]
[103 117]
[104 115]
[105 114]
[106 113]
[127 172]
[128 171]
[129 170]
[130 169]
[131 168]
[132 167]
[133 166]
[134 165]
[135 158]
[136 157]
[137 156]
[139 152]
[140 151]
[141 150]
[142 149]
[143 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
