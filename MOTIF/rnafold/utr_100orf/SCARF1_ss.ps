%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:21:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCCUCAGGAAAAGCCCUGAGAGGAAGCAGGGAGGGGGUUGGGAGCUGUGGGGGCCAGACGAACCCGAGCGCUCCCACCGAGCUGCCUGCCAUGGGGCUGGGGCUGCUGCUCCCGCUGCUGCUGCUCUGGACUCGGGGGACUCAGGGGUCCGAGCUGGACCCCAAAGGGCAGCACGUCUGUGUGGCCAGCA\
) } def
/len { sequence length } bind def

/coor [
[90.11275482 145.84358215]
[86.72395325 160.45576477]
[83.33514404 175.06796265]
[79.94634247 189.68014526]
[76.55754089 204.29232788]
[78.86917877 221.08795166]
[63.36986542 227.95874023]
[52.47695923 214.96716309]
[61.94535446 200.90353394]
[65.33415985 186.29133606]
[68.72296143 171.67915344]
[72.11176300 157.06697083]
[75.50056458 142.45478821]
[62.32125473 119.09338379]
[64.74781799 96.12958527]
[77.83341217 81.78937531]
[69.13557434 69.56859589]
[60.43773270 57.34780884]
[51.73989487 45.12702179]
[43.04205322 32.90623856]
[34.34421539 20.68545341]
[25.64637375 8.46466827]
[6.95569563 0.93993169]
[5.92299938 -18.35984802]
[-3.16801381 -30.29104614]
[-12.25902653 -42.22224426]
[-19.96146584 -47.16128922]
[-21.39902687 -54.42244339]
[-30.29463196 -66.50003815]
[-39.19023514 -78.57762909]
[-48.08584213 -90.65522003]
[-58.93495941 -91.66581726]
[-67.26020813 -98.34967804]
[-70.45709991 -108.30554962]
[-67.69760895 -118.16339874]
[-76.19537354 -130.52413940]
[-90.38934326 -137.51283264]
[-91.22365570 -152.38406372]
[-99.72142029 -164.74479675]
[-108.21919250 -177.10554504]
[-115.67135620 -182.41468811]
[-116.75276184 -189.73735046]
[-125.04821014 -202.23477173]
[-133.34365845 -214.73219299]
[-141.63911438 -227.22961426]
[-149.93455505 -239.72703552]
[-158.23001099 -252.22445679]
[-173.61575317 -241.26527405]
[-198.29788208 -245.68867493]
[-211.36888123 -253.04727173]
[-224.43988037 -260.40585327]
[-237.51089478 -267.76446533]
[-250.58189392 -275.12304688]
[-263.65289307 -282.48162842]
[-276.72390747 -289.84024048]
[-289.79489136 -297.19882202]
[-301.87161255 -290.53692627]
[-315.55444336 -290.71481323]
[-327.26699829 -297.57891846]
[-334.00073242 -309.24203491]
[-334.08755493 -322.60086060]
[-347.03704834 -330.17123413]
[-363.42996216 -329.71908569]
[-371.78628540 -343.82949829]
[-363.50979614 -357.98687744]
[-347.11459351 -357.62731934]
[-339.46667480 -343.12072754]
[-326.51718140 -335.55035400]
[-311.71124268 -342.62384033]
[-295.44262695 -339.45205688]
[-284.15417480 -327.08944702]
[-282.43630981 -310.26983643]
[-269.36529541 -302.91122437]
[-256.29431152 -295.55264282]
[-243.22329712 -288.19403076]
[-230.15229797 -280.83544922]
[-217.08129883 -273.47686768]
[-204.01029968 -266.11825562]
[-190.93928528 -258.75967407]
[-184.52700806 -262.64974976]
[-171.70245361 -270.42990112]
[-165.29017639 -274.31997681]
[-165.77841187 -289.31201172]
[-166.26666260 -304.30407715]
[-174.44905090 -317.84509277]
[-167.13012695 -330.81747437]
[-167.61836243 -345.80950928]
[-168.10661316 -360.80157471]
[-168.59484863 -375.79360962]
[-169.32705688 -390.77572632]
[-170.30302429 -405.74395752]
[-171.27900696 -420.71215820]
[-180.83029175 -434.04275513]
[-173.81576538 -448.86599731]
[-157.45137024 -449.93301392]
[-148.57138062 -436.14614868]
[-156.31079102 -421.68814087]
[-155.33480835 -406.71994019]
[-154.35884094 -391.75170898]
[-151.41232300 -387.97561646]
[-150.81672668 -382.30465698]
[-153.60279846 -376.28186035]
[-153.11456299 -361.28982544]
[-152.62631226 -346.29776001]
[-152.13806152 -331.30572510]
[-143.99060059 -318.83703613]
[-151.27461243 -304.79232788]
[-150.78636169 -289.80026245]
[-150.29812622 -274.80822754]
[-145.73258972 -260.51989746]
[-137.43713379 -248.02249146]
[-129.14169312 -235.52507019]
[-120.84623718 -223.02764893]
[-112.55078888 -210.53022766]
[-104.25534058 -198.03280640]
[-95.85845184 -185.60331726]
[-87.36067963 -173.24256897]
[-78.86291504 -160.88183594]
[-65.27676392 -154.77725220]
[-63.83463669 -139.02191162]
[-55.33686447 -126.66116333]
[-37.32351685 -119.65637207]
[-36.00825119 -99.55081940]
[-27.11264420 -87.47322845]
[-18.21704102 -75.39563751]
[-9.32143497 -63.31805038]
[-0.32782865 -51.31325531]
[8.76318455 -39.38205719]
[17.85419655 -27.45086098]
[28.08087158 -26.99575806]
[36.54161072 -20.85121918]
[40.29317474 -10.85574627]
[37.86716080 -0.23317158]
[46.56499863 11.98761368]
[55.26284027 24.20839882]
[63.96067810 36.42918396]
[72.65851593 48.64996719]
[81.35636139 60.87075424]
[90.05419922 73.09153748]
[112.33490753 66.75024414]
[136.94155884 79.51667786]
[148.01008606 109.88246155]
[162.18266296 114.79547119]
[176.27001953 108.14834595]
[190.57305908 113.33273315]
[196.82325745 126.80383301]
[210.99584961 131.71684265]
[225.16844177 136.62985229]
[239.34103394 141.54286194]
[253.51362610 146.45587158]
[267.68621826 151.36888123]
[281.85879517 156.28189087]
[296.86233521 150.60093689]
[310.58435059 158.91271973]
[312.49847412 174.84118652]
[301.13638306 186.16734314]
[285.21408081 184.20275879]
[276.94580078 170.45448303]
[262.77319336 165.54147339]
[248.60061646 160.62846375]
[234.42802429 155.71545410]
[220.25543213 150.80244446]
[206.08283997 145.88943481]
[191.91024780 140.97642517]
[178.66334534 147.68873596]
[164.22033691 142.90814209]
[157.26965332 128.96806335]
[143.09706116 124.05505371]
[133.24902344 135.36946106]
[140.06974792 148.72901917]
[146.89048767 162.08856201]
[160.05676270 170.86123657]
[158.95292664 185.71488953]
[165.77365112 199.07443237]
[172.59439087 212.43399048]
[179.41513062 225.79353333]
[193.46270752 234.25506592]
[192.88810730 250.64414978]
[178.28242493 258.10110474]
[164.67073059 248.95483398]
[166.05557251 232.61427307]
[159.23483276 219.25471497]
[152.41410828 205.89517212]
[145.59336853 192.53561401]
[132.91496277 184.71850586]
[133.53092957 168.90930176]
[126.71019745 155.54974365]
[119.88946533 142.19020081]
[112.44528961 143.10354614]
[118.78316498 156.69880676]
[107.81167603 166.92752075]
[94.69331360 159.65370178]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 13]
[2 12]
[3 11]
[4 10]
[5 9]
[16 139]
[17 138]
[18 137]
[19 136]
[20 135]
[21 134]
[22 133]
[24 129]
[25 128]
[26 127]
[28 126]
[29 125]
[30 124]
[31 123]
[35 121]
[36 120]
[38 118]
[39 117]
[40 116]
[42 115]
[43 114]
[44 113]
[45 112]
[46 111]
[47 110]
[49 79]
[50 78]
[51 77]
[52 76]
[53 75]
[54 74]
[55 73]
[56 72]
[61 68]
[62 67]
[82 109]
[83 108]
[84 107]
[86 105]
[87 104]
[88 103]
[89 102]
[90 99]
[91 98]
[92 97]
[142 168]
[143 167]
[146 164]
[147 163]
[148 162]
[149 161]
[150 160]
[151 159]
[152 158]
[169 188]
[170 187]
[171 186]
[173 184]
[174 183]
[175 182]
[176 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
