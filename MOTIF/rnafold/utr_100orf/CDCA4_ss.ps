%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:01:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGGCGCUCCUUCCUCAGCGGCGGGAAGCUGGCGGCAGCGGCGGUGGCGGUGGCUGAGCAGAGGACCCGGCGGGCGGCCUCGCGGGUCAGGACACAAUGUUUGCACGAGGACUGAAGAGGAAAUGUGUUGGCCACGAGGAAGACGUGGAGGGAGCCCUGGCCGGCUUGAAGACAGUGUCCUCAUACAGCCUGCAGC\
) } def
/len { sequence length } bind def

/coor [
[219.08451843 263.12661743]
[210.73852539 250.66287231]
[202.39254761 238.19914246]
[194.04656982 225.73541260]
[187.70533752 221.92234802]
[185.66873169 213.00570679]
[177.52256775 200.41047668]
[169.37640381 187.81524658]
[161.23023987 175.22000122]
[153.08406067 162.62477112]
[144.93789673 150.02952576]
[136.79173279 137.43429565]
[128.64556885 124.83905792]
[120.49940491 112.24382019]
[113.25148010 118.70892334]
[104.36940002 121.53675079]
[95.49507904 120.53620148]
[88.14053345 116.19562531]
[83.43022919 109.54528046]
[68.53739166 111.33506012]
[55.75901031 120.66370392]
[42.19945908 114.50028229]
[27.30661774 116.29006195]
[12.41377831 118.07984924]
[-2.47906184 119.86962891]
[-10.51084900 134.74914551]
[-25.67653084 141.84289551]
[-41.92007828 138.53668213]
[-52.88428879 126.32643890]
[-67.74669647 128.35348511]
[-82.60910034 130.38052368]
[-96.89283752 141.99343872]
[-112.86657715 134.73851013]
[-127.69477081 137.00230408]
[-142.52296448 139.26609802]
[-157.35115051 141.52987671]
[-169.82554626 151.26127625]
[-183.57475281 145.53338623]
[-198.40293884 147.79718018]
[-210.87734985 157.52856445]
[-224.62654114 151.80067444]
[-239.45474243 154.06446838]
[-251.91154480 164.73030090]
[-267.28472900 159.02088928]
[-269.75967407 142.80957031]
[-256.79037476 132.77317810]
[-241.71852112 139.23626709]
[-226.89033508 136.97248840]
[-215.47654724 127.40301514]
[-200.66673279 132.96897888]
[-185.83854675 130.70518494]
[-174.42475891 121.13572693]
[-159.61494446 126.70169067]
[-144.78675842 124.43790436]
[-129.95855713 122.17411041]
[-115.13037109 119.91032410]
[-107.70939636 110.34836578]
[-95.36590576 108.34664154]
[-84.63614655 115.51811981]
[-69.77373505 113.49107361]
[-54.91133118 111.46402740]
[-49.71053696 99.16100311]
[-39.02216339 90.97101593]
[-25.57527161 89.12004852]
[-12.87051678 94.19799805]
[-4.26884413 104.97679138]
[10.62399578 103.18701172]
[25.51683617 101.39722443]
[40.40967560 99.60744476]
[52.12281799 90.40681458]
[66.74760437 96.44222260]
[81.64044952 94.65243530]
[95.07440186 79.07181549]
[117.54029846 83.79892731]
[122.91953278 69.79665375]
[128.29878235 55.79437256]
[123.65368652 34.88223648]
[140.20245361 22.55944443]
[144.90591431 8.31593609]
[149.60935974 -5.92757273]
[154.31280518 -20.17108154]
[159.01626587 -34.41458893]
[153.92179871 -46.27225494]
[158.14097595 -58.04371262]
[168.89593506 -63.59645844]
[173.82591248 -77.76315308]
[178.75590515 -91.92984772]
[183.68589783 -106.09654236]
[188.61587524 -120.26323700]
[193.54586792 -134.42993164]
[190.77404785 -150.00643921]
[202.26452637 -159.48367310]
[207.19451904 -173.65037537]
[212.12451172 -187.81706238]
[201.39907837 -198.62107849]
[196.44830322 -212.95204163]
[198.20349121 -227.95002747]
[206.26332092 -240.64648438]
[218.98396301 -248.55184937]
[233.81405640 -250.14363098]
[238.74404907 -264.31033325]
[243.67402649 -278.47702026]
[240.90220642 -294.05352783]
[252.39270020 -303.53076172]
[257.32269287 -317.69744873]
[249.15785217 -331.03424072]
[251.52706909 -346.49130249]
[263.31164551 -356.77029419]
[278.94726562 -357.01782227]
[291.05126953 -347.11694336]
[293.90853882 -331.74261475]
[286.16992188 -318.15408325]
[271.48937988 -312.76748657]
[266.55938721 -298.60076904]
[269.68383789 -284.03756714]
[257.84072876 -273.54702759]
[252.91073608 -259.38034058]
[247.98074341 -245.21363831]
[258.61871338 -234.75901794]
[263.68338013 -220.66438293]
[262.11981201 -205.70724487]
[254.18484497 -192.85981750]
[241.40676880 -184.69845581]
[226.29119873 -182.88706970]
[221.36120605 -168.72038269]
[216.43122864 -154.55368042]
[219.55566406 -139.99047852]
[207.71255493 -129.49993896]
[202.78257751 -115.33324432]
[197.85258484 -101.16655731]
[192.92259216 -86.99986267]
[187.99261475 -72.83316803]
[183.06262207 -58.66646957]
[187.28282166 -41.63754272]
[173.25976562 -29.71113968]
[168.55632019 -15.46763039]
[163.85287476 -1.22412121]
[159.14941406 13.01938725]
[154.44596863 27.26289558]
[159.68806458 34.45390320]
[161.04742432 43.38764191]
[158.09286499 52.07311249]
[151.36907959 58.51539612]
[142.30105591 61.17361450]
[136.92181396 75.17589569]
[131.54257202 89.17816925]
[133.09463501 104.09765625]
[141.24079895 116.69289398]
[149.38697815 129.28813171]
[157.53314209 141.88336182]
[165.67930603 154.47860718]
[173.82546997 167.07383728]
[181.97163391 179.66906738]
[190.11779785 192.26431274]
[198.26396179 204.85954285]
[206.51029968 217.38943481]
[214.85627747 229.85316467]
[223.20227051 242.31689453]
[231.54824829 254.78062439]
[240.28742981 266.97186279]
[249.41094971 278.87823486]
[263.94622803 285.12612915]
[265.54583740 299.93460083]
[274.66934204 311.84097290]
[283.79287720 323.74734497]
[292.91638184 335.65368652]
[302.32205200 347.33843994]
[312.00454712 358.79486084]
[321.68701172 370.25128174]
[336.50445557 375.79690552]
[338.81042480 390.51193237]
[348.49291992 401.96835327]
[358.17538452 413.42477417]
[373.01748657 421.61920166]
[369.25198364 438.14971924]
[352.32513428 439.10748291]
[346.71896362 423.10726929]
[337.03646851 411.65081787]
[327.35400391 400.19439697]
[313.22912598 395.46823120]
[310.23059082 379.93374634]
[300.54812622 368.47732544]
[290.86563110 357.02090454]
[287.38992310 356.36614990]
[284.06088257 353.98843384]
[281.68795776 349.97613525]
[281.01000977 344.77722168]
[271.88650513 332.87084961]
[262.76300049 320.96447754]
[253.63948059 309.05810547]
[239.75677490 303.66183472]
[237.50457764 288.00173950]
[228.38107300 276.09539795]
[225.61102295 275.59881592]
[222.87203979 273.96871948]
[220.59925842 271.21179199]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 159]
[2 158]
[3 157]
[4 156]
[6 155]
[7 154]
[8 153]
[9 152]
[10 151]
[11 150]
[12 149]
[13 148]
[14 147]
[19 72]
[20 71]
[22 69]
[23 68]
[24 67]
[25 66]
[29 61]
[30 60]
[31 59]
[33 56]
[34 55]
[35 54]
[36 53]
[38 51]
[39 50]
[41 48]
[42 47]
[74 146]
[75 145]
[76 144]
[78 139]
[79 138]
[80 137]
[81 136]
[82 135]
[85 133]
[86 132]
[87 131]
[88 130]
[89 129]
[90 128]
[92 126]
[93 125]
[94 124]
[100 118]
[101 117]
[102 116]
[104 114]
[105 113]
[160 193]
[161 192]
[163 190]
[164 189]
[165 188]
[166 187]
[167 183]
[168 182]
[169 181]
[171 179]
[172 178]
[173 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
