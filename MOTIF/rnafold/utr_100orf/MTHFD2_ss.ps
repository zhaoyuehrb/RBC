%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:54:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCCUGCCACGAGGCCGCAGUAUAACCGCGUGGCCCGCGCGCGCGCUUCCCUCCCGGCGCAGUCACCGGCGCGGUCUAUGGCUGCGACUUCUCUAAUGUCUGCUUUGGCUGCCCGGCUGCUGCAGCCCGCGCACAGCUGCUCCCUUCGCCUUCGCCCUUUCCACCUCGCGGCAGUUC\
) } def
/len { sequence length } bind def

/coor [
[88.43111420 340.65795898]
[73.79297638 335.78677368]
[64.12995148 323.76055908]
[62.52548218 308.41687012]
[69.49153900 294.65179443]
[82.80529022 286.85769653]
[83.32878113 271.86685181]
[83.85227203 256.87597656]
[84.37577057 241.88511658]
[84.89926147 226.89425659]
[77.61084747 213.90470886]
[85.82505035 200.38296509]
[86.34854889 185.39210510]
[86.87203979 170.40124512]
[87.39553070 155.41038513]
[87.91902161 140.41952515]
[66.56784058 119.19608307]
[66.06744385 91.77080536]
[83.02154541 73.72763062]
[78.13802338 59.54485321]
[73.25450134 45.36207581]
[68.37097931 31.17929840]
[63.48745346 16.99651909]
[66.04972076 31.77605820]
[58.03985977 44.45841599]
[43.59337997 48.49565506]
[30.16903687 41.80334854]
[24.69784355 27.83674431]
[30.00459099 13.80683231]
[43.35143280 6.95706797]
[29.08558273 11.59232330]
[14.81973553 16.22757721]
[0.55388796 20.86283302]
[-13.71195984 25.49808693]
[-26.90744781 36.14305878]
[-40.78928375 26.41007805]
[-35.27954483 10.37639046]
[-18.34721375 11.23223972]
[-4.08136702 6.59698534]
[10.18448067 1.96173024]
[24.45032883 -2.67352462]
[38.71617508 -7.30877972]
[47.21226883 -19.67067337]
[46.42723083 -34.65011597]
[45.64219284 -49.62955856]
[44.85715103 -64.60900116]
[44.07211304 -79.58844757]
[35.63859177 -67.18377686]
[22.18330956 -60.55389404]
[7.20859575 -61.42451859]
[-5.38771296 -69.56902313]
[-12.32687092 -82.86744690]
[-11.80265331 -97.85828400]
[-3.95151210 -110.63950348]
[9.18294621 -117.88423157]
[24.18189430 -117.70669556]
[37.14119339 -110.15311432]
[44.68685532 -97.19238281]
[46.51489639 -112.08058167]
[48.34293747 -126.96877289]
[50.04098511 -141.87234497]
[51.60890961 -156.79017639]
[53.17683792 -171.70800781]
[54.74476624 -186.62583923]
[56.31269073 -201.54365540]
[46.64154816 -213.75459290]
[48.44416046 -228.86105347]
[60.14501190 -238.00575256]
[61.71294022 -252.92358398]
[63.28086472 -267.84143066]
[64.84879303 -282.75924683]
[62.62946320 -291.64953613]
[66.57647705 -297.92294312]
[68.40451813 -312.81112671]
[70.23255920 -327.69931030]
[72.06060028 -342.58752441]
[73.88864136 -357.47570801]
[75.71668243 -372.36389160]
[66.24818420 -381.96673584]
[64.07978821 -395.07968140]
[69.78332520 -406.86871338]
[81.07003021 -413.11843872]
[83.15763092 -427.97247314]
[85.24522400 -442.82647705]
[78.18754578 -451.14913940]
[76.91735840 -461.76574707]
[81.61543274 -471.12518311]
[90.50630951 -476.23062134]
[93.11103058 -491.00274658]
[95.71575165 -505.77487183]
[84.31342316 -516.16668701]
[80.36150360 -531.07934570]
[85.12105560 -545.75415039]
[97.07330322 -555.50848389]
[112.40434265 -557.22979736]
[126.22208405 -550.36877441]
[134.11734009 -537.11474609]
[133.57077026 -521.69708252]
[124.75677490 -509.03546143]
[110.48786926 -503.17013550]
[107.88314819 -488.39804077]
[105.27841949 -473.62591553]
[113.22375488 -456.01538086]
[100.09925079 -440.73889160]
[98.01165009 -425.88485718]
[95.92405701 -411.03085327]
[106.60835266 -398.05932617]
[104.57879639 -381.03729248]
[90.60487366 -370.53585815]
[88.77683258 -355.64767456]
[86.94879150 -340.75946045]
[85.12075043 -325.87127686]
[83.29270935 -310.98309326]
[81.46466827 -296.09490967]
[79.76662445 -281.19131470]
[78.19869232 -266.27349854]
[76.63076782 -251.35566711]
[75.06284332 -236.43783569]
[84.60671234 -225.06021118]
[83.22911835 -209.90908813]
[71.23052216 -199.97573853]
[69.66259003 -185.05790710]
[68.09466553 -170.14007568]
[66.52674103 -155.22224426]
[64.95880890 -140.30442810]
[67.39345551 -133.30392456]
[63.23112869 -125.14073181]
[61.40308762 -110.25254059]
[59.57504654 -95.36434937]
[59.05155563 -80.37348175]
[59.83659363 -65.39404297]
[60.62163544 -50.41459656]
[61.40667343 -35.43515396]
[62.19171143 -20.45571136]
[72.51203918 -19.85204887]
[81.12786865 -12.35805035]
[83.61301422 -0.10540268]
[77.67023468 12.11299706]
[82.55375671 26.29577446]
[87.43727875 40.47855377]
[92.32080078 54.66133118]
[97.20432281 68.84410858]
[105.42061615 67.80896759]
[113.96430206 68.99192810]
[122.22579193 72.48474121]
[129.57273865 78.20968628]
[135.39744568 85.91481781]
[139.16484070 95.18247223]
[140.45762634 105.45088959]
[139.01466370 116.04814148]
[150.99420166 125.07537079]
[167.32818604 126.53578186]
[173.98405457 141.52349854]
[164.11479187 154.62043762]
[147.87307739 152.35359192]
[141.96697998 137.05490112]
[129.98744202 128.02767944]
[123.21805573 131.25651550]
[129.67572021 144.79528809]
[136.13339233 158.33407593]
[142.59083557 171.87295532]
[129.05183411 178.33016968]
[122.59461212 164.79173279]
[116.13694000 151.25296021]
[109.67927551 137.71417236]
[102.90988922 140.94300842]
[102.38639069 155.93386841]
[101.86289978 170.92472839]
[101.33940887 185.91560364]
[100.81591797 200.90646362]
[108.06688690 214.96824646]
[99.89012146 227.41773987]
[99.36663055 242.40859985]
[98.84313965 257.39947510]
[98.31964111 272.39031982]
[97.79615021 287.38119507]
[110.53378296 296.08499146]
[116.52266693 310.30249023]
[113.85178375 325.49688721]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 176]
[7 175]
[8 174]
[9 173]
[10 172]
[12 170]
[13 169]
[14 168]
[15 167]
[16 166]
[19 142]
[20 141]
[21 140]
[22 139]
[23 138]
[30 42]
[31 41]
[32 40]
[33 39]
[34 38]
[43 134]
[44 133]
[45 132]
[46 131]
[47 130]
[58 129]
[59 128]
[60 127]
[61 125]
[62 124]
[63 123]
[64 122]
[65 121]
[68 118]
[69 117]
[70 116]
[71 115]
[73 114]
[74 113]
[75 112]
[76 111]
[77 110]
[78 109]
[82 106]
[83 105]
[84 104]
[88 102]
[89 101]
[90 100]
[150 157]
[151 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
