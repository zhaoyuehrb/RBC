%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:49:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAGAAGGAGGAAGGUCAGCAGCCCCGACAGCCGACAGUCACAGCAGCUCUGACAAGAGCGUUCCUGGAGCCCAGCUCCUCUCCACAGAGGACAAGCAGGCAGCAGAGACCAUGGGCCCCCCCUCAGCCGCUCCCCGUGGAGGGCACAGGCCCUGGCAGGGGCUCCUGAUCACAGCCUCACUUUUAACCUUCUGGCACCCGCCCACCACUG\
) } def
/len { sequence length } bind def

/coor [
[195.47587585 483.91070557]
[204.07742310 473.91275024]
[214.83605957 466.26602173]
[209.61303711 452.20474243]
[204.39001465 438.14343262]
[199.16699219 424.08215332]
[193.94396973 410.02084351]
[188.61689758 395.99865723]
[183.18608093 382.01629639]
[177.75526428 368.03393555]
[172.32444763 354.05157471]
[155.15748596 347.69302368]
[147.96736145 330.51058960]
[155.75184631 313.23809814]
[149.90907288 299.42282104]
[144.06629944 285.60751343]
[138.22352600 271.79223633]
[132.38075256 257.97695923]
[126.53797150 244.16168213]
[114.45426941 235.45344543]
[116.20504761 219.72941589]
[110.36227417 205.91412354]
[104.51950073 192.09884644]
[98.67672729 178.28356934]
[92.83395386 164.46829224]
[86.99118042 150.65299988]
[72.64516449 146.27215576]
[60.08127213 154.46658325]
[47.51737976 162.66101074]
[46.87042236 178.16458130]
[37.20787811 190.30604553]
[22.24519539 194.41673279]
[7.73583031 188.91600037]
[-0.74107099 175.91902161]
[0.07403331 160.42337036]
[9.86771870 148.38745117]
[24.87411499 144.43931580]
[39.32295227 150.09710693]
[51.88684464 141.90269470]
[64.45073700 133.70826721]
[62.36684418 126.50358582]
[47.95748901 130.67137146]
[33.54806900 134.83892822]
[29.38072586 120.42945099]
[43.78969955 116.26201630]
[58.19905853 112.09423065]
[56.11516571 104.88954926]
[41.11680984 104.66727448]
[26.11845779 104.44499969]
[11.12010479 104.22272491]
[-3.87824821 104.00045013]
[-17.92890358 112.45687866]
[-32.14474869 104.28119659]
[-31.90174294 87.88385010]
[-17.44986725 80.13301849]
[-3.65597391 89.00209808]
[11.34237957 89.22437286]
[26.34073257 89.44664764]
[41.33908463 89.66892242]
[56.33743668 89.89119720]
[64.15506744 80.01229858]
[73.76699829 73.53341675]
[83.95059204 70.60827637]
[75.57089233 58.16719437]
[67.09924316 45.78853607]
[58.53610611 33.47299194]
[49.97296906 21.15744400]
[34.67251205 18.23618126]
[26.16371155 5.62448025]
[29.04298210 -8.94416428]
[20.47984505 -21.25971031]
[11.91670799 -33.57525635]
[-0.61629146 -36.62054443]
[-7.49508667 -47.05384064]
[-5.48762417 -58.98217010]
[-13.86732578 -71.42325592]
[-22.52147675 -83.67501831]
[-31.44580460 -95.73139954]
[-40.37013245 -107.78778076]
[-49.29446030 -119.84416962]
[-58.21878433 -131.90054321]
[-67.14311218 -143.95693970]
[-82.39067841 -149.99380493]
[-84.51837921 -166.25433350]
[-71.33741760 -176.01109314]
[-56.40723801 -169.22715759]
[-55.08673096 -152.88125610]
[-46.16240311 -140.82487488]
[-37.23807526 -128.76849365]
[-28.31374741 -116.71211243]
[-19.38942146 -104.65572357]
[-10.46509361 -92.59934235]
[-7.05134344 -91.71982574]
[-3.89381647 -89.14357758]
[-1.78514469 -85.00894165]
[-1.42624021 -79.80295563]
[6.95346117 -67.36186981]
[23.11366653 -60.51890945]
[24.23225403 -42.13839340]
[32.79539108 -29.82284737]
[41.35852814 -17.50730133]
[56.01802826 -15.13356018]
[64.87770844 -2.76583004]
[62.28851318 12.59430790]
[70.85165405 24.90985489]
[79.41478729 37.22539902]
[85.81369019 40.92233658]
[88.01197815 49.78749084]
[96.39167786 62.22857666]
[111.31105042 63.78176498]
[122.07366180 53.33349991]
[132.83627319 42.88523483]
[136.81344604 34.66297913]
[143.83662415 32.36335754]
[154.75288391 22.07572174]
[165.66912842 11.78808689]
[176.58538818 1.50045204]
[187.50163269 -8.78718281]
[187.34065247 -27.73212814]
[200.84730530 -40.55805969]
[219.12086487 -39.45666504]
[229.72746277 -50.06326675]
[240.33406067 -60.66986847]
[250.94065857 -71.27647400]
[261.54727173 -81.88307190]
[265.83435059 -97.11236572]
[280.30499268 -100.64080811]
[290.91159058 -111.24741364]
[288.35128784 -126.55180359]
[295.30575562 -140.42317200]
[309.10086060 -147.52770996]
[324.43212891 -145.13356018]
[335.40435791 -134.16133118]
[337.79849243 -118.83007050]
[330.69396973 -105.03495026]
[316.82260132 -98.08049011]
[301.51821899 -100.64080811]
[290.91159058 -90.03421021]
[287.38314819 -75.56356812]
[272.15386963 -71.27647400]
[261.54727173 -60.66986847]
[250.94065857 -50.06326675]
[240.33406067 -39.45666504]
[229.72746277 -28.85006523]
[232.20021057 -17.71313095]
[228.95654297 -6.65087366]
[220.69120789 1.55625176]
[209.37579346 4.78751755]
[197.78927612 2.12906981]
[186.87301636 12.41670513]
[175.95677185 22.70433998]
[165.04051208 32.99197388]
[154.12426758 43.27960968]
[143.28453064 53.64784241]
[132.52192688 64.09610748]
[121.75931549 74.54437256]
[137.20175171 97.83676147]
[130.10305786 127.89575958]
[100.80645752 144.81022644]
[106.64923096 158.62551880]
[112.49200439 172.44079590]
[118.33478546 186.25607300]
[124.17755890 200.07135010]
[130.02032471 213.88664246]
[142.52194214 223.58303833]
[140.35325623 238.31890869]
[146.19602966 252.13418579]
[152.03880310 265.94946289]
[157.88157654 279.76473999]
[163.72434998 293.58004761]
[169.56712341 307.39532471]
[181.24215698 309.63323975]
[190.29481506 317.15182495]
[194.55032349 327.99450684]
[193.05929565 339.42568970]
[186.30680847 348.62075806]
[191.73762512 362.60311890]
[197.16844177 376.58547974]
[202.59925842 390.56784058]
[208.62290955 397.43362427]
[208.00526428 404.79782104]
[213.22828674 418.85913086]
[218.45130920 432.92041016]
[223.67433167 446.98171997]
[228.89735413 461.04299927]
[245.89973450 460.05844116]
[262.36026001 464.35842896]
[276.67861938 473.51342773]
[287.46618652 486.62246704]
[293.68090820 502.40179443]
[294.72775269 519.31054688]
[290.51586914 535.70123291]
[281.46612549 549.98016357]
[268.46926880 560.76269531]
[274.31204224 574.57800293]
[280.15481567 588.39324951]
[293.55783081 597.84271240]
[291.80664062 614.14807129]
[276.70272827 620.53582764]
[263.78369141 610.43481445]
[266.33953857 594.23602295]
[260.49676514 580.42077637]
[254.65399170 566.60546875]
[241.70310974 568.47076416]
[228.67276001 567.17144775]
[216.32554626 562.77856445]
[205.38526917 555.54425049]
[196.49453735 545.88745117]
[190.17701721 534.36956787]
[186.80656433 521.66186523]
[186.58514404 508.50616455]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 185]
[4 184]
[5 183]
[6 182]
[7 181]
[8 179]
[9 178]
[10 177]
[11 176]
[14 171]
[15 170]
[16 169]
[17 168]
[18 167]
[19 166]
[21 164]
[22 163]
[23 162]
[24 161]
[25 160]
[26 159]
[27 40]
[28 39]
[29 38]
[47 60]
[48 59]
[49 58]
[50 57]
[51 56]
[63 109]
[64 108]
[65 106]
[66 105]
[67 104]
[70 101]
[71 100]
[72 99]
[75 97]
[76 96]
[77 92]
[78 91]
[79 90]
[80 89]
[81 88]
[82 87]
[110 156]
[111 155]
[112 154]
[114 153]
[115 152]
[116 151]
[117 150]
[118 149]
[121 144]
[122 143]
[123 142]
[124 141]
[125 140]
[127 138]
[128 137]
[194 203]
[195 202]
[196 201]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
