%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:41:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGCGCGGUGUUGCCAUGGGGACGAGCGGCUCCGGCUGAAGGUUUCCGUGCUUGGAAACCGCGCCUCCGCGGAGGUAGCCGUUCCCUGACCUAGCCAUGGCACAGAACACUGAAAACCACGACCCUGUCGGAUCCAUCUUAAUCCAGAUCCAUGAAGACCUUUAUCAGUUAAAGGAGAAAUUAACAAAAUUCUCAC\
) } def
/len { sequence length } bind def

/coor [
[78.86635590 171.06422424]
[62.81986618 162.21131897]
[49.78440857 149.92402649]
[40.44188690 135.12538147]
[35.20932770 118.85800934]
[34.22307587 102.21158600]
[37.34197998 86.25035095]
[23.16696739 81.34432983]
[8.99195480 76.43830872]
[-5.18305731 71.53228760]
[-19.35807037 66.62627411]
[-33.53308105 61.72025299]
[-47.85661697 57.26644516]
[-62.31424713 53.26934052]
[-76.77188110 49.27223206]
[-91.22951508 45.27512360]
[-105.68714142 41.27801895]
[-120.14477539 37.28091049]
[-134.60241699 33.28380203]
[-149.06004333 29.28669548]
[-163.60870361 25.63477898]
[-178.24014282 22.33012199]
[-194.62071228 33.94731522]
[-213.96919250 29.85254097]
[-223.92700195 13.11914062]
[-238.69912720 10.51441765]
[-253.47123718 7.90969467]
[-268.24334717 5.30497217]
[-283.01547241 2.70024943]
[-297.78759766 0.09552685]
[-312.55969238 -2.50919580]
[-327.33181763 -5.11391830]
[-342.12414551 -7.60136843]
[-356.93572998 -9.97138977]
[-383.18594360 10.08170319]
[-398.17837524 9.60578442]
[-413.17083740 9.12986469]
[-420.09887695 18.80672836]
[-430.73129272 23.88124466]
[-442.37246704 23.19523048]
[-452.13241577 17.03502274]
[-457.64425659 7.03150797]
[-472.61404419 6.08014917]
[-487.58383179 5.12879038]
[-502.55364990 4.17743158]
[-517.52343750 3.22607279]
[-532.49322510 2.27471399]
[-547.46307373 1.32335520]
[-562.43286133 0.37199643]
[-576.87811279 8.13515377]
[-590.67956543 -0.72214997]
[-589.63946533 -17.08827972]
[-574.82775879 -24.12716484]
[-561.48150635 -14.59780407]
[-546.51171875 -13.64644527]
[-531.54187012 -12.69508648]
[-516.57208252 -11.74372768]
[-501.60229492 -10.79236889]
[-486.63247681 -9.84101009]
[-471.66268921 -8.88965130]
[-456.69290161 -7.93829203]
[-443.71719360 -20.84043121]
[-425.11206055 -20.15993118]
[-412.69491577 -5.86258316]
[-397.70245361 -5.38666391]
[-382.71002197 -4.91074514]
[-377.57971191 -19.00613403]
[-389.37051392 -28.27851868]
[-405.67089844 -30.07551384]
[-412.01620483 -45.19731903]
[-401.87893677 -58.08792114]
[-385.68743896 -55.48656845]
[-380.09811401 -40.06931686]
[-368.30731201 -30.79693031]
[-354.56570435 -24.78297234]
[-339.75411987 -22.41295242]
[-332.64498901 -24.46258545]
[-324.72711182 -19.88603401]
[-309.95498657 -17.28131294]
[-295.18286133 -14.67658901]
[-280.41073608 -12.07186699]
[-265.63864136 -9.46714401]
[-250.86651611 -6.86242151]
[-236.09440613 -4.25769901]
[-221.32228088 -1.65297616]
[-214.79774475 -9.60142994]
[-205.48744202 -14.15494347]
[-195.04605103 -14.42948723]
[-185.36058044 -10.30827045]
[-178.20933533 -2.47499013]
[-174.93548584 7.69867420]
[-160.30404663 11.00333214]
[-157.13665771 9.43136978]
[-153.04826355 9.32179260]
[-148.73744202 11.09168911]
[-145.06292725 14.82906342]
[-130.60530090 18.82616997]
[-116.14766693 22.82327843]
[-101.69004059 26.82038498]
[-87.23240662 30.81749344]
[-72.77477264 34.81459808]
[-58.31713867 38.81170654]
[-43.85950851 42.80881500]
[-41.35078812 41.53548431]
[-38.18391418 41.18459702]
[-34.70969009 42.01281738]
[-31.36557961 44.14447021]
[-28.62706184 47.54523849]
[-14.45205021 52.45125961]
[-0.27703774 57.35727692]
[13.89797497 62.26329803]
[28.07298660 67.16931915]
[42.24799728 72.07534027]
[49.51565933 57.48865128]
[60.49796677 44.83549500]
[74.66921234 35.06633759]
[91.26020813 28.98599815]
[109.29923248 27.19144058]
[127.66873169 30.02115059]
[145.17457581 37.52009583]
[160.62350464 49.42331314]
[172.90376282 65.15995789]
[184.24000549 55.33704758]
[195.57624817 45.51413727]
[203.58715820 30.57219124]
[220.16281128 34.13368607]
[221.32908630 51.04747391]
[205.39915466 56.85037994]
[194.06291199 66.67329407]
[182.72666931 76.49620056]
[189.49407959 89.88284302]
[204.12553406 86.57818604]
[218.75697327 83.27352905]
[233.38842773 79.96886444]
[248.01986694 76.66420746]
[251.39973450 61.78001404]
[260.90960693 49.84163284]
[274.66131592 43.21944046]
[289.92443848 43.22827530]
[303.66845703 49.86638641]
[313.16452026 61.81577301]
[316.52713013 76.70387268]
[313.08868408 91.57464600]
[303.53186035 103.47547913]
[289.75418091 110.04347229]
[274.49124146 109.97452545]
[260.77343750 103.28234100]
[251.32452393 91.29565430]
[236.69308472 94.60031128]
[222.06163025 97.90497589]
[207.43019104 101.20963287]
[192.79873657 104.51428986]
[191.32098389 111.86726379]
[206.02693176 114.82279205]
[220.73287964 117.77832031]
[235.43876648 120.73408508]
[232.48275757 135.43994141]
[217.77734375 132.48426819]
[203.07139587 129.52873230]
[188.36544800 126.57321167]
[186.88769531 133.92617798]
[199.10632324 142.62702942]
[211.32496643 151.32789612]
[223.54360962 160.02874756]
[235.76225281 168.72959900]
[251.75794983 167.49784851]
[262.58825684 179.33355713]
[259.94509888 195.15736389]
[245.85606384 202.83062744]
[231.12907410 196.46705627]
[227.06138611 180.94824219]
[214.84275818 172.24737549]
[202.62411499 163.54652405]
[190.40547180 154.84567261]
[178.18682861 146.14482117]
[166.46997070 155.51045227]
[172.26515198 169.34576416]
[178.06031799 183.18107605]
[183.85549927 197.01640320]
[189.65068054 210.85171509]
[202.11883545 220.59109497]
[199.89942932 235.31941223]
[205.69459534 249.15472412]
[219.06500244 258.65023804]
[217.25767517 274.94949341]
[202.13185120 281.28521729]
[189.24768066 271.13977051]
[191.85928345 254.94990540]
[186.06411743 241.11459351]
[174.01045227 232.36480713]
[175.81536865 216.64688110]
[170.02018738 202.81156921]
[164.22500610 188.97625732]
[158.42982483 175.14094543]
[152.63465881 161.30563354]
[135.11923218 170.91613770]
[116.16407013 175.76544189]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 113]
[8 112]
[9 111]
[10 110]
[11 109]
[12 108]
[13 103]
[14 102]
[15 101]
[16 100]
[17 99]
[18 98]
[19 97]
[20 96]
[21 92]
[22 91]
[25 85]
[26 84]
[27 83]
[28 82]
[29 81]
[30 80]
[31 79]
[32 78]
[33 76]
[34 75]
[35 66]
[36 65]
[37 64]
[42 61]
[43 60]
[44 59]
[45 58]
[46 57]
[47 56]
[48 55]
[49 54]
[67 74]
[68 73]
[122 130]
[123 129]
[124 128]
[131 152]
[132 151]
[133 150]
[134 149]
[135 148]
[161 175]
[162 174]
[163 173]
[164 172]
[165 171]
[176 195]
[177 194]
[178 193]
[179 192]
[180 191]
[182 189]
[183 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
