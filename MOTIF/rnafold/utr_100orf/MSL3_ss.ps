%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:44:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGCCCCCCCCGGCCACGGCGCACCGCCUCCCCGCCCCCGCCCGCCCUCCCCCACCGCGCGCGCUCCGCCCGCCCCGGAGCCUCGCCCUCCGCCACGAUGAGCAAAUGAGCGCGAGCGAGGGCAUGAAAUUUAAAUUCCACUCAGGGGAGAAAGUGCUGUGCUUCGAGCCUGACCCCACCAAGGCGCGAGUGCUGUACGAUGCCA\
) } def
/len { sequence length } bind def

/coor [
[98.46638489 179.05972290]
[86.52616119 183.90942383]
[82.68071747 198.40812683]
[78.83526611 212.90684509]
[74.98982239 227.40554810]
[83.14246368 240.94474792]
[79.25256348 256.26284790]
[65.62792969 264.27188110]
[50.35181046 260.22024536]
[42.48725891 246.51170349]
[46.70017624 231.27928162]
[60.49111176 223.56010437]
[64.33656311 209.06140137]
[68.18200684 194.56268311]
[72.02745056 180.06398010]
[62.96781921 165.89704895]
[67.03571320 149.23257446]
[82.18891907 140.49566650]
[85.81282043 125.94000244]
[89.43671417 111.38433838]
[88.06608582 96.44709015]
[81.85378265 82.79398346]
[75.64147949 69.14088440]
[69.42917633 55.48777390]
[54.36234665 52.27891922]
[44.19287872 40.94598770]
[42.66470718 25.97505951]
[50.15539169 13.12875175]
[43.94308853 -0.52435368]
[37.73078918 -14.17745972]
[31.51848412 -27.83056450]
[25.30618286 -41.48366928]
[19.09387970 -55.13677597]
[10.78411770 -67.62468719]
[0.58951420 -78.62786865]
[-9.60508919 -89.63105011]
[-19.79969215 -100.63423920]
[-34.85450745 -105.49871063]
[-37.82880783 -120.09333038]
[-48.02341461 -131.09651184]
[-58.21801758 -142.09970093]
[-73.27282715 -146.96417236]
[-76.24713135 -161.55879211]
[-86.44173431 -172.56196594]
[-96.63633728 -183.56515503]
[-111.69115448 -188.42962646]
[-114.66545868 -203.02424622]
[-124.86006165 -214.02743530]
[-135.05465698 -225.03062439]
[-145.51994324 -219.07742310]
[-157.36596680 -215.98333740]
[-169.81253052 -216.06050110]
[-182.01167297 -219.40846252]
[-193.10534668 -225.90046692]
[-202.28572083 -235.18525696]
[-208.85369873 -246.70491028]
[-212.27146912 -259.72784424]
[-212.20520020 -273.39508057]
[-208.55451965 -286.77691650]
[-220.58129883 -295.74108887]
[-232.60809326 -304.70526123]
[-250.93980408 -306.42648315]
[-257.25100708 -322.79953003]
[-269.41308594 -331.57925415]
[-281.57516479 -340.35897827]
[-293.73727417 -349.13870239]
[-305.89935303 -357.91842651]
[-318.06146240 -366.69815063]
[-333.17761230 -362.69366455]
[-347.30923462 -369.38925171]
[-353.78381348 -383.62350464]
[-349.54425049 -398.67541504]
[-336.59234619 -407.43795776]
[-321.04357910 -405.77368164]
[-310.23959351 -394.46847534]
[-309.28173828 -378.86026001]
[-297.11962891 -370.08053589]
[-284.95755005 -361.30081177]
[-272.79544067 -352.52108765]
[-260.63336182 -343.74136353]
[-248.47126770 -334.96163940]
[-236.48095703 -336.57983398]
[-226.27595520 -329.36145020]
[-223.64392090 -316.73202515]
[-211.61712646 -307.76785278]
[-199.59034729 -298.80368042]
[-193.19256592 -302.71755981]
[-204.59109497 -312.46810913]
[-198.83993530 -326.32177734]
[-183.88711548 -325.13293457]
[-180.39698792 -310.54528809]
[-173.99919128 -314.45913696]
[-176.50373840 -329.24856567]
[-179.12097168 -344.01846313]
[-181.85075378 -358.76800537]
[-190.67861938 -373.24227905]
[-179.21379089 -385.73202515]
[-164.03836060 -378.17276001]
[-167.10124207 -361.49777222]
[-164.37145996 -346.74826050]
[-160.06137085 -340.74084473]
[-161.71430969 -331.75311279]
[-159.20976257 -316.96368408]
[-137.05731201 -309.94284058]
[-120.56993103 -294.55526733]
[-112.54512024 -274.21441650]
[-113.99452972 -253.08326721]
[-124.05148315 -235.22521973]
[-113.85687256 -224.22203064]
[-103.66226959 -213.21885681]
[-89.33664703 -209.14140320]
[-85.63315582 -193.75976562]
[-75.43855286 -182.75657654]
[-65.24394989 -171.75338745]
[-50.91831970 -167.67593384]
[-47.21483231 -152.29429626]
[-37.02022934 -141.29112244]
[-26.82562447 -130.28793335]
[-12.49999714 -126.21047974]
[-8.79650784 -110.82884216]
[1.39809549 -99.82565308]
[11.59269905 -88.82247162]
[21.78730202 -77.81929016]
[23.80335045 -83.56278229]
[25.98949623 -89.24665833]
[28.34439659 -94.86715698]
[39.94861984 -104.37200165]
[51.55284119 -113.87683868]
[51.55738831 -129.51441956]
[61.65205383 -141.45727539]
[77.07044220 -144.06634521]
[90.53247070 -136.10972595]
[95.68176270 -121.34426117]
[90.08699799 -106.74177551]
[76.38984680 -99.19710541]
[61.05768204 -102.27262115]
[49.45346069 -92.76777649]
[37.84923935 -83.26293182]
[51.63332367 -89.17893219]
[65.82610321 -84.32456207]
[73.09982300 -71.20613861]
[69.69903564 -56.59673309]
[57.37958145 -48.03921890]
[42.50202179 -49.95185471]
[32.74698639 -61.34907913]
[38.95928955 -47.69597244]
[45.17159271 -34.04286957]
[51.38389206 -20.38976288]
[57.59619522 -6.73665619]
[63.80849838 6.91644955]
[78.41475677 9.70842171]
[88.69786835 20.69576454]
[90.56124115 35.80805206]
[83.08228302 49.27547073]
[89.29458618 62.92857742]
[95.50688934 76.58168030]
[101.71919250 90.23478699]
[118.47587585 81.75750732]
[141.46618652 93.24202728]
[153.35487366 102.38856506]
[165.24356079 111.53510284]
[177.13224792 120.68164062]
[189.02093506 129.82818604]
[197.73451233 132.58230591]
[201.01977539 139.20597839]
[212.76759338 148.53274536]
[228.38665771 151.05372620]
[233.54356384 165.02711487]
[245.29138184 174.35388184]
[257.03921509 183.68066406]
[268.78701782 193.00744629]
[283.04226685 187.29052734]
[298.24386597 189.48303223]
[310.30264282 198.99520874]
[315.97485352 213.26832581]
[313.73471069 228.46296692]
[304.18478394 240.49186707]
[289.89395142 246.11930847]
[274.70639038 243.83154297]
[262.70748901 234.24395752]
[257.12487793 219.93556213]
[259.46023560 204.75526428]
[247.71243286 195.42848206]
[235.96461487 186.10171509]
[224.21678162 176.77493286]
[209.43800354 174.92106628]
[203.44081116 160.28056335]
[191.69299316 150.95379639]
[179.87438965 141.71687317]
[167.98571777 132.57032776]
[156.09703064 123.42378998]
[144.20834351 114.27725220]
[132.31965637 105.13071442]
[125.23783875 107.60009766]
[131.28605652 121.32667542]
[142.03015137 131.79397583]
[138.77947998 146.43751526]
[124.61560822 151.37559509]
[112.96550751 141.92704773]
[114.87228394 127.05004120]
[111.07419586 112.53885651]
[103.99237823 115.00823975]
[100.36848450 129.56390381]
[96.74458313 144.11956787]
[104.96923828 154.78883362]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 15]
[3 14]
[4 13]
[5 12]
[18 204]
[19 203]
[20 202]
[21 157]
[22 156]
[23 155]
[24 154]
[28 150]
[29 149]
[30 148]
[31 147]
[32 146]
[33 145]
[34 123]
[35 122]
[36 121]
[37 120]
[39 118]
[40 117]
[41 116]
[43 114]
[44 113]
[45 112]
[47 110]
[48 109]
[49 108]
[59 86]
[60 85]
[61 84]
[63 81]
[64 80]
[65 79]
[66 78]
[67 77]
[68 76]
[92 103]
[93 102]
[94 100]
[95 99]
[126 138]
[127 137]
[128 136]
[159 193]
[160 192]
[161 191]
[162 190]
[163 189]
[165 188]
[166 187]
[168 185]
[169 184]
[170 183]
[171 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
