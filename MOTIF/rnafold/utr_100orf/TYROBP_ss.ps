%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:16:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACUUCCUCCUUCACUUGCCUGGACGCUGCGCCACAUCCCACCGGCCCUUACACUGUGGUGUCCAGCAGCAUCCGGCUUCAUGGGGGGACUUGAACCCUGCAGCAGGCUCCUGCUCCUGCCUCUCCUGCUGGCUGUAAGUGGUCUCCGUCCUGUCCAGGCCCAGGCCCAGAGCGAUUGCA\
) } def
/len { sequence length } bind def

/coor [
[135.32376099 169.17381287]
[126.80278778 156.82905579]
[118.28181458 144.48429871]
[109.76084137 132.13952637]
[101.23986816 119.79477692]
[92.13865662 113.36418152]
[89.91117859 104.80874634]
[74.96701050 103.51573944]
[60.02284622 102.22273254]
[45.07867813 100.92972565]
[30.13451195 99.63671875]
[15.19034481 98.34371948]
[8.44454670 110.77865601]
[-2.50110531 119.67255402]
[-15.97031593 123.70596313]
[-29.91648674 122.30053711]
[-42.23368835 115.70172882]
[-51.07465363 104.93672180]
[-55.12780762 91.65462494]
[-70.04743195 90.10385895]
[-84.96705627 88.55310059]
[-93.85264587 90.78235626]
[-100.13002777 86.84465027]
[-115.02066040 85.03659821]
[-129.91130066 83.22854614]
[-144.54347229 89.24600220]
[-156.24533081 80.03101349]
[-171.13595581 78.22296906]
[-186.02659607 76.41491699]
[-200.91722107 74.60686493]
[-215.80786133 72.79881287]
[-226.39462280 83.98928833]
[-241.36570740 86.76773071]
[-254.94158936 80.27468872]
[-262.00631714 67.18930817]
[-276.89697266 65.38125610]
[-291.78759766 63.57320404]
[-298.04888916 65.82338715]
[-303.65719604 64.72061920]
[-307.15768433 61.43712234]
[-321.97705078 59.11618042]
[-336.79641724 56.79524231]
[-351.61575317 54.47430038]
[-360.60482788 56.24063492]
[-366.66998291 51.98328018]
[-381.44705200 49.40689468]
[-392.49426270 60.30363083]
[-407.84158325 62.59260178]
[-421.58764648 55.39364624]
[-428.44683838 41.47491455]
[-425.78164673 26.18843842]
[-414.61688232 15.41218185]
[-399.24563599 13.28983593]
[-385.57846069 20.63748550]
[-378.87066650 34.62981033]
[-364.09359741 37.20619583]
[-349.29483032 39.65494919]
[-334.47546387 41.97588730]
[-319.65609741 44.29682922]
[-304.83676147 46.61776733]
[-289.97955322 48.68257141]
[-275.08892822 50.49062347]
[-260.19827271 52.29867172]
[-250.20729065 41.28422928]
[-235.47201538 38.22878265]
[-221.60087585 44.50930405]
[-213.99980164 57.90818405]
[-199.10917664 59.71623230]
[-184.21853638 61.52428436]
[-169.32791138 63.33233261]
[-154.43727112 65.14038086]
[-140.87016296 58.99359894]
[-128.10324097 68.33791351]
[-113.21261597 70.14596558]
[-98.32197571 71.95401001]
[-83.41629791 73.63348389]
[-68.49667358 75.18424225]
[-53.57704926 76.73500061]
[-45.46359634 62.98211670]
[-32.11971664 54.10683060]
[-16.18432045 51.92516327]
[-0.83543992 56.92335510]
[10.84355545 68.15061188]
[16.48335075 83.39955139]
[31.42751694 84.69255829]
[46.37168503 85.98555756]
[61.31585312 87.27856445]
[76.26001740 88.57157135]
[91.20418549 89.86457825]
[105.44583893 85.15550995]
[116.67350006 75.20867157]
[127.90116119 65.26183319]
[139.12882996 55.31499100]
[150.35649109 45.36815262]
[149.00061035 30.02319145]
[156.84858704 16.97471809]
[170.71116638 11.11871338]
[185.19052124 14.50788975]
[196.41818237 4.56104946]
[201.61697388 -10.38160992]
[216.27426147 -13.02989960]
[227.50192261 -22.97673988]
[238.72958374 -32.92358017]
[249.95724487 -42.87041855]
[255.44157410 -62.25085068]
[274.51202393 -65.35314941]
[285.38967896 -75.68159485]
[296.26733398 -86.01004791]
[307.14495850 -96.33849335]
[303.47723389 -111.25302887]
[307.77359009 -125.99877930]
[318.87826538 -136.60920715]
[333.80422974 -140.23016357]
[348.53643799 -135.88763428]
[359.11199951 -124.74972534]
[362.68615723 -109.81249237]
[358.29748535 -95.09396362]
[347.12646484 -84.55335999]
[332.17810059 -81.02604675]
[317.47341919 -85.46085358]
[306.59576416 -75.13240051]
[295.71813965 -64.80395508]
[284.84048462 -54.47550583]
[285.49346924 -44.24640656]
[280.28701782 -35.16291428]
[270.73782349 -30.35840416]
[259.90408325 -31.64275742]
[248.67642212 -21.69591904]
[237.44876099 -11.74907875]
[226.22109985 -1.80223858]
[221.82537842 12.42895603]
[206.36502075 15.78871059]
[195.13735962 25.73554993]
[196.75653076 40.51784515]
[189.27227783 53.57349396]
[175.37297058 59.79142761]
[160.30332947 56.59581375]
[149.07566833 66.54264832]
[137.84800720 76.48949432]
[126.62033844 86.43633270]
[115.39267731 96.38317108]
[113.58463287 111.27380371]
[122.10559845 123.61856079]
[130.62657166 135.96331787]
[139.14753723 148.30807495]
[147.66851807 160.65283203]
[170.10722351 168.74195862]
[171.56973267 191.82791138]
[181.32128906 203.22560120]
[191.07286072 214.62327576]
[205.92355347 220.07920837]
[208.31845093 234.78002930]
[218.07002258 246.17770386]
[227.82157898 257.57537842]
[232.02239990 258.88766479]
[235.24989319 261.24240112]
[237.29447937 264.20040894]
[238.11257935 267.29977417]
[237.81953430 270.11242676]
[246.76152039 282.15570068]
[255.70350647 294.19900513]
[270.95989990 300.21353149]
[273.11145020 316.47091675]
[259.94479370 326.24697876]
[245.00468445 319.48492432]
[243.66021729 303.14099121]
[234.71823120 291.09771729]
[225.77624512 279.05441284]
[216.42390442 267.32693481]
[206.67233276 255.92926025]
[196.92077637 244.53158569]
[182.76757812 239.89088440]
[179.67517090 224.37483215]
[169.92361450 212.97715759]
[160.17205811 201.57948303]
[153.74707031 202.91340637]
[147.17454529 202.17698669]
[141.11007690 199.41133118]
[136.16864014 194.86160278]
[132.86219788 188.95550537]
[131.54675293 182.26324463]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 146]
[2 145]
[3 144]
[4 143]
[5 142]
[7 89]
[8 88]
[9 87]
[10 86]
[11 85]
[12 84]
[19 78]
[20 77]
[21 76]
[23 75]
[24 74]
[25 73]
[27 71]
[28 70]
[29 69]
[30 68]
[31 67]
[35 63]
[36 62]
[37 61]
[40 60]
[41 59]
[42 58]
[43 57]
[45 56]
[46 55]
[90 141]
[91 140]
[92 139]
[93 138]
[94 137]
[98 133]
[99 132]
[101 130]
[102 129]
[103 128]
[104 127]
[106 123]
[107 122]
[108 121]
[109 120]
[148 175]
[149 174]
[150 173]
[152 171]
[153 170]
[154 169]
[159 168]
[160 167]
[161 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
