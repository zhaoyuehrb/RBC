%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:13:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUCAGCCCAGUGGCCCUCUGAGCUGUUCCUUCUUGACCGGCACACACAGCUCGCUUCUUCACUUUCUUUUCCAUCCACUGCCGGACCCAAGCCAGCCUUCCAGGGAGCAGCCAUGCCUUACCUCUACCGGGCCCCAGGGCCUCAGGCACACCCGGUUCCCAAGGACGCCCGGAUCACCCACUCCUCAGGCCAGAGCUUUGAGCAAAUGAGGC\
) } def
/len { sequence length } bind def

/coor [
[75.93972778 140.66139221]
[65.50026703 130.69911194]
[58.76669693 118.30780029]
[56.21009827 104.77186584]
[57.88010025 91.42809296]
[63.41849518 79.53376770]
[51.84957504 69.98599243]
[40.28065491 60.43821335]
[27.22852516 64.86508942]
[13.79982662 62.28565979]
[3.48137975 53.47858047]
[-1.10148466 40.82522583]
[1.14755607 27.66656876]
[-10.27995777 17.94998932]
[-21.70747185 8.23340797]
[-33.13498306 -1.48317206]
[-44.56250000 -11.19975281]
[-55.99001312 -20.91633224]
[-79.13309479 -21.54201889]
[-89.31659698 -41.61364746]
[-103.15363312 -47.40472031]
[-112.27578735 -47.83071899]
[-117.15028381 -53.38370514]
[-130.90081787 -59.37728119]
[-144.65135193 -65.37085724]
[-158.40187073 -71.36442566]
[-172.15240479 -77.35800171]
[-185.90293884 -83.35157776]
[-199.65345764 -89.34515381]
[-213.40399170 -95.33872986]
[-227.15452576 -101.33229828]
[-240.90504456 -107.32587433]
[-255.05810547 -112.29490662]
[-269.53744507 -116.21263123]
[-284.01678467 -120.13035583]
[-298.49612427 -124.04808044]
[-317.72930908 -118.00595856]
[-330.75723267 -132.29618835]
[-345.34536743 -135.78717041]
[-359.93347168 -139.27813721]
[-374.52160645 -142.76911926]
[-389.10971069 -146.26008606]
[-403.69781494 -149.75105286]
[-409.55340576 -135.90324402]
[-417.60852051 -123.20816803]
[-427.64343262 -112.01216888]
[-439.38436890 -102.62068176]
[-452.51104736 -95.28990936]
[-466.66537476 -90.21984100]
[-481.46115112 -87.54879761]
[-496.49478149 -87.34964752]
[-511.35614014 -89.62780762]
[-525.63977051 -94.32115173]
[-538.95605469 -101.30162048]
[-550.94165039 -110.37879181]
[-561.26965332 -121.30503845]
[-569.65820312 -133.78227234]
[-575.87854004 -147.47012329]
[-579.76098633 -161.99516296]
[-581.19958496 -176.96113586]
[-580.15502930 -191.95976257]
[-576.65594482 -206.58186340]
[-570.79766846 -220.42855835]
[-562.74011230 -233.12208557]
[-552.70306396 -244.31614685]
[-540.96032715 -253.70536804]
[-527.83221436 -261.03359985]
[-513.67694092 -266.10095215]
[-498.88064575 -268.76913452]
[-483.84695435 -268.96539307]
[-468.98605347 -266.68438721]
[-454.70330811 -261.98828125]
[-441.38839722 -255.00524902]
[-429.40454102 -245.92576599]
[-419.07867432 -234.99752808]
[-410.69247437 -222.51867676]
[-404.47476196 -208.82963562]
[-400.59515381 -194.30384827]
[-399.15945435 -179.33760071]
[-400.20684814 -164.33917236]
[-385.61874390 -160.84820557]
[-371.03060913 -157.35722351]
[-356.44250488 -153.86625671]
[-341.85440063 -150.37527466]
[-327.26626587 -146.88430786]
[-319.07626343 -152.99002075]
[-308.65872192 -153.59371948]
[-299.43811035 -148.25518799]
[-294.57839966 -138.52742004]
[-280.09906006 -134.60969543]
[-265.61972046 -130.69197083]
[-251.14038086 -126.77425385]
[-260.53790283 -138.46556091]
[-262.92712402 -153.27406311]
[-257.68334961 -167.32762146]
[-246.17768860 -176.95155334]
[-231.41864014 -179.62936401]
[-217.26539612 -174.66088867]
[-207.41874695 -163.34526062]
[-204.45335388 -148.64131165]
[-209.14463806 -134.39378357]
[-220.26591492 -124.32813263]
[-234.91148376 -121.07640839]
[-221.16094971 -115.08283234]
[-207.41041565 -109.08925629]
[-193.65988159 -103.09568024]
[-179.90936279 -97.10211182]
[-166.15882874 -91.10853577]
[-152.40829468 -85.11495972]
[-138.65777588 -79.12138367]
[-124.90724182 -73.12780762]
[-111.15670776 -67.13423920]
[-97.36255646 -61.24175262]
[-83.52552795 -55.45067978]
[-74.68511963 -61.18955994]
[-64.18321991 -62.08255005]
[-56.81071091 -75.14571381]
[-49.43820190 -88.20886993]
[-42.06569290 -101.27202606]
[-49.94393158 -114.45645142]
[-50.15843201 -129.81384277]
[-42.65149307 -143.21315002]
[-29.44244385 -151.05001831]
[-14.08445168 -151.21638489]
[-0.70874149 -143.66748047]
[7.08668947 -130.43392944]
[7.20490885 -115.07549286]
[-0.38588342 -101.72351074]
[-13.64380264 -93.96959686]
[-29.00253487 -93.89952087]
[-36.37504196 -80.83636475]
[-43.74755096 -67.77320099]
[-51.12005615 -54.71004486]
[-47.70044327 -49.94696426]
[-45.64398575 -44.36593628]
[-45.14132309 -38.35471725]
[-46.27342987 -32.34384537]
[-34.84591675 -22.62726593]
[-23.41840363 -12.91068554]
[-11.99089050 -3.19410515]
[-0.56337714 6.52247524]
[10.86413670 16.23905563]
[26.68693924 11.86291313]
[42.15496445 17.84096527]
[51.09986496 32.00168228]
[49.82843399 48.86929321]
[61.39735413 58.41707230]
[72.96627045 67.96485138]
[89.32884216 57.70254135]
[109.30123901 55.63642120]
[128.85423279 62.85727692]
[143.74723816 78.51390839]
[150.44398499 99.86186218]
[165.40359497 100.96189880]
[180.36320496 102.06193542]
[195.32281494 103.16197205]
[213.06068420 93.58124542]
[228.56277466 105.14078522]
[243.54821777 105.80119324]
[258.53369141 106.46159363]
[274.62365723 101.11846161]
[284.21212769 115.10050964]
[273.43084717 128.18487549]
[257.87329102 121.44704437]
[242.88781738 120.78664398]
[227.90237427 120.12624359]
[221.01924133 127.67465973]
[210.90534973 130.24346924]
[200.83947754 126.75090790]
[194.22276306 118.12158203]
[179.26316833 117.02154541]
[164.30355835 115.92150879]
[149.34394836 114.82147217]
[145.18861389 121.06512451]
[157.78952026 129.20251465]
[170.39042664 137.33990479]
[185.33648682 138.61080933]
[191.85231018 152.12168884]
[183.54119873 164.60870361]
[168.56231689 163.81311035]
[161.62065125 150.51710510]
[149.24929810 142.03477478]
[136.87796021 133.55244446]
[132.72264099 139.79609680]
[139.51286316 153.17118835]
[146.30310059 166.54626465]
[153.09332275 179.92134094]
[159.88356018 193.29641724]
[177.25325012 203.52949524]
[175.36976624 222.77502441]
[182.54971313 235.94500732]
[189.82614136 249.06192017]
[197.19865417 262.12509155]
[204.57115173 275.18823242]
[218.95973206 283.05596924]
[219.06982422 299.45474243]
[204.78817749 307.51492310]
[190.80653381 298.94488525]
[191.50799561 282.56076050]
[184.13548279 269.49758911]
[176.76298523 256.43444824]
[170.73925781 252.15528870]
[169.37973022 243.12495422]
[162.19978333 229.95497131]
[152.18022156 227.96394348]
[144.75370789 220.63340759]
[142.54101562 210.21115112]
[146.50846863 200.08665466]
[139.71824646 186.71157837]
[132.92800903 173.33648682]
[126.13778687 159.96141052]
[119.34755707 146.58633423]
[104.15849304 149.20291138]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 148]
[7 147]
[8 146]
[13 142]
[14 141]
[15 140]
[16 139]
[17 138]
[18 137]
[20 114]
[21 113]
[23 112]
[24 111]
[25 110]
[26 109]
[27 108]
[28 107]
[29 106]
[30 105]
[31 104]
[32 103]
[33 92]
[34 91]
[35 90]
[36 89]
[38 85]
[39 84]
[40 83]
[41 82]
[42 81]
[43 80]
[116 133]
[117 132]
[118 131]
[119 130]
[153 173]
[154 172]
[155 171]
[156 170]
[158 166]
[159 165]
[160 164]
[184 212]
[185 211]
[186 210]
[187 209]
[188 208]
[190 204]
[191 203]
[192 201]
[193 200]
[194 199]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
