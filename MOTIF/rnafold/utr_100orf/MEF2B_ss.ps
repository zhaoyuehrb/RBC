%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:04:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGGCACCUGCGGCCGCGGGCCCCUGAUCUUCGUGCAGCCGCCGCGGGUCCGUGCGCCCAGCGUCCCAGGGCCCAGGCCGAGCAGACAAAGAUCAUUCCACUCAGCCUGGGACGAUGGGGAGGAAAAAAAUCCAGAUCUCCCGCAUCCUGGACCAAAGGAAUCGGCAGGUGACGUUCACCAAGCGGAAGUUCGGGCUGAUGAAGAAGGCCUAUG\
) } def
/len { sequence length } bind def

/coor [
[39.84711075 411.17593384]
[49.76463699 398.56555176]
[49.32633972 383.57196045]
[48.88803864 368.57833862]
[48.44973755 353.58474731]
[41.07449722 352.22247314]
[18.94876862 348.13565063]
[13.18321514 361.98333740]
[7.41766119 375.83102417]
[1.65210712 389.67871094]
[-4.11344671 403.52639771]
[-1.46719432 419.71063232]
[-14.32962608 429.88363647]
[-29.46897507 423.58029175]
[-31.31117630 407.28494263]
[-17.96113205 397.76083374]
[-12.19557858 383.91314697]
[-6.43002415 370.06546021]
[-0.66447026 356.21777344]
[5.10108376 342.37008667]
[1.23641658 331.64547729]
[0.49513611 320.65393066]
[2.72741508 310.25735474]
[7.55791998 301.21606445]
[14.42944050 294.13320923]
[22.65919495 289.41528320]
[31.50250816 287.25067139]
[40.21813965 287.60803223]
[44.11806488 273.12387085]
[48.01799011 258.63973999]
[51.91791534 244.15557861]
[55.81784058 229.67143250]
[59.71776581 215.18728638]
[63.61769104 200.70312500]
[62.32182312 193.42929077]
[67.68186188 186.03663635]
[71.79300690 171.61102295]
[75.90415192 157.18540955]
[80.01529694 142.75978088]
[84.12644196 128.33416748]
[73.90003967 122.39086914]
[66.00197601 112.71849060]
[61.79103851 100.26356506]
[46.79464340 100.59230804]
[31.79824638 100.92105103]
[16.80465126 101.35935211]
[1.81465769 101.90718079]
[-13.17533493 102.45500946]
[-28.16532707 103.00284576]
[-38.74011612 114.74803162]
[-54.52687454 115.49218750]
[-66.15959930 104.79380798]
[-66.73680878 89.00006866]
[-55.91604233 77.48109436]
[-40.11707687 77.07090759]
[-28.71315765 88.01284790]
[-13.72316551 87.46501923]
[1.26682734 86.91719055]
[16.25682068 86.36936188]
[22.82436752 82.98477173]
[31.46949959 85.92465973]
[46.46589661 85.59590912]
[61.46229553 85.26716614]
[69.27639771 72.46327209]
[62.71178055 58.97602463]
[56.14715958 45.48878098]
[49.58253860 32.00153732]
[43.01791763 18.51429367]
[26.32297516 15.78963566]
[14.65833664 3.76943779]
[12.47977161 -12.67021370]
[20.44961929 -27.02306938]
[13.68862915 -40.41295624]
[6.92763996 -53.80284119]
[0.16665071 -67.19272614]
[-6.59433842 -80.58261108]
[-13.35532761 -93.97249603]
[-20.11631775 -107.36238098]
[-33.24327469 -116.19377136]
[-32.07310104 -131.04234314]
[-38.83409119 -144.43222046]
[-45.59508133 -157.82211304]
[-60.33826447 -162.84967041]
[-67.00412750 -176.52522278]
[-62.12026215 -190.54962158]
[-68.88124847 -203.93949890]
[-84.22033691 -204.71922302]
[-97.10578918 -213.07749939]
[-104.07148743 -226.76597595]
[-103.24368286 -242.10255432]
[-94.84506989 -254.96174622]
[-81.13481140 -261.88449097]
[-65.80091858 -261.00863647]
[-52.96811295 -252.56973267]
[-46.08837128 -238.83786011]
[-47.01229858 -223.50677490]
[-55.49136734 -210.70048523]
[-48.73037720 -197.31060791]
[-34.54548645 -192.91465759]
[-27.49813652 -179.43171692]
[-32.20519638 -164.58309937]
[-25.44420624 -151.19322205]
[-18.68321609 -137.80332947]
[-6.03984880 -129.92967224]
[-6.72643185 -114.12336731]
[0.03455732 -100.73348236]
[6.79554653 -87.34359741]
[13.55653572 -73.95371246]
[20.31752586 -60.56382751]
[27.07851410 -47.17394257]
[33.83950424 -33.78405762]
[47.15791321 -32.87991714]
[58.38084793 -25.45397758]
[64.51847076 -13.35632515]
[63.87262726 0.30218172]
[56.50516129 11.94967270]
[63.06978226 25.43691635]
[69.63439941 38.92416000]
[76.19902039 52.41140366]
[82.76364136 65.89865112]
[97.94162750 64.71625519]
[111.18074036 69.50761414]
[119.45726013 56.99764633]
[127.73377228 44.48767853]
[124.33457184 29.05327034]
[132.91502380 15.78106785]
[148.38450623 12.54523373]
[161.56524658 21.26552963]
[164.63734436 36.76836014]
[155.77818298 49.85617065]
[140.24374390 52.76419449]
[131.96722412 65.27416229]
[123.69071198 77.78412628]
[129.09759521 85.57348633]
[132.02427673 94.59252930]
[146.99185181 95.57813263]
[161.27059937 88.76432037]
[173.46197510 97.32116699]
[188.42956543 98.30677032]
[202.70829773 91.49295807]
[214.89967346 100.04980469]
[229.86726379 101.03540802]
[244.83483887 102.02101135]
[259.80242920 103.00661469]
[272.03900146 84.54486084]
[300.15969849 83.81757355]
[314.72586060 80.23602295]
[329.29199219 76.65447235]
[343.85815430 73.07292175]
[350.59597778 58.96138382]
[364.84954834 52.52940750]
[379.88870239 56.81397629]
[388.61245728 69.79204559]
[386.90170288 85.33576202]
[375.56417847 96.10587311]
[359.95318604 97.01705170]
[347.43969727 87.63906097]
[332.87353516 91.22061157]
[318.30740356 94.80216217]
[303.74127197 98.38371277]
[303.24847412 105.86750793]
[318.21603394 106.85311127]
[333.18362427 107.83871460]
[345.65332031 116.17580414]
[332.19802856 122.80629730]
[317.23043823 121.82069397]
[302.26284790 120.83509064]
[301.77005005 128.31887817]
[315.74078369 133.77955627]
[329.71148682 139.24023438]
[343.68222046 144.70091248]
[357.65292358 150.16159058]
[374.60635376 150.29631042]
[379.17007446 166.62446594]
[364.74337769 175.52992249]
[352.19226074 164.13230896]
[338.22152710 158.67163086]
[324.25082397 153.21095276]
[310.28009033 147.75027466]
[296.30938721 142.28959656]
[276.47879028 142.11624146]
[262.78610229 131.84886169]
[258.81683350 117.97420502]
[243.84924316 116.98860168]
[228.88165283 116.00299835]
[213.91407776 115.01739502]
[200.70591736 121.90170288]
[187.44395447 113.27436066]
[172.47636414 112.28874969]
[159.26820374 119.17306519]
[146.00625610 110.54571533]
[131.03866577 109.56011200]
[118.70390320 126.55106354]
[98.55206299 132.44531250]
[94.44091797 146.87092590]
[90.32977295 161.29655457]
[86.21862793 175.72216797]
[82.10748291 190.14778137]
[78.10184479 204.60305786]
[74.20191956 219.08720398]
[70.30199432 233.57135010]
[66.40206909 248.05551147]
[62.50214005 262.53964233]
[58.60221481 277.02380371]
[54.70228958 291.50796509]
[71.73622131 305.44622803]
[76.37985992 329.48675537]
[63.44333267 353.14645386]
[63.88163376 368.14004517]
[64.31993103 383.13363647]
[64.75823212 398.12722778]
[75.39546204 410.13677979]
[72.49639893 425.91571045]
[58.28496170 433.35980225]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 211]
[3 210]
[4 209]
[5 208]
[7 20]
[8 19]
[9 18]
[10 17]
[11 16]
[28 205]
[29 204]
[30 203]
[31 202]
[32 201]
[33 200]
[34 199]
[36 198]
[37 197]
[38 196]
[39 195]
[40 194]
[43 63]
[44 62]
[45 61]
[46 59]
[47 58]
[48 57]
[49 56]
[64 120]
[65 119]
[66 118]
[67 117]
[68 116]
[72 111]
[73 110]
[74 109]
[75 108]
[76 107]
[77 106]
[78 105]
[80 103]
[81 102]
[82 101]
[85 98]
[86 97]
[122 133]
[123 132]
[124 131]
[135 192]
[136 191]
[138 189]
[139 188]
[141 186]
[142 185]
[143 184]
[144 183]
[146 160]
[147 159]
[148 158]
[149 157]
[168 180]
[169 179]
[170 178]
[171 177]
[172 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
