%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:02:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUGGCAGGCGACUCCCCGCCCCUGCCCCGCCCCCCUGGGCGAAGAGCGCGGACUUGUGGGGCCGCUGGCUGCAGACUGGAGCUGCGCGGGUCAGGGAGAUAAUGGCUGCGCGGCCGAUCACCCUCGGCAUUGACCUGGGCACCACAUCUGUGAAGGCAGCUCUGCUGAGGGCCGCGCCCGACGACCCAUCCGGGUUCGCAG\
) } def
/len { sequence length } bind def

/coor [
[122.96025085 124.95658875]
[115.85555267 129.97674561]
[107.70745087 133.02423096]
[99.05213928 133.89846802]
[90.45920563 132.54193115]
[83.16014099 145.64627075]
[75.86106873 158.75061035]
[68.56200409 171.85494995]
[61.46559906 185.07012939]
[54.57354355 198.39302063]
[47.68148804 211.71591187]
[40.78943253 225.03881836]
[45.81877899 240.02151489]
[38.70599365 254.13476562]
[23.67095947 259.00543213]
[9.63369942 251.74382019]
[4.92226982 236.65812683]
[12.33187771 222.69842529]
[27.46653557 218.14675903]
[34.35859299 204.82386780]
[41.25064850 191.50096130]
[48.14270401 178.17807007]
[47.57225037 173.43127441]
[49.98152542 168.27644348]
[55.45766830 164.55587769]
[62.75673676 151.45153809]
[70.05580139 138.34719849]
[77.35486603 125.24286652]
[75.29373169 123.22939301]
[73.41095734 121.04820251]
[59.88213348 127.52671814]
[46.35331726 134.00521851]
[32.82449722 140.48373413]
[19.29567909 146.96223450]
[10.47936440 160.78991699]
[-5.88978004 159.79838562]
[-12.97258091 145.00764465]
[-3.48286009 131.63314819]
[12.81717110 133.43342590]
[26.34598923 126.95491028]
[39.87480927 120.47640228]
[53.40362549 113.99789429]
[66.93244171 107.51938629]
[70.41480255 83.42531586]
[89.14379883 67.87295532]
[113.46750641 68.87716675]
[122.32161713 56.76912689]
[131.17573547 44.66108322]
[140.02984619 32.55304337]
[141.93016052 16.84637451]
[155.68830872 11.14001465]
[164.54241943 -0.96802688]
[173.39653015 -13.07606888]
[182.25065613 -25.18411064]
[183.24667358 -46.58662033]
[202.45384216 -54.13169479]
[210.73931885 -66.63572693]
[219.02479553 -79.13976288]
[227.31027222 -91.64379883]
[228.48316956 -107.42147064]
[241.96308899 -113.75714111]
[250.24856567 -126.26117706]
[258.53405762 -138.76521301]
[266.81951904 -151.26925659]
[268.95294189 -160.15692139]
[275.33010864 -163.90069580]
[283.80715942 -176.27565002]
[286.07717896 -185.12940979]
[292.51123047 -188.77453613]
[301.17785645 -201.01748657]
[309.84445190 -213.26043701]
[318.51104736 -225.50340271]
[319.78158569 -243.87109375]
[335.99362183 -250.58326721]
[344.47067261 -262.95822144]
[352.94772339 -275.33319092]
[350.33334351 -285.89855957]
[353.89489746 -295.95059204]
[362.22763062 -302.24804688]
[372.43176270 -302.90222168]
[381.28588867 -315.01028442]
[390.14001465 -327.11831665]
[398.99411011 -339.22634888]
[407.84823608 -351.33438110]
[416.70233154 -363.44244385]
[425.55645752 -375.55047607]
[434.41055298 -387.65850830]
[430.19348145 -397.46911621]
[430.43035889 -408.06423950]
[435.01129150 -417.53112793]
[443.04821777 -424.18856812]
[453.04629517 -426.88537598]
[463.18157959 -425.19909668]
[472.58544922 -436.88531494]
[481.98931885 -448.57150269]
[484.61297607 -464.17364502]
[498.61999512 -469.23852539]
[508.02386475 -480.92474365]
[517.42773438 -492.61096191]
[513.66821289 -502.60583496]
[514.39416504 -513.17871094]
[519.40740967 -522.42395020]
[527.74322510 -528.70312500]
[537.85516357 -530.93530273]
[547.90179443 -528.78271484]
[557.83532715 -540.02215576]
[567.76885986 -551.26159668]
[571.10968018 -559.76928711]
[577.94293213 -562.59613037]
[588.04840088 -573.68127441]
[598.15380859 -584.76635742]
[601.73297119 -600.17742920]
[616.02520752 -604.37042236]
[626.13067627 -615.45550537]
[635.62420654 -627.06896973]
[644.47833252 -639.17700195]
[653.33245850 -651.28509521]
[662.18658447 -663.39312744]
[671.04071045 -675.50115967]
[668.36907959 -691.07800293]
[677.56256104 -703.93316650]
[693.16674805 -706.43994141]
[705.92401123 -697.11108398]
[708.26568604 -681.48126221]
[698.80242920 -668.82330322]
[683.14874268 -666.64703369]
[674.29461670 -654.53900146]
[665.44049072 -642.43096924]
[656.58636475 -630.32293701]
[647.73223877 -618.21484375]
[662.54766846 -620.56109619]
[675.47149658 -612.94702148]
[680.59979248 -598.85089111]
[675.58984375 -584.71228027]
[662.73028564 -576.99005127]
[647.89581299 -579.21203613]
[637.86309814 -590.36303711]
[637.21582031 -605.35009766]
[627.11035156 -594.26495361]
[624.25396729 -579.64678955]
[609.23895264 -574.66094971]
[599.13348389 -563.57580566]
[589.02807617 -552.49066162]
[579.00830078 -541.32806396]
[569.07476807 -530.08862305]
[559.14123535 -518.84918213]
[561.76977539 -499.55093384]
[549.17071533 -484.30059814]
[529.11389160 -483.20709229]
[519.71008301 -471.52087402]
[510.30621338 -459.83468628]
[508.35516357 -445.06842041]
[493.67550659 -439.16766357]
[484.27166748 -427.48144531]
[474.86779785 -415.79522705]
[478.38482666 -396.63897705]
[466.50354004 -380.82302856]
[446.51861572 -378.80441284]
[437.66448975 -366.69638062]
[428.81039429 -354.58831787]
[419.95626831 -342.48028564]
[411.10214233 -330.37225342]
[402.24804688 -318.26419067]
[393.39392090 -306.15615845]
[384.53982544 -294.04812622]
[383.87725830 -274.72653198]
[365.32266235 -266.85614014]
[356.84561157 -254.48118591]
[348.36859131 -242.10623169]
[350.28192139 -230.15841675]
[343.31607056 -219.77813721]
[330.75402832 -216.83679199]
[322.08740234 -204.59384155]
[313.42080688 -192.35087585]
[304.75418091 -180.10792542]
[296.18209839 -167.79859924]
[287.70507812 -155.42364502]
[279.32354736 -142.98377991]
[271.03808594 -130.47973633]
[262.75259399 -117.97570038]
[254.46713257 -105.47166443]
[253.88687134 -90.58837128]
[239.81430054 -83.35832977]
[231.52882385 -70.85429382]
[223.24334717 -58.35025406]
[214.95787048 -45.84621811]
[218.12010193 -37.53925323]
[217.08627319 -28.57253838]
[211.96284485 -20.97487259]
[203.79568481 -16.52369690]
[194.35868835 -16.32999611]
[185.50457764 -4.22195530]
[176.65046692 7.88608646]
[167.79635620 19.99412918]
[166.52934265 34.83474731]
[152.13787842 41.40715408]
[143.28376770 53.51519775]
[134.42965698 65.62323761]
[125.57554626 77.73127747]
[130.39941406 84.97068787]
[133.22277832 93.19913483]
[133.85983276 101.87512970]
[132.26866150 110.42772675]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 28]
[6 27]
[7 26]
[8 25]
[9 22]
[10 21]
[11 20]
[12 19]
[30 43]
[31 42]
[32 41]
[33 40]
[34 39]
[46 199]
[47 198]
[48 197]
[49 196]
[51 194]
[52 193]
[53 192]
[54 191]
[56 186]
[57 185]
[58 184]
[59 183]
[61 181]
[62 180]
[63 179]
[64 178]
[66 177]
[67 176]
[69 175]
[70 174]
[71 173]
[72 172]
[74 169]
[75 168]
[76 167]
[80 165]
[81 164]
[82 163]
[83 162]
[84 161]
[85 160]
[86 159]
[87 158]
[93 155]
[94 154]
[95 153]
[97 151]
[98 150]
[99 149]
[105 146]
[106 145]
[107 144]
[109 143]
[110 142]
[111 141]
[113 139]
[114 138]
[115 130]
[116 129]
[117 128]
[118 127]
[119 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
