%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:44:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCGCCUCCCCCCGCGCCGCCGCCGCCCGCUACCGCCGCCGCCGCCGCUGCGCCUGCUGCUCCUCGCCGUCCGCGCUGCAGUGCGAAGGGCUCGAAGAUGGCCGGUUGGCAGAGCUACGUGGAUAACCUGAUGUGCGAUGGCUGCUGCCAGGAGGCCGCCAUUGUCGGCUACUGCGACGCCAAAUACGUCUGGGCAG\
) } def
/len { sequence length } bind def

/coor [
[64.28113556 219.52357483]
[49.77240372 213.68998718]
[42.45346451 199.87091064]
[45.78009796 184.59126282]
[58.18157196 175.06564331]
[58.65509796 160.07312012]
[59.12862778 145.08059692]
[59.60215759 130.08807373]
[49.20691299 119.27423859]
[34.20737839 119.15583801]
[19.20784760 119.03743744]
[7.98907471 129.84378052]
[-7.22089815 129.51002502]
[-17.45395088 118.74804688]
[-32.45348358 118.62964630]
[-47.45301437 118.51124573]
[-62.45254898 118.39284515]
[-77.45207977 118.27444458]
[-90.88381958 129.41876221]
[-107.31333923 125.80560303]
[-120.26407623 133.37385559]
[-128.27503967 147.01698303]
[-143.16740417 146.75828552]
[-156.11813354 154.32653809]
[-164.12910461 167.96966553]
[-179.02145386 167.71096802]
[-191.97219849 175.27922058]
[-195.99702454 187.54010010]
[-206.94761658 193.57543945]
[-218.68519592 190.62509155]
[-231.75378418 197.98796082]
[-239.63211060 212.37072754]
[-256.03097534 212.46873474]
[-264.08062744 198.18113708]
[-255.50027466 184.20581055]
[-239.11665344 184.91937256]
[-226.04806519 177.55650330]
[-217.94703674 161.99391174]
[-199.54045105 162.32849121]
[-186.58970642 154.76023865]
[-179.50506592 141.65844727]
[-163.68638611 141.37580872]
[-150.73565674 133.80755615]
[-143.65101624 120.70575714]
[-127.83232880 120.42311859]
[-114.88159180 112.85486603]
[-114.99943542 111.36841583]
[-114.99916840 109.87730408]
[-128.50636292 103.35381317]
[-144.29806519 104.31940460]
[-152.39376831 91.81703949]
[-165.90095520 85.29354858]
[-179.40814209 78.77005768]
[-192.91531372 72.24656677]
[-207.67849731 77.21509552]
[-221.28378296 70.40692902]
[-225.92953491 56.30187607]
[-239.43672180 49.77838516]
[-255.22842407 50.74397278]
[-263.32412720 38.24161530]
[-276.83129883 31.71812248]
[-292.39245605 35.62075424]
[-305.05792236 25.77367020]
[-305.11187744 9.73070812]
[-292.51290894 -0.20134410]
[-276.92587280 3.59653497]
[-270.30783081 18.21093750]
[-256.80062866 24.73442841]
[-241.97503662 23.30223465]
[-232.91322327 36.27119827]
[-219.40603638 42.79468918]
[-205.47007751 37.66394043]
[-191.67893982 44.08727646]
[-186.39183044 58.73937988]
[-172.88464355 65.26287079]
[-159.37745667 71.78636169]
[-145.87026978 78.30985260]
[-131.04467773 76.87766266]
[-121.98286438 89.84662628]
[-108.47567749 96.37011719]
[-91.47972870 91.67506409]
[-77.33367920 103.27490997]
[-62.33414841 103.39331055]
[-47.33461380 103.51171112]
[-32.33508301 103.63011169]
[-17.33555031 103.74851227]
[-6.93388128 93.14941406]
[8.27946472 93.05581665]
[19.32624817 104.03790283]
[34.32577896 104.15630341]
[49.32531357 104.27470398]
[63.93467712 67.24943542]
[99.43613434 53.42488480]
[132.16673279 69.33641052]
[144.74464417 61.16351318]
[157.32255554 52.99061966]
[164.67863464 38.98352432]
[179.56654358 38.53688431]
[192.14443970 30.36398888]
[204.72235107 22.19109344]
[217.30026245 14.01819897]
[229.87817383 5.84530354]
[242.45608521 -2.32759142]
[247.95379639 -9.63488007]
[255.29768372 -10.52840233]
[268.00305176 -18.50172043]
[280.70840454 -26.47504044]
[293.15573120 -34.84547424]
[305.33261108 -43.60468292]
[317.50949097 -52.36388779]
[329.68634033 -61.12309647]
[341.86322021 -69.88230133]
[354.04010010 -78.64151001]
[366.14746094 -87.49655914]
[378.18453979 -96.44689941]
[390.22161865 -105.39723969]
[402.25869751 -114.34758759]
[414.29580688 -123.29792786]
[426.26184082 -132.34300232]
[438.15615845 -141.48225403]
[450.05044556 -150.62150574]
[461.94473267 -159.76074219]
[468.17340088 -174.30427551]
[482.97973633 -175.92347717]
[494.87402344 -185.06271362]
[496.67782593 -200.76373291]
[509.10736084 -210.52497864]
[524.78845215 -208.55528259]
[534.41772461 -196.02322388]
[532.28234863 -180.36386108]
[519.64916992 -170.86761475]
[504.01327515 -173.16842651]
[492.11898804 -164.02917480]
[486.74105835 -150.13935852]
[471.08398438 -147.86645508]
[459.18969727 -138.72720337]
[447.29537964 -129.58796692]
[435.40109253 -120.44871521]
[432.00927734 -113.87401581]
[423.24612427 -111.26084137]
[411.20904541 -102.31050110]
[399.17196655 -93.36016083]
[387.13488770 -84.40982056]
[375.09780884 -75.45947266]
[371.60263062 -68.93914032]
[362.79931641 -66.46463013]
[350.62243652 -57.70542526]
[338.44555664 -48.94622040]
[326.26867676 -40.18701172]
[314.09179688 -31.42780495]
[301.91494751 -22.66859818]
[301.33419800 -19.91666412]
[299.62301636 -17.23021507]
[296.80126953 -15.04296589]
[293.04605103 -13.77324390]
[288.68173218 -13.76967907]
[275.97637939 -5.79636049]
[263.27099609 2.17695856]
[250.62898254 10.25031662]
[238.05107117 18.42321205]
[225.47315979 26.59610748]
[212.89524841 34.76900101]
[200.31733704 42.94189835]
[187.73944092 51.11479187]
[181.28302002 64.53730774]
[165.49545288 65.56852722]
[152.91754150 73.74142456]
[140.33963013 81.91432190]
[139.15684509 96.86761475]
[150.29344177 106.91629791]
[166.43495178 109.81174469]
[171.74288940 125.32811737]
[160.75689697 137.50350952]
[144.77842712 133.81291199]
[140.24476624 118.05290222]
[129.10815430 108.00421906]
[117.21386719 117.14346313]
[124.05535126 130.49240112]
[130.89683533 143.84133911]
[137.73832703 157.19026184]
[153.02267456 160.49523926]
[162.56585693 172.88320923]
[161.86189270 188.50492859]
[151.24314880 199.98432922]
[135.72349548 201.90116882]
[122.63082886 193.35038757]
[118.14710236 178.36938477]
[124.38939667 164.03175354]
[117.54790497 150.68281555]
[110.70642090 137.33387756]
[103.86492920 123.98494720]
[89.22915649 127.27342987]
[74.59468079 130.56159973]
[74.12115479 145.55412292]
[73.64762115 160.54664612]
[73.17409515 175.53916931]
[84.94972992 185.82841492]
[87.30550385 201.28752136]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 196]
[6 195]
[7 194]
[8 193]
[9 91]
[10 90]
[11 89]
[14 86]
[15 85]
[16 84]
[17 83]
[18 82]
[20 46]
[21 45]
[23 43]
[24 42]
[26 40]
[27 39]
[30 37]
[31 36]
[48 80]
[49 79]
[51 77]
[52 76]
[53 75]
[54 74]
[57 71]
[58 70]
[60 68]
[61 67]
[94 168]
[95 167]
[96 166]
[98 164]
[99 163]
[100 162]
[101 161]
[102 160]
[103 159]
[105 158]
[106 157]
[107 156]
[108 151]
[109 150]
[110 149]
[111 148]
[112 147]
[113 146]
[114 144]
[115 143]
[116 142]
[117 141]
[118 140]
[119 138]
[120 137]
[121 136]
[122 135]
[124 133]
[125 132]
[169 176]
[170 175]
[177 191]
[178 190]
[179 189]
[180 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
