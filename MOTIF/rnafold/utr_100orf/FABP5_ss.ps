%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:31:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCCGCCCAGCGCGGGCCGCCGUUAUAAAGCAGCCGCCGGCGCCGGGUGCCUCACAGCACGCUGCCACGCCGACGCAGACCCCUCUCUGCACGCCAGCCCGCCCGCACCCACCAUGGCCACAGUUCAGCAGCUGGAAGGAAGAUGGCGCCUGGUGGACAGCAAAGGCUUUGAUGAAUACAUGAAGGAGCUAGGAGUGGGAAUAGCUUUGCGAA\
) } def
/len { sequence length } bind def

/coor [
[-150.16244507 395.06823730]
[-164.63813782 398.99621582]
[-179.55603027 397.73699951]
[-193.11724854 391.46176147]
[-203.64570618 402.14593506]
[-214.17417908 412.83010864]
[-224.70263672 423.51425171]
[-235.23109436 434.19842529]
[-239.40629578 449.45877075]
[-253.85064697 453.09335327]
[-264.37911987 463.77752686]
[-274.90756226 474.46170044]
[-285.43603516 485.14584351]
[-289.61123657 500.40621948]
[-304.05557251 504.04077148]
[-314.58404541 514.72491455]
[-325.11248779 525.40911865]
[-329.28768921 540.66943359]
[-343.73205566 544.30401611]
[-354.26049805 554.98822021]
[-358.43569946 570.24853516]
[-372.88006592 573.88311768]
[-383.40850830 584.56726074]
[-393.93698120 595.25146484]
[-397.53909302 611.25012207]
[-413.27377319 615.87091064]
[-424.95452881 604.36041260]
[-420.56518555 588.55957031]
[-404.62115479 584.72296143]
[-394.09268188 574.03881836]
[-383.56423950 563.35467529]
[-380.14208984 548.85852051]
[-364.94467163 544.45971680]
[-354.41622925 533.77557373]
[-350.99407959 519.27941895]
[-335.79666138 514.88067627]
[-325.26821899 504.19647217]
[-314.73974609 493.51229858]
[-311.31762695 479.01617432]
[-296.12020874 474.61740112]
[-285.59173584 463.93322754]
[-275.06326294 453.24905396]
[-264.53482056 442.56488037]
[-261.11267090 428.06872559]
[-245.91526794 423.66998291]
[-235.38681030 412.98580933]
[-224.85833740 402.30163574]
[-214.32987976 391.61746216]
[-203.80142212 380.93328857]
[-210.27505493 367.46563721]
[-211.75314331 352.56784058]
[-208.03808594 338.03607178]
[-199.55955505 325.62896729]
[-187.32495117 316.85488892]
[-172.79963684 312.78851318]
[-157.73152161 313.93917847]
[-143.94071960 320.18728638]
[-133.41224670 309.50314331]
[-122.88378906 298.81896973]
[-119.38668060 281.62097168]
[-101.59355164 276.87493896]
[-91.22306061 266.03738403]
[-80.85257721 255.19979858]
[-70.48208618 244.36222839]
[-60.35274506 233.29893494]
[-50.46945953 222.01528931]
[-40.58617401 210.73164368]
[-30.70288658 199.44799805]
[-28.13739586 184.77600098]
[-13.22432899 179.49291992]
[-3.34104204 168.20927429]
[-7.64885235 161.45649719]
[-9.27443409 152.85815430]
[-7.47626734 143.53450012]
[-1.99136889 134.88337708]
[-11.87465572 123.59973907]
[-21.75794220 112.31609344]
[-31.64122963 101.03244781]
[-41.52451706 89.74880219]
[-57.30889511 88.95572662]
[-67.84722900 77.17781830]
[-66.88731384 61.40270996]
[-54.99864578 50.98948669]
[-39.23456573 52.11613464]
[-28.94762230 64.11422729]
[-30.24087334 79.86551666]
[-20.35758591 91.14916229]
[-10.47429848 102.43280792]
[-0.59101135 113.71645355]
[9.29227543 125.00009918]
[4.33619595 110.84250641]
[11.44599915 97.63452911]
[25.99281502 93.97527313]
[38.50587082 102.24711609]
[40.83848572 117.06463623]
[31.47239494 128.78060913]
[44.53555298 121.40811157]
[57.59871292 114.03559875]
[70.60740662 106.56740570]
[83.56092834 99.00392914]
[97.77369690 57.81355667]
[108.45786285 47.28509521]
[119.14203644 36.75662994]
[123.62223053 17.10083961]
[142.53192139 13.05591774]
[152.90240479 2.21834373]
[152.19763184 -15.26195049]
[164.11930847 -27.59989166]
[180.93783569 -27.49897385]
[191.14811707 -38.48761749]
[201.35838318 -49.47626114]
[211.56866455 -60.46490097]
[221.77894592 -71.45354462]
[231.98921204 -82.44219208]
[231.02790833 -99.91025543]
[242.76718140 -112.42187500]
[259.58538818 -112.56785583]
[269.63323975 -123.70520020]
[279.68112183 -134.84254456]
[289.72897339 -145.97988892]
[299.01971436 -157.75624084]
[307.51278687 -170.12020874]
[316.00582886 -182.48417664]
[324.49890137 -194.84814453]
[332.99197388 -207.21212769]
[333.73452759 -223.59445190]
[348.41586304 -230.90132141]
[361.93310547 -221.61604309]
[360.38085938 -205.29052734]
[345.35595703 -198.71905518]
[336.86288452 -186.35508728]
[328.36981201 -173.99110413]
[319.87673950 -161.62713623]
[311.38366699 -149.26316833]
[325.71301270 -153.69821167]
[340.19317627 -149.78350830]
[350.33587646 -138.73243713]
[352.99722290 -123.97042084]
[347.35235596 -110.07310486]
[335.15090942 -101.34812164]
[320.17492676 -100.49988556]
[307.06634521 -107.79130554]
[299.88830566 -120.96232605]
[300.86630249 -135.93202209]
[290.81845093 -124.79468536]
[280.77059937 -113.65734100]
[270.72271729 -102.51999664]
[273.17846680 -89.87228394]
[267.82186890 -77.94106293]
[256.40383911 -71.17326355]
[242.97785950 -72.23191071]
[232.76757812 -61.24327087]
[222.55731201 -50.25462723]
[212.34703064 -39.26598358]
[202.13676453 -28.27734184]
[191.92648315 -17.28869820]
[194.19630432 -4.60629606]
[188.66513062 7.24500227]
[177.14898682 13.84445953]
[163.73999023 12.58882999]
[153.36949158 23.42640495]
[154.51254272 33.57773590]
[149.78102112 42.87839508]
[140.52149963 48.14916992]
[129.67050171 47.44079971]
[118.98632812 57.96926498]
[108.30215454 68.49772644]
[110.60527802 83.32053375]
[112.90817261 98.14202881]
[126.28325653 104.93225861]
[142.09101868 104.28021240]
[149.93702698 116.94075012]
[163.31211853 123.73097992]
[176.68719482 130.52120972]
[193.02456665 129.09909058]
[202.20185852 142.68986511]
[194.77825928 157.31253052]
[178.39053345 157.92453003]
[169.89697266 143.89628601]
[156.52188110 137.10606384]
[143.14680481 130.31582642]
[128.29571533 131.45356750]
[119.49302673 118.30733490]
[106.11794281 111.51710510]
[91.12440491 111.95745087]
[78.17088318 119.52093506]
[72.33966827 126.54888916]
[64.97122192 127.09876251]
[51.90806198 134.47126770]
[38.84490204 141.84378052]
[34.78005981 173.81816101]
[7.94260263 178.09255981]
[-1.94068456 189.37620544]
[-5.21309233 204.85528564]
[-19.41924095 209.33128357]
[-29.30252838 220.61492920]
[-39.18581390 231.89857483]
[-49.06910324 243.18222046]
[-50.08193588 248.29826355]
[-52.69367218 252.13200378]
[-56.14871979 254.28929138]
[-59.64451599 254.73271179]
[-70.01499939 265.57028198]
[-80.38549042 276.40786743]
[-90.75597382 287.24545288]
[-91.25237274 300.13256836]
[-100.11117554 308.94555664]
[-112.19962311 309.34741211]
[-122.72808075 320.03158569]
[-133.25654602 330.71575928]
[-126.80666351 344.41336060]
[-125.43490601 359.46295166]
[-129.28762817 374.04641724]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 49]
[5 48]
[6 47]
[7 46]
[8 45]
[10 43]
[11 42]
[12 41]
[13 40]
[15 38]
[16 37]
[17 36]
[19 34]
[20 33]
[22 31]
[23 30]
[24 29]
[57 210]
[58 209]
[59 208]
[61 205]
[62 204]
[63 203]
[64 202]
[65 198]
[66 197]
[67 196]
[68 195]
[70 193]
[71 192]
[75 90]
[76 89]
[77 88]
[78 87]
[79 86]
[96 190]
[97 189]
[98 188]
[99 186]
[100 185]
[101 167]
[102 166]
[103 165]
[105 161]
[106 160]
[109 156]
[110 155]
[111 154]
[112 153]
[113 152]
[114 151]
[117 147]
[118 146]
[119 145]
[120 144]
[121 134]
[122 133]
[123 132]
[124 131]
[125 130]
[169 184]
[170 183]
[172 181]
[173 180]
[174 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
