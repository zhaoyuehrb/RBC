%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:57:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCUGCCCUGUGGCAGCUUAUCGGGUAACCAGAGCCGGCAGCUUCAUCCACGUCUGAAACAGGAAGCCCCAGCCUGUGCAUGAGUCGCCACUGAGAGCCCGGGCCAGAGGAUGGAGAAGCAGCGGGCACUCGUGGCCGCCAAGGAUGGGGAUGUGGCGACGUUGGAGCGGCUGCUGGAGGCUGGCGCCCUGGGCCCGGGCAUCACCGAUG\
) } def
/len { sequence length } bind def

/coor [
[157.22856140 348.47839355]
[157.47409058 342.29727173]
[159.44703674 336.39178467]
[163.01208496 331.23797607]
[167.90466309 327.25787354]
[165.23886108 312.49667358]
[162.57305908 297.73544312]
[159.90727234 282.97424316]
[146.37078857 269.16659546]
[153.47776794 250.30252075]
[150.37365723 235.62722778]
[147.26954651 220.95191956]
[137.06594849 210.10130310]
[141.77993774 194.99870300]
[138.67582703 180.32339478]
[135.57171631 165.64810181]
[132.46762085 150.97279358]
[129.36351013 136.29748535]
[126.25939178 121.62219238]
[119.07328796 119.47512817]
[108.16857147 129.77499390]
[104.70107269 115.18099976]
[97.51496887 113.03394318]
[86.86895752 123.60099030]
[83.09008026 139.55880737]
[67.30524445 144.00527954]
[55.75254440 132.36625671]
[60.31639862 116.61495972]
[76.30191040 112.95497894]
[86.94792175 102.38793182]
[71.98117065 101.38976288]
[64.12679291 88.61052704]
[69.99571991 74.80633545]
[84.64815521 71.59598541]
[95.75135803 81.68166351]
[95.97468567 66.68332672]
[96.19801331 51.68499374]
[96.42134094 36.68665695]
[96.64466858 21.68831825]
[96.86799622 6.68998051]
[97.09132385 -8.30835724]
[97.31465912 -23.30669403]
[97.53798676 -38.30503082]
[87.10661316 -46.82566071]
[83.53931427 -59.61177826]
[87.92259216 -71.93528748]
[98.44508362 -79.37213898]
[98.89169312 -94.36548615]
[99.33830261 -109.35883331]
[99.78490448 -124.35218811]
[100.11988068 -139.34844971]
[100.34320831 -154.34678650]
[100.56653595 -169.34512329]
[100.78986359 -184.34346008]
[89.17592621 -191.76687622]
[82.79721069 -203.86360168]
[83.22525024 -217.42407227]
[90.24133301 -228.90965271]
[101.92156982 -235.37603760]
[102.36817932 -250.36938477]
[102.81478119 -265.36273193]
[96.06351471 -270.27243042]
[91.85012054 -277.36981201]
[90.79681396 -285.46142578]
[93.00153351 -293.22021484]
[98.03392792 -299.40310669]
[105.01701355 -303.05017090]
[106.35524750 -317.99035645]
[107.69348145 -332.93054199]
[109.03171539 -347.87072754]
[110.36994934 -362.81091309]
[103.89469147 -377.24633789]
[112.73661041 -389.23257446]
[114.07484436 -404.17276001]
[115.41307831 -419.11294556]
[102.40427399 -411.64495850]
[88.39926910 -417.01708984]
[83.72203827 -431.26922607]
[91.82045746 -443.89523315]
[106.72467041 -445.58764648]
[117.44728088 -435.10046387]
[119.89301300 -449.89974976]
[118.20470428 -458.87680054]
[122.48690033 -464.90048218]
[125.15269470 -479.66168213]
[119.99112701 -494.61724854]
[129.86714172 -505.76684570]
[132.53294373 -520.52807617]
[135.19873047 -535.28930664]
[137.86453247 -550.05047607]
[140.53031921 -564.81170654]
[138.97586060 -573.81292725]
[143.34725952 -579.77215576]
[146.23252869 -594.49206543]
[149.11781311 -609.21191406]
[144.17947388 -624.24267578]
[154.22039795 -635.24401855]
[157.10566711 -649.96392822]
[159.99095154 -664.68377686]
[162.87622070 -679.40368652]
[165.76148987 -694.12359619]
[151.70448303 -711.67218018]
[155.19117737 -733.60498047]
[173.53504944 -745.62640381]
[175.09556580 -760.54498291]
[176.65608215 -775.46356201]
[167.71131897 -788.78167725]
[172.68402100 -804.03460693]
[187.75956726 -809.52160645]
[201.37327576 -801.03363037]
[203.08187866 -785.08178711]
[191.57469177 -773.90307617]
[190.01417542 -758.98443604]
[188.45364380 -744.06585693]
[195.39294434 -740.08306885]
[200.88282776 -734.21630859]
[204.42643738 -726.96765137]
[205.69464111 -718.96527100]
[204.55645752 -710.90930176]
[201.09233093 -703.51037598]
[195.58871460 -697.42700195]
[188.51458740 -693.20709229]
[180.48138428 -691.23828125]
[177.59611511 -676.51843262]
[174.71083069 -661.79852295]
[171.82556152 -647.07861328]
[168.94029236 -632.35876465]
[174.08499146 -618.38085938]
[163.83769226 -606.32666016]
[160.95242310 -591.60675049]
[158.06715393 -576.88690186]
[155.29153442 -562.14593506]
[152.62574768 -547.38470459]
[149.95994568 -532.62347412]
[147.29415894 -517.86224365]
[144.62835693 -503.10104370]
[149.98060608 -489.20132446]
[139.91390991 -476.99588013]
[137.24810791 -462.23468018]
[134.69227600 -447.45401001]
[132.24655151 -432.65475464]
[130.35325623 -417.77471924]
[129.01502991 -402.83453369]
[127.67679596 -387.89434814]
[134.24777222 -374.52752686]
[125.31013489 -361.47268677]
[123.97190094 -346.53250122]
[122.63366699 -331.59231567]
[121.29543304 -316.65213013]
[119.95719910 -301.71194458]
[130.94868469 -283.06729126]
[117.80813599 -264.91613770]
[117.36152649 -249.92277527]
[116.91492462 -234.92942810]
[130.21730042 -225.31048584]
[135.21514893 -209.49963379]
[129.74990845 -193.66824341]
[115.78820038 -184.12013245]
[115.56487274 -169.12179565]
[115.34154510 -154.12345886]
[115.11821747 -139.12512207]
[118.16178131 -132.39024353]
[114.77825165 -123.90557861]
[114.33164978 -108.91223145]
[113.88504028 -93.91887665]
[113.43843842 -78.92552948]
[125.48358154 -67.18869781]
[125.30982971 -50.03396988]
[112.53632355 -38.08170319]
[112.31299591 -23.08336639]
[112.08966827 -8.08502960]
[111.86634064 6.91330814]
[111.64301300 21.91164589]
[111.41968536 36.90998459]
[111.19635773 51.90832138]
[110.97303009 66.90665436]
[110.74970245 81.90499878]
[140.93469238 118.51808167]
[144.03880310 133.19337463]
[147.14291382 147.86868286]
[150.24702454 162.54399109]
[153.35113525 177.21928406]
[156.45524597 191.89459229]
[166.88087463 203.79487610]
[161.94485474 217.84780884]
[165.04896545 232.52311707]
[168.15307617 247.19841003]
[177.59706116 252.59469604]
[182.41299438 262.10189819]
[181.22622681 272.47204590]
[174.66848755 280.30844116]
[177.33428955 295.06967163]
[180.00007629 309.83087158]
[182.66587830 324.59210205]
[200.22921753 341.53890991]
[191.77574158 363.67565918]
[195.96275330 378.07943726]
[200.14976501 392.48321533]
[214.11927795 399.87432861]
[218.69099426 415.00292969]
[211.15260315 428.89352417]
[195.97650146 433.30505371]
[182.16639709 425.62020874]
[177.91558838 410.39831543]
[185.74598694 396.67022705]
[181.55897522 382.26644897]
[177.37196350 367.86267090]
[171.50317383 366.69238281]
[166.15809631 363.91265869]
[161.77159119 359.72424316]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 194]
[6 193]
[7 192]
[8 191]
[10 187]
[11 186]
[12 185]
[14 183]
[15 182]
[16 181]
[17 180]
[18 179]
[19 178]
[23 30]
[24 29]
[35 177]
[36 176]
[37 175]
[38 174]
[39 173]
[40 172]
[41 171]
[42 170]
[43 169]
[47 166]
[48 165]
[49 164]
[50 163]
[51 161]
[52 160]
[53 159]
[54 158]
[59 154]
[60 153]
[61 152]
[67 150]
[68 149]
[69 148]
[70 147]
[71 146]
[73 144]
[74 143]
[75 142]
[81 141]
[82 140]
[84 139]
[85 138]
[87 136]
[88 135]
[89 134]
[90 133]
[91 132]
[93 131]
[94 130]
[95 129]
[97 127]
[98 126]
[99 125]
[100 124]
[101 123]
[104 114]
[105 113]
[106 112]
[196 207]
[197 206]
[198 205]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
