%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:49:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCACAAAAGGAGGAAGGACAGCACAGCUGACAGCCGUGCUCAGAAAGUUUCUGGAUCCCAGGCUCAUCUCCACAGAGGAGAACACGCAGGCAGCAGAGACCAUGGGGCCCAUCUCAGCCCCUUCCUGCAGAUGGCGCAUCCCCUGGCAGGGGCUCCUGCUCACAGCCUCACUUUUCACCUUCUGGAACCCGCCCACCACUG\
) } def
/len { sequence length } bind def

/coor [
[99.36507416 363.98858643]
[104.15332031 349.68002319]
[112.48255157 337.09884644]
[123.78486633 327.10284424]
[137.28965759 320.37356567]
[134.29219055 305.67611694]
[124.16763306 294.75170898]
[128.99116516 279.68371582]
[125.99369812 264.98626709]
[122.99623108 250.28880310]
[119.99876404 235.59135437]
[109.87421417 224.66693115]
[114.69774628 209.59895325]
[111.70027924 194.90150452]
[108.70281219 180.20404053]
[105.70534515 165.50659180]
[102.70787048 150.80914307]
[99.71040344 136.11167908]
[91.27632141 137.15757751]
[82.38937378 136.16282654]
[73.55558777 132.98667908]
[61.27200317 141.59559631]
[48.98842239 150.20452881]
[36.70484161 158.81346130]
[24.42126083 167.42237854]
[17.56088257 181.67881775]
[2.69779301 182.64724731]
[-9.58578777 191.25616455]
[-21.86936951 199.86509705]
[-31.36995316 213.90701294]
[-47.49312210 208.66490173]
[-46.91921616 191.72067261]
[-30.47829628 187.58151245]
[-18.19471550 178.97259521]
[-5.91113472 170.36366272]
[0.07063951 156.72300720]
[15.81233215 155.13880920]
[28.09591293 146.52987671]
[40.37949371 137.92094421]
[52.66307449 129.31202698]
[64.94665527 120.70309448]
[59.82847595 106.60330200]
[44.88277817 107.87850952]
[29.93708229 109.15372467]
[14.99138737 110.42893982]
[0.04569094 111.70415497]
[-15.22207451 119.07515717]
[-26.53155327 106.44456482]
[-17.52533913 92.08056641]
[-1.22952354 96.75846100]
[13.71617222 95.48324585]
[28.66186905 94.20803070]
[43.60756302 92.93281555]
[58.55326080 91.65760040]
[62.27622986 82.95156097]
[67.75249481 75.47071075]
[74.62758636 69.54945374]
[82.48815918 65.42704773]
[90.88616943 63.23858643]
[99.36418152 63.01188660]
[107.48011780 64.67033386]
[113.56702423 50.96086502]
[119.65393066 37.25139618]
[125.74084473 23.54192734]
[131.82775879 9.83245850]
[120.77084351 -3.77876997]
[117.50170898 -20.87695885]
[122.68049622 -37.36219025]
[111.71107483 -47.59310913]
[100.74164581 -57.82402420]
[89.77222443 -68.05494690]
[78.80279541 -78.28586578]
[62.78393555 -79.16659546]
[53.60271072 -92.32276154]
[58.30217361 -107.66207886]
[73.27729797 -113.41753387]
[87.04044342 -105.17403412]
[89.03371429 -89.25528717]
[100.00314331 -79.02436829]
[110.97256470 -68.79344940]
[121.94199371 -58.56253433]
[132.91142273 -48.33161545]
[139.54045105 -51.94120407]
[146.78585815 -54.05709839]
[154.31562805 -54.58232880]
[161.78463745 -53.49282455]
[168.85058594 -50.83851624]
[178.29339600 -62.49327087]
[187.73622131 -74.14802551]
[197.17903137 -85.80278015]
[206.62184143 -97.45753479]
[209.59542847 -106.10134125]
[216.30207825 -109.21810150]
[225.92411804 -120.72532654]
[235.54615784 -132.23255920]
[229.33538818 -146.13175964]
[229.77345276 -161.28744507]
[236.71994019 -174.69514465]
[248.74949646 -183.72015381]
[263.44396973 -186.61526489]
[277.87847900 -182.85877991]
[287.50051880 -194.36599731]
[297.12255859 -205.87322998]
[300.03927612 -221.42326355]
[314.13909912 -226.22372437]
[323.76113892 -237.73095703]
[333.38317871 -249.23818970]
[342.82598877 -260.89294434]
[352.08731079 -272.69241333]
[361.25704956 -284.56323242]
[370.33465576 -296.50460815]
[379.41226196 -308.44601440]
[388.48989868 -320.38742065]
[397.56750488 -332.32879639]
[406.64511108 -344.27020264]
[415.63006592 -356.28149414]
[424.52178955 -368.36193848]
[433.41351318 -380.44238281]
[429.54885864 -395.59487915]
[436.37475586 -409.66403198]
[450.66821289 -416.00680542]
[465.68032837 -411.62835693]
[474.32281494 -398.59600830]
[472.51495361 -383.06329346]
[461.11035156 -372.36425781]
[445.49395752 -371.55062866]
[436.60223389 -359.47018433]
[427.71051025 -347.38973999]
[426.27636719 -340.13464355]
[418.58651733 -335.19259644]
[409.50891113 -323.25119019]
[400.43127441 -311.30978394]
[391.35366821 -299.36840820]
[382.27606201 -287.42700195]
[373.19845581 -275.48559570]
[371.65219116 -268.25357056]
[363.88681030 -263.43109131]
[354.62548828 -251.63162231]
[354.29858398 -246.86109924]
[350.96719360 -242.24693298]
[344.89041138 -239.61613464]
[335.26837158 -228.10891724]
[325.64633179 -216.60168457]
[323.41781616 -201.87472534]
[308.62976074 -196.25119019]
[299.00772095 -184.74395752]
[289.38568115 -173.23674011]
[295.63824463 -159.69526672]
[295.39028931 -144.72036743]
[288.63748169 -131.28308105]
[276.67132568 -122.07269287]
[261.83255005 -118.95847321]
[247.05339050 -122.61051941]
[237.43135071 -111.10328674]
[227.80931091 -99.59606171]
[218.27659607 -88.01472473]
[208.83378601 -76.35997009]
[199.39097595 -64.70521545]
[189.94815063 -53.05045700]
[180.50534058 -41.39570618]
[187.80448914 -25.84950066]
[186.90802002 -8.62167835]
[177.95550537 6.21427011]
[162.99990845 15.11629963]
[145.53721619 15.91936779]
[139.45031738 29.62883568]
[133.36340332 43.33830643]
[127.27649689 57.04777527]
[121.18958282 70.75724030]
[135.05741882 91.33309174]
[132.37466431 116.00058746]
[114.40785980 133.11421204]
[117.40532684 147.81166077]
[120.40279388 162.50912476]
[123.40026855 177.20657349]
[126.39773560 191.90403748]
[129.39520264 206.60148621]
[139.73414612 218.57716370]
[134.69621277 232.59387207]
[137.69367981 247.29133606]
[140.69116211 261.98880005]
[143.68862915 276.68624878]
[154.02757263 288.66192627]
[148.98963928 302.67864990]
[151.98710632 317.37609863]
[167.04852295 318.27944946]
[181.36264038 323.05111694]
[193.95346069 331.36575317]
[203.96255493 342.65649414]
[210.70747375 356.15347290]
[213.72833252 370.93646240]
[212.81916809 385.99752808]
[208.04196167 400.30978394]
[199.72245789 412.89739990]
[188.42785645 422.90213013]
[174.92828369 429.64184570]
[160.14411926 432.65698242]
[145.08340454 431.74200439]
[130.77299500 426.95928955]
[118.18858337 418.63491821]
[108.18821716 407.33645630]
[101.45372772 393.83428955]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 185]
[6 184]
[8 182]
[9 181]
[10 180]
[11 179]
[13 177]
[14 176]
[15 175]
[16 174]
[17 173]
[18 172]
[21 41]
[22 40]
[23 39]
[24 38]
[25 37]
[27 35]
[28 34]
[29 33]
[42 54]
[43 53]
[44 52]
[45 51]
[46 50]
[61 169]
[62 168]
[63 167]
[64 166]
[65 165]
[68 82]
[69 81]
[70 80]
[71 79]
[72 78]
[87 160]
[88 159]
[89 158]
[90 157]
[91 156]
[93 155]
[94 154]
[95 153]
[101 147]
[102 146]
[103 145]
[105 143]
[106 142]
[107 141]
[108 138]
[109 137]
[110 135]
[111 134]
[112 133]
[113 132]
[114 131]
[115 130]
[116 128]
[117 127]
[118 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
