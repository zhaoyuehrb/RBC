%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:49:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUGAGACAUGCUGAGCAAAGGCCGGAGCCCCAGAAGAAAACAAGUACAGACUCAGAGGAAAGCUGCCCUGGUCCUGAGUGUGACUCCCAUGGUCCCCGUGGGGUCUG\
) } def
/len { sequence length } bind def

/coor [
[102.69927216 205.30606079]
[87.49689484 208.96965027]
[73.51939392 201.95797729]
[67.36651611 187.58175659]
[71.94345856 172.62896729]
[85.08913422 164.15989685]
[86.79900360 149.25765991]
[88.50887299 134.35543823]
[90.21874237 119.45320892]
[83.58549500 115.95320892]
[63.68575668 105.45319366]
[52.34951401 115.27610016]
[41.01326752 125.09901428]
[33.00236130 140.04095459]
[16.42671394 136.47946167]
[15.26043034 119.56568146]
[31.19035721 113.76277161]
[42.52659988 103.93985748]
[53.86284637 94.11695099]
[51.04226685 87.16753387]
[45.40110779 73.26871490]
[42.58052826 66.31929779]
[27.60499191 67.17562866]
[12.62945461 68.03196716]
[-0.77703983 77.47643280]
[-15.54375744 70.34368134]
[-16.47996521 53.97127914]
[-2.62257290 45.20174789]
[11.77312279 53.05642700]
[26.74865913 52.20009613]
[41.72419739 51.34376144]
[28.17137909 44.91561127]
[29.63404083 29.98709297]
[35.59563065 16.22266769]
[45.48395920 4.94343996]
[58.34994507 -2.76801062]
[72.95870972 -6.17153978]
[87.90810394 -4.94047785]
[101.76329803 0.80701876]
[113.19445801 10.51930523]
[121.10443115 23.26419830]
[124.73402405 37.81844330]
[123.73485565 52.78512955]
[118.20331573 66.72693634]
[116.28382111 81.60360718]
[125.10060120 69.46835327]
[133.91737366 57.33309937]
[136.48724365 48.40806580]
[143.16326904 44.98204422]
[152.32298279 33.10350800]
[154.62284851 17.45035553]
[168.52191162 12.09636688]
[177.68162537 0.21783282]
[186.84133911 -11.66070080]
[196.00106812 -23.53923416]
[205.16078186 -35.41776657]
[214.32049561 -47.29630280]
[222.78715515 -59.67837906]
[230.53311157 -72.52361298]
[238.27906799 -85.36885071]
[232.11492920 -99.60903931]
[235.53103638 -114.74540710]
[247.21385193 -124.95772552]
[262.67108154 -126.31913757]
[275.95913696 -118.30615997]
[281.96844482 -103.99993896]
[278.38830566 -88.90151978]
[266.59539795 -78.81654358]
[251.12431335 -77.62288666]
[243.37834167 -64.77765656]
[235.63238525 -51.93241882]
[236.29177856 -49.06040192]
[235.76519775 -45.73719406]
[233.86791992 -42.44789886]
[230.60746765 -39.73732376]
[226.19903564 -38.13658524]
[217.03932190 -26.25805092]
[207.87959290 -14.37951660]
[198.71987915 -2.50098276]
[189.56016541 9.37755108]
[180.40043640 21.25608444]
[178.75575256 36.05960464]
[164.20150757 42.26322556]
[155.04179382 54.14176178]
[146.05262756 66.14987946]
[137.23585510 78.28513336]
[128.41906738 90.42038727]
[129.70269775 105.36536407]
[140.45967102 115.81942749]
[151.21665955 126.27349091]
[161.97363281 136.72755432]
[172.73060608 147.18162537]
[183.48757935 157.63568115]
[194.24456787 168.08975220]
[209.81723022 174.79261780]
[207.68725586 191.61222839]
[190.93531799 194.22163391]
[183.79049683 178.84672546]
[173.03352356 168.39265442]
[162.27655029 157.93859863]
[151.51956177 147.48452759]
[140.76258850 137.03047180]
[130.00561523 126.57640839]
[119.24863434 116.12234497]
[105.12097168 121.16308594]
[103.41110229 136.06530762]
[101.70122528 150.96752930]
[99.99135590 165.86976624]
[110.87718201 177.09620667]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 108]
[7 107]
[8 106]
[9 105]
[11 19]
[12 18]
[13 17]
[22 31]
[23 30]
[24 29]
[45 87]
[46 86]
[47 85]
[49 84]
[50 83]
[52 81]
[53 80]
[54 79]
[55 78]
[56 77]
[57 76]
[58 71]
[59 70]
[60 69]
[88 104]
[89 103]
[90 102]
[91 101]
[92 100]
[93 99]
[94 98]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
