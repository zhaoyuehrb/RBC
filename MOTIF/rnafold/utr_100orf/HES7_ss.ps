%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:08:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGAGCAAUGGUCACCCGGGAUCGAGCUGAGAAUAGGGACGGCCCCAAGAUGCUCAAGCCGCUUGUGGAGAAGCGGCGCCGGGACCGCAUCAACCGCAGCCUGGAAG\
) } def
/len { sequence length } bind def

/coor [
[78.57303619 127.07809448]
[71.91791534 120.09313965]
[67.45502472 111.53960419]
[65.53277588 102.08522797]
[50.72084808 99.71736145]
[35.90892029 97.34950256]
[21.09699059 94.98163605]
[6.28506279 92.61376953]
[-9.63738728 106.11293030]
[-30.10084534 103.83849335]
[-42.32698059 87.62785339]
[-57.31296539 86.97956085]
[-72.29895020 86.33126831]
[-87.28493500 85.68297577]
[-103.31974030 94.59151459]
[-117.78895569 84.77716064]
[-132.78739929 84.56100464]
[-147.78584290 84.34484863]
[-156.05435181 98.57975006]
[-170.26980591 106.69492340]
[-186.54476929 106.57905579]
[-200.48240662 98.35716248]
[-208.36439514 84.33152008]
[-223.36283875 84.54767609]
[-235.52861023 95.00584412]
[-251.26287842 91.87337494]
[-258.49566650 77.55323029]
[-251.67855835 63.03059769]
[-236.04110718 59.44599915]
[-223.57899475 69.54923248]
[-208.58055115 69.33307648]
[-202.67541504 56.92882919]
[-191.92985535 48.26283646]
[-178.42681885 45.08887863]
[-164.81600952 48.08890915]
[-153.79391479 56.72750854]
[-147.56968689 69.34640503]
[-132.57124329 69.56256104]
[-117.57279205 69.77872467]
[-108.59305573 61.53234482]
[-95.99933624 61.68175125]
[-86.63664246 70.69699097]
[-71.65065765 71.34528351]
[-56.66467285 71.99357605]
[-41.67868805 72.64186859]
[-36.88511658 64.21694183]
[-29.25203896 58.14791107]
[-19.85128593 55.34275055]
[-10.02387047 56.24715424]
[-1.18870330 60.77437210]
[5.36226702 68.31143951]
[8.65292740 77.80184174]
[23.46485519 80.16970825]
[38.27678299 82.53757477]
[53.08871078 84.90543365]
[67.90064240 87.27330017]
[80.51615143 71.49180603]
[99.80211639 65.47032166]
[119.15583038 71.27036285]
[129.98921204 60.89550018]
[140.82260132 50.52063751]
[151.65597534 40.14577103]
[162.48936462 29.77090836]
[173.32273865 19.39604378]
[184.15612793 9.02117920]
[184.24711609 -6.78284788]
[195.54516602 -17.83407211]
[211.34735107 -17.57599831]
[222.27850342 -6.16173792]
[221.85337830 9.63683224]
[210.32418823 20.44669914]
[194.53099060 19.85456276]
[183.69761658 30.22942734]
[172.86422729 40.60429001]
[162.03083801 50.97915649]
[151.19746399 61.35401917]
[140.36407471 71.72888184]
[129.53070068 82.10374451]
[134.44064331 97.51407623]
[131.79469299 113.46979523]
[144.00572205 122.18132019]
[156.21676636 130.89283752]
[168.42779541 139.60435486]
[180.63883972 148.31588745]
[193.67149353 144.57130432]
[206.28117371 148.99890137]
[213.88601685 159.75000000]
[213.86215210 172.72334290]
[225.81707764 181.78314209]
[241.02214050 178.13076782]
[254.99446106 185.15275574]
[261.13674927 199.53352356]
[256.54876709 214.48292542]
[243.39685059 222.94230652]
[227.89091492 220.91740417]
[217.35240173 209.36431885]
[216.75726318 193.73806763]
[204.80235291 184.67826843]
[188.33125305 187.71539307]
[174.44392395 177.76440430]
[171.92730713 160.52691650]
[159.71627808 151.81539917]
[147.50523376 143.10388184]
[135.29420471 134.39234924]
[123.08316803 125.68083191]
[115.07726288 131.06466675]
[105.89434814 134.02343750]
[96.25128174 134.32615662]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 56]
[5 55]
[6 54]
[7 53]
[8 52]
[11 45]
[12 44]
[13 43]
[14 42]
[16 39]
[17 38]
[18 37]
[23 31]
[24 30]
[59 78]
[60 77]
[61 76]
[62 75]
[63 74]
[64 73]
[65 72]
[80 105]
[81 104]
[82 103]
[83 102]
[84 101]
[88 98]
[89 97]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
