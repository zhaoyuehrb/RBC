%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:26:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCACUGCGGCCGCGUAGCGCCGCGGGUUUGAUGAACGCGGUUCCCGGGGAGACUGGUACGGUUGCUGUGUGCUAUGGAGCCGAGGGUCGUCAAGCCACCGGGGCAGGAUUUAGUAGUGGAGAGUCUCAAAAGCCGCUACGGACUCGGGGGCAGCUGCCCCGACGAGGUGAAGC\
) } def
/len { sequence length } bind def

/coor [
[74.47798157 196.28022766]
[85.21712494 184.68511963]
[84.40504456 169.70712280]
[83.59295654 154.72911072]
[68.79055786 152.30238342]
[63.23848724 166.23704529]
[57.68641663 180.17169189]
[52.13434601 194.10633850]
[55.02899170 210.24800110]
[42.32440948 220.61744690]
[27.08998299 214.54750061]
[24.99758530 198.28239441]
[38.19969177 188.55426025]
[43.75176620 174.61961365]
[49.30383682 160.68496704]
[54.85591125 146.75032043]
[50.58269882 132.37187195]
[38.32136154 123.73128510]
[22.58380890 122.10649872]
[16.63723755 108.45044708]
[4.37590265 99.80986786]
[-7.88543224 91.16928864]
[-23.26158333 93.66162872]
[-35.57323074 84.72418213]
[-37.85453796 70.05001068]
[-50.11587143 61.40942764]
[-62.37720871 52.76884460]
[-74.63854218 44.12826157]
[-86.89987946 35.48768234]
[-99.16121674 26.84709930]
[-111.42254639 18.20651627]
[-123.68388367 9.56593418]
[-135.94522095 0.92535168]
[-148.20655823 -7.71523046]
[-164.12222290 -2.03815937]
[-180.13049316 -6.90556526]
[-189.99455261 -20.21456718]
[-189.99472046 -36.61449814]
[-202.41004944 -45.03230286]
[-214.82537842 -53.45010757]
[-227.24072266 -61.86791611]
[-239.65605164 -70.28572083]
[-252.07139587 -78.70352936]
[-264.48672485 -87.12133026]
[-277.33956909 -94.85464478]
[-290.59225464 -101.88076782]
[-306.40908813 -101.50888824]
[-314.02957153 -114.30644989]
[-327.28225708 -121.33257294]
[-343.09909058 -120.96069336]
[-350.71957397 -133.75825500]
[-363.97225952 -140.78437805]
[-377.22494507 -147.81050110]
[-390.47763062 -154.83663940]
[-403.73028564 -161.86276245]
[-420.55651855 -163.93992615]
[-423.21847534 -180.68359375]
[-407.86608887 -187.87663269]
[-396.70416260 -175.11543274]
[-383.45147705 -168.08930969]
[-370.19882202 -161.06318665]
[-356.94613647 -154.03706360]
[-343.69345093 -147.01092529]
[-328.82452393 -147.88537598]
[-320.25613403 -134.58525085]
[-307.00344849 -127.55912781]
[-292.13455200 -128.43356323]
[-283.56613159 -115.13344574]
[-270.31344604 -108.10732269]
[-273.44522095 -122.77674103]
[-265.42776489 -135.45429993]
[-250.83184814 -138.91246033]
[-237.97863770 -131.17974854]
[-234.19580078 -116.66457367]
[-241.63993835 -103.64209747]
[-256.06890869 -99.53666687]
[-243.65357971 -91.11886597]
[-231.23825073 -82.70105743]
[-218.82290649 -74.28324890]
[-206.40757751 -65.86544800]
[-193.99224854 -57.44763947]
[-181.57690430 -49.02983093]
[-169.47647095 -54.71595001]
[-156.03944397 -53.66327667]
[-144.79269409 -46.04059982]
[-138.74130249 -33.75518417]
[-139.56597900 -19.97656631]
[-127.30463409 -11.33598328]
[-115.04330444 -2.69540119]
[-102.78196716 5.94518137]
[-90.52062988 14.58576393]
[-78.25929260 23.22634506]
[-65.99796295 31.86692810]
[-53.73662567 40.50751114]
[-41.47529221 49.14809418]
[-29.21395493 57.78867340]
[-14.62745476 55.00127792]
[-2.06962943 63.58938980]
[0.75514996 78.90795135]
[13.01648521 87.54853058]
[25.27782059 96.18911743]
[40.13836288 97.19587708]
[46.96194458 111.46995544]
[59.22328186 120.11053467]
[56.42535782 104.53971863]
[59.16162491 89.54762268]
[66.68805695 76.96765900]
[77.70074463 68.19513702]
[90.54374695 64.03472900]
[103.45060730 64.63600922]
[114.78500366 69.52045441]
[123.24817657 77.69116211]
[128.02665710 87.80514526]
[142.82905579 85.37841034]
[157.63145447 82.95168304]
[172.43385315 80.52495575]
[187.23625183 78.09822083]
[202.03863525 75.67149353]
[216.84103394 73.24476624]
[220.66200256 58.50298309]
[230.15373230 46.59386444]
[243.67172241 39.58074188]
[258.87390137 38.67867279]
[273.12637329 44.04395294]
[283.95986938 54.74701309]
[289.49737549 68.93347931]
[288.77951050 84.14546967]
[281.93063354 97.74740601]
[270.13732910 107.38267517]
[255.44291687 111.38190460]
[240.39324951 109.05220795]
[227.59579468 100.79721832]
[219.26777649 88.04716492]
[204.46537781 90.47389221]
[189.66297913 92.90061951]
[174.86058044 95.32735443]
[160.05818176 97.75408173]
[145.25578308 100.18080902]
[130.45338440 102.60754395]
[132.56942749 110.72599792]
[132.39193726 119.89826202]
[129.56854248 129.46183777]
[123.93804169 138.65415955]
[133.64883423 150.08659363]
[143.35963440 161.51902771]
[153.07041931 172.95146179]
[162.98603821 184.20671082]
[173.10324097 195.28109741]
[183.22044373 206.35549927]
[193.33764648 217.42988586]
[203.45484924 228.50428772]
[219.24252319 232.94064331]
[223.03163147 248.89604187]
[210.92425537 259.95693970]
[195.37542725 254.74482727]
[192.38044739 238.62149048]
[182.26324463 227.54708862]
[172.14604187 216.47270203]
[162.02883911 205.39830017]
[151.91165161 194.32391357]
[147.23309326 193.21852112]
[143.21188354 189.14123535]
[141.63800049 182.66224670]
[131.92720032 171.22982788]
[122.21640778 159.79739380]
[112.50560760 148.36495972]
[98.57096100 153.91703796]
[99.38304138 168.89503479]
[100.19512939 183.87303162]
[112.12496948 194.23905945]
[113.14739227 210.01023865]
[102.65582275 221.82981873]
[86.87471008 222.68544006]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 169]
[3 168]
[4 167]
[5 16]
[6 15]
[7 14]
[8 13]
[17 104]
[18 103]
[20 101]
[21 100]
[22 99]
[25 96]
[26 95]
[27 94]
[28 93]
[29 92]
[30 91]
[31 90]
[32 89]
[33 88]
[34 87]
[38 82]
[39 81]
[40 80]
[41 79]
[42 78]
[43 77]
[44 76]
[45 69]
[46 68]
[48 66]
[49 65]
[51 63]
[52 62]
[53 61]
[54 60]
[55 59]
[113 139]
[114 138]
[115 137]
[116 136]
[117 135]
[118 134]
[119 133]
[143 166]
[144 165]
[145 164]
[146 163]
[147 160]
[148 159]
[149 158]
[150 157]
[151 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
