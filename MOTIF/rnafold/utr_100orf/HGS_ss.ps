%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:10:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCGCGGCUCUAGGGCCGGCGCGGUGACGUGCGCGUGCGCGCACUGGAGGGAAAAGGCGGAAGCGGAAGUCGGGGGGCGCGCCAGCUCGUAGCAGGGGAGCGCCCGCGGCGUCGGGUUUGGGCUGGAGGUCGCCAUGGGGCGAGGCAGCGGCACCUUCGAGCGUCUCCUAGACAAGGCGACCAGCCAGCUCCUGUUGGAGACAGAUUGGGAGUCCAUUUUGCAGAUCUGCGACC\
) } def
/len { sequence length } bind def

/coor [
[-61.84023285 304.52459717]
[-71.41389465 316.07211304]
[-80.98755646 327.61962891]
[-90.56121826 339.16714478]
[-72.85749817 349.25607300]
[-65.67153168 374.58526611]
[-70.57183075 388.76226807]
[-75.47212982 402.93927002]
[-80.37243652 417.11624146]
[-85.27273560 431.29324341]
[-81.63311005 447.28338623]
[-93.84346008 458.23049927]
[-109.34283447 452.87310791]
[-112.18679810 436.72247314]
[-99.44972229 426.39294434]
[-94.54942322 412.21594238]
[-89.64912415 398.03894043]
[-84.74882507 383.86196899]
[-79.84851837 369.68496704]
[-85.89849854 365.25238037]
[-99.62580872 371.29895020]
[-97.99844360 356.38720703]
[-104.04841614 351.95462036]
[-116.08908844 360.90014648]
[-128.12976074 369.84564209]
[-140.17044067 378.79116821]
[-152.21112061 387.73666382]
[-157.22221375 395.35278320]
[-164.47213745 396.71984863]
[-176.63081360 405.50430298]
[-188.78950500 414.28872681]
[-200.94819641 423.07318115]
[-213.10687256 431.85760498]
[-219.31950378 447.03442383]
[-235.60353088 448.97412109]
[-245.20735168 435.68130493]
[-238.25137329 420.83050537]
[-221.89131165 419.69891357]
[-209.73263550 410.91448975]
[-197.57394409 402.13003540]
[-185.41525269 393.34561157]
[-173.25657654 384.56115723]
[-161.15663147 375.69601440]
[-149.11595154 366.75048828]
[-137.07527161 357.80499268]
[-125.03459930 348.85946655]
[-112.99392700 339.91397095]
[-102.10873413 329.59347534]
[-92.53507233 318.04595947]
[-82.96140289 306.49844360]
[-73.38774109 294.95092773]
[-79.77885437 282.64755249]
[-81.00496674 268.79409790]
[-76.84832764 255.47680664]
[-67.90428162 244.71382141]
[-55.49626923 238.14933777]
[-41.48005295 236.80244446]
[-27.96617317 240.90910339]
[-18.23964500 229.49005127]
[-8.51311684 218.07101440]
[1.21341193 206.65196228]
[10.93994045 195.23291016]
[13.05728054 176.00306702]
[32.17744064 169.58175659]
[41.59654236 157.90783691]
[51.01564407 146.23390198]
[60.43474579 134.55998230]
[69.85384369 122.88605499]
[79.27294159 111.21213531]
[78.87363434 96.21744537]
[68.84657288 85.06137085]
[58.81951141 73.90529633]
[48.79244995 62.74922180]
[35.98863220 61.28825760]
[27.86676407 51.80441284]
[28.36074638 39.72876358]
[18.48307610 28.44020271]
[8.60540581 17.15164185]
[-1.27226484 5.86307955]
[-11.14993572 -5.42548180]
[-21.02760696 -16.71404266]
[-35.93804169 -22.00454903]
[-38.49623108 -36.67782211]
[-48.37390137 -47.96638489]
[-67.73519135 -53.61920547]
[-70.61859131 -72.74918365]
[-80.79326630 -83.77079010]
[-90.96794128 -94.79240417]
[-106.15451050 -102.32928467]
[-103.11623383 -119.00877380]
[-86.24750519 -120.70657349]
[-79.94633484 -104.96707916]
[-69.77165222 -93.94547272]
[-59.59697723 -82.92385864]
[-49.41271591 -83.43777466]
[-40.43330765 -78.15808868]
[-35.73684311 -68.61524200]
[-37.08533859 -57.84405518]
[-27.20766830 -46.55549240]
[-13.00374889 -42.07242203]
[-9.73904419 -26.59171486]
[0.13862605 -15.30315304]
[10.01629639 -4.01459122]
[19.89396667 7.27397060]
[29.77163887 18.56253242]
[39.64930725 29.85109329]
[56.54636383 34.61692810]
[59.94852448 52.72216034]
[69.97558594 63.87823486]
[80.00264740 75.03430939]
[90.02970886 86.19038391]
[86.57864380 71.59278107]
[80.09997559 58.06403732]
[79.84173584 43.06626129]
[85.85079956 29.32249260]
[97.03614807 19.32810020]
[111.36694336 14.89769554]
[126.24121857 16.83567810]
[138.95837402 24.79018021]
[147.20916748 37.31628036]
[139.69082642 50.29605484]
[152.51162720 42.50971603]
[165.33241272 34.72337723]
[178.15321350 26.93703651]
[190.97401428 19.15069580]
[203.79481506 11.36435509]
[216.61561584 3.57801533]
[225.09976196 -12.77415657]
[242.65322876 -12.45902634]
[255.36924744 -20.41534042]
[268.08526611 -28.37165451]
[280.80126953 -36.32796860]
[293.51730347 -44.28428268]
[306.23330688 -52.24059296]
[318.94934082 -60.19690704]
[326.54418945 -74.07598114]
[341.43756104 -74.26761627]
[354.15356445 -82.22393036]
[366.70819092 -90.43255615]
[379.09640503 -98.89021301]
[391.48464966 -107.34786224]
[398.51931763 -121.51909637]
[413.39315796 -122.30519867]
[425.78140259 -130.76284790]
[432.81607056 -144.93408203]
[447.68991089 -145.72018433]
[460.07812500 -154.17784119]
[463.22555542 -166.67446899]
[473.70349121 -173.46574402]
[485.60675049 -171.37338257]
[498.10644531 -179.66537476]
[510.60614014 -187.95738220]
[515.18481445 -203.33317566]
[530.11425781 -209.20622253]
[543.94177246 -201.07121277]
[546.06018066 -185.16864014]
[534.84436035 -173.69758606]
[518.89813232 -175.45767212]
[506.39843750 -167.16566467]
[493.89874268 -158.87367249]
[486.93240356 -142.75865173]
[468.53579712 -141.78961182]
[456.14758301 -133.33195496]
[449.99899292 -119.76567841]
[434.23904419 -118.37462616]
[421.85083008 -109.91697693]
[415.70223999 -96.35068512]
[399.94229126 -94.95964050]
[387.55407715 -86.50198364]
[375.16586304 -78.04433441]
[374.15444946 -74.68346405]
[371.47479248 -71.64122009]
[367.29223633 -69.69195557]
[362.10989380 -69.50791931]
[349.39385986 -61.55160141]
[342.70855713 -48.24161530]
[326.90563965 -47.48089218]
[314.18963623 -39.52457809]
[301.47360229 -31.56826401]
[288.75759888 -23.61195183]
[276.04156494 -15.65563774]
[263.32556152 -7.69932365]
[250.60954285 0.25698975]
[247.59634399 11.96109200]
[237.08238220 18.69641685]
[224.40196228 16.39881516]
[211.58116150 24.18515587]
[198.76036072 31.97149467]
[185.93955994 39.75783539]
[173.11875916 47.54417419]
[160.29795837 55.33051682]
[147.47715759 63.11685562]
[147.17765808 78.11386871]
[159.67736816 86.40586853]
[172.17707825 94.69786835]
[184.67678833 102.98986816]
[197.17649841 111.28186798]
[213.71788025 114.99924469]
[214.72489929 131.92326355]
[198.74105835 137.57595825]
[188.88449097 123.78157806]
[176.38479614 115.48957825]
[163.88508606 107.19757843]
[151.38537598 98.90557861]
[138.88566589 90.61357117]
[133.68930054 96.02170563]
[123.29659271 106.83796692]
[118.10024261 112.24610138]
[126.88468170 124.40478516]
[135.66911316 136.56347656]
[150.84591675 142.77609253]
[152.78561401 159.06011963]
[139.49281311 168.66394043]
[124.64200592 161.70797729]
[123.51043701 145.34791565]
[114.72599792 133.18922424]
[105.94155884 121.03054047]
[90.94686890 120.63123322]
[81.52777100 132.30516052]
[72.10867310 143.97908020]
[62.68956757 155.65301514]
[53.27046967 167.32693481]
[43.85136795 179.00085449]
[45.62882614 189.70962524]
[41.31710434 199.43237305]
[32.55564499 205.06634521]
[22.35898781 204.95944214]
[12.63245964 216.37849426]
[2.90593076 227.79753113]
[-6.82059765 239.21658325]
[-16.54712677 250.63563538]
[-9.84445572 265.47042847]
[-10.28478432 281.68496704]
[-17.72906685 296.03079224]
[-30.64016724 305.65597534]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 51]
[2 50]
[3 49]
[4 48]
[6 19]
[7 18]
[8 17]
[9 16]
[10 15]
[23 47]
[24 46]
[25 45]
[26 44]
[27 43]
[29 42]
[30 41]
[31 40]
[32 39]
[33 38]
[58 231]
[59 230]
[60 229]
[61 228]
[62 227]
[64 223]
[65 222]
[66 221]
[67 220]
[68 219]
[69 218]
[70 111]
[71 110]
[72 109]
[73 108]
[76 106]
[77 105]
[78 104]
[79 103]
[80 102]
[81 101]
[83 99]
[84 98]
[86 94]
[87 93]
[88 92]
[121 192]
[122 191]
[123 190]
[124 189]
[125 188]
[126 187]
[127 186]
[129 183]
[130 182]
[131 181]
[132 180]
[133 179]
[134 178]
[135 177]
[137 175]
[138 174]
[139 170]
[140 169]
[141 168]
[143 166]
[144 165]
[146 163]
[147 162]
[150 160]
[151 159]
[152 158]
[193 205]
[194 204]
[195 203]
[196 202]
[197 201]
[208 217]
[209 216]
[210 215]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
