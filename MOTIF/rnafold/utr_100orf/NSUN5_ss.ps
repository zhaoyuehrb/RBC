%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:13:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUUUUUGACCCCGGAAGUCCGGGCGGGCGCCGAGCCGGGUGCGUUUUGCCACAGAGCCGUAAAGGCGCGCGGGAACAUGGGGCUGUAUGCUGCAGCUGCAGGCGUGUUGGCCGGCGUGGAGAGCCGCCAGGGCUCUAUCAAGGGGUUGGUGUACUCCAGCAACUUCCAGAACGUGA\
) } def
/len { sequence length } bind def

/coor [
[97.37624359 238.21682739]
[96.84687042 223.22618103]
[88.66522217 210.77989197]
[95.91067505 196.71525574]
[95.38130188 181.72459412]
[94.85192871 166.73394775]
[94.32256317 151.74328613]
[93.79319000 136.75262451]
[91.86385345 139.81910706]
[89.71800232 142.79269409]
[87.35987854 145.66218567]
[78.67209625 157.89012146]
[69.98432159 170.11805725]
[61.29653931 182.34600830]
[52.60876083 194.57394409]
[51.60691452 210.94245911]
[36.81171799 218.01594543]
[23.44319916 208.51779175]
[25.25374603 192.21890259]
[40.38082123 185.88615417]
[49.06859970 173.65821838]
[57.75638199 161.43028259]
[66.44416046 149.20234680]
[75.13193512 136.97441101]
[70.68082428 130.93804932]
[55.77447128 132.61155701]
[61.77859116 118.86534119]
[57.32747650 112.82898712]
[43.07807922 117.51457214]
[28.82868385 122.20014954]
[14.57928658 126.88573456]
[0.32988936 131.57131958]
[-6.57074451 145.78950500]
[-21.53114891 150.88478088]
[-35.67558289 143.83421326]
[-40.61240387 128.82077026]
[-33.41268158 114.75167084]
[-18.34788704 109.97385406]
[-4.35569334 117.32192230]
[9.89370346 112.63633728]
[24.14310074 107.95075226]
[38.39249802 103.26517487]
[52.64189529 98.57958984]
[55.22448730 87.31934357]
[60.39109421 77.21758270]
[67.73780823 68.84337616]
[76.74180603 62.64038086]
[86.79763794 58.90372086]
[97.25751495 57.76698303]
[107.47283936 59.19963837]
[105.36193848 44.34891129]
[103.25104523 29.49818420]
[101.14014435 14.64745617]
[97.87892914 10.49475956]
[96.67787933 5.95910454]
[97.33423615 1.89687622]
[99.33219910 -1.04285502]
[98.01020813 -15.98448658]
[96.68822479 -30.92611694]
[95.36623383 -45.86774826]
[83.03585815 -52.06638718]
[75.44523621 -63.46221924]
[74.49213409 -77.01282501]
[80.31915283 -89.16359711]
[91.30435181 -96.78018951]
[90.24626923 -111.74282837]
[89.18818665 -126.70546722]
[88.13010406 -141.66810608]
[87.07201385 -156.63073730]
[86.01393127 -171.59336853]
[84.95584869 -186.55599976]
[78.73287964 -189.61950684]
[73.81008148 -194.43220520]
[70.65440369 -200.49263000]
[69.55104065 -207.18336487]
[70.57797241 -213.83396912]
[73.60129547 -219.78810120]
[78.29172516 -224.46832275]
[84.16017151 -227.43205261]
[84.68954468 -242.42271423]
[77.44409180 -256.48736572]
[85.62573242 -268.93362427]
[86.15510559 -283.92428589]
[86.68447876 -298.91494751]
[87.21385193 -313.90560913]
[87.74322510 -328.89627075]
[88.27259827 -343.88690186]
[88.80196381 -358.87756348]
[83.31838226 -374.92022705]
[97.21607208 -384.63055420]
[110.39418030 -373.96408081]
[103.79262543 -358.34820557]
[103.26325226 -343.35754395]
[102.73387909 -328.36688232]
[102.20450592 -313.37622070]
[101.67513275 -298.38555908]
[101.14576721 -283.39492798]
[100.61639404 -268.40426636]
[107.89971161 -255.41186523]
[99.68019867 -241.89334106]
[99.15082550 -226.90267944]
[112.40125275 -207.93972778]
[99.91847992 -187.61408997]
[100.97657013 -172.65145874]
[102.03465271 -157.68881226]
[103.09273529 -142.72618103]
[104.15081787 -127.76354980]
[105.20890808 -112.80091095]
[106.26699066 -97.83827972]
[120.45761871 -89.61328888]
[127.02529144 -74.40265656]
[123.20539856 -58.11050415]
[110.30786896 -47.18973541]
[111.62985229 -32.24810410]
[112.95184326 -17.30647469]
[114.27382660 -2.36484241]
[115.99087524 12.53655910]
[118.10176849 27.38728714]
[120.21266937 42.23801422]
[122.32356262 57.08874130]
[134.39627075 65.99097443]
[149.20742798 63.61830902]
[164.01860046 61.24564743]
[178.82975769 58.87298965]
[193.64091492 56.50032806]
[208.45207214 54.12766647]
[218.98591614 42.02734375]
[235.00721741 42.86253357]
[244.22579956 55.99254608]
[239.56996155 71.34516144]
[224.61126709 77.14316559]
[210.82473755 68.93882751]
[196.01358032 71.31148529]
[181.20242310 73.68415070]
[166.39125061 76.05680847]
[151.58009338 78.42947388]
[136.76893616 80.80213165]
[139.31593323 90.58486176]
[139.37364197 100.43680573]
[137.06356812 109.75002289]
[132.64968872 117.97994995]
[144.06436157 127.71160126]
[155.47904968 137.44325256]
[171.01925659 136.37564087]
[182.45674133 146.40751648]
[183.37876892 161.22930908]
[194.79345703 170.96096802]
[206.20812988 180.69261169]
[217.62281799 190.42427063]
[229.03749084 200.15591431]
[244.77009583 198.65234375]
[256.90457153 208.77806091]
[258.24172974 224.52568054]
[247.98826599 236.55241394]
[232.22738647 237.72300720]
[220.30973816 227.34297180]
[219.30584717 211.57060242]
[207.89115906 201.83894348]
[196.47648621 192.10729980]
[185.06179810 182.37564087]
[173.64712524 172.64399719]
[158.86607361 174.07803345]
[147.15133667 164.37136841]
[145.74740601 148.85792542]
[134.33271790 139.12628174]
[122.91803741 129.39462280]
[116.21449280 133.56144714]
[108.78384399 136.22326660]
[109.31321716 151.21391296]
[109.84259033 166.20457458]
[110.37195587 181.19522095]
[110.90132904 196.18588257]
[119.12084198 209.70439148]
[111.83752441 222.69680786]
[112.36689758 237.68745422]
[118.96845245 253.30334473]
[105.79034424 263.96981812]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 175]
[2 174]
[4 172]
[5 171]
[6 170]
[7 169]
[8 168]
[11 24]
[12 23]
[13 22]
[14 21]
[15 20]
[28 43]
[29 42]
[30 41]
[31 40]
[32 39]
[50 120]
[51 119]
[52 118]
[53 117]
[57 116]
[58 115]
[59 114]
[60 113]
[65 109]
[66 108]
[67 107]
[68 106]
[69 105]
[70 104]
[71 103]
[79 101]
[80 100]
[82 98]
[83 97]
[84 96]
[85 95]
[86 94]
[87 93]
[88 92]
[121 137]
[122 136]
[123 135]
[124 134]
[125 133]
[126 132]
[141 166]
[142 165]
[143 164]
[146 161]
[147 160]
[148 159]
[149 158]
[150 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
