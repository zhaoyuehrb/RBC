%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:33:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCGCCGGGCGCCGGGCGCGCGGUCCUGCGAGGAGACGUGGCAGAGUGCGGCGCGCUCGCGCCGGACCGGAAAGCCGGGGAAGUGGCCGAGGAGGGAGGGCUGCGAGCCAUGGCGACCAAGACGGCGGGCGUGGGGCGGUGGGAGGUAGUGAAGAAGGGUCGGCGGCCUGGGGUCGGCGCCGGCGCCGGCGGCCGAGGAGGCGGCAGGA\
) } def
/len { sequence length } bind def

/coor [
[150.10356140 282.01071167]
[154.93421936 276.25817871]
[150.32022095 261.98544312]
[145.70620728 247.71272278]
[141.09219360 233.43998718]
[136.47817993 219.16725159]
[131.86418152 204.89451599]
[127.25016785 190.62178040]
[122.63616180 176.34904480]
[117.58758545 170.95149231]
[118.06141663 161.82936096]
[113.66041565 147.48950195]
[109.25942230 133.14965820]
[104.85842133 118.80981445]
[91.05424500 112.94084930]
[77.67397308 119.72084045]
[64.29370117 126.50083160]
[50.91342545 133.28082275]
[37.53315353 140.06082153]
[24.15287971 146.84080505]
[10.77260590 153.62080383]
[-2.60766768 160.40078735]
[-11.42041779 173.54026794]
[-26.27063179 172.39117432]
[-39.65090561 179.17117310]
[-49.89454269 196.53292847]
[-69.13786316 194.64044189]
[-82.31034088 201.81581116]
[-95.48281860 208.99118042]
[-108.65529633 216.16654968]
[-108.35488129 231.46910095]
[-115.21070099 245.15327454]
[-127.64734650 254.07450867]
[-142.80694580 256.18280029]
[-157.20596313 250.99366760]
[-167.53558350 239.69952393]
[-171.42214966 224.89570618]
[-167.97254944 209.98400879]
[-157.97949219 198.39102173]
[-143.73928833 192.78074646]
[-128.52424622 194.44236755]
[-115.83065796 202.99406433]
[-102.65818024 195.81871033]
[-89.48571014 188.64334106]
[-76.31323242 181.46797180]
[-74.31779480 171.44644165]
[-66.98153687 164.02162170]
[-56.55511093 161.81484985]
[-46.43089676 165.79089355]
[-33.05062103 159.01091003]
[-25.19491959 146.35636902]
[-9.38765907 147.02052307]
[3.99261427 140.24052429]
[17.37288857 133.46054077]
[30.75316048 126.68054199]
[44.13343430 119.90055084]
[57.51370621 113.12055969]
[70.89398193 106.34056854]
[84.27425385 99.56057739]
[94.27243042 88.37860107]
[99.51914215 74.32613373]
[97.09764099 58.69133377]
[108.79794312 49.47438812]
[114.04466248 35.42191696]
[119.29138184 21.36944771]
[124.53810120 7.31697559]
[110.57928467 10.75307178]
[95.02705383 8.02543354]
[82.80056763 -0.66439062]
[70.57408142 -9.35421467]
[58.34759903 -18.04403877]
[41.97924805 -19.04862404]
[34.90824127 -33.84500504]
[44.40862274 -47.21193314]
[60.70721436 -45.39866257]
[67.03742218 -30.27052498]
[79.26390839 -21.58069992]
[91.49039459 -12.89087582]
[103.71688080 -4.20105171]
[111.10720825 -5.47896814]
[108.55162048 -20.25966454]
[123.33235931 -22.81500626]
[125.88786316 -8.03480053]
[133.27818298 -9.31271648]
[141.87675476 -21.60355377]
[143.44766235 -37.34657669]
[157.08328247 -43.33985519]
[165.68183899 -55.63069534]
[174.28041077 -67.92153168]
[182.87896729 -80.21237183]
[191.47753906 -92.50320435]
[182.07746887 -104.31501007]
[176.39234924 -118.28289032]
[174.87501526 -133.27165222]
[177.63992310 -148.06568909]
[184.45460510 -161.46763611]
[194.75914001 -172.39523315]
[207.71223450 -179.96875000]
[222.25979614 -183.58180237]
[237.22080994 -182.94984436]
[251.38316345 -178.13265991]
[259.98171997 -190.42349243]
[268.58029175 -202.71434021]
[277.17886353 -215.00517273]
[285.77740479 -227.29600525]
[280.88055420 -241.90173340]
[285.46932983 -256.42056274]
[297.58413696 -265.34780884]
[312.45462036 -265.42855835]
[321.05319214 -277.71942139]
[329.65176392 -290.01025391]
[338.25030518 -302.30108643]
[339.82122803 -318.04409790]
[353.45684814 -324.03738403]
[362.05541992 -336.32821655]
[360.58303833 -349.14208984]
[367.99783325 -359.20211792]
[379.88580322 -361.43893433]
[388.66638184 -373.60037231]
[389.19479370 -378.79345703]
[391.43801880 -382.85806274]
[394.67907715 -385.33004761]
[398.12060547 -386.09698486]
[407.43548584 -397.85424805]
[416.75036621 -409.61151123]
[416.33898926 -425.64929199]
[428.71356201 -435.85955811]
[444.38134766 -432.40988159]
[451.32336426 -417.94656372]
[444.21429443 -403.56460571]
[428.50762939 -400.29663086]
[419.19271851 -388.53936768]
[409.87783813 -376.78210449]
[400.82785034 -364.81979370]
[392.04724121 -352.65832520]
[391.20819092 -335.12939453]
[374.34625244 -327.72967529]
[365.74768066 -315.43881226]
[364.79177856 -300.57492065]
[350.54116821 -293.70251465]
[341.94259644 -281.41168213]
[333.34402466 -269.12084961]
[324.74545288 -256.83001709]
[329.76715088 -242.83283997]
[325.53375244 -228.39184570]
[313.46762085 -219.10409546]
[298.06826782 -218.69744873]
[289.46969604 -206.40661621]
[280.87112427 -194.11576843]
[272.27255249 -181.82493591]
[263.67401123 -169.53410339]
[273.05410767 -157.88117981]
[278.77636719 -144.04328918]
[280.36911011 -129.13862610]
[277.69476318 -114.37419128]
[270.96163940 -100.94805145]
[260.70779419 -89.95213318]
[247.75791931 -82.28339386]
[233.15721130 -78.57068634]
[218.08680725 -79.12317657]
[203.76837158 -83.90464020]
[195.16981506 -71.61380768]
[186.57124329 -59.32296753]
[177.97268677 -47.03213120]
[169.37411499 -34.74129105]
[168.41822815 -19.87739182]
[154.16758728 -13.00499058]
[145.56903076 -0.71415246]
[138.59057617 12.56369400]
[133.34385681 26.61616516]
[128.09713745 40.66863632]
[122.85041809 54.72110748]
[125.64720154 69.35077667]
[113.57161713 79.57285309]
[108.32489777 93.62532043]
[117.24437714 99.91672516]
[119.19827271 114.40881348]
[123.59926605 128.74865723]
[128.00025940 143.08851624]
[132.40126038 157.42835999]
[136.90888977 171.73504639]
[141.52290344 186.00778198]
[146.13691711 200.28050232]
[150.75091553 214.55323792]
[155.36492920 228.82597351]
[159.97894287 243.09870911]
[164.59294128 257.37142944]
[169.20695496 271.64416504]
[187.65994263 285.69808960]
[182.22688293 307.48199463]
[187.88966370 321.37200928]
[200.26425171 331.23004150]
[197.90428162 345.93649292]
[203.56707764 359.82650757]
[209.22985840 373.71652222]
[223.40002441 381.23889160]
[226.21202087 397.03356934]
[215.50872803 408.98428345]
[199.50079346 407.92340088]
[190.46812439 394.66479492]
[195.33982849 379.37933350]
[189.67704773 365.48928833]
[184.01425171 351.59927368]
[172.04470825 342.73477173]
[173.99963379 327.03482056]
[168.33685303 313.14477539]
[161.30870056 312.11401367]
[155.01374817 308.67849731]
[150.25506592 303.22274780]
[147.65818787 296.39218140]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 188]
[3 187]
[4 186]
[5 185]
[6 184]
[7 183]
[8 182]
[9 181]
[11 180]
[12 179]
[13 178]
[14 177]
[15 59]
[16 58]
[17 57]
[18 56]
[19 55]
[20 54]
[21 53]
[22 52]
[24 50]
[25 49]
[27 45]
[28 44]
[29 43]
[30 42]
[60 175]
[61 174]
[63 172]
[64 171]
[65 170]
[66 169]
[68 79]
[69 78]
[70 77]
[71 76]
[84 168]
[85 167]
[87 165]
[88 164]
[89 163]
[90 162]
[91 161]
[101 151]
[102 150]
[103 149]
[104 148]
[105 147]
[109 143]
[110 142]
[111 141]
[112 140]
[114 138]
[115 137]
[118 135]
[119 134]
[123 133]
[124 132]
[125 131]
[190 206]
[191 205]
[193 203]
[194 202]
[195 201]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
