%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:52:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCCACACAGCGGACCCCUAAGCGGACCGCUGGCACCGGUCGGGUGGCAGCAGAGUGUCGCUCGACAUGGGGGAGGCCGGGGCUGGCGCUGGCGCCUCGGGAGGGCCGGAGGCAAGCCCGGAGGCAGAGGUGGUGAAGCUGCUGCCCUUCCUGGCGCCGGGCGCGC\
) } def
/len { sequence length } bind def

/coor [
[189.94287109 118.74935913]
[180.40791321 102.99620819]
[165.43151855 103.83726501]
[150.45510864 104.67832184]
[135.47871399 105.51937866]
[128.53611755 121.79203033]
[114.66538239 132.77391052]
[97.23411560 135.79878235]
[80.47435760 130.13224792]
[69.86775970 140.73884583]
[59.26115799 151.34544373]
[48.65455627 161.95204163]
[38.04795456 172.55865479]
[27.44135284 183.16525269]
[23.15425491 198.39454651]
[8.68361664 201.92298889]
[-1.92298555 212.52958679]
[-0.37992874 228.09085083]
[-9.24310589 240.97410583]
[-24.32759666 245.09625244]
[-38.51096344 238.51097107]
[-45.09625626 224.32759094]
[-40.97410202 209.24310303]
[-28.09085274 200.37992859]
[-12.52958679 201.92298889]
[-1.92298555 191.31639099]
[1.60545731 176.84574890]
[16.83475113 172.55865479]
[27.44135284 161.95204163]
[38.04795456 151.34544373]
[48.65455627 140.73884583]
[59.26115799 130.13224792]
[69.86775970 119.52564240]
[66.54560089 113.03862762]
[64.60183716 106.01438904]
[64.11656189 98.74234772]
[65.10977173 91.52212524]
[51.59523773 85.01387024]
[38.08070374 78.50560760]
[24.50591087 72.12400055]
[10.87204361 65.86958313]
[-2.76182389 59.61517334]
[-16.39569092 53.36076355]
[-30.02955818 47.10634995]
[-43.66342545 40.85194016]
[-57.29729080 34.59752655]
[-70.93115997 28.34311485]
[-84.56502533 22.08870316]
[-98.19889069 15.83429241]
[-111.83276367 9.57988071]
[-126.56090546 15.31201935]
[-140.99467468 8.87449360]
[-146.57078552 -5.91342735]
[-139.98100281 -20.27833176]
[-125.13496399 -25.69777870]
[-110.84053040 -18.95650291]
[-105.57834625 -4.05398703]
[-91.94448090 2.20042491]
[-78.31061554 8.45483685]
[-64.67675018 14.70924854]
[-51.04288101 20.96365929]
[-37.40901184 27.21807098]
[-23.77514648 33.47248459]
[-10.14127922 39.72689438]
[3.49258780 45.98130798]
[17.12645531 52.23571777]
[30.76032257 58.49013138]
[38.18206787 58.42066956]
[44.58895874 64.99108124]
[58.10349274 71.49933624]
[71.61802673 78.00759125]
[83.79015350 67.96184540]
[99.09407043 64.10596466]
[114.57302094 67.18491364]
[127.23641968 76.60384369]
[134.63764954 90.54297638]
[149.61405945 89.70191956]
[164.59045410 88.86086273]
[179.56686401 88.01980591]
[183.59159851 76.62185669]
[191.21614075 67.28696442]
[201.52143860 61.10317230]
[213.27781677 58.78094482]
[225.09172058 60.57159042]
[235.57084656 66.24031067]
[243.48826599 75.09666443]
[247.92607117 86.07862091]
[262.92605591 86.07862091]
[277.92605591 86.07862091]
[292.92605591 86.07862091]
[307.92605591 86.07862091]
[322.92541504 85.93836975]
[337.92279053 85.65789032]
[352.92016602 85.37740326]
[367.91754150 85.09692383]
[382.91491699 84.81643677]
[397.91229248 84.53595734]
[403.82229614 81.42488861]
[409.54870605 81.74840546]
[413.47326660 84.53595734]
[428.47064209 84.81643677]
[443.46801758 85.09692383]
[458.46539307 85.37740326]
[473.46276855 85.65789032]
[488.46014404 85.93836975]
[485.78659058 66.53842926]
[500.76007080 46.04839706]
[514.39392090 39.79398346]
[528.02783203 33.53957367]
[541.66168213 27.28516197]
[544.58520508 12.04598331]
[555.93078613 1.46023583]
[571.33575439 -0.40164632]
[584.87658691 7.17626905]
[591.34661865 21.28011894]
[588.25793457 36.48668289]
[576.79821777 46.94873047]
[561.37396240 48.64339066]
[547.91607666 40.91902924]
[534.28222656 47.17343903]
[520.64837646 53.42785263]
[507.01449585 59.68226242]
[507.57537842 74.67243958]
[508.13623047 89.66128540]
[522.19934082 94.87934875]
[536.26251221 100.09741211]
[550.32562256 105.31547546]
[564.38879395 110.53353882]
[580.01861572 108.08016968]
[589.25939941 119.76165771]
[603.32250977 124.97972107]
[617.38568115 130.19778442]
[631.64422607 123.38104248]
[646.51873779 128.72192383]
[653.18432617 143.05180359]
[647.68652344 157.86898804]
[633.28698730 164.38272095]
[618.52874756 158.72853088]
[612.16760254 144.26092529]
[598.10443115 139.04286194]
[584.04132080 133.82479858]
[569.41735840 136.65139771]
[559.17071533 124.59667206]
[545.10754395 119.37860870]
[531.04443359 114.16054535]
[516.98132324 108.94248199]
[502.91815186 103.72441864]
[488.17965698 100.93574524]
[473.18228149 100.65526581]
[458.18490601 100.37477875]
[443.18753052 100.09429932]
[428.19015503 99.81381226]
[413.19277954 99.53333282]
[398.19277954 99.53333282]
[383.19540405 99.81381226]
[368.19802856 100.09429932]
[353.20065308 100.37477875]
[338.20327759 100.65526581]
[323.20590210 100.93574524]
[316.54925537 104.21850586]
[307.92605591 101.07862091]
[292.92605591 101.07862091]
[277.92605591 101.07862091]
[262.92605591 101.07862091]
[247.92607117 101.07862091]
[239.63999939 117.14287567]
[224.29553223 126.85546112]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 79]
[3 78]
[4 77]
[5 76]
[9 33]
[10 32]
[11 31]
[12 30]
[13 29]
[14 28]
[16 26]
[17 25]
[37 71]
[38 70]
[39 69]
[40 67]
[41 66]
[42 65]
[43 64]
[44 63]
[45 62]
[46 61]
[47 60]
[48 59]
[49 58]
[50 57]
[87 165]
[88 164]
[89 163]
[90 162]
[91 161]
[92 159]
[93 158]
[94 157]
[95 156]
[96 155]
[97 154]
[100 153]
[101 152]
[102 151]
[103 150]
[104 149]
[105 148]
[107 122]
[108 121]
[109 120]
[110 119]
[124 147]
[125 146]
[126 145]
[127 144]
[128 143]
[130 141]
[131 140]
[132 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
