%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:13:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGGGGGUAUAACAGCGGCGCGCGUGGCUCGCAGACCGGGGAGACGGGCGGGCGCACAGCCGGCGCGGAGGCCCCACAGCCCCGCCGGGACCCGAGGCCAAGCGAGGGGCUGCCAGUGUCCCGGGACCCACCGCGUCCGCCCCAGCCCCGGGUCCCCGCGCCCACCCCAUGGCGACGGACGCGGCGCUACGCCGGCUUCUGAGGCUGCACCGCACGGAGAUCGCGGUGGCCGUGGACAGCGCCUUCCCACUGCU\
GCACGCGCUGGCUG\
) } def
/len { sequence length } bind def

/coor [
[489.67037964 698.85144043]
[498.17150879 684.82775879]
[497.99697876 669.82879639]
[490.11209106 657.19238281]
[497.68832397 643.30316162]
[497.51379395 628.30413818]
[489.62890625 615.66778564]
[497.20513916 601.77850342]
[497.03060913 586.77954102]
[485.48458862 580.11566162]
[478.67672729 568.52838135]
[478.47268677 554.98254395]
[485.03234863 543.00579834]
[496.74026489 535.76971436]
[496.74026489 520.76971436]
[496.74026489 505.76974487]
[496.74026489 490.76974487]
[496.74026489 475.76974487]
[496.74026489 460.76974487]
[492.02209473 446.53109741]
[483.06469727 434.49923706]
[476.57290649 431.02307129]
[474.07406616 422.27490234]
[465.25729370 410.13964844]
[456.44052124 398.00439453]
[447.62374878 385.86914062]
[438.80694580 373.73388672]
[429.99017334 361.59860229]
[421.17340088 349.46334839]
[412.28616333 337.37960815]
[403.32879639 325.34774780]
[394.37139893 313.31591797]
[385.41403198 301.28405762]
[364.16531372 296.20071411]
[358.31201172 274.46508789]
[346.28015137 265.50772095]
[334.24832153 256.55032349]
[322.21646118 247.59295654]
[310.13272095 238.70571899]
[297.99746704 229.88894653]
[285.86221313 221.07217407]
[273.72695923 212.25538635]
[261.48690796 217.53730774]
[248.12709045 216.07862854]
[237.13984680 208.15330505]
[231.45018005 195.73962402]
[232.63743591 182.02734375]
[220.60559082 173.06996155]
[208.57374573 164.11259460]
[196.54188538 155.15521240]
[184.51004028 146.19783020]
[172.47819519 137.24044800]
[160.44635010 128.28306580]
[148.41450500 119.32569122]
[136.38264465 110.36831665]
[124.35079956 101.41093445]
[135.37023926 111.58797455]
[140.91851807 125.52413940]
[139.90907288 140.49012756]
[132.53958130 153.55499268]
[120.25330353 162.16007996]
[105.45641327 164.62014771]
[91.04674530 160.45341492]
[79.84632874 150.47590637]
[74.04866791 136.64163208]
[74.78968048 121.65814972]
[60.08217621 118.71040344]
[45.37466812 115.76265717]
[30.66716194 112.81490326]
[21.67437172 114.19503784]
[15.80612564 109.74634552]
[1.13391197 106.62767029]
[-13.53830242 103.50899506]
[-26.65472221 112.32574463]
[-42.14752579 109.20347595]
[-50.82510757 95.99456787]
[-47.53921127 80.53564453]
[-34.23929977 71.99819946]
[-18.81597900 75.44735718]
[-10.41962624 88.83678436]
[4.25258732 91.95545959]
[18.92480087 95.07413483]
[33.61491013 98.10739899]
[48.32241821 101.05514526]
[63.02992630 104.00289917]
[77.73743439 106.95064545]
[85.46300507 94.09313965]
[75.95553589 82.49105835]
[66.44807434 70.88898468]
[56.94060898 59.28691483]
[47.43314743 47.68484116]
[37.92568207 36.08276749]
[24.28348160 37.90670395]
[11.61853981 32.80074310]
[3.19061112 22.19413185]
[1.11193573 8.91665745]
[5.81866741 -3.55588269]
[-3.55316043 -15.26779270]
[-12.92498779 -26.97970390]
[-18.88218498 -29.71282387]
[-22.10583305 -34.33887863]
[-22.37481117 -39.07492447]
[-31.47157860 -51.00173950]
[-40.56834412 -62.92855072]
[-56.21217346 -66.48525238]
[-63.05515671 -80.99570465]
[-55.84793854 -95.32872772]
[-40.11928177 -98.48925018]
[-27.93486595 -88.05279541]
[-28.64153290 -72.02531433]
[-19.54476547 -60.09850311]
[-10.44799995 -48.17169189]
[-1.21307766 -36.35153198]
[8.15874958 -24.63962173]
[17.53057861 -12.92771053]
[33.91247177 -14.20991802]
[47.96457291 -5.37554073]
[54.03007126 10.25360680]
[49.52775574 26.57530212]
[59.03522110 38.17737579]
[68.54268646 49.77944946]
[78.05014801 61.38152313]
[87.55761719 72.98359680]
[97.06507874 84.58567047]
[110.80352020 78.56444550]
[108.71592712 63.71042633]
[96.82026672 52.94599533]
[97.96318817 36.94370651]
[111.26792908 27.97914124]
[126.52823639 32.92914963]
[132.03770447 47.99650955]
[123.56994629 61.62282944]
[125.65754700 76.47685242]
[133.30818176 89.37908936]
[145.34002686 98.33646393]
[157.37187195 107.29384613]
[169.40373230 116.25122070]
[181.43557739 125.20860291]
[193.46742249 134.16598511]
[205.49926758 143.12336731]
[217.53111267 152.08073425]
[229.56295776 161.03811646]
[241.59481812 169.99549866]
[257.68936157 164.73869324]
[273.58377075 170.07046509]
[283.06237793 183.69631958]
[282.54373169 200.12013245]
[294.67898560 208.93692017]
[306.81423950 217.75369263]
[318.94949341 226.57046509]
[327.69769287 229.06930542]
[331.17385864 235.56111145]
[343.20568848 244.51849365]
[355.23754883 253.47586060]
[367.26937866 262.43325806]
[377.67681885 259.41152954]
[387.95327759 261.65991211]
[398.37313843 250.86982727]
[408.79302979 240.07972717]
[419.14993286 229.22918701]
[429.44357300 218.31858826]
[439.73718262 207.40798950]
[450.03082275 196.49737549]
[447.02645874 181.27392578]
[453.57452393 167.20614624]
[467.15716553 159.70339966]
[482.55157471 161.65063477]
[493.83828735 172.29908752]
[496.67733765 187.55422974]
[489.97705078 201.55015564]
[476.31381226 208.90512085]
[460.94140625 206.79100037]
[450.64779663 217.70161438]
[440.35415649 228.61221313]
[430.06054688 239.52281189]
[427.76446533 246.51962280]
[419.58309937 250.49960327]
[409.16323853 261.28970337]
[398.74334717 272.07980347]
[400.62423706 278.84652710]
[400.17507935 285.85537720]
[397.44589233 292.32669067]
[406.40325928 304.35852051]
[415.36062622 316.39038086]
[424.31802368 328.42224121]
[431.92446899 333.41394043]
[433.30865479 340.64657593]
[442.12542725 352.78182983]
[450.94219971 364.91708374]
[459.75900269 377.05233765]
[468.57577515 389.18759155]
[477.39254761 401.32284546]
[486.20932007 413.45809937]
[495.09655762 425.54187012]
[504.05392456 437.57373047]
[541.97027588 429.87734985]
[555.94244385 435.33422852]
[569.91467285 440.79113770]
[583.91833496 446.16665649]
[597.95312500 451.46060181]
[611.98785400 456.75457764]
[626.02258301 462.04852295]
[641.66546631 459.67962646]
[650.84295654 471.41088867]
[664.87774658 476.70483398]
[678.91247559 481.99880981]
[685.43054199 481.31124878]
[690.56286621 483.64614868]
[693.20977783 487.58267212]
[707.11755371 493.20178223]
[721.02532959 498.82086182]
[734.93310547 504.43997192]
[748.84082031 510.05908203]
[762.74859619 515.67816162]
[775.28405762 506.68560791]
[790.69238281 505.92053223]
[804.05700684 513.62713623]
[811.11315918 527.34625244]
[809.60931396 542.70013428]
[800.02539062 554.78948975]
[785.41949463 559.75653076]
[770.45239258 556.01635742]
[759.89996338 544.76251221]
[757.12951660 529.58593750]
[743.22174072 523.96685791]
[729.31396484 518.34771729]
[715.40625000 512.72863770]
[701.49847412 507.10952759]
[687.59069824 501.49044800]
[673.61853027 496.03353882]
[659.58374023 490.73959351]
[645.54901123 485.44561768]
[630.91003418 488.19317627]
[620.72863770 476.08328247]
[606.69390869 470.78930664]
[592.65917969 465.49536133]
[578.62438965 460.20138550]
[571.28320312 460.77902222]
[564.45776367 454.76333618]
[550.48553467 449.30642700]
[536.51336670 443.84954834]
[530.32006836 448.07958984]
[539.96569824 459.56710815]
[549.61126709 471.05459595]
[559.75537109 482.10433960]
[553.91168213 495.91921997]
[538.91741943 496.33538818]
[532.31628418 482.86715698]
[525.12493896 469.70343018]
[517.93353271 456.53967285]
[511.74026489 460.76974487]
[511.74026489 475.76974487]
[511.74026489 490.76974487]
[511.74026489 505.76974487]
[511.74026489 520.76971436]
[511.74026489 535.76971436]
[525.56787109 545.54040527]
[530.78259277 561.47357178]
[525.51324463 577.21337891]
[512.02960205 586.60498047]
[512.20410156 601.60400391]
[520.10144043 615.31317139]
[512.51275635 628.12963867]
[512.68731689 643.12860107]
[520.58465576 656.83782959]
[512.99597168 669.65423584]
[513.17047119 684.65325928]
[521.99560547 698.47528076]
[514.19879150 712.90240479]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 267]
[3 266]
[5 264]
[6 263]
[8 261]
[9 260]
[14 256]
[15 255]
[16 254]
[17 253]
[18 252]
[19 251]
[20 195]
[21 194]
[23 193]
[24 192]
[25 191]
[26 190]
[27 189]
[28 188]
[29 187]
[30 185]
[31 184]
[32 183]
[33 182]
[35 155]
[36 154]
[37 153]
[38 152]
[39 150]
[40 149]
[41 148]
[42 147]
[47 143]
[48 142]
[49 141]
[50 140]
[51 139]
[52 138]
[53 137]
[54 136]
[55 135]
[56 134]
[66 86]
[67 85]
[68 84]
[69 83]
[71 82]
[72 81]
[73 80]
[87 124]
[88 123]
[89 122]
[90 121]
[91 120]
[92 119]
[97 115]
[98 114]
[99 113]
[102 112]
[103 111]
[104 110]
[125 133]
[126 132]
[157 179]
[158 178]
[159 177]
[160 175]
[161 174]
[162 173]
[163 172]
[196 241]
[197 240]
[198 239]
[199 237]
[200 236]
[201 235]
[202 234]
[204 232]
[205 231]
[206 230]
[209 229]
[210 228]
[211 227]
[212 226]
[213 225]
[214 224]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
