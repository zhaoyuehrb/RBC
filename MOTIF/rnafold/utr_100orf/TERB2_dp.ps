%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:27:07 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TERB2)
} def

/sequence { (\
ACAGGCUUGGCGACGCCAUGUUUCAAGGGCAGCGCGGUUGGUUUUGCGGCAGCGUUAGCCAGGAUCUGAGGCAAUUCUGGGUGGCUGAAGGGGGAACGAUCAGUGACCCGCGAGCCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 68 0.993600185 ubox
2 79 0.003367087 ubox
3 67 0.997830601 ubox
3 78 0.003350503 ubox
4 66 0.998405497 ubox
4 67 0.007003419 ubox
4 77 0.003326978 ubox
4 116 0.038295732 ubox
5 21 0.003787857 ubox
5 65 0.989871017 ubox
5 66 0.008454423 ubox
5 115 0.038342415 ubox
6 20 0.003857427 ubox
6 62 0.009514290 ubox
6 63 0.998680287 ubox
6 114 0.038309718 ubox
7 61 0.006872168 ubox
7 62 0.998166072 ubox
7 63 0.006008545 ubox
7 113 0.037131093 ubox
8 18 0.014460174 ubox
8 61 0.998303554 ubox
8 87 0.003382753 ubox
8 112 0.034131082 ubox
9 17 0.022098803 ubox
9 60 0.999253650 ubox
9 86 0.008929545 ubox
9 111 0.027471661 ubox
9 116 0.003610796 ubox
10 16 0.022741672 ubox
10 35 0.006640484 ubox
10 59 0.999263880 ubox
10 85 0.021042761 ubox
10 111 0.010415354 ubox
10 115 0.003613627 ubox
11 15 0.022579237 ubox
11 34 0.006648131 ubox
11 58 0.998632300 ubox
11 84 0.021080712 ubox
11 110 0.013607644 ubox
11 114 0.003612506 ubox
12 33 0.006680724 ubox
12 56 0.880322278 ubox
12 77 0.008819929 ubox
12 109 0.003936991 ubox
13 55 0.992911037 ubox
13 76 0.008756865 ubox
13 82 0.021002576 ubox
14 54 0.998779536 ubox
14 81 0.021031195 ubox
14 112 0.003576447 ubox
15 30 0.022376356 ubox
15 53 0.998814178 ubox
15 55 0.015408745 ubox
15 72 0.017916180 ubox
15 111 0.003607999 ubox
16 29 0.022349996 ubox
16 52 0.995982385 ubox
16 54 0.015674214 ubox
16 71 0.017932865 ubox
16 80 0.021033016 ubox
16 110 0.003593572 ubox
17 27 0.003386095 ubox
17 28 0.022297979 ubox
17 70 0.017911471 ubox
17 79 0.021059763 ubox
18 78 0.020866450 ubox
19 25 0.015433858 ubox
19 31 0.008663282 ubox
19 48 0.024846492 ubox
19 51 0.924194586 ubox
19 68 0.011431429 ubox
19 73 0.029933358 ubox
20 24 0.015370897 ubox
20 30 0.009641632 ubox
20 47 0.025316265 ubox
20 50 0.998290120 ubox
20 67 0.010134640 ubox
20 72 0.031874657 ubox
21 29 0.009600559 ubox
21 46 0.013931875 ubox
21 49 0.996812778 ubox
21 71 0.031858212 ubox
22 28 0.009027995 ubox
22 48 0.932837655 ubox
22 49 0.019016811 ubox
22 64 0.006523680 ubox
22 70 0.031752658 ubox
23 27 0.006675323 ubox
23 48 0.025193931 ubox
23 63 0.006657749 ubox
23 64 0.016031523 ubox
23 69 0.031885472 ubox
24 46 0.997380372 ubox
24 62 0.006659623 ubox
24 63 0.016147160 ubox
24 68 0.031894386 ubox
25 44 0.003394633 ubox
25 45 0.998117344 ubox
25 67 0.028960209 ubox
26 43 0.004131080 ubox
26 44 0.996423196 ubox
26 45 0.009245855 ubox
26 67 0.011117411 ubox
27 42 0.003986890 ubox
27 43 0.994131931 ubox
27 44 0.011067905 ubox
27 60 0.008303722 ubox
27 66 0.015727354 ubox
28 39 0.004300877 ubox
28 42 0.992001914 ubox
28 43 0.013891113 ubox
28 59 0.008036895 ubox
28 60 0.035905873 ubox
29 38 0.005801486 ubox
29 42 0.016099883 ubox
29 47 0.011304941 ubox
29 59 0.036075552 ubox
30 37 0.005819230 ubox
30 40 0.998693507 ubox
30 41 0.013892090 ubox
30 46 0.011309785 ubox
30 58 0.036128166 ubox
31 39 0.997721460 ubox
31 45 0.011264422 ubox
31 56 0.040472273 ubox
32 38 0.995456596 ubox
32 42 0.003765674 ubox
32 44 0.010588012 ubox
32 50 0.006984023 ubox
32 55 0.042504859 ubox
33 37 0.989756151 ubox
33 41 0.003866609 ubox
33 48 0.009281230 ubox
33 49 0.005003470 ubox
33 54 0.042649471 ubox
34 42 0.011282547 ubox
34 47 0.010598361 ubox
34 50 0.003310800 ubox
34 53 0.042715767 ubox
35 41 0.011355480 ubox
35 46 0.010605642 ubox
35 49 0.003315732 ubox
35 52 0.042554437 ubox
36 45 0.010493045 ubox
37 44 0.009736849 ubox
37 47 0.003378193 ubox
37 50 0.042772604 ubox
37 53 0.003591929 ubox
38 46 0.003357266 ubox
38 49 0.042849651 ubox
38 52 0.003596532 ubox
39 48 0.042717316 ubox
39 51 0.003579596 ubox
40 47 0.042741230 ubox
40 50 0.003488327 ubox
40 60 0.003479420 ubox
41 59 0.003481685 ubox
42 58 0.003455029 ubox
43 57 0.003247031 ubox
46 53 0.003162397 ubox
47 52 0.003164455 ubox
54 85 0.005782708 ubox
55 84 0.005798941 ubox
56 83 0.006121738 ubox
57 82 0.006317911 ubox
57 86 0.003660782 ubox
58 72 0.003969742 ubox
58 85 0.003729505 ubox
59 71 0.003973764 ubox
59 80 0.006715536 ubox
59 84 0.003725597 ubox
60 70 0.003931623 ubox
60 79 0.006874713 ubox
60 83 0.003720186 ubox
61 78 0.008547620 ubox
61 82 0.003554686 ubox
62 77 0.009057407 ubox
63 76 0.009059003 ubox
64 75 0.009050270 ubox
64 82 0.009655957 ubox
65 74 0.008910378 ubox
65 81 0.009690567 ubox
66 80 0.009914541 ubox
66 81 0.011149880 ubox
67 73 0.004805778 ubox
67 79 0.009320706 ubox
67 80 0.011337874 ubox
68 72 0.004809572 ubox
68 77 0.010151170 ubox
69 76 0.010551967 ubox
69 78 0.035510169 ubox
70 75 0.009713956 ubox
70 77 0.036408000 ubox
70 78 0.004713350 ubox
70 116 0.993700601 ubox
71 76 0.025755643 ubox
71 77 0.005083305 ubox
71 82 0.015607934 ubox
71 111 0.006761625 ubox
71 115 0.994913726 ubox
72 79 0.016754196 ubox
72 81 0.016335027 ubox
72 110 0.006712958 ubox
72 114 0.990259926 ubox
73 78 0.015499118 ubox
74 82 0.003965439 ubox
75 81 0.004054794 ubox
75 113 0.406042119 ubox
75 114 0.093315029 ubox
76 112 0.431821776 ubox
76 113 0.820624810 ubox
77 112 0.828953958 ubox
78 110 0.968335247 ubox
78 112 0.003797941 ubox
78 113 0.004596121 ubox
79 109 0.997089532 ubox
80 108 0.997215776 ubox
80 109 0.005720899 ubox
81 107 0.997219213 ubox
81 108 0.004106879 ubox
82 106 0.995538654 ubox
82 117 0.039878669 ubox
83 116 0.070615223 ubox
84 104 0.995535601 ubox
84 115 0.070670399 ubox
85 103 0.997223516 ubox
85 114 0.070669852 ubox
86 102 0.996973106 ubox
86 112 0.004855674 ubox
86 113 0.070068123 ubox
87 101 0.996718327 ubox
87 111 0.009757462 ubox
88 100 0.948350171 ubox
90 101 0.018413544 ubox
90 109 0.026587525 ubox
91 100 0.034173076 ubox
91 101 0.009126151 ubox
91 108 0.026050001 ubox
91 109 0.069163646 ubox
92 100 0.016452897 ubox
92 101 0.010973638 ubox
92 107 0.025485595 ubox
92 108 0.069403364 ubox
92 109 0.004269003 ubox
93 100 0.019328572 ubox
93 107 0.069607689 ubox
93 108 0.004284571 ubox
94 100 0.004145795 ubox
94 101 0.006883504 ubox
94 107 0.004292114 ubox
95 100 0.007963242 ubox
96 104 0.073997264 ubox
97 103 0.074060796 ubox
2 68 0.9500000 lbox
3 67 0.9500000 lbox
4 66 0.9500000 lbox
5 65 0.9500000 lbox
6 63 0.9500000 lbox
7 62 0.9500000 lbox
8 61 0.9500000 lbox
9 60 0.9500000 lbox
10 59 0.9500000 lbox
11 58 0.9500000 lbox
12 56 0.9500000 lbox
13 55 0.9500000 lbox
14 54 0.9500000 lbox
15 53 0.9500000 lbox
16 52 0.9500000 lbox
19 51 0.9500000 lbox
20 50 0.9500000 lbox
21 49 0.9500000 lbox
22 48 0.9500000 lbox
24 46 0.9500000 lbox
25 45 0.9500000 lbox
26 44 0.9500000 lbox
27 43 0.9500000 lbox
28 42 0.9500000 lbox
30 40 0.9500000 lbox
31 39 0.9500000 lbox
32 38 0.9500000 lbox
33 37 0.9500000 lbox
70 116 0.9500000 lbox
71 115 0.9500000 lbox
72 114 0.9500000 lbox
76 113 0.9500000 lbox
77 112 0.9500000 lbox
78 110 0.9500000 lbox
79 109 0.9500000 lbox
80 108 0.9500000 lbox
81 107 0.9500000 lbox
82 106 0.9500000 lbox
84 104 0.9500000 lbox
85 103 0.9500000 lbox
86 102 0.9500000 lbox
87 101 0.9500000 lbox
88 100 0.9500000 lbox
showpage
end
%%EOF
