%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:00:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGGCGCUGCGACCAAUUCAAACAUGGCGCCGUCAGCCUCACAUUCCCCGUUUUCCGCUCAUGGCGGCGUAGGGGCGGAGGUCGCGCCUGAGUGCGUCCGCACGAGAGGGCGGAACCGUCUCCAUGGCAACCCGCGCGCAGCCGGGGCCACUCAGCCAGGCGGGAAGCGCUGGUGUUGCGGCGCUGGCGACAGUCGGGGUUGCGAGCGGCCCGGGGCCGGGGC\
) } def
/len { sequence length } bind def

/coor [
[-41.90216827 391.78707886]
[-49.12847519 404.93167114]
[-48.99650955 420.75234985]
[-61.90816879 428.17785645]
[-69.13447571 441.32244873]
[-76.36077881 454.46707153]
[-83.58708191 467.61166382]
[-90.81338501 480.75625610]
[-98.03969574 493.90084839]
[-87.84255219 505.09448242]
[-81.83476257 518.99359131]
[-80.66801453 534.09051514]
[-84.46887207 548.74768066]
[-92.82502747 561.37518311]
[-104.83009338 570.60321045]
[-119.18182373 575.43090820]
[-134.32347107 575.33447266]
[-148.61257935 570.32446289]
[-160.49916077 560.94427490]
[-168.69384766 548.21142578]
[-172.30776978 533.50708008]
[-170.94888306 518.42620850]
[-164.76460266 504.60473633]
[-154.42575073 493.54187012]
[-141.05381775 486.43762207]
[-126.09927368 484.06265259]
[-111.18429565 486.67456055]
[-103.95798492 473.52996826]
[-96.73168182 460.38534546]
[-89.50537872 447.24075317]
[-82.27907562 434.09616089]
[-75.05276489 420.95156860]
[-75.70160675 406.07107544]
[-62.27307510 397.70538330]
[-55.04676819 384.56079102]
[-55.69560623 369.68029785]
[-42.26707458 361.31460571]
[-35.04077148 348.17001343]
[-27.81446457 335.02539062]
[-20.58815956 321.88079834]
[-13.36185551 308.73620605]
[-18.76713562 300.03002930]
[-20.08638763 289.78625488]
[-17.01577377 279.84039307]
[-10.04412460 272.00259399]
[-0.37643346 267.72817993]
[10.27406597 267.84780884]
[18.04447174 255.01733398]
[25.81487656 242.18687439]
[33.58528137 229.35639954]
[41.35568619 216.52593994]
[36.30129242 206.31076050]
[36.80635071 194.80479431]
[42.86100006 184.86714172]
[53.06209946 179.02282715]
[64.93683624 178.82170105]
[73.06245422 166.21319580]
[81.18807983 153.60469055]
[89.31370544 140.99620056]
[97.43932343 128.38769531]
[105.56494904 115.77919769]
[96.97106171 123.57002258]
[82.74697876 125.50926208]
[66.97215271 118.44232941]
[55.18021774 101.90127563]
[44.31763840 91.55698395]
[33.45505905 81.21269226]
[22.59248352 70.86840057]
[11.65795326 60.60019302]
[0.65200526 50.40857315]
[-10.35394287 40.21695328]
[-21.35988998 30.02533340]
[-41.20358276 26.43984413]
[-46.09123611 7.72559643]
[-57.37746048 -2.15474558]
[-68.66368103 -12.03508759]
[-79.94990540 -21.91543007]
[-91.23612976 -31.79577065]
[-106.66091919 -29.22480202]
[-120.10324097 -37.21466827]
[-125.21604156 -51.99280548]
[-119.58521271 -66.58142090]
[-105.86946106 -74.09222412]
[-90.54494476 -70.97884369]
[-80.84742737 -58.71131134]
[-81.35578918 -43.08199310]
[-70.06956482 -33.20165253]
[-58.78334045 -23.32131195]
[-47.49711609 -13.44096947]
[-36.21089554 -3.56062746]
[-26.12981224 -5.15194130]
[-16.63521194 -0.84609818]
[-10.95616722 8.15722656]
[-11.16827106 19.01938629]
[-0.16232313 29.21100616]
[10.84362507 39.40262604]
[21.84957314 49.59424591]
[28.88584328 51.83032990]
[32.93677521 60.00582123]
[43.79935455 70.35011292]
[54.66193008 80.69440460]
[65.52451324 91.03870392]
[72.47838593 88.22914886]
[86.38614655 82.61005402]
[93.34002686 79.80050659]
[93.96816254 64.81365967]
[94.59629822 49.82681656]
[95.22442627 34.83997726]
[88.07180786 20.72790337]
[96.33528137 8.33580017]
[96.96341705 -6.65104198]
[87.20637512 -19.38602066]
[91.21923828 -34.91909790]
[105.92367554 -41.33462906]
[120.03971100 -33.71116257]
[122.73871613 -17.89677429]
[111.95026398 -6.02290726]
[111.32212830 8.96393490]
[118.51967621 22.00404739]
[110.21127319 35.46810913]
[109.58313751 50.45495224]
[108.95500183 65.44179535]
[108.32686615 80.42863464]
[113.72191620 85.63857269]
[124.14196014 74.84864044]
[134.93173218 85.26885223]
[124.51201630 96.05844879]
[129.90705872 101.26838684]
[144.86285400 100.11760712]
[159.81864929 98.96681976]
[174.77442932 97.81603241]
[189.73022461 96.66524506]
[204.68601990 95.51446533]
[219.64181519 94.36367798]
[229.90629578 82.64710999]
[245.08999634 81.69309998]
[256.19668579 91.55093384]
[271.15249634 90.40014648]
[279.82281494 75.87139893]
[295.29238892 69.44074249]
[311.38439941 73.46116638]
[321.80075073 86.15483093]
[336.73904419 84.79534149]
[351.67730713 83.43585205]
[366.61557007 82.07636261]
[381.55383301 80.71687317]
[394.59594727 71.76067352]
[407.97210693 78.31262207]
[422.91036987 76.95313263]
[437.84863281 75.59364319]
[443.25997925 61.36413956]
[454.26797485 50.93769455]
[468.65243530 46.34344482]
[483.54400635 48.44161224]
[495.99649048 56.76299286]
[503.56973267 69.61255646]
[518.50799561 68.25306702]
[533.44628906 66.89357758]
[548.38452148 65.53408813]
[563.32281494 64.17459869]
[578.25122070 62.71085739]
[593.16906738 61.14292908]
[604.34204102 49.63019562]
[620.29473877 51.33088684]
[628.78948975 64.94038391]
[623.30993652 80.01863861]
[608.05944824 84.99890900]
[594.73693848 76.06076050]
[579.81915283 77.62868500]
[573.50195312 81.44999695]
[564.68231201 79.11286926]
[549.74401855 80.47235870]
[534.80578613 81.83184814]
[519.86749268 83.19132996]
[504.92922974 84.55081940]
[499.79998779 98.55640411]
[489.05426025 108.98898315]
[474.78610229 113.74089050]
[459.80859375 111.81879425]
[447.09924316 103.55079651]
[439.20812988 90.53191376]
[424.26983643 91.89140320]
[409.33157349 93.25088501]
[397.35794067 102.10984802]
[382.91333008 95.65513611]
[367.97503662 97.01462555]
[353.03677368 98.37411499]
[338.09851074 99.73360443]
[323.16024780 101.09309387]
[317.42114258 113.14113617]
[306.39123535 120.84397125]
[292.88827515 122.10342407]
[280.42678833 116.48434448]
[272.30328369 105.35593414]
[257.34747314 106.50672150]
[247.87963867 117.94767761]
[232.72872925 119.32778931]
[220.79258728 109.31946564]
[205.83680725 110.47025299]
[190.88101196 111.62104034]
[175.92521667 112.77182770]
[160.96943665 113.92260742]
[146.01364136 115.07339478]
[131.05784607 116.22418213]
[118.17344666 123.90482330]
[110.04782867 136.51332092]
[101.92220306 149.12182617]
[93.79657745 161.73031616]
[85.67095947 174.33882141]
[77.54533386 186.94731140]
[82.24795532 205.30752563]
[72.20042419 220.99961853]
[54.18614960 224.29634094]
[46.41574478 237.12680054]
[38.64533997 249.95727539]
[30.87493515 262.78775024]
[23.10453033 275.61819458]
[28.91660118 294.86071777]
[18.84467888 311.90219116]
[-0.21725494 315.96249390]
[-7.44356012 329.10711670]
[-14.66986561 342.25170898]
[-21.89616966 355.39630127]
[-29.12247467 368.54089355]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 35]
[2 34]
[4 32]
[5 31]
[6 30]
[7 29]
[8 28]
[9 27]
[37 224]
[38 223]
[39 222]
[40 221]
[41 220]
[47 217]
[48 216]
[49 215]
[50 214]
[51 213]
[56 210]
[57 209]
[58 208]
[59 207]
[60 206]
[61 205]
[65 102]
[66 101]
[67 100]
[68 99]
[69 97]
[70 96]
[71 95]
[72 94]
[74 90]
[75 89]
[76 88]
[77 87]
[78 86]
[105 123]
[106 122]
[107 121]
[108 120]
[110 118]
[111 117]
[128 204]
[129 203]
[130 202]
[131 201]
[132 200]
[133 199]
[134 198]
[137 195]
[138 194]
[142 189]
[143 188]
[144 187]
[145 186]
[146 185]
[148 183]
[149 182]
[150 181]
[156 175]
[157 174]
[158 173]
[159 172]
[160 171]
[161 169]
[162 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
