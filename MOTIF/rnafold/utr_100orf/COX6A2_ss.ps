%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:59:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGCUCCAGACUCAACAGGUGAUUGGCCCAGAGAGGGGAGGUGACCCCAGGCCCCAGGAAAGGGAGCGAGGACAGCGCUGGUUCCCGGCUCCCCGCACCAUCAUGGCUUUGCCUCUGAGGCCCCUGACCCGGGGCUUGGCCAGCGCUGCCAAAGGAGGCCACGGAGGAGCAGGAGCUCGUACCUGGCGUCUGCUGACCUUCG\
) } def
/len { sequence length } bind def

/coor [
[236.99726868 432.09774780]
[225.75782776 422.16421509]
[214.51840210 412.23068237]
[203.27896118 402.29714966]
[192.03952026 392.36361694]
[180.80009460 382.43008423]
[185.90122986 396.53607178]
[195.34269714 408.19192505]
[198.52165222 422.85119629]
[194.75653076 437.37097168]
[184.85456848 448.63821411]
[170.93873596 454.23730469]
[155.99255371 452.96774292]
[143.22047424 445.10174561]
[135.36077881 432.32577515]
[134.09860229 417.37896729]
[139.70454407 403.46591187]
[150.97448730 393.57067871]
[158.38075256 380.52664185]
[145.62748718 388.42312622]
[132.87423706 396.31958008]
[125.21425629 410.16284180]
[110.32014465 410.28448486]
[97.56688690 418.18096924]
[84.81362915 426.07745361]
[81.08330536 441.20101929]
[68.03720093 449.02749634]
[53.64217377 445.37802124]
[40.88891602 453.27450562]
[28.13565826 461.17098999]
[23.07769775 476.39584351]
[7.97169733 481.79846191]
[-5.59431028 473.23440552]
[-7.21364594 457.27328491]
[4.35590649 446.15911865]
[20.23917580 448.41772461]
[32.99243164 440.52124023]
[45.74568939 432.62475586]
[48.89520645 418.11212158]
[61.71633148 409.92230225]
[76.91715240 413.32418823]
[89.67041016 405.42773438]
[102.42366028 397.53125000]
[109.17144775 384.25280762]
[124.97775269 383.56634521]
[137.73100281 375.66986084]
[150.48426819 367.77337646]
[156.11764526 353.87139893]
[152.45893860 339.32443237]
[148.80023193 324.77749634]
[145.14152527 310.23052979]
[141.48281860 295.68356323]
[137.82411194 281.13662720]
[134.16540527 266.58966064]
[130.50669861 252.04270935]
[126.84799194 237.49575806]
[116.24002838 227.04013062]
[120.37758636 211.76953125]
[116.71887970 197.22256470]
[103.84397888 189.82173157]
[99.92630768 175.12117004]
[107.77628326 161.66696167]
[104.11758423 147.12001038]
[100.45887756 132.57305908]
[96.80017090 118.02610016]
[83.36790466 107.65197754]
[84.22901917 90.70185852]
[75.56241608 78.45890045]
[66.89580536 66.21595001]
[52.60726547 59.42269897]
[51.56894302 44.56433105]
[42.90233612 32.32137680]
[34.23572922 20.07842255]
[30.21690369 18.40125275]
[27.24281883 15.79278946]
[25.47815514 12.69692707]
[24.92612267 9.56538963]
[25.43994904 6.80426168]
[17.54346657 -5.94899511]
[9.64698505 -18.70225143]
[1.75050247 -31.45550919]
[-6.14597988 -44.20876694]
[-19.62491035 -54.49248123]
[-13.47442722 -70.29146576]
[3.40974998 -68.75493622]
[6.60727692 -52.10524750]
[14.50375938 -39.35199356]
[22.40024185 -26.59873390]
[30.29672432 -13.84547806]
[38.19320679 -1.09222054]
[46.47867966 11.41181564]
[55.14529037 23.65476799]
[63.81189728 35.89772415]
[77.48054504 41.81527328]
[79.13875580 57.54933929]
[87.80536652 69.79229736]
[96.47197723 82.03524780]
[96.63593292 82.00382233]
[96.80017090 81.97389984]
[100.45887756 67.42694092]
[99.51715851 58.33544540]
[104.28755188 52.68501282]
[108.16983795 38.19612503]
[112.05212402 23.70723724]
[106.87312317 6.03905725]
[119.75074768 -5.87943029]
[123.40945435 -20.42638397]
[127.06816101 -34.97333908]
[125.06782532 -51.80886459]
[140.69166565 -58.39156723]
[151.34222412 -45.20058823]
[141.61511230 -31.31463242]
[137.95640564 -16.76767921]
[134.29769897 -2.22072434]
[140.23625183 8.32180023]
[137.30310059 20.47374153]
[126.54100800 27.58952332]
[122.65872192 42.07841110]
[118.77643585 56.56729889]
[115.00582886 71.08564758]
[111.34712219 85.63260651]
[118.30789948 100.00000000]
[111.34712219 114.36739349]
[115.00582886 128.91435242]
[118.66453552 143.46130371]
[122.32324219 158.00825500]
[135.60426331 166.14779663]
[139.10748291 180.95259094]
[131.26583862 193.56385803]
[134.92454529 208.11082458]
[145.79420471 219.60694885]
[141.39494324 233.83705139]
[145.05364990 248.38400269]
[148.71235657 262.93096924]
[152.37106323 277.47790527]
[156.02976990 292.02487183]
[159.68847656 306.57183838]
[163.34718323 321.11877441]
[167.00588989 335.66574097]
[170.66459656 350.21267700]
[180.37109375 353.27798462]
[187.71192932 360.79132080]
[190.73362732 371.19067383]
[201.97305298 381.12420654]
[213.21249390 391.05773926]
[224.45193481 400.99127197]
[235.69136047 410.92480469]
[246.93080139 420.85833740]
[260.83279419 426.49169922]
[275.81677246 427.18444824]
[290.80078125 427.87719727]
[302.30996704 417.04605103]
[318.10421753 417.60897827]
[328.81311035 429.23205566]
[328.08319092 445.01947021]
[316.34756470 455.60485840]
[300.56875610 454.70809937]
[290.10803223 442.86120605]
[275.12402344 442.16845703]
[260.14004517 441.47567749]
[256.64282227 448.11041260]
[249.64837646 461.37985229]
[246.15115356 468.01455688]
[255.19067383 479.98480225]
[264.23019409 491.95507812]
[273.26971436 503.92532349]
[282.30923462 515.89556885]
[291.34875488 527.86584473]
[300.57153320 539.69549561]
[309.97540283 551.38171387]
[319.37924194 563.06793213]
[328.78311157 574.75408936]
[338.18698120 586.44030762]
[347.59082031 598.12652588]
[362.27044678 604.02728271]
[364.22149658 618.79351807]
[373.62536621 630.47973633]
[383.02923584 642.16595459]
[398.66616821 642.30609131]
[410.52105713 652.50396729]
[412.99630737 667.94439697]
[404.92324829 681.33691406]
[390.11367798 686.35797119]
[375.56027222 680.63677979]
[368.13467407 666.87475586]
[371.34301758 651.56982422]
[361.93914795 639.88360596]
[352.53530884 628.19738770]
[338.52828979 623.13250732]
[335.90460205 607.53039551]
[326.50076294 595.84417725]
[317.09689331 584.15795898]
[307.69305420 572.47174072]
[298.28918457 560.78552246]
[288.88531494 549.09936523]
[284.31256104 547.70385742]
[280.57012939 543.41772461]
[279.37850952 536.90539551]
[270.33898926 524.93511963]
[261.29946899 512.96484375]
[252.25993347 500.99459839]
[243.22041321 489.02432251]
[234.18089294 477.05407715]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 148]
[2 147]
[3 146]
[4 145]
[5 144]
[6 143]
[19 47]
[20 46]
[21 45]
[23 43]
[24 42]
[25 41]
[28 38]
[29 37]
[30 36]
[48 140]
[49 139]
[50 138]
[51 137]
[52 136]
[53 135]
[54 134]
[55 133]
[56 132]
[58 130]
[59 129]
[62 126]
[63 125]
[64 124]
[65 123]
[67 97]
[68 96]
[69 95]
[71 93]
[72 92]
[73 91]
[78 90]
[79 89]
[80 88]
[81 87]
[82 86]
[99 121]
[100 120]
[102 119]
[103 118]
[104 117]
[106 114]
[107 113]
[108 112]
[149 160]
[150 159]
[151 158]
[163 203]
[164 202]
[165 201]
[166 200]
[167 199]
[168 198]
[169 195]
[170 194]
[171 193]
[172 192]
[173 191]
[174 190]
[176 188]
[177 187]
[178 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
