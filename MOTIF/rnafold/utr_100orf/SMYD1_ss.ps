%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:15:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAUGCUGAAGGUGCUGAAAUAGCAAUGACAAGAGACUUGGCUCAGUGUUAAAUAACUGCCGCGCUGGCCUGACAGUCUCUGAGAUGACAAUAGGGAGAAUGGAGAACGUGGAGGUCUUCACCGCUGAGGGCAAAGGAAGGGGUCUGAAGGCCACCAAGGAGUUCUGGGCUGCAGAUAUCAUCU\
) } def
/len { sequence length } bind def

/coor [
[140.09942627 120.04467010]
[142.40898132 134.86579895]
[135.99168396 148.42375183]
[123.06514740 156.03327942]
[108.09645081 155.06474304]
[96.25835419 145.85281372]
[91.64177704 131.58091736]
[95.84226990 117.18070984]
[86.46165466 128.88558960]
[91.91950226 143.17401123]
[89.50854492 158.17681885]
[79.97515106 169.88069153]
[65.95728302 175.20565796]
[51.25519562 172.81521606]
[41.87457657 184.52009583]
[32.49396133 196.22496033]
[23.11334419 207.92984009]
[13.73272705 219.63470459]
[8.54544640 235.77560425]
[-8.40063763 235.25929260]
[-12.59564304 218.83253479]
[2.02785468 210.25408936]
[11.40847206 198.54922485]
[20.78908920 186.84434509]
[30.16970634 175.13948059]
[39.55032349 163.43460083]
[34.01496506 149.60617065]
[36.15879822 134.76501465]
[45.50516891 122.91125488]
[59.62262344 117.29037476]
[74.75678253 119.50496674]
[84.13739777 107.80009460]
[80.25511169 93.31121063]
[66.27882385 87.86479950]
[52.30253601 82.41838837]
[38.32624817 76.97198486]
[24.34996033 71.52557373]
[10.37367153 66.07917023]
[-3.60261655 60.63275909]
[-24.52663612 65.19277954]
[-36.79912186 48.61350250]
[-51.03332901 43.88197327]
[-65.26753235 39.15044403]
[-74.42062378 39.41147232]
[-79.70101166 34.21693039]
[-93.85327148 29.24566650]
[-108.00553131 24.27440262]
[-122.15779877 19.30313873]
[-136.31005859 14.33187580]
[-150.46232605 9.36061287]
[-161.23153687 20.17664909]
[-175.63003540 25.24087334]
[-190.79895020 23.54777908]
[-203.72650146 15.43353271]
[-211.84593201 2.50922108]
[-213.54508972 -12.65902233]
[-208.48661804 -27.05953217]
[-197.67489624 -37.83307648]
[-183.25657654 -42.84056091]
[-168.09443665 -41.08774567]
[-155.19892883 -32.92265320]
[-147.13047791 -19.96646690]
[-145.49105835 -4.79165030]
[-131.33879089 0.17961335]
[-117.18653107 5.15087700]
[-103.03427124 10.12213993]
[-88.88201141 15.09340382]
[-74.72974396 20.06466675]
[-60.53600693 24.91623688]
[-46.30179977 29.64776802]
[-32.06759262 34.37929916]
[-24.85107422 29.14182472]
[-15.89578342 27.80456734]
[-7.20338440 30.79486656]
[-0.77620083 37.55824280]
[1.84379137 46.65647125]
[15.82007980 52.10287857]
[29.79636765 57.54928589]
[43.77265549 62.99569321]
[57.74894714 68.44210052]
[71.72523499 73.88851166]
[85.70152283 79.33491516]
[103.52790070 79.95030975]
[112.71063232 90.98001099]
[127.49717712 88.45849609]
[142.28372192 85.93698120]
[157.07026672 83.41546631]
[171.85681152 80.89395905]
[186.64335632 78.37244415]
[188.88807678 64.20980072]
[195.39010620 51.45332718]
[205.50103760 41.34596252]
[218.22154236 34.86790848]
[232.30017090 32.64159775]
[246.35643005 34.87190247]
[259.01617432 41.32735825]
[269.04595947 51.36409760]
[275.47314453 63.99006653]
[290.30017090 61.71865082]
[299.65518188 49.26386261]
[314.72424316 47.17153931]
[326.54031372 56.16686249]
[341.36734009 53.89544678]
[356.19436646 51.62402725]
[371.02139282 49.35261154]
[385.84841919 47.08119583]
[391.68597412 31.62245750]
[404.44570923 21.27127838]
[420.59048462 18.77536201]
[435.70571899 24.72151184]
[445.70645142 37.40114975]
[460.49298096 34.87963486]
[475.27954102 32.35811996]
[487.58267212 22.41110420]
[501.42947388 27.89883423]
[516.21606445 25.37732124]
[531.00256348 22.85580826]
[545.78912354 20.33429337]
[560.57568359 17.81278038]
[575.36224365 15.29126740]
[590.14874268 12.76975441]
[604.89062500 9.99886322]
[619.58355713 6.97938538]
[634.27648926 3.95990753]
[646.23669434 -6.39696407]
[660.26092529 -1.38002765]
[674.95391846 -4.39950562]
[678.62255859 -19.21515465]
[688.36285400 -30.96632767]
[702.24072266 -37.31982422]
[717.50079346 -37.01414871]
[731.11309814 -30.10999489]
[740.37500000 -17.97818947]
[743.44744873 -3.02750802]
[739.72039795 11.77357864]
[729.93395996 23.48630333]
[716.03112793 29.78509903]
[700.77239990 29.41933250]
[687.18737793 22.46162796]
[677.97338867 10.29344368]
[663.28039551 13.31292152]
[652.37121582 23.45381927]
[637.29602051 18.65285683]
[622.60302734 21.67233467]
[607.91009521 24.69181252]
[604.57073975 28.13388252]
[599.02618408 29.50106621]
[592.67028809 27.55630112]
[577.88372803 30.07781410]
[563.09716797 32.59932709]
[548.31066895 35.12084198]
[533.52410889 37.64235306]
[518.73754883 40.16386795]
[503.95098877 42.68538284]
[492.70547485 52.45204544]
[477.80105591 47.14466858]
[463.01449585 49.66618347]
[448.22796631 52.18769455]
[444.33395386 65.29008484]
[435.12689209 75.48225403]
[422.36392212 80.73390198]
[408.51779175 79.96582794]
[396.29785156 73.27113342]
[388.11984253 61.90821838]
[373.29281616 64.17963409]
[358.46578979 66.45104980]
[343.63876343 68.72247314]
[328.81173706 70.99388885]
[320.23043823 83.11397552]
[305.22607422 85.62873077]
[292.57159424 76.54567719]
[277.74456787 78.81709290]
[274.86093140 94.28507233]
[266.84478760 107.85560608]
[254.64814758 117.88089752]
[239.73197937 123.13634491]
[223.89111328 122.97009277]
[209.03833008 117.38388062]
[196.97337341 107.03498840]
[189.16487122 93.15898895]
[174.37832642 95.68050385]
[159.59178162 98.20201874]
[144.80523682 100.72352600]
[130.01869202 103.24504089]
[115.23213959 105.76655579]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 32]
[9 31]
[14 26]
[15 25]
[16 24]
[17 23]
[18 22]
[33 82]
[34 81]
[35 80]
[36 79]
[37 78]
[38 77]
[39 76]
[41 71]
[42 70]
[43 69]
[45 68]
[46 67]
[47 66]
[48 65]
[49 64]
[50 63]
[84 185]
[85 184]
[86 183]
[87 182]
[88 181]
[89 180]
[98 172]
[99 171]
[102 168]
[103 167]
[104 166]
[105 165]
[106 164]
[111 158]
[112 157]
[113 156]
[115 154]
[116 153]
[117 152]
[118 151]
[119 150]
[120 149]
[121 148]
[122 145]
[123 144]
[124 143]
[126 141]
[127 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
