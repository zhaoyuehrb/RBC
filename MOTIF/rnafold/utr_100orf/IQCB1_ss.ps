%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:59:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCCUCCAGGCCCCUUCCCGCGUCGCGACGCACGCUGCCCCGGAAGGCCGCGGCGCUGUAGUGCGGCGUGGGAGCCCCAGGUUCUUUAGUGGAAGAACGCGAAGCGAGGAUGAGUGAUCCGUGGAGGCAGUAACAGGCGCGGCGAGGGAGAAGUGAUUCCCGAAGAAUCAAGGCUGGGCCGGACCCGGUGGCCUGGCAACAGGGUAAUAAGAGAAAUGAAGCCAACAGGUACAGACCCAAGGAUCUUAUCUAUAG\
CUGCUGAAGUUGCAAAAAGCCCUGAGCAGAAUGUCCCUGUUAUACUGUUGAAGUUAAAAG\
) } def
/len { sequence length } bind def

/coor [
[192.14373779 124.13817596]
[201.78619385 112.65193939]
[187.36361694 116.77375793]
[172.94104004 120.89557648]
[158.51846313 125.01739502]
[144.09590149 129.13920593]
[129.67332458 133.26103210]
[115.25074768 137.38284302]
[102.10183716 144.60130310]
[90.88179016 154.55673218]
[79.66173553 164.51214600]
[78.46260071 168.55944824]
[76.27926636 171.72134399]
[73.50115204 173.80010986]
[70.54196930 174.74127197]
[67.79203033 174.62945557]
[56.18505478 184.13093567]
[44.57807922 193.63241577]
[32.97110748 203.13389587]
[21.36413383 212.63537598]
[9.75716019 222.13685608]
[-1.84981346 231.63835144]
[-13.45678711 241.13983154]
[-25.06376076 250.64131165]
[-36.67073441 260.14279175]
[-48.27770615 269.64428711]
[-59.88468170 279.14575195]
[-61.59851074 294.62802124]
[-73.50498962 304.09854126]
[-88.25439453 302.36923218]
[-99.86137390 311.87072754]
[-111.46834564 321.37219238]
[-123.02794647 330.93127441]
[-134.53988647 340.54766846]
[-146.05181885 350.16406250]
[-157.56376648 359.78048706]
[-169.07569885 369.39688110]
[-180.58764648 379.01327515]
[-186.55091858 396.46142578]
[-203.97494507 398.73596191]
[-215.39071655 408.46633911]
[-220.36737061 424.09210205]
[-236.44363403 427.33029175]
[-247.08163452 414.84970093]
[-241.33789062 399.48928833]
[-225.12109375 397.05056763]
[-213.70532227 387.32019043]
[-212.44497681 375.32357788]
[-203.06124878 367.12203979]
[-190.20405579 367.50134277]
[-178.69210815 357.88494873]
[-167.18017578 348.26855469]
[-155.66822815 338.65213013]
[-144.15629578 329.03573608]
[-132.64434814 319.41934204]
[-129.54225159 312.75601196]
[-120.96982574 309.76522827]
[-109.36285400 300.26376343]
[-97.75588226 290.76226807]
[-96.53768158 275.96188354]
[-84.90191650 266.16067505]
[-69.38616180 267.53878784]
[-57.77919006 258.03729248]
[-46.17221451 248.53581238]
[-34.56524277 239.03433228]
[-22.95826912 229.53285217]
[-11.35129547 220.03137207]
[0.25567755 210.52989197]
[11.86265087 201.02841187]
[23.46962357 191.52691650]
[35.07659912 182.02543640]
[46.68357086 172.52395630]
[58.29054642 163.02247620]
[69.70631409 153.29209900]
[80.92636108 143.33666992]
[92.14641571 133.38125610]
[90.22929382 126.13041687]
[75.72755432 129.96443176]
[71.89378357 115.46262360]
[86.39504242 111.62874603]
[84.47792053 104.37790680]
[69.80364227 101.26895905]
[55.12936020 98.16000366]
[40.45508194 95.05105591]
[25.78080559 91.94210815]
[11.10652733 88.83315277]
[-3.56774998 85.72420502]
[-18.98486900 91.31388092]
[-31.35833931 80.55148315]
[-27.95939827 64.50843811]
[-12.28458214 59.68846130]
[-0.45879984 71.04992676]
[14.21547794 74.15887451]
[28.88975525 77.26782990]
[43.56403351 80.37677765]
[58.23831177 83.48572540]
[72.91259003 86.59468079]
[87.58686829 89.70362854]
[92.49075317 75.52787781]
[79.03216553 68.90469360]
[62.15094757 67.33600616]
[58.98514557 50.68025970]
[74.11360168 43.02740479]
[85.65534973 55.44611359]
[99.11393738 62.06929398]
[103.20289612 55.78197479]
[111.38081360 43.20733261]
[115.46977997 36.92001343]
[103.95783997 27.30360794]
[92.44589996 17.68720245]
[80.93395996 8.07079887]
[64.89090729 8.06645966]
[55.00469589 -4.56850910]
[58.85918427 -20.14164162]
[73.49753571 -26.70656395]
[87.69046021 -19.22722816]
[90.55036163 -3.44114113]
[102.06230164 6.17526340]
[113.57424164 15.79166794]
[125.08618164 25.40807343]
[152.00141907 96.69589996]
[111.12892914 122.96026611]
[125.55150604 118.83844757]
[139.97407532 114.71663666]
[154.39665222 110.59481812]
[168.81922913 106.47299957]
[183.24180603 102.35118866]
[197.66436768 98.22937012]
[203.27851868 91.33706665]
[210.92411804 89.14888763]
[217.55316162 91.45965576]
[231.49540710 85.92669678]
[245.43766785 80.39373779]
[259.37991333 74.86077881]
[273.32217407 69.32781982]
[287.26440430 63.79486084]
[289.66796875 50.25341415]
[298.36877441 39.74234772]
[311.02093506 34.92855453]
[324.29452515 36.96492386]
[334.75204468 45.21626663]
[348.74862671 39.82218933]
[362.74517822 34.42811203]
[369.58206177 28.45411682]
[376.90780640 29.05074310]
[390.95730591 23.79607964]
[405.00683594 18.54141808]
[419.05633545 13.28675556]
[433.10583496 8.03209209]
[432.23583984 -11.35053635]
[438.01361084 -29.83592796]
[449.72463989 -45.21761322]
[465.94763184 -55.66807175]
[484.72714233 -59.95587158]
[485.91888428 -74.90845490]
[487.11065674 -89.86103821]
[488.30239868 -104.81362152]
[489.49414062 -119.76620483]
[490.68591309 -134.71878052]
[481.41510010 -147.81196594]
[486.00973511 -163.18301392]
[500.94522095 -169.04055786]
[514.76434326 -160.89120483]
[516.86621094 -144.98643494]
[505.63848877 -133.52703857]
[504.44674683 -118.57444763]
[503.25497437 -103.62186432]
[502.06323242 -88.66928101]
[500.87149048 -73.71669769]
[499.67971802 -58.76411819]
[503.03784180 -57.92119217]
[506.33700562 -56.87094498]
[509.56442261 -55.61745071]
[517.23596191 -68.50727844]
[524.90747070 -81.39710236]
[532.57904053 -94.28692627]
[540.25054932 -107.17675018]
[547.92205811 -120.06657410]
[555.59362793 -132.95640564]
[563.26513672 -145.84622192]
[570.93670654 -158.73605347]
[565.61309814 -173.43955994]
[571.03472900 -188.10720825]
[584.64166260 -195.81336975]
[600.00915527 -192.91943359]
[609.88110352 -180.79183960]
[609.59625244 -165.15684509]
[599.28918457 -153.39683533]
[583.82647705 -151.06451416]
[576.15496826 -138.17469788]
[568.48345947 -125.28486633]
[560.81188965 -112.39504242]
[553.14038086 -99.50521851]
[545.46881104 -86.61539459]
[537.79730225 -73.72557068]
[530.12579346 -60.83574295]
[522.45422363 -47.94591904]
[532.84173584 -37.08574295]
[539.94244385 -23.84095001]
[543.23779297 -9.17859840]
[558.21923828 -8.43327427]
[573.20074463 -7.68795061]
[588.18218994 -6.94262648]
[603.16369629 -6.19730234]
[618.14514160 -5.45197821]
[620.76129150 -15.34881878]
[625.21258545 -24.62078667]
[631.35662842 -32.92926788]
[638.98876953 -39.96708298]
[647.84912109 -45.46983719]
[657.63122559 -49.22580719]
[667.99261475 -51.08406067]
[678.56689453 -50.96044540]
[688.97674561 -48.84120560]
[698.84716797 -44.78413773]
[707.81915283 -38.91716003]
[715.56280518 -31.43434334]
[721.78924561 -22.58952522]
[726.26159668 -12.68773270]
[728.80377197 -2.07466650]
[743.79711914 -1.62735415]
[758.79040527 -1.18004179]
[766.36511230 -12.65922928]
[778.51989746 -18.85996628]
[792.04370117 -18.26383018]
[803.42254639 -11.13240719]
[809.75231934 0.58845514]
[824.74047852 1.18480289]
[839.72857666 1.78115058]
[854.71673584 2.37749839]
[869.70489502 2.97384596]
[878.34979248 0.19955410]
[884.83886719 3.65135956]
[899.82031250 4.39668369]
[914.80175781 5.14200783]
[929.78680420 5.81285191]
[944.77490234 6.40919971]
[960.84191895 0.99734914]
[970.49005127 14.93828678]
[959.76477051 28.06860924]
[944.17858887 21.39734077]
[929.19042969 20.80099297]
[922.41888428 23.65915298]
[914.05645752 20.12347984]
[899.07501221 19.37815475]
[884.09350586 18.63283157]
[869.10852051 17.96198654]
[854.12036133 17.36563873]
[839.13226318 16.76929092]
[824.14410400 16.17294312]
[809.15594482 15.57659626]
[799.38061523 28.79512787]
[783.48748779 33.61184692]
[767.70513916 27.93133163]
[758.34313965 13.81328678]
[743.34979248 13.36597443]
[728.35644531 12.91866207]
[724.30639648 27.36154747]
[737.34619141 34.77528381]
[751.94097900 29.16040039]
[766.71350098 34.28934479]
[774.68865967 47.74039078]
[772.10083008 63.16236115]
[760.17193604 73.27347565]
[744.53436279 73.29957581]
[732.57171631 63.22833633]
[729.93243408 47.81509018]
[716.89263916 40.40135193]
[699.17675781 54.73403549]
[677.53143311 61.00240326]
[655.40075684 58.41331482]
[636.22735596 47.56702042]
[622.91735840 30.33278847]
[617.39984131 9.52949333]
[602.41833496 8.78416920]
[587.43688965 8.03884506]
[572.45538330 7.29352140]
[557.47393799 6.54819727]
[542.49249268 5.80287313]
[538.39050293 18.85252380]
[531.22216797 30.51754951]
[521.41552734 40.08974457]
[509.55908203 46.98623276]
[496.36642456 50.78496933]
[482.63327026 51.25054932]
[469.18945312 48.34880066]
[456.84878540 42.24919891]
[446.35983276 33.31500244]
[438.36050415 22.08159447]
[424.31097412 27.33625793]
[410.26147461 32.59091949]
[396.21197510 37.84558487]
[382.16247559 43.10024643]
[368.13928223 48.42468262]
[354.14270020 53.81875992]
[340.14614868 59.21283722]
[336.41171265 75.22351074]
[323.73016357 85.94590759]
[306.98898315 86.98720551]
[292.79736328 77.73711395]
[278.85513306 83.27007294]
[264.91287231 88.80303192]
[250.97062683 94.33599091]
[237.02836609 99.86894989]
[223.08612061 105.40190125]
[237.73649597 108.62162018]
[249.68498230 117.68988037]
[256.72747803 130.93388367]
[257.56478882 145.91049194]
[252.04254150 159.85697937]
[241.17935181 170.20063782]
[226.97918701 175.03337097]
[212.06153870 173.46369934]
[199.17828369 165.78115845]
[190.70596313 153.40295410]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 128]
[3 127]
[4 126]
[5 125]
[6 124]
[7 123]
[8 122]
[9 76]
[10 75]
[11 74]
[16 73]
[17 72]
[18 71]
[19 70]
[20 69]
[21 68]
[22 67]
[23 66]
[24 65]
[25 64]
[26 63]
[27 62]
[30 59]
[31 58]
[32 57]
[33 55]
[34 54]
[35 53]
[36 52]
[37 51]
[38 50]
[40 47]
[41 46]
[81 98]
[82 97]
[83 96]
[84 95]
[85 94]
[86 93]
[87 92]
[99 105]
[100 104]
[108 120]
[109 119]
[110 118]
[111 117]
[131 305]
[132 304]
[133 303]
[134 302]
[135 301]
[136 300]
[141 296]
[142 295]
[143 294]
[145 293]
[146 292]
[147 291]
[148 290]
[149 289]
[154 170]
[155 169]
[156 168]
[157 167]
[158 166]
[159 165]
[173 197]
[174 196]
[175 195]
[176 194]
[177 193]
[178 192]
[179 191]
[180 190]
[181 189]
[200 279]
[201 278]
[202 277]
[203 276]
[204 275]
[205 274]
[220 257]
[221 256]
[222 255]
[227 251]
[228 250]
[229 249]
[230 248]
[231 247]
[233 246]
[234 245]
[235 244]
[236 242]
[237 241]
[258 268]
[259 267]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
