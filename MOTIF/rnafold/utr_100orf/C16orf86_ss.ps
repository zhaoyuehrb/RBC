%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:30:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGUUUCGGCCGAGGGUGGGCUCCGCGGUCGCCGGUUUCUCUUCCCAGCUCUGCCCUCGCUUGCUGGCCGGUCUCCGGGGUCAGCGCGGGGCCACCAUCCAGCCCCUUGGGGCCCGCCCCAAGCAGCUGUCGAGGACGCACUCAGCCUGCGCAGCCAUGGCCUCGGCAGGGGCGGAGAGGCGGCCGGGGGUCCAGGAGGCGACGGUCGUGGGGCAGGGACAGCUCACGGAGGAGCCCGGCAGCGCUCAGACCUC\
CG\
) } def
/len { sequence length } bind def

/coor [
[34.66598892 949.67968750]
[28.78255844 963.67071533]
[18.23945618 974.58892822]
[4.46254969 980.95770264]
[-10.68494701 981.91571045]
[-25.15445900 977.33343506]
[-36.98910522 967.83050537]
[-44.58834457 954.69213867]
[-46.92444611 939.69525146]
[-43.68146515 924.86798096]
[-35.29799271 912.21563721]
[-22.90782547 903.44934082]
[-8.18662930 899.75463867]
[-6.36463261 884.86572266]
[-4.54263544 869.97674561]
[-2.72063851 855.08782959]
[-10.43744755 839.31256104]
[0.79837364 824.70635986]
[2.43894172 809.79638672]
[4.07950974 794.88635254]
[5.72007799 779.97631836]
[7.36064625 765.06628418]
[5.47773170 762.11816406]
[4.91267872 758.11962891]
[6.14028502 753.69232178]
[9.34312248 749.64532471]
[11.52713966 734.80517578]
[5.72539854 721.08697510]
[15.38956642 708.56042480]
[17.57358360 693.72027588]
[19.75760078 678.88012695]
[21.94161987 664.03991699]
[19.88004684 659.76171875]
[20.46357727 654.14611816]
[24.36375809 648.86676025]
[26.90850067 634.08416748]
[29.45324326 619.30163574]
[31.99798584 604.51904297]
[34.54272842 589.73651123]
[37.08747101 574.95391846]
[39.63221359 560.17138672]
[42.17695618 545.38879395]
[44.72169876 530.60620117]
[46.54369736 515.71728516]
[47.63862610 500.75732422]
[48.73355484 485.79733276]
[49.82848740 470.83734131]
[43.04085922 457.57922363]
[51.76486588 444.38067627]
[52.85979462 429.42068481]
[53.95472336 414.46069336]
[55.04965591 399.50070190]
[56.14458466 384.54074097]
[57.23951340 369.58074951]
[58.33444214 354.62075806]
[59.24713516 339.64855957]
[59.97744751 324.66635132]
[60.61653137 309.67996216]
[61.16436005 294.68997192]
[61.71219254 279.69998169]
[62.26002121 264.70999146]
[62.80785370 249.71998596]
[63.35568237 234.72999573]
[56.08837128 221.72863770]
[64.32451630 208.22026062]
[64.87235260 193.23025513]
[65.42018127 178.24026489]
[65.96800995 163.25027466]
[66.42456818 148.25721741]
[66.78983307 133.26167297]
[58.89791870 120.50558472]
[45.31619263 114.13874054]
[31.73447037 107.77188873]
[18.15274620 101.40503693]
[4.57102299 95.03818512]
[-9.01070023 88.67133331]
[-22.63093567 82.38729095]
[-36.28917694 76.18629456]
[-50.31478500 83.10123444]
[-65.49148560 79.33270264]
[-74.65330505 66.66009521]
[-73.47431183 51.06702042]
[-62.51119614 39.91605377]
[-46.94039917 38.47233963]
[-34.11397934 47.41756058]
[-30.08817673 62.52804947]
[-16.42993355 68.72904968]
[-9.06220818 68.63285828]
[-2.64384985 75.08961487]
[10.93787384 81.45646667]
[24.51959801 87.82331085]
[38.10132217 94.19016266]
[51.68304443 100.55701447]
[65.26477051 106.92386627]
[70.85055542 101.91897583]
[60.84077835 90.74739075]
[50.83118057 79.57564545]
[62.00309372 69.56623077]
[72.01235962 80.73760986]
[82.02214050 91.90919495]
[87.60793304 86.90429688]
[82.76472473 72.70770264]
[77.92152405 58.51110840]
[73.07831573 44.31451035]
[59.17260742 37.29531479]
[54.46314621 22.82895470]
[61.24057007 9.61524677]
[56.39736557 -4.58134985]
[51.55415726 -18.77794647]
[46.71095276 -32.97454453]
[41.86774445 -47.17113876]
[37.02453995 -61.36773682]
[32.18133545 -75.56433105]
[19.48593712 -85.94503784]
[22.39487457 -102.08412170]
[37.91567993 -107.37908173]
[50.08187866 -96.38291931]
[46.37792969 -80.40753937]
[51.22113800 -66.21094513]
[56.06434250 -52.01434708]
[60.90754700 -37.81774902]
[65.75075531 -23.62115288]
[70.59396362 -9.42455578]
[75.43716431 4.77204037]
[88.87734985 11.08845997]
[93.99127960 25.41683388]
[87.27490997 39.47130585]
[92.11811829 53.66790009]
[96.96132660 67.86449432]
[101.80452728 82.06109619]
[109.29563904 81.69593811]
[124.27784729 80.96562195]
[131.76895142 80.60046387]
[135.20843506 66.00012970]
[138.64793396 51.39978790]
[130.12075806 38.09328461]
[133.58183289 22.67263222]
[146.97773743 14.28662586]
[162.36093140 17.91053581]
[170.60484314 31.39435959]
[166.81849670 46.73838425]
[153.24826050 54.83927536]
[149.80877686 69.43961334]
[146.36929321 84.03995514]
[152.59896851 88.21621704]
[165.05830383 96.56874847]
[171.28797913 100.74501038]
[183.48733521 92.01712799]
[195.68667603 83.28923798]
[207.88601685 74.56135559]
[213.02482605 67.04619598]
[220.28747559 65.80253601]
[232.59219360 57.22384644]
[239.48760986 42.98433304]
[254.35302734 42.05245972]
[266.65774536 33.47377014]
[278.96246338 24.89507675]
[278.78887939 6.73985434]
[289.47308350 -7.74428034]
[306.56814575 -12.84818935]
[323.14877319 -6.70206594]
[335.24093628 -15.57784653]
[347.33309937 -24.45362854]
[359.42526245 -33.32941055]
[371.51742554 -42.20518875]
[377.61557007 -57.42835999]
[393.88452148 -59.49066925]
[403.58819580 -46.27058411]
[396.74429321 -31.36780167]
[380.39321899 -30.11302185]
[368.30105591 -21.23724174]
[356.20889282 -12.36146069]
[344.11672974 -3.48567963]
[332.02453613 5.39010143]
[333.88195801 17.35327911]
[330.46762085 29.04344749]
[322.36804199 38.23447800]
[311.06784058 43.14920425]
[298.67791748 42.80286789]
[287.54116821 37.19979095]
[275.23645020 45.77848434]
[262.93173218 54.35717773]
[256.91641235 67.98308563]
[241.17088318 69.52856445]
[228.86616516 78.10725403]
[216.61390686 86.76070404]
[204.41455078 95.48858643]
[192.21520996 104.21646881]
[180.01586914 112.94435120]
[81.78538513 133.62693787]
[81.42012024 148.62249756]
[84.33288574 157.24807739]
[80.95800018 163.79811096]
[80.41017151 178.78810120]
[79.86234283 193.77809143]
[79.31451416 208.76808167]
[86.54264069 222.84162903]
[78.34567261 235.27783203]
[77.79784393 250.26782227]
[77.25001526 265.25781250]
[76.70218658 280.24780273]
[76.15435791 295.23779297]
[75.60652161 310.22778320]
[78.41404724 318.88821411]
[74.95965576 325.39666748]
[74.22934723 340.37887573]
[76.88832855 346.37991333]
[76.23689270 351.98806763]
[73.29442596 355.71569824]
[72.19950104 370.67568970]
[71.10456848 385.63565063]
[70.00963593 400.59564209]
[68.91471100 415.55563354]
[67.81977844 430.51562500]
[66.72484589 445.47558594]
[73.43415833 459.80374146]
[64.78846741 471.93228149]
[63.69354248 486.89224243]
[62.59860992 501.85223389]
[61.50368118 516.81225586]
[72.00217438 506.09860229]
[86.77693176 503.50891113]
[100.29335022 510.01324463]
[107.48819733 523.17510986]
[105.66628265 538.06402588]
[95.51010132 549.10272217]
[80.82414246 552.15600586]
[67.10975647 546.08020020]
[59.50426865 533.15100098]
[56.95952606 547.93353271]
[54.41477966 562.71612549]
[51.87003708 577.49865723]
[49.32529449 592.28125000]
[46.78055191 607.06378174]
[44.23580933 621.84637451]
[41.69106674 636.62896729]
[39.14632416 651.41149902]
[36.78176880 666.22393799]
[34.59775162 681.06408691]
[32.41373444 695.90423584]
[30.22971725 710.74444580]
[35.87524414 725.52410889]
[26.36729050 736.98919678]
[24.18327332 751.82934570]
[22.27066040 766.70690918]
[20.63009262 781.61688232]
[18.98952484 796.52691650]
[17.34895706 811.43695068]
[15.70838833 826.34692383]
[23.14492416 836.86175537]
[21.49009895 849.22991943]
[12.16829491 856.90985107]
[10.34629726 871.79876709]
[8.52430058 886.68768311]
[6.70230341 901.57659912]
[20.09818459 908.71209717]
[30.00888443 920.20739746]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 255]
[14 254]
[15 253]
[16 252]
[18 249]
[19 248]
[20 247]
[21 246]
[22 245]
[26 244]
[27 243]
[29 241]
[30 240]
[31 239]
[32 238]
[35 237]
[36 236]
[37 235]
[38 234]
[39 233]
[40 232]
[41 231]
[42 230]
[43 229]
[44 220]
[45 219]
[46 218]
[47 217]
[49 215]
[50 214]
[51 213]
[52 212]
[53 211]
[54 210]
[55 209]
[56 206]
[57 205]
[58 203]
[59 202]
[60 201]
[61 200]
[62 199]
[63 198]
[65 196]
[66 195]
[67 194]
[68 193]
[69 191]
[70 190]
[71 94]
[72 93]
[73 92]
[74 91]
[75 90]
[76 89]
[77 87]
[78 86]
[101 130]
[102 129]
[103 128]
[104 127]
[107 124]
[108 123]
[109 122]
[110 121]
[111 120]
[112 119]
[113 118]
[133 144]
[134 143]
[135 142]
[147 189]
[148 188]
[149 187]
[150 186]
[152 185]
[153 184]
[155 182]
[156 181]
[157 180]
[161 174]
[162 173]
[163 172]
[164 171]
[165 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
