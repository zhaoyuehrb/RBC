%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:40:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCGGGCCGUCCCCUUUCCGGGCGCCGCCAUAAAGGGGCCUUGCGGGGGCCCGGGGCCGUGGCCGCAGCGCUCAGCUCCUGCGCCCCGACCCCGCCAUGGCCCCCCGGCCCCUCCUGCUGCUGCUGCUGCUCCUCGGGGGCUCCGCCGCGCGCCCCGCGCCCCCCAGGGCCCGGCGACACUCAGACGGGACGUUCA\
) } def
/len { sequence length } bind def

/coor [
[-3.99789572 856.54931641]
[-19.78428459 855.79730225]
[-30.35323334 844.04687500]
[-29.43437386 828.26928711]
[-17.57284737 817.82519531]
[-16.85911942 802.84216309]
[-16.14539146 787.85913086]
[-15.43166161 772.87615967]
[-18.25662994 766.03796387]
[-14.58588219 757.66162109]
[-13.63452339 742.69183350]
[-12.68316460 727.72204590]
[-11.73180580 712.75225830]
[-10.78044701 697.78240967]
[-18.20371437 690.74151611]
[-20.57013512 680.56195068]
[-16.86137390 670.55645752]
[-8.07748604 664.11871338]
[-6.65164518 649.18664551]
[-13.14410591 635.78149414]
[-4.13005114 622.77929688]
[-2.70421052 607.84722900]
[-1.27836990 592.91516113]
[-12.54524422 583.20971680]
[-15.97732162 568.55755615]
[-10.05434895 554.53002930]
[3.14532804 546.58807373]
[4.57116890 531.65600586]
[5.99700928 516.72393799]
[7.42285013 501.79183960]
[-4.84433556 510.42413330]
[-19.64695358 507.99871826]
[-28.51788139 495.90301514]
[-26.38293839 481.05572510]
[-14.46331120 471.94952393]
[0.42295259 473.79321289]
[9.76072121 485.53158569]
[12.59948921 470.80267334]
[15.43825817 456.07373047]
[18.27702713 441.34481812]
[21.11579514 426.61587524]
[23.95456505 411.88693237]
[26.79333305 397.15802002]
[29.63210106 382.42907715]
[27.80905724 375.25848389]
[32.63452148 367.48980713]
[35.70662308 352.80776978]
[38.77872467 338.12573242]
[41.85082245 323.44369507]
[44.92292404 308.76165771]
[47.99502182 294.07962036]
[43.02836609 280.03747559]
[53.42802048 268.11450195]
[56.50012207 253.43244934]
[59.57221985 238.75041199]
[62.64432144 224.06838989]
[65.71642303 209.38635254]
[68.78852081 194.70431519]
[71.74404907 179.99836731]
[74.58281708 165.26943970]
[77.42158508 150.54049683]
[80.26035309 135.81156921]
[83.09912109 121.08264160]
[85.93788910 106.35371399]
[81.59785461 91.99529266]
[71.07573700 81.30488586]
[60.55361176 70.61447144]
[50.03148651 59.92405701]
[39.50936508 49.23364639]
[21.65558624 44.74559784]
[17.90337372 27.60709000]
[7.21296024 17.08496666]
[-8.31685257 10.28340435]
[-6.08017731 -6.52235746]
[10.68798161 -9.02539062]
[17.73508453 6.39455414]
[28.42549706 16.91667747]
[40.52674866 17.13629532]
[49.51970673 25.82429886]
[50.19977570 38.71152115]
[60.72190094 49.40193558]
[71.24402618 60.09234619]
[81.76614380 70.78276062]
[92.28826904 81.47317505]
[107.06038666 78.86844635]
[113.29161072 65.22396851]
[119.52283478 51.57949066]
[125.75405884 37.93500900]
[131.98529053 24.29052925]
[138.21650696 10.64604950]
[130.62379456 4.95350170]
[124.46533966 -2.54844046]
[120.17309570 -11.49428368]
[118.08496857 -21.41553688]
[118.42033386 -31.76510620]
[121.26197815 -41.94744492]
[126.54566193 -51.35280991]
[134.05836487 -59.39365387]
[143.44549561 -65.54096222]
[154.22705078 -69.35836792]
[157.29914856 -84.04040527]
[160.37124634 -98.72244263]
[163.44334412 -113.40447235]
[157.81498718 -128.80751038]
[168.54627991 -141.20796204]
[184.59780884 -137.84930420]
[189.45712280 -122.18664551]
[178.12538147 -110.33237457]
[175.05328369 -95.65033722]
[171.98118591 -80.96829987]
[168.90908813 -66.28626251]
[175.46295166 -62.63978958]
[182.75590515 -75.74752808]
[190.04905701 -88.85515594]
[203.15657043 -81.56180573]
[195.86364746 -68.45458221]
[188.57069397 -55.34683990]
[195.12457275 -51.70036316]
[205.98057556 -62.05154800]
[210.62887573 -77.17450714]
[225.17939758 -80.35758209]
[236.03540039 -90.70876312]
[240.13389587 -106.58750916]
[256.00482178 -110.71617889]
[267.32153320 -98.84755707]
[262.44235229 -83.19106293]
[246.38658142 -79.85275269]
[235.53057861 -69.50157166]
[231.65876770 -55.11899948]
[216.33175659 -51.19553757]
[205.47575378 -40.84435272]
[206.81221008 -14.83748913]
[194.74937439 6.82187462]
[174.11880493 18.16476631]
[151.86099243 16.87727356]
[145.62976074 30.52175522]
[139.39854431 44.16623306]
[133.16731262 57.81071472]
[126.93608856 71.45519257]
[120.70486450 85.09967041]
[121.96724701 93.91806030]
[120.00811768 101.67654419]
[115.72901154 107.35298920]
[110.29921722 110.41506195]
[104.93188477 110.86508179]
[100.66682434 109.19248199]
[97.82805634 123.92140961]
[94.98928070 138.65034485]
[92.15051270 153.37927246]
[89.31174469 168.10820007]
[86.47297668 182.83712769]
[87.92237091 191.86691284]
[83.47055817 197.77641296]
[80.39846039 212.45845032]
[77.32635498 227.14048767]
[74.25425720 241.82252502]
[71.18215942 256.50454712]
[68.11005402 271.18658447]
[72.85697937 286.27890015]
[62.67705917 297.15173340]
[59.60496140 311.83377075]
[56.53285980 326.51580811]
[53.46075821 341.19784546]
[50.38866043 355.87985229]
[47.31655884 370.56188965]
[44.36103058 385.26785278]
[41.52226257 399.99679565]
[38.68349457 414.72570801]
[35.84472656 429.45465088]
[33.00595856 444.18356323]
[30.16718864 458.91250610]
[27.32842064 473.64141846]
[24.48965073 488.37036133]
[22.35492897 503.21768188]
[20.92908859 518.14978027]
[19.50324821 533.08184814]
[18.07740784 548.01391602]
[29.53552437 558.31042480]
[32.69673157 573.20538330]
[26.55374336 586.94317627]
[13.65370941 594.34100342]
[12.22786808 609.27307129]
[10.80202770 624.20513916]
[17.19250298 638.67828369]
[8.28043365 650.61248779]
[6.85459328 665.54455566]
[16.05415916 683.47357178]
[4.18935347 698.73382568]
[3.23799443 713.70361328]
[2.28663564 728.67340088]
[1.33527696 743.64318848]
[0.38391814 758.61297607]
[-0.44865182 773.58990479]
[-1.16238058 788.57287598]
[-1.87610936 803.55590820]
[-2.58983803 818.53887939]
[8.22519970 830.06323242]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 196]
[6 195]
[7 194]
[8 193]
[10 192]
[11 191]
[12 190]
[13 189]
[14 188]
[18 186]
[19 185]
[21 183]
[22 182]
[23 181]
[27 177]
[28 176]
[29 175]
[30 174]
[37 173]
[38 172]
[39 171]
[40 170]
[41 169]
[42 168]
[43 167]
[44 166]
[46 165]
[47 164]
[48 163]
[49 162]
[50 161]
[51 160]
[53 158]
[54 157]
[55 156]
[56 155]
[57 154]
[58 153]
[59 151]
[60 150]
[61 149]
[62 148]
[63 147]
[64 146]
[65 84]
[66 83]
[67 82]
[68 81]
[69 80]
[71 77]
[72 76]
[85 140]
[86 139]
[87 138]
[88 137]
[89 136]
[90 135]
[100 111]
[101 110]
[102 109]
[103 108]
[118 131]
[119 130]
[121 128]
[122 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
