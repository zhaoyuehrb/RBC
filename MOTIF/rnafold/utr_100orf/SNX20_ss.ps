%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:16:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCGAUCAGAAGCAGGUCACACAGCCUGUUUCCUGUUUUCAAACGGGGAACUUAGAAAGUGGCAGCCCCUCGGCUUGUCGCCGGAGCUGAGAACCAAGAGCUCGAAGGGGCCAUAUGACACUCCUCCCGGACCCCUGGACACACACAGCCCUGGAGACUGGAGCCUUGGAGCAUGGCAAGUCCAGAGCACCCUGGGAGCCCUGGCUGCAUGGGACCCAUAACCCAGUGCACGGCAAGGACCCAGCAGGAAGCAC\
CAGCCACUGGCCCCGACC\
) } def
/len { sequence length } bind def

/coor [
[43.70382309 315.08337402]
[42.84436798 300.10803223]
[41.98491669 285.13265991]
[41.12546158 270.15731812]
[33.80272675 268.53634644]
[30.56079483 283.18182373]
[20.43069458 294.24441528]
[15.91532135 279.93988037]
[19.15725136 265.29440308]
[11.83451462 263.67346191]
[4.73514080 276.88705444]
[-2.36423349 290.10061646]
[-9.46360779 303.31420898]
[-16.56298256 316.52780151]
[-23.66235542 329.74139404]
[-30.76173019 342.95498657]
[-37.86110306 356.16854858]
[-44.96047974 369.38214111]
[-40.16583633 384.44158936]
[-47.49826050 398.44198608]
[-62.60755920 403.07714844]
[-76.52964783 395.59710693]
[-81.00480652 380.43966675]
[-73.37799072 366.59741211]
[-58.17406464 362.28277588]
[-51.07469177 349.06918335]
[-43.97531891 335.85559082]
[-36.87594223 322.64202881]
[-29.77656937 309.42843628]
[-22.67719460 296.21484375]
[-15.57782078 283.00125122]
[-8.47844696 269.78765869]
[-1.37907231 256.57406616]
[-6.86161804 251.45629883]
[-17.82670975 241.22073364]
[-23.30925369 236.10295105]
[-36.00357819 244.09382629]
[-48.69789886 252.08471680]
[-61.39222336 260.07559204]
[-74.08654785 268.06646729]
[-86.78086853 276.05734253]
[-91.72573853 291.31933594]
[-106.79124451 296.83386230]
[-120.42041016 288.37069702]
[-122.15811920 272.42202759]
[-110.67134094 261.22232056]
[-94.77175140 263.36303711]
[-82.07742310 255.37214661]
[-69.38310242 247.38127136]
[-56.68878174 239.39038086]
[-43.99445724 231.39950562]
[-31.30013466 223.40863037]
[-25.89741516 209.10058594]
[-17.25564766 197.75205994]
[-6.53543854 189.98106384]
[5.02622223 186.01074219]
[16.23921585 185.67802429]
[26.07226372 188.47834778]
[33.74363327 193.64086914]
[41.58844376 180.85575867]
[49.43325043 168.07064819]
[57.27806091 155.28555298]
[65.12287140 142.50044250]
[72.96768188 129.71533203]
[56.33570480 108.06143188]
[56.58563995 78.08290863]
[43.21274185 71.28838348]
[29.83984566 64.49385071]
[16.46694946 57.69932175]
[3.09405208 50.90479279]
[-10.27884483 44.11026382]
[-24.40019417 39.05185699]
[-39.04566956 35.80992508]
[-53.69113922 32.56799698]
[-68.33661652 29.32606697]
[-82.58295441 36.70315170]
[-97.17372131 30.03314018]
[-100.91613007 14.43269348]
[-90.93932343 1.86913943]
[-74.89665222 1.98016167]
[-65.09468079 14.68059349]
[-50.44921112 17.92252350]
[-35.80373764 21.16445351]
[-21.15826416 24.40638351]
[-15.21999264 10.63187981]
[-27.63199806 2.20916629]
[-40.04400253 -6.21354771]
[-52.45600891 -14.63626194]
[-64.86801910 -23.05897522]
[-78.65615082 -16.29267311]
[-93.97909546 -17.34296227]
[-106.71504211 -25.92732048]
[-113.43808746 -39.73659897]
[-112.33977509 -55.05617142]
[-103.71553802 -67.76514435]
[-89.88525391 -74.44487762]
[-74.56919861 -73.29855347]
[-61.88731766 -64.63452148]
[-55.25097275 -50.78336716]
[-56.44530106 -35.47098160]
[-44.03329468 -27.04826736]
[-31.62129021 -18.62555313]
[-19.20928383 -10.20283985]
[-6.79727840 -1.78012562]
[0.47493723 10.25200558]
[1.07789361 22.07750702]
[-3.48431587 30.73736763]
[9.88858128 37.53189468]
[23.26147842 44.32642365]
[36.63437653 51.12095261]
[50.00727081 57.91548157]
[63.38016891 64.71001434]
[69.94583130 61.08480835]
[61.46747971 48.71073914]
[52.98912811 36.33667374]
[44.51078033 23.96260262]
[33.62889862 13.63861561]
[35.53319168 -1.24001539]
[48.66441345 -8.49060440]
[62.27066422 -2.17633843]
[65.21096039 12.53307819]
[71.16635895 26.30018616]
[77.12175751 40.06729507]
[83.07714844 53.83440399]
[89.64281464 50.20919800]
[91.01676178 35.27225494]
[92.39071655 20.33531380]
[93.76466370 5.39837074]
[87.32394409 -9.05249977]
[96.19449615 -21.01755714]
[97.56844330 -35.95449829]
[90.67683411 -42.29194641]
[87.49988556 -50.95304871]
[88.62521362 -59.97130585]
[93.67835236 -67.35958099]
[101.43344879 -71.54792023]
[103.32027435 -86.42877960]
[105.20709991 -101.30963898]
[93.80870819 -111.83847046]
[90.80892944 -127.06282043]
[97.36124420 -141.12863159]
[110.94614410 -148.62728882]
[126.33997345 -146.67541504]
[137.62347412 -136.02355957]
[140.45791626 -120.76756287]
[133.75340271 -106.77366638]
[120.08795166 -99.42281342]
[118.20113373 -84.54195404]
[116.31430817 -69.66110229]
[125.88216400 -51.35215378]
[112.50538635 -34.58054733]
[111.13143921 -19.64360619]
[117.67043304 -6.26112509]
[108.70160675 6.77232218]
[107.32765961 21.70926476]
[105.95370483 36.64620590]
[104.57975769 51.58314896]
[115.65360260 58.44856262]
[123.54527283 67.45207214]
[134.45150757 57.15381622]
[145.35774231 46.85556030]
[156.26396179 36.55730057]
[167.17019653 26.25904465]
[177.89772034 15.77474976]
[188.44334412 5.10751677]
[198.98895264 -5.55971622]
[203.18867493 -20.81333542]
[217.63885498 -24.42467880]
[228.18447876 -35.09191132]
[235.02018738 -50.60671997]
[251.82099915 -48.33306885]
[254.28712463 -31.55944252]
[238.85169983 -24.54628944]
[228.30609131 -13.87905598]
[224.86065674 0.61157161]
[209.65618896 4.98590565]
[199.11056519 15.65313816]
[188.56494141 26.32037163]
[188.20733643 29.79284096]
[186.17262268 33.26964569]
[182.47450256 35.97451019]
[177.46846008 37.16527939]
[166.56222534 47.46353531]
[155.65599060 57.76179123]
[144.74975586 68.06005096]
[133.84353638 78.35830688]
[139.31898499 91.76805878]
[139.68260193 106.24804688]
[153.80395508 111.30644989]
[171.86070251 107.60918427]
[182.65478516 121.46601105]
[196.83319092 126.36217499]
[211.06681824 131.09545898]
[225.35377502 135.66523743]
[239.64073181 140.23501587]
[253.92768860 144.80479431]
[268.21463013 149.37457275]
[277.53674316 143.86239624]
[288.13589478 144.35916138]
[296.54672241 150.46200562]
[300.15124512 159.97454834]
[314.32965088 164.87072754]
[328.50808716 169.76689148]
[344.07794189 166.95791626]
[353.58255005 178.42575073]
[367.76098633 183.32191467]
[381.93939209 188.21807861]
[396.17300415 192.95137024]
[410.45996094 197.52114868]
[424.74691772 202.09092712]
[439.05984497 206.57872009]
[453.39825439 210.98440552]
[467.73666382 215.39007568]
[482.07507324 219.79574585]
[494.39929199 210.36740112]
[509.91241455 210.01734924]
[522.64935303 218.88020325]
[527.71246338 233.54798889]
[523.15496826 248.38067627]
[510.72918701 257.67477417]
[495.21316528 257.85650635]
[482.57312012 248.85601807]
[477.66940308 234.13415527]
[463.33099365 229.72848511]
[448.99258423 225.32281494]
[434.65417480 220.91714478]
[427.36483765 221.95262146]
[420.17715454 216.37788391]
[405.89019775 211.80810547]
[391.60324097 207.23832703]
[387.05276489 208.57241821]
[381.61553955 207.08831787]
[377.04321289 202.39649963]
[362.86480713 197.50033569]
[348.68640137 192.60417175]
[334.13067627 195.76335144]
[323.61190796 183.94531250]
[309.43350220 179.04914856]
[295.25506592 174.15296936]
[276.55932617 179.17138672]
[263.64486694 163.66152954]
[249.35791016 159.09175110]
[235.07095337 154.52197266]
[220.78399658 149.95219421]
[206.49703979 145.38241577]
[201.94656372 146.71652222]
[196.50933838 145.23240662]
[191.93702698 140.54058838]
[177.75860596 135.64442444]
[166.77209473 140.65002441]
[154.93540955 136.71574402]
[148.74554443 125.42780304]
[134.62420654 120.36939240]
[127.63739777 129.15341187]
[118.49312592 135.66162109]
[107.90522003 139.38597107]
[96.70021057 140.03572083]
[85.75278473 137.56015015]
[77.90797424 150.34524536]
[70.06317139 163.13035583]
[62.21835709 175.91546631]
[54.37355042 188.70057678]
[46.52873993 201.48567200]
[68.06342316 226.65969849]
[56.10081863 269.29785156]
[56.96027374 284.27322388]
[57.81972885 299.24856567]
[58.67918015 314.22393799]
[70.64174652 324.55218506]
[71.71405029 340.32003784]
[61.25991440 352.17272949]
[45.48159027 353.07827759]
[33.74007797 342.49942017]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 268]
[2 267]
[3 266]
[4 265]
[10 33]
[11 32]
[12 31]
[13 30]
[14 29]
[15 28]
[16 27]
[17 26]
[18 25]
[36 52]
[37 51]
[38 50]
[39 49]
[40 48]
[41 47]
[59 263]
[60 262]
[61 261]
[62 260]
[63 259]
[64 258]
[66 112]
[67 111]
[68 110]
[69 109]
[70 108]
[71 107]
[72 84]
[73 83]
[74 82]
[75 81]
[85 104]
[86 103]
[87 102]
[88 101]
[89 100]
[125 157]
[126 156]
[127 155]
[128 154]
[130 152]
[131 151]
[136 149]
[137 148]
[138 147]
[159 186]
[160 185]
[161 184]
[162 183]
[163 182]
[164 178]
[165 177]
[166 176]
[168 174]
[169 173]
[188 253]
[189 252]
[191 249]
[192 248]
[193 245]
[194 244]
[195 243]
[196 242]
[197 241]
[201 239]
[202 238]
[203 237]
[205 235]
[206 234]
[207 233]
[208 230]
[209 229]
[210 228]
[211 226]
[212 225]
[213 224]
[214 223]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
