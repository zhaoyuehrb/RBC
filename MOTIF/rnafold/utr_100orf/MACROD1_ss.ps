%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:27:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGCAGGUCGCCGCUGGCUGGCAGUCGCCACCCGGUCCCAGAGUAAAUAAGGGAGAGACACUCCCGAGCGCCGUAAAUAGAGUCCAAGUGGGCGGAGAGCCGUCCCGCGCCGCCCGCUCAUGUCUCUACAGAGCCGACUGUCCGGCCGCCUGGCACAGCUGCGCGCGGCGGGGCAGCUGCUCGUCCCCCCGCGCCCCCGGCCCGGACACUUGGCGGGUG\
) } def
/len { sequence length } bind def

/coor [
[78.09657288 142.79452515]
[68.73704529 136.52067566]
[61.09495163 128.24055481]
[47.72985458 135.05041504]
[41.50942612 141.73022461]
[34.12493134 141.86054993]
[20.66395569 148.47886658]
[14.34877968 155.06916809]
[6.96317816 155.09403992]
[-6.59093189 161.51947021]
[-20.14504242 167.94490051]
[-23.53111458 191.96081543]
[-50.93566895 204.37681580]
[-60.59570312 215.85217285]
[-70.25573730 227.32752991]
[-79.91577148 238.80288696]
[-89.57580566 250.27822876]
[-92.54393005 265.81854248]
[-106.65953827 270.57235718]
[-116.31957245 282.04769897]
[-125.97960663 293.52307129]
[-135.63963318 304.99841309]
[-137.97866821 321.22988892]
[-153.30346680 327.06793213]
[-165.84919739 316.50683594]
[-162.70988464 300.41098022]
[-147.11499023 295.33837891]
[-137.45495605 283.86303711]
[-127.79492188 272.38766479]
[-118.13488770 260.91232300]
[-115.85771942 246.19282532]
[-101.05115509 240.61819458]
[-91.39112091 229.14285278]
[-81.73108673 217.66749573]
[-72.07105255 206.19213867]
[-62.41102219 194.71678162]
[-65.28115082 187.78768921]
[-79.13934326 193.52793884]
[-92.99753571 199.26818848]
[-106.85572815 205.00843811]
[-120.71392059 210.74868774]
[-134.57211304 216.48895264]
[-148.43038940 222.22898865]
[-154.17021179 208.37060547]
[-140.31236267 202.63075256]
[-126.45417023 196.89050293]
[-112.59597778 191.15025330]
[-98.73778534 185.41000366]
[-84.87959290 179.66975403]
[-71.02140045 173.92948914]
[-73.89152527 167.00039673]
[-88.83650208 165.71676636]
[-103.78147888 164.43315125]
[-118.72645569 163.14952087]
[-133.67143250 161.86590576]
[-146.82133484 171.05607605]
[-162.16384888 166.36705017]
[-167.92950439 151.39585876]
[-159.69537354 137.62709045]
[-143.77798462 135.62300110]
[-132.38780212 146.92092896]
[-117.44282532 148.20454407]
[-102.49784851 149.48817444]
[-87.55287933 150.77180481]
[-72.60790253 152.05541992]
[-55.13318253 141.98493958]
[-37.58769226 143.96774292]
[-26.57046890 154.39077759]
[-13.01635742 147.96536255]
[0.53775227 141.53993225]
[14.04563999 135.01789856]
[27.50661659 128.39958191]
[40.91999435 121.68531799]
[54.28509140 114.87546539]
[52.03561401 96.75196838]
[56.70790863 79.09720612]
[67.62771606 64.45893097]
[83.21919250 54.94962311]
[80.24033356 40.24838257]
[77.26148224 25.54714394]
[74.28262329 10.84590626]
[71.30376434 -3.85533214]
[55.57177734 -8.95440006]
[44.62213516 -21.22239494]
[41.37403107 -37.24637985]
[46.62153244 -52.63207626]
[58.84210205 -63.20888519]
[55.65362167 -77.86608887]
[52.46514511 -92.52329254]
[49.27666473 -107.18049622]
[46.08818436 -121.83769989]
[42.89970398 -136.49490356]
[39.71122742 -151.15209961]
[36.52274704 -165.80931091]
[33.33426666 -180.46650696]
[23.86636925 -185.80366516]
[18.99572754 -195.27363586]
[20.11405563 -205.64312744]
[26.61270332 -213.51805115]
[23.84407616 -228.26033020]
[10.65825272 -236.97294617]
[7.57711554 -252.47398376]
[16.42864799 -265.56695557]
[31.96139526 -268.48403931]
[44.96005249 -259.49456787]
[47.71274567 -243.93185425]
[38.58635330 -231.02896118]
[41.35498047 -216.28668213]
[54.98503876 -202.56602478]
[47.99147034 -183.65498352]
[51.17995071 -168.99778748]
[54.36842728 -154.34057617]
[57.55690765 -139.68338013]
[60.74538803 -125.02617645]
[63.93386841 -110.36897278]
[67.12234497 -95.71176910]
[70.31082916 -81.05456543]
[73.49930573 -66.39736176]
[86.75048065 -63.10700989]
[97.34297943 -54.38750076]
[103.17436981 -41.89569473]
[103.05554199 -28.04417419]
[96.95267487 -15.53534412]
[86.00500488 -6.83418894]
[88.98386383 7.86704922]
[91.96271515 22.56828690]
[94.94157410 37.26952744]
[97.92043304 51.97076416]
[114.05824280 54.02720642]
[128.58618164 61.34819412]
[139.84059143 73.09537506]
[146.53268433 87.92352295]
[147.89610291 104.13459778]
[162.45628357 107.74032593]
[177.01646423 111.34606171]
[191.57662964 114.95178986]
[206.13681030 118.55752563]
[221.39224243 114.36440277]
[231.88642883 124.93424225]
[246.44659424 128.53997803]
[261.00677490 132.14570618]
[275.56695557 135.75143433]
[290.12713623 139.35716248]
[304.68728638 142.96289062]
[319.24746704 146.56863403]
[333.83303833 150.07031250]
[348.44320679 153.46775818]
[363.05337524 156.86521912]
[370.63952637 145.67022705]
[382.64129639 138.38465881]
[397.10021973 136.69758606]
[411.44165039 141.33996582]
[422.93338013 151.87702942]
[437.59057617 148.68855286]
[452.24780273 145.50006104]
[464.01177979 134.07464600]
[479.71252441 138.80955505]
[483.19839478 154.83392334]
[470.88348389 165.66326904]
[455.43627930 160.15727234]
[440.77908325 163.34574890]
[426.12185669 166.53422546]
[424.83822632 181.47920227]
[438.73706055 187.12036133]
[452.63589478 192.76152039]
[466.53472900 198.40267944]
[480.43353271 204.04383850]
[494.33236694 209.68499756]
[510.02926636 207.70564270]
[518.91241455 219.66136169]
[532.81121826 225.30252075]
[546.71002197 230.94367981]
[560.60888672 236.58483887]
[574.50769043 242.22599792]
[587.60827637 233.91009521]
[603.09265137 234.91629028]
[615.00683594 244.85772705]
[618.76953125 259.91168213]
[612.93395996 274.28961182]
[599.74389648 282.46292114]
[584.27130127 281.28881836]
[572.46569824 271.21871948]
[568.86651611 256.12481689]
[554.96771240 250.48367310]
[541.06884766 244.84251404]
[527.17004395 239.20135498]
[513.27124023 233.56019592]
[498.56845093 235.94303894]
[488.69119263 223.58381653]
[474.79238892 217.94265747]
[460.89355469 212.30151367]
[446.99472046 206.66035461]
[433.09591675 201.01919556]
[419.19708252 195.37803650]
[399.95727539 205.67915344]
[379.18328857 203.26414490]
[364.18774414 190.02423096]
[359.65594482 171.47538757]
[345.04574585 168.07794189]
[330.43557739 164.68048096]
[323.21347046 166.22610474]
[315.64175415 161.12879944]
[301.08157349 157.52307129]
[286.52139282 153.91734314]
[271.96121216 150.31161499]
[257.40103149 146.70588684]
[242.84086609 143.10014343]
[228.28070068 139.49441528]
[214.06669617 143.94543457]
[202.53108215 133.11769104]
[187.97090149 129.51196289]
[173.41072083 125.90623474]
[158.85055542 122.30050659]
[144.29037476 118.69477081]
[138.72230530 128.49061584]
[131.02702332 136.72132874]
[121.62727356 142.93475342]
[111.03943634 146.78956604]
[99.84514618 148.07398987]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 74]
[4 73]
[6 72]
[7 71]
[9 70]
[10 69]
[11 68]
[13 36]
[14 35]
[15 34]
[16 33]
[17 32]
[19 30]
[20 29]
[21 28]
[22 27]
[51 65]
[52 64]
[53 63]
[54 62]
[55 61]
[78 128]
[79 127]
[80 126]
[81 125]
[82 124]
[87 118]
[88 117]
[89 116]
[90 115]
[91 114]
[92 113]
[93 112]
[94 111]
[95 110]
[99 108]
[100 107]
[133 214]
[134 213]
[135 212]
[136 211]
[137 210]
[139 208]
[140 207]
[141 206]
[142 205]
[143 204]
[144 203]
[145 202]
[146 200]
[147 199]
[148 198]
[153 162]
[154 161]
[155 160]
[163 194]
[164 193]
[165 192]
[166 191]
[167 190]
[168 189]
[170 187]
[171 186]
[172 185]
[173 184]
[174 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
