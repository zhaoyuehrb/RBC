%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:33:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGGGCCCGCUCACCACCCCGUAGGCCCCGCCCCUGCGUCUCUGCCCGCCCCGUGGCGCCCGAGUGCACUGAAGAUGGCGGCUGCUGUAGGACGGUUGCUCCGAGCGUCGGUUGCCCGACAUGUGAGUGCCAUUCCUUGGGGCAUUUCUGCCACUGCAGCCCUCAGGCCUGCUG\
) } def
/len { sequence length } bind def

/coor [
[68.63854218 267.56085205]
[50.15177536 271.31274414]
[46.18334961 285.77825928]
[42.21492386 300.24380493]
[50.25230408 313.85174561]
[46.23246765 329.13626099]
[32.54030991 337.02932739]
[17.29914856 332.84811401]
[9.55129147 319.07327271]
[13.89340591 303.87716675]
[27.74939156 296.27539062]
[31.71781731 281.80984497]
[35.68624115 267.34429932]
[26.67578125 260.82968140]
[20.07290840 251.85055542]
[16.52317619 241.25729370]
[16.38202858 230.05935669]
[19.67928696 219.32902527]
[26.11472511 210.09884644]
[35.08533859 203.26219177]
[45.74181747 199.48684692]
[57.06894302 199.14974976]
[62.05921555 185.00418091]
[67.04948425 170.85861206]
[72.03976440 156.71302795]
[77.03003693 142.56745911]
[82.02030945 128.42189026]
[87.01058197 114.27632141]
[79.85568237 104.62983704]
[79.54035950 91.81056976]
[87.10636902 80.46549225]
[73.35283661 74.47880554]
[59.59931183 68.49211121]
[39.49495316 78.50798035]
[18.77520180 70.57150269]
[10.70800304 50.19606018]
[-3.60666919 45.71385574]
[-17.92134094 41.23165131]
[-32.23601151 36.74944687]
[-41.39392853 37.16968536]
[-46.76490021 32.05737686]
[-60.99728775 27.32038498]
[-75.22967529 22.58339119]
[-93.15992737 26.71099091]
[-104.30777740 13.17550945]
[-118.62245178 8.69330406]
[-132.97654724 4.33903408]
[-147.36894226 0.11304574]
[-161.76133728 -4.11294270]
[-176.15373230 -8.33893108]
[-193.05471802 -6.99990988]
[-199.02008057 -22.86972237]
[-185.42182922 -32.99514389]
[-171.92774963 -22.73132515]
[-157.53535461 -18.50533676]
[-143.14295959 -14.27934933]
[-128.75056458 -10.05336094]
[-121.42307281 -11.18952751]
[-114.14024353 -5.62136793]
[-99.82556915 -1.13916278]
[-88.94446564 -6.47008324]
[-76.96778870 -2.82851744]
[-70.49268341 8.35100269]
[-56.26029587 13.08799648]
[-42.02790833 17.82498932]
[-27.75380898 22.43477249]
[-13.43913651 26.91697884]
[0.87553602 31.39918327]
[15.19020844 35.88138962]
[20.53359413 29.79173851]
[27.46592712 25.53407288]
[35.37923431 23.50523949]
[43.57253647 23.90558434]
[51.31394577 26.71934700]
[57.90604019 31.71429253]
[62.74868011 38.46075821]
[65.39363098 46.36855698]
[65.58600616 54.73858261]
[79.33953094 60.72527695]
[93.09305573 66.71196747]
[108.09066772 66.97970581]
[122.04911041 61.48772049]
[136.00755310 55.99573898]
[149.96600342 50.50375748]
[163.92443848 45.01177597]
[177.88288879 39.51979446]
[187.89193726 27.26706314]
[202.56834412 29.80724335]
[216.52677917 24.31526184]
[223.39382935 18.24173737]
[230.78370667 18.85227203]
[244.83795166 13.61030960]
[251.81230164 7.66032410]
[259.19009399 8.40266323]
[273.33569336 3.41239023]
[287.48126221 -1.57788312]
[299.84817505 -17.47026062]
[318.68405151 -13.18399906]
[332.64248657 -18.67598152]
[346.60092163 -24.16796303]
[360.55938721 -29.65994453]
[374.51782227 -35.15192795]
[388.47625732 -40.64390945]
[402.43469238 -46.13589096]
[416.39315796 -51.62787247]
[430.35159302 -57.11985397]
[433.27951050 -78.63671875]
[457.93750000 -91.43225098]
[470.10415649 -100.20565033]
[482.27081299 -108.97904968]
[494.43743896 -117.75244904]
[506.60409546 -126.52584839]
[512.83050537 -141.69700623]
[529.11627197 -143.62191772]
[538.70806885 -130.32040405]
[531.73858643 -115.47592163]
[515.37750244 -114.35919952]
[503.21084595 -105.58579254]
[491.04418945 -96.81239319]
[478.87753296 -88.03899384]
[466.71090698 -79.26559448]
[469.39450073 -72.26214600]
[474.76165771 -58.25524139]
[477.44525146 -51.25179291]
[492.35931396 -52.85521698]
[507.27337646 -54.45864487]
[518.41894531 -65.99794006]
[534.37561035 -64.33522034]
[542.90277100 -50.74597931]
[537.45910645 -35.65472412]
[522.22052002 -30.63817024]
[508.87680054 -39.54459000]
[493.96273804 -37.94116592]
[479.04870605 -36.33773804]
[461.17227173 -28.75024414]
[444.90032959 -32.47816467]
[435.84356689 -43.16141129]
[421.88513184 -37.66942978]
[407.92669678 -32.17744827]
[393.96823120 -26.68546677]
[380.00979614 -21.19348526]
[366.05136108 -15.70150280]
[352.09292603 -10.20952034]
[338.13446045 -4.71753836]
[324.17602539 0.77444363]
[320.93939209 10.50820065]
[312.69580078 16.97550774]
[302.03289795 17.83803749]
[292.47152710 12.56768799]
[278.32595825 17.55796051]
[264.18038940 22.54823494]
[250.07991028 27.66455650]
[236.02566528 32.90651703]
[222.01876831 38.27370453]
[208.06031799 43.76568604]
[199.04966736 55.62559509]
[183.37486267 53.47823715]
[169.41642761 58.97021866]
[155.45797729 64.46220398]
[141.49954224 69.95418549]
[127.54109192 75.44616699]
[113.58264923 80.93814850]
[120.24561310 89.98995209]
[121.75203705 100.72522736]
[118.11380768 110.51219177]
[110.55956268 117.12889099]
[101.15615082 119.26659393]
[96.16587830 133.41217041]
[91.17560577 147.55773926]
[86.18533325 161.70330811]
[81.19506073 175.84887695]
[76.20478821 189.99444580]
[71.21451569 204.14001465]
[84.32889557 218.14825439]
[88.53043365 236.78825378]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 13]
[3 12]
[4 11]
[22 173]
[23 172]
[24 171]
[25 170]
[26 169]
[27 168]
[28 167]
[31 80]
[32 79]
[33 78]
[36 69]
[37 68]
[38 67]
[39 66]
[41 65]
[42 64]
[43 63]
[45 60]
[46 59]
[47 57]
[48 56]
[49 55]
[50 54]
[81 162]
[82 161]
[83 160]
[84 159]
[85 158]
[86 157]
[88 155]
[89 154]
[91 153]
[92 152]
[94 151]
[95 150]
[96 149]
[98 145]
[99 144]
[100 143]
[101 142]
[102 141]
[103 140]
[104 139]
[105 138]
[106 137]
[108 121]
[109 120]
[110 119]
[111 118]
[112 117]
[124 134]
[125 133]
[126 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
