%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:00:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGAGCAUCCCGCGCCGACGGGGCUGUGCCGGAGCAGCUGUGCAGAGCUGCAGGCGCGCGUCAUGGCUGCUUUGAGACAGCCCCAGGUCGCGGAGCUGCUGGCCGAGGCCCGGCGAGCCUUCCGGGAGGAGUUCGGGGCCGAGCCCGAGCUGGCCGUGUCAG\
) } def
/len { sequence length } bind def

/coor [
[156.02566528 251.32444763]
[169.87911987 257.07589722]
[162.96705627 243.76338196]
[156.05499268 230.45085144]
[149.14292908 217.13833618]
[142.23086548 203.82580566]
[135.31878662 190.51327515]
[118.30465698 181.38319397]
[119.38819122 161.28454590]
[111.97129822 148.24653625]
[104.55439758 135.20854187]
[97.13749695 122.17053223]
[84.58927155 101.90105438]
[71.02175903 95.50396729]
[57.45425415 89.10688019]
[43.82609558 82.84003448]
[30.13854218 76.70400238]
[20.15935326 81.17666626]
[9.58741760 79.42845154]
[1.90198064 72.28098297]
[-0.50406569 62.29146957]
[-13.94654942 55.63567352]
[-27.38903236 48.97987366]
[-40.83151627 42.32407761]
[-54.27399826 35.66827774]
[-67.71648407 29.01248169]
[-81.15896606 22.35668373]
[-94.60144806 15.70088673]
[-109.41270447 20.52422142]
[-122.95047760 13.58280277]
[-127.45751190 -0.56718713]
[-140.89999390 -7.22298479]
[-154.34248352 -13.87878227]
[-167.78495789 -20.53458023]
[-181.22744751 -27.19037819]
[-194.66993713 -33.84617615]
[-208.11241150 -40.50197220]
[-221.55490112 -47.15776825]
[-234.99737549 -53.81356812]
[-248.43986511 -60.46936417]
[-261.88235474 -67.12516022]
[-275.32482910 -73.78096008]
[-288.76730347 -80.43675995]
[-299.12615967 -74.49079132]
[-310.94860840 -74.30757904]
[-321.27468872 -79.81661224]
[-327.57528687 -89.53675079]
[-328.37145996 -100.97245026]
[-341.54913330 -108.13824463]
[-350.62969971 -109.50057220]
[-354.90869141 -115.56961060]
[-367.94671631 -122.98650360]
[-384.33312988 -122.34077454]
[-392.85556030 -136.35150146]
[-384.74682617 -150.60563660]
[-368.34851074 -150.43977356]
[-360.52981567 -136.02450562]
[-347.49179077 -128.60762024]
[-334.38336182 -121.31593323]
[-321.20565796 -114.15013123]
[-304.03671265 -120.40363312]
[-287.44369507 -112.02045441]
[-282.11151123 -93.87924194]
[-268.66903687 -87.22344208]
[-255.22654724 -80.56764984]
[-241.78407288 -73.91184998]
[-228.34158325 -67.25605011]
[-214.89909363 -60.60025406]
[-201.45661926 -53.94445419]
[-188.01412964 -47.28865814]
[-174.57165527 -40.63286209]
[-161.12916565 -33.97706223]
[-147.68667603 -27.32126617]
[-134.24420166 -20.66546822]
[-120.80171204 -14.00967026]
[-106.81604767 -19.00333977]
[-93.08864594 -12.44490814]
[-87.94564819 2.25840306]
[-74.50316620 8.91420078]
[-61.06068420 15.56999779]
[-47.61820221 22.22579575]
[-34.17571640 28.88159370]
[-20.73323441 35.53739166]
[-7.29075146 42.19318771]
[6.15173197 48.84898758]
[25.27282906 46.16144562]
[36.27457428 63.01644897]
[49.96212769 69.15248108]
[57.38675308 69.01852417]
[63.85134125 75.53936768]
[77.41884613 81.93645477]
[90.98635864 88.33354187]
[105.96159363 87.47200012]
[118.70594788 79.56114960]
[131.45030212 71.65029907]
[144.19464111 63.73945236]
[147.90280151 51.35401154]
[158.71908569 45.03434753]
[170.54612732 47.70926285]
[183.43966675 40.04398346]
[196.33320618 32.37870026]
[204.24151611 18.67580795]
[219.13539124 18.82268143]
[232.02893066 11.15740204]
[244.92248535 3.49212193]
[257.81604004 -4.17315817]
[263.14764404 -19.30436516]
[278.34860229 -24.43377304]
[291.75799561 -15.62654209]
[293.08932495 0.36117625]
[281.32128906 11.26497173]
[265.48129272 8.72038555]
[252.58776855 16.38566589]
[239.69421387 24.05094528]
[226.80067444 31.71622658]
[219.81460571 44.87084961]
[203.99848938 45.27224731]
[191.10494995 52.93752670]
[178.21139526 60.60280609]
[170.49755859 76.34341431]
[152.10549927 76.48380280]
[139.36114502 84.39465332]
[126.61679077 92.30549622]
[113.87244415 100.21634674]
[110.17549896 114.75363159]
[117.59239960 127.79164124]
[125.00930023 140.82965088]
[132.42619324 153.86764526]
[143.11981201 156.15579224]
[150.61582947 163.81292725]
[152.59283447 174.12039185]
[148.63131714 183.60121155]
[155.54338074 196.91374207]
[162.45544434 210.22625732]
[169.36752319 223.53878784]
[176.27958679 236.85131836]
[183.19165039 250.16384888]
[191.22419739 262.83184814]
[200.31758118 274.76123047]
[209.41096497 286.69061279]
[218.50433350 298.62002563]
[226.23309326 303.57769775]
[227.65504456 310.86611938]
[236.51824951 322.96752930]
[245.38145447 335.06890869]
[260.59826660 341.18286133]
[262.64367676 357.45394897]
[249.41351318 367.14389038]
[234.51785278 360.28448486]
[233.28005981 343.93212891]
[224.41685486 331.83071899]
[215.55364990 319.72933960]
[206.57495117 307.71340942]
[197.48156738 295.78399658]
[188.38818359 283.85461426]
[179.29479980 271.92523193]
[178.58886719 286.90859985]
[170.00604248 299.21044922]
[156.18740845 305.04525757]
[141.38516235 302.61764526]
[130.15417480 292.67456055]
[125.95039368 278.27566528]
[130.06739807 263.85171509]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 137]
[3 136]
[4 135]
[5 134]
[6 133]
[7 132]
[9 128]
[10 127]
[11 126]
[12 125]
[13 92]
[14 91]
[15 90]
[16 88]
[17 87]
[21 85]
[22 84]
[23 83]
[24 82]
[25 81]
[26 80]
[27 79]
[28 78]
[31 75]
[32 74]
[33 73]
[34 72]
[35 71]
[36 70]
[37 69]
[38 68]
[39 67]
[40 66]
[41 65]
[42 64]
[43 63]
[48 60]
[49 59]
[51 58]
[52 57]
[93 124]
[94 123]
[95 122]
[96 121]
[99 119]
[100 118]
[101 117]
[103 115]
[104 114]
[105 113]
[106 112]
[138 156]
[139 155]
[140 154]
[141 153]
[143 152]
[144 151]
[145 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
