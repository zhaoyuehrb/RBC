%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:22:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGACACACUAAGGAAACUGCAUUUCCAGAGAGAGACACACCACGUAGGACUGAAAAUGGUUACUCUAAGGGGAUUCGUGACAGAUUUCAGAAACCAUGAGGAACAGAAUGGCCCCAGAGAAUCCCCAGCCAGACCCUUUCAUCAAUAGGAAUUAUUCCAACAUGAAGGUGAUACCACCACAGGAUCCAGCUAGUC\
) } def
/len { sequence length } bind def

/coor [
[99.09917450 191.88070679]
[101.59839630 172.66081238]
[101.83881378 157.66275024]
[102.07923126 142.66467285]
[94.94260406 140.35847473]
[83.81155396 150.41331482]
[80.66934204 135.74609375]
[73.53271484 133.43991089]
[64.95096588 145.74249268]
[67.51692963 161.10652161]
[58.63855743 173.46084595]
[43.97548294 175.81242371]
[35.39373398 188.11500549]
[26.81198502 200.41758728]
[18.23023415 212.72016907]
[9.64848518 225.02275085]
[11.03556156 241.00573730]
[-0.69437760 251.95050049]
[-16.54312515 249.46118164]
[-24.35288048 235.44735718]
[-18.13266563 220.65924072]
[-2.65409875 216.44100952]
[5.92765093 204.13841248]
[14.50940132 191.83583069]
[23.09115028 179.53324890]
[31.67290115 167.23066711]
[28.81566238 152.65768433]
[37.34352112 140.05886841]
[52.64838028 137.16073608]
[61.23012924 124.85815430]
[54.18569565 111.61519623]
[39.18762207 111.85561371]
[24.18955040 112.09603119]
[9.19147778 112.33644867]
[2.73201966 122.33470917]
[-7.64833879 127.91114807]
[-19.31105232 127.77983093]
[-29.35448074 122.08930206]
[-35.33580017 112.35680389]
[-50.33387375 112.11638641]
[-65.33194733 111.87596893]
[-80.33002472 111.63555145]
[-86.33938599 125.59821320]
[-97.23808289 136.19476318]
[-111.36413574 141.80931091]
[-126.56342316 141.58566284]
[-140.51817322 135.55793762]
[-151.10037231 124.64531708]
[-156.69633484 110.51188660]
[-156.45269775 95.31290436]
[-150.40661621 81.36610413]
[-139.48007202 70.79825592]
[-125.33930206 65.22090149]
[-110.14065552 65.48453522]
[-96.20181274 71.54895020]
[-85.64835358 82.48937988]
[-80.08959961 96.63748169]
[-65.09152985 96.87789917]
[-50.09345627 97.11831665]
[-35.09538269 97.35873413]
[-22.74786758 83.85593414]
[-4.13273954 83.65036774]
[8.95106030 97.33837891]
[23.94913292 97.09796143]
[38.94720459 96.85754395]
[53.94527817 96.61712646]
[69.15295410 73.75440216]
[91.91965485 66.12620544]
[111.28286743 73.12547302]
[111.04244995 58.12739944]
[110.80202484 43.12932587]
[110.56160736 28.13125420]
[110.32118988 13.13318062]
[110.08077240 -1.86489284]
[109.84035492 -16.86296654]
[109.59993744 -31.86104012]
[86.37102509 -45.41520691]
[83.71891785 -77.60536194]
[76.99489594 -91.01383972]
[70.27086639 -104.42232513]
[55.19462204 -109.16389465]
[47.96108627 -123.21564484]
[52.86178970 -138.24090576]
[66.98922729 -145.32546997]
[81.96183777 -140.26618958]
[88.89664459 -126.06464386]
[83.67934418 -111.14635468]
[90.40337372 -97.73786926]
[97.12740326 -84.32939148]
[104.53126526 -85.52639008]
[102.13751221 -100.33415222]
[116.94532013 -102.72766113]
[119.33899689 -87.92038727]
[126.74285889 -89.11738586]
[128.89921570 -103.96157837]
[131.05557251 -118.80577850]
[133.21192932 -133.64996338]
[121.10334015 -143.09866333]
[115.35622406 -157.34176636]
[117.51651764 -172.54797363]
[127.00311279 -184.62689209]
[141.26417542 -190.32933044]
[156.46353149 -188.12138367]
[168.51264954 -178.59696960]
[174.17036438 -164.31811523]
[171.91477966 -149.12574768]
[162.35264587 -137.10655212]
[148.05612183 -131.49362183]
[145.89976501 -116.64942169]
[143.74340820 -101.80522156]
[141.58705139 -86.96102905]
[147.27496338 -78.45158386]
[150.32543945 -69.10755920]
[150.71505737 -59.69187546]
[148.62870789 -50.91791534]
[144.43141174 -43.39570618]
[138.62689209 -37.58950424]
[131.80725098 -33.78982162]
[124.59801483 -32.10145569]
[124.83843231 -17.10338402]
[125.07884979 -2.10531044]
[125.31926727 12.89276218]
[125.55968475 27.89083672]
[125.80010223 42.88890839]
[126.04051971 57.88698196]
[126.28093719 72.88505554]
[134.76380920 85.25601959]
[148.66757202 90.88502502]
[162.57131958 96.51403046]
[176.97917175 90.59358215]
[190.99935913 96.50025940]
[196.55480957 110.27242279]
[210.45855713 115.90142822]
[226.15373230 113.90834045]
[235.04730225 125.85630035]
[248.95104980 131.48530579]
[262.85479736 137.11431885]
[277.30136108 141.15119934]
[292.10910034 143.54519653]
[306.91683960 145.93919373]
[321.72454834 148.33319092]
[336.53228760 150.72718811]
[344.17086792 140.81378174]
[355.23757935 135.12619019]
[367.60040283 134.69104004]
[378.90679932 139.52964783]
[387.03146362 148.66558838]
[390.47567749 160.32116699]
[405.19906616 163.18855286]
[419.92245483 166.05592346]
[434.64584351 168.92330933]
[451.34869385 166.01625061]
[458.76593018 181.26159668]
[446.16967773 192.60931396]
[431.77844238 183.64669800]
[417.05505371 180.77931213]
[402.33166504 177.91194153]
[387.60827637 175.04455566]
[375.27328491 187.66888428]
[357.67599487 190.39486694]
[341.82223511 181.94654846]
[334.13827515 165.53491211]
[319.33056641 163.14091492]
[304.52282715 160.74691772]
[289.71511841 158.35292053]
[274.90737915 155.95892334]
[267.86294556 169.20188904]
[278.12414551 180.14299011]
[288.38534546 191.08410645]
[298.64651489 202.02520752]
[314.49087524 206.25466919]
[318.48837280 222.15914917]
[306.52670288 233.37747192]
[290.91104126 228.36920166]
[287.70541382 212.28640747]
[277.44421387 201.34529114]
[267.18301392 190.40419006]
[256.92184448 179.46307373]
[252.60615540 168.58328247]
[253.06904602 158.52102661]
[257.22579956 151.01806641]
[243.32203674 145.38905334]
[229.41828918 139.76005554]
[214.71762085 142.15576172]
[204.82955933 129.80517578]
[190.92581177 124.17617035]
[177.35398865 130.20457458]
[163.17343140 124.69402313]
[156.94230652 110.41777802]
[143.03855896 104.78877258]
[129.13481140 99.15977478]
[131.47090149 120.68993378]
[117.07730103 142.90509033]
[116.83688354 157.90316772]
[116.59646606 172.90122986]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 195]
[3 194]
[4 193]
[8 30]
[9 29]
[12 26]
[13 25]
[14 24]
[15 23]
[16 22]
[31 66]
[32 65]
[33 64]
[34 63]
[39 60]
[40 59]
[41 58]
[42 57]
[69 126]
[70 125]
[71 124]
[72 123]
[73 122]
[74 121]
[75 120]
[76 119]
[78 89]
[79 88]
[80 87]
[94 111]
[95 110]
[96 109]
[97 108]
[127 191]
[128 190]
[129 189]
[132 186]
[133 185]
[135 183]
[136 182]
[137 181]
[138 166]
[139 165]
[140 164]
[141 163]
[142 162]
[148 158]
[149 157]
[150 156]
[151 155]
[167 178]
[168 177]
[169 176]
[170 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
