%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:05:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGACUGGGCGAGCACCGAGGGCGUGAACCCGGAAGGUGGCGCGGCCACCAGUAACAUGAUCUCUAGACUGGGACGGUGGGGUUCCUGCCGGCUGUAUUCGGGCCUUGGACUGGACUGAGAAGCUACGGUGGAGACCAUCCAUGGAAAAGAACCCCCCUGAUGAUACGGGCCCCGUGCACGUGCCUUUGGGGCAUAUUGUGGCCAAUGAGAAAUGGCGCGGGUCACAGCUGGCGCAGGAGA\
) } def
/len { sequence length } bind def

/coor [
[97.65119171 334.53808594]
[82.89120483 330.48822021]
[71.71186829 320.03445435]
[66.68210602 305.57901001]
[68.95772552 290.44363403]
[78.01580811 278.10629272]
[91.77486420 271.40203857]
[92.16108704 256.40701294]
[92.54730225 241.41198730]
[85.14027405 228.48971558]
[93.23033142 214.89334106]
[93.61654663 199.89831543]
[86.20951843 186.97604370]
[94.29957581 173.37966919]
[94.68579865 158.38464355]
[95.07201385 143.38961792]
[78.45907593 143.40150452]
[61.50299072 136.77261353]
[52.04318619 148.41357422]
[42.58338547 160.05453491]
[39.60949326 168.66751099]
[32.92607498 171.78346252]
[23.31717682 183.30166626]
[26.25457382 198.66088867]
[18.58693504 212.28958130]
[3.93468714 217.75270081]
[-10.78382778 212.47071838]
[-18.61897659 198.93763733]
[-15.87124157 183.54335022]
[-3.83801937 173.55657959]
[11.79897118 173.69276428]
[21.40786934 162.17456055]
[30.94241714 150.59474182]
[40.40222168 138.95376587]
[49.86202621 127.31280518]
[45.32189178 121.34311676]
[36.24163055 109.40373230]
[31.70149803 103.43404388]
[17.95674324 109.44084930]
[4.21199036 115.44766235]
[-9.53276348 121.45446777]
[-23.27751732 127.46127319]
[-37.02227020 133.46807861]
[-49.11465454 145.35128784]
[-63.88096619 137.02108765]
[-59.96402359 120.52581024]
[-43.02907944 119.72333527]
[-29.28432465 113.71652222]
[-15.53957176 107.70971680]
[-1.79481828 101.70290375]
[11.94993496 95.69609833]
[25.69468880 89.68928528]
[24.87552071 82.23416138]
[9.96523380 83.87224579]
[8.32739258 68.96192932]
[23.23718452 67.32389832]
[22.41801643 59.86877060]
[7.69689465 56.98978424]
[-1.30324662 58.41268921]
[-7.19468498 53.97780228]
[-21.87751961 50.90952301]
[-30.89523506 52.21643066]
[-36.72908783 47.70605850]
[-51.37120056 44.44898987]
[-66.01331329 41.19192123]
[-80.65542603 37.93485260]
[-93.85450745 46.62736893]
[-109.31714630 43.35895538]
[-117.86962128 30.06870842]
[-114.43791199 14.64149475]
[-101.05798340 6.23000669]
[-85.66791534 9.82463074]
[-77.39836121 23.29273987]
[-62.75624466 26.54980850]
[-48.11413193 29.80687714]
[-33.47201920 33.06394577]
[-18.80923843 36.22668457]
[-4.12640429 39.29496765]
[10.57587910 42.26866150]
[25.29700279 45.14764786]
[36.56398010 35.24536514]
[35.59899521 20.27643585]
[34.63400650 5.30750895]
[33.66902161 -9.66141891]
[32.70403290 -24.63034630]
[31.73904800 -39.59927368]
[30.77406120 -54.56820297]
[28.17990494 -69.34217834]
[23.98762131 -83.74442291]
[19.79533577 -98.14667511]
[15.60305214 -112.54891968]
[11.41076756 -126.95117188]
[7.21848297 -141.35342407]
[2.84111667 -155.70050049]
[-1.72060573 -169.99002075]
[-6.28232813 -184.27955627]
[-16.19592667 -188.68717957]
[-21.93934059 -197.63198853]
[-21.82615852 -208.04205322]
[-16.13429070 -216.49586487]
[-20.32657623 -230.89811707]
[-24.51885986 -245.30036926]
[-28.71114540 -259.70260620]
[-32.90343094 -274.10485840]
[-44.18934631 -285.19262695]
[-40.31747055 -299.57519531]
[-44.50975418 -313.97744751]
[-58.89273071 -320.11453247]
[-65.91973114 -334.08432007]
[-62.27283096 -349.29071045]
[-49.67397308 -358.55368042]
[-34.07195663 -357.49957275]
[-22.83358192 -346.62606812]
[-21.26525879 -331.06735229]
[-30.10750580 -318.16970825]
[-25.91522026 -303.76745605]
[-14.92916298 -293.70983887]
[-18.50118065 -278.29714966]
[-14.30889702 -263.89489746]
[-10.11661243 -249.49264526]
[-5.92432785 -235.09040833]
[-1.73204315 -220.68815613]
[13.16671658 -208.34301758]
[8.00720215 -188.84127808]
[12.56892490 -174.55175781]
[17.13064766 -160.26222229]
[20.86957169 -157.32293701]
[22.81448746 -152.01246643]
[21.62073135 -145.54570007]
[25.81301498 -131.14344788]
[30.00530052 -116.74120331]
[34.19758606 -102.33895874]
[38.38986969 -87.93671417]
[42.58215332 -73.53446198]
[50.02611923 -72.61937714]
[59.05480957 -84.59780884]
[64.91404724 -70.78920746]
[72.35801697 -69.87412262]
[79.91369629 -82.83219910]
[87.46938324 -95.79026794]
[86.99864197 -112.18265533]
[101.09956360 -120.55500031]
[115.26631927 -112.29455566]
[114.92536926 -95.89894867]
[100.42745209 -88.23458862]
[92.87177277 -75.27651215]
[85.31608582 -62.31843948]
[77.19842529 -56.09236526]
[68.57472992 -52.41682816]
[60.07440186 -51.24393463]
[52.28886414 -52.38697433]
[45.74298859 -55.53318787]
[46.70797729 -40.56426239]
[47.67296219 -25.59533310]
[48.63794708 -10.62640572]
[49.60293579 4.34252214]
[50.56792068 19.31145096]
[51.53290939 34.28037643]
[64.49098206 41.83605957]
[77.99352264 35.30295944]
[91.49606323 28.76985550]
[104.99859619 22.23675156]
[109.95360565 7.22930527]
[124.10656738 0.19587532]
[139.06079102 5.30927181]
[145.94419861 19.53580666]
[140.67297363 34.43513107]
[126.37446594 41.16773605]
[111.53170013 35.73929214]
[98.02915955 42.27239609]
[84.52662659 48.80549622]
[71.02408600 55.33860016]
[129.70632935 61.72159576]
[141.38711548 113.93019104]
[155.13186646 119.93700409]
[168.87661743 125.94380951]
[182.62138367 131.95062256]
[196.36613464 137.95742798]
[210.11088562 143.96423340]
[223.85563660 149.97103882]
[232.95001221 150.53636169]
[237.73789978 156.14468384]
[251.40417480 162.32795715]
[265.07046509 168.51124573]
[279.70462036 163.17465210]
[293.47607422 169.64006042]
[298.47351074 183.62437439]
[312.13980103 189.80764771]
[325.80606079 195.99092102]
[339.25756836 188.48336792]
[354.37377930 190.31462097]
[365.38293457 200.57435608]
[368.20596313 215.17465210]
[381.87222290 221.35792542]
[395.53851318 227.54119873]
[408.95593262 219.74681091]
[424.38879395 221.36106873]
[435.90289307 231.76324463]
[439.07077026 246.95350647]
[432.67434692 261.09088135]
[419.17318726 268.73925781]
[403.75872803 266.95770264]
[392.35815430 256.43121338]
[389.35522461 241.20747375]
[375.68896484 235.02420044]
[362.02267456 228.84092712]
[349.19232178 236.35890198]
[334.21817017 234.86254883]
[322.86364746 224.71717834]
[319.62280273 209.65719604]
[305.95651245 203.47392273]
[292.29025269 197.29064941]
[278.48709106 202.76869202]
[264.53945923 196.69265747]
[258.88717651 182.17752075]
[245.22090149 175.99424744]
[231.55462646 169.81095886]
[217.84883118 163.71580505]
[204.10408020 157.70898438]
[190.35932922 151.70217896]
[176.61456299 145.69537354]
[162.86981201 139.68856812]
[149.12506104 133.68176270]
[135.38031006 127.67494965]
[129.05198669 131.70016479]
[140.61952209 141.24963379]
[135.11196899 155.20195007]
[120.14060974 154.27543640]
[116.39535522 139.75061035]
[110.06703949 143.77583313]
[109.68082428 158.77085876]
[109.29460144 173.76588440]
[116.67401123 187.76069641]
[108.61157990 200.28453064]
[108.22535706 215.27955627]
[115.60476685 229.27438354]
[107.54233551 241.79821777]
[107.15611267 256.79324341]
[106.76989746 271.78826904]
[120.16558075 279.19192505]
[128.57653809 291.97918701]
[130.06999207 307.21166992]
[124.30275726 321.38903809]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 239]
[8 238]
[9 237]
[11 235]
[12 234]
[14 232]
[15 231]
[16 230]
[18 35]
[19 34]
[20 33]
[22 32]
[23 31]
[38 52]
[39 51]
[40 50]
[41 49]
[42 48]
[43 47]
[57 80]
[58 79]
[60 78]
[61 77]
[63 76]
[64 75]
[65 74]
[66 73]
[81 158]
[82 157]
[83 156]
[84 155]
[85 154]
[86 153]
[87 152]
[88 134]
[89 133]
[90 132]
[91 131]
[92 130]
[93 129]
[94 126]
[95 125]
[96 124]
[100 122]
[101 121]
[102 120]
[103 119]
[104 118]
[106 116]
[107 115]
[138 147]
[139 146]
[140 145]
[159 172]
[160 171]
[161 170]
[162 169]
[174 224]
[175 223]
[176 222]
[177 221]
[178 220]
[179 219]
[180 218]
[182 217]
[183 216]
[184 215]
[187 212]
[188 211]
[189 210]
[193 206]
[194 205]
[195 204]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
