%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:40:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGGGGCGGGGAGGUGGGACCGGGAGAGGGGUGGCCGCGGGGCCCGGCCGGGCUGGGGCGGGGGGCCGCAGCCAUGAUCCGGGCCUUCUCGUUCCCGGUGAGCCCUGAGCGGGGCCGGCUGCGGGGCUGGCUGGAGGGUAGCCUGGCCGGGCUCUGCGAGUUACAUUGGCUCC\
) } def
/len { sequence length } bind def

/coor [
[-46.54767609 537.12072754]
[-36.28525543 548.06066895]
[-34.27545929 562.92541504]
[-41.26422882 576.19787598]
[-54.65765762 582.95184326]
[-69.48471069 580.68060303]
[-80.24225616 570.22711182]
[-82.93740082 555.46972656]
[-90.86080170 568.20629883]
[-98.78419495 580.94287109]
[-91.47592926 594.45153809]
[-91.91716766 609.80407715]
[-99.98922729 622.87072754]
[-113.52075958 630.13665771]
[-128.87185669 629.64727783]
[-141.91314697 621.53430176]
[-149.13658142 607.98004150]
[-148.59910583 592.63055420]
[-140.44529724 579.61480713]
[-126.86847687 572.43389893]
[-111.52075195 573.01947021]
[-103.59735107 560.28289795]
[-95.67395020 547.54632568]
[-88.68476868 534.27416992]
[-82.66582489 520.53472900]
[-76.64688873 506.79525757]
[-70.62794495 493.05581665]
[-80.51432800 480.29357910]
[-82.63742065 464.19561768]
[-76.32534790 449.13360596]
[-63.20997238 439.24597168]
[-46.80618286 437.30090332]
[-41.03484726 423.45562744]
[-35.26351166 409.61035156]
[-29.49217796 395.76507568]
[-23.72084236 381.91979980]
[-18.07401276 368.02325439]
[-12.55214500 354.07662964]
[-7.03027678 340.12997437]
[-1.50840867 326.18331909]
[4.01345968 312.23666382]
[9.53532791 298.29003906]
[15.05719662 284.34338379]
[20.57906532 270.39672852]
[26.10093307 256.45007324]
[31.62280083 242.50343323]
[37.14466858 228.55679321]
[42.66653824 214.61013794]
[48.18840408 200.66349792]
[53.71027374 186.71684265]
[59.23214340 172.77020264]
[64.75401306 158.82354736]
[70.27587891 144.87690735]
[75.79774475 130.93026733]
[81.31961823 116.98361206]
[86.84148407 103.03696442]
[86.57221985 88.03938293]
[80.55327606 74.29993439]
[74.53433990 60.56049347]
[68.51539612 46.82104874]
[62.49645233 33.08160400]
[56.35443115 19.39673615]
[50.08982468 5.76755142]
[43.82521439 -7.86163378]
[37.56060791 -21.49081802]
[31.29599953 -35.12000275]
[25.03139114 -48.74918747]
[18.76678276 -62.37837219]
[3.57828212 -61.76366425]
[-10.68757725 -67.01282501]
[-21.85535431 -77.32540131]
[-28.22204399 -91.12879181]
[-28.81677437 -106.31809235]
[-23.54885101 -120.57703400]
[-13.22159386 -131.73123169]
[0.59016365 -138.07975769]
[15.78022957 -138.65451050]
[30.03222847 -133.36782837]
[41.17283630 -123.02591705]
[47.50318909 -109.20581818]
[48.05795288 -94.01500702]
[42.75253296 -79.76997375]
[32.39596939 -68.64298248]
[38.66057587 -55.01379776]
[44.92518616 -41.38461304]
[51.18979263 -27.75542641]
[57.45439911 -14.12624168]
[63.71900940 -0.49705678]
[69.98361969 13.13212872]
[75.65313721 17.91250801]
[76.23590088 27.06266212]
[82.25483704 40.80210495]
[88.27378082 54.54154968]
[94.29272461 68.28099823]
[100.31166077 82.02043915]
[114.65841675 86.39886475]
[127.32334137 78.36145782]
[139.98825073 70.32405853]
[152.65318298 62.28665543]
[165.31809998 54.24925613]
[172.82411194 40.32193375]
[187.71595764 40.03514099]
[200.38087463 31.99773788]
[213.04579163 23.96033669]
[225.71070862 15.92293358]
[238.37564087 7.88553190]
[251.04055786 -0.15186988]
[263.70547485 -8.18927193]
[276.29772949 -16.34002876]
[288.81634521 -24.60348320]
[301.33493042 -32.86693954]
[302.94467163 -48.42144775]
[314.21194458 -59.26499176]
[329.81671143 -60.27757645]
[342.39086914 -50.98109436]
[345.99728394 -35.76505661]
[338.93310547 -21.81401253]
[324.53384399 -15.71521950]
[309.59838867 -20.34833908]
[297.07980347 -12.08488464]
[284.56118774 -3.82142973]
[280.69812012 2.50883508]
[271.74285889 4.47564697]
[259.07794189 12.51304913]
[246.41304016 20.55045128]
[233.74812317 28.58785248]
[221.08319092 36.62525558]
[208.41827393 44.66265488]
[195.75335693 52.70005798]
[189.15322876 66.05249023]
[173.35549927 66.91417694]
[160.69058228 74.95157623]
[148.02566528 82.98897552]
[135.36074829 91.02638245]
[122.69582367 99.06378174]
[119.20810699 105.16765594]
[114.39772034 109.16467285]
[109.17459869 110.89458466]
[104.40325928 110.53594971]
[100.78813171 108.55883026]
[95.26626587 122.50547791]
[89.74439240 136.45213318]
[84.22252655 150.39877319]
[78.70066071 164.34542847]
[73.17878723 178.29206848]
[67.65692139 192.23872375]
[62.13505173 206.18536377]
[56.61318588 220.13201904]
[51.09131622 234.07865906]
[45.56944656 248.02529907]
[40.04758072 261.97195435]
[34.52571106 275.91860962]
[29.00384331 289.86523438]
[23.48197556 303.81188965]
[17.96010780 317.75854492]
[12.43823910 331.70520020]
[6.91637039 345.65182495]
[1.39450204 359.59848022]
[-4.12736607 373.54513550]
[-4.38129330 382.71029663]
[-9.87556553 387.69113159]
[-15.64690018 401.53640747]
[-21.41823578 415.38168335]
[-27.18956947 429.22695923]
[-32.96090317 443.07223511]
[-23.89553833 453.74887085]
[-20.33872986 467.22738647]
[-22.93096352 480.85671997]
[-31.10906792 491.98165894]
[-43.22735214 498.45993042]
[-56.88850021 499.07476807]
[-62.90744019 512.81420898]
[-68.92638397 526.55364990]
[-74.94532013 540.29309082]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 23]
[9 22]
[10 21]
[24 174]
[25 173]
[26 172]
[27 171]
[32 165]
[33 164]
[34 163]
[35 162]
[36 161]
[37 159]
[38 158]
[39 157]
[40 156]
[41 155]
[42 154]
[43 153]
[44 152]
[45 151]
[46 150]
[47 149]
[48 148]
[49 147]
[50 146]
[51 145]
[52 144]
[53 143]
[54 142]
[55 141]
[56 140]
[57 95]
[58 94]
[59 93]
[60 92]
[61 91]
[62 89]
[63 88]
[64 87]
[65 86]
[66 85]
[67 84]
[68 83]
[96 135]
[97 134]
[98 133]
[99 132]
[100 131]
[102 129]
[103 128]
[104 127]
[105 126]
[106 125]
[107 124]
[108 123]
[109 121]
[110 120]
[111 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
