%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:36:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCGUCAUCAGGGUGCGCCACUGCAGCUGGCAUUGGCCGGGACUGGAAGUGCGGGCUUCUGCAGCAGCCGAAGCUGGAGCUGCUAGGGCAGCAGCGGCUCCCCUGUUGUAUGGACAUUCUGCACCCGAAACUGAUAGCUGAGUCCUGAAGUUUUAUGUUAUGAAACAGAAGAACUUUCAUCCCAGCACAUGAUUUGGGAAUUACACUUUGUGACAUGGAUGAAUCUGCACUGACCCUUGGUACAAUAGAUGUUUC\
UUAUCUGCCACAUUCAUCAGAAUACAGUGUUGGUCGAUGUAAGCACACAAGUGAGGAAU\
) } def
/len { sequence length } bind def

/coor [
[327.08386230 55.64770889]
[317.17376709 43.99706650]
[302.40167236 46.60178757]
[287.64270020 49.28014374]
[272.89730835 52.03205872]
[258.15191650 54.78397751]
[243.40650940 57.53589630]
[228.70391846 60.50808716]
[214.04743958 63.69989014]
[208.21202087 68.16916656]
[199.22889709 66.84967041]
[184.54130554 69.89514160]
[169.85372925 72.94061279]
[155.16613770 75.98608398]
[140.47856140 79.03155518]
[125.79097748 82.07702637]
[116.96381378 168.43389893]
[107.43707275 180.02015686]
[104.42748260 188.58636475]
[97.75709534 191.67382812]
[88.11528015 203.16450500]
[78.47346497 214.65516663]
[75.67105865 232.87983704]
[58.91862869 238.18281555]
[49.39189148 249.76907349]
[39.86515427 261.35531616]
[30.45444298 273.03601074]
[21.16069221 284.80999756]
[11.86694336 296.58395386]
[2.57319283 308.35791016]
[-6.72055721 320.13186646]
[-8.54710579 336.42898560]
[-23.68039322 342.74685669]
[-36.55258942 332.58621216]
[-33.92188644 316.39944458]
[-18.49452019 310.83813477]
[-9.20077038 299.06414795]
[0.09297977 287.29019165]
[9.38673019 275.51623535]
[18.68048096 263.74227905]
[19.03138542 259.02801514]
[22.31255150 254.47053528]
[28.27890015 251.82859802]
[37.80563736 240.24234009]
[47.33237457 228.65608215]
[46.46346283 216.62455750]
[54.25897980 206.90063477]
[66.98279572 205.01335144]
[76.62461090 193.52268982]
[86.26642609 182.03201294]
[95.85082245 170.49340820]
[105.37755585 158.90716553]
[101.24582672 152.64785767]
[88.85064697 133.86996460]
[74.45252228 138.07637024]
[60.05438995 142.28279114]
[45.65626144 146.48919678]
[31.25813293 150.69560242]
[16.86000443 154.90202332]
[5.78331232 166.19880676]
[-8.60303211 162.34103394]
[-23.00115967 166.54745483]
[-33.93673325 178.76814270]
[-49.93032455 175.14361572]
[-54.52909470 159.40248108]
[-43.00222397 147.73786926]
[-27.20757103 152.14932251]
[-12.80944252 147.94291687]
[-2.76260042 136.94699097]
[12.65359402 140.50389099]
[27.05172348 136.29747009]
[41.44985199 132.09106445]
[55.84798050 127.88465881]
[70.24610901 123.67824554]
[84.64423370 119.47183228]
[83.97126770 104.48693848]
[69.25403595 101.58809662]
[54.53681183 98.68926239]
[39.81958771 95.79042053]
[25.10236168 92.89158630]
[10.38513660 89.99274445]
[-4.33208942 87.09390259]
[-19.04931450 84.19506836]
[-33.76654053 81.29622650]
[-45.04933929 91.94883728]
[-60.44303513 93.90172577]
[-74.02843475 86.40396118]
[-80.58168793 72.33859253]
[-77.58291626 57.11404419]
[-66.18522644 46.58445740]
[-50.77124786 44.79867554]
[-37.26798248 52.44337082]
[-30.86770248 66.57900238]
[-16.15047646 69.47784424]
[-1.43325078 72.37667847]
[13.28397465 75.27552032]
[28.00120163 78.17435455]
[42.71842575 81.07319641]
[57.43565369 83.97203827]
[72.15287781 86.87087250]
[86.87010193 89.76971436]
[92.48920441 75.86195374]
[79.88881683 67.72376251]
[65.46540070 73.44607544]
[50.44151306 69.56504822]
[40.59413528 57.57302094]
[39.70978546 42.08116531]
[48.12851715 29.04642105]
[62.61315536 23.48091125]
[77.59406281 27.52468681]
[87.31076813 39.62283707]
[88.02700806 55.12337112]
[100.62739563 63.26156616]
[92.78262329 50.47643661]
[94.40544891 35.56447983]
[104.81675720 24.76610947]
[119.65956879 22.60026741]
[132.72241211 29.97332382]
[138.53871155 43.79977417]
[134.67442322 58.29347229]
[122.74550629 67.38944244]
[137.43309021 64.34397125]
[152.12066650 61.29850006]
[166.80825806 58.25302887]
[181.49583435 55.20755386]
[196.18342590 52.16208267]
[210.85563660 49.04340744]
[225.51211548 45.85160828]
[229.29757690 42.41369247]
[233.58996582 40.88817215]
[237.58894348 41.15294266]
[240.65458679 42.79048920]
[255.39999390 40.03857422]
[270.14538574 37.28665543]
[284.89080811 34.53473663]
[292.70254517 29.90716553]
[299.79693604 31.82967186]
[314.56906128 29.22494888]
[319.89672852 14.88747883]
[331.60824585 5.20566607]
[346.49447632 2.70250201]
[360.54098511 7.95149374]
[370.01037598 19.44914627]
[384.78250122 16.84442329]
[399.55462646 14.23970127]
[414.32675171 11.63497829]
[424.47436523 0.58846045]
[425.81896973 -14.35115433]
[427.16354370 -29.29076767]
[428.50814819 -44.23038101]
[429.85272217 -59.16999817]
[431.19732666 -74.10961151]
[432.54190063 -89.04922485]
[433.88650513 -103.98883820]
[425.77011108 -120.54529572]
[436.48599243 -134.47137451]
[437.68151855 -149.42366028]
[438.87704468 -164.37593079]
[440.07257080 -179.32821655]
[432.54617310 -193.89823914]
[441.62753296 -207.55331421]
[457.97451782 -206.24627686]
[464.77075195 -191.32168579]
[455.02484131 -178.13269043]
[453.82931519 -163.18040466]
[452.63378906 -148.22813416]
[451.43826294 -133.27584839]
[459.02767944 -123.89962769]
[458.18838501 -111.46498871]
[448.82611084 -102.64424896]
[447.48153687 -87.70463562]
[446.13693237 -72.76502228]
[444.79232788 -57.82540894]
[443.44775391 -42.88579178]
[442.10314941 -27.94617844]
[440.75857544 -13.00656414]
[439.41397095 1.93305016]
[446.42251587 4.60334349]
[460.43957520 9.94393063]
[467.44812012 12.61422348]
[476.38546753 0.56750321]
[485.32284546 -11.47921753]
[494.26022339 -23.52593803]
[503.19757080 -35.57265854]
[512.13494873 -47.61937714]
[507.35900879 -62.38319016]
[512.20513916 -77.12410736]
[524.80993652 -86.17394257]
[540.32653809 -86.05285645]
[552.78851318 -76.80740356]
[557.40399170 -61.99264908]
[552.39825439 -47.30517197]
[539.69604492 -38.39260483]
[524.18164062 -38.68201065]
[515.24432373 -26.63529015]
[506.30694580 -14.58857059]
[497.36956787 -2.54185033]
[488.43218994 9.50487041]
[479.49484253 21.55158997]
[481.49011230 28.78131294]
[495.94961548 24.79098320]
[499.93972778 39.25054932]
[485.48065186 43.24075317]
[487.47595215 50.47047806]
[501.32696533 56.22800064]
[515.17797852 61.98552322]
[529.02899170 67.74304962]
[542.88006592 73.50057220]
[556.75958252 79.18894958]
[570.66735840 84.80805206]
[584.57513428 90.42714691]
[598.48291016 96.04624939]
[612.47314453 101.45666504]
[626.54278564 106.65719604]
[640.61242676 111.85771942]
[654.68200684 117.05825043]
[670.30877686 114.58539581]
[679.56414795 126.25536346]
[693.63372803 131.45588684]
[707.70336914 136.65641785]
[723.33013916 134.18356323]
[732.58544922 145.85353088]
[746.65509033 151.05404663]
[760.72473145 156.25457764]
[774.82012939 161.38488770]
[788.94091797 166.44483948]
[803.06170654 171.50477600]
[819.92346191 162.77742004]
[837.48870850 169.09123230]
[844.68365479 185.96597290]
[858.90252686 190.74327087]
[873.12145996 195.52056885]
[887.34039307 200.29786682]
[900.28741455 188.34786987]
[917.42303467 184.65252686]
[933.97467041 190.14807129]
[945.37945557 203.22380066]
[948.54229736 220.19273376]
[962.85369873 224.68547058]
[977.16503906 229.17822266]
[991.47637939 233.67097473]
[1005.78778076 238.16372681]
[1017.12097168 227.89215088]
[1031.97583008 224.69352722]
[1046.34167480 229.32899475]
[1056.39123535 240.45832825]
[1059.49987793 255.02549744]
[1073.81127930 259.51824951]
[1088.12255859 264.01098633]
[1104.00207520 259.91543579]
[1115.29406738 271.80764771]
[1110.38220215 287.45391846]
[1094.31945801 290.75872803]
[1083.62988281 278.32235718]
[1069.31848145 273.82962036]
[1055.00708008 269.33685303]
[1044.13061523 279.51370239]
[1029.52343750 282.90255737]
[1015.08575439 278.49575806]
[1004.72430420 267.38104248]
[1001.29504395 252.47508240]
[986.98364258 247.98234558]
[972.67230225 243.48959351]
[958.36090088 238.99684143]
[944.04956055 234.50408936]
[935.76330566 243.96339417]
[924.48156738 249.62351990]
[911.85217285 250.61845398]
[899.73449707 246.76652527]
[889.92602539 238.60223389]
[883.89550781 227.30242920]
[882.56304932 214.51678467]
[868.34417725 209.73947144]
[854.12524414 204.96217346]
[839.90631104 200.18487549]
[831.08721924 207.32365417]
[819.80432129 209.36375427]
[808.81701660 205.68952942]
[800.86865234 197.09718323]
[798.00177002 185.62557983]
[783.88098145 180.56562805]
[769.76019287 175.50567627]
[762.44311523 176.20355225]
[755.52423096 170.32421875]
[741.45458984 165.12368774]
[727.38494873 159.92315674]
[712.76452637 162.76799011]
[702.50286865 150.72604370]
[688.43322754 145.52551270]
[674.36358643 140.32499695]
[659.74322510 143.16981506]
[649.48150635 131.12788391]
[635.41186523 125.92735291]
[621.34222412 120.72682190]
[607.27264404 115.52629852]
[603.97460938 116.62308502]
[599.98828125 116.20928955]
[596.01489258 113.98136902]
[592.86376953 109.95401001]
[578.95605469 104.33490753]
[565.04827881 98.71581268]
[551.14050293 93.09671021]
[543.80145264 93.50219727]
[537.12249756 87.35159302]
[523.27148438 81.59407043]
[509.42047119 75.83654785]
[495.56945801 70.07902527]
[481.71841431 64.32150269]
[416.93145752 26.40709496]
[402.15933228 29.01181793]
[387.38723755 31.61654091]
[372.61511230 34.22126389]
[367.64920044 48.26424789]
[356.24508667 58.00086975]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 138]
[3 137]
[4 135]
[5 134]
[6 133]
[7 132]
[8 128]
[9 127]
[11 126]
[12 125]
[13 124]
[14 123]
[15 122]
[16 121]
[17 52]
[18 51]
[20 50]
[21 49]
[22 48]
[24 45]
[25 44]
[26 43]
[27 40]
[28 39]
[29 38]
[30 37]
[31 36]
[54 75]
[55 74]
[56 73]
[57 72]
[58 71]
[59 70]
[61 68]
[62 67]
[76 101]
[77 100]
[78 99]
[79 98]
[80 97]
[81 96]
[82 95]
[83 94]
[84 93]
[102 113]
[103 112]
[143 312]
[144 311]
[145 310]
[146 309]
[147 177]
[148 176]
[149 175]
[150 174]
[151 173]
[152 172]
[153 171]
[154 170]
[156 167]
[157 166]
[158 165]
[159 164]
[180 199]
[181 198]
[182 197]
[183 196]
[184 195]
[185 194]
[204 308]
[205 307]
[206 306]
[207 305]
[208 304]
[209 302]
[210 301]
[211 300]
[212 299]
[213 295]
[214 294]
[215 293]
[216 292]
[218 290]
[219 289]
[220 288]
[222 286]
[223 285]
[224 284]
[225 282]
[226 281]
[227 280]
[230 275]
[231 274]
[232 273]
[233 272]
[238 265]
[239 264]
[240 263]
[241 262]
[242 261]
[247 256]
[248 255]
[249 254]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
