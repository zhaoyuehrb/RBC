%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:19:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGACCCGAGCUACGGUGGCCGCGGGGCGGCGGUGGCGAUUGGACUUGGUGGGUCCCGGGCCAGGGGCGGGCGCCGCCAUGGGUAACCUGUUCGGCCGCAAGAAGCAGAGCCGCGUCACGGAGCAGGACAAGGCCAUCCUGCAACUGAAGCAGCAGCGGGACAAGCUGAGGCAGUACC\
) } def
/len { sequence length } bind def

/coor [
[0.75145882 332.49111938]
[-13.50271416 327.82009888]
[-25.00241470 318.18905640]
[-32.10248184 304.97583008]
[-33.78717041 290.07073975]
[-29.81468391 275.60452271]
[-41.18221664 285.39120483]
[-52.54974747 295.17788696]
[-63.91727829 304.96456909]
[-75.11130524 314.94924927]
[-86.12837219 325.12884521]
[-97.14544678 335.30844116]
[-108.16251373 345.48803711]
[-119.17958832 355.66763306]
[-124.06458282 370.71578979]
[-138.66323853 373.67019653]
[-149.68031311 383.84979248]
[-154.56530762 398.89797974]
[-169.16395569 401.85238647]
[-180.18103027 412.03198242]
[-191.19810486 422.21157837]
[-195.54519653 438.02404785]
[-211.47894287 441.90322876]
[-222.60804749 429.85852051]
[-217.48385620 414.28048706]
[-201.37770081 411.19448853]
[-190.36062622 401.01489258]
[-179.34355164 390.83529663]
[-175.24656677 376.51525879]
[-159.85990906 372.83273315]
[-148.84283447 362.65313721]
[-144.74584961 348.33306885]
[-129.35917664 344.65057373]
[-118.34210968 334.47097778]
[-107.32504272 324.29138184]
[-96.30796814 314.11178589]
[-85.29089355 303.93218994]
[-84.21173096 299.25265503]
[-80.16365814 295.21188354]
[-73.70396423 293.59704590]
[-62.33643341 283.81036377]
[-50.96890259 274.02368164]
[-39.60137177 264.23696899]
[-36.63260269 254.91006470]
[-26.64952278 250.21958923]
[-17.79020309 238.11535645]
[-8.93088150 226.01112366]
[-0.07156054 213.90689087]
[8.78776073 201.80265808]
[17.64708138 189.69842529]
[15.12200832 175.06423950]
[23.93419075 162.66261292]
[39.30099869 160.11331177]
[48.16032028 148.00907898]
[57.01964188 135.90484619]
[65.87895966 123.80061340]
[74.73828125 111.69638824]
[83.59760284 99.59215546]
[85.30509949 84.68965149]
[79.41317749 70.89526367]
[73.52126312 57.10086441]
[67.62934875 43.30647278]
[62.54219055 39.01039886]
[60.68888092 33.59930038]
[61.78215027 28.92306519]
[56.37796783 14.93039417]
[50.97378540 0.93772399]
[45.56960678 -13.05494595]
[40.16542435 -27.04761696]
[34.76124191 -41.04028702]
[29.35705948 -55.03295517]
[14.76154613 -66.23820496]
[18.11092377 -83.45198822]
[12.46200562 -97.34766388]
[6.81308603 -111.24333191]
[-7.84365559 -117.15564728]
[-13.94992447 -131.73265076]
[-7.88297892 -146.32606506]
[6.75776911 -152.27787781]
[21.28622437 -146.05697632]
[27.08291054 -131.35412598]
[20.70875740 -116.89225769]
[26.35767746 -102.99658203]
[32.00659561 -89.10090637]
[43.04048538 -84.09881592]
[47.85153580 -72.54445648]
[43.34973145 -60.43713760]
[48.75391006 -46.44446945]
[54.15809250 -32.45179749]
[59.56227493 -18.45912743]
[64.96645355 -4.46645784]
[70.37063599 9.52621269]
[75.77481842 23.51888275]
[81.42373657 37.41455460]
[87.31565857 51.20895004]
[93.20757294 65.00334167]
[99.09949493 78.79773712]
[114.09718323 79.06098938]
[120.46957397 65.48186493]
[116.39357758 49.96523285]
[126.09874725 37.19067764]
[142.14010620 36.95774460]
[152.21209717 49.44512177]
[148.58836365 65.07355499]
[134.04869080 71.85425568]
[127.67630768 85.43338013]
[131.94511414 91.59999847]
[146.89483643 90.37278748]
[140.48274231 103.93324280]
[144.75157166 110.09986877]
[159.70480347 108.91641998]
[172.85151672 100.11444855]
[186.14956665 106.82349396]
[201.10279846 105.64004517]
[214.24951172 96.83808136]
[227.54756165 103.54712677]
[242.50079346 102.36367798]
[257.45404053 101.18022919]
[263.76632690 88.90832520]
[275.23129272 81.42366028]
[288.78952026 80.59556580]
[300.88562012 86.53385162]
[308.40072632 97.58800507]
[323.37243652 96.66716766]
[338.34414673 95.74633026]
[353.31585693 94.82549286]
[368.28756714 93.90465546]
[383.25927734 92.98381805]
[391.47821045 79.82218170]
[405.87628174 74.03639221]
[420.91711426 77.85119629]
[430.81723022 89.79973602]
[431.76980591 105.28754425]
[423.40856934 118.35924530]
[408.94860840 123.98851013]
[393.95001221 120.01075745]
[384.18011475 107.95552826]
[369.20840454 108.87636566]
[354.23669434 109.79720306]
[339.26498413 110.71804047]
[324.29327393 111.63887787]
[309.32156372 112.55971527]
[300.96636963 126.67463684]
[285.69543457 133.10217285]
[269.43875122 129.13192749]
[258.63748169 116.13346863]
[243.68424988 117.31691742]
[228.73100281 118.50036621]
[216.65385437 127.21768951]
[202.28625488 120.59329224]
[187.33300781 121.77674103]
[175.25585938 130.49404907]
[160.88825989 123.86965942]
[145.93501282 125.05310822]
[120.12697601 132.28210449]
[101.03355408 123.73957062]
[95.70183563 108.45147705]
[86.84251404 120.55570984]
[77.98319244 132.65994263]
[69.12387085 144.76417542]
[60.26455307 156.86840820]
[51.40523148 168.97264099]
[53.62111664 184.39105225]
[44.46407318 196.54025269]
[29.75131416 198.55775452]
[20.89199257 210.66198730]
[12.03267097 222.76622009]
[3.17335033 234.87043762]
[-5.68597078 246.97467041]
[-14.54529190 259.07891846]
[-0.43933052 253.97775269]
[14.55224037 254.48056030]
[28.28470802 260.51541138]
[38.79348755 271.21893311]
[44.57518387 285.05987549]
[44.80265808 300.05816650]
[39.44337082 314.06808472]
[29.26402092 325.08538818]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 43]
[7 42]
[8 41]
[9 40]
[10 37]
[11 36]
[12 35]
[13 34]
[14 33]
[16 31]
[17 30]
[19 28]
[20 27]
[21 26]
[45 170]
[46 169]
[47 168]
[48 167]
[49 166]
[50 165]
[53 162]
[54 161]
[55 160]
[56 159]
[57 158]
[58 157]
[59 97]
[60 96]
[61 95]
[62 94]
[65 93]
[66 92]
[67 91]
[68 90]
[69 89]
[70 88]
[71 87]
[73 84]
[74 83]
[75 82]
[98 106]
[99 105]
[110 154]
[111 153]
[113 151]
[114 150]
[116 148]
[117 147]
[118 146]
[123 142]
[124 141]
[125 140]
[126 139]
[127 138]
[128 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
