%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:30:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUGAUGUCACAAUCUGACCUGUGGGUAUUAAUCUGGUCACAGCUGCUCACAGACUAGAUGGCAAGGUCCAGGGGACUAGCACAGGAAGAUGUGGAAGAGAAGUGACCAUCAACCCAAGAUCAAAGCAGAGGAUGGACCUCUGGUGGGCCAGUUCGAGGUUCUGGGUUCAGUUCCAGAACCUGCCAUGC\
) } def
/len { sequence length } bind def

/coor [
[92.94553375 99.22665405]
[80.03816986 91.58465576]
[67.13081360 83.94266510]
[54.22344971 76.30067444]
[41.31608963 68.65868378]
[28.40872955 61.01669312]
[15.50136757 53.37470245]
[1.11848783 57.63296127]
[-5.54809332 71.07009888]
[-12.21467400 84.50724030]
[-18.88125420 97.94438171]
[-15.14411449 113.54608917]
[-25.12516212 126.10626984]
[-41.16779327 125.98983002]
[-50.96547318 113.28609467]
[-47.00226212 97.74027252]
[-32.31839371 91.27779388]
[-25.65181351 77.84066010]
[-18.98523140 64.40351868]
[-12.31865120 50.96638107]
[-15.01780891 36.21122742]
[-26.00959015 26.00433159]
[-34.44290161 22.44963074]
[-37.09646606 15.53802013]
[-47.91888428 5.15171814]
[-58.74130249 -5.23458385]
[-69.56372070 -15.62088585]
[-80.38613892 -26.00718689]
[-90.25297546 -22.00553894]
[-100.85124207 -21.52519608]
[-110.96636200 -24.59565353]
[-119.44763184 -30.84094048]
[-125.33914185 -39.52545547]
[-127.98748016 -49.64054871]
[-127.11412048 -60.02163696]
[-122.84449768 -69.48229218]
[-132.96064758 -80.55764771]
[-143.07679749 -91.63299561]
[-153.19296265 -102.70835114]
[-163.30911255 -113.78369904]
[-173.42527771 -124.85904694]
[-183.54142761 -135.93440247]
[-199.09378052 -136.80722046]
[-209.19523621 -148.18330383]
[-208.26728821 -163.00473022]
[-218.38345337 -174.08007812]
[-235.86250305 -174.54592896]
[-247.37641907 -187.25315857]
[-246.17001343 -204.01995850]
[-256.46694946 -214.92742920]
[-266.76391602 -225.83489990]
[-277.06085205 -236.74237061]
[-287.35778809 -247.64982605]
[-300.21542358 -248.80374146]
[-308.56759644 -258.11492920]
[-308.33682251 -270.21994019]
[-318.45297241 -281.29528809]
[-333.77560425 -279.70660400]
[-346.94171143 -287.35559082]
[-353.00750732 -301.12765503]
[-349.83856201 -315.65679932]
[-359.95471191 -326.73214722]
[-370.16159058 -337.72390747]
[-380.45855713 -348.63137817]
[-393.31619263 -349.78530884]
[-401.66833496 -359.09646606]
[-401.43759155 -371.20150757]
[-411.55374146 -382.27685547]
[-421.66989136 -393.35220337]
[-431.78604126 -404.42755127]
[-441.90219116 -415.50289917]
[-457.04861450 -423.12011719]
[-453.92205811 -439.78329468]
[-437.04455566 -441.39169312]
[-430.82684326 -425.61904907]
[-420.71069336 -414.54370117]
[-410.59454346 -403.46835327]
[-400.47839355 -392.39300537]
[-390.36221313 -381.31765747]
[-373.37744141 -376.93252563]
[-369.55108643 -358.92834473]
[-359.25411987 -348.02087402]
[-352.36459351 -345.31054688]
[-348.87936401 -336.84829712]
[-338.76321411 -325.77294922]
[-324.00720215 -327.61636353]
[-310.83941650 -320.33117676]
[-304.41116333 -306.52786255]
[-307.37762451 -291.41143799]
[-297.26147461 -280.33609009]
[-280.27667236 -275.95095825]
[-276.45031738 -257.94677734]
[-266.15338135 -247.03930664]
[-255.85643005 -236.13183594]
[-245.55949402 -225.22438049]
[-235.26254272 -214.31690979]
[-222.44735718 -215.75054932]
[-210.97770691 -209.44255066]
[-205.15454102 -197.50230408]
[-207.30809021 -184.19624329]
[-197.19194031 -173.12088013]
[-182.34729004 -172.70603943]
[-171.93029785 -161.61817932]
[-172.46607971 -146.05055237]
[-162.34991455 -134.97520447]
[-152.23376465 -123.89985657]
[-142.11761475 -112.82450104]
[-132.00144958 -101.74915314]
[-121.88529968 -90.67379761]
[-111.76914215 -79.59844971]
[-92.54383850 -83.10031128]
[-74.96568298 -74.23873901]
[-66.22042847 -56.44199753]
[-69.99983215 -36.82960510]
[-59.17741776 -26.44330406]
[-48.35499954 -16.05700111]
[-37.53258133 -5.67069960]
[-26.71016312 4.71560192]
[-15.80269432 15.01254940]
[-4.81091309 25.21944618]
[23.14335823 40.46734238]
[36.05072021 48.10933304]
[48.95808029 55.75132370]
[61.86544037 63.39331436]
[74.77280426 71.03530884]
[87.68016815 78.67729950]
[100.58752441 86.31929016]
[115.42346954 88.53168488]
[129.99888611 84.98803711]
[144.57429504 81.44438934]
[159.14970398 77.90074158]
[173.72511292 74.35708618]
[188.30052185 70.81343842]
[197.83815002 57.91331863]
[213.87510681 57.47105789]
[224.10920715 69.82592773]
[220.68972778 85.50032043]
[206.23979187 92.47019196]
[191.84416199 85.38884735]
[177.26875305 88.93249512]
[162.69334412 92.47615051]
[148.11793518 96.01979828]
[133.54252625 99.56344604]
[118.96711731 103.10709381]
[116.95655823 110.33258057]
[127.46112823 121.04024506]
[112.93544006 124.78355408]
[110.92487335 132.00903320]
[121.57500458 142.57192993]
[132.22512817 153.13482666]
[132.20336914 138.13484192]
[141.72174072 126.54171753]
[156.43899536 123.64297485]
[169.64268494 130.76071167]
[175.31074524 144.64859009]
[170.85801697 158.97245789]
[158.31532288 167.19931030]
[143.40344238 165.57701111]
[152.76956177 177.29348755]
[162.13568115 189.00996399]
[171.50180054 200.72644043]
[180.86791992 212.44291687]
[190.23403931 224.15939331]
[199.60015869 235.87586975]
[208.96626282 247.59234619]
[218.33238220 259.30883789]
[227.69850159 271.02529907]
[243.43128967 272.52706909]
[253.42956543 284.76672363]
[251.76156616 300.48275757]
[239.41685486 310.35107422]
[223.71934509 308.51699829]
[213.98210144 296.06866455]
[215.98202515 280.39141846]
[206.61590576 268.67492676]
[197.24978638 256.95846558]
[187.88368225 245.24198914]
[178.51756287 233.52551270]
[169.15144348 221.80903625]
[159.78532410 210.09255981]
[150.41920471 198.37608337]
[141.05308533 186.65960693]
[131.68696594 174.94313049]
[121.66223145 163.78495789]
[111.01210785 153.22206116]
[100.36197662 142.65916443]
[90.09848785 135.37373352]
[83.78428650 126.19280243]
[81.54497528 116.68419647]
[82.96534729 108.30516052]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 127]
[2 126]
[3 125]
[4 124]
[5 123]
[6 122]
[7 121]
[8 20]
[9 19]
[10 18]
[11 17]
[21 120]
[22 119]
[24 118]
[25 117]
[26 116]
[27 115]
[28 114]
[36 110]
[37 109]
[38 108]
[39 107]
[40 106]
[41 105]
[42 104]
[45 101]
[46 100]
[49 96]
[50 95]
[51 94]
[52 93]
[53 92]
[56 90]
[57 89]
[61 85]
[62 84]
[63 82]
[64 81]
[67 79]
[68 78]
[69 77]
[70 76]
[71 75]
[128 144]
[129 143]
[130 142]
[131 141]
[132 140]
[133 139]
[148 186]
[149 185]
[150 184]
[158 183]
[159 182]
[160 181]
[161 180]
[162 179]
[163 178]
[164 177]
[165 176]
[166 175]
[167 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
