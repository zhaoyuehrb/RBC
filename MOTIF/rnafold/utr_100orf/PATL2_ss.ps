%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:34:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAAGGACAGCAACAGUCAGGUGGUUUACCUUCCAGAGGCUGGCAAUGCUGUUUCACUGGAGGACACGGCUAAGAAGGAAGUCCACCAGCCUGCCAAGAUGAAUUGCCUUGAAGGGCCAGGUAAGACCUGUGGCCCCUUGGCUUCUGAGGAGGAGCUGGUGUCUGCCUGCCAGUUGGAAAAAGAAGAAGAGAAUGAAG\
) } def
/len { sequence length } bind def

/coor [
[102.73361969 183.90309143]
[97.25904083 169.93782043]
[100.97753906 155.40609741]
[99.16526031 140.51597595]
[97.35298157 125.62585449]
[90.34197998 128.28964233]
[84.79370117 142.22581482]
[79.24541473 156.16197205]
[86.81578064 169.84494019]
[83.76905060 185.18284607]
[71.54380035 194.93360901]
[55.91242218 194.49320984]
[44.25556946 184.06958008]
[42.07725525 168.58447266]
[50.40601349 155.34944153]
[65.30925751 150.61369324]
[70.85753632 136.67753601]
[76.40581512 122.74137115]
[70.96771240 108.76184845]
[57.46052551 102.23835754]
[43.95334244 95.71486664]
[30.44615555 89.19137573]
[16.93897057 82.66787720]
[3.43178463 76.14438629]
[-10.07540131 69.62089539]
[-23.58258629 63.09740829]
[-37.08977127 56.57391357]
[-50.59695816 50.05042267]
[-66.38867188 51.01601410]
[-74.48436737 38.51365280]
[-87.99154663 31.99016190]
[-101.49873352 25.46667099]
[-113.13053894 32.87241364]
[-126.79445648 33.55564880]
[-138.91362000 27.44466591]
[-146.36846924 16.23233986]
[-147.29949951 2.90867424]
[-160.70202637 -3.82723188]
[-174.10453796 -10.56313801]
[-187.50706482 -17.29904366]
[-200.90957642 -24.03495026]
[-214.31210327 -30.77085686]
[-227.71463013 -37.50676346]
[-235.33923340 -29.45729446]
[-246.64080811 -25.04873276]
[-259.79129028 -25.91109657]
[-272.27603149 -32.73844147]
[-281.37097168 -45.02059937]
[-295.73577881 -49.33944702]
[-310.10055542 -53.65829849]
[-324.46536255 -57.97714615]
[-338.83016968 -62.29599762]
[-353.22860718 -66.50132751]
[-367.65982056 -70.59287262]
[-382.09100342 -74.68441772]
[-395.76693726 -66.76328278]
[-411.01663208 -70.91321564]
[-418.79275513 -84.67213440]
[-414.48181152 -99.87711334]
[-400.64144897 -107.50731659]
[-385.48291016 -103.03586578]
[-377.99945068 -89.11560822]
[-363.56826782 -85.02406311]
[-349.13708496 -80.93251801]
[-341.83718872 -82.13372803]
[-334.51132202 -76.66079712]
[-320.14651489 -72.34194946]
[-305.78170776 -68.02310181]
[-291.41693115 -63.70425034]
[-277.05212402 -59.38540268]
[-272.62460327 -65.43907928]
[-284.73193359 -74.29412842]
[-296.83917236 -83.14936829]
[-287.98373413 -95.25644684]
[-275.87689209 -86.40148926]
[-263.76953125 -77.54643250]
[-259.34201050 -83.60011292]
[-267.81042480 -95.98097992]
[-282.82223511 -102.58235931]
[-284.34194946 -118.91094208]
[-270.80624390 -128.16926575]
[-256.13946533 -120.83317566]
[-255.42958069 -104.44940186]
[-246.96115112 -92.06854248]
[-222.18193054 -75.39015198]
[-220.97871399 -50.90928268]
[-207.57620239 -44.17337799]
[-194.17367554 -37.43747330]
[-180.77116394 -30.70156479]
[-167.36863708 -23.96565819]
[-153.96611023 -17.22975349]
[-140.56359863 -10.49384689]
[-126.23216248 -18.49011040]
[-109.79339600 -16.35053253]
[-97.74716187 -4.72147322]
[-94.97524261 11.95948505]
[-81.46805573 18.48297691]
[-67.96087646 25.00646782]
[-53.13528442 23.57427406]
[-44.07346725 36.54323959]
[-30.56628036 43.06673050]
[-17.05909538 49.59022141]
[-3.55190945 56.11371231]
[9.95527649 62.63720322]
[23.46246147 69.16069794]
[36.96964645 75.68418884]
[50.47683334 82.20767975]
[63.98401642 88.73117065]
[77.49120331 95.25466156]
[80.53652954 87.08177948]
[86.47818756 80.51500702]
[94.54724884 76.55167389]
[103.64353943 75.84243774]
[112.48545074 78.58650208]
[123.29928589 68.19125366]
[134.11311340 57.79601288]
[144.92694092 47.40076828]
[155.74076843 37.00552368]
[166.55459595 26.61028099]
[177.20298767 16.04562378]
[187.68325806 5.31418467]
[198.16354370 -5.41725445]
[204.90437317 -20.97352219]
[221.71875000 -18.80252075]
[224.28727722 -2.04426885]
[208.89497375 5.06302261]
[198.41470337 15.79446220]
[187.93441772 26.52590179]
[187.09506226 31.23649979]
[183.28146362 35.46662140]
[176.94984436 37.42411041]
[166.13601685 47.81935501]
[155.32218933 58.21459961]
[144.50836182 68.60984039]
[133.69451904 79.00508881]
[122.88069916 89.40032959]
[125.12190247 104.23194885]
[138.52442932 110.96785736]
[151.92694092 117.70376587]
[166.76672363 112.96891022]
[180.26283264 119.99099731]
[184.68533325 134.16763306]
[198.08786011 140.90354919]
[211.49037170 147.63945007]
[224.89289856 154.37535095]
[238.29542542 161.11126709]
[248.80174255 151.48773193]
[261.93499756 146.04138184]
[276.10873413 145.40798950]
[289.61840820 149.64332581]
[300.84628296 158.21882629]
[308.45513916 170.08753967]
[311.54760742 183.81182861]
[309.77188110 197.73756409]
[323.06637573 204.68420410]
[336.36090088 211.63085938]
[349.65542603 218.57749939]
[362.94992065 225.52413940]
[376.24444580 232.47077942]
[389.53897095 239.41741943]
[403.37591553 232.39471436]
[418.69271851 234.87960815]
[429.59979248 245.91662598]
[431.90310669 261.26181030]
[424.71697998 275.01458740]
[410.80468750 281.88681030]
[395.51571655 279.23587036]
[384.72903442 268.08120728]
[382.59231567 252.71194458]
[369.29779053 245.76530457]
[356.00329590 238.81864929]
[342.70877075 231.87200928]
[329.41424561 224.92536926]
[316.11975098 217.97872925]
[302.82522583 211.03208923]
[290.83203125 221.38325500]
[275.74887085 226.35350037]
[259.87460327 225.15417480]
[245.64067078 217.93930054]
[235.23863220 205.78662109]
[230.28274536 190.53660583]
[231.55950928 174.51377869]
[218.15699768 167.77787781]
[204.75447083 161.04197693]
[191.35194397 154.30606079]
[177.94943237 147.57015991]
[163.93420410 152.48027039]
[150.24618530 145.84002686]
[145.19104004 131.10627747]
[131.78851318 124.37037659]
[118.38600159 117.63446808]
[111.37499237 120.29826355]
[119.90744781 132.63508606]
[128.43989563 144.97190857]
[140.86979675 153.36820984]
[146.04977417 167.44541931]
[142.02677917 181.89585876]
[130.31762695 191.27114868]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 18]
[7 17]
[8 16]
[19 109]
[20 108]
[21 107]
[22 106]
[23 105]
[24 104]
[25 103]
[26 102]
[27 101]
[28 100]
[30 98]
[31 97]
[32 96]
[37 92]
[38 91]
[39 90]
[40 89]
[41 88]
[42 87]
[43 86]
[48 70]
[49 69]
[50 68]
[51 67]
[52 66]
[53 64]
[54 63]
[55 62]
[77 84]
[78 83]
[114 136]
[115 135]
[116 134]
[117 133]
[118 132]
[119 131]
[120 128]
[121 127]
[122 126]
[137 191]
[138 190]
[139 189]
[142 186]
[143 185]
[144 184]
[145 183]
[146 182]
[154 175]
[155 174]
[156 173]
[157 172]
[158 171]
[159 170]
[160 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
