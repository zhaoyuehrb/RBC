%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:03:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAGGGGCGGGCCCGCCGGGAGCCAGGCCGCUCGGCGCCACGACCGGCCGAGAGGGGGGCCGGAUCCCGGACCAUGGCGGCGGCGGGGGGCGCCGAGGGGCGGCGCGCGGACAUGGAGGCGGAGGCGGCGGCAGCUCCUGAGCGGGAAGGCGGGAGCUGCGUGCUGUGCUGCG\
) } def
/len { sequence length } bind def

/coor [
[129.29846191 161.94721985]
[115.11821747 166.83807373]
[103.79242706 157.00311279]
[106.64712524 142.27677917]
[99.55695343 144.72207642]
[94.28633118 158.76559448]
[89.01570892 172.80911255]
[94.31460571 187.95181274]
[85.65770721 201.45877075]
[69.68585968 202.96859741]
[58.65129089 191.32308960]
[61.01877975 175.45568848]
[74.97219086 167.53849792]
[80.24281311 153.49496460]
[85.51343536 139.45144653]
[65.11870575 113.21247101]
[71.33281708 84.53524780]
[60.12578201 74.56517029]
[48.91874695 64.59510040]
[33.84251785 67.75949097]
[19.95612144 61.51277924]
[12.49892330 48.44165802]
[14.14871216 33.66274643]
[2.94167876 23.69267273]
[-8.26535511 13.72259808]
[-14.70482922 12.00120068]
[-18.68849182 7.88921022]
[-19.68747330 3.18784094]
[-30.52939606 -7.17809868]
[-41.37131882 -17.54403877]
[-56.69297409 -21.48834038]
[-60.54521942 -35.87616348]
[-71.38714600 -46.24210358]
[-82.22906494 -56.60804367]
[-93.07099152 -66.97398376]
[-103.91291046 -77.33992004]
[-114.75483704 -87.70586395]
[-125.59675598 -98.07180023]
[-136.43867493 -108.43774414]
[-147.28060913 -118.80368042]
[-150.41487122 -112.07180023]
[-156.30935669 -106.18609619]
[-164.67462158 -102.05190277]
[-174.95529175 -100.47152710]
[-186.36535645 -102.07138062]
[-200.26188660 -107.71821594]
[-214.15840149 -113.36504364]
[-228.05491638 -119.01187134]
[-241.95144653 -124.65869904]
[-255.84796143 -130.30552673]
[-268.95193481 -121.99495697]
[-284.43594360 -123.00748444]
[-296.34606934 -132.95378113]
[-300.10263062 -148.00926208]
[-294.26113892 -162.38482666]
[-281.06777954 -170.55274963]
[-265.59567261 -169.37231445]
[-253.79414368 -159.29740906]
[-250.20114136 -144.20205688]
[-236.30461121 -138.55522156]
[-222.40809631 -132.90838623]
[-208.51156616 -127.26156616]
[-194.61505127 -121.61473846]
[-180.71852112 -115.96790314]
[-169.96961975 -126.43121338]
[-159.22164917 -136.89358521]
[-164.49226379 -150.93710327]
[-169.76289368 -164.98062134]
[-175.03350830 -179.02415466]
[-180.30413818 -193.06767273]
[-196.35032654 -199.99436951]
[-202.32061768 -216.06103516]
[-194.98565674 -231.17823792]
[-200.50752258 -245.12489319]
[-214.60079956 -252.79032898]
[-217.25274658 -268.61267090]
[-206.42900085 -280.45437622]
[-190.43263245 -279.23150635]
[-181.53466797 -265.88214111]
[-186.56088257 -250.64675903]
[-181.03900146 -236.70010376]
[-168.59635925 -233.27804565]
[-160.28051758 -223.15664673]
[-159.30873108 -209.89796448]
[-166.26060486 -198.33830261]
[-160.98999023 -184.29476929]
[-155.71936035 -170.25125122]
[-150.44874573 -156.20773315]
[-145.17811584 -142.16419983]
[-136.91465759 -129.64559937]
[-126.07273865 -119.27966309]
[-115.23081970 -108.91372681]
[-104.38889313 -98.54778290]
[-93.54697418 -88.18184662]
[-82.70504761 -77.81590271]
[-71.86312866 -67.44996643]
[-61.02120209 -57.08402634]
[-50.17927933 -46.71808624]
[-35.63311386 -43.51522446]
[-31.00538063 -28.38596153]
[-20.16345787 -18.02002144]
[-9.32153416 -7.65408182]
[1.70472062 2.51556420]
[12.91175365 12.48563957]
[24.11878777 22.45571518]
[38.60512161 19.09653854]
[52.45554733 24.98124504]
[60.27647781 38.04594421]
[58.88882446 53.38806534]
[70.09585571 63.35813904]
[81.30289459 73.32821655]
[89.82930756 67.95218658]
[99.88866425 65.32667542]
[110.58734131 65.88088989]
[120.91533661 69.75244141]
[129.84152222 76.75741577]
[136.41590881 86.39153290]
[139.86888123 97.86372375]
[139.69700623 110.16015625]
[135.72639465 122.13372803]
[148.53355408 129.94248962]
[161.34071350 137.75123596]
[174.14787292 145.55999756]
[186.86611938 143.28544617]
[197.38055420 150.08003235]
[200.33526611 161.83178711]
[213.00018311 169.86918640]
[225.66510010 177.90660095]
[238.33001709 185.94400024]
[250.99493408 193.98139954]
[263.65985107 202.01879883]
[276.39642334 209.94219971]
[289.20358276 217.75096130]
[302.01071167 225.55972290]
[314.81787109 233.36846924]
[327.62503052 241.17723083]
[340.43218994 248.98599243]
[353.23934937 256.79473877]
[366.04650879 264.60351562]
[378.85366821 272.41226196]
[385.49703979 272.95617676]
[390.15090942 276.29080200]
[391.97329712 280.73822021]
[404.49188232 289.00167847]
[419.92272949 285.58636475]
[433.20388794 294.15298462]
[436.45587158 309.61907959]
[427.74932861 322.80889893]
[412.24972534 325.89718628]
[399.15267944 317.05169678]
[396.22842407 301.52029419]
[383.70983887 293.25683594]
[371.04492188 285.21942139]
[358.23776245 277.41067505]
[345.43060303 269.60189819]
[332.62344360 261.79315186]
[319.81628418 253.98439026]
[307.00912476 246.17562866]
[294.20196533 238.36688232]
[281.39480591 230.55812073]
[268.58764648 222.74935913]
[261.21505737 221.94924927]
[255.62245178 214.68371582]
[242.95753479 206.64631653]
[230.29261780 198.60891724]
[217.62770081 190.57151794]
[204.96278381 182.53410339]
[192.29786682 174.49670410]
[174.76458740 174.72329712]
[166.33911133 158.36715698]
[153.53195190 150.55839539]
[140.72479248 142.74963379]
[127.91764069 134.94088745]
[120.82746887 137.38618469]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 15]
[6 14]
[7 13]
[17 111]
[18 110]
[19 109]
[23 105]
[24 104]
[25 103]
[28 102]
[29 101]
[30 100]
[32 98]
[33 97]
[34 96]
[35 95]
[36 94]
[37 93]
[38 92]
[39 91]
[40 90]
[45 64]
[46 63]
[47 62]
[48 61]
[49 60]
[50 59]
[66 89]
[67 88]
[68 87]
[69 86]
[70 85]
[73 81]
[74 80]
[120 173]
[121 172]
[122 171]
[123 170]
[126 168]
[127 167]
[128 166]
[129 165]
[130 164]
[131 163]
[132 161]
[133 160]
[134 159]
[135 158]
[136 157]
[137 156]
[138 155]
[139 154]
[140 153]
[143 152]
[144 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
