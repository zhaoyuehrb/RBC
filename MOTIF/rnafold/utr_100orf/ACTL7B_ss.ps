%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:23:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAUCUCAUUUCUCCCCAGGGGGCUCUAGGCUGUGGAUGUGAGAAGGGGAGCAAGGGAGGCAGAUGGCGACAAGGAACAGCCCCAUGCCCCUGGGCACGGCUCAGGGUGACCCUGGAGAGGCAGGAACACGGCCCGGCCCUGACGCCAGCCUCCGGGACACAG\
) } def
/len { sequence length } bind def

/coor [
[71.21697998 280.52593994]
[66.47386932 294.75628662]
[61.73075485 308.98663330]
[56.98763657 323.21697998]
[52.24452209 337.44732666]
[59.53599548 351.46908569]
[54.69735718 366.51446533]
[40.59928513 373.65728760]
[25.60591316 368.65985107]
[18.61254692 354.48703003]
[23.76822472 339.54733276]
[38.01417160 332.70422363]
[42.75728989 318.47387695]
[47.50040436 304.24349976]
[52.24351883 290.01315308]
[56.98663330 275.78280640]
[60.77743912 261.26971436]
[63.59931183 246.53755188]
[66.42118835 231.80537415]
[64.58294678 224.61262512]
[69.43837738 216.82226562]
[72.53853607 202.14613342]
[75.63869476 187.46998596]
[78.73886108 172.79385376]
[81.83901978 158.11772156]
[84.93917847 143.44157410]
[88.03934479 128.76544189]
[75.32340240 115.68872833]
[72.69639587 98.79441071]
[79.83486938 84.52472687]
[92.92295074 77.58315277]
[93.20681763 62.58583832]
[93.49067688 47.58852768]
[93.77453613 32.59121323]
[94.05840302 17.59389877]
[94.34226227 2.59658480]
[94.62612152 -12.40072918]
[80.97955322 -25.49201012]
[81.18556976 -44.08326340]
[94.65013885 -56.43849182]
[94.36627197 -71.43580627]
[94.08241272 -86.43312073]
[78.53062439 -94.53591919]
[69.24908447 -109.30960846]
[68.70431519 -126.65962219]
[76.95592499 -141.83056641]
[91.66484070 -150.70957947]
[90.81365967 -165.68540955]
[89.96247864 -180.66123962]
[89.11129761 -195.63706970]
[77.60254669 -206.13403320]
[76.95266724 -221.33378601]
[87.03085327 -232.24093628]
[86.17967224 -247.21676636]
[81.93761444 -247.82096863]
[77.70568085 -249.38368225]
[73.70261383 -251.91912842]
[70.15199280 -255.39166260]
[67.27085876 -259.71450806]
[65.25816345 -264.75143433]
[64.28366089 -270.32058716]
[60.35569763 -284.79714966]
[56.42773056 -299.27371216]
[52.49976349 -313.75030518]
[38.14810181 -319.34814453]
[29.94045448 -332.17343140]
[30.84787369 -347.19476318]
[40.31316757 -358.66412354]
[36.38520050 -373.14068604]
[32.45723343 -387.61727905]
[17.50151062 -390.87072754]
[5.77827692 -400.71066284]
[-0.01855204 -414.87594604]
[1.44309211 -430.11148071]
[9.82733440 -442.91629028]
[23.20753670 -450.34790039]
[38.50902557 -450.69857788]
[52.21563339 -443.88775635]
[61.17768097 -431.48046875]
[63.33575439 -416.32788086]
[58.19394684 -401.91189575]
[46.93380356 -391.54522705]
[50.86177063 -377.06866455]
[54.78973770 -362.59210205]
[68.75412750 -357.47998047]
[77.12968445 -344.97741699]
[76.53026581 -329.76248169]
[66.97633362 -317.67825317]
[70.90429688 -303.20169067]
[74.83226776 -288.72512817]
[78.76023102 -274.24856567]
[93.49240875 -271.42666626]
[102.49190521 -283.42706299]
[111.49139404 -295.42742920]
[120.49088287 -307.42782593]
[129.49037170 -319.42819214]
[138.48986816 -331.42858887]
[147.48936462 -343.42895508]
[152.15507507 -359.72827148]
[169.10899353 -359.75698853]
[173.82991028 -343.47357178]
[159.48974609 -334.42947388]
[150.49024963 -322.42910767]
[141.49075317 -310.42871094]
[132.49127197 -298.42834473]
[123.49177551 -286.42794800]
[114.49228668 -274.42758179]
[105.49279022 -262.42718506]
[101.15550232 -248.06794739]
[102.00668335 -233.09211731]
[113.25582123 -223.39714050]
[114.33237457 -208.22164917]
[104.08712769 -196.48825073]
[104.93830872 -181.51242065]
[105.78948975 -166.53659058]
[106.64067078 -151.56076050]
[118.51210022 -147.09954834]
[127.83841705 -138.43681335]
[133.20147705 -126.84133911]
[133.76742554 -114.03134918]
[129.41619873 -101.91995239]
[120.76471710 -92.32940674]
[109.07972717 -86.71697998]
[109.36358643 -71.71966553]
[109.64745331 -56.72235107]
[119.42608643 -50.74573135]
[125.14696503 -40.67687988]
[125.27797699 -28.97686958]
[119.67004395 -18.57088089]
[109.62343597 -12.11686707]
[109.33957672 2.88044667]
[109.05570984 17.87775993]
[108.77185059 32.87507248]
[108.48799133 47.87238693]
[108.20412445 62.86970139]
[107.92026520 77.86701202]
[125.70189667 90.70738220]
[126.82711792 115.83709717]
[138.11251831 125.71839142]
[149.39790344 135.59968567]
[165.14897156 134.30364990]
[177.14888000 144.58847046]
[178.27832031 160.35234070]
[167.86720276 172.24285889]
[152.09225464 173.20556641]
[140.31248474 162.66931152]
[139.51661682 146.88507080]
[128.23121643 137.00378418]
[116.94583130 127.12248993]
[102.71547699 131.86560059]
[99.61531830 146.54174805]
[96.51515961 161.21788025]
[93.41499329 175.89401245]
[90.31483459 190.57015991]
[87.21467590 205.24629211]
[84.11450958 219.92242432]
[81.15336609 234.62724304]
[78.33148956 249.35942078]
[75.50962067 264.09158325]
[88.05666351 255.87139893]
[102.97004700 257.48104858]
[113.47409821 268.18920898]
[114.79645538 283.13082886]
[106.33632660 295.51736450]
[91.93743896 299.72119141]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 16]
[2 15]
[3 14]
[4 13]
[5 12]
[17 159]
[18 158]
[19 157]
[21 156]
[22 155]
[23 154]
[24 153]
[25 152]
[26 151]
[27 150]
[31 136]
[32 135]
[33 134]
[34 133]
[35 132]
[36 131]
[37 130]
[40 125]
[41 124]
[42 123]
[47 116]
[48 115]
[49 114]
[50 113]
[53 110]
[54 109]
[61 91]
[62 90]
[63 89]
[64 88]
[68 84]
[69 83]
[70 82]
[92 108]
[93 107]
[94 106]
[95 105]
[96 104]
[97 103]
[98 102]
[138 149]
[139 148]
[140 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
