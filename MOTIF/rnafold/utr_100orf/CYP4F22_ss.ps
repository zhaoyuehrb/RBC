%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:37:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAUCCCAGGUAGUGGCGCCGGUGGAUCCGGAUCGAGGGCAGGAGGCUGAGACCCGCGGGAGCUGGCCCUAAAGCAAGGACCUGAGUGCAAGUAAUUUUUUUGGGAAGUAAUAACAGAAAAUACCAGCAAGGAAGAAGACAGUGAACCCAAAAGAAUUGAAAACAGGAUGCUGCCCAUCACAGACCGCCUGCUGCACCUCCUGGGGCUGGAGAAGACGGCGUUCCGCAUAUACGCGGUGUCCACCCUUCUCCUCU\
UCCUGCUCUUCU\
) } def
/len { sequence length } bind def

/coor [
[34.65488434 329.49926758]
[17.56934738 331.84381104]
[12.40234470 345.92578125]
[7.23534203 360.00778198]
[2.06833935 374.08975220]
[-3.09866357 388.17172241]
[4.54092932 403.92715454]
[-1.47581518 420.01016235]
[-16.95849991 426.61685181]
[-21.96007729 440.75842285]
[-26.96165466 454.89999390]
[-19.92683983 469.05227661]
[-25.03877449 484.00701904]
[-39.26463699 490.89178467]
[-54.16447449 485.62203979]
[-60.89847946 471.32418823]
[-55.47148514 456.48089600]
[-41.10323334 449.89843750]
[-36.10165405 435.75683594]
[-31.10007668 421.61526489]
[-38.21699142 410.89791870]
[-37.86712646 397.84307861]
[-29.95441055 387.21035767]
[-17.18064117 383.00473022]
[-12.01363754 368.92272949]
[-6.84663534 354.84075928]
[-1.67963243 340.75878906]
[3.48737025 326.67681885]
[-5.58121872 317.93457031]
[-10.69957161 306.37408447]
[-11.07878590 293.69021606]
[-6.62762451 281.75717163]
[2.02880096 272.35153198]
[13.63657475 266.88766479]
[26.49453735 266.20523071]
[31.99023819 252.24826050]
[37.48593903 238.29127502]
[42.98163986 224.33430481]
[48.47734070 210.37731934]
[53.97304153 196.42034912]
[59.46874237 182.46336365]
[64.96443939 168.50637817]
[70.46014404 154.54940796]
[75.95584106 140.59242249]
[81.45154572 126.63544464]
[86.94724274 112.67846680]
[80.80179596 101.40547943]
[83.53179169 88.12605286]
[94.75122070 79.29960632]
[109.73575592 79.81704712]
[107.98142242 64.91999054]
[103.88250732 56.79646683]
[106.29489899 49.83815765]
[104.71530914 34.92155838]
[103.13572693 20.00496101]
[99.13232422 11.83395004]
[101.62610626 4.90439749]
[100.22148132 -10.02969265]
[98.81686401 -24.96378136]
[97.41223907 -39.89787292]
[96.00762177 -54.83196259]
[94.60299683 -69.76605225]
[89.26049805 -65.35072327]
[82.56446075 -62.28517532]
[74.81114960 -60.85903168]
[59.98498917 -63.13605499]
[45.17021179 -57.58330917]
[33.76496887 -67.16296387]
[18.93880653 -69.43998718]
[4.11264086 -71.71701050]
[-8.47972965 -62.16673279]
[-24.12535477 -64.40055847]
[-33.54196167 -77.09319305]
[-31.14284706 -92.71433258]
[-18.35136032 -101.99621582]
[-2.75646520 -99.43207550]
[6.38966417 -86.54317474]
[21.21582794 -84.26615143]
[36.04199219 -81.98912811]
[49.79630280 -87.70474243]
[62.26201248 -77.96221924]
[77.08817291 -75.68519592]
[67.19184875 -86.95740509]
[72.93371582 -100.81493378]
[87.90235901 -101.78433990]
[95.38362885 -88.78201294]
[98.00758362 -103.55072021]
[100.63154602 -118.31943512]
[103.25550842 -133.08815002]
[105.87947083 -147.85685730]
[91.15582275 -159.38175964]
[87.86682892 -180.54443359]
[101.35370636 -200.57279968]
[98.55680084 -215.30973816]
[95.75990295 -230.04667664]
[92.96299744 -244.78361511]
[90.16609955 -259.52056885]
[87.36920166 -274.25750732]
[84.57229614 -288.99444580]
[81.77539825 -303.73138428]
[78.97849274 -318.46832275]
[76.18159485 -333.20526123]
[73.38469696 -347.94219971]
[70.58779144 -362.67913818]
[67.79089355 -377.41607666]
[55.63344574 -371.02239990]
[39.20617294 -372.24978638]
[22.69772720 -382.91964722]
[15.14702511 -395.88064575]
[0.65205628 -403.55056763]
[0.31740898 -419.94631958]
[14.48733902 -428.20132446]
[28.58503723 -419.82354736]
[28.10800171 -403.43133545]
[35.65870285 -390.47036743]
[42.74402618 -392.92965698]
[37.82542038 -407.10031128]
[32.90681458 -421.27096558]
[27.98843002 -435.44168091]
[42.15923309 -440.35986328]
[47.07746506 -426.18957520]
[51.99607086 -412.01892090]
[56.91467667 -397.84826660]
[64.00000000 -400.30758667]
[61.89693069 -415.15942383]
[49.99006271 -425.91143799]
[51.11630630 -441.91491699]
[64.41169739 -450.89334106]
[79.67715454 -445.95922852]
[85.20232391 -430.89761353]
[76.74876404 -417.26248169]
[78.85183716 -402.41064453]
[83.48161316 -416.67828369]
[93.07934570 -428.20578003]
[106.27195740 -435.34405518]
[121.17211914 -437.07186890]
[135.64817810 -433.14202881]
[147.62918091 -424.11676025]
[155.40110779 -411.28720093]
[157.85209656 -396.48880005]
[154.63151550 -381.83862305]
[146.20008850 -369.43252563]
[133.76403809 -361.04534912]
[119.10247803 -357.87698364]
[104.31290436 -360.38070679]
[91.51113892 -368.19827271]
[82.52783203 -380.21295166]
[85.32472992 -365.47601318]
[88.12163544 -350.73907471]
[90.91853333 -336.00213623]
[93.71543121 -321.26519775]
[96.51233673 -306.52825928]
[99.30923462 -291.79132080]
[102.10614014 -277.05441284]
[104.90303802 -262.31747437]
[107.69993591 -247.58052063]
[110.49684143 -232.84358215]
[113.29373932 -218.10664368]
[116.09063721 -203.36970520]
[122.95054626 -200.33793640]
[129.01431274 -214.05766296]
[142.73393250 -207.99368286]
[136.67036438 -194.27438354]
[143.53027344 -191.24261475]
[156.31068420 -199.09507751]
[169.09109497 -206.94754028]
[181.87149048 -214.80001831]
[182.95741272 -231.69598389]
[193.80232239 -244.48010254]
[209.97094727 -248.23094177]
[225.03158569 -241.66029358]
[237.71907043 -249.66203308]
[250.40655518 -257.66378784]
[252.33891296 -273.18151855]
[263.82891846 -283.78875732]
[279.45132446 -284.47711182]
[291.82974243 -274.92153931]
[295.11944580 -259.63391113]
[287.76712036 -245.83255005]
[273.24435425 -240.03405762]
[258.40829468 -244.97630310]
[245.72080994 -236.97456360]
[233.03332520 -228.97282410]
[233.40089417 -215.64628601]
[227.09260559 -203.77902222]
[215.65789795 -196.51321411]
[202.01889038 -195.83206177]
[189.72396851 -202.01960754]
[176.94355774 -194.16714478]
[164.16314697 -186.31468201]
[151.38273621 -178.46220398]
[142.10505676 -152.67002869]
[120.64817810 -145.23289490]
[118.02421570 -130.46418762]
[115.40026093 -115.69547272]
[112.77629852 -100.92675781]
[110.15233612 -86.15805054]
[109.53708649 -71.17067719]
[110.94171143 -56.23658371]
[112.34632874 -41.30249405]
[113.75095367 -26.36840439]
[115.15557861 -11.43431473]
[116.56019592 3.49977517]
[118.05233002 18.42537498]
[119.63191223 33.34197617]
[121.21149445 48.25857162]
[122.87847900 63.16565704]
[124.63281250 78.06271362]
[131.80049133 91.23937225]
[143.35369873 100.80615234]
[154.90692139 110.37293243]
[166.46012878 119.93970490]
[178.01335144 129.50648499]
[189.56655884 139.07325745]
[201.11978149 148.64004517]
[219.92965698 146.16674805]
[234.30397034 158.05172729]
[235.37170410 176.35157776]
[247.14601135 185.64489746]
[258.92031860 194.93820190]
[270.69464111 204.23152161]
[277.11660767 205.54924011]
[281.30203247 209.32919312]
[282.63265991 213.88330078]
[294.18588257 223.45008850]
[305.73910522 233.01686096]
[317.29229736 242.58364868]
[333.00170898 240.85435486]
[345.28027344 250.80484009]
[346.84338379 266.53164673]
[336.76364136 278.70431519]
[321.02117920 280.10107422]
[308.95574951 269.89318848]
[307.72552490 254.13685608]
[296.17230225 244.57008362]
[284.61911011 235.00329590]
[273.06588745 225.43652344]
[261.40130615 216.00582886]
[249.62701416 206.71250916]
[237.85270691 197.41920471]
[226.07839966 188.12588501]
[215.34613037 191.87622070]
[204.01611328 189.97579956]
[194.90707397 182.78067017]
[190.34127808 171.97836304]
[191.55299377 160.19325256]
[179.99978638 150.62648010]
[168.44656372 141.05970764]
[156.89335632 131.49291992]
[145.34014893 121.92614746]
[133.78692627 112.35936737]
[122.23371124 102.79258728]
[113.80598450 114.88581085]
[100.90422058 118.17416382]
[95.40852356 132.13114929]
[89.91281891 146.08811951]
[84.41712189 160.04510498]
[78.92141724 174.00209045]
[73.42572021 187.95906067]
[67.93002319 201.91604614]
[62.43431854 215.87301636]
[56.93861771 229.83000183]
[51.44291687 243.78698730]
[45.94721603 257.74395752]
[40.45151520 271.70092773]
[51.72132492 285.22329712]
[54.55455017 302.50619507]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 28]
[3 27]
[4 26]
[5 25]
[6 24]
[9 20]
[10 19]
[11 18]
[35 265]
[36 264]
[37 263]
[38 262]
[39 261]
[40 260]
[41 259]
[42 258]
[43 257]
[44 256]
[45 255]
[46 254]
[50 208]
[51 207]
[53 206]
[54 205]
[55 204]
[57 203]
[58 202]
[59 201]
[60 200]
[61 199]
[62 198]
[65 82]
[66 81]
[68 79]
[69 78]
[70 77]
[86 197]
[87 196]
[88 195]
[89 194]
[90 193]
[93 159]
[94 158]
[95 157]
[96 156]
[97 155]
[98 154]
[99 153]
[100 152]
[101 151]
[102 150]
[103 149]
[104 148]
[105 147]
[108 115]
[109 114]
[124 132]
[125 131]
[164 191]
[165 190]
[166 189]
[167 188]
[171 183]
[172 182]
[173 181]
[209 252]
[210 251]
[211 250]
[212 249]
[213 248]
[214 247]
[215 246]
[218 241]
[219 240]
[220 239]
[221 238]
[224 237]
[225 236]
[226 235]
[227 234]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
