%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:50:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGCCGUCGUGGAAGCAGGAUUUCCGCGGUUGUGUAACGGCCUGUCGCAGGCGUGCAGGGACCUGGACUCCGCCUCGUCCCCGGGGCUCGGGCAGCCGAGCCAUGGCGGGGAACUGUGGGGCCCGCGGCGCGCUGUCGGCGCACACGCUGCUGUUCGACCUGCCGCCCGCGCUGCUCGGAGAGCUCUGCGCUGUUCUGGACA\
) } def
/len { sequence length } bind def

/coor [
[-79.01499176 363.98358154]
[-87.64984894 369.86172485]
[-97.87487030 370.00997925]
[-107.31768036 381.66473389]
[-116.76049042 393.31948853]
[-126.20330811 404.97424316]
[-135.64611816 416.62899780]
[-144.34983826 428.84561157]
[-152.28111267 441.57723999]
[-160.21240234 454.30889893]
[-168.14367676 467.04052734]
[-176.07496643 479.77218628]
[-184.00624084 492.50381470]
[-191.93753052 505.23547363]
[-199.86882019 517.96710205]
[-197.65359497 533.85650635]
[-208.79933167 545.39562988]
[-224.75596619 543.73272705]
[-233.28294373 530.14337158]
[-227.83908081 515.05218506]
[-212.60046387 510.03582764]
[-204.66917419 497.30419922]
[-196.73788452 484.57254028]
[-188.80661011 471.84091187]
[-180.87532043 459.10925293]
[-172.94404602 446.37762451]
[-165.01275635 433.64596558]
[-157.08148193 420.91430664]
[-171.44868469 425.22518921]
[-185.64495850 420.38104248]
[-194.38023376 408.18698120]
[-194.39944458 393.18701172]
[-185.69540405 380.97064209]
[-171.51158142 376.09014893]
[-157.13339233 380.36422729]
[-147.91868591 392.20013428]
[-147.30087280 407.18618774]
[-137.85806274 395.53143311]
[-128.41525269 383.87667847]
[-118.97243500 372.22192383]
[-109.52962494 360.56716919]
[-107.91204071 341.30252075]
[-88.99176788 334.35864258]
[-79.91415405 322.41726685]
[-70.83654022 310.47586060]
[-61.75892639 298.53445435]
[-60.21268082 291.30242920]
[-52.44727707 286.47994995]
[-43.18595505 274.68048096]
[-33.92463303 262.88098145]
[-24.75489235 251.01019287]
[-15.67727947 239.06878662]
[-6.69233799 227.05751038]
[2.19939232 214.97706604]
[11.09112263 202.89662170]
[19.98285294 190.81617737]
[28.87458420 178.73573303]
[37.76631546 166.65528870]
[46.65804672 154.57484436]
[55.54977798 142.49440002]
[53.06393433 127.85349274]
[61.90932083 115.47554016]
[77.28290558 112.96743011]
[86.17463684 100.88698578]
[89.28574371 86.21316528]
[86.06118774 71.56385803]
[75.53815460 59.74961853]
[80.35857391 45.65660858]
[77.13401794 31.00730133]
[73.90946198 16.35799408]
[70.68489838 1.70868540]
[67.46034241 -12.94062328]
[64.23578644 -27.58993149]
[51.22501373 -32.15179062]
[42.23986435 -42.46606445]
[39.54765701 -55.76715088]
[43.74706268 -68.55796814]
[53.63902283 -77.52935791]
[50.64155579 -92.22681427]
[47.64408493 -106.92427063]
[44.64661407 -121.62172699]
[41.64914703 -136.31918335]
[38.65167618 -151.01663208]
[23.49050522 -166.15518188]
[30.83220291 -185.44053650]
[27.15584183 -199.98303223]
[23.47948265 -214.52554321]
[19.80312157 -229.06803894]
[16.12676239 -243.61054993]
[12.45040226 -258.15304565]
[8.77404213 -272.69555664]
[-3.03801322 -284.07128906]
[1.16972983 -299.92141724]
[17.06870651 -303.94070435]
[28.30341148 -291.99444580]
[23.31654549 -276.37191772]
[26.99290466 -261.82940674]
[30.66926384 -247.28691101]
[34.34562302 -232.74440002]
[38.02198410 -218.20190430]
[41.69834518 -203.65939331]
[45.37470627 -189.11689758]
[53.64926147 -185.86686707]
[59.58802414 -179.06774902]
[61.76123810 -170.16394043]
[59.55759430 -161.12586975]
[53.34913254 -154.01409912]
[56.34659958 -139.31665039]
[59.34407043 -124.61919403]
[62.34154129 -109.92173767]
[65.33901215 -95.22428131]
[68.33647919 -80.52683258]
[83.48538971 -74.21083832]
[91.97157288 -59.96836853]
[90.28193665 -43.30867386]
[78.88509369 -30.81448746]
[82.10965729 -16.16518021]
[85.33421326 -1.51587117]
[88.55876923 13.13343716]
[91.78332520 27.78274536]
[95.00788116 42.43205261]
[105.30027771 53.19847870]
[100.71049500 68.33930206]
[103.93505096 82.98860931]
[115.94633484 91.97354889]
[130.90997314 90.92977905]
[145.87361145 89.88600159]
[160.83724976 88.84223175]
[175.80088806 87.79845428]
[190.76454163 86.75467682]
[205.72817993 85.71090698]
[220.67387390 84.43569183]
[235.59803772 82.92934418]
[248.55145264 73.84529877]
[261.99139404 80.26536560]
[276.91555786 78.75901794]
[289.86895752 69.67497253]
[303.30889893 76.09504700]
[318.23306274 74.58869171]
[333.14514160 72.96691132]
[348.04421997 71.22978973]
[360.85549927 61.94637299]
[374.39315796 68.15769196]
[389.29223633 66.42056274]
[404.19131470 64.68344116]
[413.79946899 52.13516998]
[429.47720337 50.13903809]
[441.92318726 59.87931442]
[443.75344849 75.57726288]
[433.88211060 87.91957092]
[418.16571045 89.58377075]
[405.92843628 79.58251190]
[391.02935791 81.31964111]
[376.13031006 83.05676270]
[364.38470459 92.21592712]
[349.78134155 86.12886047]
[334.88226318 87.86598206]
[328.59848022 91.76562500]
[319.73941040 89.51287079]
[304.81524658 91.01921844]
[292.92932129 99.99552155]
[278.42190552 93.68318939]
[263.49774170 95.18953705]
[251.61180115 104.16584015]
[237.10440063 97.85351562]
[222.18022156 99.35986328]
[218.51570129 102.43167877]
[212.88085938 103.22988892]
[206.77194214 100.67454529]
[191.80830383 101.71832275]
[176.84466553 102.76209259]
[161.88102722 103.80587006]
[146.91738892 104.84963989]
[131.95375061 105.89341736]
[116.99010468 106.93718719]
[113.17179871 110.21412659]
[108.93964386 112.02553558]
[104.77634430 112.41342926]
[101.10616302 111.56411743]
[98.25508118 109.77871704]
[89.36334991 121.85916138]
[91.53790283 137.28346252]
[82.34833527 149.40808105]
[67.63021851 151.38613892]
[58.73849106 163.46658325]
[49.84675980 175.54702759]
[40.95502853 187.62747192]
[32.06329727 199.70791626]
[23.17156792 211.78836060]
[14.27983665 223.86880493]
[5.38810587 235.94924927]
[2.81888032 244.72174072]
[-3.73588300 248.14640808]
[-12.81349659 260.08779907]
[-15.51817036 268.81948853]
[-22.12514687 272.14230347]
[-31.38646889 283.94180298]
[-40.64778900 295.74127197]
[-49.81753159 307.61209106]
[-58.89514542 319.55346680]
[-67.97275543 331.49487305]
[-77.05036926 343.43627930]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 41]
[4 40]
[5 39]
[6 38]
[7 37]
[8 28]
[9 27]
[10 26]
[11 25]
[12 24]
[13 23]
[14 22]
[15 21]
[43 202]
[44 201]
[45 200]
[46 199]
[48 198]
[49 197]
[50 196]
[51 194]
[52 193]
[53 191]
[54 190]
[55 189]
[56 188]
[57 187]
[58 186]
[59 185]
[60 184]
[63 181]
[64 180]
[65 124]
[66 123]
[68 121]
[69 120]
[70 119]
[71 118]
[72 117]
[73 116]
[78 112]
[79 111]
[80 110]
[81 109]
[82 108]
[83 107]
[85 102]
[86 101]
[87 100]
[88 99]
[89 98]
[90 97]
[91 96]
[125 175]
[126 174]
[127 173]
[128 172]
[129 171]
[130 170]
[131 169]
[132 166]
[133 165]
[135 163]
[136 162]
[138 160]
[139 159]
[140 157]
[141 156]
[143 154]
[144 153]
[145 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
