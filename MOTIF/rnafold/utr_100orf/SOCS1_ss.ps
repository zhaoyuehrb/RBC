%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:14:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCAGCUGCACGGCUCCUGGCCCCGGAGCAUGCGCGAGAGCCGCCCCGGAGCGCCCCGGAGCCCCCCGCCGUCCCGCCCGCGGCGUCCCGCGCCCCGCCGCCAGCGCACCCCCGGACGCUAUGGCCCACCCCUCCGGCUGGCCCCUUCUGUAGGAUGGUAGCACACAACCAGGUGGCAGCCGACAAUGCAGUCUCCACAGCAGCAGAGCCCCGACGGCGGCCAGAACCUUCCUCCUCUUCCUCCUCCUCGCCCG\
) } def
/len { sequence length } bind def

/coor [
[184.82592773 319.92248535]
[179.06433105 306.07315063]
[173.30274963 292.22381592]
[161.27037048 283.44482422]
[163.11340332 267.73132324]
[157.35182190 253.88198853]
[151.59024048 240.03265381]
[145.82864380 226.18331909]
[129.73545837 222.88061523]
[118.67877960 210.50552368]
[117.17224121 193.81202698]
[126.00836182 179.37348938]
[120.07659149 165.59617615]
[114.14482117 151.81887817]
[108.21305847 138.04156494]
[102.28128815 124.26426697]
[88.34764862 121.40517426]
[78.38315582 111.25482178]
[75.78202820 97.27072144]
[62.11669159 91.08538055]
[48.45135117 84.90003204]
[34.78601074 78.71469116]
[21.04550934 72.69816589]
[7.23192549 66.85137939]
[-6.58165693 61.00458908]
[-20.39524078 55.15780258]
[-34.20882416 49.31101608]
[-48.02240372 43.46422577]
[-65.20320892 57.29770279]
[-87.04945374 59.46062088]
[-106.42359924 49.36149979]
[-117.05879211 30.39632225]
[-132.05168152 30.85824776]
[-147.04455566 31.32017326]
[-162.03744507 31.78209877]
[-177.03033447 32.24402618]
[-190.58569336 40.40263367]
[-203.54519653 33.06093979]
[-218.53808594 33.52286530]
[-233.52783203 34.07713699]
[-248.51390076 34.72373581]
[-263.49993896 35.37033463]
[-278.48602295 36.01693344]
[-293.47207642 36.66352844]
[-305.07379150 49.77412415]
[-322.23059082 50.41089630]
[-334.28750610 38.66806793]
[-349.26446533 39.49924088]
[-364.24142456 40.33041382]
[-377.59164429 48.82051468]
[-390.72808838 41.80033875]
[-405.70504761 42.63151169]
[-420.68200684 43.46268082]
[-427.43038940 51.94797134]
[-437.52151489 55.26524734]
[-447.56497192 52.55311966]
[-454.32339478 44.93490601]
[-469.31628418 45.39683151]
[-484.30917358 45.85875702]
[-494.95108032 57.54315567]
[-510.74185181 58.19683838]
[-522.31304932 47.43198013]
[-522.79974365 31.63518715]
[-511.91317749 20.17841339]
[-496.11212158 19.85876083]
[-484.77108765 30.86587143]
[-469.77819824 30.40394592]
[-454.78530884 29.94202042]
[-439.10339355 18.60238838]
[-421.51318359 28.48572922]
[-406.53622437 27.65455627]
[-391.55926514 26.82338524]
[-379.28027344 18.39273453]
[-365.07257080 25.35346031]
[-350.09564209 24.52228737]
[-335.11868286 23.69111443]
[-327.96655273 12.99267197]
[-315.77951050 8.28864193]
[-302.91690063 11.50137806]
[-294.11865234 21.67747307]
[-279.13259888 21.03087425]
[-264.14654541 20.38427544]
[-249.16049194 19.73767853]
[-234.17443848 19.09107971]
[-227.64576721 15.67253113]
[-219.00000000 18.52997971]
[-204.00712585 18.06805229]
[-191.52415466 9.94248581]
[-177.49226379 17.25113869]
[-162.49937439 16.78921318]
[-147.50648499 16.32728767]
[-132.51359558 15.86536121]
[-117.52071381 15.40343571]
[-115.52136993 8.11304188]
[-112.11774445 1.36303401]
[-107.44469452 -4.57917118]
[-101.68733978 -9.47816181]
[-107.61911011 -23.25546646]
[-113.55087280 -37.03277206]
[-119.48264313 -50.81007767]
[-131.14065552 -56.28550720]
[-135.80511475 -67.86037445]
[-131.48629761 -79.14083862]
[-137.24787903 -92.99018097]
[-143.00946045 -106.83951569]
[-148.77105713 -120.68885040]
[-160.36071777 -126.30748749]
[-164.88221741 -137.93894958]
[-160.42475891 -149.16534424]
[-166.01528931 -163.08460999]
[-177.52928162 -175.52906799]
[-168.75854492 -190.03805542]
[-152.38859558 -185.62657166]
[-152.09602356 -168.67514038]
[-146.50549316 -154.75587463]
[-132.13311768 -144.66531372]
[-134.92172241 -126.45043945]
[-129.16012573 -112.60110474]
[-123.39854431 -98.75176239]
[-117.63695526 -84.90242767]
[-103.14135742 -74.98969269]
[-105.70533752 -56.74184418]
[-99.77357483 -42.96453857]
[-93.84180450 -29.18723488]
[-87.91003418 -15.40993023]
[-77.19678497 -16.22269440]
[-66.65478516 -14.00067806]
[-57.12881851 -8.90502548]
[-49.38697052 -1.32783139]
[-44.05870438 8.13799000]
[-41.58370209 18.74508286]
[-42.17561722 29.65064430]
[-28.36203384 35.49743271]
[-14.54845142 41.34421921]
[-0.73486900 47.19100952]
[13.07871342 53.03779602]
[26.89229584 58.88458252]
[31.55284691 57.96482468]
[36.84274673 59.94343567]
[40.97135544 65.04934692]
[54.63669586 71.23469543]
[68.30204010 77.42003632]
[81.96737671 83.60538483]
[100.00000000 75.62873077]
[118.03262329 83.60538483]
[131.69796753 77.42003632]
[141.07971191 64.68059540]
[155.86506653 66.48127747]
[169.53041077 60.29593658]
[183.19573975 54.11059189]
[196.86108398 47.92524719]
[203.36614990 41.55356598]
[210.73309326 41.74903107]
[224.47358704 35.73250961]
[238.21409607 29.71598625]
[234.47254944 15.00171280]
[244.82991028 -2.26644850]
[257.63156128 -10.08422184]
[270.43322754 -17.90199471]
[278.17834473 -31.69778633]
[293.07290649 -31.72769737]
[305.87457275 -39.54547119]
[311.54733276 -46.66825104]
[318.88244629 -47.37957764]
[331.77944946 -55.03904724]
[344.67645264 -62.69851685]
[348.33514404 -78.07347870]
[361.83758545 -86.28684998]
[377.17300415 -82.46579742]
[385.24316406 -68.87727356]
[381.26019287 -53.58310699]
[367.58709717 -45.65706253]
[352.33590698 -49.80151749]
[339.43890381 -42.14204788]
[326.54193115 -34.48258209]
[313.69235229 -26.74381447]
[300.89068604 -18.92604065]
[294.06124878 -5.68942833]
[278.25100708 -5.10033798]
[265.44934082 2.71743512]
[252.64768982 10.53520870]
[257.37072754 24.77223206]
[272.30676270 23.38820648]
[287.24276733 22.00418091]
[297.14520264 9.68681812]
[312.86575317 8.06228447]
[325.07775879 18.09438705]
[326.53598022 33.83125687]
[316.37533569 45.93648911]
[300.62393188 47.22826385]
[288.62680054 36.94019318]
[273.69076538 38.32421875]
[258.75476074 39.70824432]
[244.23062134 43.45648956]
[230.49011230 49.47301483]
[216.74961853 55.48953629]
[203.04643250 61.59058762]
[189.38108826 67.77593231]
[175.71574402 73.96127319]
[162.05041504 80.14662170]
[153.64610291 92.44364929]
[137.88330078 91.08538055]
[124.21797180 97.27072144]
[123.84096527 105.05639648]
[121.02516174 112.32482910]
[116.05859375 118.33249664]
[121.99036407 132.10980225]
[127.92212677 145.88711548]
[133.85389709 159.66441345]
[139.78565979 173.44171143]
[153.40484619 175.45941162]
[164.16769409 183.87057495]
[169.33436584 196.39851379]
[167.65670776 209.73678589]
[159.67799377 220.42172241]
[165.43957520 234.27105713]
[171.20115662 248.12040710]
[176.96273804 261.96972656]
[189.40724182 271.73934937]
[187.15208435 286.46224976]
[192.91368103 300.31158447]
[198.67526245 314.16091919]
[213.37037659 310.95260620]
[228.40222168 310.41995239]
[243.28755188 312.58013916]
[257.54791260 317.36367798]
[270.72485352 324.61682129]
[282.39480591 334.10641479]
[292.18261719 345.52737427]
[299.77365112 358.51257324]
[304.92391968 372.64462280]
[307.46783447 387.46920776]
[307.32360840 402.50979614]
[304.49591064 417.28286743]
[299.07559204 431.31353760]
[291.23696899 444.15081787]
[281.23193359 455.38198853]
[269.38217163 464.64605713]
[256.06857300 471.64517212]
[241.71911621 476.15438843]
[226.79508972 478.02874756]
[211.77622986 477.20797729]
[197.14533997 473.71847534]
[183.37272644 467.67239380]
[170.90113831 459.26412964]
[160.13146973 448.76391602]
[151.40994263 436.50933838]
[145.01689148 422.89431763]
[141.15785217 408.35653687]
[139.95684814 393.36328125]
[141.45251465 378.39657593]
[145.59677124 363.93746948]
[152.25636292 350.45083618]
[161.21725464 338.37017822]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 222]
[2 221]
[3 220]
[5 218]
[6 217]
[7 216]
[8 215]
[12 210]
[13 209]
[14 208]
[15 207]
[16 206]
[19 143]
[20 142]
[21 141]
[22 140]
[23 137]
[24 136]
[25 135]
[26 134]
[27 133]
[28 132]
[32 93]
[33 92]
[34 91]
[35 90]
[36 89]
[38 87]
[39 86]
[40 84]
[41 83]
[42 82]
[43 81]
[44 80]
[47 76]
[48 75]
[49 74]
[51 72]
[52 71]
[53 70]
[57 68]
[58 67]
[59 66]
[97 125]
[98 124]
[99 123]
[100 122]
[103 120]
[104 119]
[105 118]
[106 117]
[109 115]
[110 114]
[145 203]
[146 202]
[148 200]
[149 199]
[150 198]
[151 197]
[153 196]
[154 195]
[155 194]
[157 181]
[158 180]
[159 179]
[161 177]
[162 176]
[164 175]
[165 174]
[166 173]
[182 193]
[183 192]
[184 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
