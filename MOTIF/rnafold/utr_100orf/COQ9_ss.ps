%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:56:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGACGACUUCCGCCCUCCUUAGGGCCGUGGUCCCGUAGCUACCGGUCGCGUCGCCGUGGGCGACGUGCCCGCUUCCAAAAUGGCGGCGGCGGCGGUAUCUGGUGCGCUUGGCCGGGCGGGCUGGAGGCUCCUGCAGCUGCGAUGCCUGCCCGUGGCCCGUUGCCGACAAGCCCUGGUGC\
) } def
/len { sequence length } bind def

/coor [
[23.38731766 218.65725708]
[11.36344147 220.12219238]
[1.81006408 231.68649292]
[-7.74331331 243.25079346]
[-7.30268288 256.15838623]
[-15.51936817 265.59686279]
[-27.56674004 266.85406494]
[-37.31830215 278.25173950]
[-47.06986237 289.64941406]
[-56.82142258 301.04708862]
[-53.36617279 316.05932617]
[-59.34326935 330.06387329]
[-72.26779175 337.77236938]
[-87.07582855 336.40859985]
[-96.82739258 347.80627441]
[-106.57894897 359.20394897]
[-116.33051300 370.60162354]
[-126.08207703 381.99929810]
[-128.55091858 398.21154785]
[-143.92195129 403.92675781]
[-156.38276672 393.26559448]
[-153.11474609 377.19537354]
[-137.47975159 372.24774170]
[-127.72819519 360.85006714]
[-117.97663116 349.45239258]
[-108.22506714 338.05471802]
[-98.47351074 326.65704346]
[-102.11209869 312.23834229]
[-96.49624634 298.27676392]
[-83.58517456 290.20471191]
[-68.21910095 291.29553223]
[-58.46754074 279.89785767]
[-48.71597672 268.50018311]
[-38.96441650 257.10247803]
[-36.69934082 239.71142578]
[-19.30761147 233.69741821]
[-9.75423336 222.13311768]
[-0.20085610 210.56881714]
[1.76370144 193.14125061]
[19.04903412 186.82794189]
[28.40138245 175.10046387]
[30.11806107 167.89186096]
[38.01776886 163.25312805]
[47.57114792 151.68882751]
[57.12452698 140.12452698]
[66.67790222 128.56022644]
[76.23127747 116.99593353]
[71.40453339 106.00939941]
[71.40059662 94.00934601]
[58.00041580 87.26879120]
[44.60023117 80.52823639]
[31.20004845 73.78767395]
[17.79986572 67.04711914]
[4.39968348 60.30656433]
[-9.00049973 53.56600952]
[-22.40068245 46.82545471]
[-35.80086517 40.08489609]
[-52.66772842 38.36872864]
[-55.68784332 21.68594742]
[-40.49308014 14.16560650]
[-29.06031036 26.68471336]
[-15.66012669 33.42527008]
[-2.25994372 40.16582489]
[11.14023972 46.90638351]
[24.54042244 53.64693832]
[37.94060516 60.38749313]
[51.34078979 67.12805176]
[64.74097443 73.86860657]
[78.14115143 80.60916138]
[85.58539581 71.82184601]
[96.57929993 66.09008026]
[90.77929688 52.25679016]
[84.97929382 38.42350006]
[79.17929840 24.59020615]
[73.37929535 10.75691319]
[58.24516296 7.33088255]
[48.04050064 -4.35862255]
[46.68921280 -19.81674767]
[54.71089172 -33.09952927]
[69.02104187 -39.09946442]
[84.11711884 -35.50946045]
[94.19436646 -23.70994186]
[95.37788391 -8.23806763]
[87.21258545 4.95691204]
[93.01258850 18.79020500]
[98.81259155 32.62349701]
[104.61258698 46.45679092]
[110.41259003 60.29008102]
[123.98279572 66.68145752]
[138.34158325 62.34267426]
[152.70037842 58.00389481]
[167.05917358 53.66511154]
[181.41796875 49.32633209]
[195.77676392 44.98754883]
[210.13555908 40.64876556]
[224.49435425 36.30998611]
[235.54864502 26.17082977]
[241.10902405 12.23948669]
[246.66938782 -1.69185686]
[252.22975159 -15.62320042]
[252.48559570 -32.57521820]
[268.84594727 -37.02215195]
[277.64810181 -22.53220367]
[266.16110229 -10.06283474]
[260.60073853 3.86850858]
[255.04035950 17.79985237]
[249.47999573 31.73119545]
[253.79359436 37.86657333]
[266.06448364 29.23956680]
[274.69131470 41.51058960]
[262.42077637 50.13733292]
[266.73437500 56.27270889]
[281.72546387 55.75496674]
[296.71652222 55.23722458]
[311.70758057 54.71948242]
[326.68746948 53.94306183]
[341.65173340 52.90819550]
[356.61599731 51.87332916]
[371.58023071 50.83846283]
[386.54449463 49.80359268]
[401.50875854 48.76872635]
[416.47302246 47.73386002]
[431.43728638 46.69899368]
[438.53442383 31.77865219]
[452.10546875 22.52005386]
[468.39944458 21.36779404]
[482.97006226 28.54153824]
[491.88903809 42.00184631]
[506.83319092 40.70883942]
[521.77734375 39.41583252]
[536.72155762 38.12282562]
[548.10461426 26.81775093]
[564.02325439 28.81186295]
[572.26605225 42.57545090]
[566.50976562 57.55027008]
[551.17022705 62.24891663]
[538.01452637 53.06699371]
[523.07037354 54.36000061]
[508.12619019 55.65300751]
[493.18203735 56.94601059]
[488.21917725 69.68434143]
[478.20019531 79.08273315]
[465.04473877 83.26213074]
[451.30740356 81.35102844]
[439.68179321 73.66650391]
[432.47213745 61.66324997]
[417.50790405 62.69812012]
[402.54364014 63.73298645]
[387.57937622 64.76785278]
[372.61511230 65.80271912]
[357.65084839 66.83758545]
[342.68658447 67.87245178]
[327.72232056 68.90731812]
[323.95184326 71.87684631]
[318.26934814 72.49208069]
[312.22531128 69.71054840]
[297.23425293 70.22828674]
[282.24319458 70.74603271]
[267.25213623 71.26377106]
[228.83312988 50.66877747]
[214.47433472 55.00756073]
[200.11553955 59.34634399]
[185.75674438 63.68512344]
[171.39794922 68.02390289]
[157.03916931 72.36268616]
[142.68037415 76.70146942]
[128.32157898 81.04025269]
[132.29721069 91.20132446]
[132.81130981 101.90442657]
[129.93449402 112.02314758]
[124.08780670 120.53208923]
[115.98627472 126.61064148]
[106.55335999 129.72166443]
[96.81653595 129.65745544]
[87.79557800 126.54930878]
[78.24220276 138.11360168]
[68.68881989 149.67790222]
[59.13544464 161.24220276]
[49.58206940 172.80650330]
[40.12885284 184.45281982]
[30.77650642 196.18029785]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 38]
[3 37]
[4 36]
[7 34]
[8 33]
[9 32]
[10 31]
[14 27]
[15 26]
[16 25]
[17 24]
[18 23]
[40 181]
[41 180]
[43 179]
[44 178]
[45 177]
[46 176]
[47 175]
[49 69]
[50 68]
[51 67]
[52 66]
[53 65]
[54 64]
[55 63]
[56 62]
[57 61]
[71 88]
[72 87]
[73 86]
[74 85]
[75 84]
[89 167]
[90 166]
[91 165]
[92 164]
[93 163]
[94 162]
[95 161]
[96 160]
[97 107]
[98 106]
[99 105]
[100 104]
[112 159]
[113 158]
[114 157]
[115 156]
[116 153]
[117 152]
[118 151]
[119 150]
[120 149]
[121 148]
[122 147]
[123 146]
[128 140]
[129 139]
[130 138]
[131 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
