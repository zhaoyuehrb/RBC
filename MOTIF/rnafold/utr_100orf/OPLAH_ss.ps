%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:05:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGCGCAGGCAGAGCCGACCGCGAGCGACCGAGCCGGAGCCGAGCGCCAGUUUUUCCAGGGCUACCAGCUGAAGAGCUCCUGUGGGACUCCAGCCCCACCACCAUGGGCAGCCCCGAGGGCCGCUUCCACUUUGCCAUCGACCGUGGGGGUACCUUCACAGACGUCUUUGCCCAGUGCCCAGGGGGGCACGUGCGGGUCUUAA\
) } def
/len { sequence length } bind def

/coor [
[157.06648254 363.76345825]
[156.37710571 348.77929688]
[155.68772888 333.79516602]
[145.44079590 319.55099487]
[154.03468323 303.26770020]
[153.11576843 288.29586792]
[152.19685364 273.32403564]
[151.27793884 258.35220337]
[148.19674683 243.67208862]
[143.01847839 229.59425354]
[137.84020996 215.51641846]
[132.66192627 201.43858337]
[127.48365784 187.36073303]
[122.30538177 173.28289795]
[117.12710571 159.20506287]
[105.47179413 149.93128967]
[107.96934509 134.30847168]
[102.79107666 120.23062897]
[101.06839752 135.13137817]
[88.90527344 143.90968323]
[74.22056580 140.85037231]
[66.57482147 127.94522858]
[70.94583130 113.59621429]
[84.48738861 107.14532471]
[69.49135590 106.80054474]
[54.49531555 106.45577240]
[39.49927902 106.11099243]
[32.50786972 119.63436127]
[20.38760185 128.74403381]
[5.57463646 131.67596436]
[-8.98256016 127.90117645]
[-20.41009331 118.22022247]
[-26.47599602 104.59413147]
[-41.47203064 104.24935150]
[-56.46807098 103.90457916]
[-70.44243622 111.32263184]
[-82.98850250 103.29483795]
[-97.98454285 102.95005798]
[-112.98278046 102.72019196]
[-127.98233795 102.60525513]
[-142.98190308 102.49032593]
[-157.98146057 102.37538910]
[-172.97045898 102.94992828]
[-187.91720581 104.21273041]
[-202.86395264 105.47553253]
[-217.81069946 106.73833466]
[-230.95570374 116.54348755]
[-245.91072083 109.81448364]
[-247.29132080 93.47355652]
[-233.67724609 84.33084106]
[-219.07350159 91.79158783]
[-204.12675476 90.52878571]
[-189.18000793 89.26598358]
[-174.23326111 88.00318146]
[-184.94441223 77.50217438]
[-185.23490906 62.50498581]
[-174.93846130 51.59705353]
[-159.94946289 51.02283096]
[-148.84864807 61.11104584]
[-147.99092102 76.08650208]
[-157.86653137 87.37583160]
[-142.86695862 87.49076080]
[-127.86740875 87.60569763]
[-112.86784363 87.72063446]
[-106.15193176 84.62687683]
[-97.63976288 87.95401764]
[-82.64373016 88.29879761]
[-69.74197388 80.85607910]
[-56.12329102 88.90853882]
[-41.12725449 89.25331879]
[-26.13121605 89.59809875]
[-19.44549179 76.26518250]
[-7.58511305 67.11964417]
[7.13018465 64.01786804]
[21.79275131 67.62748718]
[33.48154831 77.28456116]
[39.84405899 91.11495209]
[54.84009552 91.45973206]
[69.83612823 91.80451202]
[84.83216858 92.14929199]
[98.11811829 85.18627167]
[106.36785889 72.65863800]
[114.61760712 60.13099670]
[122.86735535 47.60336304]
[131.11709595 35.07572556]
[139.36685181 22.54808807]
[147.61659241 10.02045155]
[140.02984619 -0.80442691]
[136.58297729 -13.53284168]
[137.66558838 -26.64313889]
[143.12707520 -38.57564545]
[152.29722595 -47.91820908]
[164.06835938 -53.57332993]
[177.02909851 -54.88703918]
[189.63360596 -51.72448349]
[198.26338196 -63.99342346]
[206.89315796 -76.26235962]
[215.52294922 -88.53130341]
[224.15272522 -100.80024719]
[232.78250122 -113.06918335]
[224.16955566 -125.52079010]
[220.34356689 -140.14042664]
[221.74761963 -155.15870667]
[228.19305420 -168.76483154]
[238.88449097 -179.32487488]
[252.51799011 -185.57804871]
[267.44003296 -186.78717041]
[281.84805298 -182.82556152]
[290.47781372 -195.09449768]
[299.10760498 -207.36344910]
[307.73739624 -219.63238525]
[316.36715698 -231.90132141]
[310.02587891 -245.82022095]
[311.49328613 -260.94448853]
[320.27560425 -273.22198486]
[333.93280029 -279.41372681]
[348.75564575 -277.94796753]
[357.38543701 -290.21691895]
[366.01519775 -302.48583984]
[374.64498901 -314.75479126]
[375.56930542 -331.12786865]
[390.33084106 -338.27133179]
[403.74420166 -328.83660889]
[402.01086426 -312.52929688]
[386.91394043 -306.12500000]
[378.28414917 -293.85607910]
[369.65435791 -281.58712769]
[361.02459717 -269.31817627]
[367.41442871 -255.86325073]
[366.20352173 -240.91702271]
[357.61724854 -228.50163269]
[343.87918091 -222.00833130]
[328.63610840 -223.27154541]
[320.00631714 -211.00260925]
[311.37655640 -198.73365784]
[302.74676514 -186.46472168]
[294.11697388 -174.19578552]
[302.71557617 -161.97491455]
[306.62152100 -147.52249146]
[305.34475708 -132.57777405]
[299.02017212 -118.94615173]
[288.39355469 -108.28100586]
[274.73385620 -101.88315582]
[259.68145752 -100.54226685]
[245.05143738 -104.43940735]
[236.42166138 -92.17046356]
[227.79188538 -79.90152740]
[219.16210938 -67.63258362]
[210.53231812 -55.36364365]
[201.90254211 -43.09470367]
[210.55880737 -28.58974648]
[212.01109314 -11.70519257]
[205.91918945 4.16820431]
[193.46282959 15.82152462]
[177.11351013 20.87637520]
[160.14422607 18.27019882]
[151.89448547 30.79783440]
[143.64474487 43.32546997]
[135.39498901 55.85310745]
[127.14524841 68.38074493]
[118.89550018 80.90837860]
[110.64575195 93.43601990]
[117.48952484 101.54331970]
[116.86891174 115.05235291]
[122.04718781 129.13018799]
[134.07289124 139.41090393]
[131.20494080 154.02679443]
[136.38322449 168.10462952]
[141.56149292 182.18246460]
[146.73976135 196.26029968]
[151.91804504 210.33813477]
[157.09631348 224.41596985]
[162.27459717 238.49380493]
[173.01403809 230.63385010]
[188.93037415 229.58570862]
[206.18463135 237.67680359]
[215.36915588 249.53616333]
[224.55366516 261.39553833]
[233.73818970 273.25488281]
[242.92271423 285.11425781]
[252.10723877 296.97363281]
[267.48254395 302.67733765]
[269.96350098 318.88772583]
[256.99792480 328.92895508]
[241.92369080 322.47143555]
[240.24786377 306.15814209]
[231.06335449 294.29879761]
[221.87882996 282.43942261]
[212.69430542 270.58004761]
[203.50978088 258.72067261]
[194.32525635 246.86131287]
[187.30639648 249.50431824]
[166.24977112 257.43328857]
[167.16868591 272.40512085]
[168.08760071 287.37695312]
[169.00651550 302.34878540]
[178.13552856 311.46493530]
[178.59019470 323.95706177]
[170.67187500 333.10577393]
[171.36125183 348.08993530]
[172.05062866 363.07406616]
[181.34509277 376.58499146]
[174.04820251 391.27130127]
[157.66638184 392.02499390]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 201]
[2 200]
[3 199]
[5 196]
[6 195]
[7 194]
[8 193]
[9 173]
[10 172]
[11 171]
[12 170]
[13 169]
[14 168]
[15 167]
[17 165]
[18 164]
[24 80]
[25 79]
[26 78]
[27 77]
[33 71]
[34 70]
[35 69]
[37 67]
[38 66]
[39 64]
[40 63]
[41 62]
[42 61]
[43 54]
[44 53]
[45 52]
[46 51]
[81 162]
[82 161]
[83 160]
[84 159]
[85 158]
[86 157]
[87 156]
[95 150]
[96 149]
[97 148]
[98 147]
[99 146]
[100 145]
[108 137]
[109 136]
[110 135]
[111 134]
[112 133]
[117 128]
[118 127]
[119 126]
[120 125]
[176 191]
[177 190]
[178 189]
[179 188]
[180 187]
[181 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
