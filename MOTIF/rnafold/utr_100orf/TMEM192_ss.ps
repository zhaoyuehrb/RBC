%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:28:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGCAGGUCCCAGAAGGUGGCGAGUUUCGCGGCCAGAGGCUUACAGGUCCAGGUGGAGAGGCCGGGCUGGCCAGGGCUUCGGCCUCCGGCGUCGGGAAAUGGCGGCGGGGGGCAGGAUGGAGGACGGUUCCUUGGAUAUCACCCAGAGUAUUGAAGACGACCCACUUCUGGAUGCCCAGCUUCUCCCACACCACUCAU\
) } def
/len { sequence length } bind def

/coor [
[101.22975159 231.34243774]
[97.72807312 245.92799377]
[94.22639465 260.51354980]
[90.72471619 275.09909058]
[99.19509125 288.44180298]
[95.66833496 303.84756470]
[82.23680878 312.17642212]
[66.86919403 308.48696899]
[58.68282318 294.96813965]
[62.53453064 279.64038086]
[76.13916016 271.59741211]
[79.64084625 257.01184082]
[83.14252472 242.42630005]
[86.64420319 227.84075928]
[73.89644623 210.85520935]
[77.90169525 189.71031189]
[96.46133423 178.26548767]
[98.80785370 163.45016479]
[101.15436554 148.63482666]
[103.50088501 133.81950378]
[90.24440002 126.80056000]
[79.30986786 137.06877136]
[68.37534332 147.33697510]
[57.44081116 157.60517883]
[50.03358459 172.85540771]
[33.32882309 169.95933533]
[31.48737144 153.10569763]
[47.17260742 146.67065430]
[58.10713577 136.40245056]
[69.04166412 126.13423920]
[79.97619629 115.86602783]
[76.36006927 101.30843353]
[61.89170837 97.35033417]
[47.42334747 93.39224243]
[32.95498657 89.43414307]
[23.84252739 90.18799591]
[18.29138565 85.29858398]
[3.88698006 81.11371613]
[-10.51742554 76.92884827]
[-24.92183113 72.74398041]
[-39.32623672 68.55912018]
[-53.73064041 64.37425232]
[-68.13504791 60.18938446]
[-77.35785675 65.97675323]
[-88.02362823 65.73284912]
[-96.61096954 59.77999115]
[-100.41770172 50.28550720]
[-114.68354797 45.65025330]
[-123.82139587 45.97400665]
[-129.13606262 40.82852936]
[-143.32733154 35.96976852]
[-157.51861572 31.11100769]
[-171.70989990 26.25224686]
[-189.68759155 30.21862030]
[-200.70466614 16.56368256]
[-214.97052002 11.92842865]
[-229.23637390 7.29317331]
[-244.12608337 13.26610279]
[-258.00781250 5.22391367]
[-260.23269653 -10.66411495]
[-249.09399414 -22.21004677]
[-233.13635254 -20.55683136]
[-224.60110474 -6.97267437]
[-210.33526611 -2.33741927]
[-196.06941223 2.29783559]
[-185.14683533 -2.91364837]
[-173.21992493 0.83812481]
[-166.85113525 12.06096649]
[-152.65985107 16.91972733]
[-138.46856689 21.77849007]
[-124.27729034 26.63725090]
[-110.04829407 31.38440514]
[-95.78244019 36.01966095]
[-77.22119141 30.61898422]
[-63.95018005 45.78497696]
[-49.54577637 49.96984482]
[-35.14136887 54.15471268]
[-20.73696327 58.33957672]
[-6.33255863 62.52444458]
[8.07184696 66.70931244]
[22.47625160 70.89418030]
[36.91308212 74.96578217]
[51.38144302 78.92388153]
[65.84980011 82.88197327]
[80.31816101 86.84007263]
[91.95059967 77.36978149]
[91.00874329 62.39937973]
[90.06688690 47.42897797]
[89.12503052 32.45857620]
[80.53647614 19.17146492]
[87.45935822 5.98347902]
[86.51749420 -8.98692226]
[85.57563782 -23.95732307]
[84.63378143 -38.92772293]
[83.69192505 -53.89812469]
[72.65716553 -65.54344940]
[75.02439117 -81.41089630]
[88.97767639 -89.32830811]
[103.81324768 -83.22213745]
[108.15052795 -67.77650452]
[98.66232300 -54.83998108]
[99.60417938 -39.86958313]
[100.54604340 -24.89918137]
[101.48789978 -9.92877960]
[102.42975616 5.04162121]
[110.95094299 17.25794983]
[104.09542847 31.51671982]
[105.03728485 46.48712158]
[105.97914124 61.45752335]
[106.92099762 76.42792511]
[118.70075226 85.71433258]
[133.47740173 83.13539886]
[148.25402832 80.55645752]
[163.03067017 77.97752380]
[177.80731201 75.39858246]
[184.23553467 63.55641937]
[196.13803101 57.66728973]
[209.06712341 59.68169022]
[218.33389282 68.64218140]
[233.14921570 66.29566193]
[247.96455383 63.94914627]
[262.77987671 61.60263062]
[277.59518433 59.25611496]
[292.41052246 56.90959549]
[301.70230103 44.40756989]
[316.76055908 42.23891830]
[328.62207031 51.17424774]
[343.43740845 48.82773209]
[358.25274658 46.48121643]
[373.06805420 44.13469696]
[387.10012817 32.21705627]
[403.22619629 39.12959671]
[418.00283813 36.55066299]
[432.77947998 33.97172546]
[445.04391479 23.97698784]
[458.91192627 29.41088486]
[473.68856812 26.83194923]
[488.46520996 24.25301361]
[503.24185181 21.67407608]
[518.01849365 19.09514046]
[524.72387695 5.10165834]
[538.38977051 -2.24834991]
[553.76135254 -0.12865704]
[564.92797852 10.64567184]
[567.59582520 25.93168831]
[560.73907471 39.85160446]
[546.99420166 47.05293274]
[531.64648438 44.76660919]
[520.59741211 33.87178040]
[505.82077026 36.45071793]
[491.04412842 39.02965164]
[476.26748657 41.60858917]
[461.49084473 44.18752670]
[450.28338623 53.99779892]
[435.35842896 48.74836349]
[420.58178711 51.32730103]
[405.80514526 53.90623856]
[398.59075928 63.62296677]
[386.29458618 65.88823700]
[375.41458130 58.95002365]
[360.59924316 61.29653931]
[345.78393555 63.64305878]
[330.96859741 65.98957062]
[322.44879150 78.15298462]
[307.45736694 80.74373627]
[294.75704956 71.72492218]
[279.94171143 74.07144165]
[265.12640381 76.41795349]
[250.31106567 78.76447296]
[235.49574280 81.11099243]
[220.68041992 83.45750427]
[211.38999939 97.47147369]
[194.50694275 100.49393463]
[180.38624573 90.17522430]
[165.60960388 92.75416565]
[150.83297729 95.33309937]
[136.05633545 97.91203308]
[121.27969360 100.49097443]
[135.48382568 105.31204224]
[149.68795776 110.13311005]
[164.22964478 113.81269073]
[175.38143921 123.84451294]
[180.57383728 137.91714478]
[178.61047363 152.78808594]
[169.94372559 165.03094482]
[156.57048035 171.82479858]
[141.57211304 171.60429382]
[128.40338135 164.41932678]
[123.35979462 150.29267883]
[118.31620789 136.16603088]
[115.96969604 150.98135376]
[113.62317657 165.79667664]
[111.27665710 180.61199951]
[118.57189178 185.78393555]
[123.76301575 193.01208496]
[126.30850983 201.49397278]
[125.95867920 210.29916382]
[122.77980042 218.47134399]
[117.14388275 225.13211060]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 14]
[2 13]
[3 12]
[4 11]
[17 193]
[18 192]
[19 191]
[20 190]
[21 31]
[22 30]
[23 29]
[24 28]
[32 85]
[33 84]
[34 83]
[35 82]
[37 81]
[38 80]
[39 79]
[40 78]
[41 77]
[42 76]
[43 75]
[47 73]
[48 72]
[50 71]
[51 70]
[52 69]
[53 68]
[55 65]
[56 64]
[57 63]
[86 110]
[87 109]
[88 108]
[89 107]
[91 105]
[92 104]
[93 103]
[94 102]
[95 101]
[111 178]
[112 177]
[113 176]
[114 175]
[115 174]
[119 171]
[120 170]
[121 169]
[122 168]
[123 167]
[124 166]
[127 163]
[128 162]
[129 161]
[130 160]
[132 157]
[133 156]
[134 155]
[136 153]
[137 152]
[138 151]
[139 150]
[140 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
