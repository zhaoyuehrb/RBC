%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:09:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCUCGCGUUUCCGGCCGGAAGCUUCUCCAGCCUUUCCCGGAAGCUGCGCUCGCUACCCGGGUAACGGGUCCCGGCUGUGGAAGCUCCCGCGGCGCCGCGAUGGACCUCGAGGAGGCGGAAGAGUUUAAAGAACGCUGUACUCAGUGUGCUGCUGUCUCAUGGGGUCUUACUGAUGAAGGCAAAUAUUAUUGCACUUCUU\
) } def
/len { sequence length } bind def

/coor [
[64.11294556 138.81896973]
[60.63307190 124.22820282]
[67.83561707 111.07057190]
[82.00394440 106.13945007]
[67.04103088 105.08531189]
[52.07812119 104.03116608]
[37.11520767 102.97702789]
[22.15229225 101.92288208]
[12.14386749 113.63346100]
[-2.66790128 117.16402435]
[-16.55420685 111.36449432]
[-24.27043343 98.65238190]
[-39.23334503 97.59824371]
[-54.19626236 96.54409790]
[-60.30943680 99.09626007]
[-65.94567871 98.29275513]
[-69.60801697 95.21596527]
[-84.53067017 93.69467926]
[-99.45333099 92.17339325]
[-113.96705627 98.47119904]
[-125.84399414 89.48300171]
[-140.76664734 87.96171570]
[-155.68930054 86.44042969]
[-170.61196899 84.91914368]
[-185.53462219 83.39785767]
[-200.45727539 81.87657166]
[-215.37992859 80.35528564]
[-229.89366150 86.65309143]
[-241.77059937 77.66489410]
[-256.69326782 76.14360809]
[-271.61590576 74.62232208]
[-286.53857422 73.10103607]
[-301.46121216 71.57975006]
[-312.56347656 84.33535004]
[-328.91802979 87.92735291]
[-344.04058838 81.13426971]
[-352.05563354 66.81243134]
[-367.00024414 65.52455902]
[-381.94485474 64.23668671]
[-396.88946533 62.94881821]
[-401.01000977 70.14941406]
[-407.03903198 75.79915619]
[-414.43115234 79.41418457]
[-422.52563477 80.69345856]
[-430.60543823 79.54372406]
[-437.96066284 76.08602142]
[-443.95098877 70.64327240]
[-448.06137085 63.71024704]
[-449.94631958 55.90857315]
[-464.70465088 53.22692490]
[-479.46301270 50.54527664]
[-494.22134399 47.86362839]
[-508.97970581 45.18198013]
[-522.93463135 53.09643173]
[-537.76892090 46.98710632]
[-542.10290527 31.54055214]
[-532.61199951 18.60604668]
[-516.57672119 18.10583305]
[-506.29803467 30.42363358]
[-491.53970337 33.10528183]
[-476.78134155 35.78693008]
[-462.02301025 38.46857834]
[-447.26464844 41.15023041]
[-430.60253906 26.89544868]
[-408.56997681 29.64340782]
[-395.60159302 48.00420761]
[-380.65698242 49.29207993]
[-365.71237183 50.57995224]
[-350.76776123 51.86782455]
[-342.99240112 41.00939560]
[-330.76806641 35.36748886]
[-317.24481201 36.51379395]
[-305.96600342 44.25534058]
[-299.93994141 56.65708923]
[-285.01727295 58.17837906]
[-270.09463501 59.69966507]
[-255.17196655 61.22095108]
[-240.24931335 62.74223709]
[-226.80294800 56.33562088]
[-213.85864258 65.43262482]
[-198.93598938 66.95391083]
[-184.01333618 68.47520447]
[-169.09068298 69.99649048]
[-154.16801453 71.51777649]
[-139.24536133 73.03906250]
[-124.32270813 74.56034851]
[-110.87635040 68.15373230]
[-97.93204498 77.25074005]
[-83.00938416 78.77202606]
[-68.08673096 80.29331207]
[-53.14211655 81.58118439]
[-38.17920303 82.63533020]
[-23.21629143 83.68946838]
[-13.79398060 72.18476868]
[0.76828498 68.38945770]
[14.93874836 73.96183014]
[23.20643616 86.95996857]
[38.16934967 88.01411438]
[53.13226318 89.06825256]
[68.09517670 90.12239838]
[83.05809021 91.17653656]
[94.25726318 77.96367645]
[114.50844574 77.89287567]
[127.83609009 71.01000214]
[141.16372681 64.12713623]
[154.49137878 57.24427032]
[167.81903076 50.36140060]
[181.14666748 43.47853470]
[194.47431946 36.59566498]
[207.80195618 29.71279716]
[212.45983887 17.67936325]
[223.70875549 12.22270012]
[235.27601624 15.77904415]
[248.70960999 9.10531712]
[262.14318848 2.43158960]
[275.57678223 -4.24213791]
[289.01037598 -10.91586494]
[302.44396973 -17.58959198]
[315.87756348 -24.26331902]
[318.74548340 -34.76596832]
[326.75823975 -41.80805588]
[337.10705566 -43.24284363]
[346.33685303 -38.83531189]
[359.97244263 -45.08591843]
[373.60806274 -51.33652115]
[359.53701782 -56.53322983]
[351.98422241 -69.49298096]
[354.39883423 -84.29736328]
[365.67819214 -94.18553925]
[380.67126465 -94.64182281]
[392.53103638 -85.45783234]
[395.84146118 -70.82769012]
[389.09130859 -57.43320084]
[403.32788086 -62.15755463]
[417.56448364 -66.88190460]
[431.80105591 -71.60626221]
[446.03765869 -76.33061218]
[460.27426147 -81.05496216]
[470.76071167 -93.66313171]
[486.87490845 -90.61937714]
[492.03994751 -75.05484772]
[480.94244385 -62.98099899]
[464.99859619 -66.81837463]
[450.76202393 -62.09402084]
[436.52542114 -57.36967087]
[422.28881836 -52.64531708]
[408.05224609 -47.92096329]
[393.81564331 -43.19660950]
[379.85867310 -37.70091248]
[366.22305298 -31.45030403]
[352.58743286 -25.19969749]
[342.58688354 -8.65597057]
[322.55130005 -10.82972908]
[309.11770630 -4.15600157]
[295.68411255 2.51772594]
[282.25051880 9.19145298]
[268.81692505 15.86518002]
[255.38334656 22.53890800]
[241.94975281 29.21263504]
[233.04980469 44.33338547]
[214.68482971 43.04044342]
[201.35717773 49.92330933]
[188.02954102 56.80617905]
[174.70188904 63.68904495]
[161.37425232 70.57191467]
[148.04660034 77.45478058]
[134.71896362 84.33765411]
[121.39131165 91.22052002]
[135.16819763 85.28778076]
[149.69398499 89.02965546]
[158.88986206 100.88021851]
[158.90750122 115.88021088]
[149.73951721 127.75237274]
[135.22257996 131.52839661]
[121.43177795 125.62808228]
[114.13811493 112.51937103]
[120.49508667 126.10572052]
[126.85206604 139.69206238]
[133.20904541 153.27841187]
[139.67199707 166.81466675]
[146.24053955 180.30000305]
[152.80908203 193.78533936]
[159.37762451 207.27067566]
[174.39802551 212.18624878]
[181.46861267 226.32069397]
[176.39450073 241.28829956]
[162.18609619 248.20903015]
[147.27297974 242.97697449]
[140.50283813 228.69618225]
[145.89228821 213.83921814]
[139.32374573 200.35388184]
[132.75520325 186.86854553]
[126.18666077 173.38320923]
[120.42667389 168.74269104]
[119.62268829 159.63539124]
[113.26571655 146.04904175]
[106.90873718 132.46269226]
[100.55176544 118.87635040]
[101.03804016 133.86846924]
[91.34555817 145.31642151]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 101]
[5 100]
[6 99]
[7 98]
[8 97]
[12 93]
[13 92]
[14 91]
[17 90]
[18 89]
[19 88]
[21 86]
[22 85]
[23 84]
[24 83]
[25 82]
[26 81]
[27 80]
[29 78]
[30 77]
[31 76]
[32 75]
[33 74]
[37 69]
[38 68]
[39 67]
[40 66]
[49 63]
[50 62]
[51 61]
[52 60]
[53 59]
[103 168]
[104 167]
[105 166]
[106 165]
[107 164]
[108 163]
[109 162]
[110 161]
[113 159]
[114 158]
[115 157]
[116 156]
[117 155]
[118 154]
[119 153]
[123 151]
[124 150]
[125 149]
[133 148]
[134 147]
[135 146]
[136 145]
[137 144]
[138 143]
[176 198]
[177 197]
[178 196]
[179 195]
[180 193]
[181 192]
[182 191]
[183 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
