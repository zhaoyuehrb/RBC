%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:56:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCAGUCACCCUACCACCAGGUCCCAGAGCCCAGGGCUGUGUGUUCCACUGGGAGCCUUUGAGAGGGCCAACGCACCAUGGAGACUGGACAGAGAACAUCUCGAAAAGUCCGGAAGCUGGGCUCCAACCGGCGGCGGCAGACAAGAGAGCCAGCUGAUGGUGAAGGCGCUGCAGUGG\
) } def
/len { sequence length } bind def

/coor [
[70.06016541 340.37811279]
[81.42541504 329.63726807]
[80.36732483 314.67465210]
[79.30924225 299.71200562]
[78.25115967 284.74938965]
[77.19307709 269.78674316]
[68.87795258 263.78460693]
[65.17676544 253.98522949]
[67.54486084 243.55569458]
[75.43267059 236.01126099]
[74.90329742 221.02059937]
[74.37392426 206.02993774]
[65.73079681 197.53993225]
[65.18424225 185.03521729]
[73.57405090 175.21264648]
[73.30932617 160.21498108]
[73.04460144 145.21733093]
[72.77986908 130.21966553]
[72.51514435 115.22200012]
[68.59025574 100.74459076]
[61.24361801 87.66686249]
[53.89698410 74.58914185]
[42.00876617 73.66030121]
[32.15365982 67.16258240]
[26.72743988 56.81465912]
[26.98159981 45.25318909]
[32.73661423 35.36129379]
[25.85608864 22.03243828]
[18.97556114 8.70358562]
[12.09503365 -4.62526846]
[5.21450615 -17.95412254]
[-1.66602135 -31.28297615]
[-8.54654884 -44.61182785]
[-15.42707634 -57.94068527]
[-26.40139389 -68.16635895]
[-40.18239212 -74.08953857]
[-49.33301544 -74.60807037]
[-54.15287399 -80.24078369]
[-67.82718658 -86.40626526]
[-81.50150299 -92.57173920]
[-95.17581940 -98.73721313]
[-108.85013580 -104.90269470]
[-121.80851746 -95.18801880]
[-139.70657349 -95.80905914]
[-154.58926392 -108.60221100]
[-169.35624695 -111.23589325]
[-184.12321472 -113.86958313]
[-199.35188293 -107.78519440]
[-212.06628418 -118.14260864]
[-209.18695068 -134.28700256]
[-193.67587280 -139.61041260]
[-181.48953247 -128.63656616]
[-166.72254944 -126.00287628]
[-151.95558167 -123.36918640]
[-146.27651978 -137.25257874]
[-158.65588379 -145.72319031]
[-171.03524780 -154.19381714]
[-183.41461182 -162.66444397]
[-195.79397583 -171.13505554]
[-212.17761230 -171.84786987]
[-219.51110840 -186.51593018]
[-210.25038147 -200.04998779]
[-193.92207336 -198.52737427]
[-187.32334900 -183.51441956]
[-174.94398499 -175.04379272]
[-162.56462097 -166.57318115]
[-150.18527222 -158.10255432]
[-137.80590820 -149.63194275]
[-117.57788849 -148.14057922]
[-104.31814575 -135.23045349]
[-102.68466187 -118.57700348]
[-89.01034546 -112.41152954]
[-75.33602905 -106.24605560]
[-61.66171265 -100.08058167]
[-47.98739624 -93.91510010]
[-34.25920486 -87.87053680]
[-20.47820854 -81.94734955]
[-13.58771038 -84.90894318]
[-26.81103516 -91.99016571]
[-29.51949692 -106.74361420]
[-19.67361832 -118.05991364]
[-4.68736506 -117.41786194]
[4.15458012 -105.30093384]
[0.19328722 -90.83213043]
[7.08378601 -93.79372406]
[12.26933193 -107.86888123]
[17.45487785 -121.94403839]
[22.64042282 -136.01919556]
[27.82596970 -150.09436035]
[33.01151657 -164.16952515]
[27.53475189 -185.88307190]
[44.58542252 -199.19738770]
[48.76520538 -213.60325623]
[52.94498444 -228.00914001]
[57.12476730 -242.41502380]
[55.73151779 -259.31161499]
[71.58210754 -265.32788086]
[81.75111389 -251.76219177]
[71.53064728 -238.23524475]
[67.35086823 -223.82936096]
[63.17108536 -209.42347717]
[58.99130249 -195.01759338]
[64.21498871 -189.03265381]
[66.65984344 -181.37535095]
[65.85226440 -173.28324890]
[61.85076141 -166.09556580]
[55.24856186 -161.03158569]
[47.08667374 -158.98397827]
[41.90113068 -144.90881348]
[36.71558380 -130.83364868]
[31.53003693 -116.75849152]
[26.34449196 -102.68333435]
[21.15894508 -88.60817719]
[17.68841171 -78.73367310]
[12.00981808 -71.26103973]
[5.08012438 -66.59477997]
[-2.09822249 -64.82121277]
[4.78230476 -51.49235535]
[11.66283226 -38.16350174]
[18.54335976 -24.83465004]
[25.42388725 -11.50579643]
[32.30441666 1.82305777]
[39.18494415 15.15191174]
[46.06547165 28.48076439]
[63.79257202 32.96039200]
[72.79682922 49.23897934]
[66.97470856 67.24250031]
[74.32135010 80.32022858]
[81.66798401 93.39795685]
[94.02111816 82.69188690]
[109.10255432 85.47826385]
[115.85411835 98.11447906]
[129.83557129 103.54762268]
[143.81701660 108.98076630]
[157.79847717 114.41390991]
[171.82731628 119.72346497]
[185.90248108 124.90901184]
[199.97764587 130.09455872]
[211.73037720 120.20674133]
[226.85523987 117.53580475]
[241.28373718 122.80021667]
[251.13467407 134.58387756]
[253.75817871 149.71705627]
[248.44856262 164.12896729]
[236.63407898 173.94291687]
[221.49276733 176.51898193]
[207.09754944 171.16421509]
[197.32069397 159.31903076]
[194.79209900 144.16970825]
[180.71693420 138.98416138]
[166.64178467 133.79862976]
[159.25605774 134.43859863]
[152.36532593 128.39535522]
[138.38388062 122.96221924]
[124.40242767 117.52907562]
[110.42097473 112.09593201]
[100.13746643 117.72469330]
[87.51280975 114.95726776]
[87.77753448 129.95492554]
[88.04225922 144.95259094]
[88.30699158 159.95025635]
[88.57171631 174.94792175]
[98.42595673 190.48698425]
[89.36458588 205.50057983]
[89.89395905 220.49122620]
[90.42332458 235.48188782]
[101.88656616 252.03968811]
[92.15570831 268.72866821]
[93.21379089 283.69128418]
[94.27188110 298.65393066]
[95.32996368 313.61654663]
[96.38804626 328.57919312]
[109.15171051 337.61373901]
[113.07192993 352.75195312]
[106.29769897 366.84606934]
[92.02760315 373.24124146]
[76.99954224 368.91787720]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 172]
[3 171]
[4 170]
[5 169]
[6 168]
[10 166]
[11 165]
[12 164]
[15 162]
[16 161]
[17 160]
[18 159]
[19 158]
[20 129]
[21 128]
[22 127]
[27 124]
[28 123]
[29 122]
[30 121]
[31 120]
[32 119]
[33 118]
[34 117]
[35 77]
[36 76]
[38 75]
[39 74]
[40 73]
[41 72]
[42 71]
[45 54]
[46 53]
[47 52]
[55 68]
[56 67]
[57 66]
[58 65]
[59 64]
[85 113]
[86 112]
[87 111]
[88 110]
[89 109]
[90 108]
[92 102]
[93 101]
[94 100]
[95 99]
[132 156]
[133 155]
[134 154]
[135 153]
[136 151]
[137 150]
[138 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
