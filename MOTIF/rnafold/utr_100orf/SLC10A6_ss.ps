%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:10:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAGGAUGAAUCACCUUGCUGGCCAACAGUUAUUGGAAUGAUUCUCCAUGUGUGACUUCGUUGCACUAUUACAAAAUGUGGCAGGAUAGACCUGCCCAGCCAUUGUUGCCGAUGUUCAUUUGUAAUGCUGCCUUAAGGAGAUGAGGAGAUGAGAGCCAAUUGUUCCAGCAGCUCAGCCUGCCCUGCCAACAGUUCAGAGGAGGAGCUGCCAGUGGGACUGGAGGUGCAUGGAAACCUGGAGCUCGUUU\
) } def
/len { sequence length } bind def

/coor [
[124.35565186 126.02644348]
[112.34619141 132.39529419]
[99.19103241 133.68154907]
[86.89545441 129.97497559]
[77.89596558 141.97535706]
[68.89646912 153.97573853]
[66.26123047 162.69526672]
[59.70695877 166.06979370]
[50.55678177 177.95567322]
[41.40660095 189.84156799]
[32.25642395 201.72744751]
[23.10624695 213.61332703]
[13.95606804 225.49922180]
[4.95657682 237.49960327]
[-3.89079547 249.61256409]
[-0.27466387 268.22885132]
[-11.24703312 283.30236816]
[-29.43818665 285.50476074]
[-37.97711945 297.83709717]
[-46.51605606 310.16943359]
[-55.05498886 322.50180054]
[-53.61236191 338.47985840]
[-65.30418396 349.46533203]
[-81.16149139 347.03109741]
[-89.01991272 333.04452515]
[-82.85114288 318.23486328]
[-67.38732910 313.96286011]
[-58.84839630 301.63052368]
[-50.30945969 289.29818726]
[-41.77052689 276.96582031]
[-46.18756485 266.47793579]
[-44.99210358 255.04048157]
[-38.36529922 245.49595642]
[-27.85240746 240.27220154]
[-16.00376320 240.76519775]
[-7.15639114 228.65222168]
[-6.98802662 223.90182495]
[-3.85016584 219.20101929]
[2.07018447 216.34904480]
[11.22036266 204.46315002]
[20.37054062 192.57727051]
[29.52071953 180.69139099]
[38.67089844 168.80549622]
[47.82107544 156.91961670]
[56.89609146 144.97624207]
[65.89558411 132.97586060]
[74.89507294 120.97548676]
[69.93963623 117.36919403]
[65.52890015 112.65582275]
[61.89993668 106.92460632]
[46.98611069 108.53017426]
[32.07228470 110.13574219]
[17.15846062 111.74130249]
[2.24463701 113.34687042]
[-12.66918755 114.95243835]
[-27.58301163 116.55799866]
[-42.68395996 124.26498413]
[-54.27011490 111.88769531]
[-45.58390045 97.32795715]
[-29.18857765 101.64417267]
[-14.27475262 100.03861237]
[0.63907194 98.43304443]
[15.55289650 96.82748413]
[30.46672058 95.22191620]
[45.38054657 93.61634827]
[60.29436874 92.01078796]
[65.92516327 78.10775757]
[56.33176041 66.57664490]
[46.73835754 55.04552841]
[37.14495468 43.51441574]
[27.55154991 31.98329926]
[17.95814705 20.45218468]
[8.36474228 8.92107105]
[-1.22866118 -2.61004376]
[-10.82206535 -14.14115810]
[-34.98126602 -10.65870285]
[-55.19288635 -33.46289825]
[-67.24980164 -42.38650894]
[-75.98577118 -44.96669388]
[-79.40158844 -51.49954224]
[-91.34495544 -60.57455826]
[-103.28833008 -69.64957428]
[-115.23169708 -78.72458649]
[-127.17507172 -87.79960632]
[-139.11843872 -96.87461853]
[-155.14460754 -96.13874817]
[-165.60324097 -108.30412292]
[-162.47138977 -124.03851318]
[-148.15151978 -131.27183533]
[-133.62863159 -124.45531464]
[-130.04342651 -108.81799316]
[-118.10005188 -99.74297333]
[-106.15668488 -90.66796112]
[-94.21331024 -81.59294128]
[-82.26994324 -72.51792908]
[-70.32656860 -63.44291306]
[-58.32619095 -54.44342422]
[-46.26927567 -45.51981354]
[-40.44366074 -50.24339294]
[-28.79242706 -59.69055176]
[-22.96681023 -64.41413116]
[-29.20586014 -78.05503082]
[-35.44490814 -91.69593811]
[-41.68395996 -105.33683777]
[-47.92300797 -118.97774506]
[-61.59314346 -128.03640747]
[-60.31324768 -144.38554382]
[-45.39996719 -151.20654297]
[-32.19480896 -141.48255920]
[-34.28210449 -125.21679688]
[-28.04305458 -111.57588959]
[-21.80400467 -97.93498993]
[-15.56495571 -84.29408264]
[-9.32590675 -70.65317535]
[1.14877689 -62.63446808]
[7.32230663 -52.10994339]
[8.89361000 -41.00487900]
[6.32937241 -31.09611320]
[0.70904976 -23.73456192]
[10.30245304 -12.20344734]
[19.89585686 -0.67233294]
[29.48926163 10.85878181]
[39.08266449 22.38989639]
[48.67606735 33.92101288]
[58.26947021 45.45212555]
[67.86287689 56.98324203]
[77.45627594 68.51435852]
[87.88977814 63.51439667]
[99.25328064 61.84571838]
[110.51715851 63.60900879]
[120.67572784 68.59624481]
[125.86526489 54.52256012]
[131.05479431 40.44887161]
[136.24433899 26.37518120]
[141.43386841 12.30149364]
[134.58822632 -1.94324934]
[139.89894104 -16.82853889]
[154.21527100 -23.52319717]
[169.04357910 -18.05540085]
[175.58650208 -3.66909862]
[169.96223450 11.10057354]
[155.50755310 17.49102974]
[150.31802368 31.56471825]
[145.12849426 45.63840866]
[139.93894958 59.71209717]
[134.74942017 73.78578186]
[141.58454895 87.13796997]
[156.03605652 91.15718079]
[170.48756409 95.17639923]
[184.93905640 99.19561005]
[199.39056396 103.21482086]
[213.84207153 107.23403168]
[228.29356384 111.25325012]
[241.93876648 103.74016571]
[256.53738403 108.02208710]
[263.61587524 121.07698822]
[278.06738281 125.09620667]
[279.83340454 117.37543488]
[284.91665649 109.91950226]
[293.21722412 104.04470062]
[304.14471436 101.00074768]
[316.65808105 101.79727936]
[331.60766602 103.02603912]
[346.55725098 104.25479889]
[361.50683594 105.48356628]
[376.45642090 106.71232605]
[391.40600586 107.94109344]
[406.37619019 108.88672638]
[421.36157227 109.54889679]
[436.34692383 110.21106720]
[451.33230591 110.87322998]
[466.31768799 111.53540039]
[481.30307007 112.19757080]
[496.28845215 112.85974121]
[507.89166260 102.46727753]
[523.07952881 103.35227966]
[532.91564941 114.47821045]
[547.90100098 115.14038086]
[562.88641357 115.80254364]
[573.77484131 101.27875519]
[591.05566406 96.26116943]
[607.73455811 102.58335876]
[617.17901611 117.52864075]
[632.17626953 117.81250763]
[647.17358398 118.09636688]
[661.25885010 109.69770813]
[675.44104004 117.93170166]
[675.13067627 134.32791138]
[660.64709473 142.01933289]
[646.88977051 133.09367371]
[631.89245605 132.80981445]
[616.89514160 132.52595520]
[611.10809326 143.16593933]
[601.29412842 150.38638306]
[589.27258301 152.77270508]
[577.30480957 149.81362915]
[567.66845703 142.00930786]
[562.22424316 130.78791809]
[547.23883057 130.12576294]
[532.25347900 129.46359253]
[521.47436523 139.67857361]
[506.26760864 139.22052002]
[495.62628174 127.84511566]
[480.64089966 127.18294525]
[465.65551758 126.52078247]
[450.67013550 125.85861206]
[435.68475342 125.19644165]
[420.69940186 124.53427124]
[405.71401978 123.87210846]
[402.89288330 125.94804382]
[398.93368530 126.77408600]
[394.42871094 125.83346558]
[390.17724609 122.89067841]
[375.22766113 121.66191864]
[360.27807617 120.43315125]
[345.32849121 119.20439148]
[330.37890625 117.97562408]
[315.42932129 116.74686432]
[311.31680298 123.01879120]
[318.06759644 136.41381836]
[303.09173584 135.56265259]
[298.97921753 141.83457947]
[306.06579590 155.05502319]
[313.15240479 168.27546692]
[320.23898315 181.49592590]
[335.62994385 183.47027588]
[346.89788818 194.13861084]
[349.71002197 209.39872742]
[342.98507690 223.38281250]
[329.30889893 230.71369934]
[313.94027710 228.57249451]
[302.78872681 217.78256226]
[300.14227295 202.49282837]
[307.01855469 188.58251953]
[299.93194580 175.36206055]
[292.84536743 162.14161682]
[285.75875854 148.92117310]
[274.04815674 139.54769897]
[259.59664917 135.52848816]
[246.79434204 143.05419922]
[232.08120728 139.18402100]
[224.27435303 125.70475006]
[209.82286072 121.68553925]
[195.37135315 117.66632080]
[180.91984558 113.64710999]
[166.46835327 109.62789917]
[152.01684570 105.60868835]
[137.56533813 101.58946991]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 47]
[5 46]
[6 45]
[8 44]
[9 43]
[10 42]
[11 41]
[12 40]
[13 39]
[14 36]
[15 35]
[18 30]
[19 29]
[20 28]
[21 27]
[50 66]
[51 65]
[52 64]
[53 63]
[54 62]
[55 61]
[56 60]
[67 127]
[68 126]
[69 125]
[70 124]
[71 123]
[72 122]
[73 121]
[74 120]
[75 119]
[77 98]
[78 97]
[80 96]
[81 95]
[82 94]
[83 93]
[84 92]
[85 91]
[101 114]
[102 113]
[103 112]
[104 111]
[105 110]
[131 146]
[132 145]
[133 144]
[134 143]
[135 142]
[147 248]
[148 247]
[149 246]
[150 245]
[151 244]
[152 243]
[153 242]
[156 239]
[157 238]
[162 218]
[163 217]
[164 216]
[165 215]
[166 214]
[167 213]
[168 209]
[169 208]
[170 207]
[171 206]
[172 205]
[173 204]
[174 203]
[177 200]
[178 199]
[179 198]
[183 192]
[184 191]
[185 190]
[222 237]
[223 236]
[224 235]
[225 234]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
