%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:32:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCCUAUUUCCGGUAGGAAUCAGUGGACUUGGCGGCAGAGGCAGUGCGGAUCCGGCGUUCUCCACUGAUCUUUUCCAAGGCUGUACAGACAUGGCGGCGGCUUUUCGGAAGGCGGCUAAGUCCCGGCAGCGGGAACACAGAGAGCGAAGCCAGCCUGGCUUUCGAAAACAUCUGGGCCUGCUGGAGAAAA\
) } def
/len { sequence length } bind def

/coor [
[98.75682831 346.16378784]
[83.68933868 348.85256958]
[69.10171509 344.22009277]
[58.34608078 333.33087158]
[53.89400101 318.68719482]
[56.76853180 303.65405273]
[66.30912781 291.68594360]
[80.32342529 285.53305054]
[81.30447388 270.56518555]
[82.28552246 255.59729004]
[83.26657104 240.62940979]
[84.24761963 225.66151428]
[85.22866058 210.69363403]
[86.20970917 195.72575378]
[87.19075775 180.75787354]
[88.17180634 165.78997803]
[89.15284729 150.82209778]
[90.13389587 135.85421753]
[74.13864899 126.72181702]
[64.48779297 111.03393555]
[49.56002045 112.50419617]
[34.63224792 113.97444916]
[19.70447731 115.44470978]
[4.77670622 116.91496277]
[-10.15106487 118.38522339]
[-25.07883453 119.85547638]
[-40.00660706 121.32573700]
[-54.93437576 122.79598999]
[-65.77427673 136.51629639]
[-82.84648895 138.12818909]
[-95.55226898 127.12101746]
[-110.45398712 128.83532715]
[-123.27946472 138.09910583]
[-136.80761719 131.86706543]
[-151.70933533 133.58135986]
[-166.61105347 135.29566956]
[-171.50563049 148.40867615]
[-181.52714539 158.08483887]
[-194.67810059 162.47477722]
[-208.37110901 160.77499390]
[-219.93801880 153.37419128]
[-227.14978027 141.76632690]
[-242.07754517 143.23658752]
[-257.24777222 150.80632019]
[-268.72119141 138.32447815]
[-259.90332031 123.84410095]
[-243.54780579 128.30882263]
[-228.62002563 126.83856201]
[-222.31826782 111.96707153]
[-209.30447388 102.24313354]
[-193.07022095 100.39373779]
[-178.03100586 107.01710510]
[-168.32536316 120.39395142]
[-153.42364502 118.67964935]
[-138.52192688 116.96534729]
[-126.76231384 107.82418060]
[-112.16829681 113.93360138]
[-97.26657867 112.21929932]
[-90.74060059 101.09806061]
[-78.82077789 95.69000244]
[-65.77154541 98.17620087]
[-56.40463257 107.86822510]
[-41.47686386 106.39796448]
[-26.54909325 104.92771149]
[-11.62132168 103.45745087]
[3.30644917 101.98719788]
[18.23422050 100.51693726]
[33.16199112 99.04667664]
[48.08976364 97.57642365]
[63.01753235 96.10616302]
[67.26323700 82.36000824]
[76.40888977 71.25414276]
[89.08557892 64.45087433]
[103.39590454 62.96849060]
[107.75017548 48.61438751]
[112.10444641 34.26028061]
[116.45871735 19.90617561]
[110.77632904 10.60776043]
[111.15088654 -0.06313837]
[117.21656036 -8.58200073]
[126.76776886 -12.26839638]
[131.58935547 -26.47234917]
[136.41094971 -40.67630005]
[141.23254395 -54.88025284]
[146.05413818 -69.08420563]
[137.27104187 -81.73976898]
[137.61999512 -96.96250916]
[146.75765991 -108.91939545]
[161.01321411 -113.15223694]
[165.83480835 -127.35618591]
[170.65640259 -141.56013489]
[167.76564026 -157.11502075]
[179.18336487 -166.67977905]
[184.00495911 -180.88372803]
[188.82655334 -195.08767700]
[193.64814758 -209.29162598]
[190.75738525 -224.84651184]
[202.17510986 -234.41127014]
[206.99670410 -248.61521912]
[195.78517151 -258.92160034]
[189.74085999 -272.89965820]
[189.91098022 -288.12762451]
[196.26606750 -301.96716309]
[207.70506287 -312.02047729]
[222.24609375 -316.54577637]
[237.36982727 -314.75903320]
[250.45600891 -306.96981812]
[259.23733521 -294.52761841]
[262.19244385 -279.58816528]
[258.80929565 -264.73980713]
[249.67407227 -252.55506897]
[236.36949158 -245.14506531]
[221.20065308 -243.79362488]
[216.37905884 -229.58967590]
[219.61470032 -215.05076599]
[207.85209656 -204.47004700]
[203.03050232 -190.26608276]
[198.20890808 -176.06213379]
[193.38731384 -161.85818481]
[196.62295532 -147.31927490]
[184.86035156 -136.73855591]
[180.03875732 -122.53459930]
[175.21716309 -108.33064270]
[183.95007324 -96.29426575]
[183.92057800 -81.24557495]
[174.93040466 -68.95613861]
[160.25808716 -64.26261139]
[155.43649292 -50.05865860]
[150.61489868 -35.85470963]
[145.79330444 -21.65075684]
[140.97172546 -7.44680452]
[146.13520813 11.17752075]
[130.81282043 24.26044655]
[126.45854950 38.61455154]
[122.10427856 52.96865463]
[117.75000763 67.32276154]
[129.79748535 77.75198364]
[136.37379456 92.26619720]
[136.27143860 108.20043182]
[149.93440247 114.39104462]
[163.59736633 120.58164978]
[177.26031494 126.77225494]
[193.46006775 116.61102295]
[212.36349487 118.23430634]
[226.37066650 130.80847168]
[229.95921326 149.13371277]
[243.90948486 154.64645386]
[257.85974121 160.15919495]
[271.80999756 165.67192078]
[285.80490112 171.07035828]
[299.84347534 176.35411072]
[313.88204956 181.63784790]
[327.92065430 186.92160034]
[344.87442017 186.84213257]
[349.64404297 203.11134338]
[335.33102417 212.19833374]
[322.63690186 200.96018982]
[308.59832764 195.67643738]
[294.55972290 190.39270020]
[280.52114868 185.10894775]
[273.14166260 185.69615173]
[266.29724121 179.62219238]
[252.34700012 174.10945129]
[238.39674377 168.59671021]
[224.44648743 163.08396912]
[216.30981445 170.75526428]
[205.84762573 174.84774780]
[194.56271362 174.73233032]
[184.09153748 170.38734436]
[175.96687317 162.40725708]
[171.39352417 151.92161560]
[171.06971741 140.43521118]
[157.40675354 134.24459839]
[143.74378967 128.05400085]
[130.08084106 121.86339569]
[123.21105194 129.05360413]
[114.68137360 134.16609192]
[105.10178375 136.83526611]
[104.12073517 151.80314636]
[103.13968658 166.77102661]
[102.15863800 181.73892212]
[101.17759705 196.70680237]
[100.19654846 211.67468262]
[99.21549988 226.64256287]
[98.23445129 241.61044312]
[97.25340271 256.57833862]
[96.27236176 271.54620361]
[95.29131317 286.51409912]
[108.38260651 294.44357300]
[116.27942657 307.55459595]
[117.16714478 322.83435059]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 188]
[9 187]
[10 186]
[11 185]
[12 184]
[13 183]
[14 182]
[15 181]
[16 180]
[17 179]
[18 178]
[20 70]
[21 69]
[22 68]
[23 67]
[24 66]
[25 65]
[26 64]
[27 63]
[28 62]
[31 58]
[32 57]
[34 55]
[35 54]
[36 53]
[42 48]
[43 47]
[74 136]
[75 135]
[76 134]
[77 133]
[81 131]
[82 130]
[83 129]
[84 128]
[85 127]
[89 123]
[90 122]
[91 121]
[93 119]
[94 118]
[95 117]
[96 116]
[98 114]
[99 113]
[139 175]
[140 174]
[141 173]
[142 172]
[146 165]
[147 164]
[148 163]
[149 162]
[150 160]
[151 159]
[152 158]
[153 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
