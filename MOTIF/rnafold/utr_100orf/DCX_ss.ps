%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:26:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUAUUUCUUAUGAAUGUCGGAUAGCUGCACCAGCUUGGUGGGGAAAGGGUUUGAUGAAUAGCACAAAGACACUGGCUGUUCCCUGGAGGCUGUCCCUUUAAAGGAGAAUCUUAGUUUAUUCUGGGGGGAGGGGAUGCACACAUUAGAGUAGGAAAGAGGGCUUGGAAUAAAAUGAAAACACUCCCCCUUCAUAGUCAUUGUACUGAAAUGCAAAGACUGCUUCCUAAGCUGGAGAUGCUAACCUUGGGUAGCUC\
CUUCUGUUCUCUUCAAG\
) } def
/len { sequence length } bind def

/coor [
[290.90911865 147.96926880]
[276.21224976 144.96888733]
[261.51541138 141.96850586]
[246.81854248 138.96810913]
[232.12168884 135.96772766]
[217.42481995 132.96734619]
[210.26922607 134.70202637]
[202.57655334 129.84695435]
[187.91519165 126.67763519]
[173.84045410 131.55114746]
[161.98663330 121.07272339]
[147.32527161 117.90341187]
[132.66390991 114.73410797]
[123.22229004 132.33757019]
[104.30754852 143.57829285]
[80.27184296 143.50529480]
[57.90762711 130.10134888]
[46.73738480 140.11262512]
[35.56714249 150.12390137]
[24.39689827 160.13517761]
[13.22665501 170.14645386]
[2.05641127 180.15773010]
[-9.11383152 190.16902161]
[-9.18739319 210.29446411]
[-23.85168457 223.62629700]
[-43.28186035 221.84403992]
[-54.09989548 232.23490906]
[-58.69279861 247.37478638]
[-73.23155212 250.61111450]
[-84.04959106 261.00198364]
[-94.86763000 271.39285278]
[-105.68566132 281.78372192]
[-116.50370026 292.17459106]
[-123.73847198 307.50735474]
[-140.47483826 304.79986572]
[-142.50624084 287.96804810]
[-126.89456940 281.35653687]
[-116.07653046 270.96566772]
[-105.25849152 260.57479858]
[-94.44045258 250.18394470]
[-83.62242126 239.79307556]
[-79.80329895 225.39642334]
[-64.49076080 221.41687012]
[-53.67272568 211.02600098]
[-56.22704315 201.14933777]
[-54.45616531 191.02079773]
[-48.61128998 182.46371460]
[-39.68300247 177.04635620]
[-29.23386574 175.79470825]
[-19.12510872 178.99876404]
[-7.95486546 168.98748779]
[3.21537757 158.97621155]
[14.38562107 148.96493530]
[25.55586433 138.95365906]
[36.72610855 128.94238281]
[47.89635086 118.93110657]
[42.73902512 104.84558868]
[27.74523163 104.41410828]
[12.75143814 103.98262787]
[-2.24235511 103.55115509]
[-17.23614883 103.11967468]
[-32.22994232 102.68819427]
[-47.22373581 102.25672150]
[-55.85477066 105.12973785]
[-62.38730621 101.73301697]
[-77.37514496 101.12902832]
[-87.76647186 112.81467438]
[-103.24550629 115.03581238]
[-116.50352478 106.74370575]
[-121.28047943 91.85361481]
[-115.32085419 77.39620209]
[-101.43859863 70.19780731]
[-86.18848419 73.65728760]
[-76.77115631 86.14119720]
[-61.78331757 86.74518585]
[-46.79225540 87.26292419]
[-31.79846382 87.69440460]
[-16.80467033 88.12587738]
[-1.81087720 88.55735779]
[13.18291569 88.98883820]
[28.17670822 89.42031097]
[43.17050171 89.85179138]
[47.03205490 83.42229462]
[34.08062363 75.85523224]
[19.50080299 72.32978058]
[18.24358940 57.38255692]
[32.02968216 51.47124100]
[41.99048615 62.68529129]
[54.75515747 70.56330872]
[58.61671066 64.13381195]
[51.19158173 51.10049057]
[44.25079727 45.22047424]
[43.75698090 37.87419128]
[36.48231888 24.75629234]
[29.20766068 11.63839149]
[21.93300056 -1.47950876]
[14.65833950 -14.59740925]
[7.38367891 -27.71530914]
[0.10901873 -40.83320999]
[-7.16564178 -53.95111084]
[-22.36863327 -53.15710068]
[-36.35176468 -59.01876068]
[-46.36227036 -70.32406616]
[-50.45473099 -84.79516602]
[-47.86896896 -99.54722595]
[-39.17061234 -111.66349792]
[-46.44527054 -124.78139496]
[-53.71993256 -137.89929199]
[-60.99459076 -151.01719666]
[-68.26925659 -164.13510132]
[-83.68683624 -165.88946533]
[-95.10596466 -176.39581299]
[-98.13574982 -191.61421204]
[-91.61117554 -205.69291687]
[-78.04107666 -213.21833801]
[-62.64343643 -211.29682922]
[-51.33895493 -200.66723633]
[-48.47443771 -185.41683960]
[-55.15135193 -171.40975952]
[-47.87669373 -158.29185486]
[-40.60203171 -145.17396545]
[-33.32736969 -132.05606079]
[-26.05271149 -118.93815613]
[-11.16846943 -119.89984894]
[2.71438885 -114.28062439]
[12.82217693 -103.14537811]
[17.11041260 -88.66673279]
[14.67718983 -73.70122528]
[5.95225906 -61.22577286]
[13.22691917 -48.10787201]
[20.50157928 -34.98997116]
[27.77623940 -21.87207031]
[35.05089951 -8.75416946]
[42.32556152 4.36373138]
[49.60021973 17.48163223]
[56.87488174 30.59953308]
[64.22489929 43.67535782]
[71.65003204 56.70867920]
[98.01174164 52.27204514]
[120.86047363 61.49723816]
[134.22616577 79.66375732]
[135.83322144 100.07274628]
[150.49458313 103.24205780]
[165.15592957 106.41136169]
[180.27934265 101.76454163]
[191.08450317 112.01627350]
[205.74584961 115.18558502]
[220.42521667 118.27048492]
[235.12207031 121.27087402]
[249.81892395 124.27125549]
[264.51577759 127.27164459]
[279.21264648 130.27203369]
[293.90951538 133.27241516]
[314.63833618 124.71517181]
[330.13668823 139.83900452]
[344.95605469 142.15994263]
[359.77539062 144.48089600]
[374.59475708 146.80183411]
[389.41409302 149.12277222]
[404.23345947 151.44371033]
[419.05279541 153.76464844]
[433.87216187 156.08558655]
[448.78024292 144.34906006]
[467.21023560 147.22557068]
[477.47375488 162.41590881]
[492.34259033 164.39518738]
[507.21145630 166.37446594]
[504.54104614 159.60224915]
[503.83142090 151.71011353]
[505.36883545 143.19783020]
[509.32165527 134.62644958]
[515.72839355 126.59181213]
[524.49176025 119.69611359]
[537.65130615 112.49705505]
[550.81085205 105.29798889]
[563.97039795 98.09893036]
[577.12994385 90.89987183]
[576.80194092 75.59787750]
[583.63311768 61.90139389]
[596.05371094 52.95778275]
[611.20947266 50.82221603]
[625.61779785 55.98542786]
[635.96777344 67.26094818]
[639.88098145 82.05775452]
[636.45819092 96.97564697]
[626.48602295 108.58659363]
[612.25592041 114.22248840]
[597.03790283 112.58824921]
[584.32897949 104.05941010]
[571.16943359 111.25846863]
[558.00988770 118.45753479]
[544.85034180 125.65659332]
[531.69079590 132.85565186]
[535.11273193 147.46012878]
[550.10052490 148.06411743]
[565.08837891 148.66810608]
[580.07623291 149.27209473]
[594.17675781 142.09674072]
[606.58215332 150.34025574]
[621.57000732 150.94424438]
[636.55780029 151.54823303]
[651.54565430 152.15222168]
[666.53350830 152.75621033]
[677.97833252 141.85707092]
[693.77563477 142.32644653]
[704.55316162 153.88587952]
[703.91680908 169.67735291]
[692.24407959 180.33206177]
[676.46020508 179.52876282]
[665.92950439 167.74403381]
[650.94165039 167.14004517]
[635.95385742 166.53605652]
[620.96600342 165.93206787]
[605.97814941 165.32807922]
[592.94964600 172.54663086]
[579.47222900 164.25993347]
[564.48437500 163.65594482]
[549.49658203 163.05195618]
[534.50872803 162.44796753]
[528.86828613 176.34707642]
[540.03851318 186.35836792]
[551.20880127 196.36964417]
[566.64953613 199.81829834]
[570.96331787 214.07453918]
[582.13354492 224.08581543]
[593.30383301 234.09709167]
[604.47406006 244.10836792]
[615.64428711 254.11964417]
[626.81451416 264.13092041]
[644.93194580 267.51745605]
[649.70239258 284.42187500]
[660.98706055 294.30395508]
[672.27178955 304.18603516]
[688.31036377 304.56423950]
[697.89947510 317.42617798]
[693.68310547 332.90524292]
[678.89569092 339.12725830]
[664.88098145 331.31918335]
[662.38970947 315.47073364]
[651.10504150 305.58865356]
[639.82031250 295.70660400]
[627.75695801 296.19882202]
[618.27819824 288.09039307]
[616.80328369 275.30117798]
[605.63299561 265.28988647]
[594.46276855 255.27861023]
[583.29254150 245.26733398]
[572.12225342 235.25605774]
[560.95202637 225.24478149]
[546.31024170 222.51220703]
[541.19750977 207.53988647]
[530.02728271 197.52861023]
[518.85699463 187.51733398]
[505.23217773 181.24331665]
[490.36331177 179.26402283]
[475.49447632 177.28474426]
[468.18322754 185.98703003]
[457.47402954 190.13800049]
[445.97055054 188.60491943]
[436.52954102 181.65235901]
[431.55120850 170.90493774]
[416.73187256 168.58399963]
[401.91250610 166.26306152]
[387.09317017 163.94212341]
[372.27380371 161.62118530]
[357.45446777 159.30024719]
[342.63510132 156.97930908]
[327.81573486 154.65835571]
[322.64035034 160.49089050]
[315.50546265 163.86218262]
[307.52627563 164.16406250]
[299.98217773 161.27459717]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 153]
[2 152]
[3 151]
[4 150]
[5 149]
[6 148]
[8 147]
[9 146]
[11 144]
[12 143]
[13 142]
[17 56]
[18 55]
[19 54]
[20 53]
[21 52]
[22 51]
[23 50]
[26 44]
[27 43]
[29 41]
[30 40]
[31 39]
[32 38]
[33 37]
[57 82]
[58 81]
[59 80]
[60 79]
[61 78]
[62 77]
[63 76]
[65 75]
[66 74]
[90 138]
[91 137]
[93 136]
[94 135]
[95 134]
[96 133]
[97 132]
[98 131]
[99 130]
[100 129]
[106 123]
[107 122]
[108 121]
[109 120]
[110 119]
[155 268]
[156 267]
[157 266]
[158 265]
[159 264]
[160 263]
[161 262]
[162 261]
[165 256]
[166 255]
[167 254]
[173 193]
[174 192]
[175 191]
[176 190]
[177 189]
[194 219]
[195 218]
[196 217]
[197 216]
[199 214]
[200 213]
[201 212]
[202 211]
[203 210]
[220 253]
[221 252]
[222 251]
[224 249]
[225 248]
[226 247]
[227 246]
[228 245]
[229 244]
[231 241]
[232 240]
[233 239]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
