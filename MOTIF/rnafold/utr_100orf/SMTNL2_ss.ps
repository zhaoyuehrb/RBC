%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:17:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAGCUGCGGAGCUCGGAUCUUCUCCCCCGUCUGGCCCGCUCUCGACCCGCGCGCUCUGCUGGGCCAUGGAGCCGGCCCCCGACGCCCAGGAGGCGCGCACUGUGCGCGAGGCGCUGGGCCGCUACGAGGCGGCGCUGGAGGGUGCGGUGCGCGCGCUGCACGAGG\
) } def
/len { sequence length } bind def

/coor [
[80.22669983 133.60496521]
[78.82624054 118.67048645]
[71.35900116 119.37071991]
[66.14093781 133.43385315]
[60.92287827 147.49699402]
[55.70481491 161.56013489]
[50.48675156 175.62326050]
[53.76565552 191.69126892]
[41.31206512 202.36085510]
[25.93716812 196.65608215]
[23.45734024 180.44551086]
[36.42361450 170.40519714]
[41.64167786 156.34207153]
[46.85974121 142.27893066]
[52.07780457 128.21578979]
[57.29586411 114.15265656]
[44.82382202 105.81909943]
[33.82804489 116.02169037]
[22.83226585 126.22428131]
[20.79794502 142.13783264]
[7.01357841 150.34580994]
[-7.94664860 144.55174255]
[-12.60653019 129.20036316]
[-3.39140368 116.06791687]
[12.62967396 115.22850800]
[23.62545204 105.02591705]
[34.62123108 94.82332611]
[68.43370819 80.95720673]
[95.64337921 93.11518860]
[96.76432800 78.15713501]
[94.27763367 69.32340240]
[98.04866028 62.93070984]
[99.44911957 47.99622726]
[100.84957123 33.06174850]
[102.25002289 18.12726593]
[103.65048218 3.19278479]
[105.05093384 -11.74169636]
[106.31169128 -26.68861961]
[107.43264008 -41.64667511]
[108.55359650 -56.60473251]
[109.67454529 -71.56278992]
[107.18785095 -80.39652252]
[110.95887756 -86.78921509]
[112.35932922 -101.72369385]
[113.75978851 -116.65818024]
[115.16024017 -131.59265137]
[103.65177917 -151.72048950]
[117.01345062 -169.76081848]
[117.01345062 -184.76081848]
[117.01345062 -199.76081848]
[114.63923645 -214.57173157]
[109.95066071 -228.82014465]
[105.26207733 -243.06855774]
[100.57350159 -257.31695557]
[95.88492584 -271.56536865]
[91.19635010 -285.81378174]
[85.51842499 -293.02349854]
[86.55602264 -300.37268066]
[82.13468933 -314.70626831]
[70.67346954 -325.61273193]
[74.31558990 -340.05517578]
[69.89426422 -354.38876343]
[65.47293854 -368.72235107]
[61.05160904 -383.05593872]
[56.63027954 -397.38952637]
[52.20895386 -411.72311401]
[38.51686859 -419.15042114]
[34.23720169 -433.74969482]
[41.40236282 -446.75723267]
[36.98103333 -461.09082031]
[32.55970764 -475.42440796]
[17.67222404 -479.46997070]
[7.35223627 -490.93737793]
[4.89281368 -506.16741943]
[11.07874870 -520.30029297]
[23.93613243 -528.82623291]
[39.36222076 -529.02459717]
[52.43460464 -520.83215332]
[58.98193359 -506.86300659]
[56.91497803 -491.57473755]
[46.89329910 -479.84573364]
[51.31462479 -465.51214600]
[55.73595428 -451.17855835]
[68.98349762 -444.46749878]
[73.67153931 -429.99420166]
[66.54254150 -416.14447021]
[70.96387482 -401.81085205]
[75.38520050 -387.47726440]
[79.80652618 -373.14367676]
[84.22785187 -358.81008911]
[88.64918518 -344.47650146]
[99.79416656 -334.59527588]
[96.46828461 -319.12759399]
[100.88961029 -304.79400635]
[105.44476318 -290.50238037]
[110.13333893 -276.25396729]
[114.82191467 -262.00555420]
[119.51049042 -247.75714111]
[124.19906616 -233.50872803]
[128.88764954 -219.26031494]
[135.98962402 -216.84951782]
[147.26701355 -226.73992920]
[150.19357300 -212.02792358]
[157.29554749 -209.61712646]
[169.68913269 -218.06692505]
[182.08271790 -226.51672363]
[194.47628784 -234.96652222]
[198.85968018 -250.39913940]
[213.71342468 -256.46096802]
[227.64300537 -248.50192261]
[229.96282959 -232.62748718]
[218.89334106 -221.01516724]
[202.92610168 -222.57295227]
[190.53251648 -214.12315369]
[178.13893127 -205.67333984]
[165.74534607 -197.22354126]
[146.95707703 -193.65803528]
[132.01345825 -199.76081848]
[132.01345825 -184.76081848]
[132.01345825 -169.76081848]
[138.22509766 -166.09933472]
[142.80702209 -160.44360352]
[145.14343262 -153.47784424]
[144.89398193 -146.06655884]
[142.04246521 -139.14727783]
[136.90478516 -133.61199951]
[130.09472656 -130.19219971]
[128.69427490 -115.25772095]
[127.29381561 -100.32324219]
[125.89335632 -85.38876343]
[124.63259888 -70.44184113]
[123.51165009 -55.48377991]
[122.39070129 -40.52572250]
[121.26974487 -25.56766701]
[123.91667938 -18.63362885]
[119.98541260 -10.34124184]
[118.58496094 4.59323883]
[117.18450928 19.52771950]
[115.78404999 34.46220016]
[114.38359833 49.39668274]
[112.98314667 64.33116150]
[111.72238159 79.27808380]
[110.60143280 94.23614502]
[114.07583618 108.82821655]
[121.81742859 121.67608643]
[129.55902100 134.52395630]
[137.30061340 147.37182617]
[145.04220581 160.21968079]
[152.78379822 173.06755066]
[160.52539062 185.91542053]
[168.26699829 198.76329041]
[182.87382507 206.21798706]
[183.45095825 222.60696411]
[169.40469360 231.07067871]
[155.18461609 222.90235901]
[155.41912842 206.50488281]
[147.67753601 193.65701294]
[139.93592834 180.80914307]
[132.19433594 167.96128845]
[124.45274353 155.11341858]
[116.71115112 142.26554871]
[108.96955872 129.41767883]
[101.22796631 116.56980896]
[93.76072693 117.27003479]
[95.16117859 132.20451355]
[101.10807800 145.97529602]
[89.84896088 155.88652039]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 16]
[4 15]
[5 14]
[6 13]
[7 12]
[17 27]
[18 26]
[19 25]
[29 143]
[30 142]
[32 141]
[33 140]
[34 139]
[35 138]
[36 137]
[37 136]
[38 134]
[39 133]
[40 132]
[41 131]
[43 130]
[44 129]
[45 128]
[46 127]
[48 120]
[49 119]
[50 118]
[51 100]
[52 99]
[53 98]
[54 97]
[55 96]
[56 95]
[58 94]
[59 93]
[61 91]
[62 90]
[63 89]
[64 88]
[65 87]
[66 86]
[69 83]
[70 82]
[71 81]
[104 116]
[105 115]
[106 114]
[107 113]
[144 163]
[145 162]
[146 161]
[147 160]
[148 159]
[149 158]
[150 157]
[151 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
