%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:40:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUCGCCCCCGCCUCCGGCCCGAGGCCGCACGGGUGUCCUCGCGCUGCUAGUCCGCGCGCAGCCUGGCAGUUUGCCGCUUCCUCGUCCUCCAUCCUGCGUCCAUGGCCACCGCUGCGACUGAGGAGCCCUUCCCUUUUCACGGUCUCCUGCCGAAGAAGGAGACCGGAGCCGCCUCCUUCCUCUGCCGCUACCCGGAGUAUG\
) } def
/len { sequence length } bind def

/coor [
[126.08512878 445.43981934]
[115.59192657 456.33697510]
[102.24393463 463.45639038]
[87.34886169 466.10064697]
[72.36597443 464.01062012]
[58.76313782 457.39108276]
[47.87302399 446.89059448]
[40.76253510 433.53781128]
[38.12828445 418.64099121]
[40.22834778 403.65948486]
[46.85698318 390.06109619]
[57.36478043 379.17800903]
[70.72229767 372.07647705]
[85.62090302 369.45220947]
[87.69325256 354.59606934]
[89.76559448 339.73989868]
[91.83794403 324.88375854]
[93.91028595 310.02758789]
[95.98262787 295.17144775]
[76.73219299 280.62496948]
[69.89941406 257.36560059]
[78.30226135 234.50497437]
[98.76245117 221.08282471]
[97.83903503 206.11126709]
[96.91561890 191.13972473]
[95.99221039 176.16816711]
[95.06879425 161.19662476]
[86.56266785 148.96980286]
[93.43573761 134.71949768]
[92.51232910 119.74794006]
[84.15473938 111.27255249]
[82.23515320 100.50306702]
[86.37561798 91.42542267]
[77.52150726 79.31738281]
[68.66739655 67.20933533]
[59.81328201 55.10129547]
[52.21726990 50.01771164]
[50.91774750 42.73793030]
[42.25114059 30.49497795]
[33.58453369 18.25202370]
[24.91792679 6.00906992]
[16.25131798 -6.23388386]
[2.92842269 -13.12594032]
[-12.07157707 -13.12594032]
[-27.07157707 -13.12594032]
[-42.07157898 -13.12594032]
[-50.32555008 -0.09231136]
[-64.32536316 6.38911104]
[-79.60372162 4.25012922]
[-91.28536224 -5.82671642]
[-95.64271545 -20.62594032]
[-91.28536224 -35.42516327]
[-79.60372162 -45.50201035]
[-64.32536316 -47.64099121]
[-50.32555008 -41.15956879]
[-42.07157898 -28.12594032]
[-27.07157707 -28.12594032]
[-12.07157707 -28.12594032]
[2.92842269 -28.12594032]
[11.11737156 -40.69340134]
[5.05855656 -54.41530991]
[-1.00025845 -68.13722229]
[-7.05907345 -81.85912323]
[-13.11788845 -95.58103180]
[-28.22934914 -106.09913635]
[-25.66862106 -123.45788574]
[-31.93802643 -137.08486938]
[-38.20743179 -150.71185303]
[-44.47683716 -164.33882141]
[-58.68965530 -163.37503052]
[-72.34886932 -167.31314087]
[-83.81877899 -175.66035461]
[-91.73309326 -187.39710999]
[-95.15769958 -201.10166931]
[-93.70088196 -215.12228394]
[-87.55796814 -227.77627563]
[-77.48548889 -237.55197144]
[-83.54430389 -251.27388000]
[-89.60311890 -264.99578857]
[-104.65113831 -263.44268799]
[-119.44217682 -266.61767578]
[-132.52714539 -274.20968628]
[-142.62411499 -285.47497559]
[-148.74388123 -299.30984497]
[-150.28691101 -314.35888672]
[-147.10200500 -329.14779663]
[-139.50122070 -342.22766113]
[-128.22918701 -352.31707764]
[-114.39022064 -358.42758179]
[-99.34012604 -359.96054077]
[-84.55335999 -356.76571655]
[-71.47857666 -349.15615845]
[-61.39671707 -337.87738037]
[-55.29549026 -324.03433228]
[-53.77263641 -308.98321533]
[-56.97734833 -294.19857788]
[-64.59565735 -281.12890625]
[-75.88121033 -271.05459595]
[-69.82239532 -257.33270264]
[-63.76357651 -243.61077881]
[-47.93093109 -244.22088623]
[-33.03982544 -238.69619751]
[-21.37991714 -227.85462952]
[-14.75612164 -213.33407593]
[-14.20923996 -197.34489441]
[-19.85253143 -182.33355713]
[-30.84985924 -170.60823059]
[-24.58045387 -156.98124695]
[-18.31104851 -143.35427856]
[-12.04164314 -129.72729492]
[-0.80567414 -125.23683929]
[4.52750349 -113.93062592]
[0.60401946 -101.63984680]
[6.66283464 -87.91793823]
[12.72164917 -74.19603729]
[18.78046417 -60.47412491]
[24.83927917 -46.75221634]
[29.83703423 -41.10789871]
[32.75027466 -34.39431381]
[33.41600418 -27.32766151]
[31.90342331 -20.61852455]
[28.49427223 -14.90049076]
[37.16088104 -2.65753746]
[45.82748795 9.58541584]
[54.49409485 21.82836914]
[63.16070175 34.07132339]
[71.92132568 46.24718094]
[80.77543640 58.35522461]
[89.62954712 70.46326447]
[98.48366547 82.57130432]
[93.61203766 68.38443756]
[97.55358124 53.91156006]
[108.94620514 44.15409851]
[123.85293579 42.48396301]
[137.12242126 49.47830963]
[144.16908264 62.72008133]
[142.55780029 77.63329315]
[132.84536743 89.06433868]
[118.38780975 93.06296539]
[133.38069153 93.52488708]
[142.06025696 90.66000366]
[148.60040283 94.11113739]
[163.58439636 94.80388641]
[178.56838989 95.49664307]
[193.55239868 96.18939209]
[208.53639221 96.88214111]
[223.52038574 97.57489777]
[238.50437927 98.26764679]
[253.48837280 98.96040344]
[268.47235107 99.65315247]
[278.05755615 87.45054626]
[292.99383545 83.24487305]
[307.53784180 88.65329742]
[316.09716797 101.59616852]
[315.38052368 117.09667969]
[305.66351318 129.19458008]
[290.68252563 133.23797607]
[276.19802856 127.67210388]
[267.77960205 114.63714600]
[252.79562378 113.94439697]
[237.81163025 113.25164032]
[222.82763672 112.55889130]
[207.84362793 111.86614227]
[192.85963440 111.17338562]
[177.87564087 110.48063660]
[162.89164734 109.78787994]
[147.90765381 109.09513092]
[132.91877747 108.51777649]
[117.92588806 108.05584717]
[107.48387909 118.82453156]
[108.40728760 133.79608154]
[116.97946930 147.09376526]
[110.04034424 160.27320862]
[110.96376038 175.24475098]
[111.88716888 190.21630859]
[112.81058502 205.18785095]
[113.73400116 220.15940857]
[120.34275818 221.66841125]
[126.58454132 224.29376221]
[132.27258301 227.95414734]
[137.23715210 232.53729248]
[141.33062744 237.90342712]
[144.43190002 243.88958740]
[146.44996643 250.31452942]
[147.32655334 256.98416138]
[147.03782654 263.69757080]
[145.59501648 270.25286865]
[143.04403687 276.45339966]
[139.46398926 282.11361694]
[134.96475220 287.06463623]
[129.68354797 291.15924072]
[123.78082275 294.27621460]
[117.43534088 296.32412720]
[110.83879089 297.24377441]
[108.76644135 312.09994507]
[106.69409943 326.95608521]
[104.62174988 341.81225586]
[102.54940796 356.66839600]
[100.47705841 371.52456665]
[114.08875275 378.12585449]
[124.99292755 388.61175537]
[132.12130737 401.95495605]
[134.77552795 416.84826660]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 199]
[15 198]
[16 197]
[17 196]
[18 195]
[19 194]
[23 177]
[24 176]
[25 175]
[26 174]
[27 173]
[29 171]
[30 170]
[33 130]
[34 129]
[35 128]
[36 127]
[38 126]
[39 125]
[40 124]
[41 123]
[42 122]
[43 59]
[44 58]
[45 57]
[46 56]
[60 117]
[61 116]
[62 115]
[63 114]
[64 113]
[66 110]
[67 109]
[68 108]
[69 107]
[77 100]
[78 99]
[79 98]
[139 169]
[140 168]
[142 167]
[143 166]
[144 165]
[145 164]
[146 163]
[147 162]
[148 161]
[149 160]
[150 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
