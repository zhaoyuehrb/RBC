%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:14:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAAGACGGAAAUGGGCGGGGCUGCGAGCUAGGGCGGGAGAAGGAGCGCGGGGAGGACGUACCUUGUGAGAUGCGAGCCGGCCAACAGCUUGCAAGCAUGCUCCGCUGGACCCGAGCCUGGAGGCUCCCGCGUGAGGGACUCGGCCCCCACGGCCCUAGCUUCGCGAGGG\
) } def
/len { sequence length } bind def

/coor [
[92.90544128 122.11382294]
[88.38022614 117.11187744]
[85.98538208 111.52426147]
[85.64013672 106.10708618]
[87.02311707 101.51259613]
[89.62686920 98.21894073]
[92.83122253 96.48281860]
[80.90998077 87.37874603]
[68.98873901 78.27468109]
[56.35451508 84.32595825]
[42.41213226 84.33496857]
[29.88965607 78.35710144]
[21.21266937 67.61357880]
[18.03450203 54.24243164]
[20.92141342 40.87315369]
[9.16943645 31.55161858]
[-2.58254123 22.23008156]
[-14.33451843 12.90854645]
[-26.08649635 3.58701158]
[-37.83847427 -5.73452377]
[-49.59045029 -15.05605984]
[-61.34243011 -24.37759399]
[-73.50999451 -33.14972305]
[-86.06749725 -41.35394669]
[-98.62499237 -49.55817032]
[-111.18248749 -57.76239014]
[-123.73999023 -65.96661377]
[-136.29748535 -74.17083740]
[-148.85498047 -82.37506104]
[-161.41247559 -90.57928467]
[-181.54531860 -90.74173737]
[-189.59526062 -108.29825592]
[-202.44567871 -116.03563690]
[-218.25929260 -116.52561951]
[-225.17156982 -129.71916199]
[-238.02198792 -137.45654297]
[-250.87239075 -145.19392395]
[-262.01327515 -135.00762939]
[-275.55941772 -128.38005066]
[-290.40921021 -125.84063721]
[-305.35775757 -127.58674622]
[-319.19461060 -133.46838379]
[-330.80169678 -143.00102234]
[-339.24383545 -155.40551758]
[-343.84384155 -169.67175293]
[-344.23712158 -184.64094543]
[-340.40032959 -199.09973145]
[-353.25073242 -206.83709717]
[-366.10113525 -214.57447815]
[-378.95153809 -222.31185913]
[-391.80194092 -230.04924011]
[-404.65237427 -237.78662109]
[-417.50277710 -245.52400208]
[-431.73883057 -239.35034180]
[-446.87747192 -242.75633240]
[-457.09759521 -254.43232727]
[-458.46932983 -269.88867188]
[-450.46524048 -283.18203735]
[-436.16305542 -289.20089722]
[-421.06222534 -285.63085938]
[-410.96939087 -273.84469604]
[-409.76538086 -258.37438965]
[-396.91497803 -250.63702393]
[-384.06457520 -242.89964294]
[-371.21417236 -235.16226196]
[-358.36376953 -227.42489624]
[-345.51336670 -219.68751526]
[-332.66293335 -211.95013428]
[-321.67919922 -222.10565186]
[-308.26528931 -228.76138306]
[-293.50457764 -231.37028503]
[-278.59173584 -229.71249390]
[-264.73632812 -223.91386414]
[-253.06454468 -214.43646240]
[-244.52764893 -202.04170227]
[-239.82455444 -187.72926331]
[-239.34452820 -172.65638733]
[-243.13500977 -158.04432678]
[-230.28460693 -150.30694580]
[-217.43418884 -142.56956482]
[-202.53971863 -142.63302612]
[-194.70829773 -128.88604736]
[-181.85789490 -121.14866638]
[-172.15660095 -124.50270844]
[-162.00291443 -121.88862610]
[-154.83235168 -113.94027710]
[-153.20825195 -103.13677979]
[-140.65075684 -94.93255615]
[-128.09326172 -86.72833252]
[-115.53576660 -78.52410889]
[-102.97826385 -70.31988525]
[-90.42076874 -62.11566544]
[-77.86327362 -53.91144562]
[-65.30577850 -45.70722198]
[-65.56289673 -60.70501709]
[-54.11846924 -70.40167236]
[-39.36651611 -67.68508148]
[-32.12699509 -54.54775620]
[-37.70980072 -40.62538910]
[-52.02089310 -36.12957382]
[-40.26891708 -26.80803680]
[-28.51693916 -17.48650169]
[-16.76496124 -8.16496563]
[-5.01298332 1.15656936]
[6.73899412 10.47810459]
[18.49097252 19.79964066]
[30.24294853 29.12117577]
[45.10100174 22.81360245]
[61.20667648 24.86061096]
[74.16325378 34.79859161]
[80.38579559 49.99685287]
[78.09281158 66.35343933]
[90.01404572 75.45751190]
[101.93528748 84.56157684]
[116.68285370 87.30188751]
[131.07876587 83.08792114]
[145.47468567 78.87394714]
[159.87060547 74.65998077]
[170.79977417 62.43355560]
[186.79525757 66.04968262]
[191.40228271 81.78839874]
[179.88154602 93.45906830]
[164.08457947 89.05590057]
[149.68865967 93.26986694]
[135.29273987 97.48383331]
[120.89682007 101.69780731]
[117.48229218 116.30400085]
[128.51815796 126.46322632]
[139.55401611 136.62245178]
[154.94746399 140.27653503]
[159.07087708 154.58900452]
[170.10675049 164.74821472]
[181.14260864 174.90744019]
[192.17846680 185.06666565]
[203.21432495 195.22589111]
[214.25018311 205.38511658]
[225.28604126 215.54434204]
[238.42207336 210.67752075]
[252.30650330 211.94747925]
[264.22784424 219.04884338]
[271.88272095 230.54301453]
[273.82095337 244.14930725]
[269.71984863 257.19741821]
[280.56723022 267.55764771]
[291.41458130 277.91790771]
[302.26193237 288.27813721]
[318.26922607 289.34872437]
[327.29385376 302.61282349]
[322.41284180 317.89535522]
[307.37054443 323.47286987]
[293.70608521 315.06677246]
[291.90170288 299.12551880]
[281.05432129 288.76525879]
[270.20697021 278.40502930]
[259.35961914 268.04476929]
[243.98559570 272.96282959]
[228.13560486 269.44705200]
[216.14526367 258.36245728]
[211.34309387 242.65748596]
[215.12681580 226.58020020]
[204.09095764 216.42097473]
[193.05509949 206.26174927]
[182.01924133 196.10252380]
[170.98338318 185.94329834]
[159.94752502 175.78407288]
[148.91166687 165.62486267]
[134.30757141 162.69743347]
[129.39479065 147.65830994]
[118.35892487 137.49908447]
[107.32306671 127.33985901]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 114]
[8 113]
[9 112]
[15 107]
[16 106]
[17 105]
[18 104]
[19 103]
[20 102]
[21 101]
[22 100]
[23 94]
[24 93]
[25 92]
[26 91]
[27 90]
[28 89]
[29 88]
[30 87]
[32 83]
[33 82]
[35 80]
[36 79]
[37 78]
[47 68]
[48 67]
[49 66]
[50 65]
[51 64]
[52 63]
[53 62]
[115 126]
[116 125]
[117 124]
[118 123]
[127 170]
[128 169]
[129 168]
[131 166]
[132 165]
[133 164]
[134 163]
[135 162]
[136 161]
[137 160]
[143 155]
[144 154]
[145 153]
[146 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
