%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:03:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAACCGCGCGGGCCAAUCGCGCUGCUCCCGGGUGAUGACGUAGGCUGCGCCUGUGCAUGCGCAGGGAGGGGAGACCUUGGCGGAGCGGCGGAGGCGCCCAGCGGAGGUGAAAGUAUUGGCGGAAAGGAAAAUACAGCGGAAAAAUGCAGAGCUGGAGUCGUGUGUACUGCUCCUUGGCCAAGAGAGGCCAUUUCAAUCGAAUAUCUCAUGGCCUACAGGGACUUUCUGCAGUGCCUCUGAGAA\
) } def
/len { sequence length } bind def

/coor [
[-137.86282349 281.58407593]
[-151.53196716 275.40713501]
[-159.76861572 262.87088013]
[-160.01199341 247.87286377]
[-152.18508911 235.07476807]
[-166.19453430 240.43531799]
[-180.20397949 245.79586792]
[-194.21340942 251.15641785]
[-196.79023743 264.68411255]
[-205.64010620 275.09329224]
[-218.37384033 279.73864746]
[-231.63412476 277.50906372]
[-241.98066711 269.09133911]
[-256.05767822 274.27178955]
[-270.13470459 279.45227051]
[-284.21173096 284.63275146]
[-298.28875732 289.81323242]
[-299.83178711 304.95855713]
[-307.76519775 317.87936401]
[-320.46987915 326.04095459]
[-335.39694214 327.86956787]
[-349.57919312 323.05566406]
[-360.22085571 312.60479736]
[-374.29788208 317.78527832]
[-384.57669067 329.81259155]
[-399.19302368 326.94692993]
[-413.27005005 332.12741089]
[-427.34707642 337.30789185]
[-441.42410278 342.48837280]
[-455.50112915 347.66885376]
[-461.59939575 359.01754761]
[-473.41317749 363.04959106]
[-484.44549561 358.12289429]
[-498.58776855 363.12246704]
[-512.73010254 368.12200928]
[-526.84002686 373.21212769]
[-540.91705322 378.39260864]
[-554.99407959 383.57305908]
[-561.94775391 389.46060181]
[-569.28497314 388.72845459]
[-583.42724609 393.72799683]
[-597.56958008 398.72753906]
[-611.71185303 403.72711182]
[-625.85412598 408.72665405]
[-639.99645996 413.72619629]
[-654.13873291 418.72573853]
[-667.05694580 429.70559692]
[-681.18377686 420.33178711]
[-676.08697510 404.16207886]
[-659.13830566 404.58343506]
[-644.99597168 399.58389282]
[-630.85369873 394.58435059]
[-616.71142578 389.58480835]
[-602.56909180 384.58526611]
[-588.42681885 379.58572388]
[-574.28448486 374.58615112]
[-560.17456055 369.49603271]
[-546.09753418 364.31558228]
[-532.02050781 359.13510132]
[-526.84051514 353.88739014]
[-517.72961426 353.97970581]
[-503.58734131 348.98016357]
[-489.44503784 343.98062134]
[-478.76177979 330.04608154]
[-460.68161011 333.59182739]
[-446.60458374 328.41134644]
[-432.52755737 323.23086548]
[-418.45053101 318.05038452]
[-404.37350464 312.86990356]
[-395.10156250 301.21313477]
[-379.47833252 303.70825195]
[-365.40130615 298.52777100]
[-364.07281494 283.67178345]
[-356.39431763 270.81292725]
[-343.84280396 262.52917480]
[-328.87829590 260.50827026]
[-314.46179199 265.20410156]
[-303.46923828 275.73620605]
[-289.39221191 270.55572510]
[-275.31518555 265.37524414]
[-261.23815918 260.19479370]
[-247.16113281 255.01429749]
[-243.19358826 239.07458496]
[-230.37327576 228.54139709]
[-213.63436890 227.72546387]
[-199.57397461 237.14697266]
[-185.56452942 231.78642273]
[-171.55508423 226.42587280]
[-157.54563904 221.06532288]
[-143.86866760 214.90574646]
[-130.56967163 207.96768188]
[-117.27068329 201.02960205]
[-103.97169495 194.09153748]
[-90.67270660 187.15345764]
[-77.37371063 180.21537781]
[-64.07472229 173.27731323]
[-50.77573395 166.33923340]
[-37.47674561 159.40115356]
[-35.31155777 149.44314575]
[-27.87464333 142.15892029]
[-17.44352913 140.11616516]
[-7.40230703 144.22283936]
[6.07022142 137.62806702]
[19.54274940 131.03329468]
[33.01527786 124.43852997]
[46.48780823 117.84375763]
[59.96033478 111.24899292]
[73.43286133 104.65422058]
[73.64321899 94.27333069]
[77.75949097 84.74108887]
[85.17166901 77.47013092]
[94.78131104 73.53795624]
[105.16432953 73.52729034]
[112.01699066 60.18409348]
[118.86965942 46.84089661]
[125.72232819 33.49769592]
[132.57499695 20.15449715]
[127.96988678 5.27394772]
[135.10954285 -8.16033459]
[149.32424927 -12.45889568]
[156.17692566 -25.80209351]
[163.02958679 -39.14529419]
[169.88226318 -52.48849106]
[164.23516846 -58.46973038]
[160.13806152 -65.58452606]
[157.80831909 -73.44078827]
[157.36613464 -81.60753632]
[158.82835388 -89.63849640]
[162.10798645 -97.09651947]
[167.01928711 -103.57735443]
[173.28831482 -108.73158264]
[180.56816101 -112.28344727]
[188.45817566 -114.04557037]
[196.52601624 -113.92887115]
[204.33129883 -111.94702911]
[212.51431274 -124.51834869]
[220.69734192 -137.08967590]
[228.88035583 -149.66099548]
[220.56436157 -162.41889954]
[218.16284180 -177.45726013]
[222.09187317 -192.17060852]
[231.67073059 -204.00976562]
[245.23982239 -210.92350769]
[260.44821167 -211.71400452]
[274.66094971 -206.24429321]
[285.41561890 -195.46202087]
[290.84887695 -181.23530579]
[290.01937866 -166.02899170]
[283.07089233 -152.47767639]
[271.20721436 -142.92919922]
[256.48385620 -139.03790283]
[241.45169067 -141.47796631]
[233.26866150 -128.90664673]
[225.08563232 -116.33532715]
[216.90261841 -103.76399994]
[226.65660095 -83.93869781]
[222.37069702 -62.13189316]
[205.64593506 -47.30138016]
[183.22546387 -45.63582611]
[176.37278748 -32.29262543]
[169.52012634 -18.94942665]
[162.66744995 -5.60622835]
[167.45501709 8.45132732]
[160.69551086 22.08084679]
[145.91819763 27.00716400]
[139.06552124 40.35036469]
[132.21286011 53.69356155]
[125.36019135 67.03675842]
[118.50752258 80.37995911]
[123.35677338 86.51165009]
[126.24389648 93.77645111]
[126.92634583 101.56407166]
[141.06864929 106.56362152]
[155.21093750 111.56316376]
[169.35324097 116.56271362]
[183.49552917 121.56226349]
[197.73136902 126.28888702]
[212.05548096 130.74082947]
[226.37959290 135.19277954]
[240.70368958 139.64472961]
[255.02780151 144.09667969]
[270.50256348 140.80386353]
[280.35995483 151.96994019]
[294.68405151 156.42189026]
[309.00817871 160.87384033]
[323.33227539 165.32579041]
[330.20928955 158.55413818]
[339.02212524 154.76330566]
[348.55212402 154.43182373]
[357.49795532 157.56301880]
[364.65319824 163.69017029]
[369.06921387 171.94567871]
[370.18057251 181.18367004]
[384.25759888 186.36413574]
[398.33462524 191.54461670]
[414.39379883 188.22279358]
[425.09661865 200.64784241]
[419.43292236 216.03791809]
[403.22903442 218.56105042]
[393.15414429 205.62164307]
[379.07711792 200.44116211]
[365.00009155 195.26069641]
[347.19659424 205.33955383]
[327.47961426 198.86218262]
[318.88031006 179.64990234]
[304.55621338 175.19795227]
[290.23211670 170.74600220]
[275.90798950 166.29405212]
[261.45779419 169.90530396]
[250.57585144 158.42079163]
[236.25173950 153.96884155]
[221.92764282 149.51689148]
[207.60353088 145.06494141]
[193.27941895 140.61299133]
[190.02142334 141.90475464]
[185.97949219 141.69621277]
[181.85940552 139.63754272]
[178.49598694 135.70455933]
[164.35368347 130.70500183]
[150.21139526 125.70545959]
[136.06909180 120.70591736]
[121.92680359 115.70636749]
[101.55548096 126.92684174]
[80.02763367 118.12674713]
[66.55510712 124.72151947]
[53.08257675 131.31628418]
[39.61004639 137.91105652]
[26.13751984 144.50582886]
[12.66499043 151.10060120]
[-0.80753785 157.69535828]
[-11.31672287 174.91484070]
[-30.53867149 172.70014954]
[-43.83766174 179.63822937]
[-57.13665009 186.57629395]
[-70.43563843 193.51437378]
[-83.73462677 200.45243835]
[-97.03361511 207.39051819]
[-110.33261108 214.32859802]
[-123.63159943 221.26666260]
[-136.93058777 228.20474243]
[-122.16119385 230.82485962]
[-111.09072876 240.94636536]
[-107.16101074 255.42245483]
[-111.59380341 269.75250244]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 89]
[6 88]
[7 87]
[8 86]
[13 82]
[14 81]
[15 80]
[16 79]
[17 78]
[23 72]
[24 71]
[26 69]
[27 68]
[28 67]
[29 66]
[30 65]
[33 63]
[34 62]
[35 61]
[36 59]
[37 58]
[38 57]
[40 56]
[41 55]
[42 54]
[43 53]
[44 52]
[45 51]
[46 50]
[90 240]
[91 239]
[92 238]
[93 237]
[94 236]
[95 235]
[96 234]
[97 233]
[98 232]
[102 230]
[103 229]
[104 228]
[105 227]
[106 226]
[107 225]
[108 224]
[113 169]
[114 168]
[115 167]
[116 166]
[117 165]
[120 162]
[121 161]
[122 160]
[123 159]
[135 155]
[136 154]
[137 153]
[138 152]
[172 222]
[173 221]
[174 220]
[175 219]
[176 218]
[177 214]
[178 213]
[179 212]
[180 211]
[181 210]
[183 208]
[184 207]
[185 206]
[186 205]
[193 202]
[194 201]
[195 200]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
