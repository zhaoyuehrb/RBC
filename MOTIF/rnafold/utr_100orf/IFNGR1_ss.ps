%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:35:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAGACCCCGGUGACGGAAGUGACGUAAGGCCGGGGCUGGAGGGCAGUGCUGGGCUGGUCCCGCAGGCGCUCGGGGUUGGAGCCAGCGACCGUCGGUAGCAGCAUGGCUCUCCUCUUUCUCCUACCCCUUGUCAUGCAGGGUGUGAGCAGGGCUGAGAUGGGCACCGCGGAUCUGGGGCCGUCCUCAGUGCCUACACCAACUA\
) } def
/len { sequence length } bind def

/coor [
[-105.10022736 517.82940674]
[-111.21736145 516.07366943]
[-120.07147217 528.18170166]
[-128.92558289 540.28973389]
[-131.46719360 549.06939697]
[-138.01045227 552.51464844]
[-147.04997253 564.48492432]
[-156.08949280 576.45520020]
[-165.12901306 588.42541504]
[-174.16853333 600.39569092]
[-183.20805359 612.36596680]
[-192.24757385 624.33624268]
[-193.81347656 644.43011475]
[-211.92288208 651.19854736]
[-220.58947754 663.44146729]
[-229.25608826 675.68444824]
[-225.11163330 690.76281738]
[-231.67596436 704.95593262]
[-245.84957886 711.56213379]
[-260.94015503 707.46234131]
[-269.82235718 694.59216309]
[-268.30230713 679.02862549]
[-257.09771729 668.12036133]
[-241.49903870 667.01782227]
[-232.83244324 654.77490234]
[-224.16583252 642.53192139]
[-226.78834534 632.64886475]
[-223.46543884 622.74682617]
[-215.06629944 616.17541504]
[-204.21783447 615.29669189]
[-195.17831421 603.32641602]
[-186.13879395 591.35620117]
[-177.09927368 579.38592529]
[-168.05975342 567.41564941]
[-159.02023315 555.44543457]
[-149.98071289 543.47515869]
[-141.03363037 531.43566895]
[-132.17951965 519.32757568]
[-123.32540131 507.21954346]
[-129.98864746 484.18066406]
[-117.39186096 463.47833252]
[-93.37670898 458.70986938]
[-86.48464966 445.38696289]
[-79.59259033 432.06405640]
[-72.70053864 418.74118042]
[-65.80847931 405.41827393]
[-66.83289337 390.55892944]
[-53.61990356 381.85678101]
[-46.72784805 368.53387451]
[-50.09494019 356.91174316]
[-44.45750046 345.75415039]
[-32.35210800 341.29135132]
[-25.25570679 328.07617188]
[-18.15930367 314.86099243]
[-11.06289959 301.64581299]
[-10.66782951 294.26150513]
[-3.75410414 288.28298950]
[3.54496312 275.17864990]
[10.84403038 262.07431030]
[18.14309692 248.96998596]
[25.44216537 235.86564636]
[32.74123001 222.76132202]
[39.42730713 209.33386230]
[45.48612213 195.61195374]
[45.31199265 188.21914673]
[51.74534225 181.72651672]
[58.01474762 168.09953308]
[56.30517578 153.30337524]
[69.10216522 144.00027466]
[75.37157440 130.37329102]
[81.64097595 116.74632263]
[87.91038513 103.11933899]
[89.29441071 88.18332672]
[85.63570404 73.63637543]
[81.97699738 59.08942032]
[78.31829071 44.54246521]
[73.99169922 39.53134155]
[72.99868774 33.92859268]
[74.77826691 29.49118423]
[71.56926727 14.83845997]
[68.36026764 0.18573548]
[65.15127563 -14.46698952]
[61.94227982 -29.11971474]
[58.73328400 -43.77243805]
[55.52428436 -58.42516327]
[51.86558151 -72.97211456]
[47.76063538 -87.39950562]
[36.54210663 -98.55545044]
[40.50105667 -112.91427612]
[36.39611053 -127.34165955]
[32.29116440 -141.76904297]
[22.14105797 -155.34887695]
[32.38034821 -168.86158752]
[48.19948959 -162.76313782]
[46.71855164 -145.87399292]
[50.82349396 -131.44660950]
[54.92844009 -117.01922607]
[65.85335541 -106.89521790]
[62.18801880 -91.50444794]
[66.29296112 -77.07706451]
[68.67962646 -75.59662628]
[70.62195587 -73.07896423]
[71.72098541 -69.68919373]
[71.64503479 -65.73400879]
[70.17700958 -61.63415909]
[73.38600922 -46.98143387]
[76.59500122 -32.32870865]
[79.80400085 -17.67598534]
[83.01299286 -3.02326083]
[86.22199249 11.62946415]
[89.43098450 26.28218842]
[92.86524963 40.88375854]
[96.52394867 55.43071365]
[100.18265533 69.97766876]
[103.84136200 84.52462006]
[110.65485382 87.65932465]
[124.28182983 93.92872620]
[131.09532166 97.06343079]
[144.52276611 90.37735748]
[157.95022583 83.69128418]
[171.37767029 77.00520325]
[172.89091492 65.20668793]
[179.84263611 55.70246506]
[190.41091919 50.78731918]
[201.91921997 51.57841873]
[211.51394653 57.76357269]
[225.14091492 51.49416733]
[238.76789856 45.22476196]
[252.39488220 38.95535660]
[257.95544434 24.40482903]
[271.86444092 18.24088287]
[285.70187378 23.63170242]
[299.32885742 17.36229706]
[312.95584106 11.09289265]
[326.58282471 4.82348728]
[340.20980835 -1.44591808]
[353.83679199 -7.71532345]
[365.69894409 -19.82834244]
[380.62237549 -11.78296566]
[377.02261353 4.78441620]
[360.10617065 5.91165590]
[346.47921753 12.18106079]
[332.85223389 18.45046616]
[319.22525024 24.71987152]
[305.59826660 30.98927689]
[291.97128296 37.25868225]
[287.06222534 51.27426529]
[273.33181763 57.82645416]
[258.66427612 52.58233643]
[245.03730774 58.85174179]
[231.41032410 65.12114716]
[217.78334045 71.39054871]
[212.48384094 88.90864563]
[195.77854919 97.13607025]
[178.06375122 90.43265533]
[164.63629150 97.11872864]
[151.20884705 103.80480957]
[137.78140259 110.49088287]
[116.26692200 118.13587952]
[101.53736115 109.38874817]
[95.26795959 123.01572418]
[88.99855042 136.64270020]
[82.72914886 150.26968384]
[83.99029541 166.04054260]
[71.64173126 174.36894226]
[65.37232208 187.99592590]
[59.20803070 201.67077637]
[53.14921570 215.39268494]
[67.50187683 211.03366089]
[80.79962158 217.97410583]
[85.43076324 232.24128723]
[78.74441528 245.66859436]
[64.56787109 250.57019043]
[51.01585007 244.14035034]
[45.84556580 230.06037903]
[38.54650116 243.16471863]
[31.24743271 256.26904297]
[23.94836617 269.37338257]
[16.64929962 282.47772217]
[9.35023212 295.58206177]
[2.15228319 308.74221802]
[-4.94412041 321.95739746]
[-12.04052353 335.17257690]
[-19.13692665 348.38775635]
[-18.14063263 366.77236938]
[-33.40494919 375.42593384]
[-40.29700851 388.74884033]
[-39.76556015 404.56112671]
[-52.48558426 412.31033325]
[-59.37763977 425.63323975]
[-66.26969910 438.95611572]
[-73.16175079 452.27902222]
[-80.05381012 465.60192871]
[-75.69950104 470.49353027]
[-72.49549103 476.18743896]
[-70.58332062 482.41873169]
[-70.04460907 488.89907837]
[-70.89757538 495.33004761]
[-73.09651184 501.41693115]
[-76.53417206 506.88217163]
[-81.04698944 511.47805786]
[-86.42285156 514.99798584]
[-92.41107178 517.28558350]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 39]
[3 38]
[4 37]
[6 36]
[7 35]
[8 34]
[9 33]
[10 32]
[11 31]
[12 30]
[14 26]
[15 25]
[16 24]
[42 193]
[43 192]
[44 191]
[45 190]
[46 189]
[48 187]
[49 186]
[52 184]
[53 183]
[54 182]
[55 181]
[57 180]
[58 179]
[59 178]
[60 177]
[61 176]
[62 175]
[63 168]
[64 167]
[66 166]
[67 165]
[69 163]
[70 162]
[71 161]
[72 160]
[73 115]
[74 114]
[75 113]
[76 112]
[79 111]
[80 110]
[81 109]
[82 108]
[83 107]
[84 106]
[85 105]
[86 100]
[87 99]
[89 97]
[90 96]
[91 95]
[118 158]
[119 157]
[120 156]
[121 155]
[126 152]
[127 151]
[128 150]
[129 149]
[132 146]
[133 145]
[134 144]
[135 143]
[136 142]
[137 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
