%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:35:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAGCCUGACUCCUGGAGAUUGUGAAUAGCUCCAUCCAGCCUGAGAAACAAGCCGGGUGGCUGAGCCAGGCUGUGCACGGAGUGCCUGACGGGCCCAACAGACCCAUGCUGCAUCCAGAGACCUCCCCUGGCCGGGGGCAUCUCCUGGCUGUGCUCCUGGCCCUCCUUGGCACCGCCUGGGCAGAGGUGUGGCCACCCCAGCUGC\
) } def
/len { sequence length } bind def

/coor [
[-153.13305664 428.00158691]
[-169.86814880 430.68118286]
[-186.03855896 425.79357910]
[-195.85365295 437.13659668]
[-205.66873169 448.47961426]
[-208.84777832 463.97814941]
[-223.02668762 468.53970337]
[-232.84176636 479.88272095]
[-242.65686035 491.22573853]
[-239.25778198 501.34439087]
[-240.35877991 511.88055420]
[-245.69436646 520.93865967]
[-254.24328613 526.91711426]
[-264.42340088 528.79138184]
[-274.38427734 526.28887939]
[-284.70547485 537.17340088]
[-295.02667236 548.05792236]
[-305.34783936 558.94244385]
[-315.66903687 569.82696533]
[-319.30465698 578.21020508]
[-326.23040771 580.79687500]
[-336.71560669 591.52349854]
[-347.20077515 602.25018311]
[-350.73822021 618.26324463]
[-366.45407104 622.94763184]
[-378.18127441 611.48443604]
[-373.85583496 595.66595459]
[-357.92742920 591.76495361]
[-347.44223022 581.03833008]
[-336.95706177 570.31170654]
[-326.55355835 559.50579834]
[-316.23239136 548.62127686]
[-305.91119385 537.73675537]
[-295.58999634 526.85217285]
[-285.26879883 515.96765137]
[-287.21716309 496.58685303]
[-274.08517456 481.79010010]
[-253.99987793 481.41064453]
[-244.18478394 470.06762695]
[-234.36970520 458.72460938]
[-231.89270020 444.03741455]
[-217.01174927 438.66452026]
[-207.19665527 427.32150269]
[-197.38157654 415.97848511]
[-203.50056458 404.51599121]
[-205.36370850 391.62451172]
[-202.72769165 378.83599854]
[-195.88510132 367.67764282]
[-185.63223267 359.48950195]
[-173.17642212 355.26351929]
[-159.99385071 355.52349854]
[-147.65469360 360.26016235]
[-137.49987793 349.22024536]
[-127.34506989 338.18032837]
[-124.44435883 320.87411499]
[-106.82933807 315.51321411]
[-96.84323883 304.32046509]
[-86.85713196 293.12771606]
[-76.87103271 281.93493652]
[-66.88493347 270.74218750]
[-56.89883041 259.54943848]
[-46.91272736 248.35668945]
[-36.92662430 237.16392517]
[-38.02762222 222.35435486]
[-28.05974197 210.86105347]
[-12.51863575 209.80664062]
[-2.53253365 198.61389160]
[7.45356798 187.42112732]
[5.95702553 177.30917358]
[10.36757469 167.84468079]
[19.44701576 162.25653076]
[30.32264519 162.59637451]
[40.64383316 151.71185303]
[50.96502304 140.82731628]
[61.28621292 129.94277954]
[64.42912292 115.38354492]
[79.53919983 110.69352722]
[89.86038971 99.80899811]
[92.68191528 92.25547791]
[100.42176819 88.83909607]
[110.90695190 78.11245728]
[115.05325317 60.17266083]
[132.12120056 56.09769440]
[142.44238281 45.21316147]
[152.76358032 34.32862854]
[163.08476257 23.44409561]
[173.40596008 12.55956364]
[177.21136475 -7.23434353]
[195.96681213 -11.93009949]
[205.95291138 -23.12285423]
[209.33244324 -31.61257744]
[216.17649841 -34.40822220]
[226.33131409 -45.44813919]
[236.48612976 -56.48805237]
[246.64094543 -67.52796936]
[256.79574585 -78.56788635]
[252.19621277 -86.47225189]
[249.45869446 -95.18579102]
[248.71333313 -104.27696228]
[249.99172974 -113.29673767]
[253.22566223 -121.80073547]
[258.25070190 -129.37117004]
[264.81454468 -135.63734436]
[272.58969116 -140.29377747]
[281.18981934 -143.11517334]
[290.18890381 -143.96723938]
[299.14239502 -142.81307983]
[307.60910034 -139.71481323]
[315.17306519 -134.83020020]
[326.59024048 -144.55894470]
[331.09429932 -152.50941467]
[338.25527954 -154.34707642]
[349.81878662 -163.90142822]
[361.38229370 -173.45576477]
[367.09252930 -188.21055603]
[381.83230591 -190.35258484]
[393.39581299 -199.90692139]
[404.95928955 -209.46127319]
[416.52279663 -219.01560974]
[428.01345825 -228.65742493]
[439.43063354 -238.38615417]
[450.84780884 -248.11488342]
[452.25570679 -263.62796021]
[463.97293091 -273.33163452]
[478.75360107 -271.89379883]
[490.17077637 -281.62255859]
[501.58795166 -291.35128784]
[513.00512695 -301.08001709]
[524.42230225 -310.80874634]
[527.12738037 -326.62210083]
[541.24633789 -334.24011230]
[555.94830322 -327.81893921]
[559.95520020 -312.28430176]
[550.19329834 -299.55310059]
[534.15100098 -299.39157104]
[522.73388672 -289.66284180]
[511.31668091 -279.93411255]
[499.89950562 -270.20538330]
[488.48233032 -260.47665405]
[487.55651855 -245.65509033]
[476.11648560 -235.62612915]
[460.57653809 -236.69772339]
[449.15936279 -226.96897888]
[437.74218750 -217.24024963]
[434.68896484 -210.50717163]
[426.07714844 -207.45210266]
[414.51364136 -197.89776611]
[402.95013428 -188.34342957]
[391.38665771 -178.78907776]
[386.50350952 -164.71768188]
[370.93664551 -161.89227295]
[359.37313843 -152.33792114]
[347.80963135 -142.78358459]
[336.31896973 -133.14176941]
[324.90179443 -123.41304016]
[330.38125610 -102.86946869]
[324.70031738 -82.30583954]
[309.34848022 -67.38802338]
[288.49029541 -62.26453781]
[267.83566284 -68.41307068]
[257.68084717 -57.37315369]
[247.52604675 -46.33324051]
[237.37123108 -35.29332352]
[227.21641541 -24.25340843]
[217.14566040 -13.13675308]
[207.15956116 -1.94399774]
[208.65609741 8.16796684]
[204.24555969 17.63244629]
[195.16610718 23.22060776]
[184.29048157 22.88075447]
[173.96929932 33.76528549]
[163.64810181 44.64981842]
[153.32691956 55.53435135]
[143.00572205 66.41888428]
[143.01284790 78.51740265]
[134.50044250 87.67015076]
[121.63359833 88.59764099]
[111.14840698 99.32428741]
[100.74491882 110.13018799]
[90.42372894 121.01471710]
[86.54257965 136.35249329]
[72.17074585 140.26397705]
[61.84955597 151.14849854]
[51.52836609 162.03303528]
[41.20717621 172.91757202]
[37.40177155 192.71147156]
[18.64632416 197.40722656]
[8.66022205 208.59999084]
[-1.32588017 219.79273987]
[-0.60831016 235.35304260]
[-10.89508247 246.56182861]
[-25.73386955 247.15002441]
[-35.71997070 258.34277344]
[-45.70607376 269.53555298]
[-55.69217682 280.72830200]
[-65.67827606 291.92105103]
[-75.66437531 303.11380005]
[-85.65048218 314.30654907]
[-95.63658142 325.49932861]
[-95.68384552 338.39944458]
[-104.23435211 347.51663208]
[-116.30515289 348.33514404]
[-126.45996857 359.37506104]
[-136.61477661 370.41497803]
[-129.97364807 386.24822998]
[-130.91687012 403.33651733]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 44]
[4 43]
[5 42]
[7 40]
[8 39]
[9 38]
[15 35]
[16 34]
[17 33]
[18 32]
[19 31]
[21 30]
[22 29]
[23 28]
[52 204]
[53 203]
[54 202]
[56 199]
[57 198]
[58 197]
[59 196]
[60 195]
[61 194]
[62 193]
[63 192]
[66 189]
[67 188]
[68 187]
[72 185]
[73 184]
[74 183]
[75 182]
[77 180]
[78 179]
[80 178]
[81 177]
[83 174]
[84 173]
[85 172]
[86 171]
[87 170]
[89 166]
[90 165]
[92 164]
[93 163]
[94 162]
[95 161]
[96 160]
[109 155]
[110 154]
[112 153]
[113 152]
[114 151]
[116 149]
[117 148]
[118 147]
[119 146]
[120 144]
[121 143]
[122 142]
[125 139]
[126 138]
[127 137]
[128 136]
[129 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
