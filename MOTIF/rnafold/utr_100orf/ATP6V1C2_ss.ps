%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:26:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCGGCAGAGCGCUCCGGCCCCGCACCCGCCGCCCGUCGCCCGCAGCCCCCUACCGCGCGGCCCGCGCCCCGCCGGCUCCCGUCACUGGGUAAGAGAAGACUGGAAGCAUGUCGGAGUUUUGGUUAAUUUCUGCCCCUGGCGAUAAGGAAAAUUUGCAAGCUCUGGAGAGGAUGAAUACUGUAACCUCCAAGUCCAACCUGUCUUAUA\
) } def
/len { sequence length } bind def

/coor [
[84.24604034 114.23992157]
[70.28293610 119.72003937]
[56.31982803 125.20014954]
[42.35671997 130.68026733]
[28.39361382 136.16038513]
[14.43050766 141.64050293]
[0.46740180 147.12060547]
[-3.53531837 161.99624634]
[-15.39119244 171.55090332]
[-30.42206383 172.28364563]
[-42.85340500 164.12277222]
[-56.81650925 169.60289001]
[-70.77961731 175.08300781]
[-84.74272156 180.56312561]
[-88.50929260 190.76815796]
[-97.09394073 197.08517456]
[-107.51888275 197.62272644]
[-116.32897186 192.44444275]
[-130.44976807 197.50439453]
[-144.57057190 202.56434631]
[-158.69136047 207.62429810]
[-169.07263184 219.56329346]
[-183.66394043 216.57279968]
[-197.78474426 221.63275146]
[-211.90553284 226.69270325]
[-214.52351379 245.74502563]
[-226.40716553 260.76116943]
[-244.19549561 267.62808228]
[-262.92510986 264.51885986]
[-277.41513062 252.37780762]
[-291.20806885 258.27319336]
[-300.85675049 270.81167603]
[-315.60076904 268.69912720]
[-329.39370728 274.59451294]
[-331.86090088 289.82330322]
[-342.18676758 301.28543091]
[-357.07632446 305.32336426]
[-371.77835083 300.64859009]
[-381.60153198 288.75283813]
[-383.41128540 273.43200684]
[-376.63015747 259.57489014]
[-363.42193604 251.60325623]
[-348.00137329 252.06082153]
[-335.28906250 260.80160522]
[-321.49615479 254.90621948]
[-312.83401489 242.78941345]
[-297.10342407 244.48027039]
[-283.31051636 238.58489990]
[-283.81887817 227.54650879]
[-280.93554688 216.85169983]
[-274.91864014 207.52006531]
[-266.32580566 200.44638062]
[-255.96261597 196.31472778]
[-244.80697632 195.53244019]
[-233.91690063 198.18994141]
[-224.33020020 204.05062866]
[-216.96548462 212.57189941]
[-202.84469604 207.51194763]
[-188.72389221 202.45201111]
[-179.35263062 190.87492371]
[-163.75131226 193.50349426]
[-149.63052368 188.44355774]
[-135.50971985 183.38360596]
[-121.38892365 178.32365417]
[-109.99955750 162.69828796]
[-90.22283936 166.60002136]
[-76.25972748 161.11990356]
[-62.29662323 155.63978577]
[-48.33351898 150.15966797]
[-44.77150345 135.72187805]
[-33.25470734 126.03541565]
[-18.06491470 124.97544098]
[-5.01271343 133.15750122]
[8.95039272 127.67739105]
[22.91349983 122.19727325]
[36.87660599 116.71716309]
[50.83971024 111.23704529]
[64.80281830 105.75692749]
[78.76592255 100.27681732]
[82.19424438 85.33780670]
[95.54288483 75.50679016]
[113.32351685 76.83274078]
[116.66132355 62.20882034]
[119.99913788 47.58490372]
[123.33695221 32.96098328]
[126.67476654 18.33706474]
[120.48576355 7.02017260]
[123.56742859 -5.09178352]
[133.73902893 -11.63982964]
[137.29522705 -26.21218109]
[140.85144043 -40.78453064]
[144.40763855 -55.35688019]
[147.96385193 -69.92922974]
[146.95819092 -79.00893402]
[151.68379211 -84.69216919]
[155.45758057 -99.20969391]
[159.23138428 -113.72721100]
[163.00518799 -128.24473572]
[157.69551086 -145.87640381]
[170.48886108 -157.88830566]
[174.04505920 -172.46064758]
[177.60127258 -187.03300476]
[171.58224487 -198.44120789]
[174.84475708 -210.50570679]
[185.11317444 -216.90086365]
[188.88697815 -231.41838074]
[192.66076660 -245.93591309]
[196.43457031 -260.45343018]
[200.20837402 -274.97094727]
[190.24958801 -286.87063599]
[189.22080994 -302.35354614]
[197.51760864 -315.46624756]
[211.94972229 -321.16659546]
[226.96768188 -317.26269531]
[236.79679871 -305.25570679]
[237.65756226 -289.76251221]
[229.21899414 -276.74060059]
[214.72589111 -271.19714355]
[210.95210266 -256.67962646]
[207.17829895 -242.16210938]
[203.40449524 -227.64459229]
[199.63069153 -213.12705994]
[205.20439148 -196.48707581]
[192.17361450 -183.47679138]
[188.61741638 -168.90444946]
[185.06120300 -154.33209229]
[191.07305908 -143.83467102]
[188.22903442 -131.66471863]
[177.52270508 -124.47093201]
[173.74891663 -109.95341492]
[169.97511292 -95.43589020]
[166.20130920 -80.91836548]
[162.53619385 -66.37302399]
[158.97999573 -51.80067444]
[155.42378235 -37.22832489]
[151.86758423 -22.65597534]
[148.31137085 -8.08362389]
[154.13337708 8.47112465]
[141.29869080 21.67487907]
[137.96087646 36.29879761]
[134.62306213 50.92271805]
[131.28524780 65.54663849]
[127.94743347 80.17055511]
[133.73947144 94.00717926]
[146.49967957 101.89244080]
[159.25987244 109.77769470]
[172.02008057 117.66294861]
[184.78027344 125.54821014]
[197.54048157 133.43347168]
[209.49803162 126.17456818]
[223.35047913 124.78263855]
[236.38865662 129.47259521]
[246.08729553 139.27551270]
[250.59410095 152.23809814]
[249.08337402 165.81182861]
[261.72418213 173.88708496]
[274.36499023 181.96235657]
[284.83499146 179.01119995]
[294.99148560 182.24328613]
[301.55401611 190.36126709]
[302.54312134 200.53250122]
[314.93670654 208.98229980]
[327.33029175 217.43209839]
[336.18438721 219.68093872]
[339.84478760 226.10215759]
[352.11056519 234.73641968]
[364.37637329 243.37066650]
[376.64215088 252.00492859]
[388.90792847 260.63919067]
[401.48800659 268.80877686]
[414.36471558 276.50225830]
[428.57965088 270.28005981]
[443.72982788 273.63439941]
[453.98971558 285.27545166]
[455.41418457 300.72698975]
[447.45550537 314.04760742]
[433.17391968 320.11523438]
[418.06100464 316.59674072]
[407.92800903 304.84509277]
[406.67123413 289.37899780]
[393.79449463 281.68548584]
[394.86788940 296.64703369]
[383.94436646 306.92697144]
[369.07546997 304.94812012]
[361.22076416 292.16906738]
[366.16979980 278.00903320]
[380.27368164 272.90496826]
[368.00790405 264.27072144]
[355.74209595 255.63645935]
[343.47631836 247.00219727]
[331.21051025 238.36795044]
[318.88049316 229.82568359]
[306.48690796 221.37588501]
[294.09332275 212.92607117]
[274.75762939 212.89624023]
[266.28973389 194.60316467]
[253.64892578 186.52790833]
[241.00811768 178.45265198]
[226.85224915 186.24447632]
[210.60496521 185.83206177]
[196.70294189 177.23330688]
[188.99015808 162.71447754]
[189.65522766 146.19366455]
[176.89501953 138.30841064]
[164.13482666 130.42315674]
[151.37461853 122.53789520]
[138.61441040 114.65264130]
[125.85421753 106.76737976]
[114.01414490 120.57637024]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 79]
[2 78]
[3 77]
[4 76]
[5 75]
[6 74]
[7 73]
[11 69]
[12 68]
[13 67]
[14 66]
[18 64]
[19 63]
[20 62]
[21 61]
[23 59]
[24 58]
[25 57]
[30 48]
[31 47]
[33 45]
[34 44]
[82 143]
[83 142]
[84 141]
[85 140]
[86 139]
[89 137]
[90 136]
[91 135]
[92 134]
[93 133]
[95 132]
[96 131]
[97 130]
[98 129]
[100 126]
[101 125]
[102 124]
[105 122]
[106 121]
[107 120]
[108 119]
[109 118]
[144 208]
[145 207]
[146 206]
[147 205]
[148 204]
[149 203]
[155 198]
[156 197]
[157 196]
[161 194]
[162 193]
[163 192]
[165 191]
[166 190]
[167 189]
[168 188]
[169 187]
[170 181]
[171 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
