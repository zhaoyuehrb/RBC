%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:00:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAGCCCCGCCCCGCACGGCCAGGCGAAGCGGAGCCGGCCGUGCGGUGUGUGUGUAUGUGUUCGCGGGGCGCCGUCUCAGCCCCGGGAAGAUGGUGGCUGCAGCGGCGGCAACUGAGGCAAGGCUGAGGAGGAGGACGGCGGCGACGGCAGCGCUCGCGGGCAGGAGCGGCGGGCCGCACUGGGACUGGG\
) } def
/len { sequence length } bind def

/coor [
[76.38541412 249.97332764]
[84.81893158 235.90892029]
[84.57222748 220.91094971]
[84.32551575 205.91297913]
[83.95546722 190.91754150]
[83.46211243 175.92565918]
[82.96875763 160.93377686]
[69.53161621 154.26718140]
[57.29565811 162.94366455]
[45.05969620 171.62014771]
[38.27796936 185.91415405]
[23.42044258 186.96446228]
[11.18448067 195.64093018]
[-1.05148160 204.31741333]
[-13.28744316 212.99388123]
[-25.52340508 221.67036438]
[-37.75936890 230.34683228]
[-49.99533081 239.02331543]
[-62.23129272 247.69978333]
[-74.46725464 256.37625122]
[-86.70321655 265.05273438]
[-91.90476227 272.58270264]
[-99.21253967 273.76934814]
[-111.58955383 282.24340820]
[-123.96656799 290.71743774]
[-124.26576996 306.23162842]
[-133.65367126 318.58666992]
[-148.52041626 323.03179932]
[-163.14947510 317.85775757]
[-171.91563416 305.05410767]
[-171.44815063 289.54406738]
[-161.92678833 277.29159546]
[-147.01268005 273.00799561]
[-132.44061279 278.34042358]
[-120.06360626 269.86639404]
[-107.68659210 261.39233398]
[-95.37969208 252.81677246]
[-83.14373016 244.14030457]
[-70.90776825 235.46382141]
[-58.67180634 226.78735352]
[-46.43584442 218.11087036]
[-34.19988251 209.43440247]
[-21.96391869 200.75791931]
[-9.72795773 192.08145142]
[2.50800443 183.40496826]
[14.74396610 174.72850037]
[20.65049362 161.05508423]
[36.38322067 159.38418579]
[48.61918259 150.70770264]
[60.85514450 142.03121948]
[51.57804489 127.62052155]
[47.19912338 111.57580566]
[47.83273315 95.46367645]
[53.11825180 80.76744080]
[62.28038406 68.75059509]
[74.22639465 60.34854126]
[87.66904449 56.09778976]
[101.26187134 56.10784531]
[113.73290253 60.07638168]
[121.05414581 46.98442078]
[128.37539673 33.89246368]
[135.69664001 20.80050468]
[143.01788330 7.70854664]
[150.33912659 -5.38341188]
[157.66036987 -18.47537041]
[164.98161316 -31.56732941]
[172.30285645 -44.65928650]
[179.62409973 -57.75124359]
[186.83743286 -70.90296936]
[193.94236755 -84.11357117]
[200.93840027 -97.38216400]
[207.82508850 -110.70783234]
[214.71177673 -124.03350830]
[221.59846497 -137.35917664]
[228.48513794 -150.68486023]
[235.37182617 -164.01052856]
[235.12353516 -169.25854492]
[236.75942993 -173.63310242]
[239.62719727 -176.56050110]
[242.94105530 -177.81115723]
[250.47663879 -190.78092957]
[258.01223755 -203.75070190]
[265.44088745 -216.78199768]
[272.76214600 -229.87396240]
[280.08337402 -242.96591187]
[269.88836670 -252.33151245]
[262.00122070 -263.69885254]
[256.80331421 -276.51199341]
[254.54452515 -290.14517212]
[255.33137512 -303.93350220]
[259.12188721 -317.20529175]
[265.72784424 -329.31484985]
[274.82418823 -339.67385864]
[285.96490479 -347.77987671]
[298.60504150 -353.24090576]
[312.12722778 -355.79412842]
[325.87182617 -355.31875610]
[329.77395630 -369.80230713]
[333.67611694 -384.28585815]
[337.57824707 -398.76940918]
[341.48037720 -413.25296021]
[336.73715210 -428.95117188]
[348.15634155 -440.72122192]
[363.99087524 -436.45510864]
[367.95153809 -420.54144287]
[355.96392822 -409.35083008]
[352.06179810 -394.86727905]
[348.15966797 -380.38372803]
[344.25750732 -365.90017700]
[340.35537720 -351.41662598]
[346.33117676 -348.62628174]
[351.97842407 -345.21972656]
[357.23379517 -341.23510742]
[368.22558594 -351.44201660]
[373.07321167 -366.50225830]
[387.66448975 -369.49285889]
[398.65628052 -379.69976807]
[398.99050903 -395.50051880]
[410.45730591 -406.37655640]
[426.25363159 -405.87527466]
[437.00784302 -394.29412842]
[436.33959961 -378.50396729]
[424.64538574 -367.87283325]
[408.86318970 -368.70797729]
[397.87139893 -358.50109863]
[393.80996704 -344.17089844]
[378.43246460 -340.45022583]
[367.44067383 -330.24331665]
[375.79272461 -314.45745850]
[379.32659912 -296.93679810]
[377.74398804 -279.11907959]
[371.16683960 -262.46890259]
[360.12789917 -248.35710144]
[345.52770996 -237.94804382]
[328.56097412 -232.10350037]
[310.61895752 -231.31130981]
[293.17535400 -235.64466858]
[285.85409546 -222.55271912]
[278.53283691 -209.46075439]
[278.01126099 -202.07565308]
[270.98199463 -196.21511841]
[263.44641113 -183.24534607]
[255.91082764 -170.27557373]
[248.69750977 -157.12384033]
[241.81082153 -143.79817200]
[234.92413330 -130.47248840]
[228.03744507 -117.14682007]
[221.15075684 -103.82115173]
[214.26408386 -90.49547577]
[213.98567200 -83.09721375]
[207.15296936 -77.00864410]
[200.04803467 -63.79804611]
[199.64799500 -56.40536499]
[192.71606445 -50.43000031]
[185.39482117 -37.33804321]
[178.07357788 -24.24608421]
[170.75233459 -11.15412521]
[163.43109131 1.93783307]
[156.10984802 15.02979183]
[148.78858948 28.12174988]
[141.46734619 41.21370697]
[134.14610291 54.30566788]
[126.82485962 67.39762115]
[141.35975647 79.81197357]
[149.81130981 98.71139526]
[149.34909058 121.00192261]
[138.73762512 142.40682983]
[147.31318665 154.71374512]
[155.88873291 167.02064514]
[164.46429443 179.32754517]
[179.53280640 185.79840088]
[181.19416809 202.11317444]
[167.73933411 211.48863220]
[153.00946045 204.28009033]
[152.15739441 187.90310669]
[143.58183289 175.59619141]
[135.00628662 163.28929138]
[126.43072510 150.98239136]
[119.31320953 153.34689331]
[116.29143524 168.03936768]
[105.07816315 158.07591248]
[97.96063995 160.44041443]
[98.45399475 175.43229675]
[98.94734955 190.42417908]
[102.36216736 198.91510010]
[99.32348633 205.66625977]
[99.57019806 220.66423035]
[99.81690979 235.66220093]
[108.70845032 249.44163513]
[100.98117828 263.90612793]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 188]
[3 187]
[4 186]
[5 184]
[6 183]
[7 182]
[8 50]
[9 49]
[10 48]
[12 46]
[13 45]
[14 44]
[15 43]
[16 42]
[17 41]
[18 40]
[19 39]
[20 38]
[21 37]
[23 36]
[24 35]
[25 34]
[59 163]
[60 162]
[61 161]
[62 160]
[63 159]
[64 158]
[65 157]
[66 156]
[67 155]
[68 154]
[69 152]
[70 151]
[71 149]
[72 148]
[73 147]
[74 146]
[75 145]
[76 144]
[80 143]
[81 142]
[82 141]
[83 139]
[84 138]
[85 137]
[97 110]
[98 109]
[99 108]
[100 107]
[101 106]
[113 128]
[114 127]
[116 125]
[117 124]
[167 178]
[168 177]
[169 176]
[170 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
