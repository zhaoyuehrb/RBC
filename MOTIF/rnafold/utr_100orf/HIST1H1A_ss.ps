%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:27:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGGCUGCGUUGGGGCCUUUUUUUCGCAUCCUGCUUCGUCAGGUUUAUACCACUUUAUUUGGUGUGCUGUGUUAGUCACCAUGUCUGAAACAGUGCCUCCCGCCCCCGCCGCUUCUGCUGCUCCUGAGAAACCUUUAGCUGGCAAGAAGGCAAAGAAACCUGCUAAGGCUGCAGCAGCCU\
) } def
/len { sequence length } bind def

/coor [
[20.19474792 507.55819702]
[22.71949577 488.34164429]
[22.97983551 473.34393311]
[23.24017525 458.34619141]
[23.50051498 443.34844971]
[23.76085472 428.35070801]
[24.02119446 413.35296631]
[24.28153419 398.35522461]
[21.64772034 394.34185791]
[21.52553177 388.62615967]
[24.82020760 382.84387207]
[25.60091400 367.86422729]
[18.53651619 354.75149536]
[26.98158836 341.37274170]
[27.76229477 326.39306641]
[28.54300117 311.41339111]
[29.32370758 296.43371582]
[30.10441399 281.45404053]
[30.88511848 266.47436523]
[24.47844505 262.57507324]
[16.67984962 275.38842773]
[8.88105774 288.20166016]
[-3.93205118 280.40267944]
[3.86650038 267.58984375]
[11.66509533 254.77648926]
[5.25842047 250.87719727]
[-7.68835115 258.45220947]
[-20.63512230 266.02725220]
[-31.25275040 279.24475098]
[-46.89295959 272.70104980]
[-44.93461227 255.86056519]
[-28.21015549 253.08047485]
[-15.26338291 245.50544739]
[-2.31661105 237.93041992]
[-1.82490408 225.01658630]
[2.62004519 213.47476196]
[10.21003628 204.42195129]
[19.85416222 198.61076355]
[30.32348251 196.37068176]
[40.40222168 197.60227966]
[45.74937439 183.58770752]
[51.09652710 169.57315063]
[56.44367599 155.55857849]
[61.79082870 141.54402161]
[67.13797760 127.52945709]
[72.48513031 113.51490021]
[66.41580963 99.79763031]
[52.44817734 94.32905579]
[38.48054886 88.86048889]
[24.51291656 83.39191437]
[10.54528618 77.92333984]
[-3.42234468 72.45476532]
[-17.06184006 80.10317993]
[-32.41690445 77.14411926]
[-42.23734665 64.97477722]
[-41.88625336 49.34113693]
[-31.52939796 37.62492752]
[-16.05697632 35.35818100]
[-2.77458739 43.61119080]
[2.04622793 58.48713684]
[16.01385880 63.95571136]
[29.98148918 69.42428589]
[43.94911957 74.89285278]
[57.91675186 80.36142731]
[71.88438416 85.83000183]
[82.53691101 75.26952362]
[77.18975830 61.25495911]
[71.84260559 47.24039841]
[66.49545288 33.22583389]
[61.14830399 19.21127129]
[48.99987030 9.07588100]
[51.69188690 -5.57343054]
[46.34473419 -19.58799362]
[40.99758530 -33.60255814]
[35.65043259 -47.61711884]
[23.50200081 -57.75251007]
[26.19401550 -72.40182495]
[20.84686470 -86.41638184]
[9.55146217 -99.05957031]
[18.57367134 -113.41352844]
[34.86426544 -108.71748352]
[34.86142731 -91.76353455]
[40.20858002 -77.74897003]
[51.97454834 -68.61599731]
[49.66499710 -52.96427155]
[55.01214600 -38.94970703]
[60.35929871 -24.93514442]
[65.70645142 -10.92058182]
[77.47241974 -1.78760564]
[75.16286469 13.86412048]
[80.51001740 27.87868309]
[85.85717010 41.89324570]
[91.20432281 55.90781021]
[96.55146790 69.92237091]
[111.54243469 69.40177155]
[115.90448761 55.05002975]
[109.64838409 40.27705765]
[117.42408752 26.24431038]
[133.26673889 23.71650887]
[145.02322388 34.63276672]
[143.67495728 50.61906815]
[130.25622559 59.41208649]
[125.89417267 73.76382446]
[130.98637390 79.27014160]
[141.99917603 69.08592224]
[152.18321228 80.09889221]
[141.17077637 90.28276825]
[146.26296997 95.78908539]
[160.91131592 92.56014252]
[175.55966187 89.33119965]
[180.72271729 85.13208771]
[186.38095093 84.31442261]
[190.77218628 86.25374603]
[205.52377319 83.53514862]
[220.27534485 80.81654358]
[235.02693176 78.09794617]
[249.75436401 75.25143433]
[264.45654297 72.27721405]
[279.15872192 69.30300140]
[293.83453369 66.20130157]
[308.48287964 62.97236252]
[323.13122559 59.74342346]
[328.46588135 50.22556305]
[337.96978760 45.32923508]
[348.37930298 46.46320343]
[356.26733398 53.01037598]
[371.01892090 50.29177856]
[385.77050781 47.57318115]
[397.89352417 36.52940750]
[413.43496704 41.76349258]
[416.40713501 57.89105225]
[403.75253296 68.32143402]
[388.48910522 62.32476425]
[373.73751831 65.04336548]
[358.98593140 67.76196289]
[345.25814819 81.35721588]
[326.36016846 74.39176178]
[311.71182251 77.62070465]
[297.06347656 80.84964752]
[291.19241333 85.37219238]
[282.13293457 84.00517273]
[267.43075562 86.97939301]
[252.72859192 89.95361328]
[246.77992249 94.37357330]
[237.74552917 92.84953308]
[222.99394226 95.56813049]
[208.24237061 98.28672791]
[193.49078369 101.00532532]
[178.78860474 103.97954559]
[164.14025879 107.20848846]
[149.49191284 110.43742371]
[137.10600281 125.64124298]
[121.35992432 133.37689209]
[105.86006165 133.64300537]
[93.62032318 127.95381927]
[86.49969482 118.86204529]
[81.15254211 132.87661743]
[75.80538940 146.89117432]
[70.45823669 160.90573120]
[65.11109161 174.92030334]
[59.76393890 188.93486023]
[54.41678619 202.94943237]
[70.07244873 221.35342407]
[68.02272034 248.02380371]
[45.86478806 267.25509644]
[45.08408356 282.23474121]
[44.30337524 297.21441650]
[43.52267075 312.19409180]
[42.74196625 327.17376709]
[41.96125793 342.15344238]
[48.96981430 356.33761597]
[40.58058167 368.64492798]
[39.79987717 383.62460327]
[39.27927399 398.61557007]
[39.01893616 413.61328125]
[38.75859451 428.61102295]
[38.49825668 443.60876465]
[38.23791504 458.60650635]
[37.97757721 473.60424805]
[37.71723557 488.60198975]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 180]
[3 179]
[4 178]
[5 177]
[6 176]
[7 175]
[8 174]
[11 173]
[12 172]
[14 170]
[15 169]
[16 168]
[17 167]
[18 166]
[19 165]
[26 34]
[27 33]
[28 32]
[40 162]
[41 161]
[42 160]
[43 159]
[44 158]
[45 157]
[46 156]
[47 65]
[48 64]
[49 63]
[50 62]
[51 61]
[52 60]
[66 94]
[67 93]
[68 92]
[69 91]
[70 90]
[72 88]
[73 87]
[74 86]
[75 85]
[77 83]
[78 82]
[95 103]
[96 102]
[108 151]
[109 150]
[110 149]
[113 148]
[114 147]
[115 146]
[116 145]
[117 143]
[118 142]
[119 141]
[120 139]
[121 138]
[122 137]
[126 135]
[127 134]
[128 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
