%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:37:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUGCUCACUAACCAGGCAGCUCGCCCAGACUCCGGGCAGUGAGAGGGAGGGAGCGCCGGCCGCGGGAGCGGGAUGGAAACCAGCAGCCCGCGGCCCCCGCGGCCCAGCUCCAACCCGGGGCUGAGCCUGGACGCCCGGCUGGGCGUGGACACUCGCCUCUGGGCCAAGGUGC\
) } def
/len { sequence length } bind def

/coor [
[70.96392822 97.84579468]
[75.50903320 81.97404480]
[62.17463303 88.84381866]
[48.84023285 95.71358490]
[35.50583267 102.58335876]
[22.17143059 109.45313263]
[8.83702946 116.32289886]
[-4.49737120 123.19267273]
[-10.71872044 129.92762756]
[-18.13336945 130.06364441]
[-31.58894157 136.69294739]
[-36.76089478 151.38609314]
[-50.50119400 157.91746521]
[-64.47699738 152.89625549]
[-77.93256378 159.52554321]
[-78.13027954 173.53028870]
[-84.31977844 186.02072144]
[-95.23918915 194.57907104]
[-108.71740723 197.57624817]
[-122.10565186 194.48175049]
[-132.79798889 185.95657349]
[-146.37039185 192.34326172]
[-159.94279480 198.72994995]
[-166.40190125 205.23724365]
[-173.81665039 205.10700989]
[-187.50152588 211.24903870]
[-201.18638611 217.39105225]
[-214.87124634 223.53308105]
[-218.96220398 238.62606812]
[-231.82710266 247.51586914]
[-247.39152527 246.00498962]
[-258.30642700 234.80683899]
[-259.41815186 219.20881653]
[-250.20173645 206.57585144]
[-235.00891113 202.87283325]
[-221.01327515 209.84822083]
[-207.32841492 203.70619202]
[-193.64353943 197.56416321]
[-179.95867920 191.42214966]
[-166.32948303 185.15754700]
[-152.75708008 178.77084351]
[-139.18467712 172.38415527]
[-138.23306274 156.26864624]
[-129.24041748 142.74887085]
[-114.57710266 135.55905151]
[-98.19483185 136.74206543]
[-84.56186676 146.06997681]
[-71.10629272 139.44067383]
[-66.57138824 125.29959869]
[-53.01995850 118.38486481]
[-38.21823883 123.23737335]
[-24.76266861 116.60807800]
[-11.36714268 109.85826874]
[1.96725821 102.98850250]
[15.30165863 96.11872864]
[28.63606071 89.24895477]
[41.97045898 82.37918854]
[55.30486298 75.50941467]
[68.63925934 68.63964081]
[75.38906860 55.24411774]
[72.97608185 40.43947220]
[70.56310272 25.63482857]
[68.15011597 10.83018398]
[65.73712921 -3.97446108]
[63.32415009 -18.77910614]
[60.91116333 -33.58375168]
[58.49818039 -48.38839722]
[56.08519745 -63.19303894]
[41.51436615 -78.87662506]
[49.51065826 -97.88420105]
[46.30424118 -112.53749084]
[43.09782410 -127.19078064]
[39.89140701 -141.84407043]
[36.68498993 -156.49736023]
[26.17658997 -168.32461548]
[31.01445389 -182.41165161]
[27.80803680 -197.06494141]
[13.54146862 -203.16778564]
[5.61565781 -216.50798035]
[7.07824039 -231.95597839]
[17.36682320 -243.57168579]
[32.52523422 -246.88864136]
[46.72475815 -240.63139343]
[54.50539017 -227.20599365]
[52.87531281 -211.77476501]
[42.46132660 -200.27136230]
[45.66774368 -185.61807251]
[55.94680023 -174.83891296]
[51.33827972 -159.70378113]
[54.54469681 -145.05049133]
[57.75111389 -130.39720154]
[60.95753098 -115.74391174]
[64.16394806 -101.09062195]
[72.37158203 -97.55451202]
[78.10366058 -90.51912689]
[79.96425629 -81.49619293]
[77.40763855 -72.50180054]
[70.88983917 -65.60602570]
[73.30282593 -50.80138016]
[75.71581268 -35.99673462]
[78.12879181 -21.19208908]
[80.54177856 -6.38744497]
[82.95475769 8.41720009]
[85.36774445 23.22184372]
[87.78073120 38.02648926]
[90.19371033 52.83113480]
[103.82289886 59.09574127]
[116.63005829 51.28698349]
[129.43721008 43.47822571]
[142.24436951 35.66946411]
[155.05152893 27.86070633]
[167.85868835 20.05194664]
[180.66584778 12.24318790]
[185.82818604 -2.94660258]
[200.97091675 -8.24541092]
[214.47781372 0.41155598]
[215.98756409 16.38341331]
[204.34199524 27.41791916]
[188.47460938 25.05034637]
[175.66744995 32.85910416]
[162.86029053 40.66786194]
[150.05313110 48.47662354]
[137.24597168 56.28538132]
[124.43881226 64.09413910]
[111.63166046 71.90290070]
[124.80415344 88.89810181]
[122.59746552 107.90753937]
[134.49093628 117.04785919]
[146.38439941 126.18817902]
[158.27786255 135.32850647]
[169.57908630 131.51161194]
[181.19798279 133.61810303]
[190.25387573 141.00762939]
[194.55880737 151.74491882]
[193.14555359 163.10540771]
[204.70324707 172.66677856]
[216.26095581 182.22813416]
[227.81864929 191.78948975]
[239.37634277 201.35084534]
[250.93405151 210.91221619]
[257.43115234 212.40135193]
[261.55987549 216.36769104]
[262.72695923 221.03016663]
[273.93399048 231.00024414]
[285.14102173 240.97032166]
[296.34805298 250.94039917]
[307.55508423 260.91046143]
[322.68414307 257.46209717]
[336.93743896 263.59588623]
[344.83428955 276.95324707]
[343.33819580 292.39804077]
[333.02444458 303.99139404]
[317.85885620 307.27545166]
[303.67294312 300.98739624]
[295.92147827 287.54513550]
[297.58502197 272.11749268]
[286.37799072 262.14743042]
[275.17095947 252.17735291]
[263.96392822 242.20727539]
[252.75688171 232.23719788]
[241.37268066 222.46990967]
[229.81498718 212.90855408]
[218.25729370 203.34718323]
[206.69958496 193.78582764]
[195.14189148 184.22447205]
[183.58419800 174.66311646]
[165.52345276 177.49842834]
[150.85357666 166.06291199]
[149.13754272 147.22196960]
[137.24407959 138.08164978]
[125.35060883 128.94132996]
[113.45714569 119.80100250]
[100.92021942 125.21797943]
[86.72729492 122.96943665]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 59]
[3 58]
[4 57]
[5 56]
[6 55]
[7 54]
[8 53]
[10 52]
[11 51]
[14 48]
[15 47]
[21 42]
[22 41]
[23 40]
[25 39]
[26 38]
[27 37]
[28 36]
[60 106]
[61 105]
[62 104]
[63 103]
[64 102]
[65 101]
[66 100]
[67 99]
[68 98]
[70 93]
[71 92]
[72 91]
[73 90]
[74 89]
[76 87]
[77 86]
[107 125]
[108 124]
[109 123]
[110 122]
[111 121]
[112 120]
[113 119]
[127 172]
[128 171]
[129 170]
[130 169]
[135 166]
[136 165]
[137 164]
[138 163]
[139 162]
[140 161]
[143 160]
[144 159]
[145 158]
[146 157]
[147 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
