%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:41:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCUCUUUGCUGAGGCUUACUUGUCCAGCCUAUUGUUUGAGACAACAGAUAUAAGUUGCGAUGGGAGAGGAGCGUCGGAUUUGGUGUGUAUCCCCCAUUUCCAAUUAUAGAUGGAUCAUUACAGACAGCGGAGUCCUGAGAAGCCAGACAUCUGCUCCUCACAUGAAUGCACUCACCUCCUAGAGACCAGGCUGCCAUCAUGCUCUGGAAGCUUGUGGAGAAUGUCAAGUACGAAGAUAUCUAUGAGGACCGGCA\
CGAUGGUGUCC\
) } def
/len { sequence length } bind def

/coor [
[152.60641479 152.91339111]
[152.67433167 137.50878906]
[140.65420532 128.53569031]
[128.63407898 119.56259155]
[116.61394501 110.58949280]
[104.59381866 101.61638641]
[112.31745148 108.35385132]
[116.36417389 118.76270294]
[115.48551178 131.28691101]
[108.99998474 144.81236267]
[102.51445770 158.33781433]
[96.02892303 171.86326599]
[95.14722443 180.91999817]
[89.38668823 185.50901794]
[82.74246979 198.95722961]
[76.09824371 212.40544128]
[81.40411377 227.29246521]
[74.55383301 241.53497314]
[59.61154938 246.68315125]
[45.44225693 239.68267822]
[40.45234680 224.68679810]
[47.60224152 210.59230042]
[62.65003586 205.76121521]
[69.29425812 192.31301880]
[75.93848419 178.86480713]
[82.50347137 165.37773132]
[88.98899841 151.85227966]
[95.47453308 138.32682800]
[101.96006012 124.80137634]
[90.71890259 114.86978912]
[78.09576416 122.97265625]
[74.61190796 138.15489197]
[61.69482040 146.19252014]
[47.24234390 142.77763367]
[34.61920547 150.88049316]
[21.99606705 158.98335266]
[9.37292862 167.08622742]
[-3.25021005 175.18908691]
[-15.87334824 183.29194641]
[-18.99575043 198.78472900]
[-32.20472717 207.46218872]
[-47.66362762 204.17616272]
[-56.20095825 190.87619019]
[-52.75167465 175.45289612]
[-39.36217499 167.05665588]
[-23.97621155 170.66880798]
[-11.35307217 162.56594849]
[1.27006626 154.46308899]
[13.89320469 146.36021423]
[26.51634407 138.25735474]
[39.13948059 130.15449524]
[42.05253983 115.59257507]
[54.73876953 107.19529724]
[69.99290466 110.34951782]
[82.61604309 102.24665070]
[68.63168335 107.67229462]
[54.25224304 103.40244293]
[45.49528503 91.22394562]
[46.02545547 76.23332214]
[55.62088394 64.70389557]
[70.26604462 61.46054459]
[83.83216858 67.86055756]
[90.64223480 81.22689056]
[86.63224030 66.77282715]
[82.62225342 52.31876755]
[78.61225891 37.86470413]
[74.60226440 23.41063881]
[61.12797928 15.59518528]
[57.26717758 0.87958503]
[64.80105591 -11.91792488]
[60.79106522 -26.37198830]
[56.78107071 -40.82605362]
[45.63613510 -52.05552292]
[49.68941498 -66.38800812]
[45.67942047 -80.84207153]
[29.97537804 -84.77069092]
[20.24328613 -101.75222015]
[11.34105682 -113.82493591]
[2.43882632 -125.89764404]
[-6.46340370 -137.97035217]
[-15.36563396 -150.04306030]
[-24.26786423 -162.11576843]
[-38.68536377 -168.63084412]
[-40.01142502 -183.46630859]
[-48.91365433 -195.53901672]
[-69.03720093 -202.96736145]
[-70.33215332 -223.58326721]
[-79.65490723 -235.33427429]
[-88.97765350 -247.08529663]
[-98.30039978 -258.83630371]
[-114.64739227 -256.24761963]
[-129.97775269 -262.23114014]
[-140.13235474 -275.06158447]
[-142.40780640 -291.17028809]
[-136.27563477 -306.13742065]
[-145.73600769 -317.77792358]
[-155.19636536 -329.41845703]
[-164.65673828 -341.05895996]
[-174.11709595 -352.69946289]
[-183.57746887 -364.33996582]
[-199.06394958 -363.36608887]
[-212.14714050 -371.70935059]
[-217.79629517 -386.16156006]
[-213.83918762 -401.16558838]
[-201.79740906 -410.95205688]
[-186.30126953 -411.75790405]
[-173.30935669 -403.27322388]
[-167.81732178 -388.76055908]
[-171.93695068 -373.80035400]
[-162.47659302 -362.15982056]
[-153.01622009 -350.51931763]
[-143.55586243 -338.87881470]
[-134.09548950 -327.23831177]
[-124.63513184 -315.59777832]
[-111.34017944 -318.64144897]
[-97.96504974 -315.65267944]
[-87.12619781 -307.15783691]
[-80.96896362 -294.76605225]
[-80.74308014 -280.86459351]
[-86.54938507 -268.15905762]
[-77.22663879 -256.40805054]
[-67.90388489 -244.65702820]
[-58.58113861 -232.90600586]
[-49.77232361 -233.34082031]
[-41.61840439 -229.63446045]
[-35.98381424 -222.49642944]
[-34.21951675 -213.43540955]
[-36.84094620 -204.44125366]
[-27.93871689 -192.36853027]
[-14.15796566 -186.71697998]
[-12.19515610 -171.01799011]
[-3.29292560 -158.94528198]
[5.60930490 -146.87257385]
[14.51153469 -134.79986572]
[23.41376495 -122.72716522]
[32.31599426 -110.65445709]
[47.17888641 -112.67794800]
[52.52967834 -126.69111633]
[57.88047409 -140.70428467]
[63.23126984 -154.71746826]
[60.92578888 -170.36979675]
[72.69412994 -179.49971008]
[78.04492950 -193.51287842]
[83.39572144 -207.52604675]
[83.52933502 -216.62460327]
[88.89279175 -221.67201233]
[94.40809631 -235.62124634]
[91.47088623 -251.75521851]
[104.14807892 -262.15814209]
[119.39846039 -256.12838745]
[121.53375244 -239.86885071]
[108.35733795 -230.10594177]
[102.84204102 -216.15670776]
[97.40889740 -202.17524719]
[92.05809784 -188.16207886]
[86.70730591 -174.14891052]
[89.39550781 -159.49890137]
[77.24444580 -149.36666870]
[71.89364624 -135.35350037]
[66.54285431 -121.34032440]
[61.19205856 -107.32714844]
[72.78181458 -116.84962463]
[87.77548981 -117.28517151]
[99.89847565 -108.45152283]
[104.07748413 -94.04541779]
[98.56369019 -80.09557343]
[85.66450500 -72.43978119]
[70.77804565 -74.28186035]
[60.13348389 -84.85206604]
[64.14347839 -70.39800262]
[75.00158691 -60.20238495]
[71.23513794 -44.83604431]
[75.24512482 -30.38198090]
[79.25511932 -15.92791748]
[92.30551147 -8.84110451]
[96.57811737 5.76024771]
[89.05632782 19.40064621]
[93.06632233 33.85470963]
[97.07631683 48.30877304]
[101.08631134 62.76283646]
[105.09629822 77.21690369]
[113.56692505 89.59626007]
[125.58705139 98.56936646]
[137.60717773 107.54246521]
[149.62730408 116.51556396]
[161.64743042 125.48867035]
[176.39706421 121.04405975]
[190.76765442 126.07791138]
[199.31745911 138.46195984]
[198.94010925 153.32788086]
[210.96023560 162.30097961]
[222.98036194 171.27409363]
[231.69683838 173.88650513]
[235.08830261 180.42416382]
[247.00201416 189.53807068]
[258.91574097 198.65197754]
[270.82943726 207.76588440]
[282.74316406 216.87979126]
[294.65689087 225.99369812]
[310.31878662 228.23327637]
[315.72625732 242.11161804]
[327.63995361 251.22552490]
[339.55368042 260.33944702]
[351.46740723 269.45333862]
[357.90936279 270.67379761]
[362.15179443 274.39053345]
[363.55087280 278.92456055]
[375.24682617 288.31628418]
[388.35794067 285.32235718]
[400.62451172 290.34280396]
[407.66464233 301.34255981]
[407.10305786 314.19573975]
[418.68768311 323.72442627]
[430.27233887 333.25311279]
[441.85699463 342.78176880]
[453.44165039 352.31045532]
[465.02630615 361.83914185]
[476.61096191 371.36782837]
[488.19561768 380.89651489]
[502.04412842 374.57354736]
[517.20288086 374.88906860]
[530.66632080 381.72692871]
[539.78826904 393.68310547]
[542.80212402 408.35369873]
[539.16247559 422.81808472]
[550.74713135 432.34677124]
[566.45074463 430.56576538]
[578.76202393 440.47576904]
[580.37689209 456.19735718]
[570.33728027 468.40316772]
[554.59948730 469.85171509]
[542.50054932 459.68362427]
[541.21844482 443.93142700]
[529.63378906 434.40274048]
[516.14331055 440.76458740]
[501.16687012 440.63772583]
[487.67544556 433.99377441]
[478.36859131 422.10247803]
[475.13449097 407.28939819]
[478.66693115 392.48117065]
[467.08227539 382.95248413]
[455.49761963 373.42379761]
[443.91296387 363.89511108]
[432.32830811 354.36642456]
[420.74365234 344.83773804]
[409.15899658 335.30908203]
[397.57437134 325.78039551]
[380.90405273 328.11611938]
[367.44757080 317.44934082]
[365.85510254 300.01223755]
[354.15914917 290.62051392]
[342.35348511 281.36706543]
[330.43978882 272.25314331]
[318.52606201 263.13925171]
[306.61233521 254.02532959]
[291.80258179 252.43765259]
[285.54296875 237.90742493]
[273.62927246 228.79351807]
[261.71554565 219.67959595]
[249.80181885 210.56568909]
[237.88810730 201.45178223]
[225.97438049 192.33787537]
[214.00726318 183.29421997]
[201.98713684 174.32110596]
[189.96701050 165.34800720]
[175.82179260 169.93614197]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 186]
[3 185]
[4 184]
[5 183]
[6 182]
[9 29]
[10 28]
[11 27]
[12 26]
[14 25]
[15 24]
[16 23]
[30 55]
[31 54]
[34 51]
[35 50]
[36 49]
[37 48]
[38 47]
[39 46]
[63 181]
[64 180]
[65 179]
[66 178]
[67 177]
[70 174]
[71 173]
[72 172]
[74 170]
[75 169]
[77 136]
[78 135]
[79 134]
[80 133]
[81 132]
[82 131]
[84 129]
[85 128]
[87 123]
[88 122]
[89 121]
[90 120]
[95 114]
[96 113]
[97 112]
[98 111]
[99 110]
[100 109]
[137 161]
[138 160]
[139 159]
[140 158]
[142 156]
[143 155]
[144 154]
[146 153]
[147 152]
[190 265]
[191 264]
[192 263]
[194 262]
[195 261]
[196 260]
[197 259]
[198 258]
[199 257]
[201 255]
[202 254]
[203 253]
[204 252]
[207 251]
[208 250]
[212 247]
[213 246]
[214 245]
[215 244]
[216 243]
[217 242]
[218 241]
[219 240]
[225 234]
[226 233]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
