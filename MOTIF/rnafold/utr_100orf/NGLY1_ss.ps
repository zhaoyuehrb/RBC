%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:43:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGACCCCGCCCCUGCCGGUGGCUGCGGUAGCUGCUGCGCGCUGAGGCGCCUGCUCAGUGUGGGACGCGGAGAGCGAGGGGCGGCGGCGGCGCCCGCUGGCGCUCAAGCAUGGCGGCGGCGGCAUUGGGCAGCUCCUCAGGCUCGGCGUCCCCGGCCGUGGCUGAGCUCUGCCAGAACACCCCGGAGACCUUUUUGGAGGCCUCCAAGC\
) } def
/len { sequence length } bind def

/coor [
[171.64057922 172.78344727]
[161.07391357 162.13705444]
[154.12977600 159.60366821]
[150.42993164 151.25033569]
[140.02449036 140.44633484]
[125.26784515 143.13735962]
[119.34582520 156.91885376]
[113.42380524 170.70036316]
[107.50178528 184.48185730]
[101.57976532 198.26335144]
[107.66729736 212.84819031]
[101.58161163 227.43379211]
[86.93322754 233.36679077]
[72.41278076 227.12724304]
[66.63498688 212.41694641]
[73.02770996 197.96327209]
[87.79826355 192.34132385]
[93.72029114 178.55982971]
[99.64231110 164.77833557]
[105.56433105 150.99684143]
[111.48635101 137.21534729]
[105.56779480 132.60874939]
[93.73069000 123.39555359]
[87.81213379 118.78895569]
[75.90612030 127.91292572]
[64.00009918 137.03689575]
[52.09408569 146.16085815]
[40.18806839 155.28482056]
[34.40608597 170.63085938]
[18.18326187 173.02919006]
[8.20824432 160.01261902]
[14.74247646 144.97148132]
[31.06410217 143.37881470]
[42.97011948 134.25483704]
[54.87613678 125.13087463]
[66.78215027 116.00691223]
[78.68817139 106.88294220]
[73.18307495 92.92966461]
[58.25461578 94.39290619]
[43.32615662 95.85615540]
[28.39769554 97.31939697]
[13.46923637 98.78264618]
[-1.45922363 100.24588776]
[-16.38768387 101.70913696]
[-31.31614304 103.17237854]
[-40.00141525 116.17622375]
[-55.02782822 120.50531769]
[-69.30036163 114.11557770]
[-76.07997131 100.02406311]
[-72.16552734 84.88433838]
[-59.40530777 75.84493256]
[-43.82430649 77.17396545]
[-32.77938843 88.24391937]
[-17.85092926 86.78067780]
[-2.92246842 85.31742859]
[12.00599098 83.85418701]
[26.93445206 82.39093781]
[41.86291122 80.92769623]
[56.79137039 79.46444702]
[71.71983337 78.00120544]
[82.04378510 67.11929321]
[82.71997833 52.13454437]
[83.39616394 37.14979553]
[84.07235718 22.16504288]
[84.74855042 7.18029165]
[85.42473602 -7.80445957]
[86.10092926 -22.78921127]
[78.99359894 -36.92414474]
[87.29676819 -49.28968811]
[87.97296143 -64.27443695]
[88.64914703 -79.25918579]
[76.68972015 -88.96888733]
[72.78647614 -103.68684387]
[78.23371124 -117.71508789]
[90.74703979 -125.74966431]
[91.42323303 -140.73442078]
[92.09941864 -155.71917725]
[92.77561188 -170.70391846]
[93.45180511 -185.68867493]
[94.12799072 -200.67341614]
[94.80418396 -215.65817261]
[87.69685364 -229.79310608]
[96.00002289 -242.15864563]
[96.67621613 -257.14340210]
[88.56787109 -267.17553711]
[89.44048309 -279.64340210]
[98.28204346 -287.90032959]
[99.18339539 -302.87319946]
[100.08474731 -317.84609985]
[93.19068146 -332.08627319]
[101.67877960 -344.32562256]
[102.58012390 -359.29852295]
[103.48147583 -374.27139282]
[100.87309265 -383.02716064]
[104.51057434 -389.46206665]
[105.63687897 -404.41970825]
[106.76318359 -419.37738037]
[107.88948822 -434.33502197]
[101.21024323 -448.67721558]
[109.88134766 -460.78756714]
[111.00765991 -475.74523926]
[112.13396454 -490.70288086]
[109.65747833 -499.49685669]
[113.39127350 -505.87634277]
[114.74227905 -520.81536865]
[107.36785889 -535.46289062]
[116.59077454 -549.02276611]
[132.92326355 -547.54577637]
[139.56387329 -532.55126953]
[129.68130493 -519.46441650]
[128.33030701 -504.52536011]
[127.09161377 -489.57659912]
[125.96530914 -474.61892700]
[124.83900452 -459.66128540]
[131.59881592 -446.38894653]
[122.84713745 -433.20870972]
[121.72083282 -418.25106812]
[120.59452820 -403.29339600]
[119.46822357 -388.33575439]
[118.45436859 -373.37005615]
[117.55302429 -358.39715576]
[116.65167236 -343.42425537]
[123.61020660 -330.25506592]
[115.05764008 -316.94476318]
[114.15628815 -301.97186279]
[113.25494385 -286.99896240]
[121.93513489 -271.74780273]
[111.66096497 -256.46722412]
[110.98477173 -241.48246765]
[118.14047241 -228.41934204]
[109.78893280 -214.98197937]
[109.11274719 -199.99723816]
[108.43655396 -185.01248169]
[107.76036072 -170.02772522]
[107.08417511 -155.04298401]
[106.40798187 -140.05822754]
[105.73179626 -125.07347870]
[117.47061920 -115.94451141]
[121.63222504 -101.48266602]
[116.41924286 -87.17608643]
[103.63389587 -78.58300018]
[102.95771027 -63.59824753]
[102.28151703 -48.61349869]
[109.43721771 -35.55036926]
[101.08567810 -22.11301994]
[100.40949249 -7.12826920]
[99.73329926 7.85648203]
[99.05710602 22.84123230]
[98.38092041 37.82598495]
[97.70472717 52.81073380]
[97.02853394 67.79548645]
[138.60285950 75.55498505]
[150.82849121 130.04087830]
[161.23394775 140.84489441]
[171.72030640 151.57038879]
[182.28697205 162.21678162]
[194.96636963 170.23132324]
[209.11662292 175.20829773]
[223.26687622 180.18528748]
[241.28102112 176.37141418]
[252.17918396 190.12545776]
[266.40264893 194.88919067]
[280.62609863 199.65292358]
[289.75894165 199.41101074]
[295.02661133 204.59661865]
[309.17687988 209.57359314]
[326.12487793 209.12518311]
[331.24746704 225.28674316]
[317.13558960 234.68307495]
[304.19989014 223.72384644]
[290.04965210 218.74687195]
[275.86239624 213.87637329]
[261.63891602 209.11265564]
[247.41545105 204.34892273]
[236.45106506 209.46090698]
[224.56161499 205.60737610]
[218.28988647 194.33554077]
[204.13963318 189.35855103]
[189.98937988 184.38157654]
[185.03546143 190.01261902]
[189.83483887 204.22410583]
[175.12763977 201.27471924]
[170.17372131 206.90577698]
[176.91316223 220.30650330]
[183.65261841 233.70724487]
[190.39205933 247.10798645]
[203.50480652 255.96047974]
[202.31076050 270.80715942]
[209.05020142 284.20788574]
[215.78965759 297.60861206]
[222.52909851 311.00936890]
[236.52502441 319.55609131]
[235.85087585 335.94137573]
[221.20014954 343.30944824]
[207.64427185 334.08065796]
[209.12835693 317.74880981]
[202.38891602 304.34808350]
[195.64945984 290.94732666]
[188.91001892 277.54660034]
[176.27932739 269.65261841]
[176.99131775 253.84744263]
[170.25187683 240.44670105]
[163.51242065 227.04595947]
[156.77297974 213.64521790]
[154.51496887 203.91136169]
[154.68803406 194.73944092]
[156.96452332 186.67361450]
[160.90435791 180.14808655]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 156]
[2 155]
[4 154]
[5 153]
[6 21]
[7 20]
[8 19]
[9 18]
[10 17]
[24 37]
[25 36]
[26 35]
[27 34]
[28 33]
[38 60]
[39 59]
[40 58]
[41 57]
[42 56]
[43 55]
[44 54]
[45 53]
[61 151]
[62 150]
[63 149]
[64 148]
[65 147]
[66 146]
[67 145]
[69 143]
[70 142]
[71 141]
[75 137]
[76 136]
[77 135]
[78 134]
[79 133]
[80 132]
[81 131]
[83 129]
[84 128]
[87 126]
[88 125]
[89 124]
[91 122]
[92 121]
[93 120]
[95 119]
[96 118]
[97 117]
[98 116]
[100 114]
[101 113]
[102 112]
[104 111]
[105 110]
[157 179]
[158 178]
[159 177]
[161 174]
[162 173]
[163 172]
[165 171]
[166 170]
[183 204]
[184 203]
[185 202]
[186 201]
[188 199]
[189 198]
[190 197]
[191 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
