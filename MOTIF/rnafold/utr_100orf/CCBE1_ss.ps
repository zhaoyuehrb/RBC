%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:21:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGCCGCGGAGGAGCAGGACGCUUGGUCCGGACGGAGCUCGGCGCUGGGAAGAAGCCGGGAGCUUCCCUGAUGGUGCCGCCGCCUCCGAGCCGGGGAGGAGCUGCCAGGGGCCAGCUGGGCAGGAGCCUGGGUCCGCUGCUGCUGCUCCUGGCGUUGGGACACACGUGGA\
) } def
/len { sequence length } bind def

/coor [
[95.93528748 210.57344055]
[81.78022766 203.02268982]
[78.99990082 187.22239685]
[89.72713470 175.29318237]
[90.27816772 160.30331421]
[90.82920074 145.31343079]
[91.38023376 130.32356262]
[91.93126678 115.33368683]
[84.98255920 112.51136780]
[71.08514404 106.86672211]
[64.13644409 104.04440308]
[54.07901764 115.17311859]
[44.02159882 126.30183411]
[40.50906754 141.72819519]
[26.23508453 145.98292542]
[16.17766380 157.11163330]
[6.12024212 168.24034119]
[-3.93717957 179.36906433]
[-10.07136917 195.17437744]
[-26.95712090 193.65525818]
[-30.17181396 177.00888062]
[-15.06589317 169.31164551]
[-5.00847197 158.18292236]
[5.04894972 147.05421448]
[15.10637093 135.92549133]
[17.89952660 121.29513550]
[32.89288330 116.24440765]
[42.95030594 105.11569214]
[53.00772858 93.98698425]
[50.67481995 79.16950989]
[37.68444061 71.66950989]
[28.65013504 70.07813263]
[24.52612114 63.91052246]
[11.67571449 56.17314529]
[-1.17469335 48.43576431]
[-5.60271168 48.51914978]
[-9.42939377 47.29162979]
[-12.31207275 45.10977554]
[-14.06183338 42.40558624]
[-14.65480232 39.62876892]
[-26.90243721 30.96878052]
[-39.15007401 22.30878830]
[-51.39770889 13.64879799]
[-63.64534378 4.98880768]
[-75.89297485 -3.67118311]
[-88.14060974 -12.33117390]
[-100.69811249 -20.53539658]
[-113.54851532 -28.27277565]
[-126.39892578 -36.01015472]
[-139.24932861 -43.74753189]
[-152.09973145 -51.48491287]
[-164.95014954 -59.22229004]
[-178.35115051 -51.71838379]
[-193.70849609 -51.93635559]
[-206.89112854 -59.81757736]
[-214.35299683 -73.24204254]
[-214.08688354 -88.59862518]
[-206.16438293 -101.75649261]
[-192.71659851 -109.17624664]
[-177.36091614 -108.86199951]
[-164.22795105 -100.89829254]
[-156.85038757 -87.42731476]
[-157.21276855 -72.07270050]
[-144.36236572 -64.33531952]
[-131.51194763 -56.59793854]
[-118.66154480 -48.86056137]
[-105.81113434 -41.12318420]
[-92.96073151 -33.38580322]
[-90.17960358 -33.95821381]
[-87.00030518 -33.44208908]
[-83.84426880 -31.67864799]
[-81.18297577 -28.66736603]
[-79.48062134 -24.57880783]
[-67.23298645 -15.91881847]
[-54.98535156 -7.25882721]
[-42.73771667 1.40116346]
[-30.49008179 10.06115437]
[-18.24244690 18.72114563]
[-5.99481201 27.38113594]
[6.56268549 35.58535767]
[19.41309357 43.32273483]
[32.26350021 51.06011581]
[45.18444061 58.67912674]
[58.17481995 66.17912292]
[117.81039429 83.91039276]
[132.41659546 80.49586487]
[147.02278137 77.08133698]
[161.62898254 73.66680145]
[176.23518372 70.25227356]
[190.80938721 66.70372009]
[205.35040283 63.02143478]
[219.89140320 59.33915329]
[234.43240356 55.65687180]
[248.97340393 51.97459030]
[263.51440430 48.29230881]
[271.09970093 43.13338089]
[278.35638428 44.67855835]
[292.96258545 41.26402664]
[304.63916016 30.58845329]
[318.79357910 35.22544479]
[333.39978027 31.81091309]
[348.00598145 28.39638329]
[359.68255615 17.72080803]
[373.83697510 22.35779953]
[388.44317627 18.94326973]
[396.12194824 13.92456341]
[403.34902954 15.60278988]
[418.01550293 12.45716476]
[432.65243530 9.17694759]
[447.25863647 5.76241779]
[461.86483765 2.34788752]
[476.47103882 -1.06664276]
[491.07720947 -4.48117304]
[494.93658447 -8.10795116]
[499.36206055 -9.70547771]
[503.47595215 -9.40169048]
[506.58175659 -7.65786219]
[521.35388184 -10.26258469]
[536.12597656 -12.86730766]
[550.89813232 -15.47202969]
[565.67022705 -18.07675362]
[577.87805176 -29.02667809]
[593.37866211 -23.67286301]
[596.22631836 -7.52285624]
[583.49163818 2.80960202]
[568.27496338 -3.30463648]
[553.50280762 -0.69991386]
[538.73071289 1.90480876]
[523.95861816 4.50953150]
[509.18649292 7.11425400]
[494.49176025 10.12502384]
[479.88555908 13.53955364]
[465.27935791 16.95408440]
[450.67315674 20.36861420]
[436.06695557 23.78314400]
[430.24734497 28.38520241]
[421.16110229 27.12362480]
[406.49465942 30.26924896]
[391.85769653 33.54946518]
[377.25152588 36.96399689]
[366.61965942 47.39534378]
[351.42050171 43.00257874]
[336.81430054 46.41711044]
[322.20809937 49.83164215]
[311.57626343 60.26298523]
[296.37710571 55.87022400]
[281.77090454 59.28475571]
[267.19668579 62.83331299]
[252.65570068 66.51559448]
[238.11468506 70.19787598]
[223.57368469 73.88015747]
[209.03268433 77.56243896]
[194.49168396 81.24472046]
[188.75758362 85.95291901]
[179.64970398 84.85847473]
[165.04351807 88.27300262]
[150.43731689 91.68753052]
[135.83111572 95.10205841]
[121.22492218 98.51659393]
[135.97338867 101.25202942]
[143.90126038 113.98580170]
[139.84704590 128.42752075]
[126.45027161 135.17485046]
[112.43296051 129.83489990]
[106.92113495 115.88471985]
[106.37010956 130.87458801]
[105.81907654 145.86447144]
[105.26804352 160.85433960]
[104.71701050 175.84422302]
[114.53942871 188.52883911]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 169]
[5 168]
[6 167]
[7 166]
[8 165]
[11 29]
[12 28]
[13 27]
[15 25]
[16 24]
[17 23]
[18 22]
[30 84]
[31 83]
[33 82]
[34 81]
[35 80]
[40 79]
[41 78]
[42 77]
[43 76]
[44 75]
[45 74]
[46 73]
[47 68]
[48 67]
[49 66]
[50 65]
[51 64]
[52 63]
[85 159]
[86 158]
[87 157]
[88 156]
[89 155]
[90 153]
[91 152]
[92 151]
[93 150]
[94 149]
[95 148]
[97 147]
[98 146]
[100 144]
[101 143]
[102 142]
[104 140]
[105 139]
[107 138]
[108 137]
[109 135]
[110 134]
[111 133]
[112 132]
[113 131]
[117 130]
[118 129]
[119 128]
[120 127]
[121 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
