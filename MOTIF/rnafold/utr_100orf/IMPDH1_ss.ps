%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:51:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUCGACCGGGCUGCGCUCACUGCCCAGCCGGGGCCCCGGGAGCCUCCAGGCUCCCGCCCGCCCUGAGCUGCGGCCUCCGCAUGGAGGGGCCACUCACUCCACCACCGCUGCAGGGAGGCGGAGCCGCCGCUGUUCCGGAGCCCGGAGCCCGGCAACACCCGGGACACGAGACGGCGGCGC\
) } def
/len { sequence length } bind def

/coor [
[177.96008301 243.35102844]
[163.29296875 246.49357605]
[148.69158936 243.05853271]
[136.96386719 233.70649719]
[130.36514282 220.23590088]
[130.16438293 205.23724365]
[136.40019226 191.59486389]
[147.87338257 181.93226624]
[162.37759399 178.10763550]
[177.12519836 180.85717773]
[166.42744446 170.34249878]
[155.72970581 159.82783508]
[145.03195190 149.31317139]
[130.53140259 145.90975952]
[126.11302185 130.71803284]
[115.41527557 120.20336151]
[104.71752930 109.68869781]
[101.95770264 111.90796661]
[98.30484009 113.25148010]
[94.06055450 113.39320374]
[89.63722229 112.11544800]
[85.51865387 109.34423828]
[82.21016693 105.17066956]
[67.31953430 103.36262512]
[52.42890167 101.55457306]
[37.52321625 99.87510681]
[22.60359573 98.32434845]
[7.68397188 96.77359009]
[-7.23565102 95.22282410]
[-22.16810226 93.80089569]
[-37.11227036 92.50788879]
[-52.05643845 91.21488190]
[-67.00060272 89.92187500]
[-81.94477081 88.62886810]
[-96.88893890 87.33586121]
[-110.05636597 98.83390045]
[-127.13069916 97.29470062]
[-137.60852051 84.15464020]
[-152.57278442 83.11977386]
[-167.53704834 82.08490753]
[-182.50129700 81.05003357]
[-197.46556091 80.01516724]
[-212.42982483 78.98030090]
[-227.39407349 77.94543457]
[-242.35833740 76.91056824]
[-256.84667969 84.59300995]
[-270.59851074 75.65883636]
[-269.46710205 59.29876328]
[-254.61637878 52.34263229]
[-241.32347107 61.94630814]
[-226.35920715 62.98117447]
[-211.39495850 64.01604462]
[-196.43069458 65.05091095]
[-181.46643066 66.08577728]
[-166.50218201 67.12064362]
[-151.53791809 68.15550995]
[-136.57365417 69.19037628]
[-128.12236023 59.44394684]
[-115.40892029 56.30573273]
[-103.03020477 61.14161301]
[-95.59593201 72.39169312]
[-80.65176392 73.68470001]
[-65.70759583 74.97770691]
[-50.76343155 76.27071381]
[-35.81926346 77.56372070]
[-20.87509537 78.85672760]
[-13.92207241 76.29419708]
[-5.68489170 80.30320740]
[9.23473072 81.85396576]
[24.15435410 83.40472412]
[39.07397842 84.95548248]
[46.07019424 82.51335144]
[54.23694992 86.66394043]
[69.12758636 88.47199249]
[84.01821899 90.28003693]
[96.21405792 81.54725647]
[99.29895782 66.86790466]
[102.38385773 52.18855286]
[105.46875763 37.50920105]
[108.29981995 22.77878761]
[110.87620544 8.00170231]
[113.45259094 -6.77538300]
[115.13205719 -21.68106651]
[115.90847778 -36.66095734]
[116.68489838 -51.64085007]
[117.46131897 -66.62074280]
[118.23773956 -81.60063171]
[118.88484192 -96.58666992]
[119.40258789 -111.57773590]
[119.92032623 -126.56879425]
[114.42429352 -142.60717773]
[128.31445312 -152.32829285]
[141.50083923 -141.67205811]
[134.91139221 -126.05105591]
[134.39364624 -111.05998993]
[133.87590027 -96.06893158]
[136.79489136 -89.25786591]
[133.21763611 -80.82421112]
[132.44120789 -65.84432220]
[131.66479492 -50.86442947]
[130.88836670 -35.88453674]
[130.11195374 -20.90464592]
[141.32426453 -30.86877441]
[156.31338501 -31.44007492]
[168.25163269 -22.35831451]
[171.70101929 -7.76031256]
[165.09034729 5.70441675]
[151.43081665 11.90257454]
[136.94445801 8.01084709]
[128.22967529 -4.19899702]
[125.65328979 10.57808781]
[123.07690430 25.35517311]
[125.05780029 29.72676468]
[124.29524994 35.39135742]
[120.14810944 40.59409714]
[117.06320953 55.27345276]
[113.97830963 69.95280457]
[110.89340973 84.63215637]
[115.23219299 98.99095154]
[125.92993927 109.50561523]
[136.62768555 120.02027893]
[151.89341736 124.17578125]
[155.54661560 138.61543274]
[166.24436951 149.13009644]
[176.94212341 159.64476013]
[187.63986206 170.15942383]
[199.36734009 179.51176453]
[211.99885559 187.60156250]
[224.63035583 195.69137573]
[237.26187134 203.78117371]
[249.89338684 211.87097168]
[262.52490234 219.96076965]
[275.15640259 228.05056763]
[287.78793335 236.14036560]
[300.41943359 244.23017883]
[316.21347046 245.15728760]
[322.75823975 258.53695679]
[335.38973999 266.62677002]
[349.78344727 261.13790894]
[364.47744751 265.13034058]
[373.89166260 276.87069702]
[374.57925415 291.72552490]
[387.21075439 299.81530762]
[399.84228516 307.90512085]
[412.47378540 315.99490356]
[425.10531616 324.08471680]
[437.80133057 315.67456055]
[452.82153320 313.16186523]
[467.56353760 316.98193359]
[479.47323608 326.47296143]
[486.48718262 339.99050903]
[487.39013672 355.19265747]
[482.02572632 369.44546509]
[471.32330322 380.27960205]
[457.13717651 385.81796265]
[441.92514038 385.10098267]
[428.32281494 378.25292969]
[418.68682861 366.46020508]
[414.68670654 351.76602173]
[417.01550293 336.71624756]
[404.38400269 328.62643433]
[391.75247192 320.53662109]
[379.12097168 312.44683838]
[366.48944092 304.35702515]
[352.70889282 309.94577026]
[338.10714722 306.30523682]
[328.33471680 294.62823486]
[327.29992676 279.25827026]
[314.66842651 271.16845703]
[299.77789307 270.81997681]
[292.32965088 256.86169434]
[279.69812012 248.77188110]
[267.06661987 240.68208313]
[254.43510437 232.59228516]
[241.80358887 224.50248718]
[229.17207336 216.41268921]
[216.54055786 208.32287598]
[203.90904236 200.23307800]
[191.27754211 192.14328003]
[197.23945618 205.90756226]
[196.73898315 220.89921570]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 126]
[11 125]
[12 124]
[13 123]
[15 121]
[16 120]
[17 119]
[23 75]
[24 74]
[25 73]
[26 71]
[27 70]
[28 69]
[29 68]
[30 66]
[31 65]
[32 64]
[33 63]
[34 62]
[35 61]
[38 57]
[39 56]
[40 55]
[41 54]
[42 53]
[43 52]
[44 51]
[45 50]
[76 118]
[77 117]
[78 116]
[79 115]
[80 112]
[81 111]
[82 110]
[83 102]
[84 101]
[85 100]
[86 99]
[87 98]
[88 96]
[89 95]
[90 94]
[127 179]
[128 178]
[129 177]
[130 176]
[131 175]
[132 174]
[133 173]
[134 172]
[135 171]
[137 169]
[138 168]
[142 164]
[143 163]
[144 162]
[145 161]
[146 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
