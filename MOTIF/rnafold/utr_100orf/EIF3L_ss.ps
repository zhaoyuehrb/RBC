%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:23:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGAACUUCCGGCCUCAGGACGCAGGCGCGGGCCGCUCAUUUCGCUCUUUCCGGCGGUGCUCGCAAGCGAGGCAGCCAUGUCUUAUCCCGCUGAUGAUUAUGAGUCUGAGGCGGCUUAUGACCCCUACGCUUAUCCCAGCGACUAUGAUAUGCACACAGGAGAUCCAAAGCAGGACC\
) } def
/len { sequence length } bind def

/coor [
[68.59167480 109.76691437]
[57.57460403 119.94651031]
[53.37902451 128.09388733]
[46.27371216 130.20599365]
[35.07968521 140.19067383]
[23.88566017 150.17533875]
[27.41595840 166.31452942]
[22.36260605 181.94494629]
[10.19212627 192.83772278]
[-5.71705389 196.09596252]
[-21.01208878 190.92465210]
[-32.02915955 201.10424805]
[-43.04623032 211.28384399]
[-54.06330490 221.46343994]
[-65.08037567 231.64303589]
[-50.19672012 233.50765991]
[-40.86306381 245.25001526]
[-42.40464401 260.17059326]
[-53.94192123 269.75656128]
[-68.89240265 268.53875732]
[-78.72621918 257.21197510]
[-77.83230591 242.23765564]
[-89.85832977 251.20286560]
[-101.88435364 260.16806030]
[-107.86943054 275.43603516]
[-124.12265015 277.61889648]
[-133.92408752 264.47113037]
[-127.19087219 249.51802063]
[-110.84954834 248.14202881]
[-98.82352448 239.17683411]
[-86.79750824 230.21163940]
[-75.25997162 220.62596130]
[-64.24289703 210.44636536]
[-53.22582626 200.26676941]
[-42.20875549 190.08717346]
[-31.19168472 179.90757751]
[-35.07611084 166.79833984]
[-32.91684723 153.23020935]
[-25.07971954 141.86537170]
[-13.05021572 134.95854187]
[0.84780753 133.90985107]
[13.90098286 138.98132324]
[25.09500694 128.99664307]
[36.28903198 119.01196289]
[47.39500809 108.92943573]
[58.41207886 98.74984741]
[74.28514099 82.41592407]
[91.91535950 80.94677734]
[101.71709442 89.90204620]
[110.14616394 77.49435425]
[118.57524109 65.08666992]
[127.00431061 52.67898178]
[135.43338013 40.27129364]
[129.80604553 27.67059898]
[131.13674927 14.04359913]
[138.97058105 2.94665956]
[151.16952515 -2.77743649]
[164.49501038 -1.72741950]
[173.14053345 -13.98526764]
[181.78607178 -26.24311447]
[190.43159485 -38.50096512]
[198.08306885 -51.40270233]
[204.69279480 -64.86789703]
[211.30252075 -78.33309937]
[217.91224670 -91.79829407]
[223.80416870 -105.59268951]
[228.96194458 -119.67804718]
[234.11972046 -133.76341248]
[239.27749634 -147.84877014]
[244.43528748 -161.93412781]
[249.46925354 -176.06419373]
[254.37904358 -190.23789978]
[259.28884888 -204.41160583]
[254.77368164 -209.67274475]
[252.14028931 -216.03022766]
[251.62065125 -222.84004211]
[253.23431396 -229.42309570]
[256.78970337 -235.13288879]
[261.90625000 -239.41903687]
[268.05484009 -241.88027954]
[274.61251831 -242.30189514]
[280.98492432 -255.88101196]
[287.35729980 -269.46014404]
[286.21560669 -285.24011230]
[298.62686157 -293.47476196]
[304.99926758 -307.05389404]
[299.86633301 -321.76071167]
[306.52227783 -335.44110107]
[320.57464600 -340.24392700]
[326.94702148 -353.82305908]
[333.31942749 -367.40219116]
[339.69180298 -380.98129272]
[346.06420898 -394.56042480]
[338.74411011 -408.11483765]
[340.78503418 -423.20419312]
[351.19659424 -434.06985474]
[365.83468628 -436.68991089]
[372.20706177 -450.26904297]
[378.57946777 -463.84817505]
[384.95184326 -477.42730713]
[386.20712280 -494.33471680]
[402.80130005 -497.80892944]
[410.73345947 -482.82501221]
[398.53097534 -471.05490112]
[392.15859985 -457.47576904]
[385.78619385 -443.89663696]
[379.41378784 -430.31753540]
[386.75292969 -417.38403320]
[385.04885864 -402.43209839]
[374.74685669 -391.21954346]
[359.64334106 -388.18804932]
[353.27093506 -374.60891724]
[346.89852905 -361.02978516]
[340.52615356 -347.45065308]
[334.15374756 -333.87155151]
[339.43966675 -319.99368286]
[333.17059326 -306.13174438]
[318.57836914 -300.68148804]
[312.20599365 -287.10238647]
[313.80349731 -272.29370117]
[300.93643188 -263.08773804]
[294.56402588 -249.50862122]
[288.19165039 -235.92950439]
[292.92871094 -213.28637695]
[273.46255493 -199.50183105]
[268.55276489 -185.32810974]
[263.64297485 -171.15440369]
[264.42691040 -163.78338623]
[258.52062988 -156.77633667]
[253.36285400 -142.69097900]
[248.20507812 -128.60562134]
[243.04730225 -114.52027130]
[237.88952637 -100.43491364]
[251.98400879 -105.56767273]
[265.64761353 -99.37850189]
[271.08468628 -85.39857483]
[265.19314575 -71.60402679]
[251.33435059 -65.86521149]
[237.41532898 -71.45637512]
[231.37744141 -85.18856812]
[224.76771545 -71.72337341]
[218.15798950 -58.25817490]
[211.54827881 -44.79298019]
[225.20324707 -51.00118637]
[240.06446838 -48.96549225]
[251.54695129 -39.31394958]
[256.10815430 -25.02424812]
[252.34080505 -10.50504684]
[241.40724182 -0.23581173]
[226.68067932 2.61519527]
[212.70454407 -2.83161902]
[203.79077148 -14.89580345]
[202.68943787 -29.85543442]
[194.04391479 -17.59758759]
[185.39839172 -5.33973885]
[176.75285339 6.91810894]
[182.54049683 22.26554680]
[178.00451660 38.20101166]
[164.73893738 48.40237045]
[147.84107971 48.70036697]
[139.41200256 61.10805511]
[130.98292542 73.51573944]
[122.55385590 85.92343140]
[114.12477875 98.33111572]
[111.89534760 113.16451263]
[116.30468750 127.50179291]
[120.71403503 141.83908081]
[134.79621887 149.01318359]
[139.60144043 164.06925964]
[132.27885437 178.07479858]
[117.17281342 182.72056580]
[103.24547577 175.25032043]
[98.75967407 160.09600830]
[106.37675476 146.24842834]
[101.96740723 131.91114807]
[97.55805969 117.57386017]
[90.31646729 115.62212372]
[79.69458008 126.21342468]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 46]
[2 45]
[4 44]
[5 43]
[6 42]
[11 36]
[12 35]
[13 34]
[14 33]
[15 32]
[22 31]
[23 30]
[24 29]
[49 164]
[50 163]
[51 162]
[52 161]
[53 160]
[58 156]
[59 155]
[60 154]
[61 153]
[62 143]
[63 142]
[64 141]
[65 140]
[66 133]
[67 132]
[68 131]
[69 130]
[70 129]
[71 127]
[72 126]
[73 125]
[81 123]
[82 122]
[83 121]
[85 119]
[86 118]
[89 115]
[90 114]
[91 113]
[92 112]
[93 111]
[97 107]
[98 106]
[99 105]
[100 104]
[165 176]
[166 175]
[167 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
