%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:17:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAAACAAGCUCCUGUGGAAUUGUGGGUAGACACUGGACUUGUAAACGAAAAGCUUCAUAAGUCCCUCUUUGCUUAGUACUUUUCUCGUCCUUUCCCCAGGGUGCACGUAACCCUCAAGCACUAGGACCGUGCGGAAUCCAGGCUGCGAUGGCACCUUCAUUUACCGCCCGCAUUCAGUUGUUCCUCUUGCGGGCGCUAGGCUUUCUCAUAGGCUUAGUAGGCCGAGCAGCUUUAGUCUUAGGGGGUC\
) } def
/len { sequence length } bind def

/coor [
[-100.40283203 176.68354797]
[-108.13550568 183.82595825]
[-117.33056641 188.92408752]
[-127.46020508 191.69221497]
[-137.94461060 191.97814941]
[-148.18515015 189.77163696]
[-157.59854126 185.20454407]
[-165.65010071 178.54298401]
[-171.88406372 170.17187500]
[-175.94944763 160.57269287]
[-190.85362244 162.26554871]
[-205.74685669 164.05200195]
[-220.62858582 165.93200684]
[-235.51029968 167.81199646]
[-250.39202881 169.69200134]
[-265.27374268 171.57199097]
[-277.99536133 180.97790527]
[-291.59201050 174.89677429]
[-306.47372437 176.77676392]
[-321.35546875 178.65676880]
[-336.23718262 180.53675842]
[-340.77313232 185.18968201]
[-346.30276489 187.32896423]
[-351.65496826 186.98390198]
[-355.85995483 184.66477966]
[-370.23779297 188.94006348]
[-384.61560059 193.21536255]
[-398.99343872 197.49064636]
[-413.37124634 201.76593018]
[-427.74908447 206.04122925]
[-442.12692261 210.31651306]
[-456.50473022 214.59179688]
[-460.10620117 227.88182068]
[-469.72314453 237.58450317]
[-482.77239990 241.24530029]
[-495.82284546 238.01254272]
[-505.49749756 228.83273315]
[-519.92791748 232.92701721]
[-534.35833740 237.02128601]
[-548.78875732 241.11557007]
[-563.21911621 245.20985413]
[-577.64953613 249.30412292]
[-592.07995605 253.39840698]
[-606.51037598 257.49267578]
[-609.38757324 260.66809082]
[-612.78015137 262.58511353]
[-616.23400879 263.23547363]
[-619.33843994 262.75765991]
[-621.76934814 261.41052246]
[-636.38726807 264.77459717]
[-651.00518799 268.13864136]
[-662.63128662 279.70434570]
[-678.38763428 275.15811157]
[-682.06549072 259.17669678]
[-669.88134766 248.20043945]
[-654.36920166 253.52073669]
[-639.75134277 250.15667725]
[-625.13342285 246.79261780]
[-610.60467529 243.06227112]
[-596.17425537 238.96798706]
[-581.74383545 234.87371826]
[-567.31341553 230.77943420]
[-552.88299561 226.68515015]
[-538.45257568 222.59088135]
[-524.02215576 218.49659729]
[-509.59176636 214.40231323]
[-504.42181396 198.80969238]
[-490.83517456 189.28320312]
[-474.08145142 189.74607849]
[-460.78002930 200.21397400]
[-446.40219116 195.93869019]
[-432.02438354 191.66339111]
[-417.64654541 187.38810730]
[-403.26873779 183.11282349]
[-388.89089966 178.83752441]
[-374.51306152 174.56224060]
[-360.13525391 170.28695679]
[-374.77844238 167.03472900]
[-387.50311279 159.09226990]
[-396.85699463 147.36601257]
[-401.77252197 133.19430542]
[-401.68869019 118.19453430]
[-396.61508179 104.07863617]
[-387.13073730 92.45766449]
[-374.31808472 84.65790558]
[-359.63946533 81.56954193]
[-344.77011108 83.54506683]
[-331.40710449 90.35899353]
[-321.07553101 101.23366547]
[-314.95452881 114.92794800]
[-313.74270630 129.87892151]
[-317.57833862 144.38021851]
[-326.02371216 156.77682495]
[-338.11718750 165.65504456]
[-323.23544312 163.77503967]
[-308.35372925 161.89505005]
[-293.47201538 160.01504517]
[-281.81484985 150.74360657]
[-267.15374756 156.69027710]
[-252.27201843 154.81027222]
[-237.39030457 152.93028259]
[-222.50857544 151.05027771]
[-207.62686157 149.17028809]
[-201.40060425 145.22395325]
[-192.54646301 147.36137390]
[-177.64230347 145.66853333]
[-172.18724060 126.79617310]
[-158.97804260 112.19036102]
[-140.65791321 104.83654022]
[-120.92039490 106.26268005]
[-103.76470184 116.22203064]
[-92.68544006 132.73455811]
[-77.95112610 129.92384338]
[-63.21681976 127.11312866]
[-48.48250961 124.30240631]
[-33.74820328 121.49168396]
[-19.01389313 118.68096924]
[-4.29753590 115.77772522]
[10.40029049 112.78207397]
[25.09811592 109.78642273]
[31.00941849 105.38230133]
[39.99940491 106.84670258]
[54.73371124 104.03598022]
[69.46801758 101.22525787]
[84.20233154 98.41454315]
[94.94137573 87.94206238]
[98.12148285 73.28303528]
[101.30158997 58.62401581]
[104.29724121 43.92618942]
[107.10796356 29.19188118]
[101.20677948 13.89129066]
[111.71603394 1.30210543]
[127.82470703 4.37499905]
[132.96157837 19.94884300]
[121.84226990 32.00260162]
[119.03154755 46.73690796]
[120.91252899 51.10174179]
[120.08923340 56.69264984]
[115.96060944 61.80412292]
[112.78050232 76.46314240]
[109.60039520 91.12216949]
[118.94221497 102.85803223]
[133.94102478 103.04651642]
[148.93984985 103.23500824]
[163.93865967 103.42350006]
[178.93748474 103.61199188]
[193.93629456 103.80048370]
[208.93510437 103.98897552]
[218.68254089 95.56742859]
[231.15548706 96.01876831]
[239.70140076 104.55744934]
[254.69667053 104.93440247]
[269.69192505 105.31135559]
[284.68719482 105.68830109]
[286.44860840 99.26953888]
[289.37915039 93.21655273]
[293.40347290 87.74253845]
[298.40728760 83.04523468]
[304.24057007 79.29983521]
[310.72198486 76.65254974]
[317.64456177 75.21498108]
[324.78216553 75.05968475]
[331.89700317 76.21689606]
[338.74749756 78.67270660]
[345.09649658 82.36871338]
[350.71939087 87.20320129]
[355.41220093 93.03378296]
[358.99874878 99.68157959]
[373.85565186 97.61472321]
[388.71258545 95.54786682]
[403.56948853 93.48101044]
[418.42642212 91.41416168]
[433.28335571 89.34730530]
[448.14025879 87.28044891]
[451.59213257 72.50042725]
[460.15328979 59.96762466]
[472.66589355 51.37700272]
[487.43774414 47.89037323]
[502.47106934 49.97927475]
[515.73272705 57.36120224]
[525.42919922 69.03780365]
[530.24908447 83.42992401]
[529.54058838 98.59113312]
[523.39947510 112.47101593]
[512.65631104 123.19242859]
[498.76397705 129.30538940]
[483.60137939 129.98315430]
[469.21905518 125.13409424]
[457.56213379 115.41397095]
[450.20712280 102.13737488]
[435.35018921 104.20422363]
[420.49328613 106.27108002]
[405.63635254 108.33793640]
[390.77944946 110.40478516]
[375.92251587 112.47164154]
[361.06558228 114.53849792]
[358.16235352 129.25485229]
[371.12121582 136.80920410]
[384.08004761 144.36355591]
[397.03890991 151.91789246]
[409.99774170 159.47224426]
[422.95660400 167.02659607]
[435.91546631 174.58094788]
[448.87429810 182.13528442]
[461.83316040 189.68963623]
[477.05017090 185.42131042]
[490.78723145 193.23591614]
[494.89443970 208.49719238]
[486.93502808 222.15089417]
[471.63119507 226.09651184]
[458.06240845 217.99319458]
[454.27880859 202.64848328]
[441.31994629 195.09414673]
[428.36111450 187.53979492]
[415.40225220 179.98544312]
[402.44342041 172.43109131]
[389.48455811 164.87675476]
[376.52569580 157.32240295]
[363.56686401 149.76805115]
[350.60800171 142.21369934]
[323.53137207 153.73764038]
[296.97918701 144.38549805]
[284.31024170 120.68356323]
[269.31497192 120.30661774]
[254.31971741 119.92966461]
[239.32444763 119.55271149]
[224.36991882 128.75634766]
[208.74661255 118.98778534]
[193.74780273 118.79929352]
[178.74899292 118.61080933]
[163.75016785 118.42231750]
[148.75135803 118.23382568]
[133.75254822 118.04533386]
[118.75372314 117.85684204]
[87.01304626 113.14884949]
[72.27873993 115.95957184]
[57.54443359 118.77028656]
[42.81012344 121.58100891]
[28.09376526 124.48425293]
[13.39593983 127.47990417]
[-1.30188608 130.47555542]
[-9.06216812 135.24444580]
[-16.20317459 133.41526794]
[-30.93748283 136.22599792]
[-45.67179108 139.03671265]
[-60.40610123 141.84742737]
[-75.14041138 144.65815735]
[-89.87471771 147.46887207]
[-90.99866486 157.97370911]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 106]
[11 105]
[12 103]
[13 102]
[14 101]
[15 100]
[16 99]
[18 97]
[19 96]
[20 95]
[21 94]
[25 77]
[26 76]
[27 75]
[28 74]
[29 73]
[30 72]
[31 71]
[32 70]
[37 66]
[38 65]
[39 64]
[40 63]
[41 62]
[42 61]
[43 60]
[44 59]
[49 58]
[50 57]
[51 56]
[112 248]
[113 247]
[114 246]
[115 245]
[116 244]
[117 243]
[118 241]
[119 240]
[120 239]
[122 238]
[123 237]
[124 236]
[125 235]
[126 141]
[127 140]
[128 139]
[129 136]
[130 135]
[142 234]
[143 233]
[144 232]
[145 231]
[146 230]
[147 229]
[148 228]
[151 226]
[152 225]
[153 224]
[154 223]
[168 196]
[169 195]
[170 194]
[171 193]
[172 192]
[173 191]
[174 190]
[197 220]
[198 219]
[199 218]
[200 217]
[201 216]
[202 215]
[203 214]
[204 213]
[205 212]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
