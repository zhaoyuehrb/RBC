%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:15:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUCGCGCGGGCGCGCUUCCGCCUGUGUGGAGGUGCGGGAUUGGGCGGGCUGCCACGGCAUGGAGAAUGGCUCCGCUUCUGUUGCAGCUGGCGGUGCUCGGCGCGGCGCUGGCGGCCGCAGCCCUCGUACUGAUUUCCAUCGUUGCAUUUACAACUGCUACAAAAA\
) } def
/len { sequence length } bind def

/coor [
[50.03361511 347.77737427]
[43.81291962 334.12808228]
[41.61848068 319.28945923]
[43.62133789 304.42694092]
[34.48991776 316.32727051]
[25.35849571 328.22756958]
[16.22707367 340.12786865]
[7.09565210 352.02816772]
[-2.03576922 363.92846680]
[-11.16719055 375.82876587]
[-20.29861259 387.72906494]
[-29.43003273 399.62936401]
[-38.56145477 411.52966309]
[-47.69287491 423.42996216]
[-45.38177490 439.06436157]
[-54.86971283 451.70376587]
[-70.52767181 453.84942627]
[-83.06605530 444.22839355]
[-85.04606628 428.54861450]
[-75.29299927 416.11267090]
[-59.59317780 414.29852295]
[-50.46175385 402.39822388]
[-41.33033371 390.49792480]
[-32.19891357 378.59762573]
[-23.06749153 366.69732666]
[-13.93606949 354.79702759]
[-4.80464792 342.89672852]
[4.32677364 330.99642944]
[13.45819473 319.09613037]
[22.58961678 307.19583130]
[31.72103691 295.29553223]
[38.48086166 281.90505981]
[42.63339615 267.49130249]
[46.78592682 253.07754517]
[50.93846130 238.66378784]
[55.09099197 224.25001526]
[59.24352646 209.83625793]
[63.39605713 195.42250061]
[67.54859161 181.00874329]
[58.26273346 169.39363098]
[57.58893204 154.36000061]
[65.99495697 141.66384888]
[80.43190002 136.28977966]
[84.58443451 121.87601471]
[88.73696899 107.46225739]
[86.77907562 92.59058380]
[79.03748322 79.74271393]
[65.28794098 71.91580200]
[65.34650421 57.02130890]
[57.60490799 44.17343903]
[49.86331177 31.32557106]
[42.12171936 18.47770309]
[34.38012314 5.62983465]
[26.63853073 -7.21803379]
[12.88898754 -15.04495049]
[12.94755077 -29.93944168]
[5.20595646 -42.78730774]
[-2.53563786 -55.63517761]
[-10.27723217 -68.48304749]
[-27.31372070 -72.36647034]
[-36.11539078 -87.06959534]
[-31.66889763 -103.26947784]
[-39.64937973 -115.97034454]
[-47.62985992 -128.67120361]
[-55.61034012 -141.37207031]
[-63.59082413 -154.07293701]
[-78.84873962 -159.03030396]
[-84.35094452 -174.10031128]
[-75.87660980 -187.72254944]
[-59.92652893 -189.44718933]
[-48.73623276 -177.95124817]
[-50.88996124 -162.05340576]
[-42.90947723 -149.35255432]
[-34.92899704 -136.65168762]
[-26.94851685 -123.95082092]
[-18.96803474 -111.24996185]
[-6.10466814 -110.16078186]
[3.92396879 -101.72588348]
[7.30035114 -88.86252594]
[2.57063651 -76.22463989]
[10.31223011 -63.37677002]
[18.05382538 -50.52890396]
[25.79541779 -37.68103409]
[38.99123001 -30.77308273]
[39.48640060 -14.95962811]
[47.22799301 -2.11175942]
[54.96958923 10.73610878]
[62.71118164 23.58397675]
[70.45277405 36.43184662]
[78.19436646 49.27971268]
[91.39018250 56.18766403]
[91.88535309 72.00112152]
[99.62694550 84.84899139]
[114.07890320 88.86657715]
[127.34062958 81.85754395]
[140.60235596 74.84851837]
[153.86408997 67.83948517]
[167.12582397 60.83045578]
[171.95837402 44.03851318]
[187.13189697 36.07510376]
[203.05697632 41.42293549]
[216.18531799 34.16715240]
[229.31367493 26.91136742]
[242.37361145 19.53315353]
[255.36399841 12.03315353]
[268.35437012 4.53315401]
[281.34475708 -2.96684599]
[294.33514404 -10.46684647]
[296.87222290 -25.89724731]
[308.76782227 -36.04755020]
[324.40521240 -36.12509537]
[336.40087891 -26.09326363]
[339.09085083 -10.68878269]
[331.20501709 2.81482339]
[316.46679688 8.04156494]
[301.83514404 2.52353501]
[288.84475708 10.02353477]
[275.85437012 17.52353477]
[262.86398315 25.02353477]
[249.87361145 32.52353668]
[245.63551331 38.61661530]
[236.56945801 40.03971863]
[223.44110107 47.29550171]
[210.31275940 54.55128479]
[208.50404358 67.33334351]
[199.52009583 76.87326050]
[186.48765564 79.52307129]
[174.13485718 74.09218597]
[160.87312317 81.10121918]
[147.61138916 88.11024475]
[134.34965515 95.11927795]
[121.08792877 102.12830353]
[134.02868652 109.71361542]
[136.87110901 124.44184113]
[127.68240356 136.29795837]
[112.71076965 137.21997070]
[102.13672638 126.58090210]
[103.15072632 111.61479187]
[98.99819946 126.02854919]
[94.84566498 140.44230652]
[104.21059418 152.67358398]
[104.57341766 167.89599609]
[96.00452423 180.26684570]
[81.96234894 185.16127014]
[77.80981445 199.57504272]
[73.65728760 213.98880005]
[69.50475311 228.40255737]
[65.35221863 242.81631470]
[61.19968796 257.23007202]
[57.04715347 271.64382935]
[52.89462280 286.05758667]
[63.66619492 275.61856079]
[76.90882874 268.57351685]
[91.58517456 265.47433472]
[106.54555511 266.56375122]
[120.61807251 271.75646973]
[132.70036316 280.64572144]
[141.84594727 292.53512573]
[147.33843994 306.49337769]
[148.74755859 321.42703247]
[145.96295166 336.16629028]
[139.20272827 349.55657959]
[128.99645996 360.54891968]
[116.14363861 368.28228760]
[101.65108490 372.15087891]
[86.65407562 371.85165405]
[72.32737732 367.40802002]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 31]
[5 30]
[6 29]
[7 28]
[8 27]
[9 26]
[10 25]
[11 24]
[12 23]
[13 22]
[14 21]
[32 151]
[33 150]
[34 149]
[35 148]
[36 147]
[37 146]
[38 145]
[39 144]
[43 140]
[44 139]
[45 138]
[46 93]
[47 92]
[49 90]
[50 89]
[51 88]
[52 87]
[53 86]
[54 85]
[56 83]
[57 82]
[58 81]
[59 80]
[62 76]
[63 75]
[64 74]
[65 73]
[66 72]
[94 132]
[95 131]
[96 130]
[97 129]
[98 128]
[101 124]
[102 123]
[103 122]
[104 120]
[105 119]
[106 118]
[107 117]
[108 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
