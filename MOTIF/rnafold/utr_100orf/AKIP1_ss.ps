%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:14:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGGGAGCGCUAGGCCUGGUCCCUCUUCCUAGAAUAGCGUUGCGCGCAUGCGCCUUGACGAGUGAGCCGGGGAGCCAUGGACAACUGUUUGGCGGCCGCAGCGCUGAAUGGGGUGGACCGACGUUCCCUGCAGCGUUCAGCAAGGCUGGCUCUAGAAGUGCUGGAGAGGGCCAAGA\
) } def
/len { sequence length } bind def

/coor [
[59.23004532 94.43054199]
[74.09253693 92.40411377]
[87.86204529 98.35179138]
[76.93115997 88.07970428]
[66.00028229 77.80761719]
[55.06939697 67.53553009]
[44.13851166 57.26344299]
[33.20763016 46.99135208]
[22.27674484 36.71926498]
[15.62402534 38.69318390]
[8.73908901 38.49836731]
[2.30592632 36.18636703]
[-3.04637623 32.01746368]
[-6.80513811 26.43177605]
[-8.62312317 20.00294876]
[-8.35043621 13.37931538]
[-6.04635715 7.21851444]
[-15.82345963 -4.15726137]
[-25.60056114 -15.53303719]
[-35.37766266 -26.90881348]
[-45.15476608 -38.28458786]
[-54.93186951 -49.66036606]
[-64.40058899 -49.11085129]
[-72.92671204 -52.94062805]
[-78.63423157 -60.16749954]
[-80.33221436 -69.07815552]
[-77.76164246 -77.63342285]
[-86.91944122 -89.51343536]
[-96.07724762 -101.39344788]
[-105.23504639 -113.27346039]
[-114.39284515 -125.15347290]
[-127.87933350 -125.33662415]
[-138.63500977 -133.14801025]
[-142.85585022 -145.54743958]
[-139.20977783 -157.92497253]
[-148.15528870 -169.96565247]
[-157.10079956 -182.00631714]
[-166.04631042 -194.04699707]
[-174.99182129 -206.08767700]
[-183.93733215 -218.12834167]
[-192.88284302 -230.16902161]
[-201.82835388 -242.20968628]
[-210.77386475 -254.25036621]
[-219.71937561 -266.29104614]
[-227.37411499 -271.33367920]
[-228.71455383 -278.62573242]
[-237.44494629 -290.82327271]
[-242.25735474 -293.00143433]
[-245.41801453 -296.47155762]
[-246.71115112 -300.37945557]
[-246.29492188 -303.91046143]
[-254.36376953 -316.55535889]
[-262.43261719 -329.20028687]
[-270.50146484 -341.84518433]
[-282.92300415 -345.39416504]
[-289.37893677 -356.11819458]
[-286.86746216 -367.97116089]
[-294.71063232 -380.75729370]
[-302.55377197 -393.54342651]
[-309.73144531 -399.24465942]
[-310.42034912 -406.62680054]
[-318.03530884 -419.55010986]
[-325.65029907 -432.47341919]
[-340.97122192 -434.07843018]
[-352.27716064 -444.27792358]
[-355.37274170 -459.00479126]
[-349.27593994 -472.56823730]
[-356.89093018 -485.49154663]
[-364.50592041 -498.41488647]
[-372.23529053 -511.27008057]
[-380.07846069 -524.05621338]
[-393.51431274 -534.39611816]
[-387.29791260 -550.16931152]
[-370.42028809 -548.56225586]
[-367.29232788 -531.89935303]
[-359.44918823 -519.11322021]
[-353.25213623 -515.04296875]
[-351.58261108 -506.02984619]
[-343.96762085 -493.10653687]
[-336.35263062 -480.18322754]
[-321.53363037 -478.94430542]
[-310.15106201 -469.10046387]
[-306.70724487 -454.26828003]
[-312.72698975 -440.08840942]
[-305.11199951 -427.16510010]
[-297.49703979 -414.24179077]
[-289.76763916 -401.38656616]
[-281.92449951 -388.60043335]
[-274.08135986 -375.81433105]
[-258.23254395 -368.30990601]
[-257.85656738 -349.91403198]
[-249.78770447 -337.26913452]
[-241.71885681 -324.62423706]
[-233.65000916 -311.97930908]
[-225.24740601 -299.55368042]
[-216.51701355 -287.35614014]
[-207.67869568 -275.23654175]
[-198.73320007 -263.19589233]
[-189.78768921 -251.15519714]
[-180.84217834 -239.11453247]
[-171.89666748 -227.07385254]
[-162.95115662 -215.03317261]
[-154.00564575 -202.99250793]
[-145.06013489 -190.95182800]
[-136.11462402 -178.91116333]
[-127.16911316 -166.87048340]
[-110.45467377 -165.14051819]
[-99.94417572 -151.59996033]
[-102.51284027 -134.31127930]
[-93.35503387 -122.43125916]
[-84.19723511 -110.55124664]
[-75.03943634 -98.67124176]
[-65.88162994 -86.79122925]
[-46.18424988 -80.68455505]
[-43.55609131 -59.43746567]
[-33.77898788 -48.06169128]
[-24.00188828 -36.68591309]
[-14.22478580 -25.31013870]
[-4.44768333 -13.93436337]
[5.32941866 -2.55858731]
[27.92859268 2.38732409]
[32.54883194 25.78838348]
[43.47971725 36.06047058]
[54.41059875 46.33255768]
[65.34148407 56.60464478]
[76.27236938 66.87673187]
[87.20324707 77.14881897]
[98.13413239 87.42090607]
[111.79365540 93.61908722]
[126.72223663 95.08106995]
[141.65081787 96.54304504]
[151.85054016 84.84922791]
[166.98323059 81.41680145]
[181.23004150 87.56559753]
[189.11280823 100.93128967]
[187.60043335 116.37448883]
[177.27445984 127.95697021]
[162.10543823 131.22503662]
[147.92616272 124.92204285]
[140.18884277 111.47162628]
[125.26026154 110.00965118]
[110.33168030 108.54767609]
[103.17983246 121.73369598]
[96.02861786 134.91853333]
[105.39582062 146.63414001]
[114.76303101 158.34974670]
[124.13024139 170.06535339]
[139.59175110 171.95733643]
[148.92453003 183.97207642]
[147.02552795 198.70059204]
[156.39273071 210.41619873]
[165.75994873 222.13180542]
[175.12715149 233.84741211]
[184.49435425 245.56301880]
[193.86157227 257.27862549]
[209.58265686 260.47653198]
[216.75576782 274.82666016]
[209.87831116 289.32080078]
[194.22605896 292.84030151]
[181.80610657 282.68527222]
[182.14596558 266.64584351]
[172.77874756 254.93022156]
[163.41154480 243.21461487]
[154.04434204 231.49900818]
[144.67712402 219.78340149]
[135.30992126 208.06779480]
[120.52453613 206.67927551]
[110.85796356 194.93141174]
[112.41463470 179.43255615]
[103.04742432 167.71694946]
[93.68021393 156.00135803]
[84.31301117 144.28575134]
[69.79240417 148.04766846]
[55.41773224 143.76179504]
[45.32814407 132.66224670]
[42.42892456 117.94509125]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 128]
[4 127]
[5 126]
[6 125]
[7 124]
[8 123]
[9 122]
[17 120]
[18 119]
[19 118]
[20 117]
[21 116]
[22 115]
[27 113]
[28 112]
[29 111]
[30 110]
[31 109]
[35 106]
[36 105]
[37 104]
[38 103]
[39 102]
[40 101]
[41 100]
[42 99]
[43 98]
[44 97]
[46 96]
[47 95]
[51 94]
[52 93]
[53 92]
[54 91]
[57 89]
[58 88]
[59 87]
[61 86]
[62 85]
[63 84]
[67 80]
[68 79]
[69 78]
[70 76]
[71 75]
[129 142]
[130 141]
[131 140]
[144 172]
[145 171]
[146 170]
[147 169]
[150 166]
[151 165]
[152 164]
[153 163]
[154 162]
[155 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
