%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:13:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCACAGCACUCAUUCCUGAAGCUACUGGUUGGUUCCCUGAGAGGUCCCAGAACUCUGCGAAGUGAGUCCAGCGCUGAGAUUUUCCUUGCAGAUCUAUCAGGAUGAGCAUCCAGGCCCCACCCAGACUACUGGAGCUGGCAGGGCAGAGCCUGCUGAGAGACCAGGCCUUGUCCAUCUCUGCCAUGGAGGAGCUGCCCAGGG\
) } def
/len { sequence length } bind def

/coor [
[87.99971771 432.51425171]
[90.48685455 413.29281616]
[90.71784973 398.29458618]
[90.94883728 383.29635620]
[78.94414520 374.51995850]
[74.35499573 360.18804932]
[79.14091492 345.73300171]
[91.66548920 336.76409912]
[91.89648438 321.76586914]
[92.12747192 306.76766968]
[92.24296570 291.76809692]
[92.24296570 276.76809692]
[92.24296570 261.76809692]
[89.09756470 255.07553101]
[92.36024475 246.53755188]
[92.59123993 231.53933716]
[92.82222748 216.54110718]
[93.05321503 201.54289246]
[81.67463684 194.55343628]
[75.18474579 182.75898743]
[75.37313843 169.18995667]
[82.29754639 157.39347839]
[94.24087524 150.50617981]
[94.70280457 135.51329041]
[73.08769226 120.50598145]
[68.46772766 96.18156433]
[81.36135101 76.88836670]
[69.11839294 68.22175598]
[56.87544250 59.55515289]
[44.63248825 50.88854218]
[28.89842224 49.23032761]
[22.98087120 35.56167984]
[10.73791790 26.89507294]
[-4.99615002 25.23685455]
[-10.91370106 11.56820965]
[-23.15665436 2.90160251]
[-41.52435684 1.63109219]
[-48.23653030 -14.58095264]
[-60.61149216 -23.05799866]
[-72.98645020 -31.53504562]
[-85.36141205 -40.01209259]
[-97.73637390 -48.48913574]
[-113.49411774 -49.90486526]
[-119.62145233 -63.48076248]
[-131.99641418 -71.95780945]
[-144.37136841 -80.43485260]
[-139.98623657 -66.09014893]
[-143.94651794 -51.62238693]
[-155.02609253 -41.51086807]
[-169.79467773 -38.88617325]
[-183.67982483 -44.56092834]
[-192.38259888 -56.77819443]
[-193.20860291 -71.75543213]
[-185.90206909 -84.85561371]
[-172.72515869 -92.02283478]
[-157.75804138 -91.03827667]
[-168.84317017 -101.14371490]
[-179.92829895 -111.24914551]
[-191.01344299 -121.35458374]
[-202.09857178 -131.46002197]
[-213.18370056 -141.56544495]
[-224.26884460 -151.67088318]
[-239.38238525 -148.68980408]
[-253.19189453 -155.10469055]
[-260.48980713 -168.26541138]
[-258.66067505 -183.02319336]
[-269.74581909 -193.12863159]
[-280.83093262 -203.23405457]
[-291.91607666 -213.33949280]
[-303.00122070 -223.44493103]
[-314.16381836 -233.46470642]
[-325.40325928 -243.39823914]
[-341.57373047 -246.12741089]
[-347.04107666 -261.58831787]
[-336.18096924 -273.87612915]
[-320.16537476 -270.35018921]
[-315.46972656 -254.63768005]
[-304.23028564 -244.70414734]
[-297.13259888 -242.62893677]
[-292.89578247 -234.53005981]
[-281.81063843 -224.42463684]
[-270.72552490 -214.31919861]
[-259.64038086 -204.21376038]
[-248.55523682 -194.10832214]
[-234.02919006 -197.29133606]
[-220.25123596 -191.23887634]
[-212.58953857 -178.08015442]
[-214.16340637 -162.75602722]
[-203.07826233 -152.65058899]
[-191.99313354 -142.54515076]
[-180.90800476 -132.43971252]
[-169.82286072 -122.33428192]
[-158.73773193 -112.22884369]
[-147.65260315 -102.12341309]
[-135.89433289 -92.80981445]
[-123.51937103 -84.33277130]
[-111.14440918 -75.85572815]
[-96.27180481 -75.04633331]
[-89.25933075 -60.86410141]
[-76.88436890 -52.38705444]
[-64.50940704 -43.91000748]
[-52.13444519 -35.43296051]
[-39.75948334 -26.95591545]
[-27.81166649 -28.86926460]
[-17.43139648 -21.90341377]
[-14.49004650 -9.34135151]
[-2.24709320 -0.67474365]
[12.61127663 0.36358044]
[19.40452576 14.65211964]
[31.64747810 23.31872749]
[46.50584793 24.35705185]
[53.29909515 38.64559174]
[65.54205322 47.31219864]
[77.78500366 55.97880554]
[90.02795410 64.64541626]
[104.99195099 63.60674667]
[115.92015839 53.33180618]
[126.84835815 43.05686569]
[123.44651031 28.14463234]
[127.93593597 13.62768078]
[139.01525879 3.37513065]
[153.64099121 0.06694472]
[167.86306763 4.49391413]
[178.79127502 -5.78102636]
[189.71948242 -16.05596733]
[200.64767456 -26.33090591]
[204.85722351 -42.18056870]
[220.75665283 -46.19804382]
[231.99000549 -34.25049591]
[227.00135803 -18.62854195]
[210.92262268 -15.40270424]
[199.99441528 -5.12776423]
[189.06620789 5.14717579]
[178.13801575 15.42211628]
[181.68106079 29.88974953]
[177.47877502 44.28408051]
[166.56361389 54.71124268]
[151.79782104 58.29847336]
[137.12329102 53.98506927]
[126.19509888 64.26000977]
[115.26689148 74.53495026]
[129.06787109 84.80783844]
[135.82435608 102.42291260]
[150.56893921 105.17915344]
[165.31353760 107.93539429]
[180.05813599 110.69164276]
[194.80273438 113.44788361]
[209.54733276 116.20412445]
[224.53425598 111.13434601]
[235.62309265 121.07852936]
[250.36769104 123.83477020]
[265.11227417 126.59101868]
[279.85687256 129.34725952]
[294.60147095 132.10350037]
[305.10983276 120.80845642]
[320.06222534 117.00985718]
[334.68740845 121.91980743]
[344.31854248 133.97157288]
[345.88235474 149.31947327]
[338.87985229 163.06605530]
[325.54547119 170.82481384]
[310.13421631 170.11999512]
[297.56375122 161.17646790]
[291.84524536 146.84809875]
[277.10064697 144.09185791]
[262.35604858 141.33561707]
[247.61145020 138.57937622]
[232.86685181 135.82312012]
[218.93455505 141.09005737]
[206.79109192 130.94871521]
[192.04649353 128.19247437]
[177.30189514 125.43623352]
[162.55729675 122.67999268]
[147.81269836 119.92375183]
[133.06809998 117.16751099]
[127.22500610 121.86943817]
[141.21205139 127.28816223]
[143.51271057 142.11067200]
[131.82629395 151.51428223]
[117.83937073 146.09524536]
[115.53879547 131.27330017]
[109.69568634 135.97521973]
[109.23376465 150.96810913]
[122.74337769 161.14141846]
[127.48217010 177.20246887]
[121.77319336 192.76792908]
[108.05143738 201.77388000]
[107.82044983 216.77210999]
[107.58945465 231.77032471]
[107.35846710 246.76853943]
[107.24296570 261.76809692]
[107.24296570 276.76809692]
[107.24296570 291.76809692]
[110.37378693 300.35531616]
[107.12569427 306.99865723]
[106.89469910 321.99685669]
[106.66371155 336.99508667]
[118.90615082 346.34542847]
[123.24465179 360.94100952]
[118.21632385 375.12478638]
[105.94705963 383.52737427]
[105.71607208 398.52557373]
[105.48507690 413.52380371]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 203]
[3 202]
[4 201]
[8 197]
[9 196]
[10 195]
[11 193]
[12 192]
[13 191]
[15 190]
[16 189]
[17 188]
[18 187]
[23 183]
[24 182]
[27 115]
[28 114]
[29 113]
[30 112]
[32 110]
[33 109]
[35 107]
[36 106]
[38 103]
[39 102]
[40 101]
[41 100]
[42 99]
[44 97]
[45 96]
[46 95]
[56 94]
[57 93]
[58 92]
[59 91]
[60 90]
[61 89]
[62 88]
[66 84]
[67 83]
[68 82]
[69 81]
[70 80]
[71 78]
[72 77]
[116 141]
[117 140]
[118 139]
[123 134]
[124 133]
[125 132]
[126 131]
[143 175]
[144 174]
[145 173]
[146 172]
[147 171]
[148 170]
[150 168]
[151 167]
[152 166]
[153 165]
[154 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
