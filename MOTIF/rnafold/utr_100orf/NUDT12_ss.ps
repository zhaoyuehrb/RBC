%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:54:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGGAAGUCGGGAAGACUGCAUCCGGCUCCAGGAAAAGCGAGUGGGAUAUCCCAAUCUUUGGACUGCAUCCUGGUUGCCUCUACUGUGGUCACCUUUGGGAAGAAAUGUCUUCUGUAAAAAGAAGUCUGAAGCAAGAAAUAGUUACUCAGUUUCACUGUUCAGCUGCUGAAGGAGAUAUUGCCAAGUUAACAGGAAUACUCAGUC\
) } def
/len { sequence length } bind def

/coor [
[113.43576050 130.21742249]
[100.29033661 134.29959106]
[86.11563110 132.70681763]
[80.11225891 146.45306396]
[74.10888672 160.19932556]
[68.42150879 174.07929993]
[63.05311203 188.08573914]
[57.68471146 202.09217834]
[52.31631088 216.09861755]
[57.50950623 231.27789307]
[48.75865936 244.72415161]
[32.77667236 246.12260437]
[21.82355690 234.40045166]
[24.30160904 218.54992676]
[38.30987549 210.73020935]
[43.67827606 196.72377014]
[49.04667664 182.71734619]
[54.41507339 168.71090698]
[53.31820679 165.35598755]
[53.79425812 161.30262756]
[56.15398407 157.29701233]
[60.36263275 154.19595337]
[66.36600494 140.44969177]
[72.36937714 126.70344543]
[64.25101471 114.09026337]
[49.25276184 113.86151886]
[34.25450516 113.63276672]
[18.38357735 122.96701050]
[3.68303275 113.38567352]
[-11.31696701 113.38567352]
[-26.31696701 113.38567352]
[-41.31696701 113.38567352]
[-56.31696701 113.38567352]
[-71.31697083 113.38567352]
[-78.55438995 121.51196289]
[-88.85783386 124.25497437]
[-98.76104736 120.94189453]
[-105.06843567 112.89649200]
[-120.06145477 112.43904877]
[-135.05447388 112.89649200]
[-149.99172974 114.26712036]
[-163.02717590 123.23304749]
[-176.40820312 116.69107056]
[-191.34544373 118.06169128]
[-206.28269958 119.43231964]
[-221.21994019 120.80294800]
[-234.29385376 130.70269775]
[-249.29702759 124.08177948]
[-250.79550171 107.75123596]
[-237.24777222 98.51052856]
[-222.59056091 105.86569977]
[-207.65332031 104.49507141]
[-192.71606445 103.12444305]
[-177.77882385 101.75382233]
[-165.81178284 92.88593292]
[-151.36235046 99.32987213]
[-136.42510986 97.95924377]
[-148.55171204 89.13056946]
[-153.28503418 74.89695740]
[-148.86064148 60.56431198]
[-136.92782593 51.47542953]
[-121.93479156 51.01839066]
[-109.47052002 59.36356735]
[-104.18134308 73.40011597]
[-108.03891754 87.89559937]
[-119.60401154 97.44602966]
[-104.61099243 97.90347290]
[-88.29767609 87.52683258]
[-71.31697083 98.38567352]
[-56.31696701 98.38567352]
[-41.31696701 98.38567352]
[-26.31696701 98.38567352]
[-11.31696701 98.38567352]
[3.68303275 98.38567352]
[12.45770645 90.05551910]
[24.95700455 89.93508911]
[34.48325348 98.63451385]
[49.48151016 98.86325836]
[64.47976685 99.09201050]
[73.06565094 79.26187134]
[90.90459442 68.84626007]
[110.50014496 70.92221069]
[124.35018158 83.56639099]
[138.51382446 78.62763214]
[152.67745972 73.68886566]
[166.84109497 68.75010681]
[173.91728210 62.96744156]
[181.25854492 63.84582520]
[195.49586487 59.12363052]
[209.73316956 54.40143967]
[217.29034424 38.62669754]
[233.59649658 33.30115509]
[248.41241455 41.25524521]
[262.57604980 36.31648636]
[276.73968506 31.37772560]
[290.86526489 26.33111000]
[304.95193481 21.17692947]
[319.03860474 16.02275085]
[333.12527466 10.86857128]
[334.58703613 -5.33441639]
[342.93774414 -19.22863197]
[356.46255493 -28.05928040]
[372.42672729 -30.10138321]
[387.62857056 -24.99653816]
[399.04156494 -13.81458569]
[413.04800415 -19.18298531]
[427.05444336 -24.55138588]
[441.06088257 -29.91978455]
[455.06732178 -35.28818512]
[469.07376099 -40.65658569]
[483.08016968 -46.02498627]
[497.08660889 -51.39338303]
[511.09304810 -56.76178360]
[525.09948730 -62.13018417]
[526.31817627 -71.76435852]
[530.93640137 -80.24100494]
[538.28179932 -86.41443634]
[547.31701660 -89.46785736]
[556.78576660 -89.02128601]
[565.38775635 -85.17829132]
[571.95697021 -78.50597382]
[586.26464844 -83.01050568]
[597.10430908 -94.53489685]
[611.56768799 -90.97674561]
[625.87536621 -95.48126984]
[633.12457275 -101.04544830]
[640.43566895 -99.94359589]
[654.81036377 -104.22940826]
[669.18505859 -108.51522064]
[683.55975342 -112.80103302]
[697.93444824 -117.08684540]
[701.57836914 -131.94177246]
[712.09912109 -142.90586853]
[726.59887695 -147.10391235]
[741.15570068 -143.50466919]
[751.88421631 -133.17196655]
[766.25891113 -137.45777893]
[780.63360596 -141.74359131]
[795.00830078 -146.02940369]
[809.38299561 -150.31521606]
[813.56890869 -165.16383362]
[825.13317871 -175.37510681]
[840.38580322 -177.69064331]
[854.45965576 -171.37155151]
[862.86376953 -158.43424988]
[862.91650391 -143.00698853]
[854.60101318 -130.01252747]
[840.57073975 -123.59735870]
[825.30267334 -125.80855560]
[813.66876221 -135.94052124]
[799.29406738 -131.65470886]
[784.91937256 -127.36888885]
[770.54467773 -123.08307648]
[756.16998291 -118.79726410]
[752.85156250 -104.27646637]
[742.64251709 -93.29326630]
[728.21124268 -88.86553955]
[713.40411377 -92.27813721]
[702.22027588 -102.71215057]
[687.84558105 -98.42633820]
[673.47088623 -94.14052582]
[659.09619141 -89.85471344]
[644.72149658 -85.56890106]
[630.37988281 -81.17360687]
[616.07220459 -76.66907501]
[606.25592041 -65.46687317]
[590.76916504 -68.70284271]
[576.46148682 -64.19831085]
[568.57934570 -45.34281540]
[549.07135010 -38.32954025]
[530.46789551 -48.12374878]
[516.46148682 -42.75534821]
[502.45501709 -37.38694763]
[488.44857788 -32.01854706]
[474.44213867 -26.65014839]
[460.43569946 -21.28174782]
[446.42926025 -15.91334820]
[432.42282104 -10.54494858]
[418.41641235 -5.17654848]
[404.40997314 0.19185111]
[403.94375610 14.05936146]
[398.20852661 26.74148750]
[388.04031372 36.30937576]
[374.95208740 41.29403687]
[360.90866089 40.91183090]
[348.03176880 35.18746567]
[338.27944946 24.95524788]
[324.19277954 30.10942650]
[310.10610962 35.26360703]
[296.01943970 40.41778564]
[290.81600952 45.67041397]
[281.67843628 45.54136276]
[267.51480103 50.48012543]
[253.35116577 55.41888428]
[249.42515564 67.69385529]
[238.98951721 75.58310699]
[225.72016907 76.02673340]
[214.45535278 68.63874817]
[200.21804810 73.36093903]
[185.98074341 78.08312988]
[171.77986145 82.91374969]
[157.61622620 87.85250854]
[143.45257568 92.79126740]
[129.28894043 97.73002625]
[128.93066406 109.99268341]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 24]
[4 23]
[5 22]
[6 18]
[7 17]
[8 16]
[9 15]
[25 79]
[26 78]
[27 77]
[29 74]
[30 73]
[31 72]
[32 71]
[33 70]
[34 69]
[38 67]
[39 66]
[40 57]
[41 56]
[43 54]
[44 53]
[45 52]
[46 51]
[83 204]
[84 203]
[85 202]
[86 201]
[88 200]
[89 199]
[90 198]
[93 194]
[94 193]
[95 192]
[96 190]
[97 189]
[98 188]
[99 187]
[105 180]
[106 179]
[107 178]
[108 177]
[109 176]
[110 175]
[111 174]
[112 173]
[113 172]
[114 171]
[121 168]
[122 167]
[124 165]
[125 164]
[127 163]
[128 162]
[129 161]
[130 160]
[131 159]
[136 154]
[137 153]
[138 152]
[139 151]
[140 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
