%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:04:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUACACGCUCGGCGCUCGCGGCGGGCGGAAGUGAGGUGCCGGCGGCUGGCGGCCGCGGAGUCUUCGGCGAGACCUACCGGGCCCUGUCUGUGCCGGCCGUGAGCUGCGGCAGGACGGCUGGAGAUUACUUCUCUAACAGGAUCACCAGUUUGCUCCACAAAGCACAAUGUCUCGAUCACGACAACCCCCCCUUGUGACCGGCAUCUCUCCAAAUGAAGGGAUACCAUGGACGAAGGUCACAAUCAGGGGAGAAAA\
UCUGGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[-89.99859619 118.10613251]
[-100.31996155 123.33948517]
[-112.08809662 124.65950775]
[-123.83567047 121.71246338]
[-134.03175354 114.68855286]
[-141.28109741 104.32063293]
[-144.51368713 91.81087494]
[-159.23187256 94.70476532]
[-167.01684570 99.41600800]
[-174.14022827 97.54504395]
[-188.89144897 100.26556396]
[-197.86401367 112.99861908]
[-212.86262512 115.54747772]
[-224.94635010 106.91503906]
[-239.69758606 109.63555145]
[-254.44880676 112.35607147]
[-269.20004272 115.07658386]
[-283.95126343 117.79710388]
[-298.70251465 120.51761627]
[-313.45373535 123.23813629]
[-328.20495605 125.95864868]
[-342.95620728 128.67916870]
[-355.12420654 138.79106140]
[-369.04370117 133.49038696]
[-383.79492188 136.21090698]
[-398.54614258 138.93142700]
[-413.29736328 141.65194702]
[-421.22439575 151.79837036]
[-433.54220581 153.77554321]
[-443.58026123 147.06384277]
[-458.36248779 149.61061096]
[-467.48425293 162.23721313]
[-482.51181030 164.60942078]
[-494.49313354 155.83540344]
[-509.27536011 158.38217163]
[-524.05755615 160.92893982]
[-531.95123291 165.45568848]
[-539.02862549 163.41763306]
[-553.83978271 165.79029846]
[-568.65093994 168.16294861]
[-576.60247803 184.18489075]
[-597.99438477 188.36732483]
[-611.70477295 194.45223999]
[-625.41510010 200.53717041]
[-639.12542725 206.62208557]
[-652.83581543 212.70700073]
[-666.54614258 218.79193115]
[-678.57073975 230.74374390]
[-693.38421631 222.49769592]
[-689.56115723 205.98040771]
[-672.63110352 205.08157349]
[-658.92071533 198.99665833]
[-645.21038818 192.91172791]
[-631.50000000 186.82681274]
[-617.78967285 180.74189758]
[-604.07934570 174.65696716]
[-607.05975342 159.95605469]
[-622.05743408 159.69131470]
[-639.26818848 170.22903442]
[-655.36187744 159.47561646]
[-670.36163330 159.56385803]
[-685.36132812 159.65211487]
[-700.36108398 159.74035645]
[-715.36083984 159.82859802]
[-729.23345947 168.57406616]
[-743.61547852 160.69441223]
[-743.71197510 144.29554749]
[-729.42364502 136.24722290]
[-715.44909668 144.82885742]
[-700.44934082 144.74061584]
[-685.44958496 144.65237427]
[-670.44989014 144.56411743]
[-655.45013428 144.47587585]
[-648.98114014 136.61997986]
[-639.05230713 133.53941345]
[-628.85137939 136.47477722]
[-621.79266357 144.69366455]
[-606.79504395 144.95838928]
[-584.52124023 140.52790833]
[-571.02362061 153.35179138]
[-556.21246338 150.97912598]
[-541.40124512 148.60647583]
[-526.60430908 146.14671326]
[-511.82211304 143.59994507]
[-497.03988647 141.05317688]
[-488.68545532 128.77560425]
[-473.73046875 125.98224640]
[-460.90924072 134.82838440]
[-446.12704468 132.28163147]
[-433.24264526 120.34566498]
[-416.01788330 126.90071106]
[-401.26666260 124.18019104]
[-386.51544189 121.45967865]
[-371.76419067 118.73915863]
[-360.65130615 108.82186890]
[-345.67669678 113.92794037]
[-330.92547607 111.20742035]
[-316.17425537 108.48690796]
[-301.42300415 105.76638794]
[-286.67178345 103.04587555]
[-271.92056274 100.32535553]
[-257.16934204 97.60484314]
[-242.41809082 94.88432312]
[-227.66687012 92.16381073]
[-219.45747375 79.78878021]
[-204.53637695 76.81964874]
[-191.61196899 85.51433563]
[-176.86073303 82.79381561]
[-162.12576294 79.98656464]
[-147.40757751 77.09267426]
[-161.71141052 72.57601929]
[-176.53819275 70.30301666]
[-186.67266846 59.24443436]
[-187.64648438 44.27607727]
[-179.03027344 31.99760437]
[-164.62298584 27.82268524]
[-150.77690125 33.59206772]
[-143.59715271 46.76009369]
[-134.48403931 58.67441559]
[-136.76951599 43.84955215]
[-139.05500793 29.02468872]
[-141.34048462 14.19982529]
[-143.62597656 -0.62503731]
[-145.91145325 -15.44989967]
[-157.94960022 -26.05474663]
[-157.02017212 -42.07085419]
[-143.83615112 -51.21203613]
[-128.51119995 -46.46596146]
[-122.80129242 -31.47340965]
[-131.08659363 -17.73538589]
[-128.80111694 -2.91052222]
[-126.51562500 11.91434097]
[-124.23014069 26.73920441]
[-121.94465637 41.56406784]
[-119.65917206 56.38892746]
[-91.20269775 61.76865005]
[-77.74784088 84.57516479]
[-62.75432587 85.01634216]
[-47.76081467 85.45751190]
[-38.76716995 77.39997864]
[-26.29368973 77.62403870]
[-17.01768494 86.55394745]
[-2.03040361 87.17150879]
[4.75878906 84.31671143]
[13.12928391 87.88552094]
[28.10826302 88.67937469]
[43.08724213 89.47322845]
[58.06621933 90.26708221]
[65.73239136 69.12445068]
[83.95795441 53.48596191]
[109.00957489 48.50241089]
[117.03803253 35.83182144]
[125.06649017 23.16123009]
[133.09495544 10.49064064]
[129.39233398 -4.87380600]
[137.70965576 -18.31246948]
[153.11239624 -21.85243034]
[166.46237183 -13.39349174]
[169.83929443 2.04580784]
[161.23968506 15.30560589]
[145.76553345 18.51910019]
[137.73707581 31.18968964]
[129.70861816 43.86027908]
[121.68016052 56.53086853]
[127.03005981 61.78716278]
[141.48403931 57.77687073]
[137.72984314 72.29975128]
[143.07974243 77.55605316]
[155.60665894 69.30522156]
[168.13359070 61.05439758]
[180.66052246 52.80357361]
[181.23777771 37.29724121]
[190.84562683 25.11247063]
[205.78968811 20.93455887]
[220.32363892 26.36999512]
[228.85887146 39.32874680]
[228.11344910 54.82790756]
[218.37396240 66.90773010]
[203.38546753 70.92328644]
[188.91134644 65.33049774]
[176.38441467 73.58132935]
[163.85748291 81.83215332]
[151.33056641 90.08297729]
[150.17236328 94.87434387]
[148.58329773 99.37967682]
[146.60510254 103.56159973]
[144.28268433 107.38791656]
[141.66345215 110.83181763]
[155.30125427 117.07763672]
[168.93907166 123.32345581]
[182.57687378 129.56927490]
[196.21467590 135.81509399]
[209.96058655 141.81924438]
[223.81033325 147.57987976]
[237.66006470 153.34049988]
[251.50979614 159.10113525]
[265.35952759 164.86175537]
[279.20925903 170.62239075]
[293.05899048 176.38301086]
[307.19421387 181.40258789]
[321.57525635 185.66705322]
[337.00567627 182.17237854]
[347.00805664 193.20874023]
[361.38909912 197.47319031]
[375.77014160 201.73765564]
[390.15118408 206.00212097]
[404.53222656 210.26657104]
[418.91326904 214.53103638]
[431.14416504 204.98194885]
[446.65310669 204.47937012]
[459.47656250 213.21653748]
[464.68371582 227.83383179]
[460.27224731 242.71061707]
[447.93847656 252.12644958]
[432.42501831 252.46076965]
[419.69708252 243.58500671]
[414.64880371 228.91207886]
[400.26776123 224.64761353]
[385.88671875 220.38316345]
[371.50567627 216.11869812]
[357.12463379 211.85423279]
[342.74359131 207.58978271]
[328.34182739 211.38948059]
[317.31079102 200.04809570]
[302.92974854 195.78363037]
[311.80447388 207.87657166]
[312.81665039 222.84237671]
[305.65103149 236.02017212]
[292.53927612 243.30589294]
[277.56484985 242.43051147]
[265.39132690 233.66667175]
[259.80996704 219.74371338]
[262.55902100 204.99777222]
[272.78234863 194.02127075]
[287.29837036 190.23274231]
[273.44863892 184.47212219]
[259.59890747 178.71148682]
[245.74917603 172.95086670]
[231.89942932 167.19023132]
[218.04969788 161.42961121]
[204.19996643 155.66897583]
[200.84529114 156.64549255]
[196.85446167 156.06649780]
[192.95431519 153.65196228]
[189.96885681 149.45289612]
[176.33105469 143.20707703]
[162.69325256 136.96125793]
[149.05545044 130.71543884]
[135.41763306 124.46962738]
[126.54166412 133.89265442]
[115.26561737 140.25086975]
[102.60914612 142.96934509]
[89.71674347 141.80223083]
[77.75421906 136.85507202]
[67.80330658 128.57524109]
[60.76383972 117.71144867]
[57.27236938 105.24605560]
[42.29338837 104.45220947]
[27.31441116 103.65835571]
[12.33543205 102.86450195]
[-2.64795780 102.15879059]
[-17.63524055 101.54123688]
[-33.76610565 110.45502472]
[-48.20198822 100.45101929]
[-63.19549942 100.00984955]
[-78.18901062 99.56867981]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 110]
[8 109]
[10 108]
[11 107]
[14 104]
[15 103]
[16 102]
[17 101]
[18 100]
[19 99]
[20 98]
[21 97]
[22 96]
[24 94]
[25 93]
[26 92]
[27 91]
[30 89]
[31 88]
[34 85]
[35 84]
[36 83]
[38 82]
[39 81]
[40 80]
[42 56]
[43 55]
[44 54]
[45 53]
[46 52]
[47 51]
[57 78]
[58 77]
[60 73]
[61 72]
[62 71]
[63 70]
[64 69]
[119 135]
[120 134]
[121 133]
[122 132]
[123 131]
[124 130]
[137 266]
[138 265]
[139 264]
[142 262]
[143 261]
[145 260]
[146 259]
[147 258]
[148 257]
[151 164]
[152 163]
[153 162]
[154 161]
[168 183]
[169 182]
[170 181]
[171 180]
[188 249]
[189 248]
[190 247]
[191 246]
[192 245]
[193 241]
[194 240]
[195 239]
[196 238]
[197 237]
[198 236]
[199 235]
[200 225]
[201 224]
[203 222]
[204 221]
[205 220]
[206 219]
[207 218]
[208 217]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
