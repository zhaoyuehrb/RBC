%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:26:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAAACCCUGGCGCGCUCGCGGGCCGGCACUCUUCUGGUCCCCACAGACUCAGAGAGAACCCACCAUGGUGCUGUCUCCUGCCGACAAGACCAACGUCAAGGCCGCCUGGGGUAAGGUCGGCGCGCACGCUGGCGAGUAUGGUGCGGAGGCCCUGGAGAGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[-26.49703598 502.57794189]
[-34.75684738 515.09893799]
[-47.07624054 523.65655518]
[-61.69278717 527.02648926]
[-76.51543427 524.72662354]
[-89.42362976 517.08605957]
[-98.57070923 505.19778442]
[-102.64808655 490.76260376]
[-101.07192230 475.84387207]
[-110.68969727 487.35467529]
[-120.30747223 498.86547852]
[-129.92524719 510.37625122]
[-139.54302979 521.88708496]
[-142.45399475 537.43817139]
[-156.55203247 542.24383545]
[-166.16979980 553.75463867]
[-168.44912720 569.99462891]
[-183.75234985 575.88897705]
[-196.33683777 565.37408447]
[-193.25672913 549.26678467]
[-177.68058777 544.13690186]
[-168.06282043 532.62609863]
[-165.83978271 517.89831543]
[-151.05381775 512.26928711]
[-141.43605042 500.75848389]
[-131.81826782 489.24768066]
[-122.20049286 477.73690796]
[-112.58271790 466.22610474]
[-112.63440704 459.94860840]
[-108.99280548 453.90600586]
[-102.05328369 450.26535034]
[-95.25600433 436.89385986]
[-88.45871735 423.52236938]
[-81.66143799 410.15087891]
[-74.86415100 396.77938843]
[-68.06687164 383.40786743]
[-69.96284485 365.97998047]
[-54.49158859 356.03051758]
[-47.94703674 342.53350830]
[-41.40248489 329.03652954]
[-34.85793304 315.53952026]
[-28.44062042 301.98156738]
[-22.15111542 288.36386108]
[-15.98997593 274.68759155]
[-9.95774460 260.95397949]
[-3.92551374 247.22035217]
[-10.69906998 231.84805298]
[-4.14918804 216.01356506]
[12.13275719 209.67315674]
[17.90558052 195.82850647]
[23.67840195 181.98385620]
[29.45122528 168.13919067]
[27.34189796 153.28823853]
[17.94235229 141.59857178]
[8.54280663 129.90888977]
[-6.13465309 124.00272369]
[-8.08025551 109.23574066]
[-17.47980118 97.54606628]
[-32.15726089 91.63990021]
[-34.10286331 76.87291718]
[-43.50241089 65.18323517]
[-52.90195465 53.49356079]
[-68.63895416 52.03674698]
[-78.67216492 39.82567215]
[-77.04904938 24.10495377]
[-64.73258209 14.20141029]
[-49.02989960 15.99064159]
[-39.25712967 28.41112709]
[-41.21228027 44.09401321]
[-31.81273270 55.78369141]
[-22.41318703 67.47336578]
[-8.40804577 72.54340363]
[-5.79012489 88.14651489]
[3.60942078 99.83619690]
[17.61456108 104.90623474]
[20.23248291 120.50934601]
[29.63202858 132.19902039]
[39.03157425 143.88870239]
[39.51862717 128.89660645]
[53.18413544 122.71163177]
[64.76907349 132.23995972]
[61.33677673 146.84301758]
[73.45542145 138.00343323]
[85.57406616 129.16383362]
[97.69271851 120.32424164]
[85.02940369 121.02919006]
[71.88355255 113.46081543]
[63.53238678 97.84152222]
[64.61420441 77.58026886]
[77.32988739 58.54456711]
[83.36212158 44.81095123]
[89.39434814 31.07733727]
[87.06152344 14.84496307]
[100.11825562 4.92257166]
[115.13289642 11.51746750]
[116.65966797 27.84538841]
[103.12796783 37.10956955]
[97.09573364 50.84318542]
[91.06350708 64.57679749]
[96.49003601 69.75393677]
[110.88354492 65.53175354]
[107.34309387 80.10821533]
[112.76962280 85.28535461]
[126.20446014 78.61414337]
[139.63929749 71.94293213]
[153.07414246 65.27172089]
[166.44563293 58.47443771]
[179.75260925 51.55168152]
[193.05958557 44.62892914]
[197.57635498 29.48381996]
[211.51893616 22.04204941]
[226.61544800 26.71868896]
[233.90939331 40.73917007]
[229.07339478 55.78539276]
[214.97659302 62.93069839]
[199.98233032 57.93590164]
[186.67536926 64.85865784]
[173.36839294 71.78141022]
[168.86647034 77.68340302]
[159.74536133 78.70655823]
[146.31051636 85.37776947]
[132.87567139 92.04898071]
[119.44083405 98.72019958]
[122.24600983 113.45555878]
[137.19229126 114.72385406]
[151.79878235 107.26847076]
[165.40948486 116.41617584]
[164.02290344 132.75659180]
[149.06541443 139.48010254]
[135.92401123 129.67013550]
[120.97772217 128.40184021]
[106.53231049 132.44288635]
[94.41365814 141.28248596]
[82.29501343 150.12207031]
[70.17636871 158.96166992]
[43.29588318 173.91201782]
[37.52305984 187.75666809]
[31.75023651 201.60133362]
[25.97741318 215.44598389]
[32.51036453 227.25389099]
[31.05717850 240.47407532]
[22.37345123 250.28900146]
[9.80810165 253.25259399]
[3.77587056 266.98620605]
[-2.25636029 280.71981812]
[-2.84958148 289.87893677]
[-8.53340149 294.65335083]
[-14.82290554 308.27108765]
[-15.58831310 317.41741943]
[-21.36093903 322.08407593]
[-27.90548897 335.58108521]
[-34.45004272 349.07806396]
[-40.99459457 362.57507324]
[-37.51040268 375.02279663]
[-43.27265930 386.14334106]
[-54.69537354 390.20516968]
[-61.49265671 403.57666016]
[-68.28993988 416.94815063]
[-75.08722687 430.31964111]
[-81.88450623 443.69116211]
[-88.68179321 457.06265259]
[-75.58870697 449.74340820]
[-60.71374893 447.81060791]
[-46.18495178 451.54077148]
[-34.08081818 460.40023804]
[-26.13298035 473.12155151]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 28]
[10 27]
[11 26]
[12 25]
[13 24]
[15 22]
[16 21]
[31 161]
[32 160]
[33 159]
[34 158]
[35 157]
[36 156]
[38 153]
[39 152]
[40 151]
[41 150]
[42 148]
[43 147]
[44 145]
[45 144]
[46 143]
[49 139]
[50 138]
[51 137]
[52 136]
[53 78]
[54 77]
[55 76]
[57 74]
[58 73]
[60 71]
[61 70]
[62 69]
[82 135]
[83 134]
[84 133]
[85 132]
[90 99]
[91 98]
[92 97]
[103 123]
[104 122]
[105 121]
[106 120]
[107 118]
[108 117]
[109 116]
[124 131]
[125 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
