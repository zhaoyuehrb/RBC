%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:19:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCACCAAGGAUGGAGAUGCUCCAGGGGCUGCUGCUGUUGCUGCUGCUGAGCAUGGGCGGGGCAUGGGCAUCCAGGGAGCCGCUUCGGCCAUGGUGCCACCCCAUCAAUG\
) } def
/len { sequence length } bind def

/coor [
[206.99456787 395.48544312]
[201.55245972 381.50747681]
[196.11033630 367.52951050]
[190.66822815 353.55154419]
[185.22610474 339.57360840]
[179.78399658 325.59564209]
[167.95632935 316.54269409]
[170.15963745 300.87567139]
[164.71751404 286.89770508]
[152.88984680 277.84475708]
[155.09315491 262.17773438]
[149.65104675 248.19976807]
[144.20892334 234.22181702]
[138.76681519 220.24385071]
[133.32469177 206.26588440]
[119.62824249 200.52632141]
[113.91004181 186.42820740]
[120.02309418 172.10101318]
[114.58098602 158.12306213]
[109.13887024 144.14509583]
[103.69675446 130.16712952]
[98.25463867 116.18917847]
[84.91237640 106.12366486]
[87.46549988 89.60663605]
[81.62644958 75.78977966]
[75.78739929 61.97292709]
[69.75164032 48.24085999]
[63.52041626 34.59638214]
[57.28919220 20.95190048]
[42.75429153 15.35061455]
[36.62931442 1.42440569]
[42.05885696 -12.39788246]
[35.82762909 -26.04236221]
[29.59640503 -39.68684387]
[23.36518097 -53.33132172]
[11.49428749 -58.61981201]
[6.62345505 -70.23243713]
[10.88872147 -81.65182495]
[5.04967022 -95.46868134]
[-0.78938150 -109.28553772]
[-6.62843323 -123.10238647]
[-20.99745560 -129.11645508]
[-26.72225952 -143.21188354]
[-20.90021896 -156.87348938]
[-26.73927116 -170.69033813]
[-32.57832336 -184.50720215]
[-44.31344986 -196.74333191]
[-35.80410767 -211.40715027]
[-19.35774231 -207.28970337]
[-18.76146698 -190.34625244]
[-12.92241669 -176.52938843]
[-7.08336449 -162.71253967]
[6.77140474 -157.36642456]
[12.88985920 -143.43734741]
[7.18842173 -128.94143677]
[13.02747345 -115.12458801]
[18.86652565 -101.30773163]
[24.70557594 -87.49087524]
[39.23999023 -77.77111816]
[37.00965881 -59.56254578]
[43.24088669 -45.91806793]
[49.47211075 -32.27358627]
[55.70333481 -18.62910843]
[69.70511627 -13.68080902]
[76.21884155 0.06786779]
[70.93367004 14.72067547]
[77.16489410 28.36515427]
[83.39611816 42.00963593]
[89.12266541 46.85871887]
[89.60424805 56.13387680]
[95.44330597 69.95072937]
[101.28235626 83.76758575]
[111.86557770 88.84905243]
[116.28070068 99.72713470]
[112.23259735 110.74706268]
[117.67471313 124.72502136]
[123.11682892 138.70298767]
[128.55894470 152.68093872]
[134.00105286 166.65890503]
[148.19248962 173.08082581]
[153.51243591 187.33399963]
[147.30265808 200.82377625]
[152.74476624 214.80174255]
[158.18688965 228.77969360]
[163.62899780 242.75765991]
[169.07112122 256.73562622]
[181.28804016 266.78836060]
[178.69548035 281.45559692]
[184.13758850 295.43356323]
[196.35450745 305.48626709]
[193.76196289 320.15353394]
[199.20407104 334.13146973]
[204.64617920 348.10943604]
[210.08830261 362.08740234]
[215.53041077 376.06536865]
[220.97253418 390.04333496]
[236.17068481 390.33392334]
[250.09875488 396.42306519]
[260.63278198 407.38217163]
[266.16644287 421.54013062]
[265.85583496 436.73788452]
[259.74838257 450.65792847]
[248.77542114 461.17752075]
[234.61021423 466.69253540]
[219.41287231 466.36196899]
[205.50088501 460.23620605]
[194.99571228 449.24938965]
[189.49932861 435.07696533]
[189.84989929 419.88006592]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 96]
[2 95]
[3 94]
[4 93]
[5 92]
[6 91]
[8 89]
[9 88]
[11 86]
[12 85]
[13 84]
[14 83]
[15 82]
[18 79]
[19 78]
[20 77]
[21 76]
[22 75]
[24 72]
[25 71]
[26 70]
[27 68]
[28 67]
[29 66]
[32 63]
[33 62]
[34 61]
[35 60]
[38 58]
[39 57]
[40 56]
[41 55]
[44 52]
[45 51]
[46 50]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
