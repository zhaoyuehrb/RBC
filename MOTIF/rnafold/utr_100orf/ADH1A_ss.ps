%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:45:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGCAAAAAAAAUAAAUAAAUACCUAUGCAAUACACCUGCUUUAUGCACUUGAGCAGGGAAGAAAUCCACAAGGACUCACCAGUCUCCUGGUCUGCAGAGAAGACAGAAUCAACAUGAGCACAGCAGGAAAAGUAAUCAAAUGCAAAGCAGCUGUGCUAUGGGAGUUAAAGAAACCCUUUUCCAUUGAGGAGGUGGAGGUUGCACCUCCUAAGG\
) } def
/len { sequence length } bind def

/coor [
[97.38314819 176.17533875]
[104.55883789 189.44035339]
[108.20941925 204.07333374]
[108.10540771 219.15444946]
[104.25334930 233.73567200]
[96.89538574 246.90045166]
[86.49404907 257.82119751]
[73.70316315 265.81146240]
[59.32678986 270.36892700]
[44.26862717 271.20715332]
[29.47525024 268.27340698]
[15.87658310 261.75213623]
[4.32744789 252.05325317]
[-4.44616699 239.78645325]
[-9.89274406 225.72282410]
[-11.66990757 210.74642944]
[-9.66594315 195.79869080]
[-4.00682163 181.81922913]
[4.95171976 169.68681335]
[16.64653969 160.16410828]
[30.34249115 153.84970093]
[45.17863846 151.14053345]
[60.22236252 152.20689392]
[64.96172333 137.97529602]
[69.70108032 123.74369049]
[64.73712921 118.12148285]
[53.75495911 128.33871460]
[42.77278900 138.55595398]
[31.79061699 148.77319336]
[23.30808830 161.14439392]
[8.74432564 157.55319214]
[6.98562813 142.65664673]
[20.31211281 135.77255249]
[31.81115341 126.14072418]
[43.31019211 116.50889587]
[54.80923462 106.87706757]
[49.84528351 101.25485992]
[35.13618469 104.19464874]
[20.42708397 107.13443756]
[5.71798325 110.07422638]
[-8.99111748 113.01401520]
[-23.70021820 115.95380402]
[-29.23970985 130.35234070]
[-41.69775009 139.45182800]
[-57.09902573 140.34866333]
[-70.52903748 132.75668335]
[-77.70233154 119.09844971]
[-76.32991791 103.73224640]
[-66.84974670 91.56138611]
[-52.28689194 86.46954346]
[-37.28831482 90.08150482]
[-26.64000702 101.24470520]
[-11.93090630 98.30491638]
[2.77819419 95.36512756]
[17.48729515 92.42533875]
[32.19639587 89.48554993]
[46.90549469 86.54576111]
[58.43520355 76.95066833]
[63.99780655 63.02021408]
[69.56040955 49.08976364]
[75.12300873 35.15931320]
[80.68561554 21.22886276]
[86.24821472 7.29841232]
[74.18715668 -1.75510097]
[64.88787079 -13.61295414]
[58.97952652 -27.46313095]
[56.85935593 -42.35915375]
[58.66593552 -57.28477097]
[64.27015686 -71.22326660]
[73.28442383 -83.22674561]
[85.08946228 -92.48057556]
[98.87686157 -98.35868835]
[113.70441437 -100.46591187]
[128.56054688 -98.66455078]
[134.12315369 -112.59500122]
[139.68574524 -126.52545166]
[145.24835205 -140.45590210]
[150.81095886 -154.38635254]
[151.08668518 -163.51351929]
[156.55795288 -168.47874451]
[162.32350159 -182.32643127]
[168.08906555 -196.17411804]
[168.08906555 -211.17411804]
[162.32350159 -225.02178955]
[156.55795288 -238.86947632]
[150.69137573 -252.67466736]
[144.72410583 -266.43664551]
[138.65644836 -280.15463257]
[132.48872375 -293.82794189]
[126.32100677 -307.50125122]
[111.88482666 -314.49957275]
[108.49622345 -330.18066406]
[118.75463867 -342.51535034]
[134.79069519 -342.04150391]
[144.30290222 -329.12261963]
[139.99430847 -313.66897583]
[146.16203308 -299.99566650]
[152.32974243 -286.32235718]
[157.94375610 -281.51913452]
[158.48606873 -272.40390015]
[164.45333862 -258.64193726]
[169.99656677 -253.75720215]
[170.40563965 -244.63504028]
[176.17118835 -230.78735352]
[181.93673706 -216.93966675]
[189.20654297 -215.09573364]
[190.78572083 -230.01237488]
[192.36489868 -244.92901611]
[187.00810242 -258.93988037]
[192.33370972 -272.96264648]
[205.64070129 -279.88534546]
[220.18017578 -276.19699097]
[228.57807922 -263.76818848]
[226.57525635 -248.90249634]
[215.18882751 -239.13986206]
[209.46746826 -225.27386475]
[203.74612427 -211.40785217]
[211.01591492 -209.56391907]
[222.68460083 -218.98951721]
[234.35327148 -228.41513062]
[246.02194214 -237.84072876]
[257.69061279 -247.26634216]
[269.35928345 -256.69192505]
[281.02798462 -266.11755371]
[292.69665527 -275.54315186]
[288.27084351 -289.07897949]
[288.72970581 -303.28271484]
[293.99780273 -316.44921875]
[303.42346191 -327.00476074]
[315.85952759 -333.69525146]
[329.80279541 -335.73516846]
[343.57577515 -332.89962769]
[355.52847290 -325.54919434]
[367.33361816 -334.80331421]
[379.13876343 -344.05740356]
[380.79031372 -359.77517700]
[393.12466431 -369.65643311]
[408.82406616 -367.83880615]
[418.57437134 -355.40066528]
[416.59088135 -339.72134399]
[404.05035400 -330.10308838]
[388.39288330 -332.25225830]
[376.58770752 -322.99816895]
[364.78256226 -313.74404907]
[369.27648926 -298.54620361]
[367.58950806 -282.74914551]
[359.95053101 -268.77539062]
[347.50354004 -258.77932739]
[332.13638306 -254.31491089]
[316.19433594 -256.09432983]
[302.12225342 -263.87448120]
[290.45358276 -254.44886780]
[278.78491211 -245.02326965]
[267.11621094 -235.59765625]
[255.44755554 -226.17205811]
[243.77886963 -216.74644470]
[232.11019897 -207.32084656]
[220.44152832 -197.89524841]
[199.49954224 -185.45365906]
[181.93673706 -190.40855408]
[176.17118835 -176.56086731]
[170.40563965 -162.71318054]
[164.74140930 -148.82374573]
[159.17880249 -134.89329529]
[153.61619568 -120.96284485]
[148.05360413 -107.03239441]
[142.49099731 -93.10194397]
[154.50180054 -84.17501068]
[163.79966736 -72.43420410]
[169.74609375 -58.67613602]
[171.93020630 -43.83625412]
[170.19718933 -28.92527962]
[164.65922546 -14.96033001]
[155.68820190 -2.89556336]
[143.89085388 6.44302082]
[130.06762695 12.41413403]
[115.15841675 14.60523319]
[100.17866516 12.86101437]
[94.61606598 26.79146576]
[89.05345917 40.72191620]
[83.49085999 54.65236664]
[77.92825317 68.58281708]
[72.36565399 82.51326752]
[89.82003021 71.07059479]
[109.27598572 72.90991974]
[122.35668182 85.58666992]
[124.45381165 102.34536743]
[116.27169800 115.58590698]
[123.03268433 128.97579956]
[129.79367065 142.36567688]
[136.55467224 155.75556946]
[143.31565857 169.14544678]
[150.07664490 182.53533936]
[156.83763123 195.92521667]
[163.59861755 209.31510925]
[178.86279297 212.71205139]
[188.33122253 225.15724182]
[187.53320312 240.77445984]
[176.84553528 252.18969727]
[161.31462097 254.01306152]
[148.27366638 245.38360596]
[143.88023376 230.37588501]
[150.20874023 216.07609558]
[143.44775391 202.68620300]
[136.68675232 189.29632568]
[129.92576599 175.90643311]
[123.16477966 162.51655579]
[116.40379333 149.12666321]
[109.64279938 135.73678589]
[102.88181305 122.34690094]
[94.71166229 127.10608673]
[83.93267822 128.48304749]
[79.19332123 142.71464539]
[74.45396423 156.94625854]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 214]
[24 213]
[25 212]
[37 57]
[38 56]
[39 55]
[40 54]
[41 53]
[42 52]
[58 183]
[59 182]
[60 181]
[61 180]
[62 179]
[63 178]
[74 167]
[75 166]
[76 165]
[77 164]
[78 163]
[80 162]
[81 161]
[82 160]
[83 105]
[84 104]
[85 103]
[86 101]
[87 100]
[88 98]
[89 97]
[90 96]
[118 158]
[119 157]
[120 156]
[121 155]
[122 154]
[123 153]
[124 152]
[125 151]
[133 144]
[134 143]
[135 142]
[188 210]
[189 209]
[190 208]
[191 207]
[192 206]
[193 205]
[194 204]
[195 203]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
