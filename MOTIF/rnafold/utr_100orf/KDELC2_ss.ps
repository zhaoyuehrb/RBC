%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:17:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUCCGCGGCGCUGCCGGCCCCUCCUCGCCGCCGCGGAGCUGGACCGCAGUUGUGCCCCGCCGACCAUGCGCCGCCUCCCGCGGGCCCUGCUGCUGCAGCUGCGCCUCGCCCUGCUGGUGGCCGCGGGGGCCCCGGAGGUGCUGGUCAGCGCGCCGCGGAGCCUGG\
) } def
/len { sequence length } bind def

/coor [
[105.97241211 284.61508179]
[105.12631989 269.63897705]
[104.13941193 254.67146301]
[103.01175690 239.71391296]
[101.88410950 224.75636292]
[100.75645447 209.79881287]
[99.62880707 194.84124756]
[98.50115204 179.88369751]
[97.37350464 164.92614746]
[96.24584961 149.96859741]
[95.11820221 135.01104736]
[93.99054718 120.05348969]
[87.09568024 117.10209656]
[75.08885956 126.09299469]
[73.30593109 111.19930267]
[66.41105652 108.24790955]
[54.81031036 117.75698853]
[43.20956039 127.26607513]
[31.60881233 136.77516174]
[32.64760971 152.25741577]
[24.35928726 165.37547302]
[9.93087387 171.08515930]
[-5.08961248 167.19097900]
[-14.92648792 155.19033813]
[-15.79727268 139.69770813]
[-7.36713219 126.67034149]
[7.12237215 121.11751556]
[22.09973145 125.17440796]
[33.70047760 115.66532135]
[45.30122757 106.15624237]
[56.90197754 96.64716339]
[54.81361008 89.44377899]
[50.63687134 75.03701782]
[48.54850388 67.83363342]
[33.66050339 66.00403595]
[18.77250099 64.17443848]
[4.13162708 70.17072296]
[-7.55687284 60.93880463]
[-22.44487381 59.10921097]
[-37.33287430 57.27961349]
[-52.22087479 55.45001602]
[-67.10887909 53.62042236]
[-80.58625031 62.32329559]
[-95.74691772 57.07604218]
[-100.96091461 41.90390396]
[-92.22850800 28.44564629]
[-76.24845886 27.02529526]
[-65.27928162 38.73242188]
[-50.39128113 40.56201553]
[-35.50328064 42.39161301]
[-20.61527824 44.22121048]
[-5.72727680 46.05080414]
[7.84870815 39.92366028]
[20.60209846 49.28643799]
[35.49009705 51.11603546]
[50.37810135 52.94563293]
[76.37411499 52.47586823]
[95.82630157 62.47024918]
[105.33283997 78.19320679]
[103.97373199 94.07075500]
[114.82679749 83.71647644]
[119.47078705 68.59219360]
[134.02038574 65.40497589]
[144.87344360 55.05069351]
[155.72651672 44.69641495]
[166.57957458 34.34213638]
[177.43263245 23.98785591]
[181.50509644 15.76249504]
[188.58859253 13.54326534]
[199.63449097 3.39497352]
[210.68040466 -6.75331831]
[221.72631836 -16.90161133]
[232.77223206 -27.04990196]
[231.55760193 -35.40518188]
[233.74479675 -43.46242142]
[238.89987183 -49.90934372]
[246.11206055 -53.72702408]
[254.15393066 -54.35060883]
[261.69015503 -51.75178909]
[273.46771240 -61.04096603]
[285.24530029 -70.33014679]
[290.07229614 -78.13665771]
[297.33291626 -79.68078613]
[309.28314209 -88.74678040]
[321.23336792 -97.81276703]
[333.18356323 -106.87876129]
[345.13378906 -115.94474792]
[357.08401489 -125.01073456]
[369.03424072 -134.07672119]
[380.89868164 -143.25471497]
[392.67623901 -152.54389954]
[398.72018433 -167.16514587]
[413.50482178 -168.97177124]
[425.28240967 -178.26095581]
[437.05996704 -187.55012512]
[448.83752441 -196.83930969]
[460.61511230 -206.12849426]
[472.30477905 -215.52803040]
[483.90551758 -225.03710938]
[495.50628662 -234.54620361]
[501.70999146 -253.69674683]
[520.87036133 -256.10595703]
[532.10522461 -266.04467773]
[543.34008789 -275.98339844]
[551.19720459 -291.00674438]
[567.80853271 -287.61550903]
[569.14831543 -270.71459961]
[553.27880859 -264.74853516]
[542.04394531 -254.80981445]
[530.80908203 -244.87110901]
[531.09887695 -234.60459900]
[525.55413818 -225.69892883]
[515.81323242 -221.24510193]
[505.01535034 -222.94544983]
[493.41461182 -213.43637085]
[481.81387329 -203.92729187]
[478.62060547 -197.22625732]
[469.90429688 -194.35092163]
[458.12670898 -185.06173706]
[446.34915161 -175.77256775]
[434.57156372 -166.48338318]
[422.79400635 -157.19419861]
[417.59246826 -143.23736572]
[401.96542358 -140.76632690]
[390.18783569 -131.47714233]
[386.86907959 -124.83736420]
[378.10025024 -122.12650299]
[366.15002441 -113.06051636]
[354.19979858 -103.99452209]
[342.24957275 -94.92853546]
[330.29934692 -85.86254120]
[318.34912109 -76.79655457]
[306.39889526 -67.73056793]
[294.53448486 -58.55257416]
[282.75689697 -49.26339722]
[270.97933960 -39.97421646]
[265.08343506 -19.16461945]
[242.92053223 -16.00399017]
[231.87461853 -5.85569859]
[220.82870483 4.29259348]
[209.78279114 14.44088554]
[198.73687744 24.58917809]
[187.78691101 34.84091568]
[176.93385315 45.19519424]
[166.08079529 55.54947281]
[155.22772217 65.90375519]
[144.37466431 76.25803375]
[140.50695801 90.64170837]
[125.18107605 94.56953430]
[114.32801056 104.92381287]
[108.94810486 118.92583466]
[110.07575226 133.88339233]
[111.20340729 148.84094238]
[112.33105469 163.79849243]
[113.45870972 178.75604248]
[114.58635712 193.71360779]
[115.71401215 208.67115784]
[116.84165955 223.62870789]
[117.96931458 238.58625793]
[119.09696198 253.54382324]
[122.87662506 261.90777588]
[120.10243988 268.79287720]
[120.94853210 283.76898193]
[130.38381958 297.18194580]
[123.24097443 311.94378662]
[106.86793518 312.86880493]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 163]
[2 162]
[3 160]
[4 159]
[5 158]
[6 157]
[7 156]
[8 155]
[9 154]
[10 153]
[11 152]
[12 151]
[16 31]
[17 30]
[18 29]
[19 28]
[34 56]
[35 55]
[36 54]
[38 52]
[39 51]
[40 50]
[41 49]
[42 48]
[60 150]
[61 149]
[63 147]
[64 146]
[65 145]
[66 144]
[67 143]
[69 142]
[70 141]
[71 140]
[72 139]
[73 138]
[79 136]
[80 135]
[81 134]
[83 133]
[84 132]
[85 131]
[86 130]
[87 129]
[88 128]
[89 127]
[90 125]
[91 124]
[93 122]
[94 121]
[95 120]
[96 119]
[97 118]
[98 116]
[99 115]
[100 114]
[102 110]
[103 109]
[104 108]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
