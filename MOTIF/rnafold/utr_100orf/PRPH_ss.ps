%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:56:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCGCAGCGGUCUGCGGCUCCUUCCCAGCCCCCGGCCUAGCUCUGCGAACGGUGACUGCCCAUCCUUGGCCGCAAUGAGCCACCACCCGUCGGGCCUCCGGGCCGGCUUCAGCUCCACCUCAUACCGCCGUACCUUCGGUCCACCGCCCUCACUAUCCCCCGGGGCCUUCUCCU\
) } def
/len { sequence length } bind def

/coor [
[320.55963135 422.83358765]
[310.85012817 411.33087158]
[306.27194214 396.94842529]
[307.55245972 381.86853027]
[314.52749634 368.39172363]
[304.90850830 356.88195801]
[290.80993652 352.07778931]
[287.89730835 336.52697754]
[278.27832031 325.01721191]
[268.65930176 313.50744629]
[259.04031372 301.99768066]
[249.42129517 290.48791504]
[235.32275391 285.68374634]
[232.41012573 270.13293457]
[222.79112244 258.62316895]
[208.69256592 253.81898499]
[205.77993774 238.26818848]
[196.16093445 226.75842285]
[182.46287537 232.77011108]
[167.61085510 234.68028259]
[152.80743408 232.32565308]
[139.25364685 225.88861084]
[128.05160522 215.88308716]
[120.11483002 203.11360168]
[116.09381866 188.61051941]
[116.32266998 173.54689026]
[120.79138184 159.14366150]
[129.14596558 146.57064819]
[119.52696228 135.06088257]
[109.90795898 123.55110931]
[100.28894806 112.04134369]
[90.46604156 100.70510101]
[80.44235229 89.54598999]
[70.41866302 78.38687897]
[60.39497757 67.22777557]
[50.37129211 56.06866455]
[38.56431961 57.75687790]
[27.52671432 53.56449127]
[19.97299576 44.64680862]
[17.70050621 33.30540466]
[21.16275215 22.39480972]
[11.54374599 10.88504314]
[1.92474055 -0.62472385]
[-7.69426489 -12.13449097]
[-22.48082924 -17.76193237]
[-24.70544052 -32.48947144]
[-34.32444382 -43.99923706]
[-43.94345093 -55.50900650]
[-59.32112122 -54.59609985]
[-72.13790894 -62.81700897]
[-77.59181213 -76.84265900]
[-73.78659821 -91.21827698]
[-83.40560913 -102.72804260]
[-93.02461243 -114.23780823]
[-102.64361572 -125.74758148]
[-117.43018341 -131.37501526]
[-119.65479279 -146.10255432]
[-129.27380371 -157.61231995]
[-139.29748535 -168.77143860]
[-149.71307373 -179.56565857]
[-160.31968689 -190.17227173]
[-171.11390686 -200.58786011]
[-181.90814209 -211.00344849]
[-197.94375610 -214.43724060]
[-202.72969055 -230.12248230]
[-191.34255981 -241.92355347]
[-175.49649048 -237.70053101]
[-171.49253845 -221.79768372]
[-160.69831848 -211.38209534]
[-149.90408325 -200.96649170]
[-145.16734314 -200.15757751]
[-140.89898682 -196.34403992]
[-138.91885376 -189.98126221]
[-128.50325012 -179.18702698]
[-125.67427826 -179.01863098]
[-122.74308014 -177.70114136]
[-120.15452576 -175.19042969]
[-118.36091614 -171.60653687]
[-117.76403046 -167.23132324]
[-108.14502716 -155.72155762]
[-94.04647827 -150.91737366]
[-91.13385010 -135.36657715]
[-81.51484680 -123.85681915]
[-71.89583588 -112.34704590]
[-62.27683258 -100.83728027]
[-47.45399857 -102.02960205]
[-34.61955643 -94.17205048]
[-28.80492973 -80.09925842]
[-32.43368530 -65.12801361]
[-22.81467819 -53.61824417]
[-13.19567299 -42.10847473]
[0.90287471 -37.30429077]
[3.81550193 -21.75349617]
[13.43450737 -10.24372959]
[23.05351257 1.26603770]
[32.67251968 12.77580452]
[50.94819641 13.28439522]
[63.28426361 27.20664024]
[61.53039932 46.04497910]
[71.55408478 57.20408630]
[81.57777405 68.36319733]
[91.60146332 79.52230072]
[101.62514496 90.68141174]
[106.69787598 92.14739227]
[110.57573700 96.36512756]
[111.79871368 102.42234039]
[121.41772461 113.93210602]
[131.03672791 125.44187164]
[140.65573120 136.95164490]
[154.51237488 130.96217346]
[169.48017883 129.12181091]
[184.34509277 131.57118225]
[197.90380859 138.10337830]
[209.06120300 148.18130493]
[216.91877747 160.98187256]
[220.84703064 175.46322632]
[220.53585815 190.44952393]
[216.01901245 204.72639465]
[207.67070007 217.13941956]
[217.28971863 228.64918518]
[232.07627869 234.27662659]
[234.30088806 249.00416565]
[243.91989136 260.51394653]
[258.70645142 266.14138794]
[260.93106079 280.86892700]
[270.55007935 292.37869263]
[280.16906738 303.88845825]
[289.78808594 315.39822388]
[299.40710449 326.90798950]
[314.19366455 332.53543091]
[316.41827393 347.26296997]
[326.03726196 358.77273560]
[340.53839111 354.30136108]
[355.60604858 355.71868896]
[368.94708252 362.77777100]
[378.54309082 374.37533569]
[382.95578003 388.72430420]
[381.54254150 403.62893677]
[374.54965210 416.82095337]
[384.16864014 428.33071899]
[397.74664307 424.34735107]
[411.77420044 425.84149170]
[424.13229370 432.55413818]
[432.96691895 443.44061279]
[436.96694946 456.83282471]
[435.55889893 470.69494629]
[428.98870850 482.93292236]
[438.40075684 494.61251831]
[447.81280518 506.29214478]
[457.22482300 517.97180176]
[466.63687134 529.65142822]
[481.63989258 526.62353516]
[496.32827759 530.92584229]
[507.32672119 541.56970215]
[512.10791016 556.10925293]
[509.57315063 571.20343018]
[500.30487061 583.38366699]
[486.43289185 589.85101318]
[471.14489746 589.11938477]
[457.95391846 581.35681152]
[449.89117432 568.34716797]
[448.80941772 553.07995605]
[454.95724487 539.06341553]
[445.54519653 527.38378906]
[436.13317871 515.70416260]
[426.72113037 504.02456665]
[417.30911255 492.34494019]
[401.83636475 496.27813721]
[386.13873291 493.06585693]
[373.36239624 483.30032349]
[366.09060669 468.89218140]
[365.82128906 452.69714355]
[372.65887451 437.94973755]
[363.03988647 426.43997192]
[348.81588745 430.97943115]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 132]
[6 131]
[8 129]
[9 128]
[10 127]
[11 126]
[12 125]
[14 123]
[15 122]
[17 120]
[18 119]
[28 109]
[29 108]
[30 107]
[31 106]
[32 103]
[33 102]
[34 101]
[35 100]
[36 99]
[41 96]
[42 95]
[43 94]
[44 93]
[46 91]
[47 90]
[48 89]
[52 85]
[53 84]
[54 83]
[55 82]
[57 80]
[58 79]
[59 74]
[60 73]
[61 70]
[62 69]
[63 68]
[139 174]
[140 173]
[147 167]
[148 166]
[149 165]
[150 164]
[151 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
