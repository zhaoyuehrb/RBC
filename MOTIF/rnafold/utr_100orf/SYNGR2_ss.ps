%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:02:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUGGAGUCGGGCGGGGCGCCGGGCAGGUUCCUCUGCGUUCCGCGGCGGCGGCAGCGGCGGCGACGGCGACAUGGAGAGCGGGGCCUACGGCGCGGCCAAGGCGGGCGGCUCCUUCGACCUGCGGCGCUUCCUGACGCAGCCGCAGGUGGUGGCGCGCGCCGUGUGCUUGG\
) } def
/len { sequence length } bind def

/coor [
[160.03080750 160.67385864]
[152.40521240 173.59091187]
[139.50642395 181.24736023]
[124.51502228 181.75529480]
[111.12758636 174.98945618]
[102.64518738 162.61816406]
[101.15940094 147.69192505]
[107.03585815 133.89222717]
[98.35182190 146.12281799]
[89.66779327 158.35342407]
[87.98716736 174.08511353]
[74.31010437 179.98318481]
[65.62606812 192.21377563]
[56.94203186 204.44438171]
[48.25799561 216.67497253]
[44.01818085 233.09022522]
[27.07074928 233.56028748]
[21.92753601 217.40530396]
[36.02739716 207.99093628]
[44.71143341 195.76034546]
[53.39546967 183.52973938]
[62.07950592 171.29914856]
[63.13899231 156.44227600]
[77.43719482 149.66938782]
[86.12123108 137.43878174]
[94.80526733 125.20818329]
[85.47560883 118.47444916]
[80.77615356 109.08547211]
[80.97930908 99.59035492]
[67.32455444 93.38166046]
[53.66980743 87.17297363]
[40.01506042 80.96427917]
[30.87156105 80.25440216]
[26.17032242 74.51686859]
[12.63056564 68.06125641]
[-0.90919042 61.60563660]
[-14.44894695 55.15001678]
[-30.23561478 56.19485474]
[-38.39395523 43.73328400]
[-51.93371201 37.27766418]
[-65.47346497 30.82204819]
[-79.07128143 24.48963165]
[-92.72602844 18.28094101]
[-106.38077545 12.07224941]
[-120.09133911 5.98779345]
[-133.85656738 0.02807515]
[-149.59489441 1.64545095]
[-158.20034790 -10.51166439]
[-171.96557617 -16.47138214]
[-187.70390320 -14.85400677]
[-196.30935669 -27.01112175]
[-210.07458496 -32.97084045]
[-226.29443359 -30.55244064]
[-236.28555298 -43.55665970]
[-229.76992798 -58.60586929]
[-213.45028687 -60.21873474]
[-204.11486816 -46.73607635]
[-190.34963989 -40.77635956]
[-175.59590149 -42.82001495]
[-166.00585938 -30.23661995]
[-152.24063110 -24.27690125]
[-137.48689270 -26.32055664]
[-127.89685822 -13.73716259]
[-114.13161469 -7.77744389]
[-106.71753693 -8.00625038]
[-100.17208862 -1.58249927]
[-86.51733398 4.62619209]
[-72.86258698 10.83488369]
[-65.44557953 10.74074364]
[-59.01784897 17.28229141]
[-45.47809601 23.73790932]
[-31.93833733 30.19352722]
[-17.12012291 28.68694305]
[-7.99332905 41.61026382]
[5.54642725 48.06587982]
[19.08618355 54.52149582]
[32.62593842 60.97711563]
[46.22375107 67.30953217]
[59.87850189 73.51821899]
[73.53324890 79.72691345]
[87.18799591 85.93560791]
[111.96562958 81.08559418]
[124.61737061 107.51152802]
[139.51300049 105.74508667]
[154.40863037 103.97864532]
[169.30424500 102.21220398]
[182.09722900 92.90359497]
[195.64710999 99.08825684]
[210.54273987 97.32181549]
[225.43835449 95.55537415]
[240.33398438 93.78892517]
[255.22961426 92.02248383]
[270.12524414 90.25604248]
[285.02087402 88.48960114]
[299.91650391 86.72315979]
[314.81213379 84.95671844]
[329.69110107 83.05509949]
[344.55218506 81.01847076]
[359.41326904 78.98183441]
[374.27438354 76.94519806]
[382.03060913 56.15203476]
[407.91076660 47.63565063]
[418.07525635 36.60464859]
[428.23977661 25.57364655]
[429.02374268 9.54976177]
[442.12423706 0.28926581]
[457.49166870 4.89601994]
[463.33743286 19.83611679]
[455.17718506 33.64879227]
[439.27078247 35.73814392]
[429.10626221 46.76914597]
[418.94177246 57.80014801]
[421.41427612 64.88088226]
[435.57574463 59.93587494]
[449.73727417 54.99110794]
[454.68182373 69.15273285]
[440.52075195 74.09733582]
[426.35928345 79.04233551]
[428.83178711 86.12306976]
[443.65344238 88.42922211]
[458.47509766 90.73537445]
[473.29675293 93.04152679]
[488.11843872 95.34767914]
[502.94009399 97.65383148]
[517.76177979 99.95998383]
[532.58343506 102.26613617]
[547.40509033 104.57228851]
[562.24707031 106.74377441]
[577.10815430 108.78040314]
[587.75128174 97.48865509]
[603.00506592 94.64239502]
[617.00415039 101.33607483]
[624.36560059 114.99582672]
[622.25878906 130.36920166]
[611.49377441 141.54483032]
[596.20996094 144.22544861]
[582.28436279 137.38031006]
[575.07153320 123.64149475]
[560.21044922 121.60486603]
[553.13128662 123.81989288]
[545.09893799 119.39395142]
[530.27728271 117.08779907]
[515.45562744 114.78164673]
[500.63394165 112.47549438]
[485.81228638 110.16934204]
[470.99060059 107.86318970]
[456.16894531 105.55703735]
[441.34729004 103.25088501]
[426.52563477 100.94473267]
[405.82852173 111.46432495]
[386.08642578 106.39713287]
[376.31100464 91.80629730]
[361.44992065 93.84292603]
[346.58880615 95.87956238]
[331.72772217 97.91619873]
[325.50549316 101.95410919]
[316.57855225 99.85234070]
[301.68292236 101.61878204]
[286.78732300 103.38523102]
[271.89169312 105.15167236]
[256.99606323 106.91811371]
[242.10043335 108.68455505]
[227.20480347 110.45099640]
[212.30917358 112.21743774]
[197.41354370 113.98387909]
[185.68600464 123.16614532]
[171.07069397 117.10782623]
[156.17506409 118.87426758]
[141.27943420 120.64070892]
[126.38381195 122.40715790]
[141.31355286 123.85725403]
[153.70507812 132.31007385]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 26]
[9 25]
[10 24]
[12 22]
[13 21]
[14 20]
[15 19]
[29 81]
[30 80]
[31 79]
[32 78]
[34 77]
[35 76]
[36 75]
[37 74]
[39 72]
[40 71]
[41 70]
[42 68]
[43 67]
[44 66]
[45 64]
[46 63]
[48 61]
[49 60]
[51 58]
[52 57]
[83 170]
[84 169]
[85 168]
[86 167]
[88 165]
[89 164]
[90 163]
[91 162]
[92 161]
[93 160]
[94 159]
[95 158]
[96 157]
[97 155]
[98 154]
[99 153]
[100 152]
[102 112]
[103 111]
[104 110]
[119 149]
[120 148]
[121 147]
[122 146]
[123 145]
[124 144]
[125 143]
[126 142]
[127 141]
[128 139]
[129 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
