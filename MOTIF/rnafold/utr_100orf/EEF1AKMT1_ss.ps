%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:40:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCACACGGCGAGUCUGGGCGACUGCGCACGCGCGGCUGGUGAGUGGCGGGUUCGGGCGCAGCUGUAGGGUUGGCUGCGCGCCGCCGAGGCGUUUUGGACUGGGUUAUAAACAACUUGUGAAAUGAGUGAUUUGGAAGAUGAUGAGACACCCCAGCUUUCUGCCCAUGCCUUAGCAGCUCUCCAGGAAUUUUAUGCUGAGCAAAAGCAACAAAUUGAGCCAG\
) } def
/len { sequence length } bind def

/coor [
[36.42959976 195.08509827]
[27.00629997 206.75564575]
[24.05340195 215.39089966]
[17.36614227 218.52340698]
[7.77863836 230.05943298]
[-1.80886590 241.59545898]
[-4.50281096 259.81524658]
[-21.19571114 265.24057007]
[-30.61901093 276.91110229]
[-33.26866150 292.50888062]
[-47.28408432 297.55041504]
[-56.70738220 309.22094727]
[-59.66028214 317.85620117]
[-66.34754181 320.98870850]
[-75.93504333 332.52474976]
[-85.52254486 344.06076050]
[-88.39265442 359.61944580]
[-102.47801208 364.46215820]
[-112.06552124 375.99819946]
[-121.65302277 387.53421021]
[-117.69775391 402.53872681]
[-123.34867859 416.99026489]
[-136.43289185 425.33187866]
[-151.91926575 424.35610962]
[-163.85295105 414.43811035]
[-167.64521790 399.39157104]
[-161.83784485 385.00216675]
[-148.66390991 376.80297852]
[-133.18904114 377.94671631]
[-123.60153961 366.41067505]
[-114.01403046 354.87466431]
[-111.82968903 340.14111328]
[-97.05857086 334.47326660]
[-87.47106171 322.93722534]
[-77.88356018 311.40121460]
[-68.37792206 299.79763794]
[-58.95462036 288.12710571]
[-56.97898865 273.36410522]
[-42.28954697 267.48782349]
[-32.86624908 255.81727600]
[-33.83647919 243.76477051]
[-26.08826637 233.96578979]
[-13.34488583 232.00794983]
[-3.75738168 220.47192383]
[5.83012247 208.93591309]
[15.33576298 197.33233643]
[24.75906372 185.66180420]
[26.36048317 166.38742065]
[45.29137039 159.44512939]
[54.38063431 147.51260376]
[63.46989822 135.58006287]
[72.55915833 123.64753723]
[81.64842224 111.71500397]
[77.45948029 97.31178284]
[63.38844681 92.11505127]
[49.28099823 87.01800537]
[35.13783646 82.02091217]
[20.99467468 77.02381134]
[6.85151243 72.02671814]
[-7.29164886 67.02961731]
[-21.43481064 62.03252029]
[-35.57797241 57.03542328]
[-49.72113419 52.03832626]
[-63.86429596 47.04122925]
[-78.01434326 54.08052826]
[-92.97068024 48.97333145]
[-99.85998535 34.74965286]
[-94.59494781 19.84814453]
[-80.29922485 13.10961056]
[-65.45421600 18.53190231]
[-58.86719894 32.89806747]
[-44.72403717 37.89516449]
[-30.58087540 42.89226151]
[-16.43771362 47.88935852]
[-2.29455209 52.88645554]
[11.84860992 57.88355255]
[25.99177170 62.88064957]
[40.13493347 67.87774658]
[54.27809525 72.87484741]
[61.62602615 72.13999939]
[68.58518219 78.04401398]
[82.65621185 83.24075317]
[96.69012451 77.94458771]
[103.81951141 64.74716949]
[103.57112885 48.92790985]
[116.42779541 41.40757751]
[123.55718231 28.21015739]
[130.68656921 15.01273823]
[137.81594849 1.81531835]
[144.94532776 -11.38210201]
[152.07470703 -24.57952118]
[159.20410156 -37.77694321]
[151.68284607 -52.93137360]
[154.64988708 -69.41848755]
[166.74020386 -80.77232361]
[183.05075073 -82.66038513]
[189.99266052 -95.95737457]
[196.93457031 -109.25435638]
[203.59269714 -122.69569397]
[209.96400452 -136.27531433]
[216.33532715 -149.85494995]
[222.70664978 -163.43457031]
[229.07797241 -177.01420593]
[217.18722534 -188.66270447]
[210.01684570 -203.65632629]
[208.41847229 -220.17343140]
[212.56796265 -236.21398926]
[221.94624329 -249.84170532]
[235.40417480 -259.41778564]
[251.30332947 -263.79803467]
[267.71545410 -262.46942139]
[273.69992065 -276.22390747]
[272.11087036 -291.96511841]
[284.28347778 -300.54867554]
[290.26794434 -314.30316162]
[296.25244141 -328.05764771]
[294.66336060 -343.79885864]
[306.83596802 -352.38241577]
[312.82043457 -366.13690186]
[318.80493164 -379.89138794]
[324.78939819 -393.64587402]
[316.80130005 -406.94888306]
[318.19161987 -422.40353394]
[328.42575073 -434.06723022]
[343.56851196 -437.45504761]
[357.79711914 -431.26425171]
[365.64044189 -417.87539673]
[364.08255005 -402.43670654]
[353.72247314 -390.88473511]
[338.54388428 -387.66140747]
[332.55941772 -373.90692139]
[326.57492065 -360.15243530]
[320.59045410 -346.39791870]
[322.60754395 -331.64053345]
[310.00692749 -322.07318115]
[304.02243042 -308.31866455]
[298.03796387 -294.56417847]
[300.05505371 -279.80679321]
[287.45443726 -270.23941040]
[281.46994019 -256.48492432]
[291.69558716 -247.73225403]
[299.05310059 -236.44099426]
[302.93954468 -223.51913452]
[303.03158569 -210.00898743]
[299.31228638 -197.00306702]
[292.07336426 -185.55580139]
[281.89224243 -176.59802246]
[269.58605957 -170.86125183]
[256.14599609 -168.81800842]
[242.65759277 -170.64288330]
[236.28628540 -157.06324768]
[229.91496277 -143.48362732]
[223.54364014 -129.90400696]
[217.17231750 -116.32437134]
[218.01499939 -112.90840912]
[217.25000000 -108.91519165]
[214.62422180 -105.10249329]
[210.23156738 -102.31244659]
[203.28964233 -89.01545715]
[196.34773254 -75.71847534]
[203.37281799 -64.37072754]
[203.87945557 -50.92576981]
[197.62857056 -38.88941956]
[186.15710449 -31.45302963]
[172.40151978 -30.64755821]
[165.27212524 -17.45013809]
[158.14274597 -4.25271845]
[151.01336670 8.94470215]
[143.88398743 22.14212227]
[136.75459290 35.33954239]
[129.62521362 48.53696060]
[130.38352966 63.41225052]
[117.01692963 71.87654877]
[109.88754272 85.07396698]
[119.77861786 91.83352661]
[124.38354492 105.00840759]
[136.69108582 113.58304596]
[148.99862671 122.15769196]
[161.30615234 130.73233032]
[176.66871643 128.15750122]
[189.02815247 137.02873230]
[191.38819885 151.69044495]
[203.69573975 160.26507568]
[217.91871643 154.28927612]
[233.11065674 156.97415161]
[244.42385864 167.46295166]
[248.24832153 182.40875244]
[243.36366272 197.04240417]
[231.32858276 206.69436646]
[215.98341370 208.28471375]
[202.22474670 201.30598450]
[194.44291687 187.98507690]
[195.12109375 172.57261658]
[182.81355286 163.99797058]
[168.24221802 166.86363220]
[155.63848877 158.34304810]
[152.73152161 143.03987122]
[140.42398071 134.46522522]
[128.11643982 125.89058685]
[115.80889893 117.31594086]
[122.49887848 130.74145508]
[129.18885803 144.16694641]
[140.43298340 154.09518433]
[146.20440674 167.94041443]
[145.34132385 182.91555786]
[138.01745605 196.00605774]
[125.70715332 204.57672119]
[110.88851929 206.90225220]
[96.54460907 202.51451111]
[85.56292725 192.29675293]
[80.15412140 178.30586243]
[81.40700531 163.35827637]
[89.06932068 150.46307373]
[91.32513428 135.63366699]
[93.58095551 120.80426788]
[84.49169159 132.73680115]
[75.40242767 144.66932678]
[66.31316376 156.60186768]
[57.22390366 168.53439331]
[59.30116272 179.20083618]
[55.25285339 189.04853821]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 47]
[2 46]
[4 45]
[5 44]
[6 43]
[8 40]
[9 39]
[11 37]
[12 36]
[14 35]
[15 34]
[16 33]
[18 31]
[19 30]
[20 29]
[49 219]
[50 218]
[51 217]
[52 216]
[53 215]
[54 82]
[55 81]
[56 79]
[57 78]
[58 77]
[59 76]
[60 75]
[61 74]
[62 73]
[63 72]
[64 71]
[83 174]
[84 173]
[86 171]
[87 170]
[88 169]
[89 168]
[90 167]
[91 166]
[92 165]
[96 160]
[97 159]
[98 158]
[99 154]
[100 153]
[101 152]
[102 151]
[103 150]
[111 140]
[112 139]
[114 137]
[115 136]
[116 135]
[118 133]
[119 132]
[120 131]
[121 130]
[176 200]
[177 199]
[178 198]
[179 197]
[182 194]
[183 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
