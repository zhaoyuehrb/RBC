%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:48:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGCGGCUGGCGGCGGCGGUGGGGCGGGGCCUGGGCUGUCAGCCGGCCUAGGAGGAGGAAGGAGCCUGCGGCGUGCAGUGUGAGGGGCGGGACCCGGCUGCCGGCGGUGGGUCUAGCUGGGGGAGGUCGGGCCAUGCUGGUGGGCCAGGGCGCGGGGCCGCUGGGGCCCGCGGUGGUCACCGCCGCGGUGGUGCUGCUGCUGAGCGGCGUGGGGCCGGCGCACGGCUCGGAGG\
) } def
/len { sequence length } bind def

/coor [
[248.98651123 417.60348511]
[242.78833008 403.94396973]
[236.59014893 390.28445435]
[230.39196777 376.62490845]
[224.19377136 362.96539307]
[217.99559021 349.30587769]
[211.79740906 335.64636230]
[205.59922791 321.98684692]
[199.40104675 308.32730103]
[183.41374207 303.08276367]
[176.02822876 287.58941650]
[182.26142883 271.23538208]
[175.88195801 257.65957642]
[163.46641541 249.43138123]
[164.59991455 233.65083313]
[158.22044373 220.07502747]
[151.84098816 206.49922180]
[145.46153259 192.92341614]
[139.08206177 179.34761047]
[132.70260620 165.77180481]
[126.32314301 152.19599915]
[119.94367981 138.62019348]
[113.56421661 125.04439545]
[84.32312775 119.62443542]
[79.05639648 94.12125397]
[66.89771271 85.33681488]
[54.73902512 76.55237579]
[42.58034134 67.76793671]
[26.86301994 65.95784760]
[21.07774925 52.23268890]
[8.91906452 43.44824982]
[-3.23962069 34.66381073]
[-15.39830589 25.87937164]
[-27.55699158 17.09493256]
[-39.71567535 8.31049442]
[-51.87436295 -0.47394472]
[-67.59168243 -2.28403616]
[-73.37695312 -16.00919342]
[-85.53563690 -24.79363251]
[-101.25296021 -26.60372353]
[-107.03823090 -40.32888031]
[-119.19691467 -49.11331940]
[-125.69667053 -50.16125107]
[-130.04850769 -53.78245163]
[-131.55815125 -58.29698563]
[-143.47866821 -67.40197754]
[-155.39920044 -76.50698090]
[-167.31973267 -85.61197662]
[-179.24026489 -94.71697235]
[-187.94337463 -97.43209839]
[-191.25779724 -104.02336121]
[-203.05607605 -113.28623199]
[-214.85435486 -122.54910278]
[-209.77362061 -108.43576813]
[-211.24255371 -93.50787354]
[-218.97679138 -80.65556335]
[-231.47888184 -72.36717224]
[-246.32833862 -70.24738312]
[-260.65017700 -74.70661163]
[-271.67160034 -84.88151550]
[-277.25872803 -98.80214691]
[-276.32986450 -113.77336121]
[-269.06484985 -126.89659882]
[-256.87023926 -135.63110352]
[-242.10702515 -138.28579712]
[-227.63470459 -134.34738159]
[-237.80938721 -145.36898804]
[-247.98405457 -156.39059448]
[-258.15872192 -167.41221619]
[-268.33340454 -178.43382263]
[-278.50808716 -189.45542908]
[-293.55407715 -194.34713745]
[-296.50198364 -208.94711304]
[-306.67663574 -219.96873474]
[-322.23342896 -220.75915527]
[-332.39498901 -232.08158875]
[-331.54556274 -246.90771484]
[-341.72024536 -257.92932129]
[-351.89489746 -268.95092773]
[-362.06958008 -279.97253418]
[-372.24426270 -290.99417114]
[-381.60153198 -290.11572266]
[-390.19018555 -293.58004761]
[-396.13992310 -300.49679565]
[-398.21786499 -309.23950195]
[-396.08270264 -317.82690430]
[-405.80923462 -329.24594116]
[-415.53576660 -340.66500854]
[-431.30767822 -341.67596436]
[-441.68237305 -353.59826660]
[-440.50469971 -369.35861206]
[-428.47335815 -379.60668945]
[-412.72634888 -378.26245117]
[-402.60607910 -366.12344360]
[-404.11669922 -350.39151001]
[-394.39016724 -338.97247314]
[-384.66366577 -327.55343628]
[-364.68814087 -322.32711792]
[-361.22265625 -301.16882324]
[-351.04797363 -290.14721680]
[-340.87329102 -279.12561035]
[-330.69860840 -268.10400391]
[-320.52395630 -257.08239746]
[-305.67730713 -256.74618530]
[-295.20172119 -245.71363831]
[-295.65502930 -230.14340210]
[-285.48034668 -219.12179565]
[-271.16213989 -215.01843262]
[-267.48648071 -199.63011169]
[-257.31179810 -188.60850525]
[-247.13713074 -177.58688354]
[-236.96244812 -166.56527710]
[-226.78776550 -155.54367065]
[-216.61309814 -144.52204895]
[-205.59147644 -134.34738159]
[-193.79321289 -125.08450317]
[-181.99493408 -115.82164001]
[-170.13526917 -106.63749695]
[-158.21473694 -97.53250122]
[-146.29420471 -88.42750549]
[-134.37367249 -79.32250977]
[-122.45314789 -70.21751404]
[-110.41247559 -61.27200317]
[-98.25379181 -52.48756409]
[-83.40613556 -51.30579376]
[-76.75119781 -36.95231628]
[-64.59251404 -28.16787720]
[-49.74486542 -26.98610878]
[-43.08992386 -12.63263035]
[-30.93123817 -3.84819102]
[-18.77255249 4.93624783]
[-6.61386728 13.72068691]
[5.54481840 22.50512695]
[17.70350456 31.28956604]
[29.86218834 40.07400513]
[44.70983887 41.25577545]
[51.36478043 55.60925293]
[63.52346420 64.39369202]
[75.68215179 73.17813110]
[87.84083557 81.96257019]
[93.51804352 78.06313324]
[100.44443512 76.00818634]
[108.00476837 76.19229889]
[115.46230316 78.80109406]
[122.03046417 83.77519989]
[126.95454407 90.79879761]
[140.85063171 85.15090942]
[154.74673462 79.50302124]
[168.64282227 73.85514069]
[172.27690125 63.62623978]
[180.75981140 57.21039200]
[191.15396118 56.52736664]
[200.02182007 61.56168365]
[214.06333923 56.28571701]
[228.10484314 51.00975418]
[242.14636230 45.73379135]
[256.18789673 40.45782852]
[270.22940063 35.18186569]
[280.42630005 23.08502388]
[295.06176758 25.85134506]
[309.10330200 20.57538033]
[319.09008789 7.56784725]
[335.31072998 9.98086262]
[341.07882690 25.33212280]
[330.46063232 37.82957077]
[314.37924194 34.61689758]
[300.33773804 39.89286041]
[291.14517212 51.61233139]
[275.50537109 49.22338486]
[261.46383667 54.49934769]
[247.42233276 59.77531052]
[233.38081360 65.05126953]
[219.33929443 70.32723236]
[205.29777527 75.60320282]
[194.12777710 91.39879608]
[174.29071045 87.75122833]
[160.39462280 93.39911652]
[146.49851990 99.04700470]
[132.60243225 104.69488525]
[127.14002228 118.66493225]
[133.51948547 132.24073792]
[139.89894104 145.81654358]
[146.27841187 159.39234924]
[152.65786743 172.96815491]
[159.03732300 186.54396057]
[165.41679382 200.11976624]
[171.79624939 213.69555664]
[178.17572021 227.27136230]
[191.04756165 236.47061157]
[189.45776367 251.28012085]
[195.83723450 264.85592651]
[208.93969727 267.93194580]
[217.75373840 277.84417725]
[219.23303223 290.82989502]
[213.06056213 302.12911987]
[219.25874329 315.78866577]
[225.45693970 329.44818115]
[231.65512085 343.10769653]
[237.85330200 356.76721191]
[244.05148315 370.42672729]
[250.24966431 384.08627319]
[256.44784546 397.74578857]
[262.64602661 411.40530396]
[274.64422607 409.84637451]
[286.62438965 411.43234253]
[297.77703857 416.04858398]
[307.35067749 423.37600708]
[314.70211792 432.91299438]
[319.34002686 444.00994873]
[320.95745850 455.91336060]
[319.45236206 467.81695557]
[314.93389893 478.91653442]
[307.71463013 488.46398926]
[298.28878784 495.81799316]
[303.75119019 509.78805542]
[309.21362305 523.75811768]
[314.67602539 537.72814941]
[320.13842773 551.69818115]
[325.60083008 565.66821289]
[339.66134644 573.39361572]
[342.24584961 589.22711182]
[331.37176514 601.02264404]
[315.38073730 599.73162842]
[306.53973389 586.34448242]
[311.63079834 571.13061523]
[306.16839600 557.16058350]
[300.70596313 543.19055176]
[295.24356079 529.22052002]
[289.78115845 515.25042725]
[284.31875610 501.28042603]
[266.29153442 501.57141113]
[249.50654602 494.89617920]
[236.55400085 482.25662231]
[229.44352722 465.57723999]
[229.29241943 447.41201782]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 203]
[2 202]
[3 201]
[4 200]
[5 199]
[6 198]
[7 197]
[8 196]
[9 195]
[12 191]
[13 190]
[15 188]
[16 187]
[17 186]
[18 185]
[19 184]
[20 183]
[21 182]
[22 181]
[23 180]
[25 140]
[26 139]
[27 138]
[28 137]
[30 135]
[31 134]
[32 133]
[33 132]
[34 131]
[35 130]
[36 129]
[38 127]
[39 126]
[41 124]
[42 123]
[45 122]
[46 121]
[47 120]
[48 119]
[49 118]
[51 117]
[52 116]
[53 115]
[66 114]
[67 113]
[68 112]
[69 111]
[70 110]
[71 109]
[73 107]
[74 106]
[77 103]
[78 102]
[79 101]
[80 100]
[81 99]
[86 97]
[87 96]
[88 95]
[146 179]
[147 178]
[148 177]
[149 176]
[153 174]
[154 173]
[155 172]
[156 171]
[157 170]
[158 169]
[160 167]
[161 166]
[214 230]
[215 229]
[216 228]
[217 227]
[218 226]
[219 225]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
