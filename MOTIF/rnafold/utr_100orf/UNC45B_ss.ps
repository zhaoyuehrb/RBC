%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:06:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACUGAGGCUGGCUGGCUGGAGGUUGACACAGGAGUGCUCAGGGGAGCAGCAUCACAAGAGGGCAGAUCGAAAGCAUCGUCCUUGCUGAAAAACAGAUGGCAGAGGUGGAAGCGGUACAGCUGAAGGAGGAAGGAAACCGGCAUUUCCAGCUCCAGGACUACAAGGCCGCCACAAAUAGCUACAGCCAGGCCCUGA\
) } def
/len { sequence length } bind def

/coor [
[102.89158630 301.45425415]
[87.64575195 300.72802734]
[74.22893524 293.45123291]
[65.30504608 281.06869507]
[62.64593124 266.03900146]
[66.77956390 251.34628296]
[76.88520050 239.90780640]
[90.95635986 233.99467468]
[91.67008972 219.01165771]
[92.38381958 204.02865601]
[92.97866058 189.04045105]
[93.45458221 174.04800415]
[93.93050385 159.05555725]
[94.40641785 144.06311035]
[94.88233948 129.07066345]
[95.35826111 114.07821655]
[82.67551422 106.06896210]
[69.34298706 112.94235992]
[56.01045227 119.81575775]
[42.67792130 126.68915558]
[42.06335068 143.20722961]
[33.25563812 157.08364868]
[18.73692894 164.58439636]
[2.51055574 163.74775696]
[-11.00268841 154.89640808]
[-24.22448921 161.98048401]
[-37.44628906 169.06454468]
[-50.66809082 176.14860535]
[-63.83327484 183.33734131]
[-76.94101715 190.63029480]
[-90.04875946 197.92324829]
[-98.00379944 212.26373291]
[-114.40294647 212.27412415]
[-122.37615204 197.94374084]
[-113.72127533 184.01445007]
[-97.34170532 184.81550598]
[-84.23396301 177.52255249]
[-71.12622833 170.22959900]
[-66.80506897 164.22390747]
[-57.75215530 162.92681885]
[-44.53035355 155.84274292]
[-31.30855560 148.75868225]
[-18.08675385 141.67460632]
[-18.55335999 128.01976013]
[-13.06267834 115.43650818]
[-2.63473415 106.40514374]
[10.73127937 102.73258209]
[24.44014931 105.19107056]
[35.80452347 113.35662842]
[49.13705444 106.48323059]
[62.46958923 99.60983276]
[75.80211639 92.73643494]
[80.22550964 93.42526245]
[84.58393860 94.36643219]
[73.24769592 84.54351807]
[61.91145325 74.72060394]
[48.67015457 77.22158813]
[36.58393097 71.71688843]
[29.97579956 60.42181396]
[31.06673622 47.57661438]
[19.88776970 37.57508087]
[8.70880222 27.57354546]
[-2.47016406 17.57201004]
[-13.64913082 7.57047462]
[-24.82809830 -2.43106008]
[-33.32001877 -5.82589769]
[-36.10347366 -12.68105698]
[-47.12234879 -22.85869789]
[-58.14122391 -33.03633881]
[-73.62905884 -30.87739563]
[-86.85365295 -39.22270203]
[-91.57076263 -54.13185501]
[-85.55310822 -68.56521606]
[-71.64204407 -75.70778656]
[-56.40594864 -72.18706512]
[-47.03884125 -59.66543198]
[-47.96358490 -44.05521393]
[-36.94470978 -33.87757492]
[-25.92583275 -23.69993210]
[-14.82656288 -13.61002731]
[-3.64759588 -3.60849190]
[7.53137112 6.39304304]
[18.71033859 16.39457893]
[29.88930511 26.39611244]
[41.06827164 36.39764786]
[57.79983521 34.74483871]
[70.80939484 45.92053604]
[71.73436737 63.38436508]
[83.07061005 73.20727539]
[94.40685272 83.03018188]
[86.21319580 70.46578979]
[86.49505615 55.46844101]
[95.15504456 43.22080231]
[109.20049286 37.95532227]
[123.77769470 41.49160385]
[133.84916687 52.60760880]
[135.93447876 67.46195221]
[129.31300354 80.92137909]
[116.27261353 88.33476257]
[130.84979248 84.79837799]
[145.42695618 81.26199341]
[160.00413513 77.72560883]
[164.49566650 61.81803894]
[176.32658386 50.40927887]
[192.20440674 46.54288483]
[207.77613831 51.18145370]
[218.82168579 62.96915436]
[233.34091187 59.20193481]
[247.86013794 55.43471527]
[262.37936401 51.66749573]
[262.85827637 23.50261688]
[295.57638550 2.49782634]
[303.88519287 -9.99072170]
[312.19396973 -22.47926903]
[308.83465576 -37.92240524]
[317.44937134 -51.17240143]
[332.92715454 -54.36826706]
[346.08532715 -45.61395264]
[349.11737061 -30.10324097]
[340.22442627 -17.03835678]
[324.68252563 -14.17046833]
[316.37371826 -1.68192053]
[308.06494141 10.80662727]
[312.36676025 16.95026779]
[327.30966187 15.64290142]
[320.97039795 29.23754883]
[325.27221680 35.38118744]
[339.84939575 31.84480476]
[354.42657471 28.30842018]
[369.00375366 24.77203560]
[374.64721680 12.53528309]
[386.14190674 5.88317394]
[399.17568970 7.05213451]
[409.00628662 15.39173126]
[423.63772583 12.08707333]
[438.26916504 8.78241539]
[452.90060425 5.47775745]
[467.53207397 2.17309928]
[475.75778198 -11.32182598]
[491.13607788 -14.96646976]
[504.54330444 -6.59852934]
[508.02514648 8.81744480]
[499.51593018 22.13542938]
[484.06399536 25.45409775]
[470.83673096 16.80454636]
[456.20526123 20.10920334]
[441.57382202 23.41386223]
[426.94238281 26.71852112]
[412.31094360 30.02317810]
[403.95202637 44.61103058]
[387.30227661 48.72576904]
[372.54013062 39.34920883]
[357.96295166 42.88559341]
[343.38577271 46.42197800]
[328.80859375 49.95836258]
[327.14596558 64.86660004]
[325.48345947 79.77351379]
[338.92337036 86.43451691]
[348.01287842 87.44372559]
[352.52239990 93.30930328]
[365.85494995 100.18270111]
[382.20083618 98.86235046]
[391.29330444 112.51002502]
[383.77877808 127.08616638]
[367.38757324 127.59609222]
[358.98153687 113.51522827]
[345.64901733 106.64183044]
[332.26235962 99.87442017]
[318.82244873 93.21342468]
[280.14672852 90.54912567]
[266.14660645 66.18672943]
[251.62736511 69.95394897]
[237.10813904 73.72116852]
[222.58889771 77.48838806]
[219.82310486 90.86833954]
[211.52058411 101.80240631]
[199.25735474 108.12071228]
[185.40226746 108.53858948]
[172.65943909 102.91741180]
[163.54051208 92.30278015]
[148.96334839 95.83916473]
[134.38616943 99.37554932]
[119.80899811 102.91193390]
[110.35070801 114.55413055]
[109.87478638 129.54658508]
[109.39886475 144.53903198]
[108.92295074 159.53147888]
[108.44702911 174.52392578]
[107.97111511 189.51637268]
[110.82901764 198.20372009]
[107.36682892 204.74238586]
[106.65309906 219.72538757]
[105.93937683 234.70840454]
[119.38474274 241.93231201]
[128.35733032 254.27958679]
[131.07560730 269.29870605]
[126.99987030 284.00759888]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 193]
[9 192]
[10 191]
[11 189]
[12 188]
[13 187]
[14 186]
[15 185]
[16 184]
[17 52]
[18 51]
[19 50]
[20 49]
[25 43]
[26 42]
[27 41]
[28 40]
[29 38]
[30 37]
[31 36]
[54 90]
[55 89]
[56 88]
[60 85]
[61 84]
[62 83]
[63 82]
[64 81]
[65 80]
[67 79]
[68 78]
[69 77]
[99 183]
[100 182]
[101 181]
[102 180]
[107 174]
[108 173]
[109 172]
[110 171]
[112 123]
[113 122]
[114 121]
[127 155]
[128 154]
[129 153]
[130 152]
[134 149]
[135 148]
[136 147]
[137 146]
[138 145]
[157 169]
[158 168]
[160 167]
[161 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
