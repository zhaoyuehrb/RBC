%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:27:38 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ANP32C)
} def

/sequence { (\
AUGGAGAUGGGCAGACGGAUUCAUUCAGAGCUGCGGAACAGGGCGCCCUCUGAUGUGAAAGAACUUGCCCUGGACAACAGUCGGUCGAAUGAAGGCAAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.096335859 ubox
1 24 0.009240469 ubox
1 81 0.008064365 ubox
1 85 0.016282239 ubox
1 90 0.034154893 ubox
2 7 0.101792639 ubox
2 13 0.016698879 ubox
2 17 0.003876842 ubox
2 23 0.011009536 ubox
2 72 0.009218322 ubox
2 76 0.271194729 ubox
2 79 0.133098582 ubox
2 80 0.007567953 ubox
2 83 0.014918095 ubox
2 84 0.018185883 ubox
2 87 0.017710581 ubox
2 89 0.036169393 ubox
2 91 0.008424929 ubox
2 97 0.039865136 ubox
3 8 0.028263409 ubox
3 12 0.018534529 ubox
3 16 0.005475801 ubox
3 22 0.011642174 ubox
3 71 0.015458486 ubox
3 75 0.300821017 ubox
3 78 0.147630304 ubox
3 82 0.019508067 ubox
3 86 0.028459913 ubox
3 90 0.016455926 ubox
3 96 0.041719929 ubox
4 21 0.011888853 ubox
4 70 0.007944249 ubox
4 81 0.017070879 ubox
4 82 0.037328955 ubox
4 85 0.023884009 ubox
4 86 0.036465465 ubox
5 20 0.012153400 ubox
5 71 0.034508948 ubox
5 81 0.036476538 ubox
5 85 0.034292703 ubox
6 70 0.017571000 ubox
6 82 0.064783683 ubox
6 86 0.097011469 ubox
7 81 0.064547848 ubox
7 85 0.096475202 ubox
7 90 0.012098977 ubox
8 17 0.016543030 ubox
8 23 0.003410224 ubox
8 72 0.069351873 ubox
8 76 0.005874669 ubox
8 79 0.005371094 ubox
8 80 0.062789140 ubox
8 83 0.008861555 ubox
8 84 0.093015951 ubox
8 89 0.011965836 ubox
8 97 0.014521405 ubox
9 16 0.020126907 ubox
9 22 0.003436026 ubox
9 69 0.005004194 ubox
9 70 0.995540630 ubox
9 71 0.017736948 ubox
9 75 0.003422860 ubox
9 82 0.004787779 ubox
9 96 0.006736517 ubox
10 21 0.003352589 ubox
10 68 0.003828824 ubox
10 69 0.998586341 ubox
10 70 0.014991523 ubox
10 82 0.005250338 ubox
11 34 0.017974108 ubox
11 68 0.998667574 ubox
11 69 0.010676296 ubox
11 81 0.003262987 ubox
11 96 0.011485722 ubox
12 33 0.017991342 ubox
12 67 0.998686673 ubox
12 80 0.003235828 ubox
12 95 0.011450533 ubox
13 32 0.017987183 ubox
13 65 0.156506757 ubox
13 66 0.977338345 ubox
14 31 0.017973825 ubox
14 64 0.221139333 ubox
14 65 0.853410972 ubox
14 66 0.028139626 ubox
15 65 0.043805961 ubox
17 26 0.004422151 ubox
17 65 0.064089072 ubox
18 25 0.004267512 ubox
18 26 0.017156990 ubox
18 64 0.070434025 ubox
18 65 0.003202116 ubox
19 24 0.003742624 ubox
19 25 0.016994234 ubox
19 65 0.004508457 ubox
20 30 0.003758347 ubox
20 58 0.019975916 ubox
20 59 0.915633392 ubox
20 60 0.091035107 ubox
20 61 0.011186858 ubox
20 62 0.017662013 ubox
20 63 0.012178267 ubox
20 93 0.037779378 ubox
21 29 0.003887607 ubox
21 57 0.014997655 ubox
21 58 0.991639835 ubox
21 59 0.065391604 ubox
21 60 0.004284518 ubox
21 61 0.009717593 ubox
21 62 0.009508138 ubox
21 92 0.043665213 ubox
22 28 0.003899877 ubox
22 55 0.036666126 ubox
22 57 0.997546434 ubox
22 61 0.008765939 ubox
22 91 0.044326548 ubox
23 54 0.036921107 ubox
23 56 0.995414562 ubox
23 90 0.044345950 ubox
24 53 0.027626982 ubox
24 55 0.936214933 ubox
24 59 0.004327983 ubox
24 89 0.044335535 ubox
25 52 0.004893019 ubox
25 53 0.955506242 ubox
25 88 0.044353161 ubox
26 52 0.998606933 ubox
26 87 0.044183667 ubox
27 51 0.998515876 ubox
28 50 0.998761035 ubox
28 82 0.009406944 ubox
28 86 0.039222405 ubox
29 49 0.998227247 ubox
29 81 0.008025655 ubox
29 85 0.038612241 ubox
30 44 0.006416015 ubox
30 46 0.069717175 ubox
30 48 0.992875829 ubox
30 81 0.041910938 ubox
30 85 0.011232803 ubox
31 41 0.016486778 ubox
31 42 0.004331275 ubox
31 43 0.007193332 ubox
31 45 0.076287088 ubox
31 80 0.043033440 ubox
31 84 0.014433899 ubox
32 40 0.016591362 ubox
32 41 0.004234096 ubox
32 42 0.007045669 ubox
32 45 0.280359248 ubox
32 79 0.043031994 ubox
32 83 0.014322363 ubox
33 39 0.016590439 ubox
33 44 0.316100055 ubox
33 46 0.945963360 ubox
33 78 0.042881733 ubox
33 82 0.013364234 ubox
34 43 0.316186098 ubox
34 45 0.947115416 ubox
34 80 0.013170585 ubox
35 44 0.946542554 ubox
35 47 0.010063229 ubox
36 46 0.010046098 ubox
39 72 0.049269770 ubox
40 71 0.049305879 ubox
41 70 0.049321809 ubox
42 69 0.049322211 ubox
43 68 0.049322159 ubox
44 67 0.049309123 ubox
45 66 0.045020426 ubox
49 62 0.048260723 ubox
50 61 0.049217768 ubox
51 60 0.049154187 ubox
55 64 0.008055074 ubox
56 63 0.008046949 ubox
65 98 0.008026841 ubox
66 97 0.008940607 ubox
67 96 0.009097949 ubox
68 95 0.009078309 ubox
69 94 0.009037988 ubox
70 80 0.048635472 ubox
70 83 0.004877955 ubox
70 84 0.011731435 ubox
71 79 0.205653301 ubox
71 83 0.079365411 ubox
71 87 0.027486049 ubox
71 91 0.004160045 ubox
71 97 0.028930280 ubox
72 78 0.221320622 ubox
72 82 0.077308757 ubox
72 86 0.030461234 ubox
72 90 0.005157389 ubox
72 96 0.030229533 ubox
73 81 0.046466606 ubox
73 82 0.823832272 ubox
73 85 0.011308664 ubox
73 86 0.204636589 ubox
74 81 0.826498666 ubox
74 85 0.205345107 ubox
75 80 0.825894429 ubox
75 84 0.205527032 ubox
75 91 0.004787408 ubox
76 90 0.004441490 ubox
77 85 0.011672081 ubox
78 84 0.012500928 ubox
78 91 0.045462686 ubox
79 90 0.044899147 ubox
80 90 0.004229020 ubox
80 96 0.312126676 ubox
80 100 0.315351990 ubox
81 88 0.047159573 ubox
81 89 0.003665425 ubox
81 92 0.051248090 ubox
81 95 0.312185666 ubox
81 99 0.317558862 ubox
82 87 0.050573124 ubox
82 91 0.055233075 ubox
82 94 0.312022357 ubox
83 90 0.051503149 ubox
84 90 0.014795754 ubox
84 96 0.885789023 ubox
84 100 0.007623018 ubox
85 89 0.014556165 ubox
85 92 0.276794212 ubox
85 95 0.886291569 ubox
85 99 0.007275936 ubox
86 91 0.282705224 ubox
86 94 0.886619730 ubox
90 97 0.065823940 ubox
91 96 0.072849087 ubox
9 70 0.9500000 lbox
10 69 0.9500000 lbox
11 68 0.9500000 lbox
12 67 0.9500000 lbox
13 66 0.9500000 lbox
14 65 0.9500000 lbox
20 59 0.9500000 lbox
21 58 0.9500000 lbox
22 57 0.9500000 lbox
23 56 0.9500000 lbox
24 55 0.9500000 lbox
25 53 0.9500000 lbox
26 52 0.9500000 lbox
27 51 0.9500000 lbox
28 50 0.9500000 lbox
29 49 0.9500000 lbox
30 48 0.9500000 lbox
33 46 0.9500000 lbox
34 45 0.9500000 lbox
35 44 0.9500000 lbox
73 82 0.9500000 lbox
74 81 0.9500000 lbox
75 80 0.9500000 lbox
84 96 0.9500000 lbox
85 95 0.9500000 lbox
86 94 0.9500000 lbox
showpage
end
%%EOF
