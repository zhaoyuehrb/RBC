%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:40:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGGGGGCGGAGCAGGGCCCGGCAGCCGAGCAGCCUGGCAACGGCGGUGGCGCCCGGAGCCCGAGAGUUUCCAGGAUGGCUUCUGCAUCAACUUCUAAAUAUAAUUCACACUCCUUGGAGAAUGAGUCUAUUAAGAGGACGUCUCGAGAUGGAGUCAAUCGAGAUCUCACUGAGG\
) } def
/len { sequence length } bind def

/coor [
[73.31579590 142.42315674]
[65.40530396 135.16014099]
[59.34168625 126.50361633]
[55.34973907 116.90148926]
[40.66112518 119.94199371]
[25.97251320 122.98249817]
[11.28390217 126.02300262]
[-3.40471029 129.06350708]
[-18.09332275 132.10401917]
[-20.97744179 144.72753906]
[-28.40370369 155.27801514]
[-39.23509216 162.20169067]
[-51.83644867 164.49545288]
[-64.32127380 161.85195923]
[-74.83415985 154.70030212]
[-81.82649994 144.13687134]
[-96.61376953 146.65414429]
[-111.40103912 149.17143250]
[-126.18830872 151.68870544]
[-140.95265198 154.33711243]
[-155.69291687 157.11645508]
[-170.43318176 159.89578247]
[-185.17343140 162.67510986]
[-194.09513855 175.44386292]
[-209.08346558 178.05252075]
[-221.20152283 169.46833801]
[-235.94178772 172.24766541]
[-250.68205261 175.02700806]
[-265.42230225 177.80633545]
[-270.10427856 188.77458191]
[-279.41348267 196.03494263]
[-290.95465088 197.86660767]
[-301.82852173 193.92703247]
[-309.36019897 185.30885315]
[-324.18978882 187.56329346]
[-339.01940918 189.81773376]
[-347.00143433 203.26472473]
[-361.77658081 208.38615417]
[-376.36846924 202.76385498]
[-383.88729858 189.05249023]
[-380.78286743 173.72616577]
[-368.52099609 164.02148438]
[-352.89138794 164.52070618]
[-341.27386475 174.98811340]
[-326.44424438 172.73368835]
[-311.61462402 170.47924805]
[-301.69989014 155.11738586]
[-283.39727783 151.79289246]
[-268.20162964 163.06607056]
[-253.46138000 160.28674316]
[-238.72111511 157.50741577]
[-223.98085022 154.72807312]
[-215.82087708 142.32040405]
[-200.91175842 139.29179382]
[-187.95277405 147.93484497]
[-173.21250916 145.15551758]
[-158.47224426 142.37619019]
[-143.73197937 139.59686279]
[-137.72276306 135.25405884]
[-128.70558167 136.90144348]
[-113.91831970 134.38415527]
[-99.13105011 131.86688232]
[-84.34378052 129.34959412]
[-78.96872711 113.01978302]
[-66.00926208 101.58874512]
[-48.96179199 98.26027679]
[-32.48659134 104.03580475]
[-21.13382912 117.41540527]
[-6.44521618 114.37490082]
[8.24339581 111.33439636]
[22.93200874 108.29388428]
[37.62062073 105.25337982]
[52.30923080 102.21287537]
[55.57606125 82.51229095]
[66.61526489 65.87133789]
[83.49542236 55.20150375]
[80.58538818 40.48648834]
[77.67536163 25.77147293]
[74.76532745 11.05645561]
[60.97750473 3.67878485]
[55.20571136 -10.85463905]
[60.17520905 -25.68157768]
[73.53955078 -33.80120468]
[88.98851013 -31.37967873]
[99.22755432 -19.56037140]
[99.42211914 -3.92399907]
[89.48033905 8.14642239]
[92.39037323 22.86143875]
[95.30040741 37.57645416]
[98.21044159 52.29147339]
[111.71083832 53.71649933]
[124.26435852 58.88373947]
[134.85601807 67.37539673]
[147.28164673 58.97279739]
[159.70727539 50.57019424]
[172.13290405 42.16759109]
[184.55853271 33.76498795]
[191.65602112 19.62511063]
[206.53321838 18.90501785]
[218.95884705 10.50241661]
[231.38447571 2.09981394]
[243.81010437 -6.30278826]
[247.02714539 -18.81441116]
[257.57553101 -25.55353546]
[269.49114990 -23.35848236]
[282.06396484 -31.53923035]
[294.63674927 -39.71997452]
[307.20956421 -47.90072250]
[319.78234863 -56.08147049]
[323.17230225 -71.28495789]
[336.03945923 -79.40229797]
[350.51275635 -76.07682037]
[363.08557129 -84.25756073]
[375.65835571 -92.43830872]
[382.60406494 -107.29392242]
[398.96334839 -108.43679047]
[407.90716553 -94.69124603]
[400.23489380 -80.19750977]
[383.83911133 -79.86550903]
[371.26629639 -71.68476105]
[358.69351196 -63.50401306]
[355.87051392 -48.92435837]
[343.23645020 -40.44881058]
[327.96310425 -43.50866699]
[315.39031982 -35.32791901]
[302.81750488 -27.14717293]
[290.24468994 -18.96642685]
[277.67190552 -10.78567982]
[270.59204102 5.25726509]
[252.21270752 6.12284136]
[239.78707886 14.52544403]
[227.36145020 22.92804527]
[214.93580627 31.33064842]
[208.72708130 44.86951828]
[192.96113586 46.19062042]
[180.53550720 54.59322357]
[168.10987854 62.99582291]
[155.68424988 71.39842987]
[143.25862122 79.80102539]
[149.15951538 95.95398712]
[149.02937317 113.70716858]
[142.49795532 130.81304932]
[153.42884827 141.08512878]
[164.35972595 151.35722351]
[175.29061890 161.62930298]
[186.22149658 171.90139771]
[197.15237427 182.17347717]
[208.08326721 192.44557190]
[220.99612427 192.83059692]
[229.89120483 201.63749695]
[230.37197876 213.74407959]
[241.11882019 224.20854187]
[257.13870239 227.71505737]
[261.85339355 243.42187500]
[250.41282654 255.17114258]
[234.58609009 250.87625122]
[230.65435791 234.95539856]
[219.90750122 224.49092102]
[202.69987488 221.11483765]
[197.81117249 203.37644958]
[186.88029480 193.10437012]
[175.94940186 182.83227539]
[165.01852417 172.56019592]
[154.08764648 162.28810120]
[143.15675354 152.01602173]
[132.22587585 141.74392700]
[119.16944885 149.12835693]
[122.34018707 163.78939819]
[125.51092529 178.45045471]
[134.76875305 192.65357971]
[123.68350983 205.48143005]
[108.28827667 198.38050842]
[110.84987640 181.62118530]
[107.67913818 166.96014404]
[104.50839233 152.29908752]
[93.30650330 151.26609802]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 73]
[5 72]
[6 71]
[7 70]
[8 69]
[9 68]
[16 63]
[17 62]
[18 61]
[19 60]
[20 58]
[21 57]
[22 56]
[23 55]
[26 52]
[27 51]
[28 50]
[29 49]
[34 46]
[35 45]
[36 44]
[76 90]
[77 89]
[78 88]
[79 87]
[93 139]
[94 138]
[95 137]
[96 136]
[97 135]
[99 133]
[100 132]
[101 131]
[102 130]
[105 128]
[106 127]
[107 126]
[108 125]
[109 124]
[112 121]
[113 120]
[114 119]
[142 166]
[143 165]
[144 164]
[145 163]
[146 162]
[147 161]
[148 160]
[151 158]
[152 157]
[167 175]
[168 174]
[169 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
