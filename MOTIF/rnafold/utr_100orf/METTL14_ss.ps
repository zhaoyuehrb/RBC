%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:43:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGCCAAUUCCGGCCGCGCCGGAAGUCUCUACUGAGGAAAGCUAUGAGGAUACUCUGUUCGUAAGCUCCCGGUGAAUUUUGUUCCACAGACUCGGAAGAAAGGUUGGAUAAGAGUUCACUGGAGAUUGACAAGUACUCGGGAUAGUGAAAAGCCGGAGUUGGAACAUGGAUAGCCGCUUGCAGGAGAUCCGGGAGCGGCAGAAGUUACGGCGACAGCUCCUCGCGCAGCAGUUGGGAGCUGAAAGUGCCGACAGC\
AUUGGUGCCG\
) } def
/len { sequence length } bind def

/coor [
[438.51431274 278.63336182]
[418.93234253 265.48330688]
[408.48330688 245.15289307]
[409.14813232 223.03355408]
[395.27304077 217.33424377]
[381.39797974 211.63493347]
[367.52288818 205.93562317]
[353.64779663 200.23631287]
[339.77273560 194.53700256]
[325.89764404 188.83769226]
[312.02255249 183.13838196]
[298.14749146 177.43908691]
[284.27239990 171.73977661]
[270.39730835 166.04046631]
[256.39151001 160.67045593]
[242.26275635 155.63275146]
[228.13400269 150.59504700]
[209.39210510 155.42961121]
[196.62705994 139.79966736]
[182.38327026 135.09707642]
[167.87193298 138.45422363]
[157.19317627 126.78054810]
[142.94938660 122.07794952]
[124.60482788 141.55343628]
[98.70799255 148.27438354]
[73.20772552 140.17785645]
[63.04850006 151.21371460]
[52.88927460 162.24957275]
[42.73005295 173.28543091]
[39.67380905 189.39726257]
[24.10528374 194.55023193]
[12.04003906 183.44338989]
[15.88976479 167.50251770]
[31.69419289 163.12620544]
[41.85341644 152.09034729]
[52.01264191 141.05448914]
[62.17186356 130.01863098]
[60.18506622 127.32868195]
[58.38919449 124.50769043]
[56.79286194 121.56916809]
[42.49452591 126.10321808]
[28.19618797 130.63726807]
[13.89785194 135.17131042]
[-0.37346005 139.78971863]
[-14.61725044 144.49230957]
[-28.86104202 149.19491577]
[-43.10483170 153.89750671]
[-57.34862137 158.60009766]
[-61.10035324 173.56433105]
[-72.36241150 184.10803223]
[-87.54111481 186.86674500]
[-101.79299164 180.96018982]
[-110.57032776 168.27310181]
[-111.07229614 152.85391235]
[-103.13873291 139.62281799]
[-89.30120087 132.80180359]
[-73.97520447 134.56742859]
[-62.05121994 144.35630798]
[-47.80743027 139.65371704]
[-33.56364059 134.95111084]
[-19.31984901 130.24851990]
[-5.07605791 125.54592133]
[0.27218097 120.48186493]
[9.36380482 120.87297058]
[23.66214180 116.33892822]
[37.96047592 111.80487823]
[52.25881195 107.27082825]
[52.56798172 90.92863464]
[58.31095123 75.62564850]
[46.69474792 66.13545227]
[35.07854843 56.64524841]
[23.46234703 47.15505219]
[11.84614563 37.66485214]
[0.22994503 28.17465401]
[-11.38625622 18.68445396]
[-23.00245667 9.19425583]
[-34.61865616 -0.29594278]
[-46.23485947 -9.78614140]
[-57.85105896 -19.27634048]
[-69.46726227 -28.76653862]
[-84.98166656 -27.37335587]
[-96.62695312 -37.16324615]
[-97.85953522 -51.96244431]
[-109.47573090 -61.45264435]
[-121.09193420 -70.94284058]
[-132.70812988 -80.43304443]
[-146.53559875 -74.06417847]
[-161.69531250 -74.32939911]
[-175.18135071 -81.12254333]
[-184.34294128 -93.04840851]
[-187.40541077 -107.70892334]
[-183.81376648 -122.18530273]
[-195.42997742 -131.67550659]
[-211.69410706 -133.77552795]
[-217.75691223 -149.01280212]
[-207.38150024 -161.71250916]
[-191.24121094 -158.81030273]
[-185.93977356 -143.29170227]
[-174.32357788 -133.80149841]
[-160.85429382 -140.20805359]
[-145.87753296 -140.13087463]
[-132.36412048 -133.53172302]
[-123.01788330 -121.67137146]
[-119.73465729 -106.86909485]
[-123.21793365 -92.04924011]
[-111.60173798 -82.55904388]
[-99.98553467 -73.06884766]
[-88.36933136 -63.57864761]
[-73.62161255 -65.32226562]
[-61.70593643 -55.86333466]
[-59.97706223 -40.38274002]
[-48.36086273 -30.89254189]
[-36.74465942 -21.40234184]
[-25.12845993 -11.91214371]
[-13.51225853 -2.42194486]
[-1.89605713 7.06825399]
[9.72014427 16.55845261]
[21.33634567 26.04865074]
[32.95254517 35.53884888]
[44.56874847 45.02904892]
[56.18494797 54.51924896]
[67.80114746 64.00944519]
[74.11898041 59.22919083]
[81.13337708 55.54624557]
[88.65554810 53.05972672]
[96.48303986 51.83655930]
[104.40518951 51.90966797]
[112.20877838 53.27707672]
[119.68378448 55.90198898]
[126.62901306 59.71375656]
[132.85755920 64.60978699]
[138.20176697 70.45831299]
[142.51780701 77.10192108]
[145.68952942 84.36181641]
[147.63156128 92.04259491]
[148.29164124 99.93753815]
[147.65199280 107.83415985]
[161.89578247 112.53675842]
[177.42591858 109.51596832]
[187.08587646 120.85328674]
[201.32966614 125.55587769]
[210.70698547 120.12868500]
[221.30557251 120.72682953]
[229.66030884 126.91407013]
[233.17170715 136.46629333]
[247.30046082 141.50399780]
[261.42919922 146.54170227]
[265.59725952 145.63008118]
[269.45739746 146.03224182]
[272.63903809 147.49461365]
[274.89004517 149.67037964]
[276.09661865 152.16537476]
[289.97171021 157.86468506]
[303.84680176 163.56399536]
[317.72186279 169.26330566]
[331.59695435 174.96261597]
[345.47204590 180.66192627]
[359.34710693 186.36123657]
[373.22219849 192.06054688]
[387.09729004 197.75984192]
[400.97235107 203.45915222]
[414.84744263 209.15846252]
[419.97537231 201.56459045]
[426.66809082 195.10517883]
[434.67352295 190.10299683]
[443.67306519 186.82453918]
[453.29412842 185.46636963]
[463.12557983 186.14427185]
[472.73535156 188.88577271]
[481.68933105 193.62648010]
[489.57104492 200.21058655]
[496.00076294 208.39543152]
[500.65380859 217.86024475]
[514.89758301 213.15765381]
[529.14141846 208.45504761]
[543.38519287 203.75245667]
[557.62896729 199.04985046]
[571.87274170 194.34725952]
[586.11657715 189.64466858]
[590.73895264 177.01512146]
[601.62609863 169.45523071]
[614.68591309 169.53422546]
[625.16412354 176.99978638]
[639.46246338 172.46574402]
[650.11614990 159.99856567]
[666.18829346 163.25697327]
[671.14526367 178.88900757]
[659.88775635 190.81376648]
[643.99645996 186.76408386]
[629.69812012 191.29812622]
[622.58654785 206.55500793]
[606.31512451 212.04045105]
[590.81915283 203.88845825]
[576.57537842 208.59104919]
[562.33154297 213.29365540]
[548.08776855 217.99624634]
[533.84399414 222.69883728]
[519.60021973 227.40144348]
[505.35641479 232.10403442]
[503.30142212 239.31701660]
[518.05609131 242.01893616]
[532.83300781 239.44171143]
[542.86926270 250.58955383]
[538.75964355 265.01559448]
[524.35534668 269.20098877]
[513.15472412 259.22277832]
[499.19146729 253.74298096]
[497.13650513 260.95596313]
[506.76321411 272.45925903]
[516.38995361 283.96258545]
[526.01666260 295.46588135]
[535.64337158 306.96920776]
[557.69470215 303.41186523]
[577.10931396 324.37710571]
[588.94641113 333.59030151]
[600.78350830 342.80349731]
[612.62060547 352.01666260]
[624.45770264 361.22985840]
[636.29479980 370.44305420]
[648.13195801 379.65625000]
[659.96905518 388.86944580]
[675.61169434 391.23986816]
[680.90289307 405.16293335]
[692.74005127 414.37612915]
[708.38995361 412.17279053]
[720.96368408 421.74758911]
[723.00146484 437.41995239]
[713.29425049 449.89175415]
[697.60125732 451.76370239]
[685.23278809 441.92517090]
[683.52685547 426.21322632]
[671.68975830 417.00003052]
[656.89379883 415.28860474]
[650.75585938 400.70654297]
[638.91876221 391.49334717]
[627.08166504 382.28015137]
[615.24450684 373.06698608]
[603.40740967 363.85379028]
[591.57031250 354.64059448]
[579.73321533 345.42739868]
[567.89611816 336.21420288]
[561.84411621 340.64407349]
[549.74017334 349.50378418]
[543.68823242 353.93365479]
[548.89245605 368.00192261]
[554.09667969 382.07019043]
[559.30090332 396.13845825]
[564.50506592 410.20672607]
[578.42095947 418.18972778]
[580.71343994 434.06814575]
[569.62396240 445.66140747]
[553.65942383 444.07614136]
[545.06646729 430.52844238]
[550.43682861 415.41094971]
[545.23260498 401.34268188]
[540.02838135 387.27441406]
[534.82415771 373.20614624]
[529.61993408 359.13787842]
[517.86151123 344.36831665]
[516.84606934 328.14874268]
[524.14007568 316.59591675]
[514.51336670 305.09262085]
[504.88662720 293.58929443]
[495.25991821 282.08599854]
[485.63317871 270.58267212]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 162]
[5 161]
[6 160]
[7 159]
[8 158]
[9 157]
[10 156]
[11 155]
[12 154]
[13 153]
[14 152]
[15 147]
[16 146]
[17 145]
[19 141]
[20 140]
[22 138]
[23 137]
[26 37]
[27 36]
[28 35]
[29 34]
[40 67]
[41 66]
[42 65]
[43 64]
[44 62]
[45 61]
[46 60]
[47 59]
[48 58]
[69 122]
[70 121]
[71 120]
[72 119]
[73 118]
[74 117]
[75 116]
[76 115]
[77 114]
[78 113]
[79 112]
[80 111]
[83 108]
[84 107]
[85 106]
[86 105]
[92 99]
[93 98]
[173 199]
[174 198]
[175 197]
[176 196]
[177 195]
[178 194]
[179 193]
[183 190]
[184 189]
[208 265]
[209 264]
[210 263]
[211 262]
[212 261]
[214 241]
[215 240]
[216 239]
[217 238]
[218 237]
[219 236]
[220 235]
[221 234]
[223 232]
[224 231]
[244 258]
[245 257]
[246 256]
[247 255]
[248 254]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
