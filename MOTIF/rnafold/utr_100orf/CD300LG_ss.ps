%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:05:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGACCCGUGUGACUGAAGAGGAGCUCACAGUUCCCAGCGUCUGCUCCCACGGUGUCCAGCGCCCAGAAUGCGGCUUCUGGUCCUGCUAUGGGGUUGCCUGCUGCUCCCAGGUUAUGAAGCCCUGGAGGGCCCAGAGGAAAUCAGCGGGUUCGAAGGGGACACUGUGU\
) } def
/len { sequence length } bind def

/coor [
[-49.75899506 278.66986084]
[-37.12903214 286.76208496]
[-26.86220360 297.69790649]
[-19.58229065 310.81289673]
[-15.73160362 325.31021118]
[-15.54410076 340.30905151]
[-19.03117371 354.89810181]
[-25.98095703 368.19097900]
[-35.97119904 379.38003540]
[-48.39492035 387.78546143]
[-62.49728394 392.89654541]
[-77.42146301 394.40280151]
[-92.26071167 392.21264648]
[-106.11343384 386.45919800]
[-118.13796234 377.49200439]
[-127.60372162 365.85586548]
[-133.93560791 352.25781250]
[-136.74890137 337.52398682]
[-135.87266541 322.54962158]
[-131.36015320 308.24447632]
[-123.48552704 295.47769165]
[-112.72487640 285.02322388]
[-127.22565460 288.86087036]
[-141.72642517 292.69848633]
[-156.22720337 296.53613281]
[-170.72798157 300.37377930]
[-178.70327759 313.75408936]
[-193.46380615 317.43942261]
[-206.17071533 309.75372314]
[-220.67149353 313.59136963]
[-228.20222473 318.83175659]
[-235.47572327 317.36331177]
[-250.04493713 320.93234253]
[-264.61416626 324.50137329]
[-278.55975342 334.14273071]
[-291.68487549 323.41113281]
[-285.00607300 307.82812500]
[-268.18319702 309.93212891]
[-253.61396790 306.36312866]
[-239.04475403 302.79409790]
[-224.50914001 299.09060669]
[-210.00836182 295.25296021]
[-202.76669312 282.28784180]
[-188.11550903 278.18936157]
[-174.56562805 285.87301636]
[-160.06484985 282.03536987]
[-145.56407166 278.19772339]
[-131.06329346 274.36007690]
[-116.56251526 270.52243042]
[-103.19741821 263.71258545]
[-91.56935883 254.23690796]
[-79.94129944 244.76124573]
[-68.31324005 235.28558350]
[-56.68518066 225.80992126]
[-45.05712128 216.33425903]
[-33.42906189 206.85859680]
[-21.80100060 197.38291931]
[-10.17294216 187.90725708]
[1.45511794 178.43159485]
[2.18523717 160.16844177]
[16.24755287 148.00022888]
[35.05937195 149.96757507]
[46.32934952 140.06871033]
[57.41448212 129.96327209]
[68.31098938 119.65472412]
[79.20748901 109.34617615]
[77.27494049 98.19690704]
[80.94149017 87.49189758]
[89.30375671 79.86869049]
[100.30140686 77.20551300]
[111.22479248 80.15854645]
[122.49477386 70.25967407]
[120.69910431 53.45972061]
[129.17410278 39.03553772]
[144.41821289 32.55670547]
[160.36212158 36.38805008]
[171.44726562 26.28261757]
[182.53239441 16.17718315]
[193.61752319 6.07174778]
[204.70266724 -4.03368664]
[215.78779602 -14.13912106]
[226.87292480 -24.24455643]
[237.86421204 -34.45198441]
[248.76072693 -44.76053619]
[259.65722656 -55.06908417]
[270.55374146 -65.37763214]
[274.65875244 -73.58264923]
[281.74813843 -75.77369690]
[292.83325195 -85.87912750]
[303.91839600 -95.98456573]
[308.17431641 -104.11231995]
[315.30300903 -106.17198944]
[326.57296753 -116.07085419]
[337.84295654 -125.96971893]
[343.10543823 -140.89007568]
[357.77386475 -143.47583008]
[369.04385376 -153.37469482]
[379.94036865 -163.68325806]
[390.44848633 -174.38740540]
[400.95663452 -185.09155273]
[411.46478271 -195.79571533]
[421.97293091 -206.49986267]
[420.28616333 -222.04620361]
[429.02990723 -235.01080322]
[444.07568359 -239.27215576]
[458.31927490 -232.81819153]
[465.03533936 -218.69627380]
[461.05276489 -203.57434082]
[448.25195312 -194.59251404]
[432.67709351 -195.99171448]
[422.16894531 -185.28756714]
[411.66079712 -174.58340454]
[401.15264893 -163.87925720]
[390.64450073 -153.17510986]
[390.55657959 -150.33592224]
[389.31631470 -147.36174011]
[386.86700439 -144.70001221]
[383.31771851 -142.81016541]
[378.94271851 -142.10472107]
[367.67272949 -132.20585632]
[363.21636963 -117.99353790]
[347.74182129 -114.69974518]
[336.47183228 -104.80087280]
[325.20187378 -94.90200806]
[314.02383423 -84.89942932]
[302.93869019 -74.79399109]
[291.85357666 -64.68856049]
[280.86227417 -54.48113251]
[269.96578979 -44.17258072]
[259.06927490 -33.86403275]
[248.17277527 -23.55548096]
[245.46414185 -16.64726257]
[236.97836304 -13.15942192]
[225.89323425 -3.05398750]
[214.80809021 7.05144691]
[203.72296143 17.15688133]
[192.63783264 27.26231575]
[181.55270386 37.36775208]
[170.46755981 47.47318649]
[173.16969299 60.56973267]
[169.00482178 73.39100647]
[158.96191406 82.54551697]
[145.59933472 85.55612183]
[132.39364624 81.52965546]
[121.12366486 91.42852020]
[120.75994110 109.41828918]
[107.46262360 121.54039764]
[89.51604462 120.24267578]
[78.61953735 130.55122375]
[67.72303772 140.85977173]
[65.45133209 147.13626099]
[61.00407791 150.75337219]
[56.22821808 151.33868408]
[44.95824051 161.23754883]
[46.51519012 173.07081604]
[42.19347382 184.06718445]
[33.18142700 191.52079773]
[21.80560303 193.65829468]
[10.93078327 190.05964661]
[-0.69727665 199.53532410]
[-12.32533646 209.01098633]
[-23.95339584 218.48664856]
[-35.58145523 227.96231079]
[-47.20951462 237.43797302]
[-58.83757401 246.91365051]
[-70.46563721 256.38931274]
[-82.09369659 265.86495972]
[-93.72175598 275.34063721]
[-78.94189453 272.78021240]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 49]
[23 48]
[24 47]
[25 46]
[26 45]
[29 42]
[30 41]
[32 40]
[33 39]
[34 38]
[50 168]
[51 167]
[52 166]
[53 165]
[54 164]
[55 163]
[56 162]
[57 161]
[58 160]
[59 159]
[62 154]
[63 153]
[64 150]
[65 149]
[66 148]
[71 145]
[72 144]
[76 139]
[77 138]
[78 137]
[79 136]
[80 135]
[81 134]
[82 133]
[83 131]
[84 130]
[85 129]
[86 128]
[88 127]
[89 126]
[90 125]
[92 124]
[93 123]
[94 122]
[96 120]
[97 119]
[98 114]
[99 113]
[100 112]
[101 111]
[102 110]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
