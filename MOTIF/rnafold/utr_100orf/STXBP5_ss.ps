%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:47:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCGCAGUAUUUCCUGUUCGGAUUAUCUUUUGCUUCCCCCCAGCUGCCUCCUUACCCUCACACUCCCACUCCUCCGUUUCCGCGGUCGAAGCUGCCUUCGGCCCCGGGUGGUCUCCCCCGCCCGGGGACCCCCUGUGCCUCCCCUCCCGGGCUGCGGGGGAGCCCCUCCGAGACCAUGAGGAAAUUCAACAUCAGGAAGGUGCUGGACGGCCUGACCGCCGGCUCGUCCUCGGCGUCGCAGCAGCAACAGCAGCA\
GCAUCCGCCUGGGAACCGGG\
) } def
/len { sequence length } bind def

/coor [
[112.88140106 155.08621216]
[97.95150757 156.53477478]
[96.50276947 141.60536194]
[89.03784180 142.32986450]
[82.90561676 156.01911926]
[76.77338409 169.70838928]
[70.64115143 183.39764404]
[81.96927643 198.02952576]
[84.25462341 216.30619812]
[76.94633484 233.12001038]
[62.16241455 243.81681824]
[44.07675552 245.48416138]
[38.41547012 259.37478638]
[32.75418091 273.26544189]
[37.62753296 288.55038452]
[28.59630394 301.80996704]
[12.58847904 302.87255859]
[1.88389134 290.92303467]
[4.69418478 275.12802124]
[18.86354256 267.60415649]
[24.52482986 253.71350098]
[30.18611908 239.82287598]
[21.77778053 231.66786194]
[16.58187675 221.13140869]
[15.22294712 209.42758179]
[17.88192749 197.91365051]
[24.27243996 187.93270874]
[33.67145538 180.65704346]
[45.00102234 176.95034790]
[56.95189667 177.26541138]
[63.08412552 163.57615662]
[69.21635437 149.88690186]
[75.34858704 136.19763184]
[67.35321045 126.96807098]
[62.46054840 116.22375488]
[60.86435699 104.93519592]
[62.47167587 94.05723572]
[66.92756653 84.44861603]
[73.66130066 76.80415344]
[81.94883728 71.60500336]
[76.92564392 57.47108841]
[71.90245056 43.33717346]
[66.87925720 29.20326233]
[61.85606003 15.06934738]
[56.05540085 8.06392002]
[56.85712814 0.74587208]
[51.99513626 -13.44430161]
[47.13314438 -27.63447571]
[42.27115250 -41.82464981]
[37.32847977 -55.98692322]
[32.30528259 -70.12083435]
[27.28208923 -84.25475311]
[15.00019360 -82.33064270]
[2.57285309 -82.47598267]
[-9.65377712 -84.68556213]
[-21.33932686 -88.89666748]
[-32.15868378 -94.99091339]
[-41.81104660 -102.79752350]
[-50.02827454 -112.09812164]
[-56.58235550 -122.63287354]
[-61.29170609 -134.10771179]
[-64.02622986 -146.20256042]
[-64.71089172 -158.58024597]
[-63.32778549 -170.89591980]
[-59.91659927 -182.80665588]
[-54.57347488 -193.98100281]
[-47.44830322 -204.10818481]
[-38.74051285 -212.90678406]
[-28.69348907 -220.13253784]
[-17.58778000 -225.58511353]
[-21.63473129 -240.02888489]
[-25.68168259 -254.47264099]
[-29.72863388 -268.91641235]
[-33.77558517 -283.36016846]
[-48.80512619 -296.83145142]
[-43.10752869 -315.33206177]
[-47.48221970 -329.67993164]
[-51.85690689 -344.02783203]
[-56.23159790 -358.37573242]
[-60.60628510 -372.72363281]
[-77.15025330 -370.49993896]
[-94.79339600 -376.83859253]
[-109.03939056 -392.01763916]
[-115.50279999 -413.98464966]
[-128.22955322 -421.92376709]
[-140.95629883 -429.86291504]
[-153.68304443 -437.80206299]
[-166.40979004 -445.74118042]
[-179.13655090 -453.68032837]
[-191.86329651 -461.61944580]
[-204.59004211 -469.55859375]
[-220.98918152 -469.57739258]
[-228.93685913 -483.92196655]
[-220.25718689 -497.83581543]
[-203.87907410 -497.00558472]
[-196.65090942 -482.28533936]
[-183.92416382 -474.34619141]
[-171.19741821 -466.40707397]
[-158.47065735 -458.46792603]
[-145.74391174 -450.52880859]
[-133.01716614 -442.58966064]
[-120.29041290 -434.65054321]
[-107.56365967 -426.71139526]
[-102.20034027 -431.95397949]
[-91.47370148 -442.43917847]
[-86.11037445 -447.68176270]
[-93.75775146 -460.58593750]
[-101.40512848 -473.49011230]
[-109.05250549 -486.39428711]
[-116.69987488 -499.29846191]
[-124.34725189 -512.20263672]
[-139.71878052 -515.87573242]
[-147.91949463 -529.38586426]
[-144.08406067 -544.71771240]
[-130.48797607 -552.77514648]
[-115.19755554 -548.77783203]
[-107.28433228 -535.09729004]
[-111.44307709 -519.84997559]
[-103.79570770 -506.94583130]
[-96.14833069 -494.04165649]
[-88.50095367 -481.13748169]
[-80.85358429 -468.23330688]
[-73.20620728 -455.32913208]
[-58.46998215 -458.12979126]
[-56.08974075 -472.93975830]
[-53.70950317 -487.74969482]
[-51.32926559 -502.55963135]
[-60.31914902 -515.28045654]
[-57.69427490 -530.26593018]
[-45.51149750 -538.75805664]
[-43.13125992 -553.56799316]
[-40.75102234 -568.37792969]
[-38.37078476 -583.18786621]
[-35.99054337 -597.99780273]
[-33.61030579 -612.80773926]
[-31.23006821 -627.61773682]
[-28.93415642 -642.44097900]
[-26.72264290 -657.27703857]
[-24.51113129 -672.11309814]
[-22.29961967 -686.94921875]
[-33.46524048 -697.72454834]
[-36.13165665 -713.01080322]
[-29.27357674 -726.93011475]
[-15.52807236 -734.13018799]
[-0.18056926 -731.84240723]
[10.86750317 -720.94653320]
[13.36793613 -705.63226318]
[6.35926199 -691.78820801]
[-7.46354103 -684.73767090]
[-9.67505360 -669.90161133]
[-11.88656521 -655.06555176]
[-14.09807777 -640.22943115]
[-11.98419476 -633.17761230]
[-16.42012405 -625.23748779]
[-18.80036163 -610.42755127]
[-21.18059921 -595.61755371]
[-23.56083870 -580.80761719]
[-25.94107628 -565.99768066]
[-28.32131386 -551.18774414]
[-30.70155334 -536.37780762]
[-21.79324722 -524.49597168]
[-23.99617386 -509.44268799]
[-36.51932144 -500.17938232]
[-38.89955902 -485.36944580]
[-41.27979660 -470.55950928]
[-43.66003418 -455.74957275]
[-24.22232437 -434.98718262]
[-19.75942421 -409.56369019]
[-28.97677612 -388.28176880]
[-46.25839233 -377.09832764]
[-41.88370132 -362.75042725]
[-37.50901413 -348.40252686]
[-33.13432312 -334.05462646]
[-28.75963402 -319.70672607]
[-19.38614273 -315.75750732]
[-13.59487534 -307.13055420]
[-13.48467445 -296.52148438]
[-19.33182716 -287.40710449]
[-15.28487492 -272.96334839]
[-11.23792362 -258.51959229]
[-7.19097185 -244.07583618]
[-3.14402032 -229.63206482]
[14.52509689 -230.58642578]
[31.92445564 -227.32493591]
[48.06212616 -220.02993774]
[62.01724625 -209.11375427]
[72.99256134 -195.19551086]
[80.36000061 -179.06594849]
[83.69656372 -161.64250183]
[82.80866241 -143.91716003]
[77.74332428 -126.89993286]
[68.78570557 -111.56134796]
[56.44306183 -98.77708435]
[41.41600418 -89.27794647]
[46.43919754 -75.14402771]
[51.46239090 -61.01011658]
[56.64343643 -55.78007126]
[56.46132660 -46.68664169]
[61.32331848 -32.49646759]
[66.18531036 -18.30629349]
[71.04730225 -4.11611986]
[75.98997498 10.04615307]
[81.01316833 24.18006706]
[86.03636169 38.31398010]
[91.05955505 52.44789505]
[96.08274841 66.58181000]
[121.67672729 74.26598358]
[133.59785461 98.18218994]
[148.37974548 100.73085022]
[163.16163635 103.27950287]
[177.94352722 105.82816315]
[190.70899963 96.51052094]
[206.31100464 99.03102112]
[215.49316406 111.89429474]
[212.80784607 127.46878052]
[199.84822083 136.51441956]
[184.30299377 133.66459656]
[175.39488220 120.61005402]
[160.61299133 118.06139374]
[145.83110046 115.51274109]
[131.04919434 112.96408844]
[132.22898865 121.46135712]
[131.15208435 130.78163147]
[139.80229187 143.03617859]
[148.45249939 155.29072571]
[157.10270691 167.54527283]
[165.89183044 179.70057678]
[174.81874084 191.75503540]
[183.74566650 203.80950928]
[192.67257690 215.86396790]
[207.10337830 222.34953308]
[208.45979309 237.18225098]
[217.38671875 249.23672485]
[226.31362915 261.29119873]
[235.24053955 273.34564209]
[252.60382080 275.62057495]
[262.73446655 289.48754883]
[259.74282837 306.05462646]
[268.80636597 318.00671387]
[283.31005859 324.32760620]
[284.83523560 339.14392090]
[293.89877319 351.09597778]
[308.40246582 357.41687012]
[309.92761230 372.23318481]
[318.99114990 384.18527222]
[334.30770874 390.04489136]
[336.62384033 406.27966309]
[323.55691528 416.18862915]
[308.54907227 409.57827759]
[307.03909302 393.24880981]
[297.97552490 381.29672241]
[284.12014771 375.83074951]
[281.94668579 360.15954590]
[272.88314819 348.20745850]
[259.02774048 342.74145508]
[256.85430908 327.07025146]
[247.79075623 315.11816406]
[234.92787170 315.17208862]
[224.21577454 307.70584106]
[219.68168640 295.25393677]
[223.18608093 282.27255249]
[214.25915527 270.21810913]
[205.33224487 258.16363525]
[196.40533447 246.10916138]
[182.61303711 240.48582458]
[180.61811829 224.79089355]
[171.69119263 212.73641968]
[162.76428223 200.68196106]
[153.83735657 188.62748718]
[149.36547852 187.05235291]
[145.81961060 182.67285156]
[144.84815979 176.19548035]
[136.19795227 163.94093323]
[127.54774475 151.68638611]
[118.89753723 139.43183899]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 33]
[5 32]
[6 31]
[7 30]
[12 22]
[13 21]
[14 20]
[40 206]
[41 205]
[42 204]
[43 203]
[44 202]
[46 201]
[47 200]
[48 199]
[49 198]
[50 196]
[51 195]
[52 194]
[70 182]
[71 181]
[72 180]
[73 179]
[74 178]
[76 174]
[77 173]
[78 172]
[79 171]
[80 170]
[84 103]
[85 102]
[86 101]
[87 100]
[88 99]
[89 98]
[90 97]
[91 96]
[106 123]
[107 122]
[108 121]
[109 120]
[110 119]
[111 118]
[124 166]
[125 165]
[126 164]
[127 163]
[130 160]
[131 159]
[132 158]
[133 157]
[134 156]
[135 155]
[136 154]
[137 152]
[138 151]
[139 150]
[140 149]
[208 221]
[209 220]
[210 219]
[211 218]
[223 275]
[224 274]
[225 273]
[226 272]
[227 269]
[228 268]
[229 267]
[230 266]
[232 264]
[233 263]
[234 262]
[235 261]
[238 257]
[239 256]
[241 254]
[242 253]
[244 251]
[245 250]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
