%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:55:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUCUCAUUCCACGUUCUUAACUGUUCCAUUUUCCGUAUCUGCUUCGGGCUUCCACCUCAUUUUUUUCGCUUUGCCCAUUCUGUUUCAGCCAGUCGCCAAGAAUCAUGAAAGUCGCCAGUGGCAGCACCGCCACCGCCGCCGCGGGCCCCAGCUGCGCGCUGAAGGCCGGCAAGACAGCGAGCGGUGCGGGCGAGGUGGUGCGCU\
) } def
/len { sequence length } bind def

/coor [
[58.15538025 235.98182678]
[72.00041199 241.75373840]
[84.75828552 249.64276123]
[96.10783386 259.45028687]
[105.76335144 270.92944336]
[113.48177338 283.79125977]
[119.06879425 297.71191406]
[122.38377380 312.34103394]
[123.34326172 327.31033325]
[121.92310333 342.24295044]
[118.15904999 356.76300049]
[112.14585876 370.50494385]
[104.03488922 383.12289429]
[94.03034210 394.29916382]
[82.38406372 403.75241089]
[69.38922119 411.24468994]
[55.37295914 416.58737183]
[40.68810272 419.64596558]
[25.70432854 420.34347534]
[10.79883194 418.66235352]
[-3.65316129 414.64492798]
[-17.28784370 408.39227295]
[-29.76198006 400.06185913]
[-40.76155090 389.86337280]
[-50.00966263 378.05349731]
[-57.27349854 364.92962646]
[-62.37020874 350.82205200]
[-65.17148590 336.08593750]
[-65.60681152 321.09225464]
[-63.66523743 306.21844482]
[-59.39562607 291.83892822]
[-52.90546417 278.31570435]
[-44.35813522 265.98916626]
[-33.96514893 255.16642761]
[-48.20245361 259.88861084]
[-62.43976212 264.61080933]
[-66.17089844 279.58016968]
[-77.41843414 290.13937378]
[-92.59333038 292.91897583]
[-106.85332489 287.03201294]
[-115.64810181 274.35702515]
[-116.17129517 258.93853760]
[-108.25593567 245.69653320]
[-94.42780304 238.85649109]
[-79.09939575 240.60104370]
[-67.16195679 250.37350464]
[-52.92464828 245.65130615]
[-38.68733978 240.92910767]
[-26.32760811 232.42988586]
[-16.82276535 220.82565308]
[-17.70697021 208.75898743]
[-9.87987709 199.01303101]
[2.88649321 197.15583801]
[12.56719398 185.69790649]
[22.24789429 174.23997498]
[31.92859459 162.78205872]
[41.60929489 151.32412720]
[51.28999710 139.86621094]
[60.97069550 128.40827942]
[49.64169312 138.23954773]
[34.85678101 140.77062988]
[20.90265274 135.26770020]
[11.82512093 123.32624054]
[10.25609589 108.40852356]
[16.65049553 94.83975220]
[29.15434837 86.55400085]
[44.14232635 85.95362091]
[57.26886749 93.21267700]
[64.72750092 106.22413635]
[59.35910416 92.21769714]
[53.99070358 78.21125793]
[48.62230301 64.20482635]
[43.25390625 50.19838715]
[28.16455460 47.69663620]
[16.43087006 38.04171753]
[11.14045048 23.90390205]
[13.62032413 9.11518383]
[23.10572433 -2.36927366]
[17.73732567 -16.37571144]
[12.36892509 -30.38214874]
[7.00052547 -44.38858414]
[1.63212562 -58.39502335]
[-13.49962139 -57.83917999]
[-27.99124718 -62.22911072]
[-40.27080917 -71.08863068]
[-49.00631332 -83.45672607]
[-53.25019455 -97.99179077]
[-52.54211044 -113.11717987]
[-46.95886993 -127.19219208]
[-37.10609818 -138.69009399]
[-24.05255127 -146.36366272]
[-9.21418190 -149.38052368]
[5.79945660 -147.41345215]
[19.35979652 -140.67581177]
[29.99591255 -129.89843750]
[36.55408096 -116.25038910]
[38.32291794 -101.21210480]
[35.11055374 -86.41482544]
[27.26544189 -73.46364594]
[15.63856316 -63.76342392]
[21.00696182 -49.75698471]
[26.37536240 -35.75054932]
[31.74376297 -21.74411011]
[37.11216354 -7.73767328]
[51.84355927 -5.53505182]
[63.57255554 3.80767846]
[69.08676910 17.85971832]
[66.81206512 32.88378143]
[57.26034164 44.82998657]
[62.62874222 58.83642197]
[67.99713898 72.84285736]
[73.36553955 86.84929657]
[78.73394012 100.85573578]
[86.06797791 85.48439789]
[101.53831482 81.10630798]
[108.57141113 67.85732269]
[115.60450745 54.60833740]
[117.69052887 37.78321075]
[134.43559265 35.13004684]
[141.62055969 50.48623657]
[128.85348511 61.64142990]
[121.82039642 74.89041901]
[114.78730011 88.13939667]
[114.84845734 113.57672119]
[88.21923065 117.72543335]
[103.10773468 119.55095673]
[112.01047516 117.48869324]
[118.20871735 121.51951599]
[133.06765747 123.57186890]
[147.92658997 125.62422180]
[162.78550720 127.67657471]
[171.71865845 125.75032043]
[177.85472107 129.87519836]
[192.68063354 132.15390015]
[207.50653076 134.43261719]
[222.33244324 136.71131897]
[237.15834045 138.99003601]
[252.00119019 141.15562439]
[266.86013794 143.20797729]
[281.71905518 145.26033020]
[302.39309692 134.74507141]
[319.66400146 149.08973694]
[334.63610840 150.00419617]
[348.88232422 143.12258911]
[361.11422729 151.62141418]
[376.08630371 152.53587341]
[391.05841064 153.45033264]
[406.03051758 154.36479187]
[422.31173706 145.76617432]
[436.55868530 156.00982666]
[451.54299927 156.69584656]
[466.52731323 157.38188171]
[481.51159668 158.06791687]
[494.28417969 148.36015320]
[509.80163574 152.43298340]
[516.16033936 167.16210938]
[508.48236084 181.24858093]
[492.65768433 183.88647461]
[480.82556152 173.05221558]
[465.84127808 172.36619568]
[450.85696411 171.68016052]
[435.87265015 170.99412537]
[426.72619629 178.91426086]
[414.23446655 178.46289062]
[405.11605835 169.33688354]
[390.14395142 168.42242432]
[375.17184448 167.50796509]
[360.19976807 166.59350586]
[347.02447510 173.54051208]
[333.72164917 164.97628784]
[318.74954224 164.06182861]
[314.76986694 169.95790100]
[308.93661499 174.14695740]
[301.94674683 176.07035828]
[294.65585327 175.44369507]
[287.97348022 172.29776001]
[282.74963379 166.98054504]
[279.66671753 160.11926270]
[264.80776978 158.06690979]
[249.94883728 156.01455688]
[242.89001465 158.21427917]
[234.87963867 153.81594849]
[220.05372620 151.53723145]
[205.22782898 149.25851440]
[190.40191650 146.97981262]
[175.57600403 144.70109558]
[160.73315430 142.53550720]
[145.87423706 140.48315430]
[131.01530457 138.43080139]
[116.15636444 136.37844849]
[101.28221893 134.43945312]
[86.39371490 132.61393738]
[72.42861938 138.08898926]
[62.74792099 149.54690552]
[53.06721878 161.00483704]
[43.38652039 172.46275330]
[33.70581818 183.92068481]
[24.02511787 195.37860107]
[14.34441757 206.83653259]
[11.50881195 225.02922058]
[-5.21854305 230.33050537]
[-14.72338581 241.93472290]
[-0.90256310 236.10507202]
[13.66632843 232.53471375]
[28.61653709 231.31355286]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 48]
[35 47]
[36 46]
[49 202]
[50 201]
[53 199]
[54 198]
[55 197]
[56 196]
[57 195]
[58 194]
[59 193]
[69 113]
[70 112]
[71 111]
[72 110]
[73 109]
[78 104]
[79 103]
[80 102]
[81 101]
[82 100]
[115 123]
[116 122]
[117 121]
[125 192]
[126 191]
[128 190]
[129 189]
[130 188]
[131 187]
[133 186]
[134 185]
[135 184]
[136 183]
[137 182]
[138 180]
[139 179]
[140 178]
[142 171]
[143 170]
[145 168]
[146 167]
[147 166]
[148 165]
[150 162]
[151 161]
[152 160]
[153 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
