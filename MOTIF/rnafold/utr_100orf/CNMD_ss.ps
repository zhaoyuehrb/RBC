%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:03:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGUGCACCGUGUGUGCGCGCGGCGUUGAAAUGCCCUGCACGUCGGGGCAGCGGGACAGAUCCCAGGGUGCCCAGGGAGUCUCCAAGUGCCUCACUCCUCCCGCCGCAAACAUGACAGAGAACUCCGACAAAGUUCCCAUUGCCCUGGUGGGACCUGAUGACGUGGAAUUCUGCAGCCCCCCGGCGUACGCUACGCUGACGGUGAAGCCCU\
) } def
/len { sequence length } bind def

/coor [
[144.17974854 492.19012451]
[142.18513489 477.32330322]
[140.19052124 462.45651245]
[138.19589233 447.58972168]
[134.19119263 441.37881470]
[136.28356934 432.48803711]
[134.50946045 417.59332275]
[125.32117462 405.87051392]
[131.37197876 391.25207520]
[129.59788513 376.35736084]
[127.82378387 361.46264648]
[125.93937683 346.58148193]
[123.94476318 331.71469116]
[121.95014191 316.84790039]
[119.95552826 301.98110962]
[117.96090698 287.11431885]
[115.96629333 272.24752808]
[113.97167206 257.38073730]
[111.97705841 242.51394653]
[107.97235870 236.30300903]
[110.06472778 227.41226196]
[108.29062653 212.51754761]
[106.51653290 197.62283325]
[93.83442688 183.02597046]
[102.06404114 164.62335205]
[99.84934235 149.78775024]
[97.63464355 134.95214844]
[95.41994476 120.11654663]
[88.96211243 116.30256653]
[75.89829254 123.67388916]
[76.04646301 108.67459869]
[69.58863068 104.86061859]
[55.52733994 110.08364105]
[41.46604538 115.30666351]
[27.40474892 120.52968597]
[13.34345436 125.75271606]
[-0.71784019 130.97573853]
[-14.77913475 136.19876099]
[-22.74354172 150.12527466]
[-38.61887360 152.43901062]
[-50.22694016 141.36505127]
[-48.66302109 125.39840698]
[-35.12682343 116.78731537]
[-20.00215912 122.13746643]
[-5.94086456 116.91444397]
[8.12042999 111.69142151]
[22.18172455 106.46839142]
[36.24301910 101.24536896]
[50.30431366 96.02234650]
[64.36560822 90.79932404]
[67.12828064 76.05592346]
[55.91196442 66.09629822]
[44.69564819 56.13666153]
[33.47933197 46.17703247]
[22.26301765 36.21739960]
[11.04670143 26.25776672]
[-10.86416912 32.79861832]
[-32.98873901 13.83290577]
[-46.12476349 6.59102249]
[-59.26078796 -0.65086079]
[-72.45011139 -7.79521561]
[-85.69200134 -14.84165001]
[-98.93389893 -21.88808441]
[-112.17578888 -28.93451881]
[-127.99317932 -28.58688545]
[-135.59403992 -41.39611053]
[-148.83592224 -48.44254684]
[-165.19764709 -47.33517075]
[-174.11161804 -61.10009384]
[-166.40791321 -75.57714081]
[-150.01144409 -75.87357330]
[-141.78948975 -61.68444061]
[-128.54759216 -54.63800812]
[-113.67736053 -55.48964691]
[-105.12935638 -42.17641449]
[-91.88746643 -35.12997818]
[-78.64556885 -28.08354378]
[-65.40367889 -21.03710938]
[-58.02272034 -20.67003059]
[-52.01890564 -13.78688526]
[-38.88288116 -6.54500198]
[-25.74685669 0.69688118]
[-20.28873062 -4.44693613]
[-23.73998642 -19.04449844]
[-9.37247849 -14.73457146]
[-3.91435218 -19.87838745]
[-10.36532974 -33.42035675]
[-16.81630898 -46.96232224]
[-23.26728630 -60.50429153]
[-35.53776932 -72.20350647]
[-27.69257164 -87.23311615]
[-11.07855606 -83.85512543]
[-9.72531891 -66.95526886]
[-3.27434063 -53.41329956]
[3.17663741 -39.87133408]
[9.62761497 -26.32936668]
[23.23915100 -13.36526489]
[26.53409195 2.52066040]
[21.00633430 15.04145145]
[32.22264862 25.00108337]
[43.43896484 34.96071625]
[54.65528107 44.92034531]
[65.87159729 54.87997818]
[77.08791351 64.83961487]
[72.01956940 50.72182465]
[73.91310883 35.84181976]
[81.95437622 23.17935371]
[94.61688232 15.13815594]
[109.49690247 13.24469376]
[123.76972961 17.85840607]
[134.72595215 28.10346603]
[140.28572083 42.03504562]
[139.39364624 57.00849533]
[132.21903992 70.18138885]
[120.12086487 79.05443573]
[111.15029907 91.07645416]
[124.78636932 84.82685852]
[138.42243958 78.57725525]
[152.05851746 72.32765198]
[165.69459534 66.07804871]
[168.88598633 55.68080902]
[177.10319519 48.89573669]
[187.47990417 47.77653122]
[196.56436157 52.45269012]
[210.37963867 46.60991669]
[224.19491577 40.76714325]
[238.01020813 34.92436600]
[249.42568970 18.30903053]
[268.49319458 21.52371979]
[282.12927246 15.27411938]
[292.43948364 0.01653174]
[309.83398438 2.34241104]
[323.37594604 -4.10856724]
[332.50717163 -17.02875900]
[347.32485962 -15.51709747]
[360.86685181 -21.96807671]
[374.40881348 -28.41905403]
[387.95077515 -34.87003326]
[401.49273682 -41.32101059]
[415.03469849 -47.77198792]
[428.57666016 -54.22296524]
[435.27301025 -68.80167389]
[450.88018799 -72.51593018]
[463.42572021 -62.51646805]
[463.28573608 -46.47402573]
[450.56762695 -36.69498825]
[435.02764893 -40.68099976]
[421.48568726 -34.23001862]
[407.94372559 -27.77904320]
[394.40176392 -21.32806396]
[380.85977173 -14.87708664]
[367.31781006 -8.42610836]
[353.77584839 -1.97513032]
[345.61325073 10.48364449]
[329.82693481 9.43340015]
[316.28497314 15.88437843]
[311.94754028 27.17604637]
[300.71896362 32.66148758]
[288.37887573 28.91019249]
[274.74279785 35.15979385]
[272.06115723 45.01893616]
[264.23129272 51.91976929]
[253.67854309 53.40289307]
[243.85298157 48.73965073]
[230.03770447 54.58242416]
[216.22241211 60.42519760]
[202.40713501 66.26797485]
[191.90879822 82.50647736]
[171.94419861 79.71412659]
[158.30812073 85.96372986]
[144.67204285 92.21332550]
[131.03598022 98.46292877]
[117.39990234 104.71253204]
[110.25554657 117.90184784]
[112.47024536 132.73745728]
[114.68494415 147.57305908]
[116.89964294 162.40866089]
[126.00074005 168.36328125]
[130.23547363 178.14218140]
[128.42741394 188.42126465]
[121.41124725 195.84873962]
[123.18534088 210.74345398]
[124.95944214 225.63816833]
[126.84384918 240.51933289]
[128.83847046 255.38612366]
[130.83308411 270.25289917]
[132.82769775 285.11968994]
[134.82231140 299.98651123]
[136.81694031 314.85330200]
[138.81155396 329.72009277]
[140.80616760 344.58688354]
[145.04862976 352.67544556]
[142.71850586 359.68856812]
[144.49259949 374.58328247]
[146.26669312 389.47799683]
[155.58187866 402.26617432]
[149.40419006 415.81924438]
[151.17828369 430.71395874]
[153.06268311 445.59512329]
[155.05731201 460.46191406]
[157.05192566 475.32870483]
[159.04653931 490.19549561]
[173.28111267 495.96374512]
[182.71182251 508.08633423]
[184.80186462 523.30236816]
[178.98902893 537.51873779]
[166.83694458 546.91143799]
[151.61444092 548.95379639]
[137.41632080 543.09643555]
[128.06178284 530.91491699]
[126.06716919 515.68609619]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 202]
[2 201]
[3 200]
[4 199]
[6 198]
[7 197]
[9 195]
[10 194]
[11 193]
[12 191]
[13 190]
[14 189]
[15 188]
[16 187]
[17 186]
[18 185]
[19 184]
[21 183]
[22 182]
[23 181]
[25 177]
[26 176]
[27 175]
[28 174]
[32 50]
[33 49]
[34 48]
[35 47]
[36 46]
[37 45]
[38 44]
[51 104]
[52 103]
[53 102]
[54 101]
[55 100]
[56 99]
[58 82]
[59 81]
[60 80]
[61 78]
[62 77]
[63 76]
[64 75]
[66 73]
[67 72]
[86 96]
[87 95]
[88 94]
[89 93]
[116 173]
[117 172]
[118 171]
[119 170]
[120 169]
[124 167]
[125 166]
[126 165]
[127 164]
[129 160]
[130 159]
[132 156]
[133 155]
[135 153]
[136 152]
[137 151]
[138 150]
[139 149]
[140 148]
[141 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
