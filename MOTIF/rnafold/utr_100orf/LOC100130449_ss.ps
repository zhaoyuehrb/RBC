%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:18:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCCAGGCUGAGCAGACUCAGGAGGCGUCUCUCCGAGGGUGUGGGCUGUGAUGGGGCCCUGUGCACCCAUCCAGGCUGCCCAGACCAGGAGAGCACAGGUCAGCCGGACACAUGAUGGAAGCCUCCCCAGCCUCUGGCCUCCAGUCCCAA\
) } def
/len { sequence length } bind def

/coor [
[88.46607208 148.96313477]
[84.07270813 134.62095642]
[90.43237305 121.03374481]
[81.71621704 133.24147034]
[73.00006866 145.44920349]
[76.73501587 158.42933655]
[72.35667419 171.00051880]
[61.68360901 178.62527466]
[48.76191330 178.68963623]
[39.79532623 190.71463013]
[30.82873917 202.73960876]
[21.86215401 214.76460266]
[12.89556694 226.78958130]
[11.51769543 243.13075256]
[-3.43620229 249.86224365]
[-16.58283806 240.05928040]
[-14.39808083 223.80632019]
[0.87057924 217.82299805]
[9.83716583 205.79801941]
[18.80375290 193.77302551]
[27.77033806 181.74803162]
[36.73692703 169.72305298]
[33.59018707 153.23127747]
[43.51500702 139.27398682]
[60.79233932 136.73306274]
[69.50849152 124.52532196]
[78.22463989 112.31759644]
[78.68960571 97.32479858]
[70.74665833 84.60043335]
[62.67264557 71.95882416]
[54.46842194 59.40132523]
[46.26420212 46.84382629]
[38.05997849 34.28633118]
[29.85575485 21.72883224]
[21.65153313 9.17133617]
[10.81719685 7.53998137]
[2.85680079 0.33611223]
[0.26417664 -9.85499382]
[3.66883707 -19.57109261]
[-4.00943851 -32.45690155]
[-11.68771458 -45.34271240]
[-25.39857483 -53.23719406]
[-25.26671600 -68.13121796]
[-32.94499207 -81.01702881]
[-40.62326813 -93.90283203]
[-48.30154419 -106.78864288]
[-55.97982025 -119.67445374]
[-69.69068146 -127.56893921]
[-69.55882263 -142.46296692]
[-77.23709869 -155.34877014]
[-85.31111145 -167.99037170]
[-93.77310944 -180.37564087]
[-102.23509979 -192.76089478]
[-110.69709778 -205.14614868]
[-119.15908813 -217.53141785]
[-127.62108612 -229.91667175]
[-136.21061707 -242.21382141]
[-144.92677307 -254.42155457]
[-160.45066833 -258.46978760]
[-166.83268738 -273.18881226]
[-159.17707825 -287.28744507]
[-143.35658264 -289.95040894]
[-131.50732422 -279.13494873]
[-132.71903992 -263.13769531]
[-124.00288391 -250.92997742]
[-117.51556396 -247.29081726]
[-115.23582458 -238.37866211]
[-106.77383423 -225.99340820]
[-98.31183624 -213.60815430]
[-89.84984589 -201.22288513]
[-81.38784790 -188.83763123]
[-72.92584991 -176.45237732]
[-69.48197937 -175.45387268]
[-66.36666870 -172.70063782]
[-64.41642761 -168.37335205]
[-64.35128784 -163.02703857]
[-56.67301178 -150.14123535]
[-43.51135254 -143.16842651]
[-43.09400940 -127.35272980]
[-35.41573334 -114.46691895]
[-27.73745918 -101.58110809]
[-20.05918312 -88.69530487]
[-12.38090706 -75.80949402]
[0.78075159 -68.83668518]
[1.19809508 -53.02098846]
[8.87637043 -40.13517761]
[16.55464745 -27.24936867]
[34.07184982 -19.14928627]
[34.20903015 0.96711349]
[42.41325378 13.52461052]
[50.61747360 26.08210754]
[58.82169724 38.63960648]
[67.02591705 51.19710159]
[75.23014069 63.75460052]
[81.56153107 67.65873718]
[83.47103119 76.65748596]
[91.41397858 89.38185883]
[98.39868164 79.11685181]
[114.19781494 75.59582520]
[127.53465271 68.73077393]
[135.94949341 54.65518188]
[152.34039307 55.17537308]
[159.84577942 69.75621796]
[150.74476624 83.39820099]
[134.39968872 82.06761169]
[121.06285858 88.93265533]
[120.44298553 103.91984558]
[133.16735840 111.86278534]
[145.89172363 119.80573273]
[158.61610413 127.74868011]
[156.71423340 112.86973572]
[165.73840332 100.88790894]
[180.56402588 98.60736084]
[192.77200317 107.32315826]
[195.42976379 122.08582306]
[187.02799988 134.51202393]
[172.33674622 137.54502869]
[183.98091125 147.00088501]
[195.62509155 156.45675659]
[207.26925659 165.91261292]
[222.85955811 168.60580444]
[227.86193848 182.63525391]
[239.50610352 192.09112549]
[251.15026855 201.54698181]
[264.93795776 195.00004578]
[280.20080566 195.09231567]
[293.90835571 201.80545044]
[303.33892822 213.80656433]
[306.62011719 228.71282959]
[303.10043335 243.56457520]
[293.47872925 255.41300964]
[279.66534424 261.90557861]
[264.40298462 261.75320435]
[250.72200012 254.98614502]
[241.33874512 242.94799805]
[238.11627197 228.02893066]
[241.69441223 213.19114685]
[230.05024719 203.73529053]
[218.40606689 194.27943420]
[203.64865112 192.26257324]
[197.81340027 177.55677795]
[186.16923523 168.10092163]
[174.52505493 158.64506531]
[162.88088989 149.18920898]
[150.67315674 140.47305298]
[137.94877625 132.53010559]
[125.22441101 124.58715820]
[112.50003815 116.64421082]
[123.57428741 126.76158142]
[125.00533295 141.69316101]
[116.05432129 153.72975159]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 27]
[4 26]
[5 25]
[9 22]
[10 21]
[11 20]
[12 19]
[13 18]
[28 97]
[29 96]
[30 94]
[31 93]
[32 92]
[33 91]
[34 90]
[35 89]
[39 87]
[40 86]
[41 85]
[43 83]
[44 82]
[45 81]
[46 80]
[47 79]
[49 77]
[50 76]
[51 72]
[52 71]
[53 70]
[54 69]
[55 68]
[56 67]
[57 65]
[58 64]
[99 106]
[100 105]
[107 148]
[108 147]
[109 146]
[110 145]
[117 144]
[118 143]
[119 142]
[120 141]
[122 139]
[123 138]
[124 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
