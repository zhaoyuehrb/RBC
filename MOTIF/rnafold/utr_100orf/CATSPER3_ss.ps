%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:40:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGAAUCCAGACGCUAAGGAAAAUCCCUAAGCAGAGAUUUUCUGUUGGAUGCUAAAAGCAAGGAAUAAAAGUUGAAAAUUUGGAAAAUGUCUCAACACCGUCACCAGCGCCACUCGAGAGUCAUUUCUAGUUCACCAGUUGACACUACAUCGGUGGGAUUUUGCCCAACAUUCAAGAAAUUUAAGA\
) } def
/len { sequence length } bind def

/coor [
[144.75999451 230.45771790]
[139.10716248 216.56364441]
[133.45433044 202.66955566]
[127.80149841 188.77548218]
[122.14866638 174.88139343]
[116.49583435 160.98731995]
[110.84300232 147.09323120]
[105.19017029 133.19915771]
[80.32562256 122.51780701]
[73.80380249 99.46295166]
[59.52245712 94.87565613]
[45.24111557 90.28836060]
[30.95977402 85.70106506]
[16.04911995 87.33580780]
[3.10094213 94.90843964]
[-9.84723568 102.48106384]
[-22.79541397 110.05369568]
[-35.67952347 117.73481750]
[-48.49866104 125.52389526]
[-61.31779861 133.31297302]
[-74.13693237 141.10205078]
[-86.95606995 148.89112854]
[-99.77520752 156.68020630]
[-112.59434509 164.46928406]
[-125.41348267 172.25836182]
[-133.18946838 186.03677368]
[-148.08407593 186.03332520]
[-160.90321350 193.82240295]
[-168.30380249 208.45671082]
[-184.69055176 209.09448242]
[-193.20616150 195.07962036]
[-185.09051514 180.82942200]
[-168.69229126 181.00326538]
[-155.87315369 173.21418762]
[-149.01406860 159.99290466]
[-133.20256042 159.43922424]
[-120.38342285 151.65014648]
[-107.56428528 143.86106873]
[-94.74514771 136.07199097]
[-81.92601013 128.28291321]
[-69.10687256 120.49383545]
[-56.28773880 112.70475769]
[-43.46860123 104.91567993]
[-39.37630844 98.74253082]
[-30.36804199 97.10551453]
[-17.41986275 89.53289032]
[-4.47168589 81.96025848]
[8.47649193 74.38763428]
[-3.64087391 70.72093964]
[-14.00047112 60.18894196]
[-28.42785645 56.08399582]
[-42.85523987 51.97905350]
[-57.28262329 47.87410736]
[-74.17176819 49.35504532]
[-80.27021027 33.53590393]
[-66.75750732 23.29661369]
[-53.17768097 33.44672394]
[-38.75029373 37.55166626]
[-24.32291031 41.65661240]
[-9.89552593 45.76155853]
[-4.75041151 40.30465317]
[-15.66421795 30.01442337]
[-26.57802391 19.72419357]
[-37.49183273 9.43396473]
[-48.40546799 -0.85644615]
[-38.11487579 -11.76991081]
[-27.20160103 -1.47984195]
[-16.28779411 8.81038761]
[-5.37398815 19.10061646]
[5.53981829 29.39084625]
[10.68493366 23.93394470]
[5.73924303 9.77272415]
[0.79355299 -4.38849592]
[-4.15213728 -18.54971504]
[-9.09782696 -32.71093750]
[-24.98419189 -40.01119614]
[-30.57549286 -56.21982956]
[-22.87773514 -71.16194916]
[-28.06062508 -85.23809052]
[-33.24351501 -99.31422424]
[-38.42640305 -113.39036560]
[-49.57317352 -126.16478729]
[-40.38371658 -140.41224670]
[-24.14915466 -135.52600098]
[-24.35026360 -118.57324982]
[-19.16737556 -104.49711609]
[-13.98448658 -90.42097473]
[-8.80159760 -76.34484100]
[3.54815006 -72.62655640]
[11.61668777 -62.31631088]
[12.27693939 -49.04592514]
[5.06339264 -37.65662766]
[10.00908279 -23.49540520]
[14.95477295 -9.33418655]
[19.90046310 4.82703352]
[24.84615326 18.98825455]
[44.31568909 34.05174637]
[47.27709961 55.88832092]
[35.54706955 71.41972351]
[49.82841110 76.00701904]
[64.10975647 80.59431458]
[78.39109802 85.18161011]
[89.48775482 75.99954224]
[103.76085663 74.06960297]
[116.89756012 79.97496796]
[129.44779968 71.75964355]
[141.99803162 63.54432297]
[154.54827881 55.32900238]
[154.65080261 36.21152878]
[166.14410400 21.12216187]
[184.25889587 16.02503777]
[201.65533447 22.79826927]
[213.77577209 13.96111679]
[225.89619446 5.12396288]
[232.48873901 -9.25827789]
[247.33111572 -10.50450993]
[259.45153809 -19.34166336]
[271.57196045 -28.17881775]
[283.69238281 -37.01597214]
[289.83905029 -52.21960831]
[306.11450195 -54.22999573]
[315.77597046 -40.97901917]
[308.88455200 -26.09814644]
[292.52954102 -24.89554596]
[280.40911865 -16.05839157]
[268.28869629 -7.22123814]
[256.16827393 1.61591530]
[250.44265747 15.36606407]
[234.73335266 17.24438858]
[222.61291504 26.08154106]
[210.49249268 34.91869736]
[212.62187195 45.90502167]
[210.47824097 56.94092941]
[204.33497620 66.41745758]
[195.05140686 72.93840027]
[183.95271301 75.52593994]
[172.64093018 73.76712036]
[162.76359558 67.87924194]
[150.21336365 76.09455872]
[137.66311646 84.30988312]
[125.11288452 92.52520752]
[129.71031189 96.61907196]
[133.53642273 102.10479736]
[147.89280701 106.45153046]
[162.24919128 110.79826355]
[176.60559082 115.14499664]
[191.37187195 108.87312317]
[205.41291809 116.63384247]
[207.95762634 132.47380066]
[197.05392456 144.24192810]
[181.06619263 142.91072083]
[172.25885010 129.50138855]
[157.90246582 125.15465546]
[143.54608154 120.80792236]
[129.18968201 116.46118927]
[119.08425140 127.54631805]
[124.73708344 141.44039917]
[130.38990784 155.33448792]
[136.04273987 169.22856140]
[141.69557190 183.12265015]
[147.34840393 197.01672363]
[153.00123596 210.91081238]
[158.65406799 224.80488586]
[173.57048035 222.62219238]
[188.57572937 224.07333374]
[202.79743958 229.07397461]
[215.40878296 237.33337402]
[225.67652893 248.37133789]
[233.00375366 261.54614258]
[236.96444702 276.09179688]
[237.32833862 291.16265869]
[234.07427979 305.88253784]
[227.39144897 319.39559937]
[217.66838074 330.91625977]
[205.47036743 339.77468872]
[191.50657654 345.45590210]
[176.58885193 347.62954712]
[161.58447266 346.16931152]
[147.36579895 341.16003418]
[134.75947571 332.89300537]
[124.49841309 321.84881592]
[117.17918396 308.66958618]
[113.22731018 294.12152100]
[112.87255096 279.05041504]
[116.13553619 264.33251953]
[122.82655334 250.82351685]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 163]
[2 162]
[3 161]
[4 160]
[5 159]
[6 158]
[7 157]
[8 156]
[10 102]
[11 101]
[12 100]
[13 99]
[14 48]
[15 47]
[16 46]
[17 45]
[18 43]
[19 42]
[20 41]
[21 40]
[22 39]
[23 38]
[24 37]
[25 36]
[27 34]
[28 33]
[50 60]
[51 59]
[52 58]
[53 57]
[71 96]
[72 95]
[73 94]
[74 93]
[75 92]
[78 88]
[79 87]
[80 86]
[81 85]
[105 141]
[106 140]
[107 139]
[108 138]
[112 131]
[113 130]
[114 129]
[116 127]
[117 126]
[118 125]
[119 124]
[143 155]
[144 154]
[145 153]
[146 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
