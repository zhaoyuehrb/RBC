%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:29:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCAGCUGAUAUUUUCUUUCCUCAGGACCAGCUGUUCAGGAGCAUCCCGGACGAGAGCCAGGCACAUUUGAGACUUGGAUCCAACUAAAGACCGCCGCAGAUUCUUCUGCAGCAAUGUCGGUGUUAGAAGAAAAUCGGCCGUUUGCUCAACAAUUAUCCAAUGUCUACUUUACAAUACUUUCGCUGUUCUGUUUUAAGCUUUUUGUGAAAAUCA\
) } def
/len { sequence length } bind def

/coor [
[13.01530552 447.81591797]
[10.50154495 433.02804565]
[11.81943607 418.08972168]
[4.09908485 430.95037842]
[-3.62126708 443.81103516]
[-11.34161854 456.67166138]
[-19.06196976 469.53231812]
[-26.78232193 482.39294434]
[-23.29653740 489.97067261]
[-23.08976555 498.21520996]
[-26.12152672 505.78378296]
[-31.82990646 511.47296143]
[-39.23409271 514.40991211]
[-47.10240173 514.18579102]
[-55.56082535 526.57348633]
[-64.01924896 538.96118164]
[-72.47766876 551.34887695]
[-69.30434418 566.83135986]
[-78.07781219 579.97674561]
[-93.59292603 582.98620605]
[-106.64484406 574.07421875]
[-109.49009705 558.52819824]
[-100.44064331 545.57122803]
[-84.86536407 542.89050293]
[-76.40694427 530.50280762]
[-67.94852448 518.11511230]
[-59.49010086 505.72738647]
[-59.97874451 484.08856201]
[-39.64296722 474.67260742]
[-31.92261505 461.81195068]
[-24.20226288 448.95132446]
[-16.48191071 436.09066772]
[-8.76155949 423.23001099]
[-1.04120767 410.36938477]
[-1.99267435 407.03948975]
[-1.82832360 403.26104736]
[-0.38006878 399.42147827]
[2.38420510 395.96307373]
[6.34472895 393.33563232]
[10.45587349 378.91003418]
[14.56701851 364.48440552]
[18.67816353 350.05877686]
[22.78930855 335.63317871]
[26.90045357 321.20755005]
[17.58129501 309.61914062]
[16.86434555 294.58749390]
[25.23389626 281.86727905]
[39.65536118 276.45178223]
[43.76650238 262.02615356]
[47.87764740 247.60055542]
[46.68819809 240.30854797]
[52.15568924 232.99501038]
[56.47717285 218.63099670]
[60.79866028 204.26699829]
[65.12014771 189.90298462]
[69.44163513 175.53897095]
[73.76312256 161.17495728]
[61.56761932 154.34797668]
[51.06648636 145.12495422]
[42.72267532 133.91250610]
[36.90404510 121.20497131]
[33.86712265 107.56256866]
[33.74578857 93.58676147]
[36.54539871 79.89369202]
[42.14252472 67.08704376]
[50.29040527 55.73143005]
[60.62982941 46.32747650]
[72.70496368 39.28977966]
[85.98344421 34.92860413]
[99.87987518 33.43622971]
[113.78160858 34.87844086]
[118.52096558 20.64683914]
[123.26032257 6.41523647]
[127.99967957 -7.81636572]
[132.63493347 -22.08221245]
[137.16583252 -36.38154602]
[141.69674683 -50.68087769]
[146.22764587 -64.98020935]
[150.75856018 -79.27954102]
[155.28945923 -93.57887268]
[141.27633667 -103.26281738]
[130.94259644 -116.78127289]
[125.28628540 -132.81033325]
[124.84812164 -149.78450012]
[129.65971375 -166.04960632]
[139.24163818 -180.02398682]
[152.65113831 -190.35229492]
[168.57489014 -196.03695679]
[185.45762634 -196.53450012]
[189.35755920 -211.01864624]
[193.25747681 -225.50279236]
[197.15740967 -239.98693848]
[193.27416992 -255.32418823]
[204.05441284 -265.60211182]
[207.95433044 -280.08627319]
[211.85426331 -294.57040405]
[215.75418091 -309.05456543]
[206.32000732 -319.10144043]
[203.10682678 -332.39230347]
[206.84980774 -345.43124390]
[216.46873474 -354.84268188]
[229.37686157 -358.24530029]
[233.48800659 -372.67092896]
[237.59915161 -387.09652710]
[241.71029663 -401.52215576]
[245.82144165 -415.94778442]
[249.93258667 -430.37338257]
[254.04373169 -444.79901123]
[258.15487671 -459.22463989]
[250.72882080 -472.91738892]
[255.10360718 -487.48846436]
[268.20330811 -494.48367310]
[272.31445312 -508.90930176]
[263.39974976 -521.75695801]
[264.88046265 -537.32427979]
[276.05746460 -548.26086426]
[291.65328979 -549.40277100]
[304.30410767 -540.21087646]
[308.03652954 -525.02526855]
[301.08828735 -511.01611328]
[286.74008179 -504.79815674]
[282.62893677 -490.37252808]
[290.07299805 -477.52255249]
[286.10919189 -462.83435059]
[272.58050537 -455.11349487]
[268.46936035 -440.68786621]
[264.35821533 -426.26223755]
[260.24707031 -411.83663940]
[256.13592529 -397.41101074]
[252.02476501 -382.98538208]
[247.91362000 -368.55978394]
[243.80247498 -354.13415527]
[254.33901978 -341.54431152]
[255.30372620 -324.98901367]
[246.11851501 -310.98254395]
[230.23832703 -305.15463257]
[226.33840942 -290.67047119]
[222.43847656 -276.18634033]
[218.53855896 -261.70217896]
[222.70074463 -247.40093994]
[211.64155579 -236.08702087]
[207.74162292 -221.60287476]
[203.84170532 -207.11872864]
[199.94177246 -192.63456726]
[211.29338074 -186.13415527]
[220.76054382 -177.09204102]
[227.78636169 -166.03318787]
[231.95588684 -153.60144043]
[233.02062988 -140.52192688]
[230.91334534 -127.55888367]
[225.75228882 -115.47093964]
[217.83456421 -104.96669769]
[207.61904907 -96.66326141]
[195.69978333 -91.04992676]
[182.77142334 -88.45938110]
[169.58879089 -89.04796600]
[165.05789185 -74.74863434]
[160.52697754 -60.44930267]
[155.99607849 -46.14997101]
[151.46516418 -31.85063934]
[146.93426514 -17.55130768]
[147.91012573 -10.22766304]
[142.23127747 -3.07700849]
[137.49192810 11.15459347]
[132.75256348 25.38619614]
[128.01321411 39.61779785]
[141.59162903 48.02995300]
[152.77507019 59.43472290]
[160.91954041 73.17538452]
[165.55604553 88.46070099]
[166.41760254 104.41049194]
[163.45460510 120.10630798]
[156.83766174 134.64433289]
[146.94781494 147.18742371]
[134.35455322 157.01329041]
[119.78302765 163.55613708]
[104.07232666 166.43919373]
[88.12712860 165.49644470]
[83.80564117 179.86045837]
[79.48415375 194.22447205]
[75.16266632 208.58847046]
[70.84118652 222.95248413]
[66.51969910 237.31649780]
[62.30326843 251.71170044]
[58.19212341 266.13729858]
[54.08097839 280.56292725]
[63.48097610 292.76727295]
[63.88749313 307.98858643]
[55.35414124 320.38397217]
[41.32607269 325.31869507]
[37.21492767 339.74432373]
[33.10378265 354.16992188]
[28.99263763 368.59555054]
[24.88149261 383.02117920]
[20.77034760 397.44677734]
[30.77688408 386.27230835]
[43.29018402 378.00082397]
[57.49208069 373.17318726]
[72.45400238 372.10504150]
[87.19767761 374.86621094]
[100.75910187 381.27615356]
[112.25159454 390.91580200]
[120.92371368 403.15487671]
[126.20844269 417.19308472]
[127.76026154 432.11260986]
[125.47769165 446.93789673]
[119.50998688 460.69967651]
[110.24732971 472.49813843]
[98.29534912 481.56179810]
[84.43552399 487.29809570]
[69.57405090 489.33193970]
[54.68262863 487.53039551]
[40.73492432 482.01116943]
[28.64289093 473.13522339]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 34]
[4 33]
[5 32]
[6 31]
[7 30]
[8 29]
[14 27]
[15 26]
[16 25]
[17 24]
[39 195]
[40 194]
[41 193]
[42 192]
[43 191]
[44 190]
[48 186]
[49 185]
[50 184]
[52 183]
[53 182]
[54 181]
[55 180]
[56 179]
[57 178]
[71 166]
[72 165]
[73 164]
[74 163]
[75 161]
[76 160]
[77 159]
[78 158]
[79 157]
[80 156]
[89 144]
[90 143]
[91 142]
[92 141]
[94 139]
[95 138]
[96 137]
[97 136]
[102 132]
[103 131]
[104 130]
[105 129]
[106 128]
[107 127]
[108 126]
[109 125]
[112 122]
[113 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
