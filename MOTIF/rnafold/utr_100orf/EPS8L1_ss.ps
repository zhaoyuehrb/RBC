%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:32:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGGGCCGGCAGCCUGGAAGGGAAAGGACAGCGGAGAGCAGGGCAGAGCCUGAGCAGGCAGGGCACCUCCAGGUGGGCAGGAGCUACCACUCAGCACCAUGAGCACCGCCACAGGCCCAGAAGCUGCCCCAAAGCCAAGCGCCAAGUCUAUCUAUGAGCAGAGGAAGCGUUACUCCACAGUUGUUAUGGCUGAUGUAU\
) } def
/len { sequence length } bind def

/coor [
[244.18640137 278.49475098]
[248.47251892 273.84692383]
[243.72810364 259.61700439]
[238.98367310 245.38708496]
[234.23924255 231.15718079]
[212.14418030 225.74153137]
[198.50300598 207.30070496]
[199.81217957 184.21115112]
[187.74482727 175.30165100]
[175.67749023 166.39213562]
[163.61015320 157.48263550]
[151.54281616 148.57313538]
[144.29106140 147.12850952]
[139.36021423 139.43347168]
[127.43082428 130.34008789]
[115.50142670 121.24671173]
[95.38887024 125.89313507]
[78.11680603 114.58914185]
[63.78160477 119.00523376]
[49.44639969 123.42133331]
[35.11119461 127.83743286]
[20.77599144 132.25352478]
[12.88297939 147.86250305]
[-3.53297973 152.83798218]
[-18.17527008 144.56936646]
[-32.44111633 149.20462036]
[-46.70696640 153.83987427]
[-46.31449127 168.93046570]
[-50.18627167 183.50550842]
[-58.00025940 196.38598633]
[-69.11588287 206.53245544]
[-82.62654877 213.12896729]
[-97.43356323 215.64859009]
[-112.33549500 213.89555359]
[-126.12565613 208.02040100]
[-137.68980408 198.50715637]
[-146.09617615 186.13339233]
[-160.36203003 190.76864624]
[-168.89726257 204.35279846]
[-184.85490417 206.00602722]
[-195.99362183 194.46008301]
[-193.76873779 178.57205200]
[-179.88699341 170.52987671]
[-164.99728394 176.50279236]
[-150.73143005 171.86753845]
[-151.20364380 156.91581726]
[-147.43980408 142.42219543]
[-139.73664856 129.56346130]
[-128.71115112 119.38607788]
[-115.25102997 112.72115326]
[-100.44334412 110.11647034]
[-85.48665619 111.79154205]
[-71.59405518 117.61911774]
[-59.89472961 127.13479614]
[-51.34222031 139.57403564]
[-37.07637405 134.93878174]
[-22.81052399 130.30352783]
[-18.62308502 118.11475372]
[-8.02079964 110.45011139]
[5.25549126 110.29050446]
[16.35989380 117.91832733]
[30.69509697 113.50222778]
[45.03030396 109.08612823]
[59.36550522 104.67003632]
[73.70071411 100.25393677]
[77.29055786 86.73356628]
[87.30493164 76.96627808]
[84.11134338 62.31018829]
[80.91776276 47.65409851]
[77.72417450 32.99800491]
[62.72815704 30.91360664]
[49.37515259 23.83764076]
[39.26774979 12.64118385]
[33.61151886 -1.31149030]
[33.07124710 -16.32913208]
[37.69284821 -30.59851646]
[46.90016174 -42.40336227]
[59.56671143 -50.33077621]
[56.37312698 -64.98686981]
[53.17954254 -79.64295959]
[49.98595810 -94.29904938]
[36.97088242 -102.85741425]
[33.94091797 -117.76626587]
[42.18021393 -130.12141418]
[38.98662949 -144.77749634]
[35.68083954 -159.40869141]
[32.26303482 -174.01412964]
[21.58484459 -185.68832397]
[26.21866417 -199.84378052]
[22.80086327 -214.44920349]
[19.38306046 -229.05464172]
[5.34805202 -235.95046997]
[-0.92350775 -250.27532959]
[3.52961969 -265.26544189]
[16.60480309 -273.84295654]
[32.12834167 -271.95782471]
[42.77049255 -260.50012207]
[43.50636292 -244.87986755]
[33.98849106 -232.47244263]
[37.40629196 -217.86700439]
[40.82409668 -203.26158142]
[51.25782394 -192.63206482]
[46.86846924 -177.43193054]
[50.28627014 -162.82649231]
[54.87346268 -157.02714539]
[53.64271927 -147.97108459]
[56.83630371 -133.31498718]
[69.46898651 -125.50788879]
[72.91651917 -110.69001770]
[64.64205170 -97.49263763]
[67.83563232 -82.83654022]
[71.02922058 -68.18045044]
[74.22280121 -53.52436066]
[89.03922272 -51.58552551]
[102.32321167 -44.68156815]
[112.46258545 -33.62862396]
[118.21936035 -19.74766541]
[118.88090515 -4.70663977]
[114.34808350 9.67994308]
[105.14957428 21.66991806]
[92.38027191 29.80442047]
[95.57385254 44.46051407]
[98.76743317 59.11660385]
[101.96102142 73.77269745]
[111.35186768 76.27549744]
[119.19264984 82.01780701]
[124.41273499 90.21554565]
[126.29932404 99.74931335]
[124.59481049 109.31732178]
[136.52420044 118.41069794]
[148.45359802 127.50408173]
[160.45231628 136.50578308]
[172.51965332 145.41529846]
[184.58699036 154.32479858]
[196.65434265 163.23429871]
[208.72167969 172.14381409]
[216.86859131 167.02180481]
[226.09358215 164.38708496]
[235.65795898 164.43357849]
[244.80055237 167.14115906]
[252.79840088 172.27859497]
[259.02377319 179.42320251]
[262.99362183 187.99555969]
[264.40686035 197.30648804]
[279.08697510 200.38768005]
[293.76712036 203.46887207]
[308.44726562 206.55006409]
[323.12738037 209.63125610]
[333.40914917 198.30726624]
[347.88296509 193.68066406]
[362.63122559 196.89860535]
[373.71444702 206.99902344]
[378.22348022 221.19529724]
[392.90362549 224.27647400]
[407.58374023 227.35766602]
[424.94152832 221.21693420]
[437.54846191 233.42190552]
[452.27407837 236.27777100]
[468.97463989 233.35766602]
[476.40383911 248.59721375]
[463.81643677 259.95477295]
[449.41821289 251.00340271]
[434.69259644 248.14753723]
[424.49191284 254.65484619]
[412.19790649 252.39274597]
[404.50256348 242.03779602]
[389.82241821 238.95661926]
[375.14230347 235.87542725]
[365.30593872 247.06076050]
[351.09701538 251.85264587]
[336.29949951 248.86926270]
[324.90731812 238.81369019]
[320.04620361 224.31138611]
[305.36605835 221.23019409]
[290.68594360 218.14900208]
[276.00579834 215.06781006]
[261.32565308 211.98661804]
[255.96575928 220.15179443]
[248.46914673 226.41275024]
[253.21357727 240.64265442]
[257.95800781 254.87257385]
[262.70242310 269.10247803]
[282.51931763 283.35342407]
[277.35778809 306.48452759]
[283.59851074 320.12466431]
[289.83923340 333.76480103]
[296.07995605 347.40493774]
[302.32070923 361.04507446]
[316.79406738 367.96612549]
[320.26644897 383.62887573]
[310.07412720 396.01824951]
[294.03576660 395.63012695]
[284.45465088 382.76226807]
[288.68057251 367.28579712]
[282.43981934 353.64566040]
[276.19909668 340.00552368]
[269.95837402 326.36538696]
[263.71765137 312.72528076]
[257.72567749 312.42236328]
[252.01884460 310.44418335]
[247.05902100 306.92703247]
[243.25427246 302.13259888]
[240.92526245 296.42877197]
[240.27833557 290.26123047]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 182]
[3 181]
[4 180]
[5 179]
[8 136]
[9 135]
[10 134]
[11 133]
[12 132]
[14 131]
[15 130]
[16 129]
[18 65]
[19 64]
[20 63]
[21 62]
[22 61]
[25 57]
[26 56]
[27 55]
[37 45]
[38 44]
[67 124]
[68 123]
[69 122]
[70 121]
[78 113]
[79 112]
[80 111]
[81 110]
[84 107]
[85 106]
[86 104]
[87 103]
[89 101]
[90 100]
[91 99]
[144 177]
[145 176]
[146 175]
[147 174]
[148 173]
[153 168]
[154 167]
[155 166]
[157 163]
[158 162]
[184 198]
[185 197]
[186 196]
[187 195]
[188 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
