%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:46:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCCUCUGGUAGCCCUGGGGACGCUGUAUCUGUGGGCUCUUGAAUCGCGUCACAAAUCAGCGACCGAACUCUGGCGGUGGUGGUUAAGACGGCGAAGGCGGCAGCGGCGGCGACAGCUCUGGGGUUUGCGUCUCGGGGUGUGUCGGCCGCCGCUGCUGCUUGGGCCUGGUAUGUACAGAUGGCUGGUUAGGAUUCUCGGCACCAUUUUCCGUUUCUGCGACCGGUCGGUGCCCCCUGCCCGGGCCCUCCUGAAG\
AGGCGGCGCUCAGACA\
) } def
/len { sequence length } bind def

/coor [
[62.99393845 477.31692505]
[60.06758118 492.02868652]
[57.14122772 506.74047852]
[54.21487427 521.45227051]
[64.84636688 532.75494385]
[66.77046204 548.15228271]
[59.24731064 561.72363281]
[45.16971207 568.25054932]
[29.95079422 565.22332764]
[19.44253922 553.80596924]
[17.68558693 538.38867188]
[25.35552025 524.89971924]
[39.50309372 518.52587891]
[42.42944717 503.81411743]
[45.35580444 489.10232544]
[48.28215790 474.39056396]
[35.56565857 458.35012817]
[38.94976044 437.86206055]
[56.64649963 426.44171143]
[58.89028931 411.61047363]
[61.13408279 396.77926636]
[59.03511810 389.72155762]
[63.49039078 381.79006958]
[65.90532684 366.98574829]
[68.32026672 352.18142700]
[70.73520660 337.37710571]
[73.15014648 322.57278442]
[75.56507874 307.76846313]
[69.97775269 293.96151733]
[79.83589172 281.58706665]
[82.25083160 266.78271484]
[84.66577148 251.97840881]
[71.40121460 236.38815308]
[74.07351685 215.79512024]
[91.36399841 203.76856995]
[93.09264374 188.86851501]
[94.82128906 173.96846008]
[96.54993439 159.06838989]
[98.27858734 144.16833496]
[100.00723267 129.26828003]
[95.21588135 123.49826813]
[87.20187378 136.17800903]
[72.66626740 132.47447205]
[71.69682312 117.50582886]
[85.63317871 111.95825958]
[80.84182739 106.18825531]
[65.87783051 105.14958954]
[50.91383362 104.11092377]
[35.94983673 103.07225800]
[20.98009300 102.12002563]
[6.00509977 101.25426483]
[-8.96989441 100.38849640]
[-17.91198349 110.43166351]
[-30.81454086 113.45829010]
[-42.92918777 108.58409882]
[-49.92872238 97.79103088]
[-64.89271545 96.75236511]
[-79.85671234 95.71369934]
[-94.82070923 94.67503357]
[-103.56153870 97.19605255]
[-109.95121765 93.53697968]
[-124.90222168 92.32555389]
[-139.28219604 98.92304993]
[-151.34301758 90.18315125]
[-166.29400635 88.97171783]
[-181.24501038 87.76029205]
[-196.19601440 86.54886627]
[-206.19819641 98.41208649]
[-221.27119446 102.09780121]
[-235.61912537 96.18877411]
[-243.72491455 82.95715332]
[-242.47172546 67.49076843]
[-232.34144592 55.73675537]
[-217.22935486 52.21477127]
[-202.94636536 58.27909470]
[-194.98458862 71.59786987]
[-180.03358459 72.80929565]
[-165.08258057 74.02072144]
[-150.13159180 75.23214722]
[-136.82101440 68.54799652]
[-123.69079590 77.37454987]
[-108.73979187 78.58597565]
[-93.78204346 79.71104431]
[-78.81804657 80.74971008]
[-63.85405350 81.78837585]
[-48.89005661 82.82704163]
[-36.66707993 71.25167084]
[-19.51721764 72.13308716]
[-8.10412788 85.41349792]
[6.87086630 86.27926636]
[21.84585953 87.14503479]
[28.67978859 84.40382385]
[36.98850250 88.10826111]
[51.95249939 89.14692688]
[66.91649628 90.18559265]
[81.88049316 91.22425842]
[92.04977417 80.19766998]
[89.80598450 65.36643982]
[87.56219482 50.53520966]
[85.31839752 35.70397949]
[83.07460785 20.87274933]
[80.83081818 6.04151821]
[78.58702850 -8.78971195]
[76.34323120 -23.62094307]
[74.09944153 -38.45217514]
[71.85565186 -53.28340530]
[69.61186218 -68.11463165]
[67.36806488 -82.94586182]
[65.12427521 -97.77709198]
[62.88048553 -112.60832977]
[60.63669205 -127.43955994]
[58.39290237 -142.27078247]
[56.06349945 -157.08880615]
[53.64855957 -171.89314270]
[51.23361969 -186.69746399]
[48.81868362 -201.50178528]
[46.31829071 -216.29193115]
[43.73252869 -231.06736755]
[41.14676285 -245.84281921]
[38.56100082 -260.61825562]
[35.97523880 -275.39370728]
[33.38947678 -290.16915894]
[30.80371284 -304.94461060]
[28.21794891 -319.72006226]
[25.63218689 -334.49551392]
[12.55532074 -343.37081909]
[9.66647243 -358.90884399]
[18.67954445 -371.89114380]
[34.24723816 -374.61553955]
[47.13352203 -365.46572876]
[49.69318771 -349.87008667]
[40.40763474 -337.08126831]
[42.99339676 -322.30581665]
[45.57915878 -307.53036499]
[48.16492081 -292.75491333]
[50.75068665 -277.97946167]
[53.33644867 -263.20404053]
[55.92221069 -248.42857361]
[58.50797272 -233.65313721]
[61.09373856 -218.87768555]
[65.32676697 -212.85289001]
[63.62300873 -203.91673279]
[66.03794861 -189.11239624]
[68.45288849 -174.30807495]
[70.86782074 -159.50375366]
[75.03099060 -153.43046570]
[73.22412872 -144.51457214]
[75.46792603 -129.68334961]
[77.71171570 -114.85211945]
[79.95550537 -100.02088928]
[82.19929504 -85.18965912]
[84.44309235 -70.35842896]
[86.68688202 -55.52719498]
[88.93067169 -40.69596481]
[91.17446136 -25.86473465]
[93.41825867 -11.03350353]
[95.66204834 3.79772687]
[97.90583801 18.62895775]
[100.14962769 33.46018982]
[102.39342499 48.29141998]
[104.63721466 63.12265015]
[106.88100433 77.95388031]
[118.47615814 87.46977997]
[133.46015930 86.77702332]
[148.44415283 86.08427429]
[163.42814636 85.39152527]
[174.04624939 73.99443054]
[189.25201416 73.50533295]
[200.05197144 83.69830322]
[215.03596497 83.00554657]
[221.85513306 74.59068298]
[231.96481323 71.36473083]
[241.97544861 74.15713501]
[248.66719055 81.82035065]
[263.66317749 81.47387695]
[278.65917969 81.12741089]
[293.65518188 80.78094482]
[298.05343628 78.10653687]
[302.58642578 77.42964172]
[306.47879028 78.47222137]
[309.17465210 80.69131470]
[324.17364502 80.86456299]
[339.17263794 81.03781128]
[354.17163086 81.21105194]
[369.17065430 81.38430023]
[384.16964722 81.55754852]
[399.16864014 81.73078918]
[414.16763306 81.90403748]
[429.16662598 82.07728577]
[445.02777100 72.68980408]
[459.75308228 82.26451111]
[474.75308228 82.26451111]
[489.75308228 82.26451111]
[496.33474731 72.41638947]
[506.73846436 67.00835419]
[518.34112549 67.27415466]
[528.27923584 73.03302002]
[534.15539551 82.76269531]
[549.15142822 83.10916138]
[564.14739990 83.45562744]
[572.70025635 70.61612701]
[586.84600830 64.45980072]
[602.07092285 66.95111084]
[613.51666260 77.29508972]
[617.53100586 92.19100952]
[612.83300781 106.88563538]
[600.92175293 116.68997192]
[585.59802246 118.47548676]
[571.75164795 111.67243195]
[563.80096436 98.45162964]
[548.80493164 98.10515594]
[533.80895996 97.75868988]
[521.31799316 111.17693329]
[502.66519165 111.16636658]
[489.75308228 97.26451111]
[474.75308228 97.26451111]
[459.75308228 97.26451111]
[451.00167847 105.58235168]
[438.52853394 105.72663879]
[428.99340820 97.07628632]
[413.99438477 96.90303802]
[398.99539185 96.72978973]
[383.99639893 96.55654907]
[368.99740601 96.38330078]
[353.99841309 96.21005249]
[338.99938965 96.03681183]
[324.00039673 95.86356354]
[309.00140381 95.69031525]
[294.00164795 95.77693939]
[279.00564575 96.12341309]
[264.00964355 96.46987915]
[249.01365662 96.81634521]
[233.23577881 108.03034210]
[215.72871399 97.98954773]
[200.74472046 98.68229675]
[190.93132019 109.82827759]
[175.74528503 110.74427795]
[164.12089539 100.37551880]
[149.13690186 101.06826782]
[134.15290833 101.76102448]
[119.16891479 102.45377350]
[114.90728760 130.99691772]
[113.17864227 145.89698792]
[111.44999695 160.79704285]
[109.72135162 175.69709778]
[107.99270630 190.59716797]
[106.26406097 205.49722290]
[114.16429138 210.98658752]
[119.50755310 218.91683960]
[121.60287476 228.18766785]
[120.20648956 237.53082275]
[115.54937744 245.68365479]
[108.30030823 251.55966187]
[99.47009277 254.39334106]
[97.05515289 269.19766235]
[94.64022064 284.00198364]
[100.05481720 298.86782837]
[90.36940765 310.18338013]
[87.95446777 324.98770142]
[85.53952789 339.79205322]
[83.12459564 354.59637451]
[80.70965576 369.40069580]
[78.29471588 384.20501709]
[75.96530914 399.02304077]
[73.72151947 413.85427856]
[71.47772980 428.68551636]
[79.18305206 434.44525146]
[84.24838257 442.55584717]
[86.02127838 451.89370728]
[84.30205536 461.18289185]
[79.36529541 469.16949463]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 16]
[2 15]
[3 14]
[4 13]
[19 266]
[20 265]
[21 264]
[23 263]
[24 262]
[25 261]
[26 260]
[27 259]
[28 258]
[30 256]
[31 255]
[32 254]
[35 247]
[36 246]
[37 245]
[38 244]
[39 243]
[40 242]
[46 96]
[47 95]
[48 94]
[49 93]
[50 91]
[51 90]
[52 89]
[56 86]
[57 85]
[58 84]
[59 83]
[61 82]
[62 81]
[64 79]
[65 78]
[66 77]
[67 76]
[97 162]
[98 161]
[99 160]
[100 159]
[101 158]
[102 157]
[103 156]
[104 155]
[105 154]
[106 153]
[107 152]
[108 151]
[109 150]
[110 149]
[111 148]
[112 147]
[113 145]
[114 144]
[115 143]
[116 142]
[117 140]
[118 139]
[119 138]
[120 137]
[121 136]
[122 135]
[123 134]
[124 133]
[125 132]
[163 241]
[164 240]
[165 239]
[166 238]
[169 235]
[170 234]
[174 232]
[175 231]
[176 230]
[177 229]
[181 228]
[182 227]
[183 226]
[184 225]
[185 224]
[186 223]
[187 222]
[188 221]
[189 220]
[191 217]
[192 216]
[193 215]
[198 212]
[199 211]
[200 210]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
