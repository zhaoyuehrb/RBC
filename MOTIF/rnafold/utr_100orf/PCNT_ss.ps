%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:26:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGGGGGAGGGCGAGCCCAAGCGCGGGGGAGGGAGUGUAAAUAGAGCGAAGGCUGCUCUGUGUCAGCCCCGUCACCGCCGGGCGGCCCGCGCGGAGUCUGAGGGAGAUGGAAGUUGAGCAAGAGCAGCGGCGCAGAAAGGUGGAGGCCGGGAGGACGAAGCUUGCUCACUUCCGACAGAGAAAAACAAAAGGUGACAGUUCGCAUU\
) } def
/len { sequence length } bind def

/coor [
[72.05567169 111.83941650]
[57.22644043 114.09638214]
[42.39720917 116.35334778]
[29.91833687 126.07900238]
[16.17177010 120.34478760]
[1.34253919 122.60176086]
[-13.48669243 124.85872650]
[-19.11368561 137.36231995]
[-30.10185051 145.24746704]
[-43.37703323 146.53866577]
[-49.73911285 160.12263489]
[-56.10119247 173.70658875]
[-54.16098785 189.99055481]
[-67.45349121 199.59478760]
[-82.30451965 192.63928223]
[-83.43659973 176.27925110]
[-69.68515015 167.34451294]
[-63.32307053 153.76054382]
[-56.96099091 140.17658997]
[-60.20096588 136.62802124]
[-62.71785355 132.53472900]
[-64.42230988 128.04200745]
[-79.41546631 127.58895874]
[-93.44303131 134.90591431]
[-105.93080902 126.78774261]
[-120.92396545 126.33470154]
[-135.91712952 125.88165283]
[-150.91326904 125.54184723]
[-165.91156006 125.31529999]
[-180.91113281 125.20202637]
[-195.91113281 125.20202637]
[-210.91070557 125.31529999]
[-225.90899658 125.54184723]
[-240.90728760 125.76839447]
[-249.44302368 129.02767944]
[-256.13339233 125.88338470]
[-271.13339233 125.88338470]
[-278.86981201 139.07789612]
[-292.08462524 146.57893372]
[-307.17941284 146.45910645]
[-320.10101318 138.85070801]
[-327.43002319 125.88338470]
[-342.43002319 125.88338470]
[-357.43002319 125.88338470]
[-372.43002319 125.88338470]
[-387.43002319 125.88338470]
[-402.43002319 125.88338470]
[-417.43002319 125.88338470]
[-432.43002319 125.88338470]
[-444.74523926 136.16516113]
[-460.43273926 132.80627441]
[-467.45840454 118.38338470]
[-460.43273926 103.96050262]
[-444.74523926 100.60161591]
[-432.43002319 110.88338470]
[-417.43002319 110.88338470]
[-402.43002319 110.88338470]
[-387.43002319 110.88338470]
[-372.43002319 110.88338470]
[-357.43002319 110.88338470]
[-342.43002319 110.88338470]
[-327.43002319 110.88338470]
[-320.10101318 97.91606140]
[-307.17941284 90.30767059]
[-292.08462524 90.18783569]
[-278.86981201 97.68887329]
[-271.13339233 110.88338470]
[-256.13339233 110.88338470]
[-241.13383484 110.77011108]
[-226.13554382 110.54355621]
[-211.13725281 110.31700897]
[-204.49511719 107.07202148]
[-195.91113281 110.20202637]
[-180.91113281 110.20202637]
[-174.22074890 107.05772400]
[-165.68501282 110.31700897]
[-150.68672180 110.54355621]
[-143.94961548 107.50066376]
[-135.46408081 110.88849640]
[-120.47092438 111.34154510]
[-105.47776794 111.79458618]
[-92.52260590 104.44522095]
[-78.96242523 112.59580231]
[-63.96926498 113.04884338]
[-51.08366776 97.99354553]
[-31.03956032 96.57392883]
[-15.74365997 110.02949524]
[-0.91442835 107.77252960]
[13.91480255 105.51555634]
[25.33299065 95.95133972]
[40.14024353 101.52411652]
[54.96947479 99.26715088]
[69.79870605 97.01018524]
[74.06008911 80.66140747]
[86.99267578 68.19554901]
[105.56874084 64.06107330]
[124.59416962 70.54328156]
[124.14112854 55.55012894]
[123.68807983 40.55697250]
[123.23503876 25.56381416]
[112.58599854 13.56474781]
[115.46954346 -2.21703768]
[129.67364502 -9.67510700]
[144.30215454 -3.08826733]
[148.13331604 12.49062157]
[138.22819519 25.11076927]
[138.68124390 40.10392380]
[139.13427734 55.09708405]
[139.58732605 70.09024048]
[152.30537415 78.04329681]
[165.98387146 71.88710785]
[179.66238403 65.73091125]
[193.34088135 59.57472229]
[207.01937866 53.41852951]
[220.69787598 47.26233673]
[227.24101257 40.88511276]
[234.62976074 41.11819839]
[248.39967346 35.16930008]
[262.16958618 29.22039986]
[275.93951416 23.27149963]
[289.70941162 17.32259941]
[303.47933960 11.37369823]
[317.24926758 5.42479801]
[317.11053467 -14.41232109]
[325.62002563 -32.27938080]
[341.03494263 -44.61389923]
[360.24035645 -48.97662354]
[379.37850952 -44.53384399]
[394.62371826 -32.21633148]
[407.79876709 -39.38698196]
[420.97381592 -46.55763245]
[434.14883423 -53.72828293]
[432.50988770 -68.84060669]
[436.78375244 -83.42836761]
[446.31866455 -95.26702881]
[459.66061401 -102.55129242]
[474.77508545 -104.17035675]
[489.35720825 -99.87732697]
[501.18331909 -90.32685852]
[508.45001221 -76.97532654]
[510.04919434 -61.85874557]
[505.73699951 -47.28227997]
[496.17095947 -35.46874237]
[482.80990601 -28.21960449]
[467.69122314 -26.64031029]
[453.12045288 -30.97169113]
[441.31948853 -40.55324173]
[428.14443970 -33.38259125]
[414.96942139 -26.21193886]
[401.79437256 -19.04128647]
[403.99282837 -8.76085377]
[403.67538452 1.76001704]
[400.85427856 11.91383457]
[395.68643188 21.11284637]
[388.46487427 28.82306290]
[379.60202026 34.59524918]
[369.60610962 38.09110641]
[359.05215454 39.10307693]
[348.54879761 37.56668091]
[338.70318604 33.56457138]
[330.08596802 27.32211494]
[323.19815063 19.19471359]
[309.42825317 25.14361382]
[295.65832520 31.09251404]
[281.88839722 37.04141617]
[268.11849976 42.99031448]
[254.34857178 48.93921661]
[240.57865906 54.88811493]
[226.85406494 60.94083405]
[213.17556763 67.09702301]
[199.49707031 73.25321960]
[185.81857300 79.40940857]
[172.14007568 85.56560516]
[158.46157837 91.72179413]
[173.41702271 92.87705231]
[188.37246704 94.03230286]
[203.32791138 95.18756104]
[217.92811584 91.74748230]
[232.77987671 93.85112000]
[245.85041809 101.21053314]
[255.35075378 112.81843567]
[259.98059082 127.08605194]
[259.10620117 142.06054688]
[252.84730530 155.69235229]
[242.06053162 166.11566162]
[228.22229004 171.90383911]
[213.22662354 172.26464844]
[199.12602234 167.14871216]
[187.85043335 157.25622559]
[180.94245911 143.93888855]
[170.31916809 133.34899902]
[159.69589233 122.75910950]
[149.07260132 112.16921997]
[153.31834412 126.55580139]
[157.56408691 140.94238281]
[161.80984497 155.32894897]
[174.06037903 166.23109436]
[170.47956848 182.23452759]
[154.75106812 186.87629700]
[143.05499268 175.38134766]
[147.42326355 159.57470703]
[143.17752075 145.18812561]
[138.93176270 130.80154419]
[134.68601990 116.41497040]
[122.80470276 128.84283447]
[107.30451965 134.39698792]
[91.68064117 132.51144409]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 93]
[2 92]
[3 91]
[5 89]
[6 88]
[7 87]
[10 19]
[11 18]
[12 17]
[22 84]
[23 83]
[25 81]
[26 80]
[27 79]
[28 77]
[29 76]
[30 74]
[31 73]
[32 71]
[33 70]
[34 69]
[36 68]
[37 67]
[42 62]
[43 61]
[44 60]
[45 59]
[46 58]
[47 57]
[48 56]
[49 55]
[97 109]
[98 108]
[99 107]
[100 106]
[110 174]
[111 173]
[112 172]
[113 171]
[114 170]
[115 169]
[117 168]
[118 167]
[119 166]
[120 165]
[121 164]
[122 163]
[123 162]
[129 150]
[130 149]
[131 148]
[132 147]
[193 204]
[194 203]
[195 202]
[196 201]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
