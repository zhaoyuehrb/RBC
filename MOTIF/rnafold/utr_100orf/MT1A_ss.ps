%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:15:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCAAGCCUUCCACGUGCGCCUUAUAGCCUCUCAACUUCUUGCUUGGGAUCUCCAACCUCACCGCGGCUCGAAAUGGACCCCAACUGCUCCUGCGCCACUGGUGGCUCCUGCACCUGCACUGGCUCCUGCAAAUGCAAAGAGUGCAAAUGCACCUCCUGCAAGAAGAGCUGCU\
) } def
/len { sequence length } bind def

/coor [
[-55.19669724 213.06022644]
[-77.60194397 204.05244446]
[-89.20783234 213.55525208]
[-100.81372070 223.05807495]
[-112.41960144 232.56088257]
[-124.02548981 242.06369019]
[-135.63137817 251.56649780]
[-128.59797668 267.32714844]
[-126.23575592 284.41046143]
[-128.72460938 301.46270752]
[-135.86033630 317.13461304]
[-147.07131958 330.18820190]
[-161.46430969 339.59448242]
[-177.89566040 344.61462402]
[-195.06211853 344.85806274]
[-211.60423279 340.31271362]
[-226.21401978 331.34542847]
[-237.10395813 341.66091919]
[-234.95901489 357.02902222]
[-242.28656006 370.70700073]
[-256.26898193 377.43536377]
[-271.52981567 374.62692261]
[-282.20089722 363.36160278]
[-284.17898560 347.97113037]
[-276.70352173 334.37344360]
[-262.64889526 327.79714966]
[-247.41944885 330.77096558]
[-236.52952576 320.45547485]
[-243.06030273 309.34448242]
[-247.10928345 297.10150146]
[-248.49243164 284.27374268]
[-247.14489746 271.43518066]
[-243.12411499 259.16094971]
[-236.60729980 248.00146484]
[-227.88368225 238.45780945]
[-217.34167480 230.95921326]
[-205.45153809 225.84379578]
[-192.74446106 223.34324646]
[-179.78874207 223.57240295]
[-167.16448975 226.52392578]
[-155.43754578 232.06852722]
[-145.13418579 239.96060181]
[-133.52830505 230.45779419]
[-121.92241669 220.95498657]
[-110.31652832 211.45217896]
[-98.71063995 201.94937134]
[-87.10475159 192.44656372]
[-89.82793427 186.18121338]
[-91.41394806 179.52867126]
[-91.81130219 172.69380188]
[-91.00511169 165.88757324]
[-89.01771545 159.32048035]
[-85.90800476 153.19610596]
[-81.76970673 147.70477295]
[-76.72856140 143.01765442]
[-70.93849182 139.28141785]
[-64.57693481 136.61363220]
[-57.83934402 135.09907532]
[-50.93325424 134.78707886]
[-44.07184601 135.68984985]
[-37.46736526 137.78210449]
[-31.32458305 141.00167847]
[-25.83442116 145.25143433]
[-21.16803741 150.40219116]
[-7.67033577 143.85910034]
[5.82736540 137.31600952]
[19.32506752 130.77290344]
[32.82276917 124.22982025]
[46.32046890 117.68672180]
[59.81817245 111.14363098]
[57.62446213 96.72366333]
[60.54440308 82.14982605]
[68.41204071 69.21335602]
[80.44229126 59.56922913]
[95.30612183 54.52533340]
[111.27642059 54.86754990]
[114.23596954 40.16241074]
[117.19551849 25.45727539]
[120.02220154 10.72601986]
[122.71578217 -4.03015280]
[125.27603912 -18.81003952]
[127.70276642 -33.61243820]
[130.12950134 -48.41483688]
[118.49673462 -63.33366013]
[121.37751770 -81.70880127]
[136.49131775 -91.99335480]
[138.38206482 -106.87371826]
[140.27281189 -121.75407410]
[133.43330383 -136.65887451]
[143.14088440 -149.87609863]
[159.40924072 -147.80899048]
[165.50286865 -132.58401489]
[155.15316772 -119.86332703]
[153.26243591 -104.98297119]
[151.37168884 -90.10261536]
[160.17430115 -82.78127289]
[164.37837219 -72.00267792]
[162.82562256 -60.41671753]
[155.78872681 -50.93254089]
[144.93190002 -45.98810577]
[142.50517273 -31.18570900]
[140.07843018 -16.38331032]
[142.10627747 -9.24916649]
[137.47195435 -1.33657360]
[134.77836609 13.41959953]
[136.67707825 20.58919144]
[131.90066528 28.41682625]
[128.94110107 43.12196350]
[125.98155975 57.82709885]
[137.41398621 67.53789520]
[151.44660950 62.23830414]
[165.47921753 56.93871689]
[179.51184082 51.63912582]
[183.70606995 36.81635284]
[195.68417358 27.41537476]
[210.72325134 26.87654305]
[223.04830933 35.19704819]
[237.08091736 29.89746094]
[247.04580688 16.87313652]
[263.27050781 19.25884819]
[269.06442261 34.60037994]
[258.46728516 47.11567688]
[242.38050842 43.93007660]
[228.34790039 49.22966766]
[224.59999084 63.62033081]
[212.95922852 73.15745544]
[197.75703430 74.02145386]
[184.81143188 65.67174530]
[170.77880859 70.97133636]
[156.74620056 76.27091980]
[142.71357727 81.57051086]
[144.54977417 94.30185699]
[142.80030823 106.59593201]
[137.84965515 117.49752808]
[150.11099243 126.13811493]
[162.37232971 134.77868652]
[174.63366699 143.41928101]
[192.99145508 144.63748169]
[199.76365662 160.81114197]
[212.17898560 169.22895813]
[221.07156372 171.46685791]
[224.74060059 177.91249084]
[237.00193787 186.55307007]
[249.26327515 195.19366455]
[261.52459717 203.83424377]
[277.89688110 204.77299500]
[285.02731323 219.54081726]
[275.58078003 232.94584656]
[259.27502441 231.19813538]
[252.88403320 216.09558105]
[240.62269592 207.45498657]
[228.36135864 198.81440735]
[216.10002136 190.17382812]
[203.76118469 181.64428711]
[191.34585571 173.22648621]
[179.38856506 175.19483948]
[168.96926880 168.25395203]
[165.99307251 155.68061829]
[153.73175049 147.04002380]
[141.47041321 138.39944458]
[129.20907593 129.75886536]
[117.50200653 137.84757996]
[103.75679016 141.52886963]
[89.57408142 140.37400818]
[76.60549927 134.51748657]
[66.36125946 124.64133453]
[52.86356354 131.18443298]
[39.36585999 137.72752380]
[25.86816025 144.27061462]
[12.37045765 150.81370544]
[-1.12724328 157.35679626]
[-14.62494469 163.89988708]
[-16.13008690 188.33534241]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 47]
[3 46]
[4 45]
[5 44]
[6 43]
[7 42]
[17 28]
[18 27]
[64 172]
[65 171]
[66 170]
[67 169]
[68 168]
[69 167]
[70 166]
[76 109]
[77 108]
[78 107]
[79 105]
[80 104]
[81 102]
[82 101]
[83 100]
[86 95]
[87 94]
[88 93]
[110 131]
[111 130]
[112 129]
[113 128]
[117 124]
[118 123]
[134 161]
[135 160]
[136 159]
[137 158]
[139 155]
[140 154]
[142 153]
[143 152]
[144 151]
[145 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
