%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:07:26 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OTOL1)
} def

/sequence { (\
AUGUGGAUGUUUUCUUGGCUUUGUGCUAUUUUAAUUAUUUUGGCUAUUGCUGGUAUGAACACAAUAGCAAAGACCACACCACAUACCAAAUUUACGAAGA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 84 0.908818748 ubox
1 91 0.037128511 ubox
2 78 0.009232576 ubox
2 83 0.971182016 ubox
2 85 0.005953823 ubox
2 88 0.004081415 ubox
2 90 0.040917778 ubox
2 94 0.005320041 ubox
2 96 0.008447044 ubox
3 77 0.010612598 ubox
3 82 0.990837049 ubox
3 84 0.004612090 ubox
3 87 0.003619133 ubox
3 91 0.005547865 ubox
3 93 0.005853936 ubox
3 95 0.013655272 ubox
4 76 0.010612927 ubox
4 81 0.990711646 ubox
4 83 0.004467139 ubox
4 88 0.120744247 ubox
4 90 0.003732656 ubox
4 94 0.011631062 ubox
5 75 0.010611559 ubox
5 80 0.990922046 ubox
5 82 0.004348665 ubox
5 87 0.133271343 ubox
5 93 0.008662792 ubox
6 14 0.007699810 ubox
6 74 0.010535468 ubox
6 79 0.990630603 ubox
6 86 0.133165752 ubox
6 92 0.008532270 ubox
7 12 0.006533556 ubox
7 13 0.009441257 ubox
7 38 0.007023922 ubox
7 84 0.132111932 ubox
7 91 0.007908706 ubox
8 37 0.007826607 ubox
8 76 0.035330060 ubox
8 78 0.981211985 ubox
8 83 0.132952665 ubox
8 85 0.008555962 ubox
8 90 0.006683567 ubox
9 19 0.004422259 ubox
9 35 0.011803749 ubox
9 36 0.007284271 ubox
9 74 0.021892315 ubox
9 75 0.035741866 ubox
9 77 0.986236991 ubox
9 79 0.003790587 ubox
9 82 0.133051279 ubox
9 84 0.008652237 ubox
9 86 0.003533410 ubox
10 18 0.004440567 ubox
10 34 0.013988424 ubox
10 73 0.022819328 ubox
10 76 0.919086539 ubox
10 78 0.006619479 ubox
10 81 0.129020055 ubox
10 83 0.008353385 ubox
10 85 0.003516034 ubox
11 17 0.004467174 ubox
11 33 0.016974483 ubox
11 34 0.014399246 ubox
11 71 0.004408548 ubox
11 72 0.022881205 ubox
11 73 0.012979002 ubox
12 33 0.015855596 ubox
12 34 0.005717026 ubox
12 70 0.004428020 ubox
12 71 0.021680671 ubox
12 72 0.012718369 ubox
12 73 0.019126871 ubox
13 33 0.006162313 ubox
13 69 0.003933906 ubox
13 70 0.019584983 ubox
13 71 0.010373446 ubox
13 72 0.009496224 ubox
13 73 0.847835961 ubox
14 72 0.855480351 ubox
15 70 0.035983381 ubox
15 71 0.849644733 ubox
15 72 0.003396339 ubox
15 73 0.003929872 ubox
16 28 0.170755490 ubox
16 69 0.047946760 ubox
16 70 0.679867205 ubox
16 71 0.009664885 ubox
16 72 0.003288970 ubox
16 76 0.360220164 ubox
16 78 0.005874823 ubox
17 22 0.004992601 ubox
17 24 0.004254676 ubox
17 27 0.252113853 ubox
17 45 0.003336953 ubox
17 51 0.004800045 ubox
17 68 0.046636399 ubox
17 75 0.510137693 ubox
17 77 0.005549773 ubox
18 24 0.013161053 ubox
18 26 0.259354330 ubox
18 44 0.003412706 ubox
18 50 0.006122673 ubox
18 68 0.784762687 ubox
18 74 0.510147040 ubox
19 23 0.014995962 ubox
19 25 0.259328991 ubox
19 43 0.003418084 ubox
19 49 0.006127457 ubox
19 67 0.787289847 ubox
19 72 0.419027485 ubox
20 42 0.003352970 ubox
20 59 0.012139940 ubox
20 64 0.006236021 ubox
20 66 0.754137547 ubox
20 70 0.011004059 ubox
20 71 0.414923079 ubox
20 72 0.108847714 ubox
20 73 0.252912440 ubox
21 34 0.005278260 ubox
21 58 0.024242490 ubox
21 63 0.009504531 ubox
21 64 0.722309256 ubox
21 66 0.008109304 ubox
21 69 0.007548919 ubox
21 70 0.381854357 ubox
21 71 0.121137119 ubox
21 72 0.252800382 ubox
21 73 0.020216154 ubox
22 33 0.006074686 ubox
22 46 0.005742488 ubox
22 57 0.024348471 ubox
22 61 0.011085815 ubox
22 63 0.784983184 ubox
22 69 0.208181461 ubox
22 70 0.123206860 ubox
22 71 0.230047261 ubox
22 72 0.022202444 ubox
23 32 0.006173349 ubox
23 45 0.005624176 ubox
23 56 0.025095143 ubox
23 60 0.012235098 ubox
23 62 0.787444959 ubox
23 65 0.005017941 ubox
23 68 0.116827288 ubox
24 55 0.026074213 ubox
24 59 0.012216194 ubox
24 61 0.787127890 ubox
24 63 0.006291329 ubox
24 64 0.005079693 ubox
24 67 0.073018827 ubox
24 69 0.498133723 ubox
25 32 0.003817559 ubox
25 44 0.026070533 ubox
25 50 0.003781603 ubox
25 54 0.028563579 ubox
25 60 0.784736863 ubox
25 62 0.006694000 ubox
25 68 0.545208708 ubox
26 43 0.027584504 ubox
26 49 0.004143923 ubox
26 53 0.034073059 ubox
26 67 0.552770445 ubox
27 33 0.059213820 ubox
27 37 0.031272967 ubox
27 42 0.028215776 ubox
27 52 0.033394610 ubox
27 55 0.049403956 ubox
27 57 0.083062502 ubox
27 66 0.555512741 ubox
28 32 0.054871917 ubox
28 35 0.026967801 ubox
28 36 0.034459238 ubox
28 38 0.021127466 ubox
28 41 0.028434938 ubox
28 51 0.021310392 ubox
28 54 0.051871591 ubox
28 56 0.086460982 ubox
28 65 0.555380670 ubox
29 34 0.032386010 ubox
29 37 0.023639853 ubox
29 46 0.003183056 ubox
29 53 0.050666039 ubox
29 55 0.078265210 ubox
29 58 0.103548854 ubox
29 59 0.161067319 ubox
29 64 0.550161297 ubox
30 42 0.008700947 ubox
30 52 0.044208288 ubox
30 53 0.018514984 ubox
30 57 0.093921619 ubox
30 58 0.144317811 ubox
30 59 0.392679799 ubox
30 63 0.509144723 ubox
30 64 0.019643161 ubox
31 42 0.012838556 ubox
31 43 0.008603154 ubox
31 52 0.017397957 ubox
31 53 0.042849975 ubox
31 57 0.126055922 ubox
31 58 0.394615806 ubox
31 59 0.120774633 ubox
31 63 0.025190443 ubox
31 64 0.005705085 ubox
32 42 0.086050428 ubox
32 46 0.003666103 ubox
32 49 0.018097826 ubox
32 52 0.041522674 ubox
32 55 0.074212058 ubox
32 57 0.389520055 ubox
32 58 0.090577545 ubox
32 63 0.008006328 ubox
33 39 0.014690931 ubox
33 40 0.036571227 ubox
33 41 0.093189796 ubox
33 45 0.003648592 ubox
33 48 0.018735510 ubox
33 51 0.023667935 ubox
33 54 0.071372966 ubox
33 56 0.349472957 ubox
34 38 0.012921917 ubox
34 39 0.041077765 ubox
34 40 0.092796815 ubox
34 47 0.018816716 ubox
34 54 0.092806414 ubox
34 56 0.087184416 ubox
35 43 0.003390693 ubox
35 46 0.018390629 ubox
35 53 0.095655575 ubox
35 55 0.081269909 ubox
35 58 0.777534231 ubox
35 59 0.102689342 ubox
35 73 0.003472402 ubox
36 42 0.016045724 ubox
36 46 0.005330820 ubox
36 49 0.005190469 ubox
36 52 0.087139285 ubox
36 55 0.360518337 ubox
36 57 0.817985176 ubox
36 58 0.086758348 ubox
36 72 0.003380307 ubox
37 41 0.014482738 ubox
37 45 0.005698217 ubox
37 47 0.010042032 ubox
37 48 0.005435378 ubox
37 51 0.046371721 ubox
37 54 0.385409460 ubox
37 56 0.829508292 ubox
38 46 0.010207131 ubox
38 53 0.375065818 ubox
38 55 0.823440546 ubox
38 58 0.012898309 ubox
38 59 0.034123821 ubox
38 70 0.006339236 ubox
38 71 0.008526760 ubox
38 72 0.021362294 ubox
38 73 0.048590918 ubox
39 52 0.286260687 ubox
39 53 0.044472180 ubox
39 57 0.013353050 ubox
39 58 0.034602071 ubox
39 59 0.037387866 ubox
39 69 0.007959297 ubox
39 70 0.014363133 ubox
39 71 0.047634904 ubox
39 72 0.054001385 ubox
39 73 0.011931138 ubox
40 52 0.035422223 ubox
40 53 0.773793649 ubox
40 57 0.031029897 ubox
40 58 0.038323241 ubox
40 59 0.005960541 ubox
40 69 0.014075745 ubox
40 70 0.071112921 ubox
40 71 0.059742875 ubox
40 72 0.012932090 ubox
41 52 0.837171553 ubox
41 55 0.009945452 ubox
41 57 0.037862246 ubox
41 58 0.005642574 ubox
41 69 0.077938074 ubox
41 70 0.054001648 ubox
41 71 0.013648650 ubox
41 76 0.009777248 ubox
42 51 0.950059213 ubox
42 54 0.006759460 ubox
42 56 0.015508062 ubox
42 68 0.056319281 ubox
42 75 0.014887814 ubox
43 50 0.962535243 ubox
43 54 0.061397209 ubox
43 68 0.252575261 ubox
43 74 0.014845072 ubox
44 49 0.962044210 ubox
44 53 0.062988924 ubox
44 67 0.259172494 ubox
44 72 0.014194438 ubox
45 52 0.062410389 ubox
45 55 0.005982978 ubox
45 57 0.003759654 ubox
45 66 0.259765783 ubox
45 71 0.013986424 ubox
46 51 0.055343397 ubox
46 54 0.006317263 ubox
46 56 0.004011723 ubox
46 65 0.259853277 ubox
47 53 0.006264223 ubox
47 55 0.003984740 ubox
47 64 0.259756619 ubox
47 70 0.015128611 ubox
48 52 0.004630604 ubox
48 63 0.259809232 ubox
48 69 0.016311250 ubox
49 62 0.259754496 ubox
49 68 0.016477042 ubox
50 67 0.016478634 ubox
51 61 0.252965578 ubox
51 63 0.004923507 ubox
51 66 0.016247900 ubox
51 69 0.004406333 ubox
52 60 0.253575814 ubox
52 62 0.006810816 ubox
52 65 0.015170671 ubox
52 68 0.007149814 ubox
53 60 0.050871993 ubox
53 62 0.010128635 ubox
54 59 0.052452764 ubox
54 61 0.009902488 ubox
54 64 0.003518578 ubox
54 66 0.007299854 ubox
55 65 0.007427004 ubox
56 63 0.008727190 ubox
56 64 0.007249283 ubox
57 62 0.009596201 ubox
83 91 0.007773822 ubox
84 90 0.009851996 ubox
84 94 0.011442746 ubox
85 93 0.015832689 ubox
91 97 0.033628434 ubox
91 98 0.037803350 ubox
91 99 0.029612344 ubox
91 100 0.073280766 ubox
92 96 0.032774035 ubox
92 97 0.037782620 ubox
92 98 0.042156105 ubox
92 99 0.084862257 ubox
92 100 0.033646635 ubox
93 97 0.037300499 ubox
93 98 0.077615564 ubox
93 99 0.039548020 ubox
1 84 0.9500000 lbox
2 83 0.9500000 lbox
3 82 0.9500000 lbox
4 81 0.9500000 lbox
5 80 0.9500000 lbox
6 79 0.9500000 lbox
8 78 0.9500000 lbox
9 77 0.9500000 lbox
10 76 0.9500000 lbox
13 73 0.9500000 lbox
14 72 0.9500000 lbox
15 71 0.9500000 lbox
16 70 0.9500000 lbox
18 68 0.9500000 lbox
19 67 0.9500000 lbox
20 66 0.9500000 lbox
21 64 0.9500000 lbox
22 63 0.9500000 lbox
23 62 0.9500000 lbox
24 61 0.9500000 lbox
25 60 0.9500000 lbox
35 58 0.9500000 lbox
36 57 0.9500000 lbox
37 56 0.9500000 lbox
38 55 0.9500000 lbox
40 53 0.9500000 lbox
41 52 0.9500000 lbox
42 51 0.9500000 lbox
43 50 0.9500000 lbox
44 49 0.9500000 lbox
showpage
end
%%EOF
