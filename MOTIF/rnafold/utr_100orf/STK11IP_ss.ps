%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:23:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGGACUUCCUUUCCAUCAUUGAUAGGCGCCGGGCAGCUGAGCUGGUAGGAGGACCAGACGGGGAGGUUCGGCUCCGCCCCCCAGCGUCCCGUGGCCAUGACGACCGCUCAGAGGGACUCCCUGUUGUGGAAGCUCGCGGGGUUGCUGCGGGAGUCCGGGGAUGUGGUCCUGUCUGGCUGUAGCACCCUGAGCCUGC\
) } def
/len { sequence length } bind def

/coor [
[-86.79896545 576.98889160]
[-91.65772247 591.18017578]
[-88.80769348 606.74255371]
[-100.25042725 616.27740479]
[-105.10919189 630.46868896]
[-109.96794891 644.65997314]
[-114.82671356 658.85125732]
[-107.64958191 672.93188477]
[-112.61049652 687.93737793]
[-126.76623535 694.96520996]
[-141.71844482 689.84594727]
[-148.59623718 675.61669922]
[-143.31915283 660.71948242]
[-129.01799011 653.99249268]
[-124.15923309 639.80120850]
[-119.30046844 625.60992432]
[-114.44171143 611.41864014]
[-117.63926697 596.87127686]
[-105.84900665 586.32141113]
[-100.99024200 572.13012695]
[-107.83177948 564.45678711]
[-110.89028168 554.55731201]
[-109.54856873 544.20190430]
[-103.98268127 535.27154541]
[-95.14205170 529.41668701]
[-84.58813477 527.75177002]
[-79.06626892 513.80511475]
[-73.54440308 499.85848999]
[-68.02252960 485.91183472]
[-62.50066376 471.96517944]
[-67.01602936 460.73693848]
[-62.52276230 449.06915283]
[-50.92216492 443.41760254]
[-45.18191528 429.55941772]
[-39.44166183 415.70120239]
[-33.70141220 401.84301758]
[-39.62084579 388.22332764]
[-33.99682999 374.08737183]
[-19.67111206 367.97088623]
[-13.93086052 354.11270142]
[-8.19060898 340.25448608]
[-2.45035744 326.39630127]
[3.18087602 312.49343872]
[8.70274448 298.54681396]
[14.22461224 284.60015869]
[19.74648094 270.65350342]
[25.26834869 256.70684814]
[30.79021835 242.76020813]
[24.09242439 233.51121521]
[22.68053627 222.05851746]
[27.02073669 211.23712158]
[36.14078140 203.78222656]
[47.84517288 201.63804626]
[53.80239105 187.87171936]
[59.75960922 174.10540771]
[65.71682739 160.33908081]
[71.67404938 146.57276917]
[77.63126373 132.80644226]
[83.58848572 119.04012299]
[75.82343292 111.05764008]
[71.96636200 99.95859528]
[73.22547150 87.65836334]
[79.87527466 76.51197815]
[68.31757355 66.95062256]
[56.68513870 57.48032761]
[44.97868347 48.10168839]
[33.27222824 38.72304916]
[21.56577110 29.34440804]
[5.88640451 31.32758141]
[-6.55152750 21.57702255]
[-8.36881828 5.87756395]
[1.51269686 -6.45658350]
[17.23049164 -8.10778904]
[29.45947647 1.90357816]
[30.94441223 17.63795090]
[42.65086746 27.01659203]
[54.35732269 36.39523315]
[66.06378174 45.77387238]
[73.25598145 47.50410080]
[77.87893677 55.39292145]
[89.43663788 64.95427704]
[104.38069153 63.65998459]
[114.12241364 52.25389481]
[123.86413574 40.84780502]
[133.60585022 29.44171715]
[128.59707642 14.98974991]
[131.47555542 0.06959328]
[141.36994934 -11.33073139]
[155.54734802 -16.21515083]
[170.16757202 -13.36655903]
[179.90930176 -24.77264977]
[189.65101624 -36.17873764]
[199.39273071 -47.58482742]
[209.13446045 -58.99091721]
[218.87617493 -70.39700317]
[228.61790466 -81.80309296]
[238.35961914 -93.20918274]
[248.10133362 -104.61527252]
[249.05319214 -109.76577759]
[251.63191223 -113.64385986]
[255.07804871 -115.84223938]
[258.58062744 -116.31517029]
[268.84884644 -127.24970245]
[279.11706543 -138.18423462]
[279.49407959 -151.08274841]
[288.27911377 -159.97938538]
[300.37069702 -160.48464966]
[310.80938721 -171.25654602]
[321.24807739 -182.02844238]
[331.68679810 -192.80033875]
[316.88476562 -195.22937012]
[309.41467285 -208.23696899]
[314.77664185 -222.24588013]
[329.02270508 -226.94155884]
[341.66375732 -218.86666870]
[343.39254761 -203.96708679]
[354.64422607 -213.88676453]
[365.89587402 -223.80644226]
[370.26876831 -231.83657837]
[377.40307617 -233.79187012]
[388.80914307 -243.53358459]
[394.27792358 -258.37957764]
[408.98077393 -260.76177979]
[420.38687134 -270.50350952]
[421.37683105 -286.27676392]
[433.28533936 -296.66729736]
[449.04724121 -295.51062012]
[459.31130981 -283.49295044]
[457.98803711 -267.74414062]
[445.86251831 -257.60772705]
[430.12860107 -259.09741211]
[418.72250366 -249.35569763]
[414.06958008 -235.20649719]
[398.55087280 -232.12748718]
[387.14477539 -222.38577271]
[375.81555176 -212.55476379]
[364.56390381 -202.63508606]
[353.31222534 -192.71540833]
[342.45867920 -182.36164856]
[332.01998901 -171.58975220]
[321.58129883 -160.81785583]
[311.14260864 -150.04595947]
[307.79562378 -132.82298279]
[290.05157471 -127.91602325]
[279.78338623 -116.98149109]
[269.51516724 -106.04696655]
[259.50741577 -94.87355804]
[249.76571655 -83.46746826]
[240.02398682 -72.06137848]
[230.28227234 -60.65528488]
[220.54054260 -49.24919510]
[210.79882812 -37.84310532]
[201.05709839 -26.43701744]
[191.31538391 -15.03092861]
[181.57366943 -3.62483883]
[186.67428589 10.36977386]
[184.06784058 25.13670921]
[174.35569763 36.69268799]
[160.06953430 41.86977005]
[145.01194763 39.18343735]
[135.27021790 50.58952713]
[125.52850342 61.99561691]
[115.78678131 73.40170288]
[127.62002563 89.68856812]
[126.60581970 108.83272552]
[114.40032196 122.34744263]
[97.35480499 124.99734497]
[91.39758301 138.76365662]
[85.44036865 152.52998352]
[79.48314667 166.29629517]
[73.52593231 180.06262207]
[67.56871033 193.82893372]
[61.61149216 207.59526062]
[69.25516510 224.92225647]
[61.94058609 242.04417419]
[44.73686600 248.28208923]
[39.21499634 262.22872925]
[33.69312668 276.17538452]
[28.17126083 290.12203979]
[22.64939117 304.06866455]
[17.12752342 318.01531982]
[16.87686920 327.15545654]
[11.40783596 332.13656616]
[5.66758394 345.99475098]
[-0.07266743 359.85293579]
[-5.81291914 373.71112061]
[-0.00812669 388.16595459]
[-6.02697325 402.13836670]
[-19.84321785 407.58328247]
[-25.58346939 421.44146729]
[-31.32372093 435.29965210]
[-37.06397247 449.15783691]
[-34.23425674 467.34912109]
[-48.55401611 477.48706055]
[-54.07588196 491.43371582]
[-59.59775162 505.38034058]
[-65.11962128 519.32702637]
[-70.64148712 533.27362061]
[-61.69083786 551.25231934]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 20]
[2 19]
[4 17]
[5 16]
[6 15]
[7 14]
[26 198]
[27 197]
[28 196]
[29 195]
[30 194]
[33 192]
[34 191]
[35 190]
[36 189]
[39 186]
[40 185]
[41 184]
[42 183]
[43 181]
[44 180]
[45 179]
[46 178]
[47 177]
[48 176]
[53 173]
[54 172]
[55 171]
[56 170]
[57 169]
[58 168]
[59 167]
[63 81]
[64 80]
[65 78]
[66 77]
[67 76]
[68 75]
[82 163]
[83 162]
[84 161]
[85 160]
[90 155]
[91 154]
[92 153]
[93 152]
[94 151]
[95 150]
[96 149]
[97 148]
[98 147]
[102 146]
[103 145]
[104 144]
[107 142]
[108 141]
[109 140]
[110 139]
[116 138]
[117 137]
[118 136]
[120 135]
[121 134]
[123 132]
[124 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
