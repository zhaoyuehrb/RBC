%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:27:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAGAAACUCUGAGGCGGAUCCCCCAACCCAGUGUCAGACUGAUCGCCUUUGGCCCGAGGGCGAGGAGCCACAGGACAGUAUGGCCAAAGCGGCGGCCUCCUCGUCGCUGGAGGACUUGGACCUGAGCGGAGAGGAGGUCCAGCGGCUCACCUCCGCCUUCCAGGACCCGGAGUUCCGGC\
) } def
/len { sequence length } bind def

/coor [
[101.34094238 341.63995361]
[96.59024048 336.73059082]
[93.08740997 330.84405518]
[91.02769470 324.29196167]
[90.52967072 317.42352295]
[91.62846375 310.60675049]
[94.27340698 304.20883179]
[98.33030701 298.57644653]
[103.58825684 294.01681519]
[109.77054596 290.78097534]
[108.21978760 275.86135864]
[106.66902924 260.94174194]
[105.11827087 246.02210999]
[103.31021881 231.13146973]
[101.24541473 216.27426147]
[99.18061066 201.41705322]
[97.11581421 186.55984497]
[95.05101013 171.70265198]
[92.98620605 156.84544373]
[90.92140198 141.98823547]
[84.60564423 137.94332886]
[79.29475403 151.97167969]
[80.65037537 166.91029358]
[71.53527069 178.82310486]
[56.76188278 181.42057800]
[44.12999344 173.33135986]
[40.30876541 158.82626343]
[47.31566620 145.56340027]
[61.45322800 140.54515076]
[71.97413635 129.85353088]
[65.65837860 125.80863190]
[51.29958344 130.14741516]
[36.94078827 134.48619080]
[22.58199310 138.82498169]
[13.76723099 152.22943115]
[-2.22123265 153.55177307]
[-13.11841679 141.77761841]
[-10.56493378 125.93907166]
[3.48040223 118.18613434]
[18.24321175 124.46617889]
[32.60200500 120.12740326]
[46.96080017 115.78862000]
[61.31959534 111.44983673]
[64.77059174 103.68156433]
[69.59341431 97.57622528]
[55.39293289 92.74442291]
[41.19245148 87.91261292]
[26.99197197 83.08081055]
[12.79149151 78.24900055]
[-1.40898871 73.41719055]
[-15.60946941 68.58538818]
[-29.80994987 63.75358200]
[-44.01042938 58.92177200]
[-60.95296478 59.54372787]
[-66.24077606 43.43548584]
[-52.22586060 33.89512253]
[-39.17862320 44.72129440]
[-24.97814369 49.55310059]
[-10.77766228 54.38490677]
[3.42281795 59.21671295]
[17.62329865 64.04852295]
[31.82377815 68.88032532]
[46.02425766 73.71213531]
[60.22473907 78.54393768]
[74.42521667 83.37574768]
[90.42394257 71.03909302]
[110.62337494 71.40666199]
[119.14434814 59.06190109]
[127.66532135 46.71714401]
[136.18629456 34.37238693]
[144.70726013 22.02762985]
[130.65472412 0.54436827]
[137.96929932 -29.44717789]
[131.69528198 -43.07203293]
[116.45191956 -45.97365189]
[105.84986115 -57.30396652]
[103.96582031 -72.70623779]
[111.52425385 -86.25798035]
[125.61878204 -92.74827576]
[140.82977295 -89.68146515]
[151.30828857 -78.23680878]
[153.02513123 -62.81500244]
[145.32014465 -49.34605026]
[151.59416199 -35.72119522]
[166.18872070 -39.18509674]
[165.67098999 -54.17615891]
[165.15324402 -69.16722107]
[154.45252991 -81.12022400]
[157.26792908 -96.91430664]
[171.43972778 -104.43360138]
[186.09651184 -97.90995026]
[189.99487305 -82.34774017]
[180.14430237 -69.68496704]
[180.66204834 -54.69390106]
[181.17979431 -39.70283890]
[194.63764954 -33.07818604]
[206.83348083 -41.81096649]
[219.02932739 -50.54374695]
[231.22517395 -59.27652740]
[243.42100525 -68.00930786]
[255.61685181 -76.74208832]
[267.81268311 -85.47486877]
[280.00854492 -94.20764923]
[292.20437622 -102.94042969]
[298.92013550 -117.26554871]
[313.77267456 -118.38431549]
[325.96850586 -127.11709595]
[338.16436768 -135.84988403]
[350.36019897 -144.58265686]
[362.55603027 -153.31544495]
[365.43493652 -165.90559387]
[375.79437256 -172.92565918]
[387.76205444 -171.05635071]
[400.10681152 -179.57731628]
[412.45156860 -188.09828186]
[413.73876953 -203.68280029]
[424.77905273 -214.75738525]
[440.35949707 -216.09297180]
[453.12350464 -207.05891418]
[457.04431152 -191.92083740]
[450.27059937 -177.82647705]
[436.00076294 -171.43075562]
[420.97253418 -175.75352478]
[408.62777710 -167.23255920]
[396.28302002 -158.71159363]
[389.64065552 -142.48016357]
[371.28881836 -141.11959839]
[359.09298706 -132.38681030]
[346.89715576 -123.65403748]
[334.70129395 -114.92125702]
[322.50546265 -106.18847656]
[316.66201782 -92.48798370]
[300.93716431 -90.74459076]
[288.74130249 -82.01181030]
[276.54547119 -73.27902985]
[264.34963989 -64.54624939]
[252.15379333 -55.81346512]
[239.95794678 -47.08068466]
[227.76211548 -38.34790421]
[215.56626892 -29.61512566]
[203.37042236 -20.88234520]
[207.51713562 -0.32555667]
[201.55085754 18.32770348]
[188.24919128 30.74897003]
[171.91140747 34.73619080]
[157.05201721 30.54860115]
[148.53105164 42.89335632]
[140.01007080 55.23811722]
[131.48910522 67.58287048]
[122.96813202 79.92763519]
[132.41831970 94.03714752]
[133.21978760 112.29270172]
[123.82073212 129.45326233]
[105.77861023 139.92343140]
[107.84341431 154.78063965]
[109.90821838 169.63784790]
[111.97301483 184.49505615]
[114.03781891 199.35224915]
[116.10262299 214.20945740]
[118.16742706 229.06666565]
[121.94573975 234.54312134]
[122.31567383 240.24684143]
[120.03789520 244.47134399]
[121.58865356 259.39096069]
[123.13941193 274.31057739]
[124.69017029 289.23022461]
[144.91697693 302.26092529]
[149.02130127 325.71209717]
[134.72962952 344.43527222]
[138.57020569 358.93527222]
[142.41079712 373.43524170]
[146.25138855 387.93524170]
[158.19132996 399.17666626]
[154.16310120 415.07339478]
[138.31060791 419.27221680]
[126.94151306 407.45376587]
[131.75138855 391.77584839]
[127.91079712 377.27584839]
[124.07021332 362.77584839]
[120.22962952 348.27584839]
[113.49034882 347.56405640]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 166]
[11 165]
[12 164]
[13 163]
[14 160]
[15 159]
[16 158]
[17 157]
[18 156]
[19 155]
[20 154]
[31 43]
[32 42]
[33 41]
[34 40]
[45 65]
[46 64]
[47 63]
[48 62]
[49 61]
[50 60]
[51 59]
[52 58]
[53 57]
[67 150]
[68 149]
[69 148]
[70 147]
[71 146]
[73 84]
[74 83]
[85 95]
[86 94]
[87 93]
[96 141]
[97 140]
[98 139]
[99 138]
[100 137]
[101 136]
[102 135]
[103 134]
[104 133]
[106 131]
[107 130]
[108 129]
[109 128]
[110 127]
[113 125]
[114 124]
[115 123]
[169 180]
[170 179]
[171 178]
[172 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
