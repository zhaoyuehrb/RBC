%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:19:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUUAUUCUUUCUGCCAGGUACAUCAGAUCCAUCAGGUCCGAGCUGUGUUGACUACCACUGCUUUUCCCUUCGUCUCAGUUAUGUCUUGGAAGAAGGCUUUGCGGAUCCCCGGAGACCUUCGGGUAGCAACUGUCACCUUGAUGCUGGCGAUGCUGAGCUCCCUACUGGCUGAGGGCAGAG\
) } def
/len { sequence length } bind def

/coor [
[133.42314148 238.23884583]
[129.28924561 252.89596558]
[119.54618073 264.60034180]
[105.88197327 271.32412720]
[90.66403961 271.90240479]
[76.52898407 266.23495483]
[65.92577362 255.30372620]
[60.69149399 241.00259399]
[61.73300934 225.80934143]
[68.86987305 212.35626221]
[80.86557770 202.97421265]
[95.64179993 199.28866577]
[98.20424652 184.50917053]
[100.76669312 169.72966003]
[103.32913971 154.95014954]
[105.89157867 140.17063904]
[108.45402527 125.39112854]
[97.90777588 131.35319519]
[84.15295410 132.41833496]
[72.63474274 142.02722168]
[75.33752441 157.14643860]
[70.10350037 171.58598328]
[58.34060669 181.46171570]
[43.21299744 184.11708069]
[28.78992462 178.83782959]
[18.95112419 167.04403687]
[16.34318161 151.90817261]
[21.66762161 137.50172424]
[33.49219513 127.69993591]
[48.63615417 125.13945007]
[63.02584839 130.50901794]
[74.54405212 120.90012360]
[72.94695282 113.57214355]
[58.65741730 109.01045227]
[69.75276184 98.91618347]
[68.15566254 91.58821106]
[53.68356705 87.64377594]
[39.21147537 83.69934082]
[27.11639023 93.23952484]
[11.90078735 93.82163239]
[-0.59223884 85.43186188]
[-5.68846798 71.46166229]
[-20.16056061 67.51722717]
[-34.63265228 63.57279587]
[-49.10474396 59.62836456]
[-64.45384979 63.46443558]
[-74.69858551 52.65264893]
[-89.17067719 48.70821381]
[-103.64276886 44.76378250]
[-115.65884399 54.58180237]
[-131.15281677 55.42825699]
[-144.16693115 46.97766876]
[-149.69700623 32.47946548]
[-145.61659241 17.50849533]
[-133.49472046 7.82140541]
[-117.99247742 7.14307880]
[-105.07080078 15.73434639]
[-99.69833374 30.29168892]
[-85.22624207 34.23612213]
[-70.75415039 38.18055725]
[-56.44018555 34.06235123]
[-45.16031265 45.15627289]
[-30.68821907 49.10070419]
[-16.21612740 53.04513550]
[-1.74403477 56.98957062]
[9.73608398 47.53733063]
[24.75844383 46.64699554]
[37.57438278 54.86922836]
[43.15590668 69.22724915]
[57.62800217 73.17168427]
[72.10009003 77.11611176]
[87.46652222 68.15814972]
[104.31840515 67.93428040]
[118.27552032 75.59333801]
[126.14739227 88.34809113]
[126.65406799 102.39597321]
[140.44987488 96.50736237]
[154.24568176 90.61875153]
[168.04148865 84.73014832]
[181.83729553 78.84153748]
[195.63310242 72.95292664]
[209.42890930 67.06431580]
[223.22471619 61.17570877]
[229.90928650 54.91308594]
[237.30824280 55.30667877]
[251.20310974 49.65575790]
[250.78704834 42.56095505]
[252.34249878 35.42584610]
[255.85632324 28.80169487]
[261.16070557 23.22813797]
[267.93890381 19.18973351]
[275.74337769 17.07497215]
[284.02493286 17.14111900]
[292.17141724 19.48798943]
[300.22186279 6.83135605]
[308.27230835 -5.82527781]
[316.32272339 -18.48191071]
[324.37316895 -31.13854408]
[326.34643555 -40.08338547]
[332.67202759 -43.94169235]
[340.93853760 -56.45826340]
[349.20507812 -68.97483826]
[350.35406494 -84.75426483]
[363.82440186 -91.11034393]
[372.09091187 -103.62691498]
[380.35745239 -116.14349365]
[380.80154419 -132.53662109]
[395.34741211 -140.10961914]
[409.03146362 -131.07202148]
[407.77676392 -114.72093964]
[392.87402344 -107.87696838]
[384.60748291 -95.36039734]
[376.34097290 -82.84381866]
[375.78323364 -67.95966339]
[361.72164917 -60.70831299]
[353.45510864 -48.19173813]
[345.18859863 -35.67516708]
[337.02981567 -23.08810234]
[328.97937012 -10.43146801]
[320.92892456 2.22516537]
[312.87847900 14.88179874]
[304.82803345 27.53843307]
[310.59802246 41.38427353]
[325.25396729 44.57847214]
[339.90994263 47.77267075]
[348.98675537 46.54163742]
[354.78906250 51.14954376]
[369.38803101 54.59486008]
[383.98696899 58.04017639]
[396.64266968 46.83623123]
[413.31637573 45.38846588]
[427.43087769 54.06948471]
[433.53640747 69.29531860]
[448.19235229 72.48951721]
[462.84832764 75.68371582]
[477.50427246 78.87791443]
[492.63555908 74.25677490]
[503.42327881 84.52684021]
[518.07922363 87.72103882]
[529.57397461 77.29746246]
[545.00384521 75.65451813]
[558.43572998 83.42395020]
[564.70477295 97.61825562]
[561.40051270 112.77942657]
[549.79333496 123.07769012]
[534.34661865 124.55315399]
[520.99975586 116.63846588]
[514.88507080 102.37699127]
[500.22909546 99.18280029]
[486.14608765 104.03240204]
[474.31008911 93.53386688]
[459.65411377 90.33967590]
[444.99816895 87.14547729]
[430.34219360 83.95127869]
[421.23052979 93.72812653]
[408.37274170 97.75225830]
[395.10128784 94.86844635]
[384.91168213 85.72661591]
[380.54165649 72.63913727]
[365.94268799 69.19382477]
[351.34375000 65.74850464]
[336.71572876 62.42862701]
[322.05978394 59.23443222]
[307.40380859 56.04023361]
[282.67242432 75.47888947]
[256.85403442 63.55061722]
[242.95916748 69.20153809]
[229.11332703 74.97151184]
[215.31752014 80.86012268]
[201.52171326 86.74873352]
[187.72590637 92.63734436]
[173.93009949 98.52595520]
[160.13429260 104.41455841]
[146.33848572 110.30316925]
[132.54267883 116.19178009]
[123.23353577 127.95357513]
[120.67108917 142.73307800]
[118.10864258 157.51258850]
[115.54619598 172.29209900]
[112.98374939 187.07160950]
[110.42130280 201.85112000]
[123.09441376 210.29577637]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 181]
[13 180]
[14 179]
[15 178]
[16 177]
[17 176]
[19 32]
[20 31]
[36 71]
[37 70]
[38 69]
[42 65]
[43 64]
[44 63]
[45 62]
[47 60]
[48 59]
[49 58]
[76 175]
[77 174]
[78 173]
[79 172]
[80 171]
[81 170]
[82 169]
[83 168]
[85 167]
[86 166]
[94 122]
[95 121]
[96 120]
[97 119]
[98 118]
[100 117]
[101 116]
[102 115]
[104 113]
[105 112]
[106 111]
[123 164]
[124 163]
[125 162]
[127 161]
[128 160]
[129 159]
[133 154]
[134 153]
[135 152]
[136 151]
[138 149]
[139 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
