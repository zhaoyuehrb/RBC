%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:33:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGACUUCCGGUUCAAGCCGGAAGUUGUGGUUACCAAGGCGACGCAACGCCGCCCGGCCAGCUUUUCAGUUUCAUAGAGGUUCCCAGUGCCACCUUCUGUGAUGUCAUUCCCAAGAGGAAGUCAGACCCAGAAAAUAAAGCACCCCAUUGGUACACGAAAGGGACCAUUGGAGGUGCCACCCCCAACAGAGAAGGACUGGC\
) } def
/len { sequence length } bind def

/coor [
[-74.91997528 258.37240601]
[-86.54283142 267.85446167]
[-98.16568756 277.33648682]
[-107.46583557 289.10540771]
[-114.00409698 302.60546875]
[-120.54236603 316.10549927]
[-127.08062744 329.60552979]
[-133.61889648 343.10556030]
[-140.15716553 356.60562134]
[-146.69543457 370.10565186]
[-153.23370361 383.60568237]
[-159.77195740 397.10574341]
[-158.04377747 413.41357422]
[-171.46009827 422.84405518]
[-186.21937561 415.69592285]
[-187.13851929 399.32254028]
[-173.27200317 390.56747437]
[-166.73373413 377.06741333]
[-160.19546509 363.56738281]
[-153.65719604 350.06735229]
[-147.11894226 336.56732178]
[-140.58067322 323.06726074]
[-134.04240417 309.56723022]
[-127.50413513 296.06719971]
[-120.96587372 282.56713867]
[-125.52386475 276.61108398]
[-137.43598938 285.72708130]
[-149.34811401 294.84307861]
[-161.26023865 303.95904541]
[-173.17236328 313.07504272]
[-185.08464050 322.19085693]
[-194.20024109 310.27841187]
[-182.28836060 301.16293335]
[-170.37623596 292.04693604]
[-158.46411133 282.93093872]
[-146.55198669 273.81494141]
[-134.63986206 264.69897461]
[-139.19784546 258.74288940]
[-153.93737793 261.52612305]
[-168.67691040 264.30932617]
[-183.41644287 267.09255981]
[-192.11599731 280.28698730]
[-207.61398315 283.38345337]
[-220.71569824 274.54489136]
[-223.64814758 259.01504517]
[-214.67155457 246.00749207]
[-199.11157227 243.23939514]
[-186.19966125 252.35302734]
[-171.46012878 249.56980896]
[-156.72059631 246.78659058]
[-141.98106384 244.00337219]
[-124.74341583 246.19023132]
[-112.72364807 254.55706787]
[-107.64773560 265.71365356]
[-96.02487946 256.23159790]
[-84.40202332 246.74955750]
[-72.85324860 237.17741394]
[-61.37926102 227.51576233]
[-49.90527344 217.85409546]
[-38.43128586 208.19244385]
[-26.95729828 198.53079224]
[-15.63495445 188.69186401]
[-4.46699286 178.67803955]
[6.70096874 168.66421509]
[17.86893082 158.65039062]
[29.03689194 148.63656616]
[40.20485306 138.62274170]
[44.51536942 124.36551666]
[59.95535278 120.91333771]
[71.12331390 110.89952087]
[82.29127502 100.88569641]
[85.30338287 86.19123077]
[78.97585297 72.59114838]
[72.64833069 58.99105453]
[66.32080841 45.39096832]
[59.99327850 31.79087830]
[53.66575241 18.19078827]
[47.33823013 4.59069967]
[40.90513992 -8.95977402]
[34.36687088 -22.45981407]
[27.82860565 -35.95985413]
[12.50453854 -36.99355316]
[-0.24069609 -45.56411743]
[-6.97869349 -59.36610794]
[-5.89696646 -74.68685913]
[2.71350574 -87.40516663]
[16.53654861 -94.09986877]
[31.85383606 -92.97012329]
[44.54508972 -84.31983185]
[51.19643021 -70.47586823]
[50.01868057 -55.16219711]
[41.32864380 -42.49811935]
[47.86691284 -28.99808121]
[54.40517807 -15.49804115]
[60.15423203 -10.84498596]
[60.93831635 -1.73682582]
[67.26584625 11.86326313]
[73.59336853 25.46335220]
[79.92089081 39.06344223]
[86.24842072 52.66352844]
[92.57594299 66.26361847]
[98.90347290 79.86370850]
[113.90368652 79.98034668]
[128.90255737 80.09699249]
[135.44082642 66.59695435]
[141.97909546 53.09691238]
[139.11669922 31.86438370]
[156.65446472 20.99083138]
[162.55596924 7.20053530]
[168.45747375 -6.58976030]
[174.35897827 -20.38005638]
[169.75163269 -35.74728775]
[179.01161194 -48.84813690]
[195.03546143 -49.63275146]
[205.53106689 -37.49924088]
[202.44706726 -21.75539970]
[188.14927673 -14.47855186]
[182.24777222 -0.68825668]
[176.34626770 13.10203934]
[170.44476318 26.89233398]
[175.05078125 34.49769211]
[175.64550781 43.50711060]
[171.96890259 51.90415573]
[164.73117065 57.75097656]
[155.47914124 59.63517761]
[148.94087219 73.13521576]
[142.40260315 86.63526154]
[145.67173767 93.38527679]
[157.88186646 84.67249298]
[170.09199524 75.95970154]
[177.75294495 63.06358719]
[192.00746155 58.39357376]
[205.81419373 64.25653076]
[212.35299683 77.75630951]
[208.39387512 92.22439575]
[195.89253235 100.51393890]
[181.02281189 98.52934265]
[166.61640930 102.70732880]
[152.21000671 106.88531494]
[155.47914124 113.63533783]
[170.12496948 116.87560272]
[184.77081299 120.11587524]
[199.41665649 123.35614014]
[214.06250000 126.59640503]
[228.73309326 129.72268677]
[243.42755127 132.73480225]
[258.12200928 135.74690247]
[273.19479370 130.93836975]
[284.10913086 141.07380676]
[298.80358887 144.08590698]
[313.49804688 147.09800720]
[328.19250488 150.11012268]
[337.83239746 138.22184753]
[351.89743042 132.18583679]
[367.15557861 133.38912964]
[380.10058594 141.55520630]
[387.75784302 154.80757141]
[388.36773682 170.10092163]
[381.79010010 183.92095947]
[369.53646851 193.09194946]
[354.42260742 195.50645447]
[339.92160034 190.60963440]
[329.36563110 179.52676392]
[325.18038940 164.80458069]
[310.48593140 161.79248047]
[295.79147339 158.78036499]
[281.09701538 155.76826477]
[267.07528687 160.79223633]
[255.10990906 150.44136047]
[240.41545105 147.42926025]
[225.72099304 144.41714478]
[218.53192139 146.15490723]
[210.82223511 141.24224854]
[196.17639160 138.00198364]
[181.53054810 134.76171875]
[166.88470459 131.52145386]
[152.23886108 128.28117371]
[149.22196960 142.97465515]
[139.91906738 154.74139404]
[126.31808472 161.06698608]
[111.32536316 160.59973145]
[98.14466858 153.43948364]
[89.59253693 141.11628723]
[87.49645996 126.26345825]
[92.30509949 112.05365753]
[81.13713837 122.06748199]
[69.96917725 132.08129883]
[64.85984802 147.05479431]
[50.21867752 149.79071045]
[39.05071259 159.80453491]
[27.88275146 169.81835938]
[16.71479034 179.83216858]
[5.54682922 189.84599304]
[-5.62113237 199.85981750]
[-8.04091072 206.02513123]
[-12.53841019 209.51414490]
[-17.29564285 210.00477600]
[-28.76963043 219.66642761]
[-40.24361801 229.32809448]
[-51.71760559 238.98974609]
[-63.19159317 248.65139771]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 56]
[2 55]
[3 54]
[4 25]
[5 24]
[6 23]
[7 22]
[8 21]
[9 20]
[10 19]
[11 18]
[12 17]
[38 51]
[39 50]
[40 49]
[41 48]
[57 201]
[58 200]
[59 199]
[60 198]
[61 197]
[62 194]
[63 193]
[64 192]
[65 191]
[66 190]
[67 189]
[69 187]
[70 186]
[71 185]
[72 102]
[73 101]
[74 100]
[75 99]
[76 98]
[77 97]
[78 96]
[79 94]
[80 93]
[81 92]
[104 127]
[105 126]
[106 125]
[108 120]
[109 119]
[110 118]
[111 117]
[140 177]
[141 176]
[142 175]
[143 174]
[144 173]
[145 171]
[146 170]
[147 169]
[149 167]
[150 166]
[151 165]
[152 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
