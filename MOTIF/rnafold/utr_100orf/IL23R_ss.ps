%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:43:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAAGGGUGGCAGCCUGGCUCUGAAGUGGAAUUAUGUGCUUCAAACAGGUUGAAAGAGGGAAACAGUCUUUUCCUGCUUCCAGACAUGAAUCAGGUCACUAUUCAAUGGGAUGCAGUAAUAGCCCUUUACAUACUCUUCAGCUGGUGUCAUGGAGGAAUUACAAAUAUAAACUGCUCUGGCCACA\
) } def
/len { sequence length } bind def

/coor [
[75.37749481 254.16026306]
[76.23294830 238.87867737]
[84.10207367 225.75100708]
[97.17659760 217.79391479]
[96.16394806 202.82814026]
[95.15130615 187.86235046]
[94.13865662 172.89657593]
[93.12601471 157.93080139]
[92.11336517 142.96502686]
[91.10072327 127.99923706]
[77.92451477 120.83072662]
[64.80931091 128.11026001]
[51.69411469 135.38978577]
[38.57891464 142.66931152]
[25.46371651 149.94885254]
[12.34851646 157.22837830]
[-0.76668274 164.50790405]
[-1.75461566 176.38143921]
[-8.29324436 186.19764709]
[-18.65616798 191.57398987]
[-30.20679665 191.27323914]
[-40.06887436 185.48635864]
[-53.42245102 192.31877136]
[-66.77602386 199.15119934]
[-80.12960052 205.98361206]
[-93.48317719 212.81604004]
[-106.83675385 219.64846802]
[-120.19033051 226.48088074]
[-122.45871735 241.83125305]
[-133.34062195 252.89306641]
[-148.65174866 255.41282654]
[-162.50463867 248.42161560]
[-169.57258606 234.60772705]
[-167.13781738 219.28285217]
[-156.13655090 208.33973694]
[-140.79899597 205.98623657]
[-127.02275848 213.12730408]
[-113.66918182 206.29489136]
[-100.31560516 199.46246338]
[-86.96202850 192.63003540]
[-73.60845184 185.79762268]
[-60.25487137 178.96519470]
[-46.90129471 172.13278198]
[-42.35083389 154.41751099]
[-26.02752495 145.48155212]
[-8.04621220 151.39270020]
[5.06898689 144.11317444]
[18.18418694 136.83364868]
[31.29938507 129.55412292]
[44.41458511 122.27458954]
[57.52978516 114.99505615]
[70.64498138 107.71553040]
[71.21448517 100.23718262]
[56.25780487 99.09795380]
[57.39726257 84.14129639]
[72.35347748 85.28048706]
[72.92297363 77.80213928]
[61.06134033 68.62055206]
[49.19970322 59.43896103]
[37.33806992 50.25737381]
[25.47643280 41.07578278]
[13.61479664 31.89419365]
[1.75316036 22.71260452]
[-14.27895355 23.30495453]
[-24.62825012 11.04642296]
[-21.35563660 -4.65929461]
[-6.97158051 -11.76411533]
[7.48970127 -4.81782913]
[10.93475056 10.85096741]
[22.79638672 20.03255653]
[34.65802383 29.21414757]
[46.51965714 38.39573669]
[58.38129425 47.57732773]
[70.24292755 56.75891495]
[82.10456848 65.94050598]
[95.78706360 59.79320145]
[96.79970551 44.82742310]
[90.01170349 30.53639030]
[98.59056854 18.36049652]
[99.60321045 3.39471793]
[100.61585999 -11.57106113]
[90.02929688 -18.26562881]
[83.33983612 -28.76985168]
[81.76908112 -41.05096054]
[85.55502319 -52.76315689]
[93.91836548 -61.69565582]
[105.22203064 -66.18998718]
[106.73955536 -81.11302948]
[108.25708008 -96.03607178]
[109.77460480 -110.95910645]
[111.29212952 -125.88214874]
[109.04370117 -134.75862122]
[112.96338654 -141.04367065]
[114.73273468 -155.93894958]
[107.77191925 -170.78749084]
[117.37141418 -184.08341980]
[133.65606689 -182.14903259]
[139.87364197 -166.97425842]
[129.62802124 -154.16960144]
[127.85866547 -139.27432251]
[126.21517181 -124.36462402]
[124.69764709 -109.44158173]
[123.18012238 -94.51854706]
[121.66259766 -79.59550476]
[120.14507294 -64.67246246]
[133.83525085 -53.54399109]
[138.15878296 -36.27742004]
[131.20684814 -19.72112656]
[115.58164215 -10.55841541]
[114.56899261 4.40736389]
[113.55635071 19.37314415]
[120.41677856 32.59372330]
[111.76548767 45.84006882]
[110.75283813 60.80584717]
[123.00755310 74.53403473]
[126.11197662 89.89896393]
[141.10983276 89.64562225]
[156.10769653 89.39228058]
[171.10556030 89.13893890]
[186.10342407 88.88559723]
[193.21865845 80.62232208]
[203.49902344 77.71093750]
[213.47138977 80.88334656]
[219.90377808 88.85727692]
[234.90164185 89.11061859]
[249.89950562 89.36396027]
[264.89736938 89.61730194]
[279.89523315 89.87064362]
[294.89309692 90.12399292]
[310.76828003 80.81335449]
[325.45782471 90.39759827]
[340.45782471 90.39759827]
[355.45782471 90.39759827]
[370.45782471 90.39759827]
[385.45782471 90.39759827]
[394.46923828 77.76533508]
[409.19534302 72.87434387]
[423.97360229 77.60530090]
[433.12155151 90.13906097]
[433.12155151 105.65613556]
[423.97360229 118.18989563]
[409.19534302 122.92085266]
[394.46923828 118.02985382]
[385.45782471 105.39759827]
[370.45782471 105.39759827]
[355.45782471 105.39759827]
[340.45782471 105.39759827]
[325.45782471 105.39759827]
[316.67285156 113.73320007]
[304.16198730 113.84301758]
[294.63973999 105.12184906]
[279.64187622 104.86850739]
[264.64401245 104.61516571]
[249.64616394 104.36182404]
[234.64830017 104.10848236]
[219.65043640 103.85514069]
[203.49902344 114.46311951]
[186.35676575 103.88345337]
[171.35890198 104.13679504]
[156.36103821 104.39013672]
[141.36317444 104.64347839]
[126.36531830 104.89682007]
[121.29061127 110.41926575]
[134.57392883 117.38729095]
[149.13583374 120.98607635]
[156.32527161 134.15086365]
[151.48155212 148.34729004]
[137.74472046 154.37217712]
[124.01998901 148.31974792]
[119.20486450 134.11236572]
[111.14120483 121.46414948]
[106.06649780 126.98659515]
[107.07914734 141.95237732]
[108.09178925 156.91815186]
[109.10443878 171.88392639]
[110.11708069 186.84971619]
[111.12973022 201.81549072]
[112.14237976 216.78126526]
[126.16963959 222.90455627]
[135.73547363 234.85249329]
[138.64173889 249.87953186]
[134.22059631 264.53259277]
[123.48796844 275.44448853]
[108.91015625 280.10775757]
[93.83702850 277.45077515]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 178]
[5 177]
[6 176]
[7 175]
[8 174]
[9 173]
[10 172]
[11 52]
[12 51]
[13 50]
[14 49]
[15 48]
[16 47]
[17 46]
[22 43]
[23 42]
[24 41]
[25 40]
[26 39]
[27 38]
[28 37]
[57 75]
[58 74]
[59 73]
[60 72]
[61 71]
[62 70]
[63 69]
[76 114]
[77 113]
[79 111]
[80 110]
[81 109]
[87 105]
[88 104]
[89 103]
[90 102]
[91 101]
[93 100]
[94 99]
[116 162]
[117 161]
[118 160]
[119 159]
[120 158]
[124 156]
[125 155]
[126 154]
[127 153]
[128 152]
[129 151]
[131 148]
[132 147]
[133 146]
[134 145]
[135 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
