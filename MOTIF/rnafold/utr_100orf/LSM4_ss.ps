%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:52:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGCCCUACUCCGCGUGGAUUGGUUGACCGCCCUUCGAGCCCGGUGCUGACUGGCUUGCGUCUCUGCCACUUUCUUUCAGCUUAGUGGCGCGCGGCGCGGCGACGACCGCCGGGAGCGUGUGCAGCGGCGGCGGCGGAAGUGGCCGGCGAGCCCGGUCCCCGCCGGCACCAUGCUUCCCUUGUCACUGCUGAAGACGGCUCAGAAUCACCCCAUGUUGGUGGAGCUGAAAAAUGGGGAGACGUACAAUGGACAC\
CUGGUGAGCUGCGACA\
) } def
/len { sequence length } bind def

/coor [
[-15.99841404 703.36053467]
[-19.43267250 717.96209717]
[-22.78254890 732.58325195]
[-26.04793549 747.22357178]
[-29.31332016 761.86383057]
[-18.94573212 773.40905762]
[-17.37779236 788.84667969]
[-25.21240807 802.24066162]
[-39.43700790 808.44073486]
[-54.58194351 805.06274414]
[-64.82367706 793.40570068]
[-66.22406006 777.95196533]
[-58.24460220 764.64379883]
[-43.95358276 758.59844971]
[-40.68819809 743.95812988]
[-37.42280960 729.31787109]
[-39.02803040 722.13177490]
[-34.03424454 714.52789307]
[-30.59998512 699.92626953]
[-44.33765793 685.94610596]
[-46.80097580 666.35479736]
[-36.80574799 649.15765381]
[-18.29497337 641.48944092]
[-15.53873062 626.74481201]
[-12.78248787 612.00024414]
[-10.02624512 597.25561523]
[-15.29317284 583.32336426]
[-5.15184021 571.17987061]
[-2.39559746 556.43530273]
[0.36064535 541.69067383]
[3.11688805 526.94610596]
[-8.28294182 517.35913086]
[-13.38744831 503.25949097]
[-10.73158741 488.39971924]
[-0.93004894 476.78823853]
[13.46136284 471.60803223]
[16.21760559 456.86343384]
[4.24734688 447.82391357]
[-9.18010235 454.50997925]
[-22.60755157 461.19607544]
[-36.03499985 467.88214111]
[-49.46245193 474.56820679]
[-55.72107315 481.17028809]
[-63.08381653 481.25296021]
[-76.58759308 487.78350830]
[-90.09136963 494.31405640]
[-98.85438538 508.17556763]
[-115.22722626 507.24707031]
[-122.36691284 492.48370361]
[-112.92875671 479.07275391]
[-96.62191772 480.81027222]
[-83.11814117 474.27972412]
[-69.61436462 467.74917603]
[-56.14852524 461.14077759]
[-42.72107697 454.45468140]
[-29.29362679 447.76861572]
[-15.86617756 441.08255005]
[-2.43872833 434.39645386]
[7.60252142 423.25314331]
[12.85923862 409.20443726]
[18.11595535 395.15570068]
[23.37267113 381.10696411]
[28.62938881 367.05822754]
[33.88610458 353.00949097]
[39.14282227 338.96075439]
[44.39953995 324.91201782]
[43.80251694 317.57305908]
[49.79895020 310.73196411]
[55.21757507 296.74487305]
[60.63619995 282.75781250]
[54.14978790 274.88278198]
[51.47825241 264.95291138]
[53.16383743 254.72737122]
[58.97068024 246.04638672]
[67.91527557 240.50001526]
[78.43251801 239.13708496]
[84.33244324 225.34611511]
[90.23237610 211.55514526]
[96.13230133 197.76417542]
[102.03222656 183.97320557]
[107.93215179 170.18223572]
[113.83207703 156.39126587]
[119.73200989 142.60029602]
[125.63193512 128.80932617]
[109.47829437 136.98442078]
[91.55436707 136.84236145]
[75.85094452 128.57983398]
[65.78878021 114.18315125]
[63.47377396 96.95348358]
[51.09880829 88.47643280]
[38.72384644 79.99938965]
[26.34888649 71.52234650]
[9.86463547 67.55928802]
[9.10951805 50.62216568]
[25.17569542 45.20789719]
[34.82593155 59.14738083]
[47.20089340 67.62442780]
[59.57585526 76.10147095]
[71.95082092 84.57852173]
[82.05625153 73.49338531]
[72.47354889 61.95337677]
[62.89085007 50.41336823]
[53.30814743 38.87335587]
[37.53049088 35.96731186]
[30.09268761 21.75257874]
[36.70038223 7.13348436]
[52.28472137 3.32454801]
[64.89073181 13.24765873]
[64.84815979 29.29065514]
[74.43085480 40.83066559]
[84.01355743 52.37067413]
[93.59626007 63.91068268]
[107.74410248 63.52386475]
[121.22640228 68.57132721]
[131.99981689 78.48291779]
[139.44975281 65.46376038]
[146.89967346 52.44459915]
[154.34960938 39.42544174]
[161.72422791 26.36347580]
[169.02330017 13.25913906]
[162.66114807 -0.77044338]
[165.74394226 -15.68183994]
[176.88423157 -25.79906273]
[191.66879272 -27.39731407]
[198.96786499 -40.50164795]
[206.26693726 -53.60598373]
[213.56599426 -66.71031952]
[220.86506653 -79.81465912]
[228.16413879 -92.91899109]
[228.11987305 -108.74013519]
[241.07250977 -116.09396362]
[248.37156677 -129.19830322]
[255.67063904 -142.30262756]
[262.96969604 -155.40696716]
[270.26876831 -168.51130676]
[270.22451782 -184.33244324]
[283.17715454 -191.68627930]
[290.47622681 -204.79060364]
[297.77526855 -217.89494324]
[305.07434082 -230.99928284]
[312.37341309 -244.10362244]
[319.67248535 -257.20794678]
[326.97155762 -270.31228638]
[333.96600342 -283.58172607]
[340.65206909 -297.00918579]
[347.33813477 -310.43661499]
[354.02420044 -323.86407471]
[360.71029663 -337.29153442]
[367.39636230 -350.71896362]
[374.08242798 -364.14642334]
[365.06970215 -376.51690674]
[362.84963989 -391.66055298]
[367.93243408 -406.09744263]
[379.15005493 -416.51010132]
[393.92480469 -420.50576782]
[408.86154175 -417.16625977]
[420.52792358 -407.25897217]
[426.24310303 -393.06054688]
[424.69375610 -377.83367920]
[416.23593140 -365.07736206]
[402.81314087 -357.72290039]
[387.50988770 -357.46035767]
[380.82382202 -344.03289795]
[374.13772583 -330.60543823]
[367.45166016 -317.17800903]
[360.76559448 -303.75054932]
[354.07949829 -290.32308960]
[347.39343262 -276.89566040]
[348.12673950 -274.22576904]
[347.86614990 -271.10952759]
[346.43835449 -267.91711426]
[343.80456543 -265.07391357]
[340.07589722 -263.01321411]
[332.77682495 -249.90888977]
[325.47775269 -236.80455017]
[318.17868042 -223.70021057]
[310.87960815 -210.59588623]
[303.58056641 -197.49154663]
[296.28149414 -184.38720703]
[296.84780884 -169.50337219]
[283.37310791 -161.21223450]
[276.07403564 -148.10791016]
[268.77496338 -135.00357056]
[261.47592163 -121.89923096]
[254.17684937 -108.79489899]
[254.74317932 -93.91106415]
[241.26846313 -85.61992645]
[233.96940613 -72.51558685]
[226.67033386 -59.41125488]
[219.37126160 -46.30691910]
[212.07220459 -33.20258331]
[204.77313232 -20.09824753]
[211.19734192 -6.68677902]
[208.46011353 8.11090755]
[197.40507507 18.58179474]
[182.12763977 20.55820656]
[174.82856750 33.66254425]
[174.32106018 41.00823975]
[167.36877441 46.87537384]
[159.91883850 59.89453125]
[152.46890259 72.91368866]
[145.01898193 85.93285370]
[147.92906189 92.84526062]
[159.27873230 83.03784943]
[172.11335754 90.80137634]
[168.69589233 105.40689087]
[153.74925232 106.67006683]
[156.65934753 113.58247375]
[171.17770386 117.35308075]
[185.69604492 121.12368774]
[200.21440125 124.89429474]
[212.84875488 115.67977905]
[228.44659424 116.79382324]
[239.64312744 127.71041107]
[241.15167236 143.27505493]
[232.25994873 156.13862610]
[217.16635132 160.22731018]
[202.99761963 153.61058044]
[196.44380188 139.41264343]
[181.92544556 135.64204407]
[167.40708923 131.87142944]
[152.88874817 128.10083008]
[139.42289734 134.70924377]
[133.52297974 148.50021362]
[127.62304688 162.29118347]
[121.72312164 176.08215332]
[115.82319641 189.87312317]
[109.92327118 203.66409302]
[104.02334595 217.45506287]
[98.12341309 231.24604797]
[92.22348785 245.03701782]
[100.65295410 263.31176758]
[92.98863220 281.58801270]
[74.62328339 288.17642212]
[69.20465851 302.16351318]
[63.78603363 316.15060425]
[58.44827271 330.16873169]
[53.19155502 344.21746826]
[47.93484116 358.26620483]
[42.67812347 372.31494141]
[37.42140579 386.36367798]
[32.16468811 400.41241455]
[26.90797234 414.46115112]
[21.65125656 428.50988770]
[25.33898354 431.02252197]
[28.54470444 434.42019653]
[31.05778122 438.60415649]
[32.68928528 443.42617798]
[33.28345871 448.69351196]
[32.72794724 454.17675781]
[30.96220207 459.61968994]
[28.20595932 474.36425781]
[39.75424576 484.39343262]
[44.69935226 498.76156616]
[41.80790329 513.57727051]
[31.95471191 524.88085938]
[17.86148453 529.70233154]
[15.10524178 544.44689941]
[12.34899902 559.19152832]
[9.59275627 573.93609619]
[14.66253948 588.92303467]
[4.71835136 600.01190186]
[1.96210849 614.75646973]
[-0.79413432 629.50109863]
[-3.55037713 644.24566650]
[5.10825014 650.23480225]
[11.27423573 658.72137451]
[14.27296352 668.73382568]
[13.79058456 679.13647461]
[9.90667343 688.75781250]
[3.08241487 696.52276611]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 19]
[2 18]
[3 16]
[4 15]
[5 14]
[23 265]
[24 264]
[25 263]
[26 262]
[28 260]
[29 259]
[30 258]
[31 257]
[36 252]
[37 251]
[38 58]
[39 57]
[40 56]
[41 55]
[42 54]
[44 53]
[45 52]
[46 51]
[59 244]
[60 243]
[61 242]
[62 241]
[63 240]
[64 239]
[65 238]
[66 237]
[68 236]
[69 235]
[70 234]
[76 231]
[77 230]
[78 229]
[79 228]
[80 227]
[81 226]
[82 225]
[83 224]
[84 223]
[89 99]
[90 98]
[91 97]
[92 96]
[100 112]
[101 111]
[102 110]
[103 109]
[115 202]
[116 201]
[117 200]
[118 199]
[119 197]
[120 196]
[124 192]
[125 191]
[126 190]
[127 189]
[128 188]
[129 187]
[131 185]
[132 184]
[133 183]
[134 182]
[135 181]
[137 179]
[138 178]
[139 177]
[140 176]
[141 175]
[142 174]
[143 173]
[144 168]
[145 167]
[146 166]
[147 165]
[148 164]
[149 163]
[150 162]
[208 222]
[209 221]
[210 220]
[211 219]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
