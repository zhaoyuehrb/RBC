%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:25:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUGCAGAGAGAAUGGCCAGCAGGAAGGCGGGGACCCGGGGCAAGGUGGCAGCCACCAAGCAGGCCCAACGUGGUUCUUCCAACGUCUUUUCCAUGUUUGAACAAGCCCAGA\
) } def
/len { sequence length } bind def

/coor [
[68.16830444 306.27896118]
[62.86423492 320.30990601]
[57.56016159 334.34082031]
[64.28947449 348.64086914]
[58.85760880 363.48239136]
[44.48719788 370.06015015]
[29.70394707 364.47167969]
[23.27849770 350.03250122]
[29.02295685 335.30917358]
[43.52923584 329.03674316]
[48.83330917 315.00582886]
[54.13738251 300.97488403]
[44.76322556 284.03762817]
[50.74719238 265.31289673]
[68.74620056 256.69219971]
[72.86293793 242.26815796]
[76.97967529 227.84413147]
[80.08475494 213.16903687]
[82.16317749 198.31373596]
[84.24159241 183.45841980]
[86.11331940 168.57566833]
[87.77798462 153.66831970]
[89.23526764 138.73927307]
[90.48489380 123.79141998]
[91.73452759 108.84355927]
[92.56814575 93.86674500]
[92.98511505 78.87254333]
[93.40209198 63.87833786]
[93.81906128 48.88413239]
[94.23603058 33.88993073]
[93.61067963 18.90297127]
[91.94600677 3.99562788]
[90.28134155 -10.91171551]
[88.61667633 -25.81905937]
[86.95201111 -40.72640228]
[85.28734589 -55.63374710]
[83.41561890 -70.51651001]
[81.33720398 -85.37181854]
[78.84663391 -100.16360474]
[75.94584656 -114.88044739]
[73.04505920 -129.59729004]
[70.14427185 -144.31413269]
[51.96972656 -154.60650635]
[47.06456757 -174.61471558]
[58.10728455 -191.66616821]
[53.59117508 -205.97018433]
[49.07506180 -220.27420044]
[44.55895233 -234.57820129]
[40.04284286 -248.88221741]
[29.50829697 -262.16601562]
[39.35671997 -275.96621704]
[55.34389496 -270.32293701]
[54.34685516 -253.39833069]
[58.86296463 -239.09431458]
[63.37907410 -224.79029846]
[67.89518738 -210.48629761]
[72.41129303 -196.18228149]
[81.94332886 -194.56439209]
[90.23964691 -189.48661804]
[96.08708191 -181.64044189]
[98.61167145 -172.12570190]
[97.40909576 -162.29647827]
[92.60869598 -153.56843567]
[84.86111450 -147.21492004]
[87.76190186 -132.49807739]
[90.66268921 -117.78123474]
[93.56347656 -103.06439209]
[97.07807159 -99.64260101]
[98.38950348 -93.92908478]
[96.19251251 -87.45023346]
[98.27092743 -72.59492493]
[102.37197113 -66.31848907]
[100.19468689 -57.29841232]
[101.85935211 -42.39106750]
[103.52401733 -27.48372459]
[105.18869019 -12.57638168]
[106.85335541 2.33096170]
[108.51802063 17.23830414]
[120.29850006 7.95281935]
[134.96545410 11.09617710]
[141.90599060 24.39387512]
[136.09803772 38.22382736]
[121.74414825 42.57881546]
[109.23023987 34.30690002]
[108.81326294 49.30110550]
[108.39629364 64.29531097]
[107.97932434 79.28951263]
[107.56234741 94.28371429]
[110.30004120 98.93695068]
[110.15264893 104.79914856]
[106.68238068 110.09318542]
[105.43275452 125.04104614]
[104.18312836 139.98890686]
[106.61031342 148.94496155]
[102.68532562 155.33297729]
[101.02066040 170.24032593]
[103.19794464 179.26040649]
[99.09690094 185.53684998]
[97.01848602 200.39215088]
[94.94006348 215.24746704]
[108.65289307 209.16812134]
[122.08476257 215.84532166]
[125.51650238 230.44747925]
[116.46493530 242.40863037]
[101.47969055 243.07380676]
[91.40370178 231.96087646]
[87.28696442 246.38490295]
[83.17021942 260.80892944]
[90.67613983 268.73291016]
[94.11581421 279.00537109]
[92.91316986 289.68942261]
[87.36071777 298.80087280]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 12]
[2 11]
[3 10]
[15 108]
[16 107]
[17 106]
[18 100]
[19 99]
[20 98]
[21 96]
[22 95]
[23 93]
[24 92]
[25 91]
[26 88]
[27 87]
[28 86]
[29 85]
[30 84]
[31 78]
[32 77]
[33 76]
[34 75]
[35 74]
[36 73]
[37 71]
[38 70]
[39 67]
[40 66]
[41 65]
[42 64]
[45 57]
[46 56]
[47 55]
[48 54]
[49 53]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
