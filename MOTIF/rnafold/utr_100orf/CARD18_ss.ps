%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:08:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGAGCCAUGGCUGACCAACUCUUGCGUAAAAAGAGAAGAAUUUUUAUCCAUUCAGUGGGUGCAGGCACAAUAAAUGCCUUGCUGGAUUGCCUAUUAGAGGAUGAAG\
) } def
/len { sequence length } bind def

/coor [
[118.39218140 139.88592529]
[99.96483612 143.92218018]
[81.54397583 139.85641479]
[73.00933075 152.19172668]
[64.83370209 164.76785278]
[57.02388763 177.57437134]
[49.21407318 190.38088989]
[49.36137390 206.77937317]
[35.09805679 214.87194824]
[21.09699440 206.33366394]
[21.76128387 189.94796753]
[36.40755844 182.57107544]
[44.21737289 169.76455688]
[52.02718735 156.95803833]
[51.74645996 152.05053711]
[54.65282440 146.94319153]
[60.67402267 143.65707397]
[69.20867157 131.32177734]
[62.62119293 123.06477356]
[58.19551086 113.47382355]
[56.18759537 103.10361481]
[41.26385498 101.59302521]
[26.34010887 100.08243561]
[11.41636562 98.57185364]
[-3.50737786 97.06126404]
[-14.58735180 108.09613037]
[-30.17249298 109.37574005]
[-42.90397263 100.29590607]
[-46.77037811 85.14384460]
[-39.94610977 71.07389832]
[-25.65337753 64.72946167]
[-10.64077377 69.10619354]
[-1.99679053 82.13751984]
[12.92695332 83.64810944]
[27.85069656 85.15869904]
[42.77444077 86.66928101]
[57.69818497 88.17987061]
[62.98003387 76.36356354]
[71.47660065 66.59977722]
[82.45006561 59.73638535]
[94.94751740 56.36937332]
[107.88371277 56.79113388]
[120.13530731 60.96503830]
[130.63841248 68.52863312]
[138.48095703 78.82511902]
[152.66450500 73.94387054]
[166.84806824 69.06261444]
[181.03163147 64.18136597]
[195.21519470 59.30011368]
[209.39875793 54.41886520]
[223.58230591 49.53761292]
[230.81002808 43.70021057]
[238.24551392 44.72648239]
[252.56384277 40.25600052]
[263.43090820 28.75741959]
[277.88577271 32.34996796]
[292.20410156 27.87948608]
[306.52246094 23.40900230]
[320.84078979 18.93852043]
[335.15911865 14.46803761]
[349.47744751 9.99755478]
[363.79580688 5.52707195]
[377.67459106 -0.16321482]
[391.01010132 -7.03078985]
[404.34564209 -13.89836502]
[417.58084106 -20.95739746]
[430.71292114 -28.20642281]
[443.84500122 -35.45544815]
[456.97708130 -42.70447540]
[459.81015015 -58.08328247]
[471.89859009 -68.00315857]
[487.53457642 -67.78023529]
[499.33529663 -57.51977921]
[501.72882080 -42.06645966]
[493.58496094 -28.71685791]
[478.74905396 -23.77425385]
[464.22610474 -29.57238960]
[451.09402466 -22.32336426]
[437.96194458 -15.07433891]
[424.82986450 -7.82531404]
[420.42825317 -1.74538898]
[411.21322632 -0.56283259]
[397.87768555 6.30474234]
[384.54214478 13.17231750]
[398.05264282 19.68894196]
[403.24810791 33.76044846]
[397.21405029 47.49326324]
[383.33535767 53.18379593]
[369.39746094 47.63988113]
[363.21899414 33.97143555]
[368.26626587 19.84540939]
[353.94793701 24.31589127]
[339.62960815 28.78637505]
[325.31127930 33.25685883]
[310.99291992 37.72734070]
[296.67459106 42.19782257]
[282.35626221 46.66830444]
[272.51333618 57.84712601]
[257.03433228 54.57433701]
[242.71598816 59.04481888]
[228.46356201 63.72117233]
[214.27999878 68.60242462]
[200.09645081 73.48367310]
[185.91288757 78.36492920]
[171.72932434 83.24617767]
[157.54576111 88.12742615]
[143.36219788 93.00868225]
[142.29550171 111.84270477]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 18]
[4 17]
[5 14]
[6 13]
[7 12]
[21 37]
[22 36]
[23 35]
[24 34]
[25 33]
[45 107]
[46 106]
[47 105]
[48 104]
[49 103]
[50 102]
[51 101]
[53 100]
[54 99]
[56 97]
[57 96]
[58 95]
[59 94]
[60 93]
[61 92]
[62 91]
[63 84]
[64 83]
[65 82]
[66 80]
[67 79]
[68 78]
[69 77]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
