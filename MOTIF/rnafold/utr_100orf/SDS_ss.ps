%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:33:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACCAUUCAGAAGACUGUCCACCCGUCCUCAGCCCCCUCUCUUCGUGGGCUAUCUACUCAGUUGAUCCCUCCCUCGCUGGCUUGGCUCUGACUCCUGCUCAGACCCAUCACCUUUGCCGGGAAUGAUGUCUGGAGAACCCCUGCACGUGAAGACCCCCAUCCGUGACAGCAUGGCCCUGUCCAAAAUGGCCGGCACCAGCGUCUACCUCAAGAUGGACAGUG\
) } def
/len { sequence length } bind def

/coor [
[124.78369904 310.45425415]
[123.63893890 325.58877563]
[117.10073853 339.28607178]
[106.05332184 349.69372559]
[91.99076080 355.40414429]
[76.81491852 355.64508057]
[62.57818222 350.38391113]
[51.20596313 340.33218384]
[44.23626328 326.84933472]
[42.61167145 311.75875854]
[46.55190277 297.10137939]
[55.52407074 284.85946655]
[68.31476593 276.68862915]
[83.19415283 273.69390869]
[85.71791077 258.90774536]
[88.24166107 244.12158203]
[90.76541901 229.33541870]
[93.28916931 214.54925537]
[95.81291962 199.76309204]
[98.33667755 184.97692871]
[92.42153931 180.36593628]
[83.19957733 192.19621277]
[73.97760773 204.02648926]
[64.75564575 215.85676575]
[55.53348541 227.68688965]
[43.70351791 218.46452332]
[52.92537308 206.63479614]
[62.14733505 194.80451965]
[71.36930084 182.97425842]
[80.59127045 171.14398193]
[74.67613220 166.53298950]
[60.95296860 172.58897400]
[47.22980499 178.64494324]
[33.50664139 184.70091248]
[19.78347778 190.75688171]
[18.81127167 206.03147888]
[10.84206104 219.09863281]
[-2.29288530 226.95558167]
[-17.57525444 227.79687500]
[-31.49326897 221.42919922]
[-40.84867096 209.31576538]
[-43.49166107 194.24018860]
[-38.81489182 179.66670227]
[-27.89305878 168.94419861]
[-13.23591328 164.53662109]
[1.78843629 167.45681763]
[13.72750568 177.03372192]
[27.45066833 170.97775269]
[41.17383194 164.92178345]
[54.89699554 158.86579895]
[68.62015533 152.80982971]
[48.67306900 103.20939636]
[74.56760406 67.30109406]
[67.65439606 53.98916626]
[60.74118423 40.67723083]
[55.39482880 36.81180191]
[53.13570404 31.60906219]
[53.82671738 26.89146423]
[47.29127502 13.39005661]
[40.75583267 -0.11135066]
[34.22039032 -13.61275768]
[21.07860565 -16.53968239]
[12.15028954 -26.35588646]
[10.52711678 -39.32943726]
[16.57909584 -50.69922638]
[10.23450184 -64.29135895]
[3.88990879 -77.88349915]
[-10.69111729 -83.36359406]
[-16.93181229 -97.23833466]
[-11.61752033 -111.10533905]
[-17.96211433 -124.69747162]
[-24.30670738 -138.28961182]
[-30.65130043 -151.88174438]
[-42.47970963 -157.01048279]
[-47.48645020 -168.45495605]
[-43.48885345 -179.86605835]
[-49.64133835 -193.54621887]
[-66.50954437 -204.59410095]
[-63.70496750 -223.73088074]
[-70.24040985 -237.23228455]
[-86.86936188 -242.67684937]
[-94.26605988 -258.16049194]
[-88.29164124 -273.88555908]
[-95.01663971 -287.29354858]
[-101.74163055 -300.70156860]
[-114.84481812 -309.56817627]
[-113.63475800 -324.41354370]
[-120.35974884 -337.82156372]
[-127.08473969 -351.22955322]
[-133.80973816 -364.63754272]
[-140.53472900 -378.04556274]
[-155.78971863 -381.48348999]
[-165.22467041 -393.95407104]
[-164.38470459 -409.56909180]
[-153.66641235 -420.95559692]
[-138.13066101 -422.73721313]
[-125.11293030 -414.07275391]
[-120.75981903 -399.05328369]
[-127.12672424 -384.77053833]
[-120.40173340 -371.36254883]
[-113.67674255 -357.95455933]
[-106.95174408 -344.54653931]
[-100.22675323 -331.13854980]
[-87.60458374 -323.23095703]
[-88.33363342 -307.42654419]
[-81.60863495 -294.01855469]
[-74.88364410 -280.61053467]
[-62.21165085 -278.30422974]
[-53.04296112 -268.98312378]
[-50.88234329 -255.89096069]
[-56.73899841 -243.76773071]
[-50.20355988 -230.26632690]
[-40.29925537 -227.79663086]
[-33.23747253 -220.12498474]
[-31.52380753 -209.61730957]
[-35.96117401 -199.69869995]
[-29.80868721 -186.01853943]
[-15.03943825 -176.53346252]
[-17.05916595 -158.22633362]
[-10.71457291 -144.63420105]
[-4.36997938 -131.04206848]
[1.97461426 -117.44993591]
[16.01710510 -112.61836243]
[22.64505005 -98.92438507]
[17.48204422 -84.22808838]
[23.82663727 -70.63595581]
[30.17123032 -57.04381943]
[46.21109772 -51.97490692]
[53.76700592 -36.56833649]
[47.72179794 -20.14819908]
[54.25724030 -6.64679241]
[60.79268265 6.85461521]
[67.32812500 20.35602188]
[74.05311584 33.76402283]
[80.96632385 47.07595444]
[87.87953186 60.38788605]
[103.96084595 55.41658401]
[121.95845795 57.21248245]
[138.96334839 66.43495941]
[151.88468933 82.48501587]
[157.99087524 103.48235321]
[155.43310547 126.47157288]
[169.54846191 121.39646912]
[183.62771606 116.22206879]
[197.67018127 110.94861603]
[211.71264648 105.67517090]
[225.75509644 100.40171814]
[232.68135071 94.46022034]
[240.03271484 95.15441895]
[254.14807129 90.07931519]
[257.50546265 75.02171326]
[268.48669434 64.18583679]
[283.58767700 61.02938461]
[297.98977661 66.55957031]
[307.09732056 79.01172638]
[308.00415039 94.41241455]
[300.42083740 107.84733582]
[286.76724243 115.02944946]
[271.40014648 113.66697693]
[259.22317505 104.19467163]
[245.10781860 109.26977539]
[231.02854919 114.44418335]
[216.98608398 119.71762848]
[202.94363403 124.99108124]
[188.90116882 130.26452637]
[183.74893188 135.55404663]
[174.62356567 135.51182556]
[160.50820923 140.58692932]
[159.45248413 155.54972839]
[172.71539307 162.55653381]
[181.75628662 163.79606628]
[186.11476135 169.75662231]
[199.27764893 176.94956970]
[212.44052124 184.14251709]
[227.43438721 179.92092896]
[240.68095398 187.40312195]
[244.61318970 201.72349548]
[257.77606201 208.91644287]
[270.93896484 216.10939026]
[286.75921631 215.93731689]
[294.21746826 228.83009338]
[307.38034058 236.02304077]
[320.54324341 243.21600342]
[337.34185791 245.50552368]
[339.79214478 262.28146362]
[324.35012817 269.28002930]
[313.35028076 256.37887573]
[300.18740845 249.18592834]
[287.02450562 241.99298096]
[272.14575195 242.67955017]
[263.74600220 229.27227783]
[250.58312988 222.07933044]
[237.42024231 214.88638306]
[223.24441528 219.31147766]
[209.79290771 212.20431519]
[205.24757385 197.30540466]
[192.08470154 190.11244202]
[178.92181396 182.91949463]
[165.70858765 175.81944275]
[152.44567871 168.81263733]
[141.58084106 179.15455627]
[147.92543030 192.74668884]
[154.27001953 206.33882141]
[160.61462402 219.93095398]
[175.55166626 225.09429932]
[182.38749695 239.34376526]
[177.06651306 254.22538757]
[162.74557495 260.91015625]
[147.92103577 255.43215942]
[141.38803101 241.04133606]
[147.02249146 226.27555847]
[140.67788696 212.68341064]
[134.33329773 199.09127808]
[127.98870087 185.49914551]
[113.12284088 187.50067139]
[110.59909058 202.28684998]
[108.07533264 217.07301331]
[105.55158234 231.85917664]
[103.02782440 246.64533997]
[100.50407410 261.43148804]
[97.98032379 276.21768188]
[111.02394104 283.97836304]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 221]
[15 220]
[16 219]
[17 218]
[18 217]
[19 216]
[20 215]
[31 51]
[32 50]
[33 49]
[34 48]
[35 47]
[53 136]
[54 135]
[55 134]
[58 133]
[59 132]
[60 131]
[61 130]
[65 127]
[66 126]
[67 125]
[70 122]
[71 121]
[72 120]
[73 119]
[76 117]
[77 116]
[79 112]
[80 111]
[83 107]
[84 106]
[85 105]
[87 103]
[88 102]
[89 101]
[90 100]
[91 99]
[142 168]
[143 167]
[144 165]
[145 164]
[146 163]
[147 162]
[149 161]
[150 160]
[169 200]
[170 199]
[172 198]
[173 197]
[174 196]
[177 193]
[178 192]
[179 191]
[181 189]
[182 188]
[183 187]
[201 214]
[202 213]
[203 212]
[204 211]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
