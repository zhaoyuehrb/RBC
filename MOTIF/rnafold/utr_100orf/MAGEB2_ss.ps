%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:43:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCUGACUUCCGCUUUGGAGGCGAGGACCCGAGCGAGUGUAGGGGGUGCGGCGUCUGGUCAGCCAGGGGUGAAUUCUCAGGACUGGUCGGCAGUCAAGCCAUCAUGCCUCGUGGUCAGAAGAGUAAGCUCCGUGCCCGUGAGAAACGCCGCAAGGCCCGAGAUGAGACCCGGGGUCUCAAUGUUCCUCAGGUCACUGAAGCAG\
) } def
/len { sequence length } bind def

/coor [
[92.63624573 149.53594971]
[86.36683655 163.16293335]
[80.09743500 176.78990173]
[73.82802582 190.41688538]
[79.07214355 205.08442688]
[72.51995850 218.81481934]
[58.50437164 223.72389221]
[52.23496628 237.35087585]
[45.96556091 250.97784424]
[39.69615555 264.60482788]
[33.42675018 278.23181152]
[37.62010574 293.71713257]
[28.01192665 306.56478882]
[11.97278881 306.91915894]
[1.80654371 294.50842285]
[5.31186628 278.85299683]
[19.79977226 271.96240234]
[26.06917763 258.33541870]
[32.33858109 244.70845032]
[38.60798645 231.08146667]
[44.87739182 217.45448303]
[39.48657227 203.61705017]
[45.65052032 189.70803833]
[60.20104599 184.14747620]
[66.47045135 170.52050781]
[72.73986053 156.89352417]
[79.00926208 143.26654053]
[68.32130432 132.74192810]
[54.79248810 139.22042847]
[41.26366806 145.69894409]
[35.92782974 160.33337402]
[22.11539650 166.71078491]
[8.19658566 161.53369141]
[-5.33223248 168.01219177]
[-14.14854813 181.83987427]
[-30.51769257 180.84834290]
[-37.60049438 166.05760193]
[-28.11077309 152.68309021]
[-11.81074142 154.48338318]
[1.71807730 148.00486755]
[6.41073847 133.91534424]
[20.03859520 127.15249634]
[34.78516006 132.17012024]
[48.31398010 125.69161224]
[61.84279633 119.21310425]
[68.38662720 88.08850861]
[90.70024872 76.96162415]
[89.54638672 62.00606537]
[88.39253235 47.05051041]
[87.23867798 32.09495926]
[86.08482361 17.13940239]
[84.93096161 2.18384814]
[83.77710724 -12.77170658]
[82.62325287 -27.72726059]
[70.37458801 -34.05562210]
[62.91276169 -45.51971817]
[62.09791183 -59.06557846]
[68.03617096 -71.14716339]
[79.07980347 -78.65466309]
[78.15639496 -93.62621307]
[77.23297882 -108.59776306]
[75.96400452 -123.54399109]
[74.35013580 -138.45692444]
[62.32099915 -148.35325623]
[60.89674759 -163.50007629]
[70.40553284 -174.90704346]
[68.79166412 -189.81996155]
[67.17779541 -204.73289490]
[65.56393433 -219.64582825]
[63.95006561 -234.55874634]
[51.92092896 -244.45509338]
[50.49667740 -259.60192871]
[60.00545883 -271.00888062]
[58.39159393 -285.92181396]
[56.77772522 -300.83471680]
[55.16386032 -315.74765015]
[53.54999542 -330.66058350]
[40.25130081 -338.43560791]
[34.15205383 -352.38739014]
[37.39925003 -367.08160400]
[48.54294205 -376.92822266]
[46.92907715 -391.84115601]
[45.31521225 -406.75408936]
[43.70134354 -421.66702271]
[42.08747864 -436.57995605]
[28.78878403 -444.35494995]
[22.68953896 -458.30676270]
[25.93673325 -473.00097656]
[37.08042908 -482.84759521]
[35.46656036 -497.76052856]
[33.85269547 -512.67346191]
[32.23883057 -527.58636475]
[17.83739853 -532.64221191]
[7.06188822 -543.45196533]
[2.05178189 -557.86938477]
[3.80184031 -573.03186035]
[11.96458817 -585.92883301]
[24.91930580 -593.99963379]
[40.09382248 -595.64184570]
[54.47523117 -590.52929688]
[65.20809174 -579.67718506]
[70.16138458 -565.24017334]
[68.35163116 -550.08471680]
[60.13815689 -537.21997070]
[47.15175629 -529.20025635]
[48.76562500 -514.28729248]
[50.37948990 -499.37438965]
[51.99335480 -484.46145630]
[64.98557281 -477.22680664]
[71.30117035 -463.56747437]
[68.32788086 -448.63385010]
[57.00040817 -438.19381714]
[58.61427307 -423.28088379]
[60.22813797 -408.36795044]
[61.84200668 -393.45501709]
[63.45587158 -378.54208374]
[76.44808960 -371.30743408]
[82.76368713 -357.64810181]
[79.79039764 -342.71450806]
[68.46292114 -332.27444458]
[70.07678986 -317.36151123]
[71.69065857 -302.44860840]
[73.30451965 -287.53567505]
[74.91838837 -272.62274170]
[86.64735413 -263.51409912]
[88.49648285 -248.41326904]
[78.86299133 -236.17262268]
[80.47686005 -221.25968933]
[82.09072876 -206.34675598]
[83.70458984 -191.43383789]
[85.31845856 -176.52090454]
[97.04742432 -167.41227722]
[98.89655304 -152.31144714]
[89.26306152 -140.07078552]
[90.87693024 -125.15785217]
[93.38533020 -122.67242432]
[94.81175995 -118.84635925]
[94.53828430 -114.20273590]
[92.20452881 -109.52117920]
[93.12794495 -94.54962921]
[94.05135345 -79.57807922]
[108.17439270 -71.21545410]
[114.59614563 -55.93026352]
[110.60416412 -39.66749954]
[97.57880402 -28.88111687]
[98.73266602 -13.92556286]
[99.88652039 1.02999175]
[101.04037476 15.98554611]
[102.19422913 30.94110107]
[103.34809113 45.89665604]
[104.50194550 60.85221100]
[105.65579987 75.80776215]
[132.43756104 90.56106567]
[130.52705383 129.88668823]
[142.63510132 138.74079895]
[154.74314880 147.59492493]
[166.85118103 156.44903564]
[182.55784607 158.34934998]
[188.26420593 172.10749817]
[200.37225342 180.96160889]
[212.48030090 189.81571960]
[235.66812134 190.35844421]
[244.08032227 211.17399597]
[256.83358765 219.07048035]
[269.58685303 226.96696472]
[282.34008789 234.86344910]
[295.09335327 242.75993347]
[307.84661865 250.65641785]
[320.59988403 258.55288696]
[337.24957275 261.75042725]
[338.78607178 278.63461304]
[322.98709106 284.78509521]
[312.70339966 271.30615234]
[299.95013428 263.40966797]
[287.19686890 255.51318359]
[274.44360352 247.61669922]
[261.69036865 239.72021484]
[248.93710327 231.82374573]
[236.18383789 223.92726135]
[229.88262939 227.23722839]
[222.75680542 228.16354370]
[215.68595886 226.54423523]
[209.55947876 222.53453064]
[205.16464233 216.59323120]
[203.08563232 209.43064880]
[203.62617493 201.92376709]
[191.51814270 193.06965637]
[179.41009521 184.21554565]
[164.56947327 182.94853210]
[157.99707031 168.55706787]
[145.88902283 159.70295715]
[133.78099060 150.84884644]
[121.67294312 141.99473572]
[114.41377258 143.88003540]
[120.79468536 157.45515442]
[127.17560577 171.03027344]
[136.63699341 182.66995239]
[134.88375854 197.56713867]
[122.97858429 206.69219971]
[108.13755035 204.51417542]
[99.35626221 192.35321045]
[101.95781708 177.57966614]
[100.92662048 162.61515808]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 27]
[2 26]
[3 25]
[4 24]
[7 21]
[8 20]
[9 19]
[10 18]
[11 17]
[28 45]
[29 44]
[30 43]
[33 40]
[34 39]
[47 152]
[48 151]
[49 150]
[50 149]
[51 148]
[52 147]
[53 146]
[54 145]
[59 141]
[60 140]
[61 139]
[62 135]
[63 134]
[66 131]
[67 130]
[68 129]
[69 128]
[70 127]
[73 124]
[74 123]
[75 122]
[76 121]
[77 120]
[81 116]
[82 115]
[83 114]
[84 113]
[85 112]
[89 108]
[90 107]
[91 106]
[92 105]
[154 193]
[155 192]
[156 191]
[157 190]
[159 188]
[160 187]
[161 186]
[163 179]
[164 178]
[165 177]
[166 176]
[167 175]
[168 174]
[169 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
