%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:44:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCGCAAACAGCACAUCCGGUGUGGUCGACGGGUCCUCCAAGAGUUUGGGGCGCGGACUGGAGUACCUUGCGUGCAGUUAUGUCGGCGUCGGUAGUGUCUGUCAUUUCGCGGUUCUUAGAAGAGUACUUGAGCUCCACUCCGCAGCGUCUGAAGUUGCUGGACGCGUACCUGCUGUAUA\
) } def
/len { sequence length } bind def

/coor [
[-57.64287186 728.92230225]
[-62.25335693 743.19616699]
[-66.86384583 757.47003174]
[-63.74279785 772.98034668]
[-75.01747131 782.71331787]
[-79.62796021 796.98718262]
[-73.62919617 811.86651611]
[-81.64727783 825.76220703]
[-97.53142548 828.01464844]
[-109.09667206 816.89599609]
[-107.47115326 800.93548584]
[-93.90183258 792.37670898]
[-89.29134369 778.10284424]
[-92.74216461 763.61346436]
[-81.13771820 752.85955811]
[-76.52722931 738.58569336]
[-71.91674042 724.31182861]
[-78.57115173 703.72631836]
[-61.85415649 688.82366943]
[-58.24497986 674.26440430]
[-54.63580322 659.70507812]
[-51.02662277 645.14575195]
[-47.41744614 630.58642578]
[-48.86375046 623.31793213]
[-43.61722183 615.80682373]
[-39.75589752 601.31231689]
[-35.89457321 586.81781006]
[-37.48535156 582.28869629]
[-36.22868347 576.71148682]
[-31.63951683 571.89184570]
[-27.27746201 557.54010010]
[-22.91540527 543.18835449]
[-26.61718369 528.76104736]
[-15.20112801 517.80731201]
[-10.83907223 503.45559692]
[-6.47701740 489.10385132]
[-2.11496210 474.75210571]
[-9.33381653 461.77429199]
[-5.11451864 447.15744019]
[8.54675579 439.67364502]
[12.90881062 425.32189941]
[17.27086639 410.97015381]
[6.60311651 402.07879639]
[0.11389484 389.75186157]
[-1.18602014 375.83843994]
[2.93291640 362.43991089]
[11.87931633 351.59255981]
[24.32552719 344.95809937]
[38.40458679 343.56918335]
[43.01507568 329.29531860]
[39.56425476 314.80596924]
[51.16870499 304.05203247]
[55.77919006 289.77816772]
[60.26562881 275.46481323]
[64.62768555 261.11306763]
[68.98973846 246.76133728]
[73.35179901 232.40959167]
[77.71385193 218.05784607]
[74.01206970 203.63058472]
[85.42813110 192.67684937]
[89.79018402 178.32510376]
[94.15223694 163.97337341]
[98.51429749 149.62162781]
[102.87635040 135.26988220]
[107.23840332 120.91814423]
[68.42620087 91.01550293]
[63.07905197 77.00094604]
[57.73190308 62.98638153]
[43.18192291 51.72046280]
[46.60391235 34.52004623]
[41.01432800 20.60040092]
[35.42474747 6.68075323]
[21.16622353 0.40920910]
[15.69588184 -13.78691769]
[21.76271248 -27.34159088]
[16.17313004 -41.26123810]
[10.58354664 -55.18088531]
[-2.64471507 -64.87341309]
[-0.59613049 -81.14410400]
[14.62189198 -87.25506592]
[27.35435677 -76.91986084]
[24.50319290 -60.77046585]
[30.09277534 -46.85082245]
[35.68235779 -32.93117523]
[49.43872452 -27.33671570]
[55.30564880 -13.29983997]
[49.34439468 1.09117079]
[54.93397522 15.01081753]
[60.52355957 28.93046379]
[71.53495026 33.97869873]
[76.29731750 45.55173874]
[71.74646759 57.63922882]
[77.09361267 71.65379333]
[82.44076538 85.66835785]
[97.44076538 85.66835785]
[102.78791809 71.65379333]
[108.13507080 57.63922882]
[113.48222351 43.62466431]
[108.26601410 28.45328712]
[116.99645996 14.99376011]
[132.97630310 13.57108021]
[143.94718933 25.27660751]
[141.49317932 41.13086319]
[127.49678040 48.97181702]
[122.14963531 62.98638153]
[116.80248260 77.00094604]
[111.45532990 91.01550293]
[122.98310089 100.61293030]
[135.79644775 92.81433105]
[148.60980225 85.01573944]
[154.33290100 77.86109161]
[161.71391296 77.19521332]
[174.66067505 69.62018585]
[187.60745239 62.04515076]
[195.61128235 48.39783096]
[210.50376892 48.64873505]
[223.45054626 41.07370377]
[236.39730835 33.49867249]
[244.04000854 18.98932457]
[260.43508911 18.62388420]
[268.71670532 32.77828598]
[260.36541748 46.89169312]
[243.97235107 46.44544601]
[231.02557373 54.02047729]
[218.07879639 61.59550858]
[211.00100708 74.70101166]
[195.18247986 74.99192047]
[182.23571777 82.56695557]
[169.28894043 90.14198303]
[156.40840149 97.82908630]
[143.59504700 105.62768555]
[130.78169250 113.42627716]
[121.59014893 125.28019714]
[117.22808838 139.63194275]
[112.86603546 153.98367310]
[108.50398254 168.33541870]
[104.14192963 182.68716431]
[99.77986908 197.03890991]
[103.16964722 212.49270630]
[92.06558990 222.41990662]
[87.70353699 236.77165222]
[83.34148407 251.12338257]
[78.97942352 265.47512817]
[74.61737061 279.82687378]
[75.11463165 288.97540283]
[70.05306244 294.38864136]
[65.44257355 308.66250610]
[68.56362152 324.17282104]
[57.28894424 333.90579224]
[52.67845917 348.17968750]
[64.54126740 359.29699707]
[70.35363007 374.41821289]
[69.00122070 390.50317383]
[60.80480194 404.34149170]
[47.44601822 413.19348145]
[31.62260818 415.33221436]
[27.26055145 429.68395996]
[22.89849663 444.03570557]
[30.08466339 457.85586548]
[25.45647240 472.34841919]
[12.23677921 479.11416626]
[7.87472391 493.46591187]
[3.51266861 507.81765747]
[-0.84938657 522.16937256]
[2.54038787 537.62316895]
[-8.56366539 547.55041504]
[-12.92572021 561.90216064]
[-17.28777504 576.25384521]
[-21.40008545 590.67913818]
[-25.26140976 605.17364502]
[-29.12273407 619.66815186]
[-32.85812759 634.19555664]
[-36.46730423 648.75488281]
[-40.07648087 663.31420898]
[-43.68565750 677.87353516]
[-47.29483414 692.43286133]
[-41.69432068 698.70373535]
[-39.07344818 706.59338379]
[-39.79214859 714.78125000]
[-43.65785217 721.92803955]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 17]
[2 16]
[3 15]
[5 13]
[6 12]
[19 176]
[20 175]
[21 174]
[22 173]
[23 172]
[25 171]
[26 170]
[27 169]
[30 168]
[31 167]
[32 166]
[34 164]
[35 163]
[36 162]
[37 161]
[40 158]
[41 157]
[42 156]
[49 150]
[50 149]
[52 147]
[53 146]
[54 144]
[55 143]
[56 142]
[57 141]
[58 140]
[60 138]
[61 137]
[62 136]
[63 135]
[64 134]
[65 133]
[66 94]
[67 93]
[68 92]
[70 89]
[71 88]
[72 87]
[75 84]
[76 83]
[77 82]
[95 107]
[96 106]
[97 105]
[98 104]
[108 132]
[109 131]
[110 130]
[112 129]
[113 128]
[114 127]
[116 125]
[117 124]
[118 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
