%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:05:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUCCGGCGUUGGGACUGUCACUUGGCUGCUCGCGUCAGGCCACACCGGUGGUCUGGGCUGUGGCGCGCGGGUCGGGGCCCGAGGCGGGCGGCCAGGAAGGACCUGAUGACCUUCGAGGAUGUGGCCGUGUACUUCUCCCAGGAGGAGUGGGGGCUCCUGGACACAGCGCAGAGGGCCCUGUACCGCCACGUGAUGCUGGAAAACU\
) } def
/len { sequence length } bind def

/coor [
[85.70932007 284.69924927]
[88.08621216 269.24337769]
[99.87589264 258.97021484]
[99.42284393 243.97706604]
[98.96980286 228.98391724]
[98.51675415 213.99075317]
[98.06371307 198.99760437]
[97.61066437 184.00444031]
[97.15762329 169.01129150]
[96.70457458 154.01812744]
[96.25152588 139.02496338]
[95.79848480 124.03181458]
[76.58171082 105.60977173]
[61.91580582 102.46155548]
[48.74408722 110.77682495]
[33.91562271 107.37516022]
[26.06946182 94.76670074]
[11.40355873 91.61848450]
[4.23398256 97.74897766]
[-4.81864643 99.86056519]
[-13.69396973 97.60258484]
[-20.43125343 91.60444641]
[-23.60247231 83.30692291]
[-38.11072159 79.49763489]
[-52.61896896 75.68834686]
[-67.12722015 71.87905121]
[-81.63546753 68.06976318]
[-96.14372253 64.26046753]
[-110.65196991 60.45117950]
[-125.16021729 56.64188766]
[-139.66847229 52.83259583]
[-154.17671204 49.02330780]
[-168.68496704 45.21401596]
[-183.19322205 41.40472412]
[-197.70146179 37.59543228]
[-213.01412964 41.57448959]
[-223.35925293 30.85871696]
[-237.86749268 27.04942513]
[-252.84013367 26.14374733]
[-267.70175171 28.17648888]
[-282.56338501 30.20923042]
[-297.42501831 32.24197006]
[-312.28665161 34.27471161]
[-327.14825439 36.30745316]
[-342.00988770 38.34019089]
[-354.63119507 48.81087112]
[-369.91363525 42.86289215]
[-372.13598633 26.61502457]
[-359.01205444 16.78168297]
[-344.04263306 23.47856522]
[-329.18099976 21.44582558]
[-314.31939697 19.41308403]
[-299.45776367 17.38034248]
[-284.59613037 15.34760284]
[-269.73449707 13.31486130]
[-254.87287903 11.28212070]
[-251.94651794 -3.42965817]
[-264.89898682 -10.99496460]
[-277.85144043 -18.56027031]
[-290.80389404 -26.12557602]
[-303.75634766 -33.69088364]
[-319.57510376 -33.96991348]
[-326.66271973 -47.07009888]
[-339.61517334 -54.63540268]
[-352.56762695 -62.20071030]
[-365.52008057 -69.76601410]
[-380.74069214 -65.51055908]
[-394.47116089 -73.33678436]
[-398.56546021 -88.60152435]
[-390.59451294 -102.24848175]
[-375.28732300 -106.18115997]
[-361.72540283 -98.06636810]
[-357.95477295 -82.71847534]
[-345.00231934 -75.15316772]
[-332.04986572 -67.58786011]
[-319.09741211 -60.02255630]
[-304.20510864 -60.28464508]
[-296.19104004 -46.64334106]
[-283.23858643 -39.07803345]
[-270.28613281 -31.51272774]
[-257.33367920 -23.94742203]
[-244.38121033 -16.38211441]
[-234.05821228 12.54117584]
[-219.54995728 16.35046768]
[-205.27502441 12.09894753]
[-193.89218140 23.08718491]
[-179.38392639 26.89647484]
[-164.87567139 30.70576668]
[-150.36743164 34.51505661]
[-135.85917664 38.32434845]
[-121.35092926 42.13364029]
[-106.84267426 45.94292831]
[-92.33442688 49.75222015]
[-77.82617950 53.56151199]
[-63.31792831 57.37080383]
[-48.80968094 61.18009567]
[-34.30142975 64.98938751]
[-19.79318047 68.79867554]
[-0.43698323 61.63965607]
[14.55177498 76.95257568]
[29.21767998 80.10079193]
[41.54726791 71.82330322]
[56.46542740 74.80712128]
[65.06401825 87.79565430]
[79.72992706 90.94387054]
[66.14716339 84.57923126]
[60.33872604 70.74948120]
[65.30352020 56.59494400]
[78.47821045 49.42364502]
[93.06067657 52.93814087]
[101.52195740 65.32388306]
[99.49249268 80.18788910]
[104.81156158 66.16265106]
[110.13063812 52.13740540]
[110.09384155 35.18349838]
[126.37500000 30.45483398]
[135.42593384 44.79069519]
[124.15588379 57.45647812]
[118.83680725 71.48171997]
[113.51773071 85.50696564]
[121.85128784 97.97901154]
[136.84443665 98.43205261]
[151.83760071 98.88510132]
[166.83076477 99.33815002]
[181.82391357 99.79119110]
[196.81707764 100.24423981]
[211.81022644 100.69728088]
[225.83779907 93.38031769]
[238.32557678 101.49848938]
[253.31872559 101.95153809]
[268.31188965 102.40457916]
[283.00112915 99.36721039]
[296.58511353 93.00513458]
[310.16906738 86.64305115]
[323.75302124 80.28097534]
[337.33697510 73.91889191]
[350.92092896 67.55681610]
[364.50491333 61.19473267]
[378.08886719 54.83265305]
[387.02359009 41.08120728]
[403.38363647 42.21328735]
[410.33914185 57.06431198]
[400.73489380 70.35681915]
[384.45092773 68.41661072]
[370.86697388 74.77869415]
[357.28302002 81.14076996]
[343.69906616 87.50285339]
[330.11511230 93.86492920]
[316.53112793 100.22701263]
[302.94717407 106.58908844]
[289.36322021 112.95117188]
[290.26889038 127.92380524]
[304.52069092 132.60212708]
[318.77246094 137.28045654]
[333.02423096 141.95878601]
[347.27603149 146.63711548]
[361.52780151 151.31544495]
[375.77957153 155.99377441]
[390.06628418 160.56433105]
[404.38711548 165.02688599]
[418.70791626 169.48942566]
[430.46569824 159.50152588]
[445.75985718 157.47856140]
[459.71008301 164.06605530]
[467.86489868 177.16195679]
[467.62213135 192.58740234]
[459.05926514 205.42021179]
[444.90866089 211.56546021]
[429.68572998 209.06224060]
[418.24807739 198.70930481]
[414.24536133 183.81024170]
[399.92456055 179.34768677]
[385.60372925 174.88514709]
[378.28085327 175.89666748]
[371.10125732 170.24554443]
[356.84948730 165.56721497]
[342.59768677 160.88890076]
[328.34591675 156.21057129]
[314.09414673 151.53224182]
[299.84234619 146.85391235]
[285.59057617 142.17558289]
[270.62814331 131.35884094]
[267.85882568 117.39773560]
[252.86567688 116.94469452]
[237.87252808 116.49164581]
[224.91737366 123.84101868]
[211.35717773 115.69043732]
[196.36402893 115.23739624]
[181.37086487 114.78434753]
[166.37771606 114.33130646]
[151.38455200 113.87825775]
[136.39140320 113.42520905]
[121.39823914 112.97216797]
[110.79164124 123.57876587]
[111.24468231 138.57192993]
[111.69773102 153.56507874]
[112.15077972 168.55824280]
[112.60382080 183.55139160]
[113.05686951 198.54455566]
[113.50991058 213.53770447]
[113.96295929 228.53086853]
[114.41600037 243.52401733]
[114.86904907 258.51718140]
[127.25749969 268.05972290]
[130.56324768 283.34390259]
[123.22544098 297.15298462]
[108.70874786 302.96673584]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 203]
[4 202]
[5 201]
[6 200]
[7 199]
[8 198]
[9 197]
[10 196]
[11 195]
[12 194]
[13 105]
[14 104]
[17 101]
[18 100]
[23 98]
[24 97]
[25 96]
[26 95]
[27 94]
[28 93]
[29 92]
[30 91]
[31 90]
[32 89]
[33 88]
[34 87]
[35 86]
[37 84]
[38 83]
[39 56]
[40 55]
[41 54]
[42 53]
[43 52]
[44 51]
[45 50]
[57 82]
[58 81]
[59 80]
[60 79]
[61 78]
[63 76]
[64 75]
[65 74]
[66 73]
[112 120]
[113 119]
[114 118]
[121 193]
[122 192]
[123 191]
[124 190]
[125 189]
[126 188]
[127 187]
[129 185]
[130 184]
[131 183]
[132 151]
[133 150]
[134 149]
[135 148]
[136 147]
[137 146]
[138 145]
[139 144]
[152 181]
[153 180]
[154 179]
[155 178]
[156 177]
[157 176]
[158 175]
[159 173]
[160 172]
[161 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
