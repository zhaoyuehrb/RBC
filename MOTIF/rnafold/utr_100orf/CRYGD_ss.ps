%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:40:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGUGCGGUUCUUGCCAACGCAGCAGCCCUCCUGCUAUAUAGCCCGCCGCGCCGCAGCCCCACCCGCUCAGCGCCGCCGCCCCACCAGCUCAGCACCGCCGUGCGCCCAGCCAGCCAUGGGGAAGAUCACCCUCUACGAGGACCGGGGCUUCCAGGGCCGCCACUAUGAAUGCAGCAGCGACCACCCCAACCUGCAGCCCUACUUGAGCCGCUGCA\
) } def
/len { sequence length } bind def

/coor [
[89.48770905 299.55728149]
[91.95711517 280.33355713]
[92.17427063 265.33514404]
[92.39141846 250.33670044]
[92.50000000 235.33709717]
[92.50000000 220.33709717]
[92.50000000 205.33709717]
[92.50000000 190.33709717]
[92.50000000 175.33709717]
[92.50000000 160.33709717]
[92.50000000 145.33709717]
[91.32023621 146.86349487]
[90.07921600 148.36070251]
[88.77765656 149.82690430]
[81.49813080 162.94210815]
[82.31595612 179.32084656]
[68.39553833 187.98997498]
[54.05699539 180.03144836]
[54.05060196 163.63229370]
[68.38292694 155.66258240]
[75.66246033 142.54737854]
[63.93498611 133.19502258]
[52.76845932 143.21044922]
[41.60193634 153.22587585]
[30.43540764 163.24130249]
[19.26888275 173.25671387]
[16.96608162 189.13363647]
[3.04505157 197.10763550]
[-11.81518269 191.06172180]
[-16.21512222 175.63383484]
[-6.77951050 162.65890503]
[9.25345898 162.09019470]
[20.41998482 152.07476807]
[31.58651161 142.05935669]
[42.75303650 132.04393005]
[53.91956329 122.02850342]
[50.51622772 107.51190948]
[51.48545074 92.93455505]
[56.56794357 79.55870056]
[65.15583038 68.49157715]
[76.35979462 60.59387207]
[70.84600067 46.64403152]
[65.33221436 32.69418716]
[59.81842041 18.74434662]
[54.30463028 4.79450321]
[42.85283279 -4.89344263]
[28.18212509 -8.01919842]
[13.07257843 -3.32748461]
[2.23703313 -13.54708481]
[-12.43367386 -16.67284012]
[-27.10438156 -19.79859543]
[-41.77508926 -22.92435265]
[-52.15335846 -14.34335327]
[-65.38559723 -13.31988144]
[-76.62543488 -20.00412750]
[-81.88525391 -31.76408386]
[-96.50917053 -35.10189819]
[-111.13308716 -38.43971252]
[-123.48823547 -28.85407639]
[-139.11228943 -29.50444031]
[-150.62805176 -40.08372498]
[-152.59812927 -55.59671402]
[-144.09231567 -68.71864319]
[-129.12678528 -73.25375366]
[-114.76782227 -67.06068420]
[-107.79527283 -53.06362915]
[-93.17135620 -49.72581482]
[-78.54743958 -46.38800430]
[-64.70028687 -55.93594742]
[-47.90171432 -52.44389343]
[-38.64933395 -37.59505844]
[-23.97862625 -34.46930313]
[-9.30791855 -31.34354782]
[5.36278868 -28.21779251]
[19.42298889 -33.13307953]
[31.30788040 -22.68990517]
[45.97858810 -19.56414986]
[41.95293808 -31.31699181]
[43.54491425 -44.89327621]
[51.46713257 -57.53760147]
[48.23526382 -72.18530273]
[45.00339508 -86.83299255]
[41.77152634 -101.48069000]
[38.53965378 -116.12838745]
[20.68264198 -123.03087616]
[10.67749119 -139.17655945]
[12.41656303 -157.94026184]
[25.01612282 -171.75009155]
[21.15131950 -186.24365234]
[17.28651619 -200.73721313]
[0.53915524 -209.60131836]
[-4.32283211 -227.58462524]
[5.33936834 -243.13699341]
[1.05658662 -257.51260376]
[-3.22619534 -271.88818359]
[-7.50897694 -286.26379395]
[-19.78754425 -297.13433838]
[-16.24797249 -313.14694214]
[-0.53147125 -317.82919312]
[11.19417191 -306.36441040]
[6.86661959 -290.54656982]
[11.14940166 -276.17095947]
[15.43218327 -261.79537964]
[19.71496582 -247.41978455]
[30.68307686 -244.29776001]
[38.86828995 -236.18626404]
[42.15715408 -225.01693726]
[39.62228394 -213.52999878]
[31.78007698 -204.60202026]
[35.64488220 -190.10845947]
[39.50968170 -175.61489868]
[50.48243713 -173.64489746]
[59.97202301 -167.69709778]
[66.58850861 -158.59751892]
[69.34600067 -147.63699341]
[67.80941772 -136.38809204]
[62.16261673 -126.47949982]
[53.18735123 -119.36026001]
[56.41921997 -104.71256256]
[59.65109253 -90.06486511]
[62.88296127 -75.41716766]
[66.11483002 -60.76947403]
[73.30262756 -58.62808228]
[77.48887634 -73.03208160]
[81.67512512 -87.43608856]
[86.15039062 -101.75292969]
[100.52599335 -97.47016144]
[96.43647003 -83.03838348]
[92.05735016 -68.69184113]
[87.67822266 -54.34529877]
[94.86602020 -52.20390701]
[105.58716583 -62.69472122]
[116.30830383 -73.18553162]
[127.02944946 -83.67634583]
[134.12161255 -99.07561493]
[150.88238525 -96.52354431]
[153.06990051 -79.71131897]
[137.52026367 -72.95520020]
[126.79911804 -62.46438980]
[116.07798004 -51.97357941]
[105.35683441 -41.48276901]
[106.28716278 -26.68804741]
[101.28664398 -13.53639793]
[91.82476044 -4.16519499]
[80.03395844 0.17681545]
[68.25447083 -0.71928787]
[73.76826477 13.23055458]
[79.28205872 27.18039703]
[84.79584503 41.13024139]
[90.30963898 55.08008194]
[113.54201508 56.08740616]
[133.30659485 68.33972168]
[144.54212952 88.69950867]
[144.37145996 111.95307922]
[158.02412415 118.16634369]
[171.67678833 124.37960815]
[185.32946777 130.59286499]
[198.98213196 136.80612183]
[190.83242798 124.21318054]
[188.87028503 109.34207153]
[193.47486877 95.06629181]
[203.75643921 84.14431763]
[217.72830200 78.68657684]
[232.69071960 79.74765015]
[245.75256348 87.12250519]
[254.38989258 99.38613129]
[256.93377686 114.16884613]
[252.89263916 128.61422729]
[243.04734802 139.93104553]
[229.30029297 145.93257141]
[214.31071472 145.45991516]
[226.68386841 153.93959045]
[239.05702209 162.41928101]
[251.43017578 170.89895630]
[263.80334473 179.37863159]
[276.11782837 170.53958130]
[290.71365356 166.44837952]
[305.82827759 167.59906006]
[319.63653564 173.85269165]
[330.47100830 184.45410156]
[337.02340698 198.12310791]
[338.50247192 213.20913696]
[334.72961426 227.89045715]
[326.16040039 240.39424133]
[313.82965088 249.21058655]
[299.22631836 253.27488708]
[284.11383057 252.09634399]
[270.31710815 245.81729126]
[259.50219727 235.19593811]
[252.97500610 221.51486206]
[251.52374268 206.42614746]
[255.32365417 191.75180054]
[242.95050049 183.27210999]
[230.57734680 174.79243469]
[218.20419312 166.31275940]
[205.83102417 157.83306885]
[192.76887512 150.45880127]
[179.11619568 144.24552917]
[165.46353149 138.03227234]
[151.81086731 131.81901550]
[138.15818787 125.60575104]
[133.49191284 131.46417236]
[127.93595123 136.48677063]
[121.63790131 140.54014587]
[114.76506042 143.51660156]
[107.50000000 145.33709717]
[107.50000000 160.33709717]
[107.50000000 175.33709717]
[107.50000000 190.33709717]
[107.50000000 205.33709717]
[107.50000000 220.33709717]
[107.50000000 235.33709717]
[110.62827301 243.91424561]
[107.38984680 250.55384827]
[107.17269897 265.55227661]
[106.95554352 280.55072021]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 216]
[3 215]
[4 214]
[5 212]
[6 211]
[7 210]
[8 209]
[9 208]
[10 207]
[11 206]
[14 21]
[15 20]
[22 36]
[23 35]
[24 34]
[25 33]
[26 32]
[41 150]
[42 149]
[43 148]
[44 147]
[45 146]
[46 77]
[47 76]
[49 74]
[50 73]
[51 72]
[52 71]
[56 68]
[57 67]
[58 66]
[80 122]
[81 121]
[82 120]
[83 119]
[84 118]
[88 111]
[89 110]
[90 109]
[93 104]
[94 103]
[95 102]
[96 101]
[131 141]
[132 140]
[133 139]
[134 138]
[154 201]
[155 200]
[156 199]
[157 198]
[158 197]
[171 196]
[172 195]
[173 194]
[174 193]
[175 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
