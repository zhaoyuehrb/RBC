%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:59:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCAGAGAGGCCGCGGAGGGCUGGCGGGCGAGCGCGGGCAGGCGGCGACGCGGGGGCAGGGGUGGACGGCGGUCAGAGCCGAACGCGAGGGCGGCGCCCGGGGACUGGAGCUGCGCGCAAUAGGACAGCUGGCCUGAAGCUCAGAGCCGGGGCGUGCGCCAUGGCCCCACACUGGGCUGUCUGGCUGCUGGCAGCAAGGCUGUGGGGCCUGGGCAUUGGGGCUGAGGUGUGGUGGAACCUUGUGCCGCGUAAGAC\
AGUGU\
) } def
/len { sequence length } bind def

/coor [
[-38.60604095 627.61206055]
[-52.09519577 634.17272949]
[-66.86998749 636.76226807]
[-81.78630829 635.18005371]
[-95.68909454 629.54864502]
[-107.50176239 620.30413818]
[-116.30958557 608.16241455]
[-121.43051147 594.06359863]
[-122.46799469 579.09954834]
[-119.34337616 564.43353271]
[-128.70579529 576.15295410]
[-138.06822205 587.87237549]
[-147.43064880 599.59179688]
[-156.79307556 611.31121826]
[-153.01835632 621.23181152]
[-153.68022156 631.74487305]
[-158.59362793 640.97149658]
[-166.81962585 647.29022217]
[-176.84413147 649.62207031]
[-186.85633850 647.61425781]
[-196.63575745 658.98803711]
[-206.41519165 670.36181641]
[-209.54554749 685.87023926]
[-223.71005249 690.47631836]
[-233.48948669 701.85009766]
[-243.26890564 713.22387695]
[-241.83129883 728.96264648]
[-252.00781250 741.05450439]
[-267.76089478 742.32562256]
[-279.74453735 732.02185059]
[-280.84902954 716.25622559]
[-270.41912842 704.38220215]
[-254.64268494 703.44445801]
[-244.86326599 692.07061768]
[-235.08384705 680.69683838]
[-232.65296936 666.00195312]
[-217.78897095 660.58239746]
[-208.00953674 649.20861816]
[-198.23011780 637.83483887]
[-201.08528137 618.53790283]
[-188.59661865 603.15563965]
[-168.51251221 601.94879150]
[-159.15008545 590.22937012]
[-149.78765869 578.50994873]
[-140.42523193 566.79052734]
[-131.06280518 555.07110596]
[-129.87062073 545.36096191]
[-120.93406677 538.90502930]
[-114.47232819 525.36822510]
[-108.01058960 511.83139038]
[-101.54885101 498.29455566]
[-95.08710480 484.75772095]
[-88.62536621 471.22088623]
[-92.36203766 459.73648071]
[-87.11473083 448.41610718]
[-75.19525909 443.54129028]
[-68.57105255 430.08322144]
[-61.94684601 416.62515259]
[-55.32263947 403.16705322]
[-48.69842911 389.70898438]
[-42.07422256 376.25091553]
[-50.47198486 363.94873047]
[-51.59191132 348.99542236]
[-45.03337097 335.39941406]
[-32.46755219 326.85556030]
[-17.21286011 325.74130249]
[-10.58865356 312.28320312]
[-11.91005993 297.44735718]
[1.12623358 288.48266602]
[7.75044155 275.02456665]
[14.37464905 261.56649780]
[12.28485107 244.12907410]
[27.70613670 234.03976440]
[34.16787720 220.50292969]
[40.62961960 206.96609497]
[47.09135818 193.42926025]
[41.89702225 179.51687622]
[48.25730896 165.69654846]
[62.88511658 160.34257507]
[69.34685516 146.80574036]
[75.80860138 133.26890564]
[82.27033997 119.73207092]
[70.79222870 107.73889160]
[67.82548523 89.30975342]
[55.11433792 81.34565735]
[42.40319443 73.38156128]
[26.00412750 73.33056641]
[18.08461380 58.97043610]
[26.79157066 45.07363892]
[43.16802979 45.93601227]
[50.36729050 60.67041779]
[63.07843399 68.63451385]
[75.78958130 76.59860229]
[88.35486603 68.40631866]
[86.19577789 53.56252289]
[84.03668976 38.71872330]
[81.87759399 23.87492752]
[79.71850586 9.03112888]
[77.55941772 -5.81266880]
[67.91630554 -18.35543060]
[73.74107361 -32.06386948]
[71.58198547 -46.90766907]
[59.19838715 -56.35670471]
[57.22021866 -71.44118500]
[66.30474854 -83.18881989]
[64.14566040 -98.03261566]
[61.98656845 -112.87641144]
[57.66675186 -120.88864136]
[59.89194107 -127.91175842]
[57.91167450 -142.78047180]
[55.93140793 -157.64918518]
[53.95114136 -172.51788330]
[44.45969391 -185.17581177]
[50.44904709 -198.81315613]
[48.46878052 -213.68185425]
[38.97733307 -226.33978271]
[44.96668625 -239.97711182]
[42.98641968 -254.84582520]
[39.29138947 -260.26776123]
[38.92115021 -265.89953613]
[41.14190292 -270.09576416]
[39.52011871 -285.00784302]
[37.89833450 -299.91992188]
[26.34532738 -311.05130005]
[27.98840332 -327.00997925]
[41.56713486 -335.55386353]
[56.66508102 -330.12875366]
[61.70038986 -314.89639282]
[52.81040192 -301.54171753]
[54.43218994 -286.62963867]
[56.05397415 -271.71755981]
[57.85512924 -256.82608032]
[59.83539581 -241.95738220]
[69.18520355 -230.36297607]
[63.33749008 -215.66212463]
[65.31775665 -200.79341125]
[74.66756439 -189.19900513]
[68.81985474 -174.49815369]
[70.80011749 -159.62944031]
[72.78038788 -144.76074219]
[74.76065063 -129.89202881]
[76.83036804 -115.03549957]
[78.98945618 -100.19170380]
[81.14854431 -85.34790802]
[93.20331573 -76.67506409]
[95.60439301 -61.65210342]
[86.42578125 -49.06675720]
[88.58487701 -34.22296143]
[98.07355499 -22.74192429]
[92.40321350 -7.97175837]
[94.56230927 6.87203932]
[96.72139740 21.71583748]
[98.88048553 36.55963516]
[101.03957367 51.40343094]
[103.19866180 66.24723053]
[112.61512756 71.19632721]
[119.35425568 78.42198181]
[123.00299835 86.78797913]
[137.59170532 83.29946899]
[152.18040466 79.81095886]
[160.47454834 66.62593079]
[175.31925964 63.29590225]
[187.83805847 71.28434753]
[202.42675781 67.79583740]
[217.01547241 64.30732727]
[231.60417175 60.81881332]
[246.19287109 57.33030319]
[260.78158569 53.84179306]
[275.37026978 50.35327911]
[289.95898438 46.86476898]
[304.54769897 43.37625504]
[319.11514282 39.80000687]
[333.66079712 36.13615036]
[341.79562378 22.85224533]
[356.59918213 19.34378242]
[369.21322632 27.18097115]
[383.75888062 23.51711464]
[398.30453491 19.85326004]
[412.85021973 16.18940353]
[427.39587402 12.52554893]
[441.94152832 8.86169338]
[447.59448242 -5.58904362]
[460.67987061 -13.92884445]
[476.16607666 -12.95088482]
[488.09838867 -3.03121161]
[491.88854980 12.01585960]
[486.07916260 26.40442276]
[472.90408325 34.60177994]
[457.42935181 33.45588303]
[445.60537720 23.40735054]
[431.05972290 27.07120705]
[416.51406860 30.73506165]
[401.96841431 34.39891815]
[387.42276001 38.06277466]
[372.87707520 41.72662735]
[365.48080444 54.60414886]
[350.78161621 58.52702713]
[337.32464600 50.68180847]
[322.77899170 54.34566498]
[317.07830811 59.01234055]
[308.03619385 57.96495819]
[293.44750977 61.45347214]
[278.85879517 64.94198608]
[264.27008057 68.43049622]
[249.68138123 71.91900635]
[235.09268188 75.40751648]
[220.50398254 78.89603424]
[205.91528320 82.38454437]
[191.32656860 85.87305450]
[183.77581787 98.66061401]
[169.03050232 102.40628815]
[155.66891479 94.39965820]
[141.08021545 97.88817596]
[126.49151611 101.37668610]
[116.68173218 120.62559509]
[95.80717468 126.19380951]
[89.34543610 139.73065186]
[82.88368988 153.26748657]
[76.42195129 166.80432129]
[81.45784760 181.54464722]
[74.71188354 195.18087769]
[60.62819290 199.89099121]
[54.16645432 213.42782593]
[47.70471191 226.96466064]
[41.24297333 240.50149536]
[44.79956818 252.87841797]
[39.16308975 264.01013184]
[27.83272743 268.19070435]
[21.20851898 281.64877319]
[14.58431149 295.10687256]
[15.43191051 310.90533447]
[2.86942506 318.90740967]
[-3.75478268 332.36550903]
[4.66689205 345.13354492]
[5.56102467 360.30249023]
[-1.21255088 373.79266357]
[-13.74521065 382.02606201]
[-28.61614418 382.87512207]
[-35.24035263 396.33319092]
[-41.86455917 409.79125977]
[-48.48876572 423.24935913]
[-55.11297607 436.70742798]
[-61.73718262 450.16549683]
[-60.10498428 468.52160645]
[-75.08853149 477.68261719]
[-81.55027008 491.21945190]
[-88.01201630 504.75628662]
[-94.47375488 518.29309082]
[-100.93549347 531.82995605]
[-107.39723206 545.36676025]
[-95.55882263 536.15527344]
[-81.64038086 530.56268311]
[-66.71970367 529.02209473]
[-51.95219421 531.65283203]
[-38.48139572 538.25109863]
[-27.35043335 548.30603027]
[-19.42125511 561.03900146]
[-15.30786419 575.46398926]
[-15.32878780 590.46398926]
[-19.48240471 604.87744141]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 46]
[11 45]
[12 44]
[13 43]
[14 42]
[20 39]
[21 38]
[22 37]
[24 35]
[25 34]
[26 33]
[48 250]
[49 249]
[50 248]
[51 247]
[52 246]
[53 245]
[56 243]
[57 242]
[58 241]
[59 240]
[60 239]
[61 238]
[66 233]
[67 232]
[69 230]
[70 229]
[71 228]
[73 225]
[74 224]
[75 223]
[76 222]
[79 219]
[80 218]
[81 217]
[82 216]
[84 93]
[85 92]
[86 91]
[94 155]
[95 154]
[96 153]
[97 152]
[98 151]
[99 150]
[101 148]
[102 147]
[105 144]
[106 143]
[107 142]
[109 141]
[110 140]
[111 139]
[112 138]
[114 136]
[115 135]
[117 133]
[118 132]
[121 131]
[122 130]
[123 129]
[158 214]
[159 213]
[160 212]
[163 209]
[164 208]
[165 207]
[166 206]
[167 205]
[168 204]
[169 203]
[170 202]
[171 201]
[172 199]
[173 198]
[176 195]
[177 194]
[178 193]
[179 192]
[180 191]
[181 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
