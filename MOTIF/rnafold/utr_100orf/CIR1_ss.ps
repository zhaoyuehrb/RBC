%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:41:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUGCUGCUGGAAACGCAGUUCCGGUUAGGCGGCUGAGUUUGUUUACGUUGCUAACAGAUCUAGCCCCUGCUUUCCCUAGUUCCAGUUCCAAGAUGGGGAAAUCCUUCGCCAACUUCAUGUGCAAGAAAGACUUUCAUCCUGCCUCCAAAUCCAAUAUCAAAAAAGUAUGGAUGGCAGAACAGAAAAUAUCAU\
) } def
/len { sequence length } bind def

/coor [
[171.64282227 146.31033325]
[158.37838745 139.30641174]
[145.11395264 132.30250549]
[131.84951782 125.29858398]
[118.58509064 118.29467010]
[94.34407806 125.45802307]
[75.41668701 108.70408630]
[60.43438721 109.43252563]
[45.45208359 110.16095734]
[30.46977997 110.88938904]
[15.48747826 111.61782074]
[0.50517607 112.34626007]
[-7.92840195 115.89299011]
[-14.72523785 112.96318817]
[-29.71737099 113.44891357]
[-39.09899521 122.31392670]
[-51.60515976 122.40212250]
[-60.51955414 114.21211243]
[-75.51758575 114.45500946]
[-83.03932953 127.77306366]
[-96.13094330 135.48710632]
[-111.22566986 135.61172485]
[-124.26879883 128.21356201]
[-131.80680847 115.36662292]
[-146.80484009 115.60951996]
[-161.80287170 115.85241699]
[-170.34687805 119.12419891]
[-177.04528809 115.97583771]
[-192.04528809 115.97583771]
[-207.04528809 115.97583771]
[-215.64114380 119.10883331]
[-222.28768921 115.85241699]
[-237.28572083 115.60951996]
[-252.28375244 115.36662292]
[-267.28179932 115.12372589]
[-282.27981567 114.88082886]
[-296.20346069 122.39365387]
[-308.80377197 114.45127106]
[-323.80181885 114.20837402]
[-338.79986572 113.96547699]
[-353.79788208 113.72257996]
[-368.79592896 113.47969055]
[-383.79394531 113.23679352]
[-398.79199219 112.99389648]
[-407.25592041 125.89215851]
[-421.35885620 132.14602661]
[-436.60058594 129.75991821]
[-448.11752319 119.49523926]
[-452.23464966 104.62739563]
[-447.63821411 89.90067291]
[-435.79495239 80.01431274]
[-420.48394775 78.12300873]
[-406.59091187 84.83028412]
[-398.54910278 97.99586487]
[-383.55105591 98.23875427]
[-368.55300903 98.48165131]
[-353.55499268 98.72454834]
[-338.55694580 98.96744537]
[-323.55892944 99.21034241]
[-308.56088257 99.45323944]
[-295.70999146 91.92304230]
[-282.03692627 99.88279724]
[-267.03887939 100.12569427]
[-252.04086304 100.36859131]
[-237.04283142 100.61148834]
[-222.04478455 100.85438538]
[-207.04528809 100.97583771]
[-192.04528809 100.97583771]
[-177.04528809 100.97583771]
[-162.04577637 100.85438538]
[-147.04774475 100.61148834]
[-132.04971313 100.36859131]
[-124.93165588 87.28429413]
[-112.13493347 79.46765137]
[-97.04408264 79.10340118]
[-83.70954132 86.38947296]
[-75.76048279 99.45697784]
[-60.76244736 99.21408081]
[-46.22533417 89.39437866]
[-30.20310020 98.45677948]
[-15.21096611 97.97105408]
[-0.22325727 97.36395264]
[14.75904465 96.63552094]
[29.74134827 95.90708923]
[44.72364807 95.17865753]
[59.70595169 94.45021820]
[74.68825531 93.72178650]
[77.83220673 86.26357269]
[83.11143494 80.12849426]
[90.01742554 75.90750122]
[97.88496399 74.00717163]
[101.01947784 59.33833313]
[104.15399170 44.66949463]
[99.47129822 29.55715179]
[109.69736481 18.72771072]
[112.83187866 4.05887127]
[115.96639252 -10.60996723]
[111.28369904 -25.72231293]
[121.50976562 -36.55175400]
[124.64427948 -51.22059250]
[127.77879333 -65.88942719]
[122.21598816 -81.31626892]
[132.99992371 -93.67096710]
[149.03703308 -90.24407959]
[153.82968140 -74.56088257]
[142.44763184 -62.75491714]
[139.31312561 -48.08607864]
[136.17860413 -33.41724014]
[141.08549500 -19.35410881]
[130.63522339 -7.47545385]
[127.50071716 7.19338465]
[124.36620331 21.86222267]
[129.27310181 35.92535400]
[118.82283020 47.80400848]
[115.68831635 62.47284698]
[112.55380249 77.14168549]
[117.05182648 80.26841736]
[120.79746246 84.26577759]
[123.62543488 88.95738983]
[125.41095734 94.13625336]
[126.07525635 99.57384491]
[125.58900452 105.03023529]
[138.85343933 112.03414917]
[152.11787415 119.03807068]
[165.38229370 126.04198456]
[178.64672852 133.04589844]
[191.45602417 122.08436584]
[207.45616150 116.88903809]
[224.18836975 118.22866058]
[239.09271240 125.87000275]
[249.89976501 138.61785889]
[254.97618103 154.50193787]
[253.57145691 171.08135986]
[267.05572510 177.65208435]
[280.54000854 184.22279358]
[294.02429199 190.79350281]
[308.83908081 182.64562988]
[325.42727661 184.90583801]
[337.28439331 196.48818970]
[339.88027954 212.69081116]
[353.46920776 219.04231262]
[367.05810547 225.39381409]
[380.64703369 231.74531555]
[394.23593140 238.09681702]
[407.87582397 244.33808899]
[421.56579590 250.46870422]
[435.25576782 256.59933472]
[448.94573975 262.72994995]
[458.74295044 251.23249817]
[471.38327026 242.96214294]
[485.84201050 238.58929443]
[500.94705200 238.46844482]
[515.47387695 242.60940552]
[528.24493408 250.67646790]
[538.22485352 262.01568604]
[544.60461426 275.70785522]
[546.86706543 290.64297485]
[544.82879639 305.61035156]
[538.65509033 319.39660645]
[528.84631348 330.88421631]
[516.19769287 339.14187622]
[501.73455811 343.50021362]
[486.62942505 343.60586548]
[472.10675049 339.45031738]
[459.34384155 331.37042236]
[449.37530518 320.02117920]
[443.00927734 306.32263184]
[440.76184082 291.38525391]
[442.81512451 276.41992188]
[429.12515259 270.28930664]
[415.43518066 264.15869141]
[401.74520874 258.02804565]
[394.34503174 258.16375732]
[387.88442993 251.68572998]
[374.29553223 245.33422852]
[360.70660400 238.98271179]
[347.11770630 232.63121033]
[333.52877808 226.27970886]
[322.48876953 233.80102539]
[309.06597900 234.89016724]
[296.76144409 229.15570068]
[288.83761597 217.99993896]
[287.45355225 204.27778625]
[273.96929932 197.70707703]
[260.48501587 191.13635254]
[247.00073242 184.56564331]
[237.64437866 193.98085022]
[225.82002258 200.06181335]
[212.67413330 202.20314026]
[199.48611450 200.18217468]
[187.54396057 194.18206787]
[178.01828003 184.77526855]
[171.84773254 172.86889648]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 126]
[2 125]
[3 124]
[4 123]
[5 122]
[7 87]
[8 86]
[9 85]
[10 84]
[11 83]
[12 82]
[14 81]
[15 80]
[18 78]
[19 77]
[24 72]
[25 71]
[26 70]
[28 69]
[29 68]
[30 67]
[32 66]
[33 65]
[34 64]
[35 63]
[36 62]
[38 60]
[39 59]
[40 58]
[41 57]
[42 56]
[43 55]
[44 54]
[91 116]
[92 115]
[93 114]
[95 112]
[96 111]
[97 110]
[99 108]
[100 107]
[101 106]
[133 186]
[134 185]
[135 184]
[136 183]
[140 178]
[141 177]
[142 176]
[143 175]
[144 174]
[145 172]
[146 171]
[147 170]
[148 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
