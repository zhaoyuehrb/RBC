%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:44:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGCUGUGCGGGGCGCUCGCGGGCUUCAGCGAGGCGGGAGGGCGGCCCUGUUGCCCUGGAGACGCUUUCCCUGCUGCCGGCCGCGACCGCAACCCGCUAGGCCUUCAUCGCGAGCUACGCCCGGACCGAGAAGCCCCGGCAUGGCCACGUCCAUCGGAGUGUCCUUCUCGGUGGGCGACGGGGUGCCUGAGGCUGAGAAGAACGCAGGGGAGCCCGAGAACACCUAUAUUCUGCGGCCUG\
) } def
/len { sequence length } bind def

/coor [
[31.63869858 194.26530457]
[31.25089073 179.27032471]
[30.86308289 164.27532959]
[19.31032944 154.70799255]
[4.50577450 157.12153625]
[-10.29878139 159.53506470]
[-25.10333633 161.94859314]
[-34.33844376 174.49253845]
[-49.38675308 176.72930908]
[-61.28857040 167.84773254]
[-76.09312439 170.26126099]
[-90.89768219 172.67478943]
[-105.70223999 175.08833313]
[-120.50679779 177.50186157]
[-135.27891541 180.10658264]
[-150.01611328 182.90205383]
[-164.75332642 185.69754028]
[-176.86976624 195.87115479]
[-190.81602478 190.64132690]
[-205.55323792 193.43681335]
[-220.29043579 196.23228455]
[-235.02764893 199.02777100]
[-249.76486206 201.82324219]
[-264.50207520 204.61872864]
[-272.33016968 209.28335571]
[-279.44778442 207.35379028]
[-294.21990967 209.95851135]
[-308.06097412 222.11869812]
[-324.30410767 215.45187378]
[-339.04132080 218.24734497]
[-353.77853394 221.04283142]
[-368.51571655 223.83830261]
[-383.17575073 227.01387024]
[-397.74874878 230.56738281]
[-412.32174683 234.12089539]
[-426.89474487 237.67440796]
[-441.46777344 241.22792053]
[-456.04077148 244.78143311]
[-465.58312988 262.48492432]
[-484.78051758 267.35388184]
[-501.09429932 256.67349243]
[-515.51855469 260.78939819]
[-529.94281006 264.90533447]
[-544.36706543 269.02124023]
[-558.79132080 273.13714600]
[-573.21557617 277.25308228]
[-587.63983154 281.36898804]
[-602.06408691 285.48489380]
[-615.63616943 295.64532471]
[-629.15667725 285.41632080]
[-623.07025146 269.59255981]
[-606.17999268 271.06063843]
[-591.75573730 266.94473267]
[-577.33148193 262.82879639]
[-562.90722656 258.71289062]
[-548.48297119 254.59698486]
[-534.05871582 250.48106384]
[-519.63446045 246.36514282]
[-505.21020508 242.24923706]
[-502.83435059 232.30072021]
[-496.50256348 224.16549683]
[-487.29891968 219.34515381]
[-476.84484863 218.76426697]
[-467.01354980 222.59381104]
[-459.59429932 230.20843506]
[-445.02127075 226.65492249]
[-430.44827271 223.10139465]
[-415.87527466 219.54788208]
[-401.30224609 215.99436951]
[-386.72924805 212.44085693]
[-385.16107178 210.14179993]
[-382.59741211 208.31849670]
[-379.21252441 207.34965515]
[-375.31317139 207.54487610]
[-371.31121826 209.10110474]
[-356.57400513 206.30561829]
[-341.83679199 203.51014709]
[-327.09957886 200.71466064]
[-320.04400635 190.90545654]
[-307.80502319 188.44604492]
[-296.82461548 195.18640137]
[-282.05252075 192.58168030]
[-267.29754639 189.88151550]
[-252.56033325 187.08604431]
[-237.82312012 184.29055786]
[-223.08592224 181.49508667]
[-208.34870911 178.69960022]
[-193.61149597 175.90412903]
[-182.54916382 165.93045044]
[-167.54881287 170.96032715]
[-152.81159973 168.16485596]
[-138.07438660 165.36936951]
[-134.70318604 162.01394653]
[-129.19531250 160.72732544]
[-122.92032623 162.69729614]
[-108.11576843 160.28376770]
[-93.31121063 157.87023926]
[-78.50666046 155.45671082]
[-63.70210266 153.04318237]
[-55.23743057 140.84133911]
[-40.25788879 138.18276978]
[-27.51686859 147.14402771]
[-12.71231270 144.73049927]
[2.09224343 142.31697083]
[16.89679909 139.90344238]
[20.33450508 134.73561096]
[25.57867622 130.85137939]
[32.13460159 128.88133240]
[39.28987122 129.26141357]
[46.19161987 132.15927124]
[51.94796371 137.43127441]
[66.60797119 134.25572205]
[81.26798248 131.08015442]
[71.00725555 119.56758118]
[66.75698090 105.33016968]
[68.86500549 91.19118500]
[76.46395111 79.75285339]
[87.72098541 72.91748810]
[100.25673676 71.57554626]
[111.64096069 75.51087952]
[121.57662964 64.27333069]
[131.51229858 53.03578186]
[141.44796753 41.79823303]
[151.38363647 30.56068611]
[153.06291199 24.20172882]
[157.08819580 20.22817612]
[161.72438049 19.16531372]
[171.94726562 8.18839741]
[182.17015076 -2.78851843]
[192.39303589 -13.76543427]
[202.61590576 -24.74234962]
[212.83879089 -35.71926498]
[223.06167603 -46.69618225]
[233.28456116 -57.67309952]
[243.50744629 -68.65001678]
[244.32475281 -72.86539459]
[246.23875427 -76.26828766]
[248.86322021 -78.61527252]
[251.77265930 -79.81190491]
[254.55380249 -79.91269684]
[265.33041382 -90.34651184]
[276.10702515 -100.78032684]
[286.88363647 -111.21414948]
[297.66027832 -121.64796448]
[298.64471436 -134.49446106]
[307.81735229 -142.96224976]
[319.90042114 -142.92025757]
[330.81100464 -153.21388245]
[327.87051392 -168.35841370]
[333.60580444 -182.68008423]
[346.18673706 -191.60890198]
[361.59878540 -192.29568481]
[374.92407227 -184.52131653]
[381.91049194 -170.76655579]
[380.32870483 -155.42050171]
[370.68350220 -143.38002014]
[356.05258179 -138.48718262]
[341.10464478 -142.30326843]
[330.19403076 -132.00964355]
[326.06219482 -114.94465637]
[308.09408569 -110.87134552]
[297.31747437 -100.43753052]
[286.54086304 -90.00371552]
[275.76422119 -79.56989288]
[264.98760986 -69.13607788]
[254.48435974 -58.42713165]
[244.26147461 -47.45021820]
[234.03858948 -36.47330093]
[223.81570435 -25.49638557]
[213.59283447 -14.51946831]
[203.36994934 -3.54255247]
[193.14706421 7.43436337]
[182.92417908 18.41127968]
[172.70129395 29.38819504]
[162.62118530 40.49635696]
[152.68551636 51.73390198]
[142.74984741 62.97145081]
[132.81417847 74.20899963]
[122.87850189 85.44654846]
[131.66778564 101.46963501]
[128.68321228 122.22921753]
[142.21571350 128.70001221]
[155.74822998 135.17080688]
[169.28074646 141.64160156]
[184.05326843 133.38244629]
[200.67173767 135.54232788]
[212.60299683 147.07211304]
[215.27604675 163.27870178]
[228.89108276 169.57400513]
[242.50611877 175.86930847]
[256.12115479 182.16461182]
[270.78567505 173.71517944]
[287.43066406 175.66003418]
[299.51000977 187.03460693]
[302.39233398 203.20529175]
[316.08761597 209.32405090]
[332.33441162 207.09368896]
[342.17422485 220.21276855]
[335.48471069 235.18550110]
[319.14749146 236.60922241]
[309.96887207 223.01933289]
[296.27359009 216.90057373]
[285.38192749 224.60105896]
[272.00070190 225.93020630]
[259.60922241 220.43510437]
[251.48252869 209.45123291]
[249.82585144 195.77964783]
[236.21081543 189.48434448]
[222.59577942 183.18904114]
[208.98074341 176.89373779]
[197.99043274 184.45277405]
[184.59315491 185.60882568]
[172.27377319 179.95397949]
[164.28973389 168.86596680]
[162.80995178 155.17410278]
[149.27743530 148.70330811]
[135.74493408 142.23252869]
[122.21241760 135.76173401]
[111.50347137 146.26499939]
[117.71063232 159.92044067]
[123.91779327 173.57588196]
[130.12495422 187.23132324]
[145.35391235 190.20762634]
[155.90031433 201.58976746]
[157.70883179 217.00108337]
[150.08407593 230.51562500]
[135.95790100 236.93675232]
[120.76212311 233.79542542]
[110.33982849 222.29954529]
[108.69859314 206.86950684]
[116.46951294 193.43849182]
[110.26235199 179.78303528]
[104.05519104 166.12759399]
[97.84803009 152.47215271]
[84.44354248 145.74017334]
[69.78353119 148.91572571]
[55.12352371 152.09127808]
[45.85807037 163.88752747]
[46.24587631 178.88250732]
[46.63368225 193.87750244]
[53.08750534 209.55500793]
[39.80926895 220.09658813]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 240]
[2 239]
[3 238]
[4 105]
[5 104]
[6 103]
[7 102]
[10 99]
[11 98]
[12 97]
[13 96]
[14 95]
[15 92]
[16 91]
[17 90]
[19 88]
[20 87]
[21 86]
[22 85]
[23 84]
[24 83]
[26 82]
[27 81]
[29 78]
[30 77]
[31 76]
[32 75]
[33 70]
[34 69]
[35 68]
[36 67]
[37 66]
[38 65]
[41 59]
[42 58]
[43 57]
[44 56]
[45 55]
[46 54]
[47 53]
[48 52]
[111 237]
[112 236]
[113 235]
[120 179]
[121 178]
[122 177]
[123 176]
[124 175]
[127 174]
[128 173]
[129 172]
[130 171]
[131 170]
[132 169]
[133 168]
[134 167]
[135 166]
[140 165]
[141 164]
[142 163]
[143 162]
[144 161]
[147 159]
[148 158]
[181 218]
[182 217]
[183 216]
[184 215]
[188 210]
[189 209]
[190 208]
[191 207]
[195 202]
[196 201]
[219 234]
[220 233]
[221 232]
[222 231]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
