%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:26:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCGCCUCCUGUCCUCCGGAAAGGUGCCCGCCUCUUGCCUUCCGGCCCGGCGCCCGAUUUCCGCCUUCCGACCCAGCUGUGGGCUGCGCCCCACGCCAGCCCGCGCCCCGCAUGGCUGCCGCCGGGGCCAGGCCUGUGGAGCUGGGCUUCGCCGAGUCGGCGCCGGCGUGGCGACUGCGCAGCGAGCAGUUCCCCAGCAAGGUGGGCGGGC\
) } def
/len { sequence length } bind def

/coor [
[43.54356003 300.68896484]
[44.35488510 306.85971069]
[43.41902161 312.97201538]
[40.83247757 318.54415894]
[36.82093048 323.14337158]
[31.71972656 326.41934204]
[25.94589615 328.13104248]
[19.96410751 328.16412354]
[13.11466980 341.50900269]
[6.26523113 354.85385132]
[6.84721279 370.66433716]
[-5.84797573 378.45419312]
[-12.69741440 391.79904175]
[-19.54685211 405.14389038]
[-21.40029526 421.99621582]
[-38.10711670 424.88040161]
[-45.50349045 409.62490845]
[-32.89170837 398.29446411]
[-26.04227066 384.94958496]
[-19.19283295 371.60473633]
[-20.26473236 356.74874878]
[-7.07962561 348.00442505]
[-0.23018683 334.65954590]
[6.61925173 321.31469727]
[2.53295302 297.97442627]
[23.00240707 284.68362427]
[28.43322182 270.70126343]
[33.86403656 256.71890259]
[39.29485321 242.73655701]
[44.72566986 228.75421143]
[50.15648270 214.77185059]
[55.58729935 200.78948975]
[61.01811600 186.80714417]
[66.24114227 172.74584961]
[71.25522614 158.60870361]
[76.26931000 144.47155762]
[81.28340149 130.33441162]
[86.29748535 116.19725800]
[80.26191711 109.32070160]
[77.56164551 100.30769348]
[78.89243317 90.73165894]
[84.22587585 82.35869598]
[92.77651978 76.82205963]
[103.11181641 75.30548859]
[113.39083099 78.29643250]
[113.83532715 63.30302048]
[114.16872406 48.30672836]
[114.39099884 33.30837250]
[114.61327362 18.31002045]
[114.83554840 3.31166768]
[115.05782318 -11.68668556]
[115.28009796 -26.68503761]
[115.50237274 -41.68339157]
[115.72464752 -56.68174362]
[112.72293091 -65.30805206]
[116.06298065 -71.90026093]
[116.50748444 -86.89367676]
[116.95198059 -101.88709259]
[117.39648438 -116.88050079]
[117.84098053 -131.87391663]
[109.57928467 -141.77816772]
[110.25772858 -154.25659180]
[118.96807098 -162.64974976]
[119.63469696 -177.63491821]
[108.75991058 -182.74928284]
[100.27083588 -191.20639038]
[95.14517975 -201.99928284]
[93.96213531 -213.85397339]
[96.83704376 -225.37980652]
[103.41057587 -235.23260498]
[112.89347076 -242.27143860]
[124.16126251 -245.69068909]
[125.49319458 -260.63143921]
[126.82513428 -275.57217407]
[128.15707397 -290.51293945]
[129.48901367 -305.45367432]
[130.82095337 -320.39443970]
[132.15289307 -335.33517456]
[129.60899353 -350.11788940]
[123.35939789 -363.75396729]
[117.10979462 -377.39004517]
[110.86019135 -391.02612305]
[104.61059570 -404.66217041]
[98.36099243 -418.29824829]
[92.11138916 -431.93432617]
[85.86179352 -445.57040405]
[79.44197083 -452.06729126]
[79.62228394 -459.45516968]
[73.57543182 -473.18234253]
[59.20156097 -480.30773926]
[55.95143127 -496.01812744]
[66.31826782 -508.26184082]
[82.34951019 -507.64654541]
[91.74737549 -494.64422607]
[87.30261993 -479.22918701]
[93.34946442 -465.50201416]
[99.49786377 -451.82000732]
[105.74746704 -438.18392944]
[111.99706268 -424.54785156]
[118.24666595 -410.91177368]
[124.49626923 -397.27572632]
[130.74586487 -383.63964844]
[136.99546814 -370.00357056]
[143.24507141 -356.36749268]
[150.73765564 -356.03417969]
[158.80729675 -368.67858887]
[165.72283936 -355.36755371]
[173.21542358 -355.03424072]
[180.65116882 -368.06149292]
[188.08691406 -381.08877563]
[195.52265930 -394.11605835]
[202.95838928 -407.14331055]
[204.49440002 -416.14688110]
[210.60206604 -420.30737305]
[218.23004150 -433.22302246]
[225.85800171 -446.13867188]
[233.48597717 -459.05432129]
[240.92170715 -472.08160400]
[248.16358948 -485.21762085]
[255.40547180 -498.35363770]
[252.34706116 -514.10247803]
[262.86236572 -526.21893311]
[278.88491821 -525.40826416]
[288.12359619 -512.29241943]
[283.49130249 -496.93267822]
[268.54150391 -491.11175537]
[261.29962158 -477.97573853]
[254.05773926 -464.83972168]
[254.50038147 -460.08508301]
[251.96142578 -455.00180054]
[246.40162659 -451.42636108]
[238.77365112 -438.51071167]
[231.14569092 -425.59503174]
[223.51773071 -412.67938232]
[215.98565674 -399.70758057]
[208.54992676 -386.68029785]
[201.11418152 -373.65304565]
[193.67843628 -360.62576294]
[186.24269104 -347.59851074]
[147.09364319 -334.00323486]
[145.76170349 -319.06250000]
[144.42976379 -304.12173462]
[143.09782410 -289.18099976]
[141.76588440 -274.24026489]
[140.43394470 -259.29949951]
[139.10200500 -244.35874939]
[154.39224243 -234.63201904]
[162.66635132 -218.41372681]
[161.55630493 -200.15534973]
[151.28318787 -184.91770935]
[134.61987305 -176.96829224]
[133.95324707 -161.98310852]
[142.87089539 -146.86842346]
[132.83439636 -131.42941284]
[132.38989258 -116.43600464]
[131.94538879 -101.44258881]
[131.50090027 -86.44918060]
[131.05639648 -71.45576477]
[130.72299194 -56.45946884]
[130.50071716 -41.46111679]
[130.27844238 -26.46276474]
[130.05618286 -11.46441078]
[129.83390808 3.53394198]
[129.61163330 18.53229523]
[129.38935852 33.53064728]
[129.16708374 48.52899933]
[132.21086121 55.26314163]
[128.82873535 63.74752045]
[128.38424683 78.74093628]
[134.63383484 92.37700653]
[146.28170776 101.82832336]
[161.87304688 104.51544952]
[166.88088989 118.54294586]
[178.52874756 127.99426270]
[190.17660522 137.44558716]
[201.82446289 146.89689636]
[213.47232056 156.34822083]
[225.12017822 165.79953003]
[240.43801880 162.65345764]
[254.16976929 170.13499451]
[259.83169556 184.71156311]
[254.75044250 199.50057983]
[241.32519531 207.51910400]
[225.89495850 204.98103333]
[215.74540710 193.08479309]
[215.66886902 177.44738770]
[204.02101135 167.99607849]
[192.37315369 158.54475403]
[180.72529602 149.09344482]
[169.07743835 139.64212036]
[157.42958069 130.19079590]
[142.67137146 128.17970276]
[136.83038330 113.47618103]
[125.18252563 104.02486420]
[119.55876923 114.03498840]
[110.54563141 120.03912354]
[100.43463135 121.21134186]
[95.42054749 135.34849548]
[90.40646362 149.48564148]
[85.39237213 163.62278748]
[80.37828827 177.75993347]
[81.20230865 184.31860352]
[78.93171692 189.52729797]
[75.00047302 192.23796082]
[69.56965637 206.22030640]
[64.13883972 220.20266724]
[58.70802307 234.18502808]
[53.27720642 248.16737366]
[47.84639359 262.14971924]
[42.41557693 276.13208008]
[36.98476028 290.11444092]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 24]
[9 23]
[10 22]
[12 20]
[13 19]
[14 18]
[26 211]
[27 210]
[28 209]
[29 208]
[30 207]
[31 206]
[32 205]
[33 204]
[34 201]
[35 200]
[36 199]
[37 198]
[38 197]
[45 169]
[46 168]
[47 166]
[48 165]
[49 164]
[50 163]
[51 162]
[52 161]
[53 160]
[54 159]
[56 158]
[57 157]
[58 156]
[59 155]
[60 154]
[63 152]
[64 151]
[72 146]
[73 145]
[74 144]
[75 143]
[76 142]
[77 141]
[78 140]
[79 104]
[80 103]
[81 102]
[82 101]
[83 100]
[84 99]
[85 98]
[86 97]
[88 96]
[89 95]
[108 139]
[109 138]
[110 137]
[111 136]
[112 135]
[114 134]
[115 133]
[116 132]
[117 131]
[118 128]
[119 127]
[120 126]
[170 194]
[171 193]
[173 191]
[174 190]
[175 189]
[176 188]
[177 187]
[178 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
