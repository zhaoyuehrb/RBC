%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:19:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCACCCCCGCCCAGCCCGUGCCUAUAAGGCCUUGGCAAUGCAGGGGCCCGCACUGCUCCCAGACGACAUCAGAGAUGAGGACAGCAUUGCUGCUCCUUGCAGCCCUGGCUGUGGCUACAGGGCCAGCCCUUACCCUGCGCUGCCACGUGUGCACCAGCUCCAGCAACUGCAAGC\
) } def
/len { sequence length } bind def

/coor [
[81.17159271 122.39065552]
[68.89704895 131.01246643]
[68.51954651 146.41258240]
[59.25464630 158.49624634]
[44.82169342 162.75698853]
[30.81504631 157.76179504]
[18.54050636 166.38360596]
[6.26596403 175.00541687]
[-6.00857782 183.62722778]
[-12.85399437 197.89085388]
[-27.71605873 198.87487793]
[-39.99060059 207.49668884]
[-40.36810303 222.89680481]
[-49.63300323 234.98046875]
[-64.06595612 239.24121094]
[-78.07260132 234.24601746]
[-90.34714508 242.86782837]
[-102.62168121 251.48963928]
[-102.99918365 266.88977051]
[-112.26408386 278.97341919]
[-126.69703674 283.23416138]
[-140.70368958 278.23898315]
[-152.97822571 286.86077881]
[-165.25276184 295.48260498]
[-177.52731323 304.10440063]
[-187.01315308 318.15628052]
[-203.14181519 312.93109131]
[-202.58569336 295.98626709]
[-186.14912415 291.82986450]
[-173.87457275 283.20806885]
[-161.60003662 274.58624268]
[-149.32550049 265.96444702]
[-149.27287292 251.09381104]
[-140.36857605 238.96214294]
[-125.85845184 234.34590149]
[-111.24349213 239.21510315]
[-98.96895599 230.59329224]
[-86.69441223 221.97148132]
[-86.64178467 207.10086060]
[-77.73749542 194.96917725]
[-63.22737122 190.35293579]
[-48.61241150 195.22213745]
[-36.33787155 186.60032654]
[-30.37041092 172.95339966]
[-14.63038921 171.35269165]
[-2.35584712 162.73088074]
[9.91869450 154.10906982]
[22.19323540 145.48725891]
[22.24586296 130.61663818]
[31.15015411 118.48496246]
[45.66027832 113.86872101]
[60.27523804 118.73792267]
[72.54978180 110.11611176]
[60.30052948 99.03672791]
[53.82411575 80.38993835]
[40.96889114 72.66056061]
[28.11366844 64.93119049]
[11.71642876 65.18128967]
[3.53459597 50.96898270]
[11.98493958 36.91466904]
[28.37446976 37.47622299]
[35.84304428 52.07596588]
[48.69826508 59.80533981]
[61.55348969 67.53471375]
[66.92691803 62.30247498]
[56.46261978 51.55545044]
[67.20981598 41.09133530]
[77.67376709 51.83800507]
[83.04719543 46.60576630]
[75.66277313 33.54933929]
[68.27835083 20.49291229]
[60.89392471 7.43648338]
[47.83349609 -3.37376738]
[54.60579300 -18.91636467]
[71.41573334 -16.71135330]
[73.95035553 0.05206123]
[81.33477783 13.10848904]
[88.71920013 26.16491699]
[96.10362244 39.22134399]
[110.67507172 35.66144562]
[111.20742798 20.67089462]
[111.73979187 5.68034410]
[112.27215576 -9.31020641]
[112.67146301 -24.30488968]
[112.93768311 -39.30252838]
[113.20390320 -54.30016327]
[113.47013092 -69.29780579]
[107.70585632 -85.24175262]
[121.43099976 -95.19448090]
[134.79426575 -84.76090240]
[128.46777344 -69.03157806]
[128.20153809 -54.03394318]
[127.93531799 -39.03630447]
[127.66909790 -24.03866768]
[130.70367432 -17.27390289]
[127.26270294 -8.77784443]
[126.73033905 6.21270561]
[126.19798279 21.20325470]
[125.66561890 36.19380569]
[135.34138489 47.65589905]
[150.20867920 49.64678192]
[165.07597351 51.63766479]
[179.94325256 53.62854767]
[194.81054688 55.61943054]
[205.51408386 32.78255081]
[233.99018860 21.80155182]
[267.30078125 35.13288879]
[280.15600586 27.40351486]
[293.01123047 19.67414093]
[305.86645508 11.94476700]
[318.72167969 4.21539259]
[331.57690430 -3.51398158]
[339.41687012 -17.25607681]
[354.31130981 -17.18335152]
[367.16653442 -24.91272545]
[374.63510132 -39.51246643]
[391.02462769 -40.07402039]
[399.47497559 -26.01970482]
[391.29315186 -11.80739880]
[374.89590454 -12.05750179]
[362.04067993 -4.32812786]
[355.12017822 8.86111069]
[339.30627441 9.34124184]
[326.45104980 17.07061577]
[313.59582520 24.79998970]
[300.74060059 32.52936554]
[287.88537598 40.25873947]
[275.03015137 47.98811340]
[275.22979736 55.48545456]
[290.21697998 54.86541367]
[305.20416260 54.24537277]
[319.46524048 49.59547424]
[328.50042725 61.56900406]
[320.11630249 74.00710297]
[305.62698364 70.12316132]
[290.62805176 70.30165100]
[275.62911987 70.48014069]
[275.82876587 77.97747803]
[289.07714844 85.01171875]
[302.32553101 92.04595184]
[315.57391357 99.08019257]
[328.82226562 106.11442566]
[342.70529175 99.18319702]
[358.00537109 101.76913452]
[368.83932495 112.87789917]
[371.04132080 128.23793030]
[363.76458740 141.94300842]
[349.80722046 148.72323608]
[334.53610229 145.97146606]
[323.82327271 134.74583435]
[321.78805542 119.36280823]
[308.53967285 112.32856750]
[295.29129028 105.29433441]
[282.04290771 98.26009369]
[268.79452515 91.22586060]
[263.56228638 96.59928894]
[267.63714600 111.03520203]
[253.09782410 107.34613800]
[247.86558533 112.71955872]
[255.25001526 125.77599335]
[269.64575195 133.63056946]
[269.77081299 150.02923584]
[255.49652100 158.10244751]
[241.50706482 149.54518127]
[242.19357300 133.16041565]
[234.80915833 120.10398102]
[207.65708923 110.74002075]
[193.08282471 90.96679688]
[192.81967163 70.48672485]
[177.95237732 68.49584198]
[163.08508301 66.50495911]
[148.21778870 64.51407623]
[133.35049438 62.52319336]
[144.86773682 89.92544556]
[138.47254944 116.34943390]
[119.54274750 132.14558411]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 53]
[2 52]
[6 48]
[7 47]
[8 46]
[9 45]
[11 43]
[12 42]
[16 38]
[17 37]
[18 36]
[22 32]
[23 31]
[24 30]
[25 29]
[55 64]
[56 63]
[57 62]
[69 79]
[70 78]
[71 77]
[72 76]
[80 99]
[81 98]
[82 97]
[83 96]
[84 94]
[85 93]
[86 92]
[87 91]
[100 173]
[101 172]
[102 171]
[103 170]
[104 169]
[107 128]
[108 127]
[109 126]
[110 125]
[111 124]
[112 123]
[114 121]
[115 120]
[138 155]
[139 154]
[140 153]
[141 152]
[142 151]
[159 166]
[160 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
