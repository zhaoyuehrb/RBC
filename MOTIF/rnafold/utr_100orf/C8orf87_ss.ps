%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:33:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCAAAGCAACAAGAAGCUAGGGCAGAGGAUUUAGAGGGCAAGCAAGCAUGGGCCAGGACUUUGACAGCAUUCAUCCAGCAGCAUGCGAACUCCAAAGAGAACCCGAUCUCCAAAGACAAAAGUGAGCCUGAGGGGAGAAACCUUGACUCUCCAGUUGACCACUGUGUCUCUCGACACACGGC\
) } def
/len { sequence length } bind def

/coor [
[94.21930695 231.29566956]
[80.27513123 225.76756287]
[71.21916199 213.80975342]
[69.67705536 198.88923645]
[76.09592438 185.33201599]
[88.61470795 177.06884766]
[103.60374451 176.49549866]
[116.71542358 183.77651978]
[112.17771149 169.47933960]
[107.63999176 155.18217468]
[103.10227203 140.88499451]
[95.93457794 138.67724609]
[99.27842712 153.29978943]
[88.28692627 163.50698853]
[73.95145416 159.09175110]
[70.60733795 144.46926880]
[81.59918976 134.26174927]
[74.43149567 132.05400085]
[62.63590240 141.32028198]
[50.84031296 150.58656311]
[39.04471970 159.85284424]
[27.24912643 169.11912537]
[27.96639824 184.61961365]
[19.40762329 197.56283569]
[4.86382246 202.97186279]
[-10.07261276 198.76679993]
[-19.65832138 186.56459045]
[-20.20739937 171.05723572]
[-11.50871849 158.20762634]
[3.09290338 152.95669556]
[17.98284340 157.32353210]
[29.77843666 148.05725098]
[41.57402802 138.79096985]
[53.36962128 129.52468872]
[65.16521454 120.25840759]
[66.12090302 91.38975525]
[84.61428070 74.69528961]
[80.32131958 60.32272720]
[76.02836609 45.95016861]
[71.73540497 31.57760811]
[58.11029053 24.02816582]
[53.96136093 9.39119148]
[61.24256516 -3.55174637]
[56.94960403 -17.92430687]
[44.93070602 -15.65479374]
[31.22692490 -20.52699471]
[20.02608299 -33.21495056]
[8.72038651 -43.07300568]
[-2.58530855 -52.93106079]
[-13.89100361 -62.78911591]
[-25.19669914 -72.64717102]
[-43.33536148 -75.75592804]
[-48.39457321 -92.54923248]
[-59.86692810 -102.21282959]
[-72.77680206 -101.89548492]
[-82.13598633 -110.20039368]
[-83.27961731 -122.25778961]
[-94.58531952 -132.11584473]
[-105.89101410 -141.97389221]
[-111.06109619 -142.98266602]
[-114.92837524 -145.62121582]
[-117.08850861 -149.11401367]
[-117.50646973 -152.63778687]
[-128.29261780 -163.06175232]
[-139.07875061 -173.48573303]
[-154.87446594 -172.96533203]
[-166.35444641 -183.82746887]
[-166.70779419 -199.62780762]
[-155.72491455 -210.99229431]
[-139.92172241 -211.17857361]
[-128.67398071 -200.07614136]
[-128.65478516 -184.27186584]
[-117.86864471 -173.84790039]
[-107.08249664 -163.42393494]
[-96.03295898 -153.27958679]
[-84.72726440 -143.42153931]
[-73.42156219 -133.56347656]
[-56.05177689 -131.13427734]
[-50.20333099 -113.68518066]
[-38.73097610 -104.02158356]
[-26.64061546 -104.73693848]
[-17.00103569 -96.75919342]
[-15.33864403 -83.95286560]
[-4.03294897 -74.09481049]
[7.27274656 -64.23675537]
[18.57844162 -54.37870407]
[29.88413811 -44.52064896]
[37.21397400 -46.10919952]
[32.01849747 -60.18069458]
[26.82301903 -74.25218964]
[19.27922630 -87.21719360]
[25.32949829 -100.94287109]
[39.98902130 -104.12065125]
[51.17983627 -94.13237762]
[49.68100739 -79.20606995]
[50.77732849 -64.24618530]
[51.87364578 -49.28630066]
[59.20348358 -50.87485504]
[65.41352081 -64.52899170]
[71.62355804 -78.18312836]
[77.83360291 -91.83725739]
[72.05359650 -106.54668427]
[78.44414520 -121.00131226]
[93.21385193 -126.62548065]
[107.60011292 -120.08246613]
[113.06781006 -105.25411987]
[106.37306213 -90.93784332]
[91.48773956 -85.62722015]
[85.27769470 -71.97308350]
[79.06765747 -58.31895065]
[72.85762024 -44.66481400]
[81.97650909 -56.57471848]
[95.46659088 -63.13351440]
[110.46546173 -62.94952774]
[123.79059601 -56.06179428]
[132.61459351 -43.93178940]
[135.06513977 -29.13331795]
[130.62226868 -14.80638790]
[120.22869110 -3.99096036]
[106.08975983 1.01809537]
[91.20555115 -0.84206659]
[78.73426056 -9.17674828]
[71.32216644 -22.21726799]
[75.61512756 -7.84470701]
[88.80211639 -1.01544464]
[93.36053467 13.49922085]
[86.10796356 27.28464699]
[90.40092468 41.65720749]
[94.69388580 56.02976608]
[98.98684692 70.40232849]
[113.47434235 73.62784576]
[124.57744598 83.47734833]
[129.50733948 97.47691345]
[144.28923035 100.02557373]
[159.07112122 102.57422638]
[173.85301208 105.12288666]
[188.63490295 107.67153931]
[203.41679382 110.22019196]
[213.76530457 98.77851868]
[228.66281128 94.77005005]
[243.35557556 99.47388458]
[253.15519714 111.38903809]
[254.93466187 126.71343231]
[248.12611389 140.55711365]
[234.90217590 148.50259399]
[219.48252869 148.01452637]
[206.78755188 139.24864197]
[200.86814880 125.00209045]
[186.08624268 122.45343018]
[171.30435181 119.90477753]
[156.52246094 117.35611725]
[141.74057007 114.80746460]
[126.95867920 112.25881195]
[124.95979309 124.47321320]
[117.39944458 136.34727478]
[121.93716431 150.64445496]
[126.47488403 164.94161987]
[131.01260376 179.23880005]
[139.54296875 187.65243530]
[138.51576233 198.26553345]
[144.95802307 211.81164551]
[156.84094238 216.86749268]
[161.92211914 228.30198669]
[157.97135925 239.75100708]
[164.18139648 253.40513611]
[170.39143372 267.05926514]
[176.60147095 280.71340942]
[182.81152344 294.36755371]
[189.02156067 308.02166748]
[202.67240906 317.10937500]
[201.35775757 333.45574951]
[186.43000793 340.24505615]
[173.24555969 330.49301147]
[175.36741638 314.23171997]
[169.15737915 300.57757568]
[162.94734192 286.92346191]
[156.73730469 273.26931763]
[150.52726746 259.61517334]
[144.31723022 245.96104431]
[129.51162720 236.55865479]
[131.41189575 218.25389099]
[124.96965027 204.70777893]
[120.35548401 218.98046875]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 158]
[9 157]
[10 156]
[11 155]
[18 35]
[19 34]
[20 33]
[21 32]
[22 31]
[37 130]
[38 129]
[39 128]
[40 127]
[43 124]
[44 123]
[47 87]
[48 86]
[49 85]
[50 84]
[51 83]
[53 80]
[54 79]
[57 77]
[58 76]
[59 75]
[63 74]
[64 73]
[65 72]
[98 111]
[99 110]
[100 109]
[101 108]
[133 153]
[134 152]
[135 151]
[136 150]
[137 149]
[138 148]
[160 182]
[161 181]
[164 179]
[165 178]
[166 177]
[167 176]
[168 175]
[169 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
