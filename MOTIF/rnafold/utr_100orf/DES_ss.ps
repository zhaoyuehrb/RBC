%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:03:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCUCCCCUCGCCGCAUCCACUCUCCGGCCGGCCGCCUGCCCGCCGCCUCCUCCGUGCGCCCGCCAGCCUCGCCCGCGCCGUCACCAUGAGCCAGGCCUACUCGUCCAGCCAGCGCGUGUCCUCCUACCGCCGCACCUUCGGCGGGGCCCCGGGCUUCCCACUCGGCUCCCCGCUGAGUUCGCCCG\
) } def
/len { sequence length } bind def

/coor [
[173.74354553 264.26983643]
[164.39259338 259.57232666]
[157.11843872 251.99629211]
[152.77331543 242.39237976]
[151.87852478 231.85087585]
[154.56207275 221.57789612]
[160.54112244 212.75740051]
[152.64463806 200.00413513]
[144.74815369 187.25088501]
[136.85166931 174.49761963]
[128.95518494 161.74436951]
[121.05870056 148.99111938]
[113.16222382 136.23785400]
[105.26573944 123.48459625]
[106.08131409 138.46240234]
[113.24341583 151.64210510]
[113.70899200 166.63487244]
[107.37844849 180.23355103]
[95.60597229 189.52920532]
[80.90987396 192.53332520]
[66.43386078 188.60330200]
[55.27455902 178.57983398]
[49.81909943 164.60708618]
[51.23448563 149.67401123]
[59.21794891 136.97502136]
[72.06338501 129.22607422]
[81.83630371 117.84670258]
[67.80419922 123.14765167]
[53.77209473 128.44859314]
[43.59672928 140.56356812]
[28.95636749 137.82328796]
[14.92426205 143.12423706]
[0.89215589 148.42518616]
[-6.99487495 162.39566040]
[-22.85713005 164.79742432]
[-34.52644348 153.78802490]
[-33.05111694 137.81295776]
[-19.56289673 129.12690735]
[-4.40878820 134.39308167]
[9.62331772 129.09213257]
[23.65542412 123.79119110]
[32.82711792 112.05537415]
[48.47114944 114.41648865]
[62.50325775 109.11554718]
[76.53536224 103.81459808]
[80.03091431 89.22758484]
[69.92548370 78.14244843]
[59.82004547 67.05731201]
[49.71461105 55.97217941]
[32.04890442 50.80989838]
[28.94449043 33.54670334]
[18.65426064 22.63289833]
[8.36403084 11.71909142]
[-11.17913628 6.83267212]
[-14.85964966 -12.13766670]
[-25.51070595 -22.69962692]
[-36.16176224 -33.26158905]
[-46.90116119 -43.73370743]
[-57.72814560 -54.11524963]
[-70.62976074 -54.62850952]
[-79.43515778 -63.51573944]
[-79.80356598 -75.61976624]
[-90.45462799 -86.18172455]
[-101.10568237 -96.74369049]
[-116.68217468 -96.84696198]
[-127.33339691 -107.71002197]
[-127.13894653 -122.55918884]
[-137.79000854 -133.12115479]
[-153.29431152 -139.98063660]
[-150.99491882 -156.77793884]
[-134.21752930 -159.21835327]
[-127.22804260 -143.77220154]
[-116.57698822 -133.21025085]
[-101.72998047 -133.52941895]
[-90.77783203 -122.96981812]
[-90.54372406 -107.39474487]
[-79.89266205 -96.83278656]
[-69.24160767 -86.27082062]
[-52.06211853 -82.73240662]
[-47.34660339 -64.94223785]
[-36.51961899 -54.56069183]
[-29.50094986 -52.19574356]
[-25.59980011 -43.91264343]
[-14.94874477 -33.35068130]
[-4.29768896 -22.78872299]
[5.90092278 -23.74944496]
[15.13317680 -18.82478905]
[20.22557831 -9.43313885]
[19.27783775 1.42886198]
[29.56806755 12.34266853]
[39.85829544 23.25647545]
[51.94919586 23.92975807]
[60.61173248 32.95629883]
[60.79974747 45.86674500]
[70.90518188 56.95188141]
[81.01061249 68.03701019]
[91.11605072 79.12214661]
[87.56219482 64.54922485]
[78.68913269 52.45506287]
[76.88093567 37.56444550]
[82.60157013 23.69814301]
[94.38318634 14.41409397]
[109.20275116 12.09448147]
[123.25772095 17.33449173]
[132.94175720 28.78959656]
[135.77003479 43.52054596]
[131.01686096 57.74753571]
[119.90175629 67.82012939]
[113.50183868 81.38630676]
[125.62226868 72.54914856]
[128.39161682 59.93781662]
[138.68615723 52.82864380]
[150.66700745 54.59003830]
[162.93417358 45.95774460]
[175.20135498 37.32545090]
[180.43260193 29.81128311]
[187.74789429 28.65322304]
[200.15835571 20.22822571]
[212.56880188 11.80322838]
[215.29151917 -3.76476407]
[228.27282715 -12.77925301]
[243.81117249 -9.89210224]
[252.68791199 3.18379378]
[249.63664246 18.69073677]
[236.46762085 27.42873383]
[220.99380493 24.21368599]
[208.58334351 32.63868332]
[196.17289734 41.06367874]
[183.83364868 49.59262466]
[171.56646729 58.22491837]
[159.29930115 66.85720825]
[152.80102539 83.14916992]
[134.45942688 84.66957855]
[122.33899689 93.50672913]
[136.61317444 88.89718628]
[149.64393616 96.32679749]
[152.94755554 110.95848083]
[144.37318420 123.26621246]
[129.50320435 125.23698425]
[118.01899719 115.58811188]
[125.91548157 128.34136963]
[133.81196594 141.09463501]
[141.70845032 153.84788513]
[149.60491943 166.60115051]
[157.50140381 179.35440063]
[165.39788818 192.10765076]
[173.29437256 204.86091614]
[193.25906372 205.25721741]
[208.83949280 217.51589966]
[213.84893799 236.54879761]
[206.43135071 254.62327576]
[215.16638184 266.81750488]
[223.90141296 279.01174927]
[232.63644409 291.20596313]
[241.37147522 303.40020752]
[252.03521729 302.45870972]
[262.04766846 306.01223755]
[269.61590576 313.35302734]
[273.41442871 323.10174561]
[272.81716919 333.46627808]
[267.99963379 342.57116699]
[276.10925293 355.18997192]
[284.21884155 367.80874634]
[292.32846069 380.42755127]
[300.43807983 393.04635620]
[308.54769897 405.66516113]
[316.65728760 418.28396606]
[331.96499634 423.08544922]
[337.62060547 438.09857178]
[329.28567505 451.80651855]
[313.35400391 453.69375610]
[302.04702759 442.31256104]
[304.03851318 426.39358521]
[295.92889404 413.77478027]
[287.81927490 401.15597534]
[279.70965576 388.53717041]
[271.60003662 375.91836548]
[263.49044800 363.29956055]
[255.38082886 350.68075562]
[236.10649109 347.97348022]
[224.83663940 331.73269653]
[229.17724609 312.13522339]
[220.44221497 299.94100952]
[211.70718384 287.74676514]
[202.97215271 275.55255127]
[194.23712158 263.35830688]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 147]
[8 146]
[9 145]
[10 144]
[11 143]
[12 142]
[13 141]
[14 140]
[27 45]
[28 44]
[29 43]
[31 41]
[32 40]
[33 39]
[46 97]
[47 96]
[48 95]
[49 94]
[51 91]
[52 90]
[53 89]
[55 85]
[56 84]
[57 83]
[58 81]
[59 80]
[62 78]
[63 77]
[64 76]
[67 73]
[68 72]
[109 134]
[110 133]
[113 131]
[114 130]
[115 129]
[117 128]
[118 127]
[119 126]
[151 186]
[152 185]
[153 184]
[154 183]
[155 182]
[161 179]
[162 178]
[163 177]
[164 176]
[165 175]
[166 174]
[167 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
