%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:11:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAUAGGGCCGGUGCUGCCUGCCGAAGCCGGCGGCUGAGAGGCAGCGAACUCAUCUUUGCCAGUACAGGAGCUUGUGCCGUGGCCCACAGCCCACAGCCCACAGCCAUGGGCUGGGACCUGACGGUGAAGAUGCUGGCGGGCAACGAAUUCCAGGUGUCCCUGAGCAGCUCCAUGUCGGUGUCAGAGCUGAAGGCGCAGAUCACCC\
) } def
/len { sequence length } bind def

/coor [
[118.69538879 352.55477905]
[104.47853088 347.77139282]
[95.02066040 336.12884521]
[93.25141907 321.23355103]
[99.71884918 307.69943237]
[112.41960907 299.71878052]
[127.41954803 299.76370239]
[140.07144165 307.81924438]
[135.17840576 293.63977051]
[130.28535461 279.46026611]
[116.43269348 268.68829346]
[120.08132935 250.64031982]
[114.97468567 236.53633118]
[103.36666870 227.20343018]
[105.94361115 211.59350586]
[100.83697510 197.48951721]
[95.73033142 183.38554382]
[90.62369537 169.28157043]
[85.51705170 155.17758179]
[70.95292664 151.58784485]
[59.87677383 161.70312500]
[48.80062103 171.81840515]
[37.72447205 181.93368530]
[26.64832115 192.04896545]
[15.57216930 202.16424561]
[11.13307762 217.95115662]
[-4.82297754 221.73748779]
[-15.88177490 209.62818909]
[-10.66697121 194.08027649]
[5.45689011 191.08808899]
[16.53304100 180.97282410]
[27.60919189 170.85754395]
[38.68534470 160.74226379]
[49.76149368 150.62698364]
[60.83764648 140.51170349]
[58.12522507 133.51936340]
[44.14055252 138.94419861]
[30.15579224 144.36882019]
[24.73138618 130.38397217]
[38.71571350 124.95952606]
[52.70038986 119.53469086]
[49.98796844 112.54235077]
[34.98796844 112.54235077]
[19.98797035 112.54235077]
[4.98796940 112.54235077]
[-10.01203060 112.54235077]
[-23.81220245 120.27964783]
[-36.53947449 112.54235077]
[-51.53947449 112.54235077]
[-63.85470200 122.82411957]
[-79.54219055 119.46523285]
[-86.56785583 105.04235077]
[-79.54219055 90.61946106]
[-63.85470200 87.26058197]
[-51.53947449 97.54235077]
[-36.53947449 97.54235077]
[-23.81220245 89.80504608]
[-10.01203060 97.54235077]
[4.98796940 97.54235077]
[19.98797035 97.54235077]
[34.98796844 97.54235077]
[49.98796844 97.54235077]
[58.24945450 83.36558533]
[69.78695679 74.07342529]
[57.31491089 65.73987579]
[44.84286499 57.40632248]
[32.37082291 49.07276917]
[19.89877701 40.73921585]
[7.42673302 32.40566254]
[-8.96378136 31.87361526]
[-16.45862770 17.28734398]
[-7.34774876 3.65195107]
[8.99636269 4.99436045]
[15.76028633 19.93361664]
[28.23233032 28.26716995]
[40.70437622 36.60072327]
[53.17641830 44.93427658]
[65.64846039 53.26782990]
[78.12050629 61.60138321]
[92.22448730 56.49474335]
[96.47023010 42.10816574]
[100.71598053 27.72158813]
[97.20122528 12.29572868]
[108.22456360 2.27897668]
[112.47031403 -12.10760212]
[116.71605682 -26.49418068]
[120.96180725 -40.88076019]
[116.23011780 -58.67549896]
[129.40711975 -70.26422882]
[133.43508911 -84.71328735]
[137.46307373 -99.16235352]
[141.49104309 -113.61141205]
[122.95387268 -142.93070984]
[123.40692139 -157.92385864]
[120.53761292 -166.59846497]
[123.98173523 -173.13957214]
[124.66117096 -188.12417603]
[125.34060669 -203.10877991]
[126.02005005 -218.09338379]
[126.69948578 -233.07798767]
[127.37892914 -248.06259155]
[128.05836487 -263.04718018]
[117.21697998 -274.54675293]
[117.76589203 -290.34152222]
[129.37944031 -301.06069946]
[145.16749573 -300.34484863]
[155.76332092 -288.61862183]
[154.88056946 -272.83898926]
[143.04296875 -262.36773682]
[142.36352539 -247.38314819]
[141.68409729 -232.39854431]
[141.00465393 -217.41394043]
[140.32521057 -202.42933655]
[139.64576721 -187.44473267]
[138.96633911 -172.46012878]
[138.40007019 -157.47082520]
[137.94703674 -142.47766113]
[152.30113220 -138.12339783]
[160.25419617 -150.84144592]
[168.20726013 -163.55949402]
[168.24401855 -179.95860291]
[182.59725952 -187.89057922]
[196.50161743 -179.19569397]
[195.65345764 -162.81848145]
[180.92530823 -155.60644531]
[172.97224426 -142.88838196]
[165.01919556 -130.17033386]
[179.66151428 -133.42645264]
[192.70735168 -126.02334595]
[197.42111206 -111.78324127]
[191.36906433 -98.05834961]
[177.67590332 -91.93485260]
[163.41143799 -96.57433319]
[155.94010925 -109.58343506]
[151.91213989 -95.13437653]
[147.88415527 -80.68531036]
[143.85617065 -66.23625183]
[149.52388000 -55.54796982]
[146.28460693 -43.47616196]
[135.34838867 -36.63501358]
[131.10263062 -22.24843407]
[126.85688782 -7.86185551]
[122.61114502 6.52472305]
[126.42958069 20.92155647]
[115.10255432 31.96733284]
[110.85681152 46.35391235]
[106.61106110 60.74048996]
[114.34253693 63.78235626]
[121.10943604 68.28720856]
[126.64864349 73.99008942]
[130.76420593 80.58202362]
[133.33389282 87.72617340]
[134.31196594 95.07470703]
[149.26921082 96.20641327]
[164.22645569 97.33812714]
[179.18371582 98.46983337]
[193.72148132 90.88134003]
[207.41517639 99.90433502]
[206.17791748 116.25674438]
[191.28247070 123.11660767]
[178.05200195 113.42707825]
[163.09475708 112.29537201]
[148.13751221 111.16366577]
[133.18025208 110.03195190]
[125.12525940 134.11407471]
[99.62103271 150.07095337]
[104.72766876 164.17492676]
[109.83431244 178.27890015]
[114.94094849 192.38288879]
[120.04759216 206.48686218]
[132.02087402 216.82858276]
[129.07865906 231.42970276]
[134.18530273 245.53367615]
[145.51463318 251.70202637]
[149.47686768 263.55624390]
[144.46485901 274.56723022]
[149.35789490 288.74670410]
[154.25094604 302.92620850]
[160.09568787 316.74066162]
[166.86514282 330.12628174]
[173.63459778 343.51187134]
[180.40403748 356.89749146]
[187.27438354 370.23159790]
[194.24523926 383.51342773]
[209.46878052 385.86923218]
[220.25994873 396.61187744]
[222.62825012 411.47308350]
[215.87242126 424.72058105]
[222.84327698 438.00244141]
[229.81411743 451.28427124]
[242.52870178 462.49926758]
[235.27175903 477.82156372]
[218.53932190 475.08984375]
[216.53228760 458.25512695]
[209.56143188 444.97329712]
[202.59059143 431.69143677]
[187.85034180 429.72592163]
[176.96516418 419.33471680]
[174.25424194 404.35125732]
[180.96339417 390.48428345]
[173.99255371 377.20242310]
[168.09922791 372.73962402]
[167.01843262 363.66693115]
[160.24897766 350.28134155]
[153.47952271 336.89572144]
[146.71008301 323.51010132]
[143.68089294 338.20108032]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 178]
[9 177]
[10 176]
[12 173]
[13 172]
[15 170]
[16 169]
[17 168]
[18 167]
[19 166]
[20 35]
[21 34]
[22 33]
[23 32]
[24 31]
[25 30]
[42 62]
[43 61]
[44 60]
[45 59]
[46 58]
[48 56]
[49 55]
[64 79]
[65 78]
[66 77]
[67 76]
[68 75]
[69 74]
[80 147]
[81 146]
[82 145]
[84 143]
[85 142]
[86 141]
[87 140]
[89 137]
[90 136]
[91 135]
[92 134]
[93 117]
[94 116]
[96 115]
[97 114]
[98 113]
[99 112]
[100 111]
[101 110]
[102 109]
[118 127]
[119 126]
[120 125]
[153 164]
[154 163]
[155 162]
[156 161]
[179 206]
[180 205]
[181 204]
[182 203]
[183 201]
[184 200]
[188 196]
[189 195]
[190 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
