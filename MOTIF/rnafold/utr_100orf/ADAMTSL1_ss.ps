%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:20:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACCCACCCCUCGGUCAGGAAAUGUGAGAGGGGCUGAUGGAAGCUGAUAGGCAGGACUGGAGUGUUAGCACCAGUACUGGAUGUGACAGCAGGCAGAGGAGCACUUAGCAGCUUAUUCAGUGUCCGAUUCUGAUUCCGGCAAGGAUCCAAGCAUGGAAUGCUGCCGUCGGGCAACUCCUGGCACACUGCUCCUCUUUCUGGCUUUCCUGCUCCUGAGUUCCAGGACCGCACGCUCCGAGGAGGACCGGGACG\
) } def
/len { sequence length } bind def

/coor [
[157.97369385 539.29803467]
[157.94454956 523.49377441]
[169.15826416 512.35693359]
[168.97200012 497.35812378]
[168.78575134 482.35928345]
[157.73570251 466.47271729]
[167.93789673 449.06628418]
[167.37924194 434.07669067]
[166.72753906 419.09085083]
[165.98280334 404.10934448]
[165.23806763 389.12786865]
[164.49333191 374.14636230]
[163.74859619 359.16485596]
[163.00386047 344.18334961]
[154.09066772 317.76150513]
[167.53610229 300.74844360]
[162.42524719 286.64599609]
[157.31440735 272.54351807]
[152.20355225 258.44107056]
[147.09269714 244.33862305]
[141.98185730 230.23616028]
[136.87100220 216.13371277]
[131.65138245 210.93011475]
[131.78543091 201.82429504]
[126.85009003 187.65946960]
[115.35601807 178.18656921]
[118.12194824 162.60902405]
[113.18660736 148.44418335]
[108.25125885 134.27935791]
[103.31591797 120.11453247]
[100.85610962 134.91146851]
[102.13413239 149.85691833]
[96.60467529 163.80056763]
[85.43126678 173.80830383]
[70.96506500 177.77429199]
[56.25010300 174.86396790]
[44.38277054 165.68974304]
[37.86023712 152.18209839]
[38.05500031 137.18336487]
[44.92607880 123.84963226]
[57.02762985 114.98664856]
[71.81449890 112.45948029]
[85.51519012 106.35283661]
[70.56401825 105.14346313]
[55.61285400 103.93408203]
[40.66168594 102.72470093]
[25.69665527 101.70106506]
[10.72006702 100.86333466]
[-4.25652170 100.02559662]
[-15.98072052 110.28137207]
[-31.15717697 109.21843719]
[-40.86223984 97.97800446]
[-55.83882523 97.14026642]
[-70.81541443 96.30253601]
[-85.02616882 103.25703430]
[-97.30145264 94.82099915]
[-112.27804565 93.98326874]
[-127.25463104 93.14553070]
[-142.23121643 92.30779266]
[-157.20780945 91.47005463]
[-171.41856384 98.42455292]
[-183.69384766 89.98852539]
[-198.67044067 89.15078735]
[-213.05636597 97.02333832]
[-226.92463684 88.27101898]
[-226.00875854 71.89746857]
[-211.25091553 64.74639130]
[-197.83270264 74.17420197]
[-182.85610962 75.01194000]
[-169.71658325 67.99752045]
[-156.37007141 76.49346924]
[-141.39347839 77.33120728]
[-126.41689301 78.16893768]
[-111.44030762 79.00667572]
[-96.46372223 79.84441376]
[-83.32418823 72.82999420]
[-69.97767639 81.32594299]
[-55.00109100 82.16368103]
[-40.02450180 83.00141907]
[-29.12640762 72.91344452]
[-13.92608356 73.54968262]
[-3.41878557 85.04901123]
[11.55780315 85.88674164]
[26.53439140 86.72447968]
[30.61112213 84.28396606]
[36.25976562 84.36009216]
[41.87106705 87.77353668]
[56.82223129 88.98291779]
[71.77339935 90.19229126]
[86.72456360 91.40167236]
[75.44812012 81.51016998]
[76.98101044 66.58869934]
[90.03301239 59.19646072]
[103.61843872 65.55539703]
[106.30259705 80.31336212]
[112.95432281 66.86886597]
[119.60605621 53.42436600]
[126.25778198 39.97986603]
[132.90950012 26.53536797]
[139.56123352 13.09086990]
[146.21295166 -0.35362831]
[152.86468506 -13.79812717]
[159.51640320 -27.24262619]
[148.82734680 -41.47619629]
[146.26519775 -59.01255417]
[152.38125610 -75.56346130]
[165.61392212 -87.11759186]
[182.68649292 -90.91269684]
[186.19270325 -105.49716187]
[189.69891357 -120.08161926]
[193.20512390 -134.66607666]
[196.71131897 -149.25054932]
[195.21481323 -155.64575195]
[196.90133667 -161.03729248]
[200.48992920 -164.15142822]
[204.35720825 -178.64431763]
[208.22450256 -193.13722229]
[212.09179688 -207.63011169]
[208.17402649 -222.95857239]
[218.93109131 -233.26075745]
[222.79837036 -247.75364685]
[226.66566467 -262.24655151]
[230.53295898 -276.73944092]
[221.49464417 -291.73208618]
[226.01994324 -308.29306030]
[240.83146667 -316.28466797]
[244.51849365 -330.82446289]
[248.20553589 -345.36428833]
[251.89256287 -359.90408325]
[255.57958984 -374.44387817]
[259.26663208 -388.98367310]
[248.20532227 -399.63934326]
[243.96920776 -414.40249634]
[247.69778442 -429.30194092]
[258.38806152 -440.32977295]
[273.16442871 -444.51959229]
[288.05209351 -440.74435425]
[299.04638672 -430.01956177]
[303.18988037 -415.23013306]
[299.36798096 -400.35437012]
[288.60876465 -389.39373779]
[273.80642700 -385.29663086]
[270.11938477 -370.75683594]
[266.43237305 -356.21704102]
[262.74533081 -341.67724609]
[259.05828857 -327.13745117]
[255.37126160 -312.59762573]
[263.44064331 -302.57214355]
[264.28326416 -289.53536987]
[257.36892700 -278.22265625]
[245.02584839 -272.87216187]
[241.15856934 -258.37924194]
[237.29127502 -243.88635254]
[233.42398071 -229.39346313]
[237.61837769 -215.10162354]
[226.58468628 -203.76281738]
[222.71740723 -189.26992798]
[218.85011292 -174.77703857]
[214.98281860 -160.28413391]
[211.29579163 -145.74433899]
[207.78958130 -131.15986633]
[204.28337097 -116.57540894]
[200.77716064 -101.99095154]
[197.27095032 -87.40648651]
[204.88044739 -82.43399811]
[210.96954346 -75.68470001]
[224.83663940 -81.40343475]
[238.70372009 -87.12216949]
[252.57081604 -92.84090424]
[266.43789673 -98.55963898]
[280.30499268 -104.27837372]
[287.77014160 -118.47875214]
[303.55337524 -121.35440063]
[315.54711914 -110.69936371]
[314.55081177 -94.68727875]
[301.32870483 -85.60124207]
[286.02371216 -90.41128540]
[272.15661621 -84.69255066]
[258.28955078 -78.97381592]
[244.42245483 -73.25508118]
[230.55537415 -67.53635406]
[216.68827820 -61.81761551]
[216.52522278 -47.75820923]
[210.87867737 -34.81326675]
[200.59429932 -25.04310989]
[187.26000977 -20.02334595]
[172.96090698 -20.59089851]
[166.30917358 -7.14640093]
[159.65745544 6.29809761]
[153.00572205 19.74259567]
[146.35400391 33.18709564]
[139.70227051 46.63159180]
[133.05055237 60.07609177]
[126.39882660 73.52059174]
[119.74710083 86.96508789]
[117.48074341 115.17918396]
[122.41608429 129.34400940]
[127.35143280 143.50885010]
[132.28677368 157.67367554]
[144.13385010 168.15972900]
[141.01492310 182.72412109]
[145.95025635 196.88894653]
[150.97344971 211.02285767]
[156.08430481 225.12532043]
[161.19515991 239.22776794]
[166.30599976 253.33023071]
[171.41685486 267.43267822]
[176.52770996 281.53512573]
[181.63854980 295.63757324]
[201.03753662 297.71514893]
[214.55575562 318.67782593]
[226.01309204 328.35922241]
[237.47042847 338.04061890]
[248.92778015 347.72198486]
[260.38510132 357.40338135]
[276.42788696 357.49850464]
[286.24243164 370.18920898]
[282.29989624 385.74029541]
[267.62463379 392.22229004]
[253.47425842 384.66275024]
[250.70372009 368.86071777]
[239.24638367 359.17935181]
[227.78904724 349.49795532]
[216.33169556 339.81655884]
[204.87435913 330.13516235]
[198.15211487 333.46102905]
[204.80383301 346.90551758]
[211.45556641 360.35003662]
[221.93629456 371.08102417]
[214.96920776 384.36483765]
[200.18260193 381.84365845]
[198.01106262 367.00173950]
[191.35934448 353.55725098]
[184.70761108 340.11276245]
[177.98536682 343.43862915]
[178.73010254 358.42013550]
[179.47483826 373.40161133]
[180.21957397 388.38311768]
[180.96430969 403.36462402]
[181.70904541 418.34613037]
[185.25253296 426.73526001]
[182.36883545 433.51803589]
[182.92749023 448.50762939]
[191.28961182 455.41015625]
[194.42253113 465.56143188]
[191.52662659 475.55480957]
[183.78459167 482.17303467]
[183.97085571 497.17187500]
[184.15710449 512.17071533]
[195.64392090 523.02557373]
[196.00723267 538.82574463]
[185.03149414 550.19714355]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 249]
[4 248]
[5 247]
[7 243]
[8 242]
[9 240]
[10 239]
[11 238]
[12 237]
[13 236]
[14 235]
[16 209]
[17 208]
[18 207]
[19 206]
[20 205]
[21 204]
[22 203]
[24 202]
[25 201]
[27 199]
[28 198]
[29 197]
[30 196]
[43 90]
[44 89]
[45 88]
[46 87]
[47 84]
[48 83]
[49 82]
[52 79]
[53 78]
[54 77]
[56 75]
[57 74]
[58 73]
[59 72]
[60 71]
[62 69]
[63 68]
[95 195]
[96 194]
[97 193]
[98 192]
[99 191]
[100 190]
[101 189]
[102 188]
[103 187]
[108 164]
[109 163]
[110 162]
[111 161]
[112 160]
[115 159]
[116 158]
[117 157]
[118 156]
[120 154]
[121 153]
[122 152]
[123 151]
[126 147]
[127 146]
[128 145]
[129 144]
[130 143]
[131 142]
[166 182]
[167 181]
[168 180]
[169 179]
[170 178]
[171 177]
[211 225]
[212 224]
[213 223]
[214 222]
[215 221]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
