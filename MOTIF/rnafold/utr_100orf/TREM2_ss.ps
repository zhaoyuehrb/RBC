%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:07:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCAGCGCCUGACAUGCCUGAUCCUCUCUUUUCUGCAGUUCAAGGGAAAGACGAGAUCUUGCACAAGGCACUCUGCUUCUGCCCUUGGCUGGGGAAGGGUGGCAUGGAGCCUCUCCGGCUGCUCAUCUUACUCUUUGUCACAGAGCUGUCCGGAGCCCACAACACCACAGUGUUCCAGGGCGUGGCGGGCCAGUCCCUGCAGG\
) } def
/len { sequence length } bind def

/coor [
[-89.63359070 184.76240540]
[-98.45200348 179.58866882]
[-112.56910706 184.65892029]
[-126.68620300 189.72917175]
[-140.80329895 194.79942322]
[-154.92041016 199.86967468]
[-167.23017883 215.82920837]
[-186.09075928 211.57958984]
[-200.04585266 217.08007812]
[-214.00094604 222.58056641]
[-227.95603943 228.08105469]
[-230.48309326 239.70368958]
[-238.22926331 248.57107544]
[-249.18162537 252.55485535]
[-260.57772827 250.77339172]
[-269.60214233 243.78393555]
[-283.71926880 248.85418701]
[-297.83636475 253.92443848]
[-304.63165283 267.94091797]
[-319.02062988 272.88177490]
[-332.34130859 266.31713867]
[-346.45840454 271.38739014]
[-360.57553101 276.45764160]
[-374.69262695 281.52789307]
[-381.71542358 287.37658691]
[-389.06509399 286.56585693]
[-403.25823975 291.41918945]
[-417.41375732 296.38113403]
[-431.53085327 301.45138550]
[-445.64797974 306.52163696]
[-459.76507568 311.59188843]
[-473.88217163 316.66213989]
[-487.99926758 321.73239136]
[-502.11636353 326.80264282]
[-516.23345947 331.87289429]
[-519.59600830 346.92935181]
[-530.58099365 357.76144409]
[-545.68304443 360.91271973]
[-560.08325195 355.37756348]
[-569.18652344 342.92230225]
[-570.08807373 327.52130127]
[-562.50012207 314.08898926]
[-548.84405518 306.91156006]
[-533.47747803 308.27929688]
[-521.30371094 317.75579834]
[-507.18661499 312.68554688]
[-493.06951904 307.61529541]
[-478.95242310 302.54504395]
[-464.83532715 297.47479248]
[-450.71823120 292.40451050]
[-436.60110474 287.33425903]
[-422.48400879 282.26400757]
[-417.24899292 277.04199219]
[-408.11154175 277.22604370]
[-393.91839600 272.37271118]
[-379.76287842 267.41079712]
[-365.64578247 262.34054565]
[-351.52868652 257.27029419]
[-337.41156006 252.20002747]
[-331.31149292 238.66027832]
[-317.06698608 233.31721497]
[-302.90661621 239.80732727]
[-288.78952026 234.73707581]
[-274.67242432 229.66682434]
[-267.88043213 212.67097473]
[-250.52645874 205.91671753]
[-233.45652771 214.12596130]
[-219.50143433 208.62547302]
[-205.54634094 203.12498474]
[-191.59124756 197.62449646]
[-188.37559509 187.91926575]
[-180.17498779 181.45236206]
[-169.54985046 180.55055237]
[-159.99066162 185.75257874]
[-145.87356567 180.68232727]
[-131.75645447 175.61207581]
[-117.63935852 170.54182434]
[-103.52225494 165.47157288]
[-92.14908600 149.83724976]
[-72.37001801 153.71354675]
[-58.41492081 148.21305847]
[-44.45983124 142.71257019]
[-30.50473595 137.21208191]
[-28.37761307 124.02922821]
[-19.94573212 113.53547668]
[-7.32888508 108.53977966]
[6.21565342 110.44692993]
[17.13393402 118.86454010]
[31.17168045 113.57855225]
[45.20942688 108.29255676]
[59.24716949 103.00656891]
[73.28491211 97.72057343]
[87.32266235 92.43458557]
[97.47297668 81.39053345]
[101.55841064 66.95761108]
[105.64384460 52.52468872]
[101.95770264 37.13888550]
[112.86891937 27.00012016]
[116.95435333 12.56719780]
[121.03977966 -1.86572433]
[125.12521362 -16.29864693]
[129.21064758 -30.73156929]
[133.29608154 -45.16448975]
[137.38151550 -59.59741211]
[136.70787048 -68.71185303]
[141.64172363 -74.21929932]
[145.94784546 -88.58792114]
[150.25396729 -102.95654297]
[154.56008911 -117.32516479]
[158.86622620 -131.69378662]
[157.62139893 -148.60197449]
[173.52421570 -154.47879028]
[183.57369995 -140.82434082]
[173.23484802 -127.38765717]
[168.92871094 -113.01903534]
[164.62258911 -98.65041351]
[160.31646729 -84.28179932]
[156.01033020 -69.91317749]
[151.81443787 -55.51198196]
[147.72900391 -41.07905960]
[143.64356995 -26.64613533]
[139.55813599 -12.21321392]
[135.47270203 2.21970820]
[131.38726807 16.65262985]
[127.30184174 31.08555222]
[131.28019714 45.43901443]
[120.07676697 56.61012268]
[115.99133301 71.04304504]
[111.90589905 85.47596741]
[117.65533447 90.29197693]
[129.15420532 99.92401123]
[134.90364075 104.74002075]
[148.39672852 98.18742371]
[161.88981628 91.63481903]
[175.38290405 85.08221436]
[179.01608276 69.87254333]
[191.60656738 60.59819031]
[207.20951843 61.63821411]
[218.45771790 72.50154877]
[220.04008484 88.05886841]
[211.20950317 100.96446991]
[196.13546753 105.12473297]
[181.93551636 98.57530212]
[168.44242859 105.12790680]
[154.94934082 111.68051147]
[141.45625305 118.23310852]
[141.57118225 133.23266602]
[155.16310120 139.57772827]
[168.75502014 145.92279053]
[177.85964966 146.71813965]
[182.50546265 152.47064209]
[195.99855042 159.02323914]
[209.49163818 165.57583618]
[221.91610718 162.10083008]
[233.02114868 167.84001160]
[237.10159302 179.23072815]
[250.49269104 185.98933411]
[263.88378906 192.74794006]
[277.27487183 199.50654602]
[293.78573608 193.73321533]
[309.06393433 201.53163147]
[313.88027954 217.64279175]
[327.37338257 224.19538879]
[340.86645508 230.74798584]
[354.35955811 237.30058289]
[367.85263062 243.85319519]
[384.16229248 242.14231873]
[393.57852173 255.56866455]
[386.41473389 270.32034302]
[370.04040527 271.22210693]
[361.30004883 257.34628296]
[347.80694580 250.79367065]
[334.31387329 244.24107361]
[320.82077026 237.68847656]
[307.32769775 231.13587952]
[295.85845947 237.01443481]
[282.90438843 235.18499756]
[273.22784424 226.09379578]
[270.51626587 212.89762878]
[257.12518311 206.13902283]
[243.73408508 199.38043213]
[230.34298706 192.62182617]
[212.90252686 194.55212402]
[202.93902588 179.06892395]
[189.44593811 172.51632690]
[175.95285034 165.96372986]
[162.40995789 159.51470947]
[148.81803894 153.16964722]
[135.22612000 146.82458496]
[96.47205353 134.02761841]
[92.60865021 106.47232819]
[78.57090759 111.75831604]
[64.53316498 117.04431152]
[50.49541855 122.33029938]
[36.45767212 127.61629486]
[22.41992569 132.90228271]
[18.16175270 149.26954651]
[5.11758089 159.77078247]
[-11.44934750 160.42301941]
[-25.00424767 151.16717529]
[-38.95933914 156.66766357]
[-52.91443253 162.16815186]
[-66.86952972 167.66864014]
[-70.62331390 177.88374329]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 78]
[3 77]
[4 76]
[5 75]
[6 74]
[8 70]
[9 69]
[10 68]
[11 67]
[16 64]
[17 63]
[18 62]
[21 59]
[22 58]
[23 57]
[24 56]
[26 55]
[27 54]
[28 52]
[29 51]
[30 50]
[31 49]
[32 48]
[33 47]
[34 46]
[35 45]
[80 203]
[81 202]
[82 201]
[83 200]
[88 196]
[89 195]
[90 194]
[91 193]
[92 192]
[93 191]
[94 129]
[95 128]
[96 127]
[98 125]
[99 124]
[100 123]
[101 122]
[102 121]
[103 120]
[104 119]
[106 118]
[107 117]
[108 116]
[109 115]
[110 114]
[132 146]
[133 145]
[134 144]
[135 143]
[147 189]
[148 188]
[149 187]
[151 186]
[152 185]
[153 184]
[156 182]
[157 181]
[158 180]
[159 179]
[162 175]
[163 174]
[164 173]
[165 172]
[166 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
