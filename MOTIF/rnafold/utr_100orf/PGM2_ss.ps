%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:08:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACGUCUUGGGGCCGGGCCGGAAGGCAGAUCUCACCGCCUGCUUCCCUCUGCAGCGGUAGCACAAGCUCAGCGAUGGCGGCUCCAGAAGGCAGCGGUCUAGGCGAGGACGCCCGGCUGGACCAGGAGACCGCCCAGUGGCUGCGCUGGGACAAGAAUUCCUUAACUUUGGAGG\
) } def
/len { sequence length } bind def

/coor [
[183.11233521 519.42889404]
[181.23486328 504.44573975]
[186.06858826 490.07485962]
[196.70552063 479.18374634]
[191.66015625 465.05773926]
[186.61477661 450.93173218]
[181.56939697 436.80569458]
[176.52401733 422.67968750]
[171.47863770 408.55368042]
[166.43325806 394.42767334]
[154.86584473 385.04449463]
[157.51052856 369.44589233]
[152.46514893 355.31988525]
[148.57847595 352.49066162]
[146.44764709 347.17520142]
[147.50268555 340.59179688]
[142.97058105 326.29284668]
[138.43846130 311.99389648]
[133.90635681 297.69494629]
[129.37425232 283.39599609]
[115.20761108 278.87448120]
[106.31468201 266.73446655]
[106.27498627 251.50779724]
[115.31330872 239.03321838]
[110.78120422 224.73426819]
[106.24909973 210.43531799]
[94.07592773 206.15034485]
[86.48899078 195.47085571]
[86.44853210 182.17599487]
[94.19391632 171.13146973]
[89.92070007 156.75302124]
[85.64749146 142.37457275]
[81.37427521 127.99613190]
[69.76839447 118.49332428]
[54.82947159 117.14102936]
[39.89055252 115.78873444]
[24.95163536 114.43643188]
[10.01271629 113.08413696]
[1.14872408 115.43270111]
[-5.18287563 111.57019043]
[-20.09494400 109.94840240]
[-35.00701523 108.32661438]
[-45.33139420 119.91052246]
[-60.49996948 123.18067169]
[-74.68011475 116.87963867]
[-82.41928101 103.43028259]
[-80.74158478 88.00417328]
[-70.29215240 76.53295135]
[-55.08899307 73.42754364]
[-40.97803497 79.88203430]
[-33.38522720 93.41455078]
[-18.47315979 95.03633118]
[-3.56109023 96.65811920]
[11.36501217 98.14521790]
[26.30393028 99.49751282]
[41.24285126 100.84981537]
[56.18177032 102.20211029]
[71.12068939 103.55440521]
[77.04806519 89.77520752]
[65.79281616 79.85959625]
[54.53757095 69.94398499]
[38.36278534 67.24058533]
[32.87081146 51.78839493]
[43.71131897 39.48329544]
[59.73252487 42.98372269]
[64.45318604 58.68873596]
[75.70843506 68.60434723]
[86.96367645 78.51996613]
[92.93437958 73.98115540]
[104.87577057 64.90354156]
[110.84647369 60.36473846]
[104.30338287 46.86703491]
[90.43372345 38.11690903]
[91.34701538 21.74320984]
[106.10373688 14.58980179]
[119.52343750 24.01549339]
[117.80107880 40.32394409]
[124.34416962 53.82164383]
[131.65397644 52.14331055]
[153.58337402 47.10830307]
[153.58337402 32.10830307]
[153.58337402 17.10830307]
[153.44796753 2.10891366]
[153.17715454 -12.88864136]
[144.26347351 -26.65375900]
[151.96749878 -41.13064194]
[168.36396790 -41.42671585]
[176.58561707 -27.23740387]
[168.17471313 -13.15945339]
[168.44552612 1.83810151]
[171.72149658 8.49213600]
[168.58337402 17.10830307]
[168.58337402 32.10830307]
[168.58337402 47.10830307]
[182.46734619 52.78594208]
[192.97775269 42.08402252]
[203.48817444 31.38210297]
[213.99859619 20.68018341]
[224.50901794 9.97826290]
[235.01943970 -0.72365719]
[245.52984619 -11.42557716]
[249.67929077 -26.69295120]
[264.11749268 -30.35188293]
[274.62789917 -41.05380249]
[278.42630005 -49.39996338]
[285.42602539 -51.85190582]
[296.12792969 -62.36232376]
[303.19189453 -77.77455139]
[319.95730591 -75.25316620]
[322.17559814 -58.44496918]
[306.63833618 -51.66040421]
[295.93643188 -41.14998627]
[285.32983398 -30.54338455]
[274.81939697 -19.84146309]
[271.42175293 -5.33956289]
[256.23178101 -0.91515815]
[245.72135925 9.78676224]
[235.21093750 20.48868179]
[224.70051575 31.19060135]
[214.19009399 41.89252090]
[203.67967224 52.59444046]
[193.16926575 63.29636002]
[170.69656372 124.41043091]
[125.02161407 142.64788818]
[95.75272369 123.72292328]
[100.02593231 138.10136414]
[104.29914856 152.47981262]
[108.57235718 166.85824585]
[124.09319305 174.89221191]
[128.92320251 191.33711243]
[120.54804993 205.90321350]
[125.08015442 220.20216370]
[129.61225891 234.50111389]
[144.18623352 239.49168396]
[152.92492676 251.96118164]
[152.64877319 267.00735474]
[143.67320251 278.86389160]
[148.20530701 293.16284180]
[152.73742676 307.46179199]
[157.26953125 321.76074219]
[161.80163574 336.05969238]
[166.59115601 350.27450562]
[171.63653564 364.40051270]
[183.56481934 374.79409790]
[180.55926514 389.38229370]
[185.60464478 403.50830078]
[190.65002441 417.63430786]
[195.69540405 431.76031494]
[200.74078369 445.88635254]
[205.78616333 460.01235962]
[210.83154297 474.13836670]
[225.96138000 475.82638550]
[238.80560303 483.88323975]
[246.84509277 496.66552734]
[248.53062439 511.60940552]
[243.58108521 525.74487305]
[233.02874756 536.28594971]
[238.07412720 550.41192627]
[243.11950684 564.53796387]
[248.16488647 578.66394043]
[263.09219360 582.90136719]
[272.65145874 595.12426758]
[273.16693115 610.63281250]
[264.44046021 623.46356201]
[249.82749939 628.68286133]
[234.94705200 624.28375244]
[225.52095032 611.95788574]
[225.17372131 596.44470215]
[234.03887939 583.70935059]
[228.99349976 569.58331299]
[223.94812012 555.45733643]
[218.90274048 541.33129883]
[204.06015015 539.86053467]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 151]
[5 150]
[6 149]
[7 148]
[8 147]
[9 146]
[10 145]
[12 143]
[13 142]
[16 141]
[17 140]
[18 139]
[19 138]
[20 137]
[24 133]
[25 132]
[26 131]
[30 128]
[31 127]
[32 126]
[33 125]
[34 58]
[35 57]
[36 56]
[37 55]
[38 54]
[40 53]
[41 52]
[42 51]
[59 68]
[60 67]
[61 66]
[71 78]
[72 77]
[80 94]
[81 93]
[82 92]
[83 90]
[84 89]
[95 122]
[96 121]
[97 120]
[98 119]
[99 118]
[100 117]
[101 116]
[103 114]
[104 113]
[106 112]
[107 111]
[157 172]
[158 171]
[159 170]
[160 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
