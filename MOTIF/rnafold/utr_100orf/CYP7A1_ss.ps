%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:58:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGCAUCCUUCCCUUUCUAAUCAGAGAUUUUCUUCCUCAGAGAUUUUGGCCUAGAUUUGCAAAAUGAUGACCACAUCUUUGAUUUGGGGGAUUGCUAUAGCAGCAUGCUGUUGUCUAUGGCUUAUUCUUGGAAUUAGGAGAAGGCAAACGGGUGAACCACCUC\
) } def
/len { sequence length } bind def

/coor [
[149.28108215 400.73928833]
[142.33467102 390.48937988]
[138.87852478 378.57400513]
[139.26358032 366.14895630]
[143.46749878 354.42428589]
[151.09523010 344.54656982]
[161.41613770 337.48663330]
[157.71920776 322.94934082]
[154.02226257 308.41204834]
[150.32531738 293.87475586]
[146.62838745 279.33749390]
[142.79237366 264.83627319]
[138.81765747 250.37246704]
[134.84292603 235.90867615]
[130.59188843 221.52365112]
[126.06607056 207.22271729]
[121.54026794 192.92176819]
[117.01445770 178.62081909]
[112.48864746 164.31987000]
[107.96283722 150.01893616]
[97.19412994 150.57101440]
[86.55259705 148.83100891]
[76.52055359 144.87779236]
[67.55269623 138.89051819]
[60.05548096 131.14057922]
[54.36871338 121.97920990]
[50.75014496 111.82166290]
[49.36377716 101.12831116]
[50.27245331 90.38381195]
[53.43498230 80.07516479]
[58.70802689 70.66958618]
[47.90020370 60.26810074]
[37.09238052 49.86661148]
[26.28455734 39.46512604]
[15.47673225 29.06363869]
[4.66890860 18.66215134]
[-6.43329000 8.57546711]
[-17.82069778 -1.18808568]
[-29.20810509 -10.95163822]
[-40.59551239 -20.71519089]
[-51.98291779 -30.47874260]
[-63.37032700 -40.24229431]
[-74.75773621 -50.00584793]
[-86.14514160 -59.76940155]
[-99.07220459 -59.56779861]
[-108.36083984 -67.97323608]
[-109.37905121 -80.05615997]
[-120.57734680 -90.03604889]
[-131.77565002 -100.01593018]
[-145.86364746 -94.24623871]
[-160.99801636 -95.16168976]
[-174.18016052 -102.52723694]
[-182.82159424 -114.83522034]
[-185.25219727 -129.61363220]
[-181.04270935 -143.92257690]
[-192.24101257 -153.90246582]
[-203.43931580 -163.88235474]
[-214.63760376 -173.86222839]
[-230.48515320 -179.88650513]
[-229.08334351 -196.78239441]
[-212.45970154 -200.11262512]
[-204.65773010 -185.06053162]
[-193.45942688 -175.08064270]
[-182.26112366 -165.10075378]
[-171.06283569 -155.12088013]
[-157.33105469 -160.94358826]
[-142.37139893 -160.22386169]
[-129.15359497 -153.05094910]
[-120.32486725 -140.80049133]
[-117.67979431 -125.87097931]
[-121.79576111 -111.21423340]
[-110.59745789 -101.23434448]
[-99.39916229 -91.25445557]
[-82.06469727 -88.64937592]
[-76.38159180 -71.15680695]
[-64.99417877 -61.39325333]
[-53.60677338 -51.62970352]
[-42.21936798 -41.86614990]
[-30.83195877 -32.10259628]
[-19.44455147 -22.33904457]
[-8.05714512 -12.57549286]
[3.33026266 -2.81194067]
[6.89944029 -2.73488688]
[10.60430527 -0.89589459]
[13.60360527 2.74748659]
[15.07039642 7.85432625]
[25.87821960 18.25581360]
[36.68604279 28.65730095]
[47.49386978 39.05878830]
[58.30169296 49.46027756]
[69.10951233 59.86176300]
[91.87198639 50.00764847]
[116.58378601 52.14315033]
[137.31831360 65.75612640]
[149.75030518 57.36293793]
[162.18229675 48.96974945]
[174.61428833 40.57656479]
[187.04627991 32.18337631]
[199.47827148 23.79018974]
[211.91026306 15.39700413]
[224.26130676 6.88512993]
[236.53024292 -1.74464977]
[248.79917908 -10.37442970]
[261.06811523 -19.00420952]
[273.33706665 -27.63398933]
[282.81378174 -41.69201660]
[298.94583130 -36.47729874]
[298.40069580 -19.53211975]
[281.96685791 -15.36504936]
[269.69790649 -6.73526907]
[257.42895508 1.89451075]
[245.16001892 10.52429104]
[232.89108276 19.15406990]
[229.21209717 25.60450745]
[220.30345154 27.82899475]
[207.87145996 36.22218323]
[195.43946838 44.61536789]
[183.00747681 53.00855637]
[170.57548523 61.40174103]
[158.14349365 69.79492950]
[145.71150208 78.18811798]
[149.40327454 88.83679962]
[150.64877319 100.03824615]
[149.38635254 111.23780060]
[145.67851257 121.88089752]
[139.70884705 131.44053650]
[131.77294922 139.44337463]
[122.26378632 145.49311829]
[126.78959656 159.79406738]
[131.31539917 174.09501648]
[135.84121704 188.39595032]
[140.36701965 202.69689941]
[144.89282227 216.99784851]
[149.55909729 221.78750610]
[150.87251282 227.37712097]
[149.30673218 231.93394470]
[153.28144836 246.39775085]
[157.25617981 260.86154175]
[162.57133484 268.34896851]
[161.16566467 275.64053345]
[164.86260986 290.17782593]
[168.55953979 304.71511841]
[172.25648499 319.25241089]
[175.95343018 333.78967285]
[193.59751892 336.83349609]
[208.11013794 347.22958374]
[216.61856079 362.86361694]
[217.46322632 380.59014893]
[210.52124023 396.86544800]
[197.22175598 408.45587158]
[201.74757385 422.75683594]
[206.27337646 437.05776978]
[210.79917908 451.35873413]
[215.32499695 465.65966797]
[225.86854553 478.93634033]
[216.02947998 492.74319458]
[200.03848267 487.11074829]
[201.02404785 470.18548584]
[196.49824524 455.88452148]
[191.97242737 441.58358765]
[187.44662476 427.28262329]
[182.92080688 412.98168945]
[170.62007141 412.54714966]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 144]
[8 143]
[9 142]
[10 141]
[11 140]
[12 138]
[13 137]
[14 136]
[15 133]
[16 132]
[17 131]
[18 130]
[19 129]
[20 128]
[31 91]
[32 90]
[33 89]
[34 88]
[35 87]
[36 86]
[37 82]
[38 81]
[39 80]
[40 79]
[41 78]
[42 77]
[43 76]
[44 75]
[47 73]
[48 72]
[49 71]
[55 65]
[56 64]
[57 63]
[58 62]
[94 121]
[95 120]
[96 119]
[97 118]
[98 117]
[99 116]
[100 115]
[101 113]
[102 112]
[103 111]
[104 110]
[105 109]
[150 162]
[151 161]
[152 160]
[153 159]
[154 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
