%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:45:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGGCUGCCGCGCGGGGCGGGGAGCGGGGUCGGCUCAGUGGCCCUGAGACCCUAGCUCUGCUCUCGGUCCGCUCGCUGUCCGCUAGCCCGCUGCGAUGUUGCGCGCUGCCGCCCGCUUCGGGCCCCGCCUGGGCCGCCGCCUCUUGUCAGCCGCCGCCACCCAGGCCGUGCCUGCCCCCAACCAGCAGCCCGAGG\
) } def
/len { sequence length } bind def

/coor [
[72.90835571 427.01947021]
[70.28324890 411.81707764]
[76.31493378 397.61770630]
[89.07872772 388.95230103]
[88.60038757 373.95993042]
[88.12205505 358.96755981]
[87.64372253 343.97518921]
[87.16539001 328.98281860]
[86.68705750 313.99044800]
[71.95911407 307.80426025]
[61.36272812 295.77267456]
[57.05577087 280.26910400]
[59.94871140 264.38146973]
[69.51271057 251.29718018]
[83.87541962 243.66372681]
[83.15807343 228.68089294]
[82.44071960 213.69804382]
[81.72337341 198.71520996]
[81.00602722 183.73237610]
[80.28867340 168.74954224]
[79.57132721 153.76669312]
[78.85398102 138.78385925]
[67.09461212 129.47164917]
[52.34615326 132.20713806]
[37.59769440 134.94262695]
[22.84923553 137.67813110]
[8.10077477 140.41362000]
[-6.64768553 143.14910889]
[-21.39614677 145.88459778]
[-36.14460754 148.62010193]
[-50.89306641 151.35559082]
[-65.59987640 165.13122559]
[-83.53491974 157.92269897]
[-98.18864441 161.12710571]
[-112.81636047 164.44827271]
[-127.41712189 167.88595581]
[-142.01788330 171.32363892]
[-156.61865234 174.76130676]
[-171.21942139 178.19898987]
[-180.85050964 191.02949524]
[-196.89024353 191.35525513]
[-207.03433228 178.92637634]
[-203.50108337 163.27723694]
[-189.00091553 156.41250610]
[-174.65710449 163.59823608]
[-160.05633545 160.16055298]
[-145.45556641 156.72286987]
[-130.85481262 153.28518677]
[-116.25404358 149.84750366]
[-110.45701599 145.24911499]
[-101.39305878 146.47338867]
[-86.73933411 143.26896667]
[-82.01211548 134.19400024]
[-72.87536621 129.11796570]
[-62.23462296 129.93170166]
[-53.62855911 136.60713196]
[-38.88010025 133.87164307]
[-24.13163948 131.13613892]
[-9.38317871 128.40065002]
[5.36528158 125.66516113]
[20.11374092 122.92966461]
[34.86220169 120.19417572]
[49.61066055 117.45867920]
[64.35912323 114.72319031]
[61.40781403 94.94522858]
[68.78160858 76.15798950]
[84.68766785 63.43577576]
[80.21195221 49.11907578]
[75.73622894 34.80237579]
[64.68727875 28.13316154]
[61.25822067 16.10775566]
[66.76420593 5.32879353]
[62.51735306 -9.05745983]
[51.18948746 -20.10236740]
[55.00681686 -34.49949265]
[50.75996780 -48.88574600]
[46.51311874 -63.27199936]
[30.40483475 -66.97795105]
[18.42975426 -78.23470306]
[13.78901196 -93.90327454]
[17.65754509 -109.68352509]
[28.88839531 -121.29425049]
[24.41267586 -135.61094666]
[19.93695641 -149.92765808]
[14.38328075 -157.19476318]
[15.50598145 -164.50845337]
[11.25913239 -178.89471436]
[-0.99223506 -189.79589844]
[2.58733463 -205.79960632]
[18.31548691 -210.44259644]
[30.01244736 -198.94854736]
[25.64538574 -183.14155579]
[29.89223480 -168.75531006]
[34.25365829 -154.40336609]
[38.72937775 -140.08666992]
[43.20509720 -125.76996613]
[56.70518494 -123.66444397]
[68.03403473 -115.90842438]
[74.94680023 -103.96965027]
[76.04398346 -90.15128326]
[71.05442810 -77.14762878]
[60.89937210 -67.51885223]
[65.14621735 -53.13259506]
[69.39306641 -38.74634171]
[80.41717529 -28.73043633]
[76.90360260 -13.30430889]
[81.15045166 1.08194435]
[94.50168610 12.46346569]
[90.05293274 30.32665443]
[94.52865601 44.64335632]
[99.00437164 58.96005630]
[113.81404114 61.34200668]
[122.55323029 49.15075684]
[131.29241943 36.95951080]
[140.03161621 24.76826096]
[148.77079773 12.57701206]
[153.08471680 -3.81891584]
[170.03410339 -4.21243191]
[175.10429382 11.96562386]
[160.96205139 21.31620216]
[152.22286987 33.50745010]
[143.48367310 45.69869995]
[134.74447632 57.88994980]
[126.00528717 70.08119965]
[129.18693542 75.43604279]
[131.36470032 81.03068542]
[132.54443359 86.68789673]
[132.76190186 92.23852539]
[147.76142883 92.11892700]
[162.76095581 91.99932098]
[177.76048279 91.87971497]
[192.75999451 91.76011658]
[207.75952148 91.64051056]
[222.75904846 91.52091217]
[233.80494690 80.53793335]
[249.01829529 80.63031769]
[259.42080688 91.22857666]
[274.42034912 91.10897827]
[288.15838623 83.26188660]
[300.94692993 90.89746094]
[315.94647217 90.77785492]
[326.99237061 79.79488373]
[342.20571899 79.88726044]
[352.60824585 90.48552704]
[367.60775757 90.36592102]
[381.46203613 81.59147644]
[395.86053467 89.44104767]
[395.99127197 105.83967590]
[381.71981812 113.91785431]
[367.72735596 105.36544800]
[352.72784424 105.48504639]
[342.49566650 116.24784851]
[327.28570557 116.58281708]
[316.06607056 105.77738190]
[301.06655884 105.89698029]
[288.40136719 113.73551941]
[274.53994751 106.10849762]
[259.54043579 106.22810364]
[249.30822754 116.99090576]
[234.09828186 117.32587433]
[222.87864685 106.52043152]
[207.87911987 106.64003754]
[192.87960815 106.75963593]
[177.88008118 106.87924194]
[162.88055420 106.99884796]
[147.88102722 107.11844635]
[132.88151550 107.23805237]
[130.07461548 117.20351410]
[124.23903656 126.10919189]
[115.76816559 133.03450012]
[105.33438110 137.20301819]
[93.83681488 138.06651306]
[94.55416107 153.04934692]
[95.27151489 168.03219604]
[95.98886108 183.01502991]
[96.70621490 197.99786377]
[97.42356110 212.98069763]
[98.14090729 227.96353149]
[98.85826111 242.94638062]
[112.07701874 247.96469116]
[122.35207367 257.61450195]
[128.15350342 270.41369629]
[128.63485718 284.41473389]
[123.75639343 297.50091553]
[114.28620911 307.70657349]
[101.67942810 313.51211548]
[102.15776062 328.50448608]
[102.63609314 343.49685669]
[103.11442566 358.48922729]
[103.59275818 373.48159790]
[104.07109833 388.47396851]
[117.36130524 396.30810547]
[124.28587341 410.09411621]
[122.63518524 425.43292236]
[112.93598175 437.42996216]
[98.28323364 442.25701904]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 191]
[5 190]
[6 189]
[7 188]
[8 187]
[9 186]
[15 179]
[16 178]
[17 177]
[18 176]
[19 175]
[20 174]
[21 173]
[22 172]
[23 64]
[24 63]
[25 62]
[26 61]
[27 60]
[28 59]
[29 58]
[30 57]
[31 56]
[33 52]
[34 51]
[35 49]
[36 48]
[37 47]
[38 46]
[39 45]
[67 111]
[68 110]
[69 109]
[72 107]
[73 106]
[75 104]
[76 103]
[77 102]
[82 96]
[83 95]
[84 94]
[86 93]
[87 92]
[112 124]
[113 123]
[114 122]
[115 121]
[116 120]
[128 167]
[129 166]
[130 165]
[131 164]
[132 163]
[133 162]
[134 161]
[137 158]
[138 157]
[140 155]
[141 154]
[144 151]
[145 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
