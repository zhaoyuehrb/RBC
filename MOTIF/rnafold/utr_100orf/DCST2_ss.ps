%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:13:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAUACGGUGAGAAAUUCCAGGAGCACAGAAGUCAGCGGGCAUCUCCUGGAGACAGGCAGACAUUUGGUCUCAGCAGCCAUGCCCAAAGUCAUGAAGGAUGUUGUGCACCCCUUGGGGGGAGAGGAGCCUAGCAUGGCGAGAGCUGUGGUUCGCAGCGUGGGAGGUUUUACCCUGGGCU\
) } def
/len { sequence length } bind def

/coor [
[134.80087280 789.84802246]
[134.80087280 774.84802246]
[124.12001038 764.53033447]
[123.90632629 749.31817627]
[134.80087280 738.18505859]
[134.80087280 723.18505859]
[127.06358337 710.45776367]
[134.80087280 696.65759277]
[134.80087280 681.65759277]
[134.80087280 666.65759277]
[134.80087280 651.65759277]
[134.80087280 636.65759277]
[134.80087280 621.65759277]
[134.80087280 606.65759277]
[124.12001038 596.33996582]
[123.90632629 581.12780762]
[134.80087280 569.99468994]
[134.80087280 554.99468994]
[134.80087280 539.99468994]
[134.80087280 524.99468994]
[134.80087280 509.99468994]
[134.02017212 495.01501465]
[132.46087646 480.09628296]
[130.90158081 465.17755127]
[121.88316345 453.32354736]
[128.14396667 438.79382324]
[126.58467865 423.87509155]
[125.02538300 408.95635986]
[123.46608734 394.03762817]
[121.90679169 379.11889648]
[105.91615295 368.03158569]
[103.15017700 348.46356201]
[115.82544708 332.90689087]
[113.49179077 318.08950806]
[111.15813446 303.27215576]
[108.82447052 288.45480347]
[106.36231232 273.65826416]
[103.77183533 258.88363647]
[101.05323792 244.13206482]
[98.20672607 229.40463257]
[95.36020660 214.67718506]
[92.51369476 199.94975281]
[82.50176239 188.92204285]
[87.47963715 173.90434265]
[84.63312531 159.17691040]
[81.78661346 144.44946289]
[78.94009399 129.72203064]
[68.66050720 118.79820251]
[54.13305664 115.06281281]
[39.60560226 111.32742310]
[23.96295738 116.25080109]
[12.06241131 104.96766663]
[16.14622688 89.08514404]
[32.01332474 84.94181061]
[43.34099579 96.79997253]
[57.86844635 100.53536224]
[72.39589691 104.27075195]
[79.63132477 91.13117218]
[68.70749664 80.85158539]
[57.60689926 70.76313782]
[46.33288193 60.86887360]
[35.05886078 50.97460938]
[23.78483963 41.08034515]
[7.74666452 40.68479538]
[-1.82849908 27.81250763]
[2.40459633 12.33799744]
[17.19868279 6.13198566]
[31.20500183 13.95519257]
[33.67910385 29.80632401]
[44.95312500 39.70058823]
[56.22714615 49.59485245]
[67.50116730 59.48911667]
[72.26578522 60.07420731]
[76.70549011 63.67602921]
[78.98708344 69.92775726]
[89.91091919 80.20734406]
[97.02758026 77.84024811]
[88.12677765 65.76648712]
[96.85913086 53.57033920]
[111.15679932 58.10650635]
[111.26090240 73.10606384]
[118.37756348 70.73896790]
[120.96804047 55.96434784]
[123.55851746 41.18972778]
[118.32073975 26.26068687]
[128.13977051 15.06086445]
[130.73023987 0.28624350]
[133.32072449 -14.48837757]
[128.08294678 -29.41741943]
[137.90196228 -40.61724091]
[140.49244690 -55.39186096]
[143.08291626 -70.16648102]
[133.80145264 -82.95826721]
[136.36608887 -98.55307770]
[149.25529480 -107.69879150]
[164.82211304 -104.96941376]
[173.83103943 -91.98424530]
[170.93724060 -76.44714355]
[157.85754395 -67.57600403]
[155.26707458 -52.80138397]
[152.67658997 -38.02676392]
[158.09965515 -24.15450096]
[148.09533691 -11.89790058]
[145.50486755 2.87672067]
[142.91438293 17.65134239]
[148.33744812 31.52360344]
[138.33312988 43.78020477]
[135.74266052 58.55482483]
[133.15217590 73.32944489]
[146.16419983 80.79183960]
[157.60824585 71.09473419]
[169.05229187 61.39763260]
[180.49635315 51.70053101]
[185.51846313 36.08930588]
[201.60409546 32.89794922]
[212.20570374 45.40945816]
[206.41728210 60.75305939]
[190.19345093 63.14457703]
[178.74940491 72.84167480]
[167.30535889 82.53878021]
[155.86131287 92.23588562]
[128.28457642 131.05467224]
[93.66753387 126.87551880]
[96.51404572 141.60295105]
[99.36055756 156.33038330]
[102.20707703 171.05783081]
[112.42260742 183.13894653]
[107.24112701 197.10324097]
[110.08764648 211.83067322]
[112.93415833 226.55810547]
[115.78067017 241.28555298]
[120.49350739 249.14251709]
[118.54645538 256.29318237]
[121.13693237 271.06777954]
[125.71269226 279.00537109]
[123.64183044 286.12115479]
[125.97548676 300.93850708]
[128.30914307 315.75585938]
[130.64280701 330.57321167]
[140.60462952 334.52178955]
[147.96212769 342.20089722]
[151.42799377 352.16961670]
[150.43649292 362.59567261]
[145.23471069 371.59231567]
[136.82553101 377.55960083]
[138.38482666 392.47833252]
[139.94412231 407.39706421]
[141.50341797 422.31579590]
[143.06271362 437.23452759]
[152.19265747 450.15560913]
[145.82031250 463.61825562]
[147.37960815 478.53698730]
[148.93890381 493.45571899]
[159.33195496 482.63977051]
[174.32492065 482.18002319]
[185.36112976 492.33886719]
[186.14215088 507.31851196]
[176.22221375 518.56994629]
[161.26274109 519.67187500]
[149.80087280 509.99468994]
[149.80087280 524.99468994]
[149.80087280 539.99468994]
[149.80087280 554.99468994]
[149.80087280 569.99468994]
[160.69543457 581.12780762]
[160.48175049 596.33996582]
[149.80087280 606.65759277]
[149.80087280 621.65759277]
[149.80087280 636.65759277]
[149.80087280 651.65759277]
[149.80087280 666.65759277]
[149.80087280 681.65759277]
[149.80087280 696.65759277]
[157.53817749 710.45776367]
[149.80087280 723.18505859]
[149.80087280 738.18505859]
[160.69543457 749.31817627]
[160.48175049 764.53033447]
[149.80087280 774.84802246]
[149.80087280 789.84802246]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 180]
[2 179]
[5 176]
[6 175]
[8 173]
[9 172]
[10 171]
[11 170]
[12 169]
[13 168]
[14 167]
[17 164]
[18 163]
[19 162]
[20 161]
[21 160]
[22 153]
[23 152]
[24 151]
[26 149]
[27 148]
[28 147]
[29 146]
[30 145]
[33 139]
[34 138]
[35 137]
[36 136]
[37 134]
[38 133]
[39 131]
[40 130]
[41 129]
[42 128]
[44 126]
[45 125]
[46 124]
[47 123]
[48 57]
[49 56]
[50 55]
[58 76]
[59 75]
[60 72]
[61 71]
[62 70]
[63 69]
[82 109]
[83 108]
[84 107]
[86 105]
[87 104]
[88 103]
[90 101]
[91 100]
[92 99]
[110 121]
[111 120]
[112 119]
[113 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
