%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:53:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUCUCAGUCCUCCAUCCCCCUACCAGAUAAAAGGGGGGAAGCUGAGCCUGACUUGAUCAUCCUGCCCCGGUUCUUUCCUCCAGGGCCGCAUUUCUCUGCCUCUCUCUCCUGCCAUGUCGUACCACUCUUUCCAGCCAGGCUCCAGGUGUGGCAGUCAGAGUUUCAGCUCAUACUCGGCUGUCAUGCCCCGGAUGGUCACCCACUAUGCAGUGA\
) } def
/len { sequence length } bind def

/coor [
[-17.52428436 331.11767578]
[-31.95504951 327.02462769]
[-27.86235237 312.59423828]
[-23.76975250 298.16336060]
[-30.98519897 296.11706543]
[-41.43641663 306.87680054]
[-51.88763428 317.63653564]
[-62.33885574 328.39627075]
[-72.79006958 339.15600586]
[-83.24129486 349.91577148]
[-81.45616150 357.20223999]
[-82.29718018 364.58843994]
[-85.61347961 371.16555786]
[-90.95254517 376.14074707]
[-97.62146759 378.93276978]
[-104.77662659 379.23941040]
[-111.53039551 377.06985474]
[-122.73577118 387.04177856]
[-133.94114685 397.01373291]
[-145.14653015 406.98565674]
[-156.35189819 416.95761108]
[-167.55728149 426.92953491]
[-178.76264954 436.90145874]
[-175.00469971 451.73846436]
[-178.58357239 466.61965942]
[-188.67686462 478.12548828]
[-202.96520996 483.61199951]
[-218.16526794 481.81838989]
[-230.78414917 473.15686035]
[-237.92216492 459.61773682]
[-237.93901062 444.31225586]
[-230.83084106 430.75744629]
[-218.23104858 422.06814575]
[-203.03498840 420.24108887]
[-188.73458862 425.69610596]
[-177.52922058 415.72415161]
[-166.32383728 405.75222778]
[-155.11845398 395.78027344]
[-143.91308594 385.80834961]
[-132.70770264 375.83639526]
[-121.50233459 365.86447144]
[-116.76553345 343.91860962]
[-94.00102997 339.46453857]
[-83.54981232 328.70480347]
[-73.09859467 317.94506836]
[-62.64737701 307.18530273]
[-52.19615936 296.42556763]
[-41.74493790 285.66583252]
[-46.92349625 272.50933838]
[-47.65864182 258.75357056]
[-44.10299683 245.82157898]
[-36.84165955 234.98019409]
[-26.81018257 227.21604919]
[-15.17960167 223.14692688]
[-3.22214007 222.97621155]
[7.82716751 226.49343872]
[16.06980133 213.96112061]
[24.31243706 201.42880249]
[32.55507278 188.89648438]
[40.79770660 176.36416626]
[49.04034042 163.83184814]
[57.28297424 151.29953003]
[65.52561188 138.76721191]
[73.76824188 126.23490143]
[63.37426758 105.91020966]
[66.84764862 83.34777832]
[55.08141327 74.04424286]
[43.31517792 64.74071503]
[31.54894447 55.43717957]
[15.92492485 52.94708252]
[10.74040222 38.98391724]
[-1.02583301 29.68038559]
[-15.58429718 34.78476334]
[-30.58597755 31.18571091]
[-41.24388885 20.03167915]
[-44.15713501 4.88187504]
[-38.39610672 -9.42945194]
[-25.79912758 -18.33561134]
[-10.38584709 -18.99467850]
[2.92541051 -11.19634819]
[9.88707352 2.57096124]
[8.27769947 17.91415024]
[20.04393387 27.21768379]
[34.82635498 29.04232979]
[40.85247803 43.67094421]
[52.61871338 52.97447586]
[64.38494873 62.27801132]
[76.15118408 71.58154297]
[75.48059082 66.00852203]
[75.51320648 60.20569229]
[70.17845154 46.18640900]
[64.84368896 32.16712570]
[50.32371521 25.92645073]
[44.54705429 11.21571541]
[50.94089508 -3.23746347]
[65.71188354 -8.85827065]
[80.09664917 -2.31198168]
[85.56098175 12.51760674]
[78.86296844 26.83236313]
[84.19773102 40.85164642]
[89.53249359 54.87092972]
[96.99365997 55.63319397]
[98.51818085 40.71086884]
[100.04270935 25.78854179]
[101.56723785 10.86621475]
[98.40591431 -3.79687023]
[111.37445068 -11.33458424]
[122.55072021 -1.33003843]
[116.48956299 12.39074135]
[114.96503448 27.31306648]
[113.44050598 42.23539352]
[111.91598511 57.15771866]
[119.37714386 57.91998291]
[127.43663788 45.26911163]
[135.49613953 32.61824036]
[132.28958130 17.37501907]
[140.64328003 4.66004562]
[155.19511414 1.69702995]
[163.25460815 -10.95384216]
[154.00709534 -22.96464348]
[149.42817688 -37.41487885]
[150.07077026 -52.55960846]
[155.85728455 -66.57003784]
[166.08895874 -77.75433350]
[179.53028870 -84.76194000]
[194.55815125 -86.74665833]
[209.35786438 -83.46881866]
[222.14228821 -75.32424164]
[231.36766052 -63.29641724]
[235.91993713 -48.83777237]
[235.24943542 -33.69424820]
[229.43711853 -19.69450951]
[219.18484497 -8.52908611]
[205.73062134 -1.54625988]
[190.69912720 0.41075954]
[175.90548706 -2.89434767]
[167.84599304 9.75652409]
[171.31045532 24.19719696]
[163.31719971 37.14179230]
[148.14700317 40.67773438]
[140.08750916 53.32860565]
[132.02801514 65.97947693]
[135.43933105 72.59455872]
[137.60653687 79.40927124]
[138.55543518 86.20342255]
[138.34902954 92.77039337]
[137.08389282 98.92319489]
[151.85601807 101.52791595]
[166.62812805 104.13263702]
[181.40023804 106.73735809]
[196.17236328 109.34207916]
[210.94447327 111.94680786]
[225.71659851 114.55152893]
[240.48870850 117.15625000]
[255.26083374 119.76097107]
[270.03292847 122.36569214]
[284.80505371 124.97042084]
[299.57717896 127.57514191]
[308.56799316 125.98374176]
[314.54452515 130.32666016]
[329.27719116 133.14595032]
[344.00985718 135.96524048]
[358.74255371 138.78454590]
[368.72427368 127.11146545]
[383.21057129 122.00829315]
[398.30471802 124.84774017]
[409.94644165 134.86601257]
[415.00418091 149.36824036]
[412.11746216 164.45341492]
[402.06274414 176.06367493]
[387.54470825 181.07594299]
[372.46865845 178.14192200]
[360.88998413 168.05087280]
[355.92324829 153.51721191]
[341.19058228 150.69792175]
[326.45791626 147.87863159]
[311.72525024 145.05934143]
[296.97244263 142.34725952]
[282.20034790 139.74253845]
[267.42822266 137.13781738]
[252.65609741 134.53309631]
[237.88398743 131.92835999]
[223.11187744 129.32363892]
[208.33975220 126.71891785]
[193.56764221 124.11419678]
[178.79551697 121.50947571]
[164.02340698 118.90475464]
[149.25129700 116.30003357]
[134.47917175 113.69530487]
[123.01102448 129.10098267]
[105.37616730 136.70791626]
[86.30056000 134.47753906]
[78.05792999 147.00984192]
[69.81529236 159.54216003]
[61.57265854 172.07447815]
[53.33002472 184.60679626]
[45.08738708 197.13911438]
[36.84475327 209.67143250]
[28.60211945 222.20375061]
[20.35948372 234.73606873]
[33.35031891 254.78993225]
[31.21836090 280.53021240]
[12.52102470 301.05566406]
[15.76761818 315.70010376]
[19.01421356 330.34454346]
[22.26080704 344.98898315]
[33.73280716 356.70755005]
[29.06021690 372.42694092]
[13.04979420 375.97637939]
[2.17169118 363.70449829]
[7.61636686 348.23556519]
[4.36977243 333.59112549]
[1.12317836 318.94668579]
[-2.12341571 304.30224609]
[-9.33886147 302.25595093]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 48]
[6 47]
[7 46]
[8 45]
[9 44]
[10 43]
[17 41]
[18 40]
[19 39]
[20 38]
[21 37]
[22 36]
[23 35]
[56 200]
[57 199]
[58 198]
[59 197]
[60 196]
[61 195]
[62 194]
[63 193]
[64 192]
[66 88]
[67 87]
[68 86]
[69 85]
[71 83]
[72 82]
[90 101]
[91 100]
[92 99]
[113 142]
[114 141]
[115 140]
[118 137]
[119 136]
[147 189]
[148 188]
[149 187]
[150 186]
[151 185]
[152 184]
[153 183]
[154 182]
[155 181]
[156 180]
[157 179]
[158 178]
[160 177]
[161 176]
[162 175]
[163 174]
[203 214]
[204 213]
[205 212]
[206 211]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
