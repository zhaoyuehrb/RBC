%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:57:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCCCAGCCCGAGGAGGCACUCAGGGUUAGGAGGUCUGGGCGAGAAGCAACUAGGGCCCUCAUCACUUCGCCGCCGAAUCCCCGGCGCCGCCCAGCGGGGCAGAGCCAGGCCAGGGCCGCCCGCCCAACCUGGUCCGCUGCCUCUUCGGCCAUGGAAGCUGCCGGCAGCCCUGCGGCUACGGAGACAGGCAAGUAUAUCGCGUCAACACAGCGACCUGACGGGACCUGGCGCAAGCAGCGGAGGGUGAAAG\
) } def
/len { sequence length } bind def

/coor [
[-44.10471344 263.48565674]
[-54.41087341 274.38439941]
[-64.71703339 285.28317261]
[-75.02320099 296.18191528]
[-85.32936096 307.08068848]
[-95.63552094 317.97946167]
[-86.20068359 328.36093140]
[-85.89958954 346.51727295]
[-92.38385773 360.04333496]
[-98.86813354 373.56939697]
[-105.35240173 387.09545898]
[-111.75257111 400.66149902]
[-118.06838989 414.26702881]
[-124.38420868 427.87255859]
[-118.71852875 442.62640381]
[-125.22106934 457.03100586]
[-140.03398132 462.54037476]
[-154.36903381 455.88589478]
[-159.72148132 441.01556396]
[-152.91583252 426.75167847]
[-137.98974609 421.55673218]
[-131.67391968 407.95120239]
[-125.35810089 394.34567261]
[-125.39231110 386.97543335]
[-118.87845612 380.61117554]
[-112.39418793 367.08511353]
[-105.90991211 353.55905151]
[-99.42564392 340.03302002]
[-110.51446533 329.93161011]
[-123.37889862 337.64566040]
[-136.24333191 345.35968018]
[-135.80320740 361.90118408]
[-143.72663879 376.32101440]
[-157.76403809 384.72216797]
[-174.02853394 384.88897705]
[-188.07205200 376.87069702]
[-200.83970642 384.74389648]
[-213.60736084 392.61706543]
[-218.69311523 407.83267212]
[-233.80895996 413.20770264]
[-247.35929871 404.61889648]
[-248.94949341 388.65484619]
[-237.35966492 377.56179810]
[-221.48054504 379.84942627]
[-208.71289062 371.97622681]
[-195.94522095 364.10305786]
[-197.24116516 350.52203369]
[-192.54199219 337.64376831]
[-182.70962524 327.99633789]
[-169.61943054 323.49954224]
[-155.80274963 325.08316040]
[-143.95736694 332.49526978]
[-131.09294128 324.78121948]
[-118.22850037 317.06719971]
[-106.53428650 307.67327881]
[-96.22812653 296.77453613]
[-85.92195892 285.87576294]
[-75.61579895 274.97702026]
[-65.30963898 264.07824707]
[-55.00347519 253.17947388]
[-44.97113037 242.02815247]
[-35.21879196 230.63114929]
[-25.46645164 219.23413086]
[-15.71411228 207.83711243]
[-5.96177387 196.44010925]
[-4.00624228 189.33393860]
[3.98311114 184.96310425]
[13.87621593 173.68806458]
[23.76931953 162.41302490]
[33.66242599 151.13798523]
[43.55552673 139.86294556]
[53.44863129 128.58790588]
[50.30567169 113.92087555]
[36.66119003 107.68965149]
[23.01671028 101.45842743]
[9.37223053 95.22720337]
[-4.27224970 88.99597931]
[-18.99062538 94.75314331]
[-33.43532181 88.34016418]
[-39.03655624 73.56174469]
[-32.47121811 59.18565750]
[-17.63440323 53.74098206]
[-3.32853246 60.45794678]
[1.95897532 75.35149384]
[15.60345554 81.58271790]
[29.24793434 87.81394958]
[42.89241409 94.04517365]
[56.53689575 100.27639771]
[64.95735931 87.86286163]
[54.12279510 77.48923492]
[43.28823090 67.11560059]
[32.45366287 56.74197388]
[16.83149147 50.15531921]
[18.83609009 33.32029724]
[35.56811905 30.58615875]
[42.82729340 45.90740967]
[53.66185760 56.28104019]
[64.49642181 66.65467072]
[75.33098602 77.02829742]
[88.73393250 70.29322815]
[86.87610626 55.40872192]
[85.01828766 40.52421951]
[83.16046906 25.63971329]
[81.30264282 10.75520802]
[68.43543243 -4.78517675]
[76.78844452 -22.24121284]
[74.56157684 -37.07499313]
[72.33471680 -51.90877533]
[70.10784912 -66.74256134]
[67.88098907 -81.57633972]
[65.65412903 -96.41011810]
[53.98476791 -103.10378265]
[48.37519836 -115.11704254]
[50.66646957 -127.97852325]
[59.80359268 -137.04154968]
[57.76109314 -151.90184021]
[55.71859360 -166.76213074]
[53.67609406 -181.62242126]
[41.81316757 -192.42291260]
[43.00465012 -208.42166138]
[56.33654022 -217.34579468]
[71.58175659 -212.34948730]
[77.04546356 -197.26547241]
[68.53638458 -183.66491699]
[70.57888031 -168.80462646]
[72.62138367 -153.94433594]
[74.66387939 -139.08406067]
[88.49174500 -129.49044800]
[91.14186859 -112.52810669]
[80.48790741 -98.63698578]
[82.71476746 -83.80319977]
[84.94163513 -68.96942139]
[87.16849518 -54.13563919]
[89.39536285 -39.30185699]
[91.62222290 -24.46807671]
[100.32731628 -19.18023491]
[104.79177094 -9.78224087]
[103.33114624 0.74060005]
[96.18714905 8.89738655]
[98.04496765 23.78189087]
[99.90279388 38.66639709]
[101.76061249 53.55090332]
[103.61843872 68.43540955]
[117.33923340 74.49672699]
[129.59378052 65.84652710]
[141.84832764 57.19631958]
[154.10287476 48.54611206]
[166.35743713 39.89590836]
[178.61198425 31.24570465]
[190.75817871 22.44400024]
[202.79414368 13.49215698]
[214.83010864 4.54031229]
[221.28579712 -9.90388012]
[236.11566162 -11.29099178]
[248.15162659 -20.24283600]
[260.18759155 -29.19468117]
[262.82437134 -41.80241013]
[273.01080322 -49.01269150]
[284.98410034 -47.41336441]
[297.13027954 -56.21506882]
[309.27645874 -65.01676941]
[321.42266846 -73.81847382]
[327.61373901 -89.00408936]
[343.89498901 -90.96691132]
[353.51766968 -77.68776703]
[346.58279419 -62.82709122]
[330.22436523 -61.67227936]
[318.07818604 -52.87057877]
[305.93197632 -44.06887436]
[293.78579712 -35.26716995]
[287.48587036 -18.87570381]
[269.13943481 -17.15871429]
[257.10348511 -8.20687008]
[245.06750488 0.74497467]
[239.47271729 14.54887104]
[223.78195190 16.57627869]
[211.74598694 25.52812195]
[199.71002197 34.47996902]
[198.14340210 38.96567535]
[193.75752258 42.52614975]
[187.26217651 43.50025177]
[175.00762939 52.15045929]
[162.75308228 60.80066299]
[150.49853516 69.45086670]
[138.24398804 78.10107422]
[125.98944092 86.75127411]
[127.19882202 101.70244598]
[140.68435669 108.27056885]
[154.16989136 114.83869934]
[167.65542603 121.40682220]
[161.62260437 107.67346954]
[164.72012329 92.99677277]
[175.78808594 82.87255096]
[190.68202209 81.09189606]
[203.82476807 88.32159424]
[210.29489136 101.85442352]
[207.66961670 116.62290192]
[196.93199158 127.09683990]
[182.10328674 129.35427856]
[194.87095642 137.22744751]
[210.67848206 137.88505554]
[217.45050049 151.15113831]
[230.21815491 159.02432251]
[242.98580933 166.89750671]
[255.75346375 174.77069092]
[268.52111816 182.64387512]
[281.65609741 174.78698730]
[296.93847656 173.94577026]
[310.85647583 180.31352234]
[320.21179199 192.42700195]
[322.85470581 207.50259399]
[318.17785645 222.07604980]
[307.25598145 232.79850769]
[292.59881592 237.20599365]
[277.57446289 234.28573608]
[265.63546753 224.70875549]
[259.52523804 210.67579651]
[260.64794922 195.41152954]
[247.88027954 187.53834534]
[235.11262512 179.66516113]
[222.34497070 171.79197693]
[209.57731628 163.91879272]
[194.68301392 163.82434082]
[186.99777222 149.99510193]
[174.23011780 142.12193298]
[161.08731079 134.89236450]
[147.60177612 128.32423401]
[134.11622620 121.75611115]
[120.63069153 115.18798065]
[110.18999481 125.95793152]
[117.17353058 139.23310852]
[131.32348633 147.52229309]
[130.94927979 163.91716003]
[116.43583679 171.55209351]
[102.71336365 162.57292175]
[103.89835358 146.21664429]
[96.91481781 132.94146729]
[82.70160675 138.97851562]
[64.72367096 138.48101807]
[54.83056641 149.75604248]
[44.93746185 161.03108215]
[35.04435730 172.30612183]
[25.15125465 183.58116150]
[15.25814915 194.85620117]
[5.43523836 206.19244385]
[-4.31710052 217.58946228]
[-14.06943989 228.98646545]
[-23.82177925 240.38348389]
[-33.57411957 251.78048706]
[-34.21259308 256.01400757]
[-35.97509384 259.48587036]
[-38.48892975 261.93841553]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 60]
[2 59]
[3 58]
[4 57]
[5 56]
[6 55]
[8 28]
[9 27]
[10 26]
[11 25]
[12 23]
[13 22]
[14 21]
[29 54]
[30 53]
[31 52]
[36 46]
[37 45]
[38 44]
[61 249]
[62 248]
[63 247]
[64 246]
[65 245]
[67 244]
[68 243]
[69 242]
[70 241]
[71 240]
[72 239]
[73 88]
[74 87]
[75 86]
[76 85]
[77 84]
[89 99]
[90 98]
[91 97]
[92 96]
[100 143]
[101 142]
[102 141]
[103 140]
[104 139]
[106 135]
[107 134]
[108 133]
[109 132]
[110 131]
[111 130]
[115 127]
[116 126]
[117 125]
[118 124]
[144 186]
[145 185]
[146 184]
[147 183]
[148 182]
[149 181]
[150 178]
[151 177]
[152 176]
[154 174]
[155 173]
[156 172]
[159 170]
[160 169]
[161 168]
[162 167]
[187 229]
[188 228]
[189 227]
[190 226]
[199 225]
[200 224]
[202 222]
[203 221]
[204 220]
[205 219]
[206 218]
[230 237]
[231 236]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
