%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:16:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCCUGGAGGGGCGGGGCGGACGCAGAGCCGCGUUUAGUCUAUCGCUGCGGUUGCGAGCGCUGUAGGGAGCCUGUGCUGUGCCGCGCAGUUAGGCAGCAGCAGCCGCGGAGCAGUAGCCGCCGUGGGAGGGAGCCAUGAAGCAUUACGAGCAGAGAGAUGAUUCUUCAAGAAACCAAAGCAGCCUGUGGCAUUCCAGCGAUUCCUCAUUGCUCAAGGGUGGAGAUUCUGGACGCAAAGACAAGGGAGAAGCUG\
UGUU\
) } def
/len { sequence length } bind def

/coor [
[-55.00437927 361.36547852]
[-69.09287262 366.51470947]
[-79.39836884 378.51919556]
[-94.00830841 375.62109375]
[-108.09680176 380.77032471]
[-122.18528748 385.91952515]
[-136.27377319 391.06875610]
[-150.36225891 396.21798706]
[-164.45075989 401.36718750]
[-167.18762207 416.41567993]
[-177.02442932 427.99731445]
[-191.24305725 433.06649780]
[-205.99128723 430.35620117]
[-217.32635498 420.69277954]
[-231.41485596 425.84201050]
[-245.50334167 430.99121094]
[-259.59182739 436.14044189]
[-269.89733887 448.14492798]
[-284.50726318 445.24682617]
[-298.59576416 450.39605713]
[-312.68423462 455.54525757]
[-326.77273560 460.69448853]
[-333.73257446 466.56192017]
[-341.06268311 465.81970215]
[-355.21237183 470.79830933]
[-369.36203003 475.77691650]
[-383.51171875 480.75555420]
[-397.66137695 485.73416138]
[-404.69161987 491.51705933]
[-412.01220703 490.68630981]
[-426.22100830 495.49362183]
[-411.51965332 498.47180176]
[-399.26232910 507.11807251]
[-391.52465820 519.96832275]
[-389.61688232 534.84649658]
[-393.86206055 549.23321533]
[-403.54135132 560.69238281]
[-417.01571655 567.28338623]
[-432.00341797 567.89031982]
[-445.96655273 562.41027832]
[-456.54067993 551.77130127]
[-461.93518066 537.77490234]
[-461.23660278 522.79113770]
[-454.56326294 509.35739136]
[-443.04513550 499.74835205]
[-457.83102417 502.27371216]
[-470.13156128 512.22393799]
[-483.97979736 506.73980713]
[-498.76568604 509.26516724]
[-513.55157471 511.79049683]
[-528.33746338 514.31585693]
[-543.12335205 516.84124756]
[-557.90924072 519.36657715]
[-572.69512939 521.89190674]
[-580.42980957 535.48266602]
[-595.10882568 540.87359619]
[-609.80114746 535.51916504]
[-617.56951904 521.94763184]
[-614.74597168 506.56707764]
[-602.66375732 496.63970947]
[-587.02758789 496.85290527]
[-575.22052002 507.10604858]
[-560.43463135 504.58068848]
[-545.64874268 502.05532837]
[-530.86285400 499.52996826]
[-516.07696533 497.00460815]
[-501.29104614 494.47927856]
[-486.50515747 491.95391846]
[-475.26217651 482.18432617]
[-460.35635376 487.48782349]
[-445.57046509 484.96246338]
[-431.02828979 481.28482056]
[-416.81948853 476.47753906]
[-402.64001465 471.58447266]
[-388.49032593 466.60586548]
[-374.34063721 461.62725830]
[-360.19097900 456.64862061]
[-346.04129028 451.67001343]
[-331.92196655 446.60598755]
[-317.83346558 441.45678711]
[-303.74496460 436.30755615]
[-289.65649414 431.15832520]
[-280.35870361 419.52218628]
[-264.74105835 422.05197144]
[-250.65255737 416.90274048]
[-236.56407166 411.75350952]
[-222.47558594 406.60427856]
[-220.04339600 391.90905762]
[-210.51881409 380.32723999]
[-196.38244629 375.03292847]
[-181.39570618 377.54177856]
[-169.59997559 387.27871704]
[-155.51148987 382.12948608]
[-141.42300415 376.98025513]
[-127.33451080 371.83105469]
[-113.24601746 366.68182373]
[-99.15753174 361.53259277]
[-89.85973358 349.89645386]
[-74.24208832 352.42623901]
[-60.15360260 347.27700806]
[-59.87865829 329.29055786]
[-52.49492645 312.83175659]
[-39.16879272 300.59832764]
[-22.04421043 294.61279297]
[-3.89781880 295.88815308]
[2.58709955 282.36239624]
[9.07201767 268.83663940]
[15.55693626 255.31089783]
[22.04185486 241.78515625]
[28.52677345 228.25941467]
[35.01169205 214.73365784]
[35.06941605 207.36630249]
[41.65755081 201.08438110]
[48.30542374 187.63798523]
[47.01011658 172.79980469]
[60.06216049 163.85806274]
[66.71003723 150.41166687]
[50.21842575 138.73181152]
[37.92250443 121.62693024]
[31.60337448 100.63397980]
[32.47177887 77.86902618]
[40.98315430 55.81434250]
[56.73205948 37.04807281]
[78.44319153 23.94578934]
[79.16789246 8.96330643]
[79.89259338 -6.01917648]
[80.61729431 -21.00165939]
[81.34199524 -35.98414230]
[69.74043274 -46.46926880]
[67.64405060 -61.96569443]
[76.04269409 -75.15647888]
[90.97077179 -79.81333923]
[105.37971497 -73.73744965]
[112.46604919 -59.79766083]
[108.88383484 -44.57590866]
[96.32447815 -35.25944138]
[95.59977722 -20.27695847]
[94.87507629 -5.29447603]
[94.15037537 9.68800735]
[93.42567444 24.67049026]
[100.70774078 26.46535873]
[115.27186584 30.05509377]
[122.55393219 31.84996033]
[128.87493896 18.24684525]
[122.08376312 4.16090012]
[125.98576355 -10.98203087]
[138.73855591 -20.03191948]
[154.32064819 -18.71568489]
[165.37464905 -7.65481186]
[166.68121338 7.92809248]
[157.62341309 20.67525864]
[142.47805786 24.56786156]
[136.15704346 38.17097855]
[142.30357361 42.46867752]
[155.89392090 36.12025070]
[154.59661865 51.06407166]
[160.74314880 55.36177063]
[171.34974670 44.75516891]
[181.95635986 34.14856720]
[192.56295776 23.54196548]
[196.28240967 7.57018661]
[212.05058289 3.06499314]
[223.64653015 14.66094112]
[219.14134216 30.42911339]
[203.16955566 34.14856720]
[192.56295776 44.75516891]
[181.95635986 55.36177063]
[171.34974670 65.96836853]
[174.92245483 79.72821808]
[175.91773987 93.65123749]
[174.39488220 107.26738739]
[170.49661255 120.13339233]
[164.44152832 131.84715271]
[156.51388550 142.06030273]
[147.05155945 150.48847961]
[136.43241882 156.91900635]
[125.05976105 161.21578979]
[113.34727478 163.32136536]
[101.70419312 163.25610352]
[90.52101135 161.11457825]
[80.15644073 157.05953979]
[73.50856781 170.50593567]
[74.32836914 186.30589294]
[61.75182724 194.28585815]
[55.10395432 207.73225403]
[48.53743744 221.21858215]
[42.05252075 234.74432373]
[35.56760025 248.27006531]
[29.08268356 261.79580688]
[22.59776497 275.32156372]
[16.11284637 288.84732056]
[9.62792873 302.37304688]
[19.46867180 312.04354858]
[25.90471458 324.20401001]
[28.35342216 337.70394897]
[26.60816956 351.27395630]
[20.85557556 363.64526367]
[31.83960533 373.86050415]
[42.82363510 384.07574463]
[53.80766678 394.29098511]
[71.29010010 393.34481812]
[83.79100037 405.11468506]
[83.89425659 421.94595337]
[95.00091553 432.02770996]
[106.10756683 442.10949707]
[117.21422577 452.19125366]
[128.50177002 462.07009888]
[139.96650696 471.74273682]
[155.50354004 474.72790527]
[160.24185181 488.84875488]
[171.70658875 498.52136230]
[183.17132568 508.19400024]
[194.63606262 517.86663818]
[206.15902710 527.46984863]
[217.73979187 537.00323486]
[233.31175232 539.80047607]
[238.22035217 553.86303711]
[249.80111694 563.39642334]
[261.38189697 572.92980957]
[272.96264648 582.46319580]
[284.54342651 591.99664307]
[300.79962158 594.15722656]
[306.80563354 609.41699219]
[296.38299561 622.07794189]
[280.25363159 619.11566162]
[275.01004028 603.57739258]
[263.42926025 594.04400635]
[251.84848022 584.51062012]
[240.26771545 574.97717285]
[228.68695068 565.44378662]
[213.94331360 563.32843018]
[208.20639038 548.58398438]
[196.62562561 539.05059814]
[189.48616028 537.23144531]
[184.96342468 529.33135986]
[173.49868774 519.65875244]
[162.03395081 509.98611450]
[150.56921387 500.31347656]
[135.85223389 498.02014160]
[130.29388428 483.20745850]
[118.82913971 473.53482056]
[115.33290863 473.45449829]
[111.69923401 471.69558716]
[108.70818329 468.21041870]
[107.13245392 463.29791260]
[96.02579498 453.21615601]
[84.91913605 443.13436890]
[73.81248474 433.05261230]
[61.17426300 435.47052002]
[49.26929474 430.09616089]
[42.52579880 418.68331909]
[43.59242630 405.27502441]
[32.60839844 395.05978394]
[21.62436676 384.84454346]
[10.64033699 374.62930298]
[-0.34746423 380.78079224]
[-12.61846161 383.60836792]
[-25.19026947 382.88568115]
[-37.05641556 378.67059326]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 100]
[2 99]
[4 97]
[5 96]
[6 95]
[7 94]
[8 93]
[9 92]
[14 87]
[15 86]
[16 85]
[17 84]
[19 82]
[20 81]
[21 80]
[22 79]
[24 78]
[25 77]
[26 76]
[27 75]
[28 74]
[30 73]
[31 72]
[45 71]
[46 70]
[48 68]
[49 67]
[50 66]
[51 65]
[52 64]
[53 63]
[54 62]
[105 192]
[106 191]
[107 190]
[108 189]
[109 188]
[110 187]
[111 186]
[113 185]
[114 184]
[116 182]
[117 181]
[124 140]
[125 139]
[126 138]
[127 137]
[128 136]
[143 153]
[144 152]
[157 168]
[158 167]
[159 166]
[160 165]
[197 255]
[198 254]
[199 253]
[200 252]
[203 248]
[204 247]
[205 246]
[206 245]
[207 241]
[208 240]
[210 238]
[211 237]
[212 236]
[213 235]
[214 233]
[215 232]
[217 230]
[218 229]
[219 228]
[220 227]
[221 226]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
