%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:40:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGCUCAGAAAGCGCGGGAAAGGCACGCAGCCACGCCCCAAGGGCGCAGCCUAGGACAGGGGCUUCUGGAGCUUCUGGCAGCCGUCUGCCCUCAUGGCCUUUGCACCUAUGGGGCCCGAGGCCUCGUUCUUCGACGUUUUGGACCGACACAGGGAGUCCCUGCUGGCUGCCCUGAGGAGAGGUGGCAGGGAGC\
) } def
/len { sequence length } bind def

/coor [
[102.09029388 173.24746704]
[97.77962494 187.61473083]
[93.46896362 201.98199463]
[89.15829468 216.34925842]
[99.27011871 228.00062561]
[101.45491028 243.27250671]
[95.01548767 257.29168701]
[82.00666809 265.58471680]
[66.57951355 265.50527954]
[53.65676498 257.07876587]
[47.36203003 242.99403381]
[49.70393753 227.74545288]
[59.93519211 216.19880676]
[74.79103088 212.03858948]
[79.10169983 197.67132568]
[83.41236877 183.30406189]
[87.72303009 168.93681335]
[81.46182251 164.80796814]
[73.20396423 177.33026123]
[60.68180084 169.07221985]
[68.93939972 156.55030823]
[62.67819214 152.42147827]
[51.17019653 162.04260254]
[39.66219711 171.66372681]
[36.80877304 187.45098877]
[22.61891556 194.93614197]
[7.97787285 188.37722778]
[4.11699915 172.80566406]
[13.99802589 160.16664124]
[30.04107475 160.15573120]
[41.54907227 150.53460693]
[53.05706787 140.91348267]
[47.10699463 103.87261200]
[63.14212799 76.33853149]
[87.94389343 67.60703278]
[78.13768005 56.25634384]
[68.33146667 44.90565109]
[58.52525711 33.55495834]
[48.71904373 22.20426559]
[38.91283417 10.85357380]
[24.03609085 5.46904659]
[21.57058334 -9.22008324]
[11.76437283 -20.57077599]
[1.95816088 -31.92146873]
[-12.91858101 -37.30599594]
[-15.38408756 -51.99512482]
[-25.19029999 -63.34581757]
[-34.99650955 -74.69651031]
[-45.07551956 -85.80567932]
[-55.42137527 -96.66676331]
[-65.76723480 -107.52785492]
[-85.33774567 -112.32185364]
[-89.09982300 -131.28010559]
[-99.79196167 -141.80047607]
[-110.48409271 -152.32084656]
[-125.74759674 -156.48449707]
[-129.39309692 -170.92610168]
[-140.08522034 -181.44647217]
[-150.77735901 -191.96684265]
[-161.46949768 -202.48721313]
[-172.24645996 -212.92066956]
[-183.10754395 -223.26652527]
[-193.96862793 -233.61239624]
[-204.82972717 -243.95825195]
[-220.15864563 -247.87419128]
[-224.03752136 -262.25485229]
[-234.89860535 -272.60070801]
[-245.75968933 -282.94656372]
[-256.62078857 -293.29241943]
[-267.48187256 -303.63827515]
[-283.12084961 -310.18490601]
[-281.15936279 -327.02502441]
[-264.43438721 -329.80197144]
[-257.13601685 -314.49935913]
[-246.27493286 -304.15350342]
[-235.41383362 -293.80764771]
[-224.55274963 -283.46179199]
[-213.69166565 -273.11593628]
[-199.13958740 -269.94000244]
[-194.48387146 -254.81933594]
[-183.62277222 -244.47348022]
[-172.76168823 -234.12762451]
[-161.90060425 -223.78176880]
[-154.87896729 -221.44136047]
[-150.94911194 -213.17935181]
[-140.25698853 -202.65898132]
[-129.56484985 -192.13859558]
[-118.87271881 -181.61822510]
[-104.37398529 -178.20706177]
[-99.96372223 -163.01298523]
[-89.27158356 -152.49261475]
[-78.57945251 -141.97222900]
[-68.39282227 -142.97302246]
[-59.14643860 -138.09242249]
[-54.01391983 -128.73204041]
[-54.90614319 -117.87371063]
[-44.56028748 -107.01261902]
[-34.21442795 -96.15153503]
[-30.70329666 -95.70519257]
[-27.23611069 -93.52732849]
[-24.62829208 -89.65827179]
[-23.64581871 -84.50272369]
[-13.83960724 -73.15203094]
[-4.03339577 -61.80133820]
[10.14194012 -57.22868729]
[13.30885315 -41.72768021]
[23.11506462 -30.37698746]
[32.92127609 -19.02629471]
[47.09661102 -14.45364571]
[50.26352692 1.04736209]
[60.06973648 12.39805412]
[69.87594604 23.74874687]
[79.68215942 35.09943771]
[89.48837280 46.45013046]
[99.29458618 57.80082321]
[114.09833527 60.21928787]
[127.00698853 52.57948303]
[139.91564941 44.93968201]
[152.82431030 37.29988098]
[165.73295593 29.66007805]
[178.64161682 22.02027512]
[191.55027771 14.38047218]
[199.48562622 0.69322288]
[214.37918091 0.86951023]
[227.28784180 -6.77029228]
[240.19650269 -14.41009426]
[245.55798340 -29.53074265]
[260.76904297 -34.63012314]
[274.16101074 -25.79642677]
[275.46075439 -9.80610943]
[263.67120361 1.07442474]
[247.83630371 -1.50143790]
[234.92764282 6.13836432]
[222.01898193 13.77816677]
[215.00695801 26.91896629]
[199.19007874 27.28912926]
[186.28141785 34.92893219]
[173.37275696 42.56873322]
[160.46411133 50.20853806]
[147.55545044 57.84833908]
[134.64678955 65.48814392]
[121.73813629 73.12794495]
[146.24569702 85.66369629]
[159.68041992 117.77075958]
[174.60966492 119.22590637]
[186.65567017 108.99509430]
[202.40074158 110.36187744]
[212.50363159 122.51536560]
[210.97045898 138.24511719]
[198.71083069 148.21893311]
[182.99816895 146.51954651]
[173.15452576 134.15516663]
[158.22526550 132.70001221]
[154.56326294 139.24520874]
[162.23814392 152.13304138]
[147.23924255 152.33561707]
[143.57722473 158.88082886]
[152.62814331 170.84246826]
[161.67906189 182.80410767]
[170.72998047 194.76574707]
[179.78089905 206.72738647]
[188.83181763 218.68904114]
[197.88273621 230.65068054]
[206.93365479 242.61231995]
[215.98457336 254.57395935]
[230.48158264 260.91015625]
[231.99108887 275.72808838]
[241.04200745 287.68972778]
[256.44744873 289.99404907]
[265.45596313 302.25378418]
[263.16421509 316.92633057]
[272.21514893 328.88796997]
[286.59399414 337.87042236]
[281.94302368 354.17395020]
[264.98913574 354.21801758]
[260.25350952 337.93887329]
[251.20257568 325.97723389]
[236.45956421 324.19424438]
[227.11024475 312.19238281]
[229.08036804 296.74063110]
[220.02944946 284.77899170]
[206.17982483 279.29837036]
[204.02293396 263.62487793]
[194.97201538 251.66323853]
[185.92109680 239.70159912]
[176.87017822 227.73995972]
[167.81925964 215.77830505]
[158.76834106 203.81666565]
[149.71742249 191.85502625]
[140.66650391 179.89338684]
[131.61558533 167.93174744]
[124.23426056 169.26068115]
[119.15501404 183.37454224]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 17]
[2 16]
[3 15]
[4 14]
[22 32]
[23 31]
[24 30]
[35 115]
[36 114]
[37 113]
[38 112]
[39 111]
[40 110]
[42 108]
[43 107]
[44 106]
[46 104]
[47 103]
[48 102]
[49 98]
[50 97]
[51 96]
[53 92]
[54 91]
[55 90]
[57 88]
[58 87]
[59 86]
[60 85]
[61 83]
[62 82]
[63 81]
[64 80]
[66 78]
[67 77]
[68 76]
[69 75]
[70 74]
[116 142]
[117 141]
[118 140]
[119 139]
[120 138]
[121 137]
[122 136]
[124 134]
[125 133]
[126 132]
[144 153]
[145 152]
[157 191]
[158 190]
[159 189]
[160 188]
[161 187]
[162 186]
[163 185]
[164 184]
[165 183]
[167 181]
[168 180]
[171 177]
[172 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
