%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:11:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUUCAGGUCUCCAUGGAGGCGGCUUCUCCUAGCAACUCGACGGGCGUUGAGCGGAGCCGCUGACCUGAUGGACGCCGACAGCCUCCUGCUGUCUCUGGAGCUGGCGUCCGGCAGUGGGCAGGGCCUCAGCCCGGACCGUCGGGCCUCGCUGCUCACGUCUCUUAUGC\
) } def
/len { sequence length } bind def

/coor [
[62.47369003 157.12518311]
[61.28448486 142.17239380]
[66.08335114 127.96074677]
[76.09380341 116.78977203]
[89.69862366 110.46639252]
[74.95403290 113.22263336]
[60.20943451 115.97888184]
[45.46483612 118.73512268]
[30.72023964 121.49136353]
[15.97564411 124.24760437]
[1.23104727 127.00385284]
[13.97551823 134.91450500]
[19.76828766 148.75082397]
[16.46114731 163.38171387]
[5.28052759 173.38139343]
[-9.62731743 175.04156494]
[-22.73391342 167.74656677]
[-29.17877388 154.20169067]
[-26.57186127 139.42994690]
[-15.87880993 128.90879822]
[-30.86856651 129.46307373]
[-45.85832214 130.01734924]
[-60.84807587 130.57160950]
[-75.83783722 131.12588501]
[-90.82759094 131.68016052]
[-105.81734467 132.23443604]
[-120.80709839 132.78871155]
[-135.79685974 133.34297180]
[-124.57201385 143.29299927]
[-120.13426208 157.62152100]
[-123.77026367 172.17416382]
[-134.42581177 182.73158264]
[-149.01145935 186.23281860]
[-163.29830933 181.66270447]
[-173.14407349 170.34629822]
[-175.69409180 155.56465149]
[-170.20904541 141.60348511]
[-158.28149414 132.51156616]
[-173.18937683 130.85177612]
[-188.09725952 129.19198608]
[-203.00515747 127.53219604]
[-217.91304016 125.87240601]
[-232.82092285 124.21261597]
[-247.61788940 131.28240967]
[-260.98403931 121.78093719]
[-259.16943359 105.48249054]
[-244.04077148 99.15352631]
[-231.16113281 109.30473328]
[-216.25325012 110.96452332]
[-201.34536743 112.62431335]
[-186.43746948 114.28410339]
[-171.52958679 115.94389343]
[-156.62170410 117.60368347]
[-147.03498840 113.19555664]
[-136.35113525 118.35322571]
[-121.36137390 117.79895020]
[-106.37162018 117.24467468]
[-91.38185883 116.69040680]
[-76.39210510 116.13613129]
[-61.40235138 115.58186340]
[-46.41259384 115.02758789]
[-31.42283821 114.47331238]
[-16.43308258 113.91904449]
[-1.52519548 112.25925446]
[13.21940136 109.50301361]
[27.96399689 106.74676514]
[42.70859528 103.99052429]
[57.45318985 101.23428345]
[72.19778442 98.47804260]
[86.94238281 95.72179413]
[88.71551514 87.88529968]
[95.28837585 81.21006775]
[98.85739899 66.64085388]
[102.42642975 52.07164001]
[105.99546051 37.50242233]
[109.56448364 22.93320847]
[113.13351440 8.36399364]
[116.70254517 -6.20522213]
[119.04905701 -21.02054787]
[120.15684509 -35.97958374]
[121.26463318 -50.93862152]
[122.37242126 -65.89765930]
[123.48020935 -80.85669708]
[124.58799744 -95.81573486]
[115.24382019 -108.85666656]
[119.75209045 -124.25325775]
[134.65444946 -130.19456482]
[148.51908875 -122.12292480]
[150.71023560 -106.23020935]
[139.54704285 -94.70794678]
[138.43925476 -79.74890900]
[137.33146667 -64.78987122]
[136.22367859 -49.83083344]
[135.11589050 -34.87179565]
[134.00810242 -19.91275978]
[144.42680359 -30.70398331]
[158.99491882 -34.27748871]
[173.22462463 -29.53242683]
[182.73233032 -17.93055534]
[184.58912659 -3.04592085]
[178.22300720 10.53614235]
[165.59509277 18.63157082]
[150.59553528 18.74650192]
[137.84506226 10.84553146]
[131.27175903 -2.63619447]
[127.70272827 11.93302155]
[124.13370514 26.50223732]
[120.56467438 41.07145309]
[116.99564362 55.64066696]
[113.42662048 70.20988464]
[109.85758972 84.77909851]
[117.03526306 97.95031738]
[131.21302795 102.84839630]
[145.39077759 107.74647522]
[154.56411743 107.59430695]
[159.78382874 112.86828613]
[173.86865234 118.02751923]
[187.95347595 123.18675232]
[202.03829956 128.34597778]
[216.12312317 133.50521851]
[230.20794678 138.66444397]
[244.29278564 143.82368469]
[258.37759399 148.98292542]
[266.58456421 140.11380005]
[277.27862549 134.56266785]
[289.18609619 132.96421814]
[300.89770508 135.48393250]
[311.03530884 141.80128479]
[318.41421509 151.15029907]
[322.18145752 162.41239929]
[321.91442871 174.25016785]
[335.69174194 180.18193054]
[349.46905518 186.11370850]
[363.24633789 192.04547119]
[377.02365112 197.97724915]
[390.80096436 203.90901184]
[407.01586914 201.45770264]
[417.03335571 214.44160461]
[410.54827881 229.50401306]
[394.23196411 231.14999390]
[384.86920166 217.68630981]
[371.09188843 211.75454712]
[357.31457520 205.82278442]
[343.53726196 199.89100647]
[329.75997925 193.95924377]
[315.98266602 188.02748108]
[302.01641846 199.50610352]
[284.07861328 202.35569763]
[267.08496094 195.70863342]
[255.73628235 181.31161499]
[253.21836853 163.06774902]
[239.13354492 157.90850830]
[225.04872131 152.74928284]
[210.96389771 147.59004211]
[196.87907410 142.43081665]
[182.79425049 137.27157593]
[168.70941162 132.11233521]
[154.62458801 126.95310974]
[140.49269104 121.92423248]
[126.31494141 117.02615356]
[112.13718414 112.12807465]
[124.66031647 120.38465118]
[132.91694641 132.90776062]
[135.57109070 147.67108154]
[132.19329834 162.28581238]
[123.33012390 174.38722229]
[110.41566467 182.01721191]
[95.53957367 183.94122314]
[81.10887909 179.84793091]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 70]
[6 69]
[7 68]
[8 67]
[9 66]
[10 65]
[11 64]
[20 63]
[21 62]
[22 61]
[23 60]
[24 59]
[25 58]
[26 57]
[27 56]
[28 55]
[38 53]
[39 52]
[40 51]
[41 50]
[42 49]
[43 48]
[72 111]
[73 110]
[74 109]
[75 108]
[76 107]
[77 106]
[78 105]
[79 95]
[80 94]
[81 93]
[82 92]
[83 91]
[84 90]
[112 161]
[113 160]
[114 159]
[116 158]
[117 157]
[118 156]
[119 155]
[120 154]
[121 153]
[122 152]
[123 151]
[131 146]
[132 145]
[133 144]
[134 143]
[135 142]
[136 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
