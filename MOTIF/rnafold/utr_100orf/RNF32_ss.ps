%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:24:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGAAGAAUAGAAGGAAGGUGAUAGGAUGUGAUGAUAGAAUUUGUGAUAGCCAAGCAACAACUUUUCCUAAUUCGGCAUGUUAAAAAAUAAGGGUCACUCAUCUAAGAAAGAUAACUUGGCAGUCAAUGCAGUUGCUUUACAAGAUCACAUUUUACAUGAUCUUCAACUUCGAAAUC\
) } def
/len { sequence length } bind def

/coor [
[45.97636795 709.85028076]
[51.45411301 695.42816162]
[63.87304688 686.27532959]
[62.81496429 671.31274414]
[61.75687790 656.35009766]
[60.69879532 641.38745117]
[50.63773727 635.93353271]
[44.40594864 626.19201660]
[43.65665054 614.53179932]
[48.69274521 603.85559082]
[58.36230850 596.87762451]
[57.83293533 581.88696289]
[57.30356598 566.89630127]
[56.77419281 551.90563965]
[56.24481964 536.91497803]
[45.66947174 529.52288818]
[41.22512436 517.20251465]
[44.74924850 504.38586426]
[55.16879272 495.82232666]
[54.90406799 480.82467651]
[54.63933945 465.82699585]
[51.36763382 459.17459106]
[54.50463486 450.56286621]
[54.50463486 435.56286621]
[54.50463486 420.56286621]
[54.50463486 405.56286621]
[54.50463486 390.56286621]
[54.50463486 375.56286621]
[54.50463486 360.56286621]
[54.50463486 345.56286621]
[54.50463486 330.56286621]
[54.50463486 315.56286621]
[54.50463486 300.56286621]
[43.80090714 311.07144165]
[28.85893631 312.38958740]
[16.48073959 303.91726685]
[12.30122375 289.51132202]
[18.22302628 275.72973633]
[31.55037117 268.84628296]
[46.21627045 271.99450684]
[55.54497147 283.74301147]
[57.39344406 268.85733032]
[59.24192047 253.97166443]
[61.09039688 239.08598328]
[62.93887329 224.20031738]
[64.78734589 209.31465149]
[66.63582611 194.42898560]
[54.05802155 202.60203552]
[39.35187149 199.64752197]
[30.90658379 187.25086975]
[33.53982544 172.48381042]
[45.74944687 163.77030945]
[60.57039642 166.08102417]
[69.54827881 178.09896851]
[72.95979309 163.49206543]
[76.37130737 148.88516235]
[79.78282166 134.27825928]
[83.19433594 119.67135620]
[86.60585785 105.06446075]
[83.58219147 90.37236786]
[74.67996216 78.29965973]
[65.77773285 66.22695160]
[52.02256393 67.34793854]
[39.61145782 61.56460571]
[31.74793053 50.48795319]
[30.40301323 37.07949829]
[35.82214355 24.85983467]
[27.13436317 12.63189602]
[11.51184082 10.24185085]
[2.22252774 -2.54424429]
[4.77761030 -18.14062500]
[17.66120338 -27.29423714]
[33.22969818 -24.57440186]
[42.24658585 -11.59475327]
[39.36230469 3.94411659]
[48.05008316 16.17205620]
[64.44813538 15.81383801]
[77.97023010 25.38726616]
[83.18378448 41.28836060]
[77.85044098 57.32472229]
[86.75267029 69.39743042]
[95.65489960 81.47013855]
[103.14439392 81.07321167]
[94.96749878 68.49790192]
[101.76968384 55.12890244]
[116.74868011 54.33537674]
[124.92530060 66.91086578]
[118.12336731 80.27935791]
[125.61286163 79.88243866]
[133.18914795 66.93640137]
[140.76544189 53.99036789]
[148.34173584 41.04433823]
[148.01004028 22.64710045]
[163.55931091 14.53926945]
[170.90594482 1.46154296]
[178.25257874 -11.61618423]
[174.20692444 -26.65847015]
[181.84375000 -39.81649017]
[196.20919800 -43.58071136]
[203.55583191 -56.65843582]
[199.04527283 -71.80539703]
[206.63972473 -85.66541290]
[221.83352661 -90.01557922]
[235.61247253 -82.27501678]
[239.80175781 -67.03607178]
[231.91595459 -53.33973694]
[216.63356018 -49.31180191]
[209.28692627 -36.23407364]
[213.54568481 -22.00738716]
[206.28144836 -8.64005756]
[191.33030701 -4.26954794]
[183.98367310 8.80817890]
[176.63703918 21.88590622]
[179.60160828 33.63304520]
[173.56292725 44.59666824]
[161.28778076 48.62063217]
[153.71148682 61.56666183]
[146.13519287 74.51269531]
[138.55889893 87.45873260]
[147.88163757 99.20974731]
[162.21151733 94.77637482]
[176.54138184 90.34300232]
[185.26756287 76.88070679]
[201.24696350 75.45296478]
[212.22154236 87.15501404]
[209.77256775 103.01004028]
[195.77865601 110.85543060]
[180.97476196 104.67286682]
[166.64488220 109.10624695]
[152.31501770 113.53961945]
[120.86940002 123.32787323]
[101.21275330 108.47597504]
[97.80123901 123.08287811]
[94.38972473 137.68977356]
[90.97821045 152.29667664]
[87.56669617 166.90357971]
[84.15518188 181.51048279]
[81.52149200 196.27746582]
[79.67301941 211.16313171]
[77.82453918 226.04879761]
[75.97606659 240.93446350]
[74.12759399 255.82012939]
[72.27911377 270.70581055]
[70.43064117 285.59146118]
[69.50463104 300.56286621]
[69.50463104 315.56286621]
[69.50463104 330.56286621]
[69.50463104 345.56286621]
[69.50463104 360.56286621]
[69.50463104 375.56286621]
[69.50463104 390.56286621]
[69.50463104 405.56286621]
[69.50463104 420.56286621]
[69.50463104 435.56286621]
[69.50463104 450.56286621]
[69.63700104 465.56228638]
[69.90173340 480.55993652]
[70.16645813 495.55761719]
[82.96812439 507.45855713]
[83.21227264 524.59838867]
[71.23547363 536.38562012]
[71.76484680 551.37628174]
[72.29421997 566.36694336]
[72.82359314 581.35760498]
[73.35296631 596.34820557]
[87.69132233 608.69470215]
[88.47026062 627.28131104]
[75.66143036 640.32934570]
[76.71951294 655.29199219]
[77.77759552 670.25463867]
[78.83568573 685.21728516]
[92.41907501 692.53131104]
[99.87187958 706.03906250]
[98.81594849 721.43023682]
[89.58821106 733.79357910]
[75.13321686 739.18402100]
[60.06349564 735.88140869]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 171]
[4 170]
[5 169]
[6 168]
[11 165]
[12 164]
[13 163]
[14 162]
[15 161]
[19 158]
[20 157]
[21 156]
[23 155]
[24 154]
[25 153]
[26 152]
[27 151]
[28 150]
[29 149]
[30 148]
[31 147]
[32 146]
[33 145]
[41 144]
[42 143]
[43 142]
[44 141]
[45 140]
[46 139]
[47 138]
[54 137]
[55 136]
[56 135]
[57 134]
[58 133]
[59 132]
[60 82]
[61 81]
[62 80]
[67 76]
[68 75]
[89 119]
[90 118]
[91 117]
[92 116]
[94 113]
[95 112]
[96 111]
[99 108]
[100 107]
[120 130]
[121 129]
[122 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
