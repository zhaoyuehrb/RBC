%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:06:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCCCAGCCCUGUGCCCCAAAGCACCUGGAGCAUAUAGCCUUGCAGAACUUCUACUUGCCUGCCUCCCUGCCUCUGGCCAUGGCCUGCCGGUGCCUCAGCUUCCUUCUGAUGGGGACCUUCCUGUCAGUUUCCCAGACAGUCCUGGCCCAGCUGGAUGCACUGCUGGUCUUCCCAGGCC\
) } def
/len { sequence length } bind def

/coor [
[149.06892395 127.66482544]
[140.66006470 138.98539734]
[129.70295715 147.86267090]
[116.88431549 153.74031067]
[103.00750732 156.24993896]
[88.94220734 155.23428345]
[75.56992340 150.75698853]
[63.72871399 143.09866333]
[52.62811661 153.18710327]
[51.71643448 168.73724365]
[40.31513596 178.81022644]
[25.49608231 177.84524536]
[14.39548492 187.93370056]
[3.29488778 198.02214050]
[-7.80570936 208.11059570]
[-18.90630722 218.19903564]
[-23.91516113 233.20643616]
[-38.53767014 236.04042053]
[-49.63826752 246.12886047]
[-60.73886490 256.21731567]
[-59.94004440 271.83447266]
[-69.40782928 284.28015137]
[-84.67182159 287.67788696]
[-98.52482605 280.42337036]
[-104.42588806 265.94195557]
[-99.58869934 251.07130432]
[-86.29722595 242.83293152]
[-70.82730865 245.11671448]
[-59.72671509 235.02825928]
[-48.62611771 224.93981934]
[-44.41125107 210.65400696]
[-28.99475288 207.09843445]
[-17.89415550 197.00999451]
[-6.79355812 186.92153931]
[4.30703878 176.83309937]
[15.40763569 166.74465942]
[15.85957050 151.90109253]
[26.97344017 141.51184082]
[42.53966904 142.08651733]
[53.64026642 131.99806213]
[48.35054016 122.48187256]
[44.99031067 112.12580872]
[43.68510437 101.31675720]
[44.48368454 90.45851135]
[30.17034149 85.97206879]
[15.85699558 81.48563385]
[1.54364991 76.99919128]
[-8.49638271 88.44985199]
[-22.32852936 94.82100677]
[-37.55628586 95.00881195]
[-51.54135513 88.98073578]
[-61.86073685 77.78116608]
[-66.72653198 63.35050964]
[-65.29572296 48.18895721]
[-57.81619644 34.92334366]
[-45.58382416 25.85201073]
[-30.71794701 22.54662895]
[-15.79416370 25.57987022]
[-3.39810920 34.42620850]
[4.32252407 47.55296326]
[6.03008986 62.68584824]
[20.34343529 67.17228699]
[34.65678024 71.65872955]
[48.97012711 76.14516449]
[58.83090591 61.55254364]
[72.71608734 50.71826935]
[89.26834106 44.70142365]
[106.86965179 44.09017181]
[123.79943085 48.94426346]
[138.40274048 58.78919983]
[149.25209045 72.66260529]
[163.21971130 67.19403076]
[177.18734741 61.72546005]
[191.15498352 56.25688934]
[195.60188293 51.30564880]
[201.06401062 49.61764526]
[205.70349121 50.85018158]
[219.85249329 45.86967468]
[222.80429077 32.39012146]
[231.96369934 22.21472549]
[244.85401917 17.93475151]
[258.06805420 20.56862259]
[268.16848755 29.32196808]
[282.40182495 24.58778000]
[296.63513184 19.85359383]
[310.86846924 15.11940765]
[321.52130127 3.42206883]
[336.04003906 6.74701643]
[350.27334595 2.01282978]
[357.45208740 -3.68003345]
[364.79498291 -2.67767978]
[379.10833740 -7.16411972]
[393.42166138 -11.65055943]
[407.73501587 -16.13699913]
[422.04837036 -20.62343979]
[434.17684937 -34.46260452]
[451.13778687 -30.00266457]
[465.37109375 -34.73685074]
[479.60443115 -39.47103882]
[493.83773804 -44.20522308]
[508.07107544 -48.93941116]
[522.30438232 -53.67359543]
[521.93701172 -67.58480835]
[527.14904785 -81.15863800]
[537.58764648 -92.15843964]
[552.00885010 -98.58676910]
[568.41662598 -99.03624725]
[584.33770752 -92.96592712]
[596.72784424 -101.42085266]
[609.11791992 -109.87577057]
[621.50799561 -118.33069611]
[633.89807129 -126.78561401]
[646.28814697 -135.24053955]
[658.67828369 -143.69546509]
[671.06835938 -152.15039062]
[683.45843506 -160.60530090]
[690.07617188 -175.60987854]
[706.40643311 -177.11180115]
[715.64996338 -163.56600952]
[708.29791260 -148.90725708]
[691.91333008 -148.21520996]
[679.52325439 -139.76029968]
[667.13317871 -131.30537415]
[654.74310303 -122.85044861]
[642.35302734 -114.39553070]
[629.96289062 -105.94060516]
[617.57281494 -97.48568726]
[605.18273926 -89.03076172]
[592.79266357 -80.57584381]
[594.40710449 -73.25167084]
[609.05554199 -76.48038483]
[612.28399658 -61.83194351]
[597.63604736 -58.60332870]
[599.25054932 -51.27915573]
[614.04705811 -48.81699371]
[628.84362793 -46.35483551]
[643.64019775 -43.89267349]
[656.35095215 -53.28480911]
[671.96740723 -50.85559845]
[681.22460938 -38.04625320]
[678.63043213 -22.45632935]
[665.72393799 -13.33504963]
[650.16229248 -16.09391022]
[641.17797852 -29.09612846]
[626.38146973 -31.55828857]
[611.58489990 -34.02045059]
[596.78839111 -36.48260880]
[579.50616455 -21.37909698]
[558.18536377 -17.45208168]
[539.04772949 -24.53978920]
[527.03857422 -39.44027328]
[512.80523682 -34.70608902]
[498.57192993 -29.97190094]
[484.33862305 -25.23771477]
[470.10528564 -20.50352859]
[455.87197876 -15.76934147]
[450.16452026 -5.08474493]
[438.32369995 -1.03378189]
[426.53479004 -6.31009436]
[412.22146606 -1.82365429]
[397.90811157 2.66278577]
[383.59475708 7.14922571]
[369.28143311 11.63566589]
[355.00753784 16.24615288]
[340.77423096 20.98033905]
[331.13946533 32.33905792]
[315.60263062 29.35272980]
[301.36932373 34.08691788]
[287.13598633 38.82110214]
[272.90267944 43.55529022]
[268.45111084 59.34313202]
[255.34100342 69.47584534]
[238.60887146 69.81085968]
[224.83300781 60.01868439]
[210.68399048 64.99919128]
[196.62355042 70.22451782]
[182.65591431 75.69309235]
[168.68829346 81.16166687]
[154.72065735 86.63023376]
[156.32664490 100.64041138]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 40]
[9 39]
[12 36]
[13 35]
[14 34]
[15 33]
[16 32]
[18 30]
[19 29]
[20 28]
[44 64]
[45 63]
[46 62]
[47 61]
[71 179]
[72 178]
[73 177]
[74 176]
[77 175]
[78 174]
[83 170]
[84 169]
[85 168]
[86 167]
[88 165]
[89 164]
[91 163]
[92 162]
[93 161]
[94 160]
[95 159]
[97 156]
[98 155]
[99 154]
[100 153]
[101 152]
[102 151]
[108 129]
[109 128]
[110 127]
[111 126]
[112 125]
[113 124]
[114 123]
[115 122]
[116 121]
[134 147]
[135 146]
[136 145]
[137 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
