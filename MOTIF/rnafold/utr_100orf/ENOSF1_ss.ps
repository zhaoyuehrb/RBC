%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:18:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGCCCUCCCGCCGCGCGCUCGGGAUCCCGACCAGUCCUGACCGCACGGGGGCCGCGGCCACGGGGCGCAGGGGCCAUGGUGCGCGGCAGGAUCUCCCGGCUCUCGGUCCGGGACGUGCGCUUCCCCACGUCGCUUGGGGGCCACGGCGCGGACGCCAUGGUAAGCGCGGACGCCA\
) } def
/len { sequence length } bind def

/coor [
[74.66475677 232.15475464]
[74.55291748 216.35086060]
[85.70821381 205.15554810]
[85.44348907 190.15788269]
[77.48278046 177.56915283]
[84.97531891 163.63456726]
[84.71059418 148.63690186]
[75.18190765 137.05226135]
[60.51707458 133.89906311]
[45.85224152 130.74586487]
[30.73394394 135.40930176]
[19.91753578 125.16945648]
[5.25270081 122.01626587]
[-9.41213322 118.86306763]
[-24.07696724 115.70987701]
[-38.74180222 112.55667877]
[-53.40663528 109.40348816]
[-68.07147217 106.25028992]
[-82.73630524 103.09709930]
[-97.40113831 99.94390106]
[-112.06597137 96.79071045]
[-125.24050903 105.10150146]
[-140.06782532 101.69480896]
[-147.90969849 89.08368683]
[-162.57453918 85.93048859]
[-171.65328979 87.18709564]
[-177.46929932 82.59007263]
[-192.07620239 79.17855835]
[-206.68310547 75.76704407]
[-221.28999329 72.35552979]
[-229.61035156 81.73110199]
[-241.06579590 86.63982391]
[-253.44863892 86.20269012]
[-264.40084839 80.56458282]
[-271.86315918 70.85489655]
[-274.46197510 58.96186066]
[-288.93939209 55.03697205]
[-303.41680908 51.11208344]
[-317.89419556 47.18719482]
[-332.37161255 43.26230621]
[-346.84899902 39.33741760]
[-366.05514526 45.39474106]
[-379.12249756 31.16604996]
[-393.72940063 27.75453568]
[-408.33630371 24.34301949]
[-422.94320679 20.93150520]
[-433.94515991 31.74633026]
[-449.05218506 34.87385941]
[-463.44366455 29.31610870]
[-472.52734375 16.84653664]
[-473.40466309 1.44413805]
[-465.79565430 -11.97623730]
[-452.12832642 -19.13219643]
[-436.76388550 -17.74029922]
[-424.60504150 -8.24469566]
[-419.53167725 6.32460356]
[-404.92477417 9.73611832]
[-390.31787109 13.14763355]
[-375.71096802 16.55914879]
[-367.51937866 10.38948917]
[-357.06387329 9.74993992]
[-347.80020142 15.09476662]
[-342.92413330 24.86001205]
[-328.44671631 28.78490067]
[-313.96929932 32.70978928]
[-299.49191284 36.63467789]
[-285.01449585 40.55956650]
[-270.53710938 44.48445511]
[-257.33740234 32.78826141]
[-239.60501099 31.32126999]
[-224.39686584 40.85591507]
[-217.87847900 57.74863052]
[-203.27157593 61.16014481]
[-188.66468811 64.57165527]
[-174.05778503 67.98317719]
[-159.42134094 71.26565552]
[-144.75651550 74.41885376]
[-132.42411804 66.14554596]
[-117.50696564 69.13442993]
[-108.91278076 82.12587738]
[-94.24794769 85.27906799]
[-79.58311462 88.43226624]
[-64.91827393 91.58545685]
[-50.25344086 94.73864746]
[-35.58860779 97.89184570]
[-20.92377281 101.04503632]
[-6.25893927 104.19823456]
[8.40589523 107.35142517]
[23.07073021 110.50462341]
[37.14009857 105.61564636]
[49.00543594 116.08103180]
[63.67026901 119.23423004]
[78.33510590 122.38742065]
[71.25489044 97.74938202]
[84.75280762 78.31073761]
[106.38753510 76.66704559]
[114.63835907 64.14011383]
[122.88918304 51.61318970]
[131.14001465 39.08626175]
[139.39083862 26.55933571]
[147.64166260 14.03240967]
[155.78161621 1.43316102]
[163.81007385 -11.23742867]
[167.18028259 -27.85302544]
[184.07949829 -29.21417999]
[190.06562805 -13.35219479]
[176.48066711 -3.20897007]
[168.45220947 9.46161938]
[167.52531433 16.81684685]
[160.16857910 22.28323555]
[151.91775513 34.81016159]
[143.66693115 47.33708954]
[135.41610718 59.86401367]
[127.16528320 72.39093781]
[118.91445923 84.91786957]
[125.05549622 93.31457520]
[127.35510254 104.18035889]
[124.85722351 115.72448730]
[117.44552612 125.81119537]
[131.42698669 131.24433899]
[145.40843201 136.67749023]
[159.38987732 142.11062622]
[173.37133789 147.54377747]
[187.35278320 152.97691345]
[202.11976624 155.61059570]
[217.11743164 155.34587097]
[232.11508179 155.08114624]
[247.11274719 154.81642151]
[262.11041260 154.55169678]
[271.80780029 142.28405762]
[287.13226318 139.17050171]
[300.84811401 146.68113708]
[306.47909546 161.26969910]
[301.36648560 176.04789734]
[287.92422485 184.03791809]
[272.49942017 181.46711731]
[262.37515259 169.54936218]
[247.37747192 169.81408691]
[232.37982178 170.07881165]
[217.38215637 170.34353638]
[202.38449097 170.60826111]
[197.57334900 184.81576538]
[209.32435608 194.13850403]
[221.07537842 203.46125793]
[232.82638550 212.78401184]
[248.44631958 215.29963684]
[253.60801697 229.27125549]
[265.35903931 238.59399414]
[277.11004639 247.91674805]
[288.86105347 257.23950195]
[305.15362549 259.10620117]
[311.43417358 274.25503540]
[301.24182129 287.10214233]
[285.06161499 284.43154907]
[279.53829956 268.99050903]
[267.78729248 259.66775513]
[256.03628540 250.34501648]
[244.28526306 241.02226257]
[229.50584412 239.17346191]
[223.50364685 224.53501892]
[211.75262451 215.21226501]
[200.00160217 205.88952637]
[188.25059509 196.56677246]
[181.91963196 166.95835876]
[167.93818665 161.52522278]
[153.95674133 156.09207153]
[139.97528076 150.65893555]
[125.99383545 145.22578430]
[112.01238251 139.79264832]
[99.70825958 148.37217712]
[99.97298431 163.36984253]
[107.95262909 177.03131104]
[100.44115448 189.89315796]
[100.70587921 204.89082336]
[112.24932861 215.68547058]
[112.69529724 231.48345947]
[101.77921295 242.91213989]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 174]
[4 173]
[6 171]
[7 170]
[8 93]
[9 92]
[10 91]
[12 89]
[13 88]
[14 87]
[15 86]
[16 85]
[17 84]
[18 83]
[19 82]
[20 81]
[21 80]
[24 77]
[25 76]
[27 75]
[28 74]
[29 73]
[30 72]
[36 68]
[37 67]
[38 66]
[39 65]
[40 64]
[41 63]
[43 59]
[44 58]
[45 57]
[46 56]
[96 115]
[97 114]
[98 113]
[99 112]
[100 111]
[101 110]
[102 108]
[103 107]
[119 169]
[120 168]
[121 167]
[122 166]
[123 165]
[124 164]
[125 141]
[126 140]
[127 139]
[128 138]
[129 137]
[142 163]
[143 162]
[144 161]
[145 160]
[147 158]
[148 157]
[149 156]
[150 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
