%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:13:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCAGAAGUCCUGUAGGGAGAUGGGCAGUUACCUUCUCUCCGUCUCUCUCUCGGGGACUCUAUUUGUGGCUGGUGGAGCUGUCUUAAACGAAGAGAACCAUGAGCAAUGAAUCUUGUUUACCUUAUUACACAGCCCACAGCUACUCUUCAAUGAGUGCGUUCAAAACCUCCAUGGGGGACCUGCAACGACAAUUGUACA\
) } def
/len { sequence length } bind def

/coor [
[88.14437103 146.99160767]
[80.75708008 144.48007202]
[73.86856079 140.81562805]
[67.65737152 136.09323120]
[62.28449631 130.43530273]
[49.29411697 137.93530273]
[36.30373383 145.43530273]
[30.43054390 152.44207764]
[23.05119324 152.94918823]
[9.94517994 160.24525452]
[-3.16083288 167.54130554]
[-16.26684570 174.83735657]
[-29.37285995 182.13342285]
[-33.85600281 200.53388977]
[-50.08275986 209.66511536]
[-67.52911377 204.14001465]
[-80.40068817 211.84213257]
[-93.27227020 219.54425049]
[-106.14384460 227.24635315]
[-119.01541901 234.94847107]
[-131.88699341 242.65058899]
[-144.75857544 250.35269165]
[-157.63014221 258.05480957]
[-170.50172424 265.75692749]
[-183.37329102 273.45904541]
[-196.24487305 281.16113281]
[-204.11396790 294.88659668]
[-219.00820923 294.78231812]
[-231.87977600 302.48440552]
[-234.17538452 317.95257568]
[-245.91088867 328.28756714]
[-261.54516602 328.60949707]
[-273.69616699 318.76638794]
[-276.62658691 303.40582275]
[-268.95272827 289.78060913]
[-254.29800415 284.32415771]
[-239.58189392 289.61285400]
[-226.71031189 281.91073608]
[-219.76188660 268.73617554]
[-203.94699097 268.28958130]
[-191.07540894 260.58746338]
[-178.20382690 252.88534546]
[-165.33226013 245.18322754]
[-152.46067810 237.48112488]
[-139.58911133 229.77900696]
[-126.71752930 222.07688904]
[-113.84595490 214.37478638]
[-100.97438049 206.67266846]
[-88.10280609 198.97055054]
[-75.23123169 191.26844788]
[-74.91378021 179.85437012]
[-69.06213379 169.90988159]
[-59.03205109 163.96734619]
[-47.25940323 163.60452271]
[-36.66891479 169.02740479]
[-23.56290054 161.73135376]
[-10.45688820 154.43528748]
[2.64912534 147.13923645]
[15.75513840 139.84318542]
[28.80373383 132.44493103]
[41.79411697 124.94493103]
[54.78449631 117.44493103]
[51.54861450 98.89061737]
[55.63032913 80.50386047]
[66.41316986 65.06159210]
[82.26862335 54.89605713]
[100.80203247 51.54255295]
[103.36826324 36.76370239]
[105.93449402 21.98485184]
[108.50073242 7.20599985]
[111.06696320 -7.57285166]
[113.63319397 -22.35170364]
[116.19943237 -37.13055420]
[114.58369446 -46.12936783]
[118.92298889 -52.11956787]
[121.71989441 -66.85650635]
[124.51679230 -81.59344482]
[123.04190063 -90.61640930]
[127.47428894 -96.53806305]
[130.50117493 -111.22948456]
[133.52806091 -125.92090607]
[136.55494690 -140.61233521]
[139.58183289 -155.30375671]
[125.17474365 -173.31831360]
[128.73822021 -195.83692932]
[147.55557251 -208.22787476]
[148.96020508 -223.16195679]
[150.36482239 -238.09605408]
[151.76943970 -253.03013611]
[153.17407227 -267.96423340]
[150.86073303 -276.80944824]
[154.71913147 -283.12011719]
[156.35699463 -298.03042603]
[157.99484253 -312.94073486]
[159.63270569 -327.85104370]
[150.52478027 -335.50689697]
[146.29029846 -346.49761963]
[147.87448120 -358.04779053]
[154.76855469 -367.30017090]
[165.16479492 -372.02246094]
[167.26786804 -386.87429810]
[169.37094116 -401.72613525]
[160.91737366 -415.36126709]
[166.44255066 -430.42288208]
[181.70800781 -435.35696411]
[195.00340271 -426.37854004]
[196.12963867 -410.37509155]
[184.22277832 -399.62304688]
[182.11970520 -384.77120972]
[180.01663208 -369.91937256]
[191.87945557 -355.98471069]
[189.76139832 -337.48602295]
[174.54301453 -326.21319580]
[172.90516663 -311.30288696]
[171.26730347 -296.39257812]
[169.62944031 -281.48226929]
[168.10815430 -266.55960083]
[166.70353699 -251.62551880]
[165.29891968 -236.69142151]
[163.89428711 -221.75733948]
[162.48966980 -206.82324219]
[169.11853027 -203.28594971]
[174.57627869 -198.08279419]
[178.45358276 -191.58406067]
[180.45431519 -184.25790405]
[180.41812134 -176.63659668]
[178.33322144 -169.27790833]
[174.33828735 -162.72424316]
[168.71331787 -157.46267700]
[161.86003113 -153.88877869]
[154.27325439 -152.27687073]
[151.24636841 -137.58544922]
[148.21948242 -122.89402008]
[145.19259644 -108.20259857]
[142.16571045 -93.51117706]
[139.25372314 -78.79654694]
[136.45683289 -64.05960846]
[133.65992737 -49.32266617]
[130.97828674 -34.56431961]
[128.41204834 -19.78547096]
[125.84581757 -5.00661850]
[123.27957916 9.77223301]
[120.71334839 24.55108452]
[118.14711761 39.32993698]
[115.58087921 54.10878754]
[130.62564087 62.43888474]
[141.81430054 75.49833679]
[147.73808289 91.64282227]
[147.65112305 108.83956146]
[141.56436157 124.92330170]
[153.08010864 134.53515625]
[164.59585571 144.14700317]
[176.11160278 153.75885010]
[189.00953674 153.38156128]
[198.40412903 161.63111877]
[199.61569214 173.67193604]
[210.97979736 183.46258545]
[219.53137207 186.69677734]
[222.44346619 193.49617004]
[233.65318298 203.46324158]
[244.86288452 213.43031311]
[256.07257080 223.39738464]
[267.35983276 233.27655029]
[278.72393799 243.06719971]
[293.74798584 239.66354370]
[307.73190308 245.68870544]
[315.39596558 258.63964844]
[313.98132324 273.44290161]
[325.34542847 283.23355103]
[336.70956421 293.02423096]
[348.07366943 302.81488037]
[364.27734375 305.33938599]
[369.93969727 320.72998047]
[359.23580933 333.15408325]
[343.17691040 329.83087158]
[338.28302002 314.17898560]
[326.91888428 304.38833618]
[315.55477905 294.59768677]
[304.19067383 284.80700684]
[289.75958252 288.39605713]
[275.81735229 282.73226929]
[267.78970337 269.79354858]
[268.93328857 254.43132019]
[257.56918335 244.64065552]
[250.44396973 242.65487671]
[246.10551453 234.60708618]
[234.89581299 224.64001465]
[223.68611145 214.67294312]
[212.47639465 204.70587158]
[201.18914795 194.82670593]
[189.82502747 185.03604126]
[172.43544006 182.70191956]
[166.49974060 165.27459717]
[154.98400879 155.66275024]
[143.46826172 146.05088806]
[131.95251465 136.43904114]
[125.69088745 141.09434509]
[118.76335144 144.68449402]
[111.34946442 147.11642456]
[103.64141083 148.32708740]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 62]
[6 61]
[7 60]
[9 59]
[10 58]
[11 57]
[12 56]
[13 55]
[16 50]
[17 49]
[18 48]
[19 47]
[20 46]
[21 45]
[22 44]
[23 43]
[24 42]
[25 41]
[26 40]
[28 38]
[29 37]
[67 145]
[68 144]
[69 143]
[70 142]
[71 141]
[72 140]
[73 139]
[75 138]
[76 137]
[77 136]
[79 135]
[80 134]
[81 133]
[82 132]
[83 131]
[86 121]
[87 120]
[88 119]
[89 118]
[90 117]
[92 116]
[93 115]
[94 114]
[95 113]
[100 110]
[101 109]
[102 108]
[150 196]
[151 195]
[152 194]
[153 193]
[156 191]
[157 190]
[159 189]
[160 188]
[161 187]
[162 186]
[163 184]
[164 183]
[168 179]
[169 178]
[170 177]
[171 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
