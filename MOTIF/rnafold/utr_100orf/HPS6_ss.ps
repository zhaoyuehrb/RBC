%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:21:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGGAGACGGAAGUCUUGGCCCUGCUCCGCUCCCCCGAGAAUCGGGCCUCGCCCUGCUGGGCGGCUGGACCUGGGCAAAGCCUGGGCGCGCUCCCGCGCAGCGGCGCCAUGAAGCGCUCGGGGACUCUGCGGCUGCUCUCGGACCUGAGCGCCUUCGGCGGCGCGGCGCGGCUCCGGGAGCUGGUGGCCGGGGACUCAGCGGUCCGAG\
) } def
/len { sequence length } bind def

/coor [
[49.88374710 266.10012817]
[30.32875443 266.48675537]
[22.60210991 279.34359741]
[14.87546539 292.20046997]
[7.14882040 305.05734253]
[-0.57782453 317.91421509]
[-2.31648374 326.88327026]
[-8.51847076 330.90499878]
[-16.43749428 343.64428711]
[-24.35651779 356.38354492]
[-32.27553940 369.12283325]
[-34.14881516 378.06472778]
[-40.41055298 381.99282837]
[-48.52016830 394.61160278]
[-42.01801300 408.60180664]
[-44.13436508 423.88333130]
[-54.19389725 435.57986450]
[-68.98664856 439.95913696]
[-83.79231262 435.62371826]
[-93.88645172 423.95703125]
[-96.04805756 408.68185425]
[-89.58737946 394.67245483]
[-76.56598663 386.39916992]
[-61.13896942 386.50201416]
[-53.02935791 373.88320923]
[-45.01481247 361.20379639]
[-37.09579086 348.46453857]
[-29.17676735 335.72525024]
[-21.25774384 322.98599243]
[-13.43468857 310.18756104]
[-5.70804405 297.33068848]
[2.01860070 284.47381592]
[9.74524593 271.61697388]
[17.47188950 258.76010132]
[11.43452454 250.35914612]
[8.52605534 240.39125061]
[9.10241222 229.98541260]
[13.12330341 220.32910156]
[20.15391541 212.53271484]
[29.41179657 207.50190735]
[39.85388947 205.83245850]
[50.29403687 207.73976135]
[58.77928543 195.37042236]
[67.26454163 183.00108337]
[75.74978638 170.63174438]
[84.23503876 158.26240540]
[92.72029114 145.89306641]
[101.20554352 133.52372742]
[98.14128876 126.67826843]
[88.94853973 106.14187622]
[74.07080841 104.23056793]
[59.19307709 102.31925201]
[44.31534576 100.40794373]
[29.43761444 98.49662781]
[14.52337170 105.31552887]
[1.31958377 95.58969116]
[3.40917587 79.32421875]
[18.64255524 73.25163269]
[31.34892464 83.61890411]
[46.22665787 85.53021240]
[61.10438919 87.44152069]
[75.98211670 89.35283661]
[90.85984802 91.26414490]
[105.15331268 86.71475220]
[116.18917084 76.55552673]
[127.22502899 66.39630127]
[138.26087952 56.23707962]
[149.29673767 46.07785797]
[154.43807983 26.58713531]
[173.47048950 23.17834282]
[184.19599915 12.69198704]
[194.92149353 2.20563245]
[205.64698792 -8.28072262]
[216.37249756 -18.76707840]
[220.83100891 -33.94707108]
[235.34049988 -37.31215668]
[246.06599426 -47.79851151]
[250.61848450 -65.64031219]
[267.77542114 -69.32595825]
[278.34207153 -79.97234344]
[288.90875244 -90.61872864]
[299.39511108 -101.34422302]
[309.80053711 -112.14823151]
[313.80075073 -127.45539093]
[328.20254517 -131.25508118]
[338.60800171 -142.05909729]
[342.60821533 -157.36624146]
[357.00997925 -161.16593933]
[367.41543579 -171.96995544]
[352.59930420 -174.31124878]
[345.05825806 -187.27784729]
[350.35003662 -201.31340027]
[364.57464600 -206.07373047]
[377.24853516 -198.05049133]
[379.03128052 -183.15727234]
[390.21856689 -193.14947510]
[401.40588379 -203.14166260]
[412.59320068 -213.13386536]
[423.78051758 -223.12605286]
[428.91882324 -238.08963013]
[443.56524658 -240.79721069]
[454.75256348 -250.78941345]
[465.93988037 -260.78161621]
[471.07815552 -275.74517822]
[485.72460938 -278.45275879]
[496.91192627 -288.44497681]
[508.09924316 -298.43716431]
[519.28656006 -308.42935181]
[521.71490479 -314.58142090]
[526.21118164 -318.06030273]
[530.96356201 -318.54757690]
[542.44616699 -328.19897461]
[553.92883301 -337.85037231]
[565.41143799 -347.50180054]
[576.82116699 -357.23922729]
[588.15740967 -367.06213379]
[599.49365234 -376.88504028]
[610.82989502 -386.70794678]
[622.16613770 -396.53085327]
[633.50238037 -406.35379028]
[644.83862305 -416.17669678]
[656.17486572 -425.99960327]
[657.88134766 -430.93594360]
[660.99945068 -434.37893677]
[664.72357178 -436.04089355]
[668.25073242 -435.99572754]
[680.01824951 -445.29760742]
[691.78576660 -454.59951782]
[703.55328369 -463.90139771]
[709.58148193 -478.52917480]
[724.36413574 -480.35177612]
[736.13165283 -489.65365601]
[741.68231201 -505.08486938]
[757.86724854 -507.72677612]
[768.03680420 -494.86160278]
[761.72937012 -479.72396851]
[745.43353271 -477.88613892]
[733.66601562 -468.58422852]
[728.47955322 -454.62179565]
[712.85522461 -452.13388062]
[701.08764648 -442.83197021]
[689.32012939 -433.53009033]
[677.55261230 -424.22817993]
[665.99780273 -414.66336060]
[654.66156006 -404.84045410]
[643.32531738 -395.01751709]
[631.98907471 -385.19461060]
[620.65283203 -375.37170410]
[609.31658936 -365.54879761]
[597.98034668 -355.72589111]
[586.64410400 -345.90298462]
[583.64709473 -339.14596558]
[575.06280518 -336.01916504]
[563.58020020 -326.36776733]
[552.09759521 -316.71636963]
[540.61499023 -307.06494141]
[529.27874756 -297.24203491]
[518.09143066 -287.24984741]
[506.90411377 -277.25765991]
[495.71679688 -267.26544189]
[491.37872314 -253.01658630]
[475.93206787 -249.59429932]
[464.74475098 -239.60209656]
[453.55743408 -229.60990906]
[449.21936035 -215.36103821]
[433.77273560 -211.93873596]
[422.58541870 -201.94654846]
[411.39810181 -191.95434570]
[400.21078491 -181.96215820]
[389.02346802 -171.96995544]
[378.21945190 -161.56451416]
[367.81399536 -150.76049805]
[364.55807495 -136.22612000]
[349.41201782 -131.65364075]
[339.00656128 -120.84963989]
[335.75061035 -106.31526184]
[320.60455322 -101.74278259]
[310.19909668 -90.93877411]
[307.82290649 -83.93928528]
[299.55511475 -80.05205536]
[288.98846436 -69.40567017]
[278.42178345 -58.75928497]
[278.15338135 -46.66473770]
[269.43588257 -37.70851517]
[256.55236816 -37.07301331]
[245.82685852 -26.58665657]
[242.13549805 -12.15671635]
[226.85884094 -8.04157734]
[216.13334656 2.44477773]
[205.40785217 12.93113232]
[194.68234253 23.41748810]
[183.95684814 33.90384293]
[184.76106262 44.09231949]
[179.71784973 53.23313904]
[170.28147888 58.19059372]
[159.45596313 57.11371613]
[148.42010498 67.27294159]
[137.38424683 77.43215942]
[126.34838867 87.59138489]
[115.31253052 97.75061035]
[113.57488251 142.00898743]
[105.08963013 154.37832642]
[96.60437775 166.74766541]
[88.11912537 179.11698914]
[79.63387299 191.48632812]
[71.14862823 203.85566711]
[62.66337585 216.22500610]
[70.34123230 234.68354797]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 34]
[3 33]
[4 32]
[5 31]
[6 30]
[8 29]
[9 28]
[10 27]
[11 26]
[13 25]
[14 24]
[42 207]
[43 206]
[44 205]
[45 204]
[46 203]
[47 202]
[48 201]
[50 63]
[51 62]
[52 61]
[53 60]
[54 59]
[64 200]
[65 199]
[66 198]
[67 197]
[68 196]
[70 192]
[71 191]
[72 190]
[73 189]
[74 188]
[76 186]
[77 185]
[79 182]
[80 181]
[81 180]
[82 178]
[83 177]
[85 175]
[86 174]
[88 172]
[89 171]
[95 170]
[96 169]
[97 168]
[98 167]
[99 166]
[101 164]
[102 163]
[103 162]
[105 160]
[106 159]
[107 158]
[108 157]
[111 156]
[112 155]
[113 154]
[114 153]
[115 151]
[116 150]
[117 149]
[118 148]
[119 147]
[120 146]
[121 145]
[122 144]
[126 143]
[127 142]
[128 141]
[129 140]
[131 138]
[132 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
