%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:28:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGAGGCGGCUCCGGCGCCCGCUCUGCCCGCCGCUGGGUCCGACCGCGCUCGCCUUCCUUGCAGCCGCGCCUCGGCCCCAUGGACGCCCUGUGCGGUUCCGGGGAGCUCGGCUCCAAGUUCUGGGACUCCAACCUGUCUGUGCACACAGAAAACCCGGACCUCACUCCCUGCUUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[86.57274628 267.73193359]
[86.46553040 251.92800903]
[97.62409973 240.73597717]
[97.36376190 225.73823547]
[97.10342407 210.74049377]
[96.84307861 195.74275208]
[96.58274078 180.74501038]
[96.32240295 165.74726868]
[96.06205750 150.74952698]
[95.80171967 135.75178528]
[74.59902191 122.37974548]
[68.29174805 99.70188904]
[78.18762970 80.04117584]
[64.63301849 73.61681366]
[51.07839966 67.19245911]
[37.52378082 60.76810455]
[21.73956680 61.84936523]
[13.55249214 49.40665436]
[-0.00212503 42.98229599]
[-13.55674171 36.55794144]
[-27.16660118 30.25145721]
[-40.83067703 24.06332207]
[-54.49475479 17.87518692]
[-67.94892120 25.37796021]
[-83.06448364 23.54132843]
[-94.06999969 13.27767754]
[-96.88780975 -1.32362103]
[-110.55188751 -7.51175594]
[-122.54233551 -1.34095430]
[-135.70426941 -3.18442345]
[-145.25387573 -12.14549541]
[-147.85118103 -24.78222466]
[-161.40579224 -31.20658302]
[-174.96041870 -37.63093948]
[-184.08265686 -38.48390198]
[-188.69305420 -44.28622818]
[-202.13412476 -50.94487000]
[-215.57521057 -57.60351181]
[-229.01628113 -64.26215363]
[-244.81687927 -63.45500946]
[-252.78677368 -76.03794098]
[-266.22784424 -82.69658661]
[-279.66891479 -89.35522461]
[-293.10998535 -96.01387024]
[-311.44134521 -94.40617371]
[-320.60739136 -109.35768127]
[-334.16201782 -115.78204346]
[-347.71661377 -122.20639801]
[-361.27124023 -128.63075256]
[-374.88110352 -134.93724060]
[-388.54516602 -141.12536621]
[-397.68084717 -141.81988525]
[-402.39126587 -147.54132080]
[-415.94586182 -153.96566772]
[-430.08309937 -147.28189087]
[-445.19589233 -151.29901123]
[-454.14846802 -164.12030029]
[-452.71368408 -179.69192505]
[-441.56900024 -190.66143799]
[-425.97662354 -191.84938049]
[-413.29873657 -182.69482422]
[-409.52151489 -167.52029419]
[-395.96688843 -161.09593201]
[-382.35702515 -154.78944397]
[-368.69296265 -148.60131836]
[-361.28271484 -148.70632935]
[-354.84689331 -142.18537903]
[-341.29226685 -135.76101685]
[-327.73764038 -129.33665466]
[-314.18304443 -122.91230011]
[-302.67120361 -126.68231201]
[-291.31713867 -121.41912842]
[-286.45135498 -109.45494080]
[-273.01028442 -102.79630280]
[-259.56921387 -96.13765717]
[-246.12812805 -89.47901154]
[-231.28890991 -90.76243591]
[-222.35763550 -77.70323181]
[-208.91656494 -71.04458618]
[-195.47549438 -64.38594818]
[-182.03440857 -57.72730255]
[-168.53605652 -51.18555450]
[-154.98144531 -44.76119995]
[-141.42681885 -38.33684158]
[-125.85780334 -44.66421509]
[-110.21649933 -37.64744186]
[-104.36375427 -21.17583275]
[-90.69967651 -14.98769760]
[-77.86664581 -22.50110054]
[-62.89303589 -20.99942207]
[-51.54212952 -10.85002041]
[-48.30661774 4.21111012]
[-34.64254379 10.39924526]
[-20.97846603 16.58738136]
[-13.56822205 16.48236847]
[-7.13238525 23.00332260]
[6.42223167 29.42767906]
[19.97684860 35.85203552]
[34.79154587 34.31126404]
[43.94813919 47.21348572]
[57.50275421 53.63784409]
[71.05737305 60.06219864]
[84.61199188 66.48655701]
[99.23175812 63.13061523]
[108.62766266 51.43800735]
[118.02355957 39.74540329]
[127.41946411 28.05279541]
[136.81535339 16.36018753]
[142.02372742 0.22608471]
[158.96911621 0.76453829]
[163.14265442 17.19676018]
[148.50796509 25.75608826]
[139.11206055 37.44869614]
[129.71617126 49.14130402]
[120.32026672 60.83390808]
[110.92436218 72.52651215]
[127.40538025 82.01171112]
[135.98054504 101.10279846]
[150.77708435 103.56495667]
[165.66011047 98.19781494]
[176.94473267 107.91928101]
[191.74127197 110.38143921]
[206.53781128 112.84359741]
[221.33436584 115.30576324]
[236.13090515 117.76792145]
[250.92745972 120.23007965]
[254.99594116 112.85083008]
[260.67620850 106.64803314]
[267.64364624 101.96513367]
[275.50268555 99.05905151]
[283.80926514 98.08608246]
[292.09582520 99.09350586]
[299.89770508 102.01735687]
[306.77926636 106.68640137]
[312.35803223 112.83219910]
[316.32611084 120.10447693]
[318.46707153 128.09112549]
[318.66784668 136.34152222]
[332.98120117 140.82797241]
[347.29455566 145.31440735]
[361.60787964 149.80084229]
[375.92123413 154.28729248]
[391.79891968 150.18473816]
[403.09609985 162.07196045]
[398.19116211 177.72041321]
[382.12994385 181.03228760]
[371.43478394 168.60063171]
[357.12145996 164.11419678]
[342.80810547 159.62774658]
[328.49475098 155.14131165]
[314.18142700 150.65487671]
[297.84384155 165.47410583]
[275.75680542 167.54272461]
[256.73620605 155.88284302]
[248.46530151 135.02662659]
[233.66874695 132.56446838]
[218.87220764 130.10231018]
[204.07565308 127.64014435]
[189.27911377 125.17798615]
[174.48255920 122.71582031]
[160.65788269 128.25907898]
[148.31492615 118.36150360]
[133.51838684 115.89933777]
[127.83865356 120.79737091]
[142.00204468 125.73683929]
[144.80612183 140.47241211]
[133.44683838 150.26867676]
[119.28336334 145.32946777]
[116.47919464 130.59341431]
[110.79946136 135.49143982]
[111.05979919 150.48918152]
[111.32014465 165.48692322]
[111.58048248 180.48466492]
[111.84082031 195.48240662]
[112.10115814 210.48014832]
[112.36150360 225.47789001]
[112.62184143 240.47563171]
[124.16213226 251.27365112]
[124.60347748 267.07177734]
[113.68405151 278.49725342]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 177]
[4 176]
[5 175]
[6 174]
[7 173]
[8 172]
[9 171]
[10 170]
[13 103]
[14 102]
[15 101]
[16 100]
[18 98]
[19 97]
[20 96]
[21 94]
[22 93]
[23 92]
[27 88]
[28 87]
[32 84]
[33 83]
[34 82]
[36 81]
[37 80]
[38 79]
[39 78]
[41 76]
[42 75]
[43 74]
[44 73]
[46 70]
[47 69]
[48 68]
[49 67]
[50 65]
[51 64]
[53 63]
[54 62]
[104 116]
[105 115]
[106 114]
[107 113]
[108 112]
[118 163]
[119 162]
[121 160]
[122 159]
[123 158]
[124 157]
[125 156]
[126 155]
[138 151]
[139 150]
[140 149]
[141 148]
[142 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
