%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:59:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGACUUGGGCCUGGAGUUAGGCAUUUCCGCCCACGUGGGAAGCUAUGAGGUAUAGACCCGGCUAGAAUCUGAAGUGCGGGAGAGUGCUGGACCCUGAGUGAUGGGGCCGGCGCCAGCUGGAGAGCAGCUUCGCGGAGCGACUGGAGAGCCAGAGGUGAUGGAACCAGCCCUGGAAGGCACAGGCAAAGAGGGGAAGAAAG\
) } def
/len { sequence length } bind def

/coor [
[83.83993530 343.84561157]
[83.84365082 328.66784668]
[89.33360291 314.51776123]
[99.56732178 303.30902100]
[113.16077423 296.55755615]
[111.76308441 281.62283325]
[110.36539459 266.68807983]
[96.97160339 256.52267456]
[95.03237152 239.48040771]
[106.23214722 226.04675293]
[104.60236359 211.13554382]
[102.97257996 196.22434998]
[101.34279633 181.31315613]
[99.71302032 166.40196228]
[88.29635620 166.16484070]
[76.95593262 163.95651245]
[66.03337860 159.79702759]
[55.86550903 153.76577759]
[46.77397156 146.00048828]
[39.05514145 136.69425964]
[32.97056961 126.09091949]
[20.13849640 133.85867310]
[7.30642128 141.62641907]
[1.58039105 148.75283813]
[-5.78617048 149.41339111]
[-18.73749542 156.98063660]
[-31.68882179 164.54786682]
[-44.64014816 172.11511230]
[-57.59147263 179.68235779]
[-70.54280090 187.24960327]
[-83.49412537 194.81684875]
[-91.14554596 209.32159424]
[-107.54084015 209.67716980]
[-115.81392670 195.51779175]
[-107.45417023 181.40940857]
[-91.06136322 181.86552429]
[-78.11003876 174.29827881]
[-65.15871429 166.73103333]
[-52.20738983 159.16378784]
[-39.25606537 151.59654236]
[-26.30473900 144.02931213]
[-13.35341358 136.46206665]
[-0.46132326 128.79434204]
[12.37075138 121.02659607]
[25.20282745 113.25885010]
[25.37777519 105.76088715]
[10.39251518 106.42570496]
[-4.59274483 107.09051514]
[-19.57800484 107.75532532]
[-33.68367386 112.85729218]
[-45.86096573 104.09866333]
[-45.51105118 89.10274506]
[-32.93848419 80.92163849]
[-19.08616257 86.67594910]
[-4.14821672 88.03895569]
[10.78972816 89.40196228]
[25.72767448 90.76496887]
[25.90262222 83.26701355]
[13.44680309 74.90922546]
[0.99098343 66.55144501]
[-11.46483612 58.19366074]
[-23.98527145 49.93298721]
[-36.56956100 41.76992416]
[-49.15385437 33.60686111]
[-63.17150497 40.04961395]
[-78.44390106 37.86846542]
[-90.09767914 27.75941277]
[-94.41416931 12.94821739]
[-90.01597595 -1.83892238]
[-78.30656433 -11.88348389]
[-63.02236176 -13.98028374]
[-49.04049301 -7.46024084]
[-40.82252884 5.59612274]
[-40.99079132 21.02256775]
[-28.40649986 29.18563080]
[-15.82220840 37.34869385]
[-8.49447155 38.35210419]
[-3.10705233 45.73783875]
[9.34876728 54.09562302]
[21.80458641 62.45340729]
[34.26040649 70.81119537]
[44.53477097 56.40562439]
[57.79092026 45.20719147]
[73.09763336 37.78316498]
[89.43093872 34.44393539]
[88.73133087 19.46026039]
[88.03172302 4.47658443]
[87.33212280 -10.50709152]
[86.63251495 -25.49076843]
[85.93290710 -40.47444534]
[85.23329926 -55.45812225]
[76.86077881 -68.88240051]
[83.99605560 -81.95669556]
[83.29644775 -96.94036865]
[82.59683990 -111.92404938]
[69.55802917 -120.33648682]
[63.98553085 -134.81843567]
[68.02207184 -149.80128479]
[80.11553192 -159.52383423]
[95.61571503 -160.24755859]
[108.56250000 -151.69416809]
[113.97757721 -137.15261841]
[109.77873230 -122.21443939]
[97.58051300 -112.62365723]
[98.28012085 -97.63997650]
[98.97972870 -82.65630341]
[107.30221558 -70.30374908]
[100.21697998 -56.15772629]
[100.91658783 -41.17404938]
[101.61618805 -26.19037437]
[102.31579590 -11.20669746]
[103.01540375 3.77697849]
[103.71501160 18.76065445]
[104.41461182 33.74433136]
[122.43357849 32.63290787]
[141.20445251 36.60898590]
[150.68649292 24.98612785]
[160.16854858 13.36327076]
[169.65058899 1.74041450]
[179.13264465 -9.88244247]
[178.95063782 -25.92446327]
[191.46992493 -35.95675659]
[207.08677673 -32.28340530]
[213.82128906 -17.72229195]
[206.50729370 -3.44345474]
[190.75549316 -0.40039566]
[181.27345276 11.22246075]
[171.79139709 22.84531784]
[162.30935669 34.46817398]
[152.82731628 46.09103012]
[162.30935669 57.71388626]
[175.59953308 50.75893402]
[188.88969421 43.80398178]
[202.17987061 36.84902954]
[213.41004944 24.14787483]
[228.72366333 31.42314911]
[225.97193909 48.15229797]
[209.13482666 50.13919830]
[195.84465027 57.09415054]
[182.55447388 64.04910278]
[169.26431274 71.00405884]
[173.74398804 85.31951904]
[188.62803650 83.45803833]
[203.51208496 81.59655762]
[218.39613342 79.73507690]
[231.13714600 69.41042328]
[246.35009766 75.53397369]
[248.38520813 91.80635834]
[235.14894104 101.48793030]
[220.25761414 94.61912537]
[205.37356567 96.48060608]
[190.48951721 98.34208679]
[175.60546875 100.20356750]
[170.74948120 106.00854492]
[165.48147583 111.02171326]
[179.89755249 115.16623688]
[194.31361389 119.31076050]
[208.01855469 111.43991852]
[223.25291443 115.64583588]
[230.97842407 129.43322754]
[226.61166382 144.62226868]
[212.74336243 152.20158386]
[197.60134888 147.67448425]
[190.16908264 133.72682190]
[175.75302124 129.58230591]
[161.33695984 125.43777466]
[158.83343506 130.78845215]
[155.86428833 135.89546204]
[167.48713684 145.37750244]
[179.11000061 154.85955811]
[194.80633545 153.01544189]
[207.15733337 162.87588501]
[208.83538818 178.59083557]
[198.84492493 190.83689880]
[183.11309814 192.34870911]
[170.97334290 182.22932434]
[169.62796021 166.48240662]
[158.00509644 157.00036621]
[146.38224792 147.51831055]
[131.69969177 158.34750366]
[114.62421417 164.77217102]
[116.25399780 179.68338013]
[117.88378143 194.59457397]
[119.51355743 209.50576782]
[121.14334106 224.41696167]
[132.54995728 231.58779907]
[137.66705322 243.84094238]
[134.83233643 256.61425781]
[125.30014038 265.29037476]
[126.69782257 280.22512817]
[128.09552002 295.15988159]
[142.70564270 299.27188110]
[154.84140015 308.38711548]
[162.86154175 321.27285767]
[165.68139648 336.18637085]
[162.91960144 351.11071777]
[154.94966125 364.02755737]
[142.84945679 373.18997192]
[128.25544739 377.35879517]
[113.14133453 375.97024536]
[99.55118561 369.21209717]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 191]
[6 190]
[7 189]
[10 185]
[11 184]
[12 183]
[13 182]
[14 181]
[21 45]
[22 44]
[23 43]
[25 42]
[26 41]
[27 40]
[28 39]
[29 38]
[30 37]
[31 36]
[58 81]
[59 80]
[60 79]
[61 78]
[62 76]
[63 75]
[64 74]
[85 114]
[86 113]
[87 112]
[88 111]
[89 110]
[90 109]
[91 108]
[93 106]
[94 105]
[95 104]
[116 130]
[117 129]
[118 128]
[119 127]
[120 126]
[131 141]
[132 140]
[133 139]
[134 138]
[142 153]
[143 152]
[144 151]
[145 150]
[155 166]
[156 165]
[157 164]
[168 179]
[169 178]
[170 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
