%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:26:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCCGCUACCGCUGCCACUGAGAGGAGCCACCGGCGACGCCAGAGCCAGGAAUACGGGUGGACAAAAAUGAAGCCAAUGAAGAAGGCAUGCACUGGCCUUUCAGGUCCUGGCAGUGGCAGCAAGUCCCCCCCAGCCACCAGGGCCAAGGCUCUGAGGCGGCGAGGGG\
) } def
/len { sequence length } bind def

/coor [
[353.17556763 395.87304688]
[339.41262817 389.87756348]
[328.96545410 379.04037476]
[323.44851685 364.99127197]
[323.73147583 349.85977173]
[329.80233765 335.95220947]
[319.44503784 325.10202026]
[309.08773804 314.25183105]
[294.70300293 310.38812256]
[290.77090454 295.06335449]
[280.41360474 284.21316528]
[270.05630493 273.36297607]
[259.69900513 262.51281738]
[249.34170532 251.66262817]
[238.98440552 240.81245422]
[228.62710571 229.96228027]
[218.26982117 219.11209106]
[207.91252136 208.26191711]
[197.15907288 197.80421448]
[186.02435303 187.75344849]
[174.88961792 177.70268250]
[163.75489807 167.65191650]
[152.62017822 157.60115051]
[141.48544312 147.55038452]
[130.35072327 137.49961853]
[119.21599579 127.44886017]
[94.46938324 136.23063660]
[68.49153900 124.30601501]
[57.29957199 95.49188232]
[42.40893936 93.68383026]
[27.51830482 91.87577820]
[12.62767124 90.06773376]
[-2.26296186 88.25968170]
[-17.25259590 87.70213318]
[-32.23640060 88.39897919]
[-47.22020721 89.09582520]
[-54.85976791 102.49883270]
[-68.54335785 109.62364197]
[-83.90459442 108.19674683]
[-96.04175568 98.67346954]
[-101.08192444 84.09265137]
[-97.41680145 69.10697937]
[-86.21590424 58.49832535]
[-71.05341339 55.65187454]
[-56.76761246 61.47591400]
[-47.91705322 74.11202240]
[-32.93325043 73.41517639]
[-17.94944382 72.71832275]
[-29.90737724 63.66250610]
[-35.19541931 49.62553406]
[-32.18487167 34.93075180]
[-21.80297279 24.10411072]
[-7.24731636 20.48018265]
[6.99899912 25.17512703]
[16.54815102 36.74291229]
[18.45902824 51.62070084]
[12.14308739 65.22617340]
[-0.45491165 73.36904907]
[14.43572140 75.17709351]
[29.32635498 76.98514557]
[44.21698761 78.79319763]
[59.10762024 80.60124969]
[64.38621521 75.27336121]
[52.18528366 66.54769135]
[39.98434830 57.82203293]
[25.74540901 53.10477066]
[19.38039207 39.52218628]
[24.86652184 25.56144142]
[38.77575302 19.94599342]
[52.41682053 26.18468857]
[57.26603699 40.37896729]
[66.10472870 52.49827194]
[74.94341278 64.61757660]
[80.22200775 59.28968811]
[78.27563477 44.41650391]
[76.32926178 29.54331970]
[62.33480453 23.05034828]
[54.09158707 10.00991535]
[54.22999191 -5.41682768]
[62.70585632 -18.30726051]
[76.81455994 -24.54809570]
[92.05406952 -22.14790344]
[103.56150818 -11.87257671]
[107.66490173 2.99906492]
[103.05486298 17.72153473]
[91.20244598 27.59694672]
[93.14881897 42.47013092]
[95.09519196 57.34331512]
[104.39716339 58.23620987]
[113.08012390 61.08807755]
[120.74698639 65.67440033]
[127.06803894 71.69378662]
[131.79490662 78.78633118]
[134.76985168 86.55429840]
[135.93005371 94.58393097]
[135.30674744 102.46726990]
[133.01963806 109.82285309]
[129.26675415 116.31413269]
[140.40148926 126.36489868]
[151.53620911 136.41566467]
[162.67094421 146.46643066]
[173.80566406 156.51719666]
[184.94038391 166.56796265]
[196.07511902 176.61872864]
[207.20983887 186.66949463]
[211.57762146 187.43444824]
[215.10273743 189.37377930]
[217.51623535 192.07061768]
[218.71517944 195.06332397]
[218.76269531 197.90461731]
[229.11999512 208.75479126]
[239.47729492 219.60498047]
[249.83459473 230.45515442]
[260.19189453 241.30532837]
[270.54919434 252.15550232]
[280.90649414 263.00567627]
[291.26379395 273.85586548]
[301.62109375 284.70605469]
[316.74664307 289.34582520]
[319.93792725 303.89453125]
[330.29522705 314.74472046]
[340.65252686 325.59490967]
[354.82711792 320.17669678]
[369.95544434 320.59698486]
[383.73306274 326.76065063]
[394.07321167 337.69998169]
[399.42285156 351.72659302]
[398.99584961 366.69198608]
[392.88839722 380.31655884]
[403.24569702 391.16674805]
[413.60299683 402.01690674]
[423.96029663 412.86709595]
[439.52810669 413.39764404]
[449.87731934 424.54879761]
[449.27557373 439.38705444]
[459.63287354 450.23724365]
[469.99017334 461.08740234]
[485.11575317 465.72720337]
[488.30700684 480.27590942]
[498.66430664 491.12609863]
[509.22149658 501.78186035]
[519.97497559 512.23956299]
[530.72839355 522.69726562]
[541.48181152 533.15496826]
[552.23529053 543.61267090]
[568.25738525 547.10906982]
[572.98193359 562.81292725]
[561.54876709 574.56939697]
[545.71936035 570.28448486]
[541.77758789 554.36608887]
[531.02410889 543.90838623]
[520.27069092 533.45068359]
[509.51724243 522.99298096]
[498.76379395 512.53527832]
[494.02264404 511.70864868]
[489.76376343 507.86929321]
[487.81414795 501.48339844]
[477.45684814 490.63320923]
[463.07208252 486.76950073]
[459.13998413 471.44470215]
[448.78268433 460.59454346]
[438.42538452 449.74435425]
[423.57522583 449.65609741]
[412.91687012 438.80001831]
[413.11013794 423.22439575]
[402.75283813 412.37420654]
[392.39553833 401.52404785]
[382.03823853 390.67385864]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 122]
[7 121]
[8 120]
[10 118]
[11 117]
[12 116]
[13 115]
[14 114]
[15 113]
[16 112]
[17 111]
[18 110]
[19 105]
[20 104]
[21 103]
[22 102]
[23 101]
[24 100]
[25 99]
[26 98]
[29 62]
[30 61]
[31 60]
[32 59]
[33 58]
[34 48]
[35 47]
[36 46]
[74 88]
[75 87]
[76 86]
[129 168]
[130 167]
[131 166]
[132 165]
[135 162]
[136 161]
[137 160]
[139 158]
[140 157]
[141 154]
[142 153]
[143 152]
[144 151]
[145 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
