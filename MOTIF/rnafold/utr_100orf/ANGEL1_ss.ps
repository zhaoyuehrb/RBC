%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:13:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUGAAGCGCGGCGGCGGCACCACGUGGGCCGGACCGGGCCGGGGGCGGGGCCGAGCUGAGGGAGGACCUGCUGGCUGCAGUGAGGAGCGGAGGCGGGCGCGGGCGGCCGGCCAUGAUCGCGUCGUGCUUGUGUUACCUGCUGCUGCCGGCCACGCGCCUCUUCCGCGCCCUCUCAGAUGCUUUCUUCACAUGUCGAAAAAAUGUCCUUCUGG\
) } def
/len { sequence length } bind def

/coor [
[113.15304565 158.25660706]
[104.40338898 170.44035339]
[89.41791534 169.78036499]
[81.77325439 156.87458801]
[88.39606476 143.41496277]
[91.22859192 128.68482971]
[83.73586273 128.35462952]
[74.18808746 139.92355347]
[71.37149811 155.49201965]
[57.30287552 160.38314819]
[47.75509262 171.95205688]
[38.20731354 183.52098083]
[41.02546692 196.69049072]
[35.82085037 208.90058899]
[24.69929314 215.78230286]
[11.83829212 215.01416016]
[2.12171125 226.44166565]
[-7.59486914 237.86918640]
[-17.31144905 249.29669189]
[-20.48527145 257.85952759]
[-27.25551605 260.81927490]
[-37.13880157 272.10293579]
[-39.79579163 288.28540039]
[-55.23216248 293.82168579]
[-67.56830597 283.01651001]
[-64.11385345 266.98535156]
[-48.42244720 262.21963501]
[-38.53916168 250.93600464]
[-28.73896217 239.58012390]
[-19.02238274 228.15260315]
[-9.30580235 216.72508240]
[0.41077811 205.29757690]
[-1.66012263 188.60671997]
[9.19593239 175.32148743]
[26.63839531 173.97320557]
[36.18617630 162.40428162]
[45.73395538 150.83535767]
[47.86761856 136.09437561]
[62.61916733 130.37577820]
[72.16694641 118.80685425]
[74.42284393 91.98802185]
[92.77320099 81.33628845]
[92.99340057 66.33790588]
[93.21359253 51.33951950]
[93.43379211 36.34113693]
[93.65399170 21.34275246]
[93.87418365 6.34436798]
[94.09438324 -8.65401554]
[86.56050110 -22.56628227]
[94.48380280 -35.17860031]
[94.70400238 -50.17698669]
[85.23220062 -38.54577637]
[71.00872803 -33.78208923]
[56.44229889 -37.36248016]
[46.04795074 -48.17716980]
[43.04752350 -62.87402344]
[48.37104034 -76.89758301]
[60.36841202 -85.90108490]
[75.32091522 -87.09379578]
[88.59386444 -80.10602570]
[96.07353973 -67.10207367]
[98.26769257 -81.94072723]
[100.46183777 -96.77938080]
[102.65599060 -111.61803436]
[104.85013580 -126.45669556]
[107.04428864 -141.29534912]
[93.02100372 -151.89009094]
[86.33067322 -168.04612732]
[88.73358917 -185.27679443]
[99.47819519 -198.84632874]
[115.53284454 -205.07135010]
[117.29044342 -219.96801758]
[119.04803467 -234.86470032]
[120.80562592 -249.76136780]
[122.56322479 -264.65805054]
[124.32081604 -279.55471802]
[118.25382233 -294.16641235]
[127.42911530 -305.89941406]
[129.18670654 -320.79608154]
[130.94430542 -335.69277954]
[132.70188904 -350.58944702]
[134.45948792 -365.48611450]
[132.35748291 -374.37298584]
[136.35379028 -380.58798218]
[138.32986450 -395.45724487]
[140.30595398 -410.32650757]
[142.17285156 -425.20986938]
[143.93043518 -440.10656738]
[145.68803406 -455.00323486]
[147.44563293 -469.89990234]
[141.37863159 -484.51159668]
[150.55392456 -496.24459839]
[152.31152344 -511.14129639]
[154.06910706 -526.03796387]
[155.82670593 -540.93463135]
[157.58430481 -555.83129883]
[159.23249817 -570.74047852]
[160.77122498 -585.66131592]
[162.30995178 -600.58221436]
[163.84867859 -615.50305176]
[165.38740540 -630.42395020]
[166.92611694 -645.34478760]
[167.91632080 -660.31207275]
[168.35667419 -675.30560303]
[168.79702759 -690.29919434]
[158.88121033 -702.91094971]
[162.69917297 -718.49304199]
[177.32209778 -725.09228516]
[191.53251648 -717.64624023]
[194.42942810 -701.86688232]
[183.79055786 -689.85882568]
[183.35020447 -674.86529541]
[182.90986633 -659.87176514]
[195.44035339 -668.11712646]
[209.74557495 -663.60485840]
[215.27728271 -649.66210938]
[207.95657349 -636.56988525]
[193.18150330 -633.98193359]
[181.84700012 -643.80609131]
[180.30827332 -628.88525391]
[178.76954651 -613.96435547]
[177.23081970 -599.04345703]
[175.69209290 -584.12261963]
[174.15336609 -569.20172119]
[176.59352112 -562.22735596]
[172.48097229 -554.07373047]
[170.72337341 -539.17706299]
[168.96578979 -524.28033447]
[167.20819092 -509.38369751]
[165.45059204 -494.48703003]
[171.64331055 -480.94082642]
[162.34230042 -468.14230347]
[160.58470154 -453.24563599]
[158.82711792 -438.34896851]
[157.06951904 -423.45227051]
[159.40702820 -416.44284058]
[155.17521667 -408.35043335]
[153.19914246 -393.48117065]
[151.22305298 -378.61187744]
[149.35615540 -363.72851562]
[147.59857178 -348.83184814]
[145.84097290 -333.93518066]
[144.08337402 -319.03851318]
[142.32579041 -304.14181519]
[148.51849365 -290.59561157]
[139.21748352 -277.79711914]
[137.45989990 -262.90045166]
[135.70230103 -248.00376892]
[133.94470215 -233.10710144]
[132.18711853 -218.21041870]
[130.42951965 -203.31375122]
[141.30764771 -196.89334106]
[148.97842407 -186.79893494]
[152.27449036 -174.50828552]
[150.67227173 -161.83752441]
[144.37463379 -150.67283630]
[134.28607178 -142.68962097]
[121.88294220 -139.10119629]
[119.68879700 -124.26254272]
[117.49464417 -109.42388916]
[115.30049896 -94.58522797]
[113.10634613 -79.74657440]
[110.91219330 -64.90792084]
[109.70238495 -49.95678711]
[109.48218536 -34.95840454]
[117.03182220 -22.11892128]
[109.09276581 -8.43381882]
[108.87257385 6.56456518]
[108.65237427 21.56294823]
[108.43217468 36.56133270]
[108.21198273 51.55971527]
[107.99178314 66.55809784]
[107.77158356 81.55648041]
[126.00328064 93.50289154]
[126.07074738 121.18236542]
[134.56381226 133.54634094]
[143.05688477 145.91030884]
[151.54995728 158.27427673]
[170.11636353 166.12989807]
[170.78468323 185.45582581]
[179.63705444 197.56513977]
[188.57806396 209.60914612]
[197.60723877 221.58720398]
[206.63642883 233.56527710]
[221.12188721 239.92779541]
[222.60449219 254.74842834]
[231.63366699 266.72647095]
[240.66285706 278.70455933]
[256.28753662 279.33966064]
[267.81359863 289.90771484]
[269.79882812 305.41876221]
[261.30581665 318.54898071]
[246.34472656 323.09869385]
[231.97972107 316.91964722]
[224.99351501 302.92941284]
[228.68478394 287.73373413]
[219.65560913 275.75567627]
[210.62643433 263.77761841]
[196.78678894 258.27182007]
[194.65835571 242.59445190]
[185.62918091 230.61639404]
[176.60000610 218.63833618]
[170.06504822 215.19003296]
[167.52772522 206.41751099]
[158.67535400 194.30819702]
[148.48081970 193.65447998]
[140.15332031 187.36621094]
[136.58688354 177.32627869]
[139.18598938 166.76734924]
[130.69291687 154.40338135]
[122.19984436 142.03941345]
[113.70677948 129.67543030]
[106.21405029 129.34523010]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 40]
[8 39]
[10 37]
[11 36]
[12 35]
[16 32]
[17 31]
[18 30]
[19 29]
[21 28]
[22 27]
[42 173]
[43 172]
[44 171]
[45 170]
[46 169]
[47 168]
[48 167]
[50 165]
[51 164]
[61 163]
[62 162]
[63 161]
[64 160]
[65 159]
[66 158]
[71 151]
[72 150]
[73 149]
[74 148]
[75 147]
[76 146]
[78 144]
[79 143]
[80 142]
[81 141]
[82 140]
[84 139]
[85 138]
[86 137]
[87 135]
[88 134]
[89 133]
[90 132]
[92 130]
[93 129]
[94 128]
[95 127]
[96 126]
[97 124]
[98 123]
[99 122]
[100 121]
[101 120]
[102 119]
[103 113]
[104 112]
[105 111]
[175 212]
[176 211]
[177 210]
[178 209]
[180 205]
[181 204]
[182 202]
[183 201]
[184 200]
[186 198]
[187 197]
[188 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
