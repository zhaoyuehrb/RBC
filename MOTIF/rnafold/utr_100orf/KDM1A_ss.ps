%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:24:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGCGGCGGGAGCGCGCUUGGCGCGUGCGUACGCGACGGCGGUUGGCGGCGCGCGGGCAGCGUGAAGCGAGGCGAGGCAAGGCUUUUCGGACCCACGGAGCGACAGAGCGAGCGGCCCCUACGGCCGUCGGCGGCCCGGCGGCCCGAGAUGUUAUCUGGGAAGAAGGCGGCAGCCGCGGCGGCGGCGGCUGCAGCGGCAGCAACCGGGACGGAGGCUGGCCCUGGGACAGCAGGCGGCUCCGAGAACG\
) } def
/len { sequence length } bind def

/coor [
[100.89982605 163.84298706]
[92.41139221 151.47583008]
[89.69567871 136.72221375]
[77.23674011 145.07534790]
[64.77780151 153.42848206]
[61.59758759 168.67721558]
[48.84346008 176.97100830]
[34.32571793 173.84518433]
[21.86677933 182.19831848]
[22.37557220 195.95826721]
[16.07477951 208.07965088]
[4.70191526 215.45138550]
[-8.71973896 216.24105835]
[-20.68450356 210.34936523]
[-33.24742508 218.54527283]
[-45.81034470 226.74119568]
[-58.37326431 234.93710327]
[-70.93618774 243.13302612]
[-83.49910736 251.32893372]
[-86.80341339 257.00820923]
[-91.73372650 259.77011108]
[-96.48232269 259.56832886]
[-109.24723816 267.44595337]
[-116.92767334 281.27786255]
[-131.82194519 281.37750244]
[-144.58686829 289.25512695]
[-157.35177612 297.13272095]
[-170.11669922 305.01034546]
[-182.88162231 312.88796997]
[-195.64653015 320.76559448]
[-208.41145325 328.64321899]
[-214.05271912 335.79446411]
[-221.38664246 336.53845215]
[-234.24954224 344.25503540]
[-247.11244202 351.97164917]
[-259.92660522 359.76889038]
[-272.69152832 367.64651489]
[-285.45642090 375.52413940]
[-292.75555420 390.20932007]
[-309.13748169 390.96051025]
[-317.74990845 377.00491333]
[-309.73309326 362.69888306]
[-293.33404541 362.75921631]
[-280.56912231 354.88159180]
[-267.80422974 347.00399780]
[-263.77291870 340.83239746]
[-254.82902527 339.10873413]
[-241.96612549 331.39215088]
[-229.10322571 323.67556763]
[-216.28907776 315.87829590]
[-203.52415466 308.00067139]
[-190.75923157 300.12304688]
[-177.99432373 292.24542236]
[-165.22940063 284.36782837]
[-152.46447754 276.49020386]
[-139.69956970 268.61257935]
[-132.93215942 255.34413147]
[-117.12485504 254.68103027]
[-104.35993958 246.80342102]
[-91.69502258 238.76602173]
[-79.13210297 230.57009888]
[-66.56918335 222.37419128]
[-54.00625992 214.17826843]
[-41.44334030 205.98236084]
[-28.88041878 197.78643799]
[-28.57548904 181.36190796]
[-18.43182945 168.22958374]
[-2.29682183 163.69503784]
[13.51364422 169.73937988]
[25.97258186 161.38624573]
[28.59449005 146.76908875]
[41.11063004 138.12034607]
[56.42467117 140.96954346]
[68.88360596 132.61640930]
[81.34254456 124.26327515]
[82.32927704 116.82846832]
[69.47338867 124.55673981]
[55.41561890 119.32423401]
[50.74153137 105.07106781]
[58.97073364 92.52992249]
[73.90660095 91.14434814]
[84.30274200 101.95885468]
[85.28947449 94.52404785]
[75.44068909 83.21028137]
[65.59190369 71.89650726]
[55.74311829 60.58273697]
[45.89433289 49.26896667]
[35.97465515 38.01729965]
[25.98447609 26.82818222]
[15.99429798 15.63906479]
[0.45280960 14.59031105]
[-9.51925850 3.10064101]
[-8.42365456 -11.70932961]
[-18.41383171 -22.89844704]
[-33.47309494 -30.68657303]
[-30.15815163 -47.31328201]
[-13.26355171 -48.73062134]
[-7.22471523 -32.88862610]
[2.76546264 -21.69950867]
[17.60446358 -21.11671257]
[27.89531708 -9.91167068]
[27.18341637 5.64888716]
[37.17359161 16.83800507]
[47.16377258 28.02712059]
[53.94566727 30.91601372]
[57.20810318 39.42017746]
[67.05689240 50.73395157]
[76.90567780 62.04772186]
[86.75446320 73.36148834]
[96.60324860 84.67526245]
[111.00765228 88.86013031]
[125.38548279 84.58483887]
[139.76330566 80.30954742]
[154.14112854 76.03426361]
[165.16362000 64.68457794]
[179.56826782 68.47342682]
[193.94609070 64.19814301]
[208.32391357 59.92285156]
[222.53039551 55.10869598]
[236.54533386 49.76251984]
[250.56025696 44.41633987]
[264.57519531 39.07016373]
[274.71142578 26.92243385]
[289.36056519 29.61546707]
[303.37548828 24.26928902]
[317.39041138 18.92311096]
[331.40536499 13.57693195]
[345.38641357 8.14280128]
[359.33306885 2.62093306]
[373.27972412 -2.90093517]
[379.62048340 -17.12881088]
[393.84301758 -22.53009605]
[407.36807251 -16.39746284]
[421.31469727 -21.91933250]
[431.29748535 -34.19347382]
[445.97930908 -31.68473434]
[459.92593384 -37.20660400]
[473.87258911 -42.72847366]
[487.81924438 -48.25033951]
[501.76589966 -53.77220917]
[508.10665894 -68.00008392]
[522.32922363 -73.40136719]
[535.85424805 -67.26873779]
[549.80090332 -72.79060364]
[561.99127197 -81.53096008]
[571.69714355 -92.96759796]
[574.72735596 -108.49590302]
[588.86187744 -113.19325256]
[598.56768799 -124.62989044]
[608.27355957 -136.06652832]
[617.97937012 -147.50315857]
[623.61822510 -163.49191284]
[640.54309082 -162.49958801]
[644.27484131 -145.96142578]
[629.41601562 -137.79731750]
[619.71020508 -126.36068726]
[610.00433350 -114.92404938]
[600.29852295 -103.48741150]
[597.96252441 -88.77713013]
[583.13378906 -83.26175690]
[573.42791748 -71.82511902]
[577.04107666 -65.25282288]
[590.18566895 -72.47912598]
[603.33038330 -79.70521545]
[610.55627441 -66.56037140]
[597.41198730 -59.33452606]
[584.26739502 -52.10822296]
[587.88055420 -45.53592300]
[602.73748779 -47.60277557]
[615.33984375 -57.16780472]
[629.01184082 -51.25799942]
[643.86877441 -53.32485580]
[658.72570801 -55.39170837]
[673.58264160 -57.45856476]
[688.43957520 -59.52541733]
[703.29644775 -61.59227371]
[718.15338135 -63.65912628]
[733.01031494 -65.72598267]
[741.16162109 -79.07102966]
[756.00030518 -84.00534058]
[770.52001953 -78.19908905]
[777.86492920 -64.39380646]
[774.56707764 -49.10792542]
[762.18359375 -39.55897522]
[746.56152344 -40.25567245]
[735.07714844 -50.86906052]
[720.22027588 -48.80220413]
[705.36334229 -46.73535156]
[690.50640869 -44.66849518]
[675.64947510 -42.60164261]
[660.79254150 -40.53479004]
[645.93566895 -38.46793365]
[631.07873535 -36.40108109]
[619.53900146 -26.98388672]
[604.80432129 -32.74585342]
[589.94738770 -30.67900085]
[577.63269043 -32.04706192]
[567.47375488 -36.60156631]
[560.19171143 -43.34478378]
[556.14703369 -51.14328003]
[555.32275391 -58.84395599]
[541.37609863 -53.32209015]
[535.71484375 -39.59307480]
[521.64965820 -33.79443741]
[507.28775024 -39.82556152]
[493.34112549 -34.30369186]
[479.39447021 -28.78182411]
[465.44781494 -23.25995636]
[451.50115967 -17.73808861]
[442.51593018 -5.85890675]
[426.83657837 -7.97268438]
[412.88992310 -2.45081615]
[407.22866821 11.27820015]
[393.16345215 17.07683563]
[378.80157471 11.04571247]
[364.85494995 16.56758118]
[350.90829468 22.08944893]
[345.85906982 27.46020889]
[336.75152588 27.59186554]
[322.73660278 32.93804550]
[308.72167969 38.28422165]
[294.70672607 43.63040161]
[285.57293701 55.39573669]
[269.92138672 53.08509827]
[255.90644836 58.43127441]
[241.89151001 63.77745438]
[227.87657166 69.12363434]
[241.16772461 76.07672119]
[245.76049805 90.35630035]
[239.01481628 103.75389862]
[224.80833435 108.56804657]
[211.30751038 102.03138733]
[206.27316284 87.90144348]
[212.59921265 74.30067444]
[198.22138977 78.57596588]
[183.84355164 82.85125732]
[173.84947205 93.89514160]
[158.41642761 90.41208649]
[144.03858948 94.68737793]
[129.66076660 98.96266937]
[115.28294373 103.23795319]
[130.23033142 101.98268890]
[144.39311218 106.92388916]
[155.31565857 117.20483398]
[161.10417175 131.04293823]
[160.75497437 146.03887939]
[154.32861328 159.59254456]
[142.93934631 169.35394287]
[128.56192017 173.63055420]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 75]
[4 74]
[5 73]
[8 70]
[9 69]
[14 65]
[15 64]
[16 63]
[17 62]
[18 61]
[19 60]
[22 59]
[23 58]
[25 56]
[26 55]
[27 54]
[28 53]
[29 52]
[30 51]
[31 50]
[33 49]
[34 48]
[35 47]
[36 45]
[37 44]
[38 43]
[83 110]
[84 109]
[85 108]
[86 107]
[87 106]
[88 104]
[89 103]
[90 102]
[93 99]
[94 98]
[111 241]
[112 240]
[113 239]
[114 238]
[116 236]
[117 235]
[118 234]
[119 227]
[120 226]
[121 225]
[122 224]
[124 222]
[125 221]
[126 220]
[127 219]
[128 217]
[129 216]
[130 215]
[133 212]
[134 211]
[136 209]
[137 208]
[138 207]
[139 206]
[140 205]
[143 202]
[144 201]
[145 161]
[146 160]
[148 158]
[149 157]
[150 156]
[151 155]
[168 196]
[169 195]
[171 193]
[172 192]
[173 191]
[174 190]
[175 189]
[176 188]
[177 187]
[178 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
