%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:33:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGGAAGUGACUGCGGACGAAUCGGCGUUUGCCGAGGCUGGCAUAGAUUUGGCUGUCUCCGCUCAUAGCUGCUUUUGGCGCGAAAGAUGCCGGGUCUGGUUGACUCAAACCCUGCCCCGCCUGAGUCUCAGGAGAAGAAGCCGCUGAAGCCCUGCUGCGCUUGCCCGGAGACCAAGAAGGCGCGCG\
) } def
/len { sequence length } bind def

/coor [
[26.42137527 130.41972351]
[11.86423397 134.03767395]
[-2.69290781 137.65563965]
[-17.25004959 141.27359009]
[-31.80718994 144.89155579]
[-46.36433029 148.50952148]
[-60.92147446 152.12747192]
[-75.47861481 155.74543762]
[-90.03575897 159.36340332]
[-101.56227875 170.20082092]
[-115.78000641 165.76174927]
[-130.33714294 169.37969971]
[-144.76452637 173.48464966]
[-159.04586792 178.07194519]
[-173.32720947 182.65924072]
[-187.60855103 187.24653625]
[-201.88989258 191.83383179]
[-209.12158203 197.44912720]
[-216.44982910 196.37605286]
[-230.80621338 200.72279358]
[-235.62367249 205.30000305]
[-241.19383240 206.55293274]
[-245.71833801 204.96565247]
[-260.21264648 208.82765198]
[-274.70697021 212.68965149]
[-289.20126343 216.55165100]
[-295.41229248 236.30195618]
[-312.16104126 248.23548889]
[-332.57962036 247.66413879]
[-348.41833496 234.98596191]
[-362.53750610 240.05043030]
[-376.65667725 245.11489868]
[-390.77584839 250.17936707]
[-404.89501953 255.24383545]
[-415.07608032 268.09991455]
[-431.25863647 265.44354248]
[-436.79550171 250.00737000]
[-425.99081421 237.67080688]
[-409.95950317 241.12466431]
[-395.84033203 236.06019592]
[-381.72113037 230.99572754]
[-367.60195923 225.93125916]
[-353.48278809 220.86679077]
[-353.12411499 211.15830994]
[-349.84527588 201.98182678]
[-343.93463135 194.19721985]
[-335.92797852 188.53967285]
[-326.56005859 185.55018616]
[-316.69714355 185.52391052]
[-307.25698853 188.48110962]
[-299.12335205 194.16365051]
[-293.06326294 202.05734253]
[-278.56896973 198.19534302]
[-264.07464600 194.33334351]
[-249.58033752 190.47134399]
[-235.15295410 186.36639404]
[-220.79656982 182.01966858]
[-206.47718811 177.55249023]
[-192.19584656 172.96519470]
[-177.91450500 168.37789917]
[-163.63316345 163.79060364]
[-149.35182190 159.20330811]
[-147.95271301 156.75134277]
[-145.48789978 154.71194458]
[-142.11183167 153.49758911]
[-138.12663269 153.45645142]
[-133.95510864 154.82257080]
[-119.39796448 151.20460510]
[-108.91266632 140.62596130]
[-93.65371704 144.80625916]
[-79.09657288 141.18829346]
[-64.53943634 137.57034302]
[-49.98229218 133.95237732]
[-35.42515182 130.33441162]
[-20.86800957 126.71645355]
[-6.31086779 123.09849548]
[8.24627304 119.48053741]
[22.80341530 115.86257935]
[37.32965088 112.12246704]
[51.82395935 108.26046753]
[66.31826782 104.39846802]
[80.81257629 100.53647614]
[65.82611847 101.17366028]
[52.68178940 93.94686127]
[45.19061661 80.95138550]
[45.52457047 65.95510101]
[53.58681870 53.30598450]
[67.03981781 46.67147827]
[81.98306274 47.97516632]
[94.08393860 56.83906555]
[99.83396912 70.69319916]
[97.56701660 85.51852417]
[102.98564148 71.53144073]
[108.40426636 57.54435730]
[113.82289124 43.55727386]
[107.68577576 29.24037933]
[113.38027954 15.13267803]
[127.06707764 9.37010288]
[132.48570251 -4.61698055]
[137.90432739 -18.60406494]
[143.32295227 -32.59114838]
[136.71078491 -46.94575882]
[142.26382446 -61.74235916]
[156.68754578 -68.20238495]
[171.42460632 -62.49321365]
[177.73178101 -48.00200272]
[171.86711121 -33.32612610]
[157.31002808 -27.17252350]
[151.89140320 -13.18543911]
[146.47277832 0.80164421]
[141.05415344 14.78872776]
[147.28659058 28.26805496]
[141.99060059 42.53013611]
[127.80997467 48.97589874]
[122.39134979 62.96298218]
[116.97272491 76.95006561]
[111.55410004 90.93714905]
[117.89971924 104.52880859]
[132.10198975 109.35536957]
[146.30424500 114.18193054]
[160.50651550 119.00849915]
[174.70877075 123.83506012]
[192.20751953 114.00170898]
[211.01727295 120.08170319]
[219.19375610 137.74450684]
[233.62113953 141.84944153]
[248.04852295 145.95439148]
[262.47592163 150.05934143]
[276.90328979 154.16427612]
[292.29406738 150.49894714]
[302.41806030 161.42385864]
[316.84545898 165.52880859]
[330.53503418 158.09686279]
[345.10797119 162.46539307]
[352.10882568 175.56208801]
[366.53619385 179.66703796]
[380.96359253 183.77198792]
[392.60433960 178.18560791]
[404.54580688 181.91651917]
[410.53787231 192.43972778]
[424.89425659 196.78646851]
[440.34445190 193.38020325]
[450.28347778 204.47364807]
[464.63986206 208.82038879]
[476.31658936 198.73785400]
[491.59393311 196.59143066]
[505.59689331 203.06602478]
[513.85723877 216.09562683]
[513.73907471 231.52253723]
[505.28009033 244.42408752]
[491.17959595 250.68342590]
[475.93695068 248.30323792]
[464.41604614 238.04301453]
[460.29315186 223.17677307]
[445.93673706 218.83004761]
[431.51342773 222.54721069]
[420.54751587 211.14285278]
[406.19113159 206.79612732]
[389.35400391 211.71203613]
[376.85864258 198.19937134]
[362.43124390 194.09442139]
[348.00387573 189.98947144]
[335.15710449 197.43904114]
[320.46719360 193.48156738]
[312.74050903 179.95619202]
[298.31314087 175.85124207]
[283.95428467 179.81019592]
[272.79833984 168.59165955]
[258.37097168 164.48672485]
[243.94358826 160.38177490]
[229.51620483 156.27682495]
[215.08882141 152.17189026]
[207.77064514 159.42115784]
[198.02388000 162.99623108]
[187.59272766 162.18569946]
[178.37377930 157.06944275]
[172.07130432 148.51634216]
[169.88221741 138.03732300]
[155.67994690 133.21075439]
[141.47767639 128.38420105]
[127.27542114 123.55763245]
[113.07315826 118.73107147]
[84.67457581 115.03077698]
[70.18026733 118.89277649]
[55.68595886 122.75477600]
[41.19165039 126.61677551]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 78]
[2 77]
[3 76]
[4 75]
[5 74]
[6 73]
[7 72]
[8 71]
[9 70]
[11 68]
[12 67]
[13 62]
[14 61]
[15 60]
[16 59]
[17 58]
[19 57]
[20 56]
[23 55]
[24 54]
[25 53]
[26 52]
[30 43]
[31 42]
[32 41]
[33 40]
[34 39]
[79 186]
[80 185]
[81 184]
[82 183]
[92 117]
[93 116]
[94 115]
[95 114]
[98 111]
[99 110]
[100 109]
[101 108]
[118 182]
[119 181]
[120 180]
[121 179]
[122 178]
[125 172]
[126 171]
[127 170]
[128 169]
[129 168]
[131 166]
[132 165]
[135 162]
[136 161]
[137 160]
[140 158]
[141 157]
[143 155]
[144 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
