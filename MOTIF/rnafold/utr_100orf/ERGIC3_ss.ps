%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:13:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGGCUCCAGGCCGGAAGAGGGAGUCUGUAGGGGCGGGCCGGCUGGCGUCCCCUUUCCGGCCGGUCCCCAUGGAGGCGCUGGGGAAGCUGAAGCAGUUCGAUGCCUACCCCAAGACUUUGGAGGACUUCCGGGUCAAGACCUGCGGGGGCGCCACCGUGACCAUUGUCA\
) } def
/len { sequence length } bind def

/coor [
[-89.69087982 256.42544556]
[-85.01122284 242.17410278]
[-75.01534271 230.99147034]
[-89.51611328 234.82910156]
[-97.49141693 248.20939636]
[-112.25193787 251.89474487]
[-124.95885468 244.20906067]
[-139.45962524 248.04669189]
[-146.99035645 253.28706360]
[-154.26385498 251.81863403]
[-168.83306885 255.38766479]
[-183.40229797 258.95669556]
[-197.97151184 262.52572632]
[-212.54072571 266.09475708]
[-227.10993958 269.66375732]
[-241.67915344 273.23278809]
[-256.24838257 276.80181885]
[-270.81759644 280.37084961]
[-282.38046265 291.16949463]
[-296.58319092 286.68267822]
[-311.15240479 290.25170898]
[-325.72161865 293.82070923]
[-340.29083252 297.38973999]
[-354.82644653 301.09323120]
[-369.32723999 304.93087769]
[-383.82800293 308.76852417]
[-395.18936157 319.77899170]
[-409.47256470 315.55538940]
[-423.97335815 319.39303589]
[-435.33468628 330.40350342]
[-449.61791992 326.17987061]
[-464.11868286 330.01751709]
[-471.84527588 343.80429077]
[-487.07998657 348.00900269]
[-500.78430176 340.13708496]
[-504.82769775 324.85879517]
[-496.81134033 311.23846436]
[-481.49114990 307.35681152]
[-467.95632935 315.51675415]
[-453.45556641 311.67910767]
[-443.13140869 300.94314575]
[-427.81097412 304.89224243]
[-413.31021118 301.05459595]
[-402.98605347 290.31863403]
[-387.66564941 294.26776123]
[-373.16485596 290.43011475]
[-358.66409302 286.59246826]
[-352.98004150 281.82260132]
[-343.85986328 282.82052612]
[-329.29064941 279.25149536]
[-314.72143555 275.68246460]
[-300.15222168 272.11346436]
[-289.63143921 261.57009888]
[-274.38662720 265.80163574]
[-259.81738281 262.23260498]
[-245.24818420 258.66357422]
[-230.67897034 255.09455872]
[-216.10975647 251.52552795]
[-201.54054260 247.95649719]
[-186.97131348 244.38746643]
[-172.40209961 240.81845093]
[-157.83288574 237.24942017]
[-143.29727173 233.54592896]
[-128.79649353 229.70828247]
[-121.55482483 216.74317932]
[-106.90364838 212.64469910]
[-93.35375977 220.32833862]
[-78.85298157 216.49069214]
[-64.91656494 210.94305420]
[-51.74534225 203.76538086]
[-38.57412720 196.58770752]
[-25.40290642 189.41003418]
[-12.23168755 182.23236084]
[-4.75849676 169.34823608]
[11.06156349 169.53868103]
[24.23278236 162.36100769]
[37.40399933 155.18333435]
[50.57521820 148.00566101]
[63.74643707 140.82798767]
[76.91765594 133.65031433]
[81.28556824 60.97689056]
[87.21733856 47.19958496]
[93.14910126 33.42227936]
[99.08087158 19.64497566]
[97.43155670 3.90997219]
[109.57118225 -4.72013664]
[115.50295258 -18.49744225]
[100.76964569 -15.68146610]
[89.25932312 -25.29981232]
[89.41289520 -40.29902649]
[101.11772919 -49.67968750]
[115.79029083 -46.56264114]
[122.67076111 -33.23200226]
[129.84843445 -46.40322113]
[137.02610779 -59.57444000]
[132.32092285 -74.66207886]
[139.73631287 -88.61870575]
[154.87286377 -93.16410828]
[168.75030518 -85.60157013]
[173.13542175 -70.41782379]
[165.42658997 -56.62110138]
[150.19732666 -52.39676666]
[143.01965332 -39.22554779]
[135.84197998 -26.05432701]
[129.28025818 -12.56567383]
[123.34848785 1.21163130]
[125.42208099 15.96118927]
[112.85817719 25.57674408]
[106.92640686 39.35404968]
[100.99463654 53.13135147]
[95.06287384 66.90866089]
[99.52713776 72.93529510]
[108.45566559 84.98856354]
[112.91992950 91.01519775]
[127.82781982 89.35540771]
[142.73570251 87.69561768]
[157.64360046 86.03582764]
[172.55148315 84.37603760]
[180.77197266 80.30212402]
[187.74983215 82.82594299]
[202.68585205 81.44191742]
[217.62185669 80.05789185]
[228.93586731 68.68367767]
[244.86636353 70.58077240]
[253.19282532 84.29388428]
[247.52790833 99.30348969]
[232.21725464 104.09550476]
[219.00588989 94.99390411]
[204.06987000 96.37792969]
[189.13385010 97.76195526]
[174.21127319 99.28392792]
[159.30339050 100.94371796]
[144.39549255 102.60350800]
[129.48760986 104.26329803]
[114.57971954 105.92308807]
[112.79521179 113.20769501]
[127.36437225 116.77694702]
[123.79489136 131.34605408]
[109.22618103 127.77690887]
[107.44166565 135.06152344]
[119.89442444 143.42385864]
[136.28367615 143.99375916]
[143.74479675 158.59730530]
[134.60244751 172.21162415]
[118.26148224 170.83146667]
[111.53208923 155.87661743]
[99.07932281 147.51428223]
[84.09532928 146.82153320]
[70.92411041 153.99920654]
[57.75289154 161.17687988]
[44.58167267 168.35455322]
[31.41045570 175.53222656]
[18.23923683 182.70989990]
[9.82395172 196.10742188]
[-5.05401421 195.40357971]
[-18.22523308 202.58125305]
[-31.39645195 209.75892639]
[-44.56766891 216.93659973]
[-57.73888779 224.11427307]
[-42.79141617 225.36848450]
[-29.59811592 232.50549316]
[-20.36869431 244.32994080]
[-16.64895248 258.86141968]
[-19.06190109 273.66604614]
[-27.20340157 286.26431274]
[-39.70986176 294.54614258]
[-54.48661423 297.12442017]
[-69.05875397 293.56732178]
[-80.98563385 284.47067261]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 68]
[4 67]
[7 64]
[8 63]
[10 62]
[11 61]
[12 60]
[13 59]
[14 58]
[15 57]
[16 56]
[17 55]
[18 54]
[20 52]
[21 51]
[22 50]
[23 49]
[24 47]
[25 46]
[26 45]
[28 43]
[29 42]
[31 40]
[32 39]
[69 159]
[70 158]
[71 157]
[72 156]
[73 155]
[75 153]
[76 152]
[77 151]
[78 150]
[79 149]
[80 148]
[81 111]
[82 110]
[83 109]
[84 108]
[86 106]
[87 105]
[93 104]
[94 103]
[95 102]
[114 135]
[115 134]
[116 133]
[117 132]
[118 131]
[120 130]
[121 129]
[122 128]
[140 147]
[141 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
