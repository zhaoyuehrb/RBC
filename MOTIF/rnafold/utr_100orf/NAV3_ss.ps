%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:22:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAUGCAGGGAAGUUUUGCCUCUUCCUGAAAAUUAUAUUAUUAGCUUUUUAAAAAUCAGGAUGACUGCUAGUUUUGUUUAAAGUAUUUGUUCUGGAAAUACUAAAGUUGGAGUCUACCAGACUGAGGUUAGAAGCAUUUUCUUUGGCAGCAAGAAGAUAAUUUUAUAGAAGCCAUGCCUGUUCUUGGGGUUGCCUCAAAACUGAGGCAGCCAGCUGUUGGGUCAAAGCCUGUGCAUACUGCUCUUCCGAUACCAA\
AUCUUGGCACUACUGGGU\
) } def
/len { sequence length } bind def

/coor [
[90.52555847 252.91009521]
[77.21653748 242.40740967]
[83.62447357 226.71109009]
[83.96840668 211.71502686]
[76.52497101 198.81369019]
[84.57666779 185.19454956]
[84.92060852 170.19850159]
[85.26454926 155.20243835]
[70.60073090 152.04452515]
[64.74152374 165.85284424]
[58.88231277 179.66116333]
[53.02310562 193.46948242]
[47.16389847 207.27780151]
[55.27259827 220.50764465]
[54.02280807 235.97430420]
[43.89510345 247.73054504]
[28.78378677 251.25584412]
[14.49947166 245.19465637]
[6.53476667 231.87763977]
[7.95226479 216.42544556]
[18.20690918 204.77976990]
[33.35557938 201.41859436]
[39.21478653 187.61027527]
[45.07399368 173.80195618]
[50.93320084 159.99363708]
[56.79240799 146.18531799]
[53.16720581 139.61965942]
[41.40520477 148.92854309]
[29.64320564 158.23742676]
[17.88120651 167.54631042]
[11.22545052 180.98881531]
[-2.01700807 188.03419495]
[-16.88419533 186.04252625]
[-27.80534744 175.76008606]
[-30.68828773 161.03973389]
[-24.45277214 147.39721680]
[-11.43526268 139.94441223]
[3.48505116 141.47322083]
[17.62896729 136.47825623]
[31.77288246 131.48329163]
[45.91679764 126.48833466]
[42.29159546 119.92267609]
[27.48443031 117.52521515]
[12.67726326 115.12774658]
[-2.12990284 112.73028564]
[-16.93706894 110.33282471]
[-31.74423599 107.93535614]
[-46.55140305 105.53789520]
[-53.98446655 118.72785187]
[-65.46020508 128.56042480]
[-79.58100891 133.86354065]
[-94.63581085 134.01521301]
[-108.80739594 129.01643372]
[-120.39176178 119.48873901]
[-128.00300598 106.59696198]
[-130.73913574 91.90686035]
[-145.54629517 89.50939941]
[-160.35346985 87.11193848]
[-175.16062927 84.71446991]
[-189.96780396 82.31700897]
[-204.77496338 79.91954803]
[-219.58212280 77.52207947]
[-234.38929749 75.12461853]
[-249.19645691 72.72715759]
[-264.05587769 78.15929413]
[-275.38287354 68.48725128]
[-290.19003296 66.08979034]
[-304.99722290 63.69232559]
[-319.80438232 61.29486084]
[-328.49728394 73.84061432]
[-341.77697754 81.36476898]
[-357.00674438 82.37339020]
[-371.16268921 76.66621399]
[-381.43414307 65.37641907]
[-385.78173828 50.74558258]
[-383.34222412 35.67868042]
[-374.59997559 23.16725540]
[-361.29077148 15.69545841]
[-346.05715942 14.74681950]
[-331.92379761 20.50969315]
[-321.69683838 31.83985519]
[-317.40692139 46.48769379]
[-302.59976196 48.88515854]
[-287.79257202 51.28262329]
[-272.98541260 53.68008423]
[-259.18508911 48.07646179]
[-246.79899597 57.91999054]
[-231.99183655 60.31745148]
[-217.18466187 62.71491623]
[-202.37750244 65.11238098]
[-187.57032776 67.50984192]
[-172.76316833 69.90730286]
[-157.95600891 72.30477142]
[-143.14883423 74.70223236]
[-128.34167480 77.09969330]
[-121.10984802 64.02353668]
[-109.81944275 54.19216537]
[-95.82045746 48.80672836]
[-80.79554749 48.53522873]
[-66.55778503 53.42973328]
[-54.83184433 62.91775131]
[-47.04511261 75.86915588]
[-44.15393829 90.73072815]
[-29.34677124 93.12819672]
[-14.53960609 95.52565765]
[0.26756030 97.92311859]
[15.07472610 100.32058716]
[29.88189316 102.71804810]
[44.68906021 105.11550903]
[55.89966202 80.41712189]
[75.44859314 67.21540833]
[68.80783081 53.76548767]
[62.16707611 40.31556702]
[55.52632141 26.86564636]
[48.88556290 13.41572666]
[36.45178986 1.89020669]
[44.08487701 -13.24823189]
[60.74474716 -10.10418606]
[62.33548355 6.77496958]
[68.97624207 20.22488976]
[75.61699677 33.67480850]
[82.25775146 47.12472916]
[88.89851379 60.57464981]
[93.92701721 59.49419403]
[99.05128479 59.05245590]
[104.19052124 59.25640106]
[108.43150330 44.86841965]
[112.67249298 30.48043823]
[116.49937439 15.97681808]
[119.90901184 1.36947763]
[123.31864166 -13.23786259]
[126.72827911 -27.84520340]
[130.13790894 -42.45254517]
[122.05920410 -55.77066422]
[125.72514343 -70.53601074]
[138.47172546 -78.15574646]
[141.88134766 -92.76308441]
[145.29098511 -107.37042999]
[148.70062256 -121.97776794]
[152.11026001 -136.58511353]
[155.51988220 -151.19244385]
[158.92951965 -165.79978943]
[157.83341980 -174.82969666]
[162.46289062 -180.55459595]
[166.03977966 -195.12188721]
[160.94625854 -210.70996094]
[172.09906006 -222.73274231]
[188.02513123 -218.82220459]
[192.34111023 -203.00119019]
[180.60707092 -191.54499817]
[177.03018188 -176.97770691]
[173.53686523 -162.39015198]
[170.12722778 -147.78282166]
[166.71759033 -133.17547607]
[163.30796814 -118.56813812]
[159.89833069 -103.96079254]
[156.48869324 -89.35345459]
[153.07905579 -74.74611664]
[161.13504028 -62.27066422]
[157.88526917 -47.40817261]
[144.74525452 -39.04291153]
[141.33561707 -24.43556976]
[137.92597961 -9.82822990]
[134.51635742 4.77911091]
[131.10671997 19.38645172]
[144.94834900 13.60636234]
[158.15386963 20.72070885]
[160.94117737 35.45946503]
[151.24552917 46.90474319]
[136.24908447 46.57833862]
[127.06047821 34.72142410]
[122.81948853 49.10940552]
[118.57849884 63.49739075]
[136.30049133 81.02962494]
[140.57537842 105.58921814]
[154.80900574 110.32250214]
[169.04263306 115.05579376]
[183.27626038 119.78907776]
[193.93066406 108.91502380]
[208.19168091 103.76621246]
[223.21253967 105.31349182]
[236.01942444 113.19668579]
[244.10021973 125.80660248]
[245.89727783 140.61323547]
[260.13088989 145.34651184]
[274.36453247 150.07980347]
[288.59814453 154.81307983]
[303.53509521 156.18704224]
[318.39334106 154.12971497]
[333.25158691 152.07240295]
[348.10983276 150.01509094]
[362.96807861 147.95777893]
[377.82632446 145.90046692]
[392.68457031 143.84313965]
[407.54281616 141.78582764]
[422.40106201 139.72851562]
[437.25930786 137.67120361]
[449.86325073 127.17966461]
[465.15551758 133.10237122]
[467.40472412 149.34654236]
[454.29708862 159.20156860]
[439.31661987 152.52944946]
[424.45837402 154.58676147]
[409.60012817 156.64407349]
[394.74188232 158.70138550]
[379.88363647 160.75871277]
[365.02539062 162.81602478]
[350.16714478 164.87333679]
[335.30889893 166.93064880]
[320.45065308 168.98796082]
[305.59240723 171.04527283]
[303.76223755 178.31855774]
[314.52975464 188.76174927]
[300.10189819 192.86509705]
[298.27172852 200.13836670]
[310.38671875 208.98295593]
[322.50173950 217.82752991]
[334.61672974 226.67211914]
[346.73175049 235.51669312]
[358.84674072 244.36128235]
[370.96176147 253.20587158]
[382.08328247 249.13293457]
[393.67379761 250.89877319]
[402.88790894 257.95343018]
[407.51974487 268.46301270]
[406.53060913 279.78527832]
[418.43963623 288.90530396]
[430.34866333 298.02536011]
[443.18927002 297.10311890]
[452.91470337 304.91348267]
[454.66839600 316.85852051]
[466.47204590 326.11450195]
[482.77493286 327.88885498]
[489.14126587 343.00183105]
[479.02191162 355.90649414]
[462.82678223 353.32766724]
[457.21606445 337.91818237]
[445.41241455 328.66220093]
[427.91632080 327.10968018]
[421.22860718 309.93438721]
[409.31958008 300.81433105]
[397.41058350 291.69427490]
[379.40991211 295.16912842]
[364.34945679 284.16305542]
[362.11715698 265.32086182]
[350.00216675 256.47628784]
[337.88714600 247.63169861]
[325.77215576 238.78712463]
[313.65713501 229.94253540]
[301.54214478 221.09796143]
[289.42712402 212.25337219]
[283.86486816 169.04670715]
[269.63122559 164.31341553]
[255.39761353 159.58013916]
[241.16398621 154.84684753]
[230.85771179 165.62860107]
[216.83459473 170.88803101]
[201.85722351 169.53178406]
[188.90112305 161.77552795]
[180.56355286 149.11172485]
[178.54296875 134.02270508]
[164.30934143 129.28941345]
[150.07572937 124.55612946]
[135.84210205 119.82284546]
[132.00987244 131.06495667]
[124.60742950 141.50666809]
[113.83934784 150.02069092]
[100.26060486 155.54638672]
[99.91666412 170.54243469]
[99.57272339 185.53849792]
[106.99156189 199.51245117]
[98.96446991 212.05895996]
[98.62052917 227.05502319]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 273]
[4 272]
[6 270]
[7 269]
[8 268]
[9 26]
[10 25]
[11 24]
[12 23]
[13 22]
[42 109]
[43 108]
[44 107]
[45 106]
[46 105]
[47 104]
[48 103]
[56 95]
[57 94]
[58 93]
[59 92]
[60 91]
[61 90]
[62 89]
[63 88]
[64 87]
[66 85]
[67 84]
[68 83]
[69 82]
[111 123]
[112 122]
[113 121]
[114 120]
[115 119]
[126 173]
[127 172]
[128 171]
[129 165]
[130 164]
[131 163]
[132 162]
[133 161]
[136 158]
[137 157]
[138 156]
[139 155]
[140 154]
[141 153]
[142 152]
[144 151]
[145 150]
[175 264]
[176 263]
[177 262]
[178 261]
[184 255]
[185 254]
[186 253]
[187 252]
[188 211]
[189 210]
[190 209]
[191 208]
[192 207]
[193 206]
[194 205]
[195 204]
[196 203]
[197 202]
[215 251]
[216 250]
[217 249]
[218 248]
[219 247]
[220 246]
[221 245]
[226 242]
[227 241]
[228 240]
[231 238]
[232 237]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
