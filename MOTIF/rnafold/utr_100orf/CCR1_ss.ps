%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:37:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAAACCCAGAAAGCCCCAGAAACAAAGACUUCACGGACAAAGUCCCUUGGAACCAGAGAGAAGCCGGGAUGGAAACUCCAAACACCACAGAGGACUAUGACACGACCACAGAGUUUGACUAUGGGGAUGCAACUCCGUGCCAGAAGGUGAACGAGAGGGCCUUUGGGG\
) } def
/len { sequence length } bind def

/coor [
[109.56844330 240.48510742]
[98.27441406 250.99455261]
[83.08740234 253.70715332]
[68.85353088 247.75733948]
[60.11476898 235.04365540]
[59.65963364 219.62300110]
[67.63334656 206.41606140]
[81.49153900 199.63711548]
[83.13210297 184.72709656]
[84.77267456 169.81707764]
[86.41323853 154.90705872]
[88.05381012 139.99705505]
[89.69437408 125.08703613]
[78.94253540 117.09235382]
[73.32984161 104.92623138]
[74.22607422 91.55783844]
[81.41251373 80.24979401]
[74.55388641 66.90966034]
[67.69525146 53.56952667]
[60.83661270 40.22939301]
[53.97797775 26.88926125]
[38.70612717 26.04202843]
[25.99276352 17.71933746]
[19.19737053 4.24012995]
[20.05552673 -10.73049259]
[28.23678589 -23.17768478]
[21.37815094 -36.51781464]
[14.51951694 -49.85794830]
[7.66088200 -63.19808197]
[-7.11863899 -68.11779022]
[-13.88423538 -81.74428558]
[-9.10296535 -95.80397797]
[-15.96160030 -109.14411163]
[-33.92676926 -111.35847473]
[-46.87292862 -123.78411102]
[-49.77113724 -141.33398438]
[-41.65174103 -156.98391724]
[-48.99301147 -170.06465149]
[-65.90335846 -174.47402954]
[-74.24480438 -189.44558716]
[-69.29404449 -205.50079346]
[-76.87300110 -218.44528198]
[-90.52274323 -226.44497681]
[-90.27634430 -241.33753967]
[-97.85529327 -254.28201294]
[-105.43424225 -267.22650146]
[-113.01319885 -280.17095947]
[-120.59214783 -293.11544800]
[-128.28900146 -305.99017334]
[-136.10310364 -318.79406738]
[-144.03381348 -331.52606201]
[-152.08045959 -344.18511963]
[-160.12712097 -356.84414673]
[-174.09709167 -353.97488403]
[-188.17697144 -356.04815674]
[-200.67430115 -362.79406738]
[-210.09397888 -373.38238525]
[-215.31700134 -386.52453613]
[-215.73345947 -400.63049316]
[-211.31359863 -414.00109863]
[-202.60906982 -425.03277588]
[-210.42317200 -437.83666992]
[-218.23727417 -450.64056396]
[-233.58119202 -452.00827026]
[-245.04364014 -462.03152466]
[-248.36682129 -476.70870972]
[-242.48069763 -490.36489868]
[-250.29479980 -503.16879272]
[-265.48675537 -508.32479858]
[-270.79187012 -523.46533203]
[-262.14053345 -536.97583008]
[-246.16931152 -538.49224854]
[-235.12994385 -526.85131836]
[-237.49090576 -510.98291016]
[-229.67678833 -498.17901611]
[-214.84037781 -497.16961670]
[-203.30682373 -487.50311279]
[-199.63383484 -472.72604370]
[-205.43338013 -458.45468140]
[-197.61927795 -445.65078735]
[-189.80517578 -432.84689331]
[-174.20576477 -435.53903198]
[-158.72836304 -432.03762817]
[-145.74383545 -422.84881592]
[-137.25273132 -409.35217285]
[-134.57713318 -393.59371948]
[-138.15483093 -377.97583008]
[-147.46807861 -364.89080811]
[-139.42141724 -352.23178101]
[-131.37477112 -339.57272339]
[-125.10974121 -335.59991455]
[-123.29920197 -326.60818481]
[-115.48509979 -313.80429077]
[-109.29367828 -309.71768188]
[-107.64766693 -300.69439697]
[-100.06871796 -287.74990845]
[-92.48976898 -274.80545044]
[-84.91082001 -261.86096191]
[-77.33186340 -248.91648865]
[-64.22422028 -241.84266663]
[-63.92852020 -226.02423096]
[-56.34957123 -213.07974243]
[-43.52926636 -211.58937073]
[-33.77024078 -202.84811401]
[-30.79522324 -189.88893127]
[-35.91226959 -177.40591431]
[-28.57100105 -164.32518005]
[-16.39581299 -164.70838928]
[-5.15237093 -159.83660889]
[2.98970270 -150.58279419]
[6.43072462 -138.67169189]
[4.45497370 -126.35871124]
[-2.62146831 -116.00274658]
[4.23716640 -102.66261292]
[18.45379829 -98.37040710]
[25.59946442 -84.93932343]
[21.00101471 -70.05671692]
[27.85964966 -56.71658325]
[34.71828461 -43.37644958]
[41.57691956 -30.03631973]
[56.46043015 -29.44754410]
[69.13520813 -21.43468285]
[76.14375305 -8.06506348]
[75.51512909 7.11721659]
[67.31810760 20.03062630]
[74.17674255 33.37075806]
[81.03537750 46.71089172]
[87.89401245 60.05102539]
[94.75264740 73.39115906]
[113.60925293 76.54038239]
[125.70365906 91.34626770]
[125.02639008 110.45203400]
[136.72941589 119.83495331]
[149.63639832 119.20638275]
[159.19572449 127.29300690]
[160.61994934 139.32868958]
[172.14965820 148.92378235]
[183.67936707 158.51887512]
[195.29621887 168.00828552]
[206.99925232 177.39118958]
[218.70227051 186.77410889]
[230.57472229 195.94171143]
[242.61262512 204.89094543]
[254.65052795 213.84019470]
[270.99365234 215.19450378]
[277.74670410 230.13867188]
[267.96270752 243.29942322]
[251.70661926 241.13810730]
[245.70129395 225.87809753]
[233.66339111 216.92886353]
[221.62548828 207.97961426]
[216.82000732 207.78425598]
[212.09516907 204.54335022]
[209.31936646 198.47714233]
[197.61633301 189.09422302]
[185.91329956 179.71130371]
[178.70108032 177.97412109]
[174.08427429 170.04858398]
[162.55456543 160.45349121]
[151.02485657 150.85839844]
[133.60853577 148.83654785]
[127.34650421 131.53797913]
[115.64347076 122.15506744]
[110.37887573 125.05682373]
[104.60439301 126.72760773]
[102.96382141 141.63761902]
[101.32325745 156.54763794]
[99.68268585 171.45764160]
[98.04212189 186.36766052]
[96.40155029 201.27767944]
[108.45424652 210.90763855]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 170]
[9 169]
[10 168]
[11 167]
[12 166]
[13 165]
[17 129]
[18 128]
[19 127]
[20 126]
[21 125]
[26 120]
[27 119]
[28 118]
[29 117]
[32 114]
[33 113]
[37 107]
[38 106]
[41 102]
[42 101]
[44 99]
[45 98]
[46 97]
[47 96]
[48 95]
[49 93]
[50 92]
[51 90]
[52 89]
[53 88]
[61 81]
[62 80]
[63 79]
[67 75]
[68 74]
[132 163]
[133 162]
[136 160]
[137 159]
[138 158]
[139 156]
[140 155]
[141 154]
[142 151]
[143 150]
[144 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
