%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:36:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGCGGGCCCGCCCCAUGCCGGGCGGGGCCUGGGGCCCGCCACCUCCGCCCGUGGCCGGAGAGCCCCAGGCCCGAGCCACGCGGUCUUCCGGGCCCGGGUCGGGGCUCGAUGGCUACGUGGAGGCGGGACGGCCGACUGACAGGCGGCCAAAGGCUGCUGUGCGCUGGGCUGGCGGGGACGCUCAGCCUCAGCCUCACCGCGCCCCUGG\
) } def
/len { sequence length } bind def

/coor [
[102.73101044 142.11285400]
[90.55761719 133.34880066]
[90.65195465 118.34902191]
[81.65463257 130.35102844]
[72.65730286 142.35302734]
[63.65997314 154.35502625]
[54.66264343 166.35704041]
[45.66531372 178.35903931]
[36.66798782 190.36103821]
[27.67065811 202.36305237]
[18.94489670 214.56390381]
[10.49509621 226.95748901]
[2.04529500 239.35107422]
[-6.40450573 251.74465942]
[-14.85430717 264.13824463]
[-15.72846031 270.69293213]
[-19.25293922 275.15231323]
[-23.74688911 276.77099609]
[-32.56366730 288.90625000]
[-36.98208618 305.27432251]
[-53.93363190 305.55972290]
[-58.90052414 289.34967041]
[-44.69892120 280.08947754]
[-35.88214493 267.95422363]
[-27.24788857 255.68843079]
[-18.79808807 243.29486084]
[-10.34828663 230.90127563]
[-1.89848578 218.50769043]
[6.55131531 206.11410522]
[6.25817108 202.59963989]
[7.65321875 198.76856995]
[10.86669254 195.41616821]
[15.66865540 193.36572266]
[24.66598320 181.36370850]
[33.66331100 169.36170959]
[42.66064072 157.35971069]
[51.65797043 145.35771179]
[60.65529633 133.35569763]
[69.65262604 121.35369873]
[78.64995575 109.35169220]
[81.74569702 103.08562469]
[86.32347870 98.93189240]
[91.53929138 97.16489410]
[82.54196167 85.16288757]
[73.54463196 73.16088104]
[64.54730225 61.15888214]
[55.54997635 49.15687943]
[46.55265045 37.15487671]
[37.55532074 25.15287209]
[31.63497543 22.20709801]
[28.55407906 17.43047142]
[28.47475433 12.65454483]
[19.84049797 0.38875371]
[11.20624256 -11.87703705]
[2.57198644 -24.14282799]
[-6.06226969 -36.40861893]
[-14.69652557 -48.67440796]
[-23.33078194 -60.94020081]
[-38.64788437 -63.77288055]
[-47.22951889 -76.33513641]
[-44.43459702 -90.92019653]
[-53.06885147 -103.18598938]
[-61.70310593 -115.45177460]
[-70.33736420 -127.71756744]
[-78.97161865 -139.98335266]
[-87.60587311 -152.24914551]
[-96.24012756 -164.51493835]
[-103.73945618 -169.73149109]
[-104.91018677 -177.02943420]
[-113.35999298 -189.42300415]
[-121.80979156 -201.81658936]
[-130.25959778 -214.21017456]
[-138.70939636 -226.60375977]
[-147.15919495 -238.99732971]
[-161.32595825 -246.04100037]
[-162.10263062 -260.91534424]
[-170.55242920 -273.30892944]
[-179.00224304 -285.70251465]
[-183.70736694 -287.96633911]
[-186.76719666 -291.45953369]
[-187.98896790 -295.34930420]
[-187.53843689 -298.84710693]
[-195.42369080 -311.60729980]
[-203.30895996 -324.36749268]
[-217.99850464 -331.65783691]
[-218.75949097 -348.03933716]
[-204.80906677 -356.66009521]
[-190.49822998 -348.65182495]
[-190.54875183 -332.25277710]
[-182.66349792 -319.49255371]
[-174.77824402 -306.73236084]
[-166.60865784 -294.15231323]
[-158.15885925 -281.75872803]
[-149.70906067 -269.36514282]
[-136.14666748 -263.20794678]
[-134.76560974 -247.44714355]
[-126.31581116 -235.05355835]
[-117.86601257 -222.65997314]
[-109.41620636 -210.26638794]
[-100.96640778 -197.87280273]
[-92.51660919 -185.47923279]
[-83.97434235 -173.14920044]
[-75.34008789 -160.88340759]
[-66.70582581 -148.61761475]
[-58.07157135 -136.35182190]
[-49.43731689 -124.08603668]
[-40.80305862 -111.82024384]
[-32.16880417 -99.55445099]
[-17.49581528 -97.26557922]
[-8.56472015 -84.94931793]
[-11.06499100 -69.57445526]
[-2.43073487 -57.30866623]
[6.20352125 -45.04287338]
[14.83777714 -32.77708435]
[23.47203255 -20.51129341]
[32.10628891 -8.24550247]
[40.74054337 4.02028847]
[49.55732346 16.15554428]
[58.55465317 28.15754700]
[67.55197906 40.15954971]
[76.54930878 52.16155243]
[85.54663849 64.16355896]
[94.54396820 76.16555786]
[103.54129791 88.16756439]
[115.93487549 96.61736298]
[130.39431763 100.60791779]
[144.85375977 104.59847260]
[159.31320190 108.58901978]
[157.84667969 97.52635956]
[161.88793945 85.39941406]
[171.72404480 74.47219849]
[184.71441650 66.97219849]
[197.70480347 59.47219849]
[210.69519043 51.97219849]
[223.68556213 44.47219849]
[229.55335999 37.47067261]
[236.92684937 36.95883179]
[250.02796936 29.65400124]
[257.97000122 15.30631542]
[274.36914062 15.28105450]
[282.35534668 29.60420418]
[273.71310425 43.54133606]
[257.33279419 42.75512314]
[244.23168945 50.05995560]
[231.18556213 57.46257782]
[218.19519043 64.96257782]
[205.20480347 72.46257782]
[192.21441650 79.96257782]
[179.22404480 87.46257782]
[178.83152771 94.95230103]
[191.41174316 103.12162781]
[178.04647827 109.93174744]
[177.65396118 117.42146301]
[189.78921509 126.23824310]
[201.92446899 135.05502319]
[210.70733643 137.56773376]
[214.17399597 144.09558105]
[226.17599487 153.09291077]
[241.85897827 155.17967224]
[247.40148926 169.00465393]
[259.40350342 178.00198364]
[271.40548706 186.99929810]
[289.73373413 188.77261353]
[295.99682617 205.16557312]
[308.13208008 213.98234558]
[320.26733398 222.79913330]
[332.40258789 231.61590576]
[344.60345459 240.34165955]
[356.86923218 248.97592163]
[369.13504028 257.61016846]
[381.40081787 266.24444580]
[393.66662598 274.87869263]
[405.99664307 283.42095947]
[418.39022827 291.87075806]
[430.78381348 300.32055664]
[447.16864014 301.00582886]
[454.52676392 315.66152954]
[445.28878784 329.21115112]
[428.95794678 327.71597290]
[422.33401489 312.71414185]
[409.94042969 304.26434326]
[397.54684448 295.81454468]
[390.24890137 294.64379883]
[385.03234863 287.14447021]
[372.76657104 278.51022339]
[360.50076294 269.87597656]
[348.23498535 261.24169922]
[335.96920776 252.60745239]
[328.68960571 251.32768250]
[323.58581543 243.75115967]
[311.45056152 234.93438721]
[299.31530762 226.11759949]
[287.18005371 217.30082703]
[275.18688965 218.88273621]
[265.00451660 211.63597107]
[262.40817261 199.00131226]
[250.40617371 190.00398254]
[238.40415955 181.00665283]
[223.57965088 179.56343079]
[217.17866516 165.09490967]
[205.17666626 156.09757996]
[193.10769653 147.19027710]
[180.97244263 138.37350464]
[168.83718872 129.55671692]
[155.32264709 123.04846191]
[140.86320496 119.05791473]
[126.40376282 115.06735992]
[111.94432068 111.07680511]
[121.19466400 122.88490295]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 40]
[4 39]
[5 38]
[6 37]
[7 36]
[8 35]
[9 34]
[10 33]
[11 29]
[12 28]
[13 27]
[14 26]
[15 25]
[18 24]
[19 23]
[43 124]
[44 123]
[45 122]
[46 121]
[47 120]
[48 119]
[49 118]
[52 117]
[53 116]
[54 115]
[55 114]
[56 113]
[57 112]
[58 111]
[61 108]
[62 107]
[63 106]
[64 105]
[65 104]
[66 103]
[67 102]
[69 101]
[70 100]
[71 99]
[72 98]
[73 97]
[74 96]
[76 94]
[77 93]
[78 92]
[82 91]
[83 90]
[84 89]
[125 208]
[126 207]
[127 206]
[128 205]
[131 149]
[132 148]
[133 147]
[134 146]
[135 145]
[137 144]
[138 143]
[153 204]
[154 203]
[155 202]
[157 201]
[158 200]
[160 198]
[161 197]
[162 196]
[164 193]
[165 192]
[166 191]
[167 190]
[168 188]
[169 187]
[170 186]
[171 185]
[172 184]
[173 182]
[174 181]
[175 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
