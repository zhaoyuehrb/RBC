%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:34:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCAGCGCAGCCAUUUUGGCUUCCUGACCUUGGGCUACGGCUGACCGUUUUUUGUGGUGUACUCCGUGCCAUCAUGUCCGUCCUGACGCCGCUGCUGCUGCGGGGCUUGACAGGCUCGGCCCGGCGGCUCCCAGUGCCGCGCGCCAAGAUCCAUUCGUUGCCGCCGGAGGGGA\
) } def
/len { sequence length } bind def

/coor [
[89.87346649 104.78347778]
[74.92237854 103.57304382]
[59.97129822 102.36260223]
[45.00090027 101.42074585]
[30.01600266 100.74777222]
[15.03110695 100.07479858]
[0.89769793 107.18516541]
[-11.46962547 98.88465118]
[-26.45452118 98.21167755]
[-39.78892136 105.08145142]
[-47.93967819 117.67371368]
[-56.09043503 130.26597595]
[-64.24119568 142.85824585]
[-72.39195251 155.45051575]
[-75.92286682 172.03269958]
[-92.83447266 173.23017883]
[-98.66674805 157.31097412]
[-84.98421478 147.29975891]
[-76.83345795 134.70748901]
[-68.68270111 122.11522675]
[-60.53194427 109.52295685]
[-52.38118744 96.93069458]
[-54.82648468 89.84052277]
[-69.00690460 94.73089600]
[-73.89705658 80.55039978]
[-59.71707916 75.66017914]
[-62.16237640 68.57000732]
[-76.34272003 63.67941284]
[-90.52306366 58.78881836]
[-102.87943268 69.75183868]
[-118.98424530 72.97877502]
[-134.43305969 67.68345642]
[-145.04927063 55.39735794]
[-148.01319885 39.52818680]
[-162.27905273 34.89293289]
[-176.54489136 30.25767708]
[-185.70793152 30.57973671]
[-191.02389526 25.40905380]
[-205.20423889 20.51845932]
[-219.38458252 15.62786484]
[-233.56492615 10.73727131]
[-248.07453918 21.56431770]
[-266.02166748 21.54046822]
[-280.25155640 10.86311150]
[-285.20385742 -6.06068897]
[-299.55062866 -10.43911076]
[-313.89736938 -14.81753254]
[-328.24414062 -19.19595528]
[-341.25515747 -10.52145576]
[-356.79229736 -12.29111004]
[-367.51934814 -23.66934204]
[-368.37136841 -39.28369904]
[-358.94601440 -51.76155472]
[-343.69369507 -55.21125412]
[-329.81607056 -48.00394821]
[-323.86572266 -33.54270935]
[-309.51895142 -29.16428947]
[-295.17221069 -24.78586769]
[-280.82543945 -20.40744591]
[-272.29495239 -29.09763718]
[-260.80670166 -33.34907532]
[-248.53002930 -32.29325485]
[-237.81129456 -26.07011604]
[-230.72543335 -15.81308556]
[-228.67433167 -3.44307041]
[-214.49398804 1.44752371]
[-200.31364441 6.33811808]
[-186.13330078 11.22871208]
[-171.90963745 15.99182892]
[-157.64379883 20.62708282]
[-143.37794495 25.26233864]
[-133.83840942 15.46426678]
[-120.94358063 10.71619129]
[-107.19599915 12.00046349]
[-95.29003906 19.12275314]
[-87.58388519 30.73895073]
[-85.63246918 44.60847855]
[-71.45212555 49.49907303]
[-57.27178192 54.38966751]
[-31.68467903 63.88929749]
[-25.78154945 83.22678375]
[-10.79665375 83.89974976]
[2.26493573 76.74124908]
[15.70407963 85.08990479]
[30.68897629 85.76287842]
[45.67387009 86.43584442]
[49.76235580 83.90896606]
[55.48744202 83.94669342]
[61.18173981 87.41152191]
[76.13282013 88.62195587]
[91.08390045 89.83239746]
[105.26424408 84.94180298]
[116.29049683 74.77215576]
[127.31675720 64.60251617]
[138.34300232 54.43286514]
[149.36926270 44.26322174]
[160.39552307 34.09357452]
[171.42176819 23.92392731]
[172.72813416 11.07010078]
[182.14945984 2.82642555]
[194.26080322 3.21331453]
[205.46783447 -6.75676107]
[210.63566589 -21.71015739]
[225.28742981 -24.38880157]
[236.49446106 -34.35887527]
[247.70149231 -44.32895279]
[258.90853882 -54.29902649]
[270.11557007 -64.26910400]
[281.32260132 -74.23918152]
[289.13775635 -89.28443909]
[305.75848389 -85.93965149]
[307.14547729 -69.04253387]
[291.29266357 -63.03214645]
[280.08563232 -53.06206894]
[268.87860107 -43.09199524]
[257.67156982 -33.12191772]
[246.46453857 -23.15184402]
[235.25750732 -13.18176842]
[230.89126587 1.05850112]
[215.43791199 4.45027256]
[204.23088074 14.42034817]
[199.63273621 31.34146500]
[181.59141541 34.95018387]
[170.56517029 45.11982727]
[159.53890991 55.28947449]
[148.51264954 65.45912170]
[137.48640442 75.62876892]
[126.46014404 85.79841614]
[115.43389130 95.96806335]
[115.43389130 110.96806335]
[126.46014404 121.13770294]
[137.48640442 131.30735779]
[148.51264954 141.47700500]
[160.11053467 138.68850708]
[171.49382019 141.82803345]
[179.85087585 149.99957275]
[183.17597961 161.07952881]
[180.75007629 172.26760864]
[191.40417480 182.82649231]
[202.05827332 193.38539124]
[210.38610840 197.22102356]
[212.80671692 204.23074341]
[223.26954651 214.97918701]
[233.73239136 225.72763062]
[248.90257263 230.21937561]
[252.23587036 244.73620605]
[262.69869995 255.48464966]
[273.16156006 266.23309326]
[283.72045898 276.88720703]
[294.37454224 287.44607544]
[310.35931396 288.81222534]
[319.13732910 302.24078369]
[313.97482300 317.43054199]
[298.83203125 322.72918701]
[285.32522583 314.07205200]
[283.81564331 298.10018921]
[273.16156006 287.54129028]
[266.17382812 285.05786133]
[262.41311646 276.69592285]
[251.95027161 265.94747925]
[241.48742676 255.19905090]
[227.06561279 251.47610474]
[222.98394775 236.19047546]
[212.52110291 225.44203186]
[202.05827332 214.69358826]
[191.49937439 204.03948975]
[180.84527588 193.48059082]
[170.19117737 182.92170715]
[151.94898987 184.12666321]
[138.36325073 171.42218018]
[138.34300232 152.50325012]
[127.31675720 142.33360291]
[116.29049683 132.16395569]
[105.26424408 121.99431610]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 91]
[2 90]
[3 89]
[4 86]
[5 85]
[6 84]
[8 82]
[9 81]
[10 22]
[11 21]
[12 20]
[13 19]
[14 18]
[27 79]
[28 78]
[29 77]
[34 71]
[35 70]
[36 69]
[38 68]
[39 67]
[40 66]
[41 65]
[45 59]
[46 58]
[47 57]
[48 56]
[92 129]
[93 128]
[94 127]
[95 126]
[96 125]
[97 124]
[98 123]
[101 121]
[102 120]
[104 118]
[105 117]
[106 116]
[107 115]
[108 114]
[109 113]
[130 174]
[131 173]
[132 172]
[133 171]
[138 168]
[139 167]
[140 166]
[142 165]
[143 164]
[144 163]
[146 161]
[147 160]
[148 159]
[149 157]
[150 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
