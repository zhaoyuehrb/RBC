%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:55:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCGGACACUUCCCUGGGCGGGACUGUCUCGUGGCACCCGGUGGAACCGAGGAGAACGUGGAGCGCCGGGAGCGGCGAAUAUGGACGACUACAGCCUGGAUGAGUUCCGUCGGCGCUGGCAGGAGGAGCUGGCGCAGGCCCAGGCGCCGAAGAAGCGGCGACGGCCCGAGGCUGCCGAGA\
) } def
/len { sequence length } bind def

/coor [
[56.33295059 394.82278442]
[66.18590546 382.16189575]
[65.67099762 367.17071533]
[65.15608215 352.17956543]
[64.64116669 337.18841553]
[64.12625122 322.19723511]
[63.61133957 307.20608521]
[53.30303955 318.10281372]
[38.41941452 319.96768188]
[25.74134827 311.95104980]
[21.04488945 297.70523071]
[26.46971703 283.72055054]
[39.54431152 276.36831665]
[54.31196976 278.99819946]
[64.04393768 290.41018677]
[65.32989502 275.46542358]
[66.61585236 260.52062988]
[64.61550140 257.58856201]
[63.94991684 253.53471375]
[65.13395691 249.00354004]
[68.37220001 244.84629822]
[70.42578888 229.98753357]
[72.47937775 215.12876892]
[74.53297424 200.27000427]
[72.32868958 193.19606018]
[76.75146484 185.17465210]
[79.05982971 170.35333252]
[81.36818695 155.53201294]
[83.67654419 140.71070862]
[85.98490143 125.88938141]
[58.55623245 108.36357117]
[44.38889313 103.43544006]
[30.22155571 98.50730133]
[16.05421829 93.57917023]
[0.47807270 96.35301971]
[-9.00066757 84.86377716]
[-23.16800499 79.93563843]
[-38.74415207 82.70949554]
[-48.22289276 71.22025299]
[-62.39022827 66.29211426]
[-76.55757141 61.36397934]
[-90.72490692 56.43584442]
[-104.89224243 51.50770950]
[-119.05958557 46.57957458]
[-133.22692871 41.65143585]
[-144.60954285 48.87998962]
[-157.88302612 48.23432922]
[-168.20329285 40.17477798]
[-171.93354797 27.82621193]
[-186.01419067 22.65560150]
[-200.09484863 17.48499107]
[-212.33572388 26.87458611]
[-227.71168518 28.13292503]
[-241.31631470 20.85847664]
[-248.80842590 7.37249136]
[-247.79731750 -8.02170277]
[-238.60562134 -20.41187286]
[-224.16638184 -25.84436226]
[-209.08711243 -22.58568382]
[-198.17953491 -11.67566776]
[-194.92424011 3.40433764]
[-180.84358215 8.57494831]
[-166.76292419 13.74555874]
[-151.82968140 6.03454113]
[-135.61689758 11.60806656]
[-128.29878235 27.48409843]
[-114.13144684 32.41223526]
[-99.96411133 37.34037018]
[-85.79676819 42.26850510]
[-71.62943268 47.19664001]
[-57.46209335 52.12477875]
[-43.29475403 57.05291367]
[-28.73195267 53.92656326]
[-18.23987007 65.76830292]
[-4.07253170 70.69644165]
[10.49027061 67.57009125]
[20.98235321 79.41182709]
[35.14969254 84.33996582]
[49.31703186 89.26809692]
[63.48436737 94.19623566]
[69.44430542 89.64330292]
[67.51802063 74.76750183]
[81.36417389 80.53743744]
[87.32410431 75.98450470]
[86.29488373 61.01985931]
[73.07408142 52.89643860]
[67.18418121 38.54064560]
[70.88998413 23.47257805]
[82.76652527 13.48621464]
[98.24702454 12.42151451]
[111.37892914 20.68787766]
[117.11274719 35.10671997]
[113.24370575 50.13370132]
[101.25952911 59.99063873]
[102.28874969 74.95528412]
[115.58895874 81.89102936]
[128.44868469 74.16914368]
[141.30839539 66.44725037]
[154.16812134 58.72535706]
[167.02783203 51.00346375]
[179.88755798 43.28157043]
[165.04377747 41.12229538]
[153.64372253 31.37352562]
[149.20666504 17.04479408]
[153.10238647 2.55951214]
[164.12821960 -7.61058187]
[178.88041687 -10.32588673]
[192.80480957 -4.74816275]
[201.60284424 7.40069485]
[202.55845642 22.37022400]
[195.37583923 35.54002380]
[209.27069092 29.88910675]
[223.16555786 24.23818779]
[233.03413391 11.87203121]
[247.73855591 14.24456024]
[261.63342285 8.59364128]
[275.52828979 2.94272304]
[289.42312622 -2.70819545]
[303.31799316 -8.35911369]
[317.21286011 -14.01003265]
[331.10772705 -19.66094971]
[345.00256348 -25.31186867]
[349.62826538 -40.24963760]
[362.80151367 -48.67578506]
[378.30227661 -46.61174393]
[388.81158447 -35.03209305]
[389.36727905 -19.40438652]
[379.70693970 -7.10754967]
[364.39193726 -3.94777441]
[350.65350342 -11.41700935]
[336.75863647 -5.76609087]
[322.86376953 -0.11517267]
[308.96890259 5.53574562]
[295.07406616 11.18666458]
[281.17919922 16.83758163]
[267.28433228 22.48850060]
[253.38948059 28.13941956]
[244.51475525 40.10138321]
[228.81646729 38.13304901]
[214.92161560 43.78396606]
[201.02674866 49.43488312]
[187.60945129 56.14129257]
[174.74972534 63.86318207]
[161.89001465 71.58507538]
[149.03028870 79.30696869]
[136.17056274 87.02886200]
[123.31085205 94.75074768]
[122.92462921 109.74578094]
[135.36978149 118.11943054]
[147.81494141 126.49308777]
[160.26010132 134.86674500]
[175.72050476 131.58779907]
[188.92550659 140.27131653]
[192.04080200 155.76551819]
[183.21815491 168.87797546]
[167.69187927 171.82929993]
[154.67344666 162.86851501]
[151.88644409 147.31190491]
[139.44128418 138.93824768]
[126.99613190 130.56459045]
[114.55097198 122.19093323]
[100.80622101 128.19773865]
[98.49786377 143.01905823]
[96.18950653 157.84037781]
[93.88114929 172.66169739]
[91.57278442 187.48301697]
[89.39173126 202.32360840]
[87.33814240 217.18235779]
[85.28455353 232.04112244]
[83.23095703 246.89988708]
[81.56063080 261.80657959]
[80.27467346 276.75137329]
[78.98871613 291.69613647]
[78.60250092 306.69116211]
[79.11740875 321.68234253]
[79.63232422 336.67349243]
[80.14723969 351.66464233]
[80.66215515 366.65582275]
[81.17707062 381.64697266]
[91.87552643 393.60198975]
[89.05714417 409.39553833]
[74.88392639 416.91217041]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 179]
[3 178]
[4 177]
[5 176]
[6 175]
[7 174]
[15 173]
[16 172]
[17 171]
[21 170]
[22 169]
[23 168]
[24 167]
[26 166]
[27 165]
[28 164]
[29 163]
[30 162]
[31 80]
[32 79]
[33 78]
[34 77]
[36 75]
[37 74]
[39 72]
[40 71]
[41 70]
[42 69]
[43 68]
[44 67]
[45 66]
[49 63]
[50 62]
[51 61]
[84 95]
[85 94]
[96 147]
[97 146]
[98 145]
[99 144]
[100 143]
[101 142]
[111 141]
[112 140]
[113 139]
[115 137]
[116 136]
[117 135]
[118 134]
[119 133]
[120 132]
[121 131]
[122 130]
[148 161]
[149 160]
[150 159]
[151 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
