%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:40:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MRPL58)
} def

/sequence { (\
GGAAGCAGUCGCAAGACCUGAGCAUGGCGGCCACCAGGUGCCUGCGCUGGGGCCUGAGCCGAGCCGGAGUCUGGCUGCUCCCACCGCCCGCACGGUGCCCACGCCGGGCGCUGCACAAGCAGA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 80 0.006458489 ubox
1 81 0.492481840 ubox
1 82 0.867035655 ubox
1 85 0.023916036 ubox
2 79 0.003212110 ubox
2 80 0.496240429 ubox
2 81 0.865017005 ubox
2 84 0.023871959 ubox
3 79 0.351822143 ubox
4 79 0.917686679 ubox
5 78 0.999940662 ubox
6 77 0.999983698 ubox
7 76 0.999727719 ubox
8 75 0.999187318 ubox
8 78 0.003369334 ubox
9 74 0.997338060 ubox
9 77 0.003334084 ubox
10 73 0.986766242 ubox
11 72 0.481217104 ubox
11 75 0.039568336 ubox
12 73 0.129473673 ubox
12 74 0.044320145 ubox
13 72 0.106591090 ubox
14 72 0.857772408 ubox
15 71 0.999615923 ubox
16 70 0.999757052 ubox
17 67 0.009043977 ubox
17 69 0.999629250 ubox
18 66 0.009665779 ubox
18 67 0.999377921 ubox
18 69 0.004517863 ubox
19 66 0.998853622 ubox
19 68 0.006116971 ubox
20 65 0.998804958 ubox
22 45 0.003780486 ubox
22 64 0.999814910 ubox
23 44 0.003785050 ubox
23 63 0.999804806 ubox
24 43 0.003701259 ubox
25 61 0.989076860 ubox
26 42 0.003790918 ubox
26 60 0.999081219 ubox
27 41 0.003792034 ubox
27 59 0.999127514 ubox
28 40 0.003783530 ubox
28 56 0.029037946 ubox
28 58 0.997953586 ubox
28 61 0.040656752 ubox
29 35 0.003513832 ubox
29 54 0.997594145 ubox
29 55 0.023574269 ubox
29 60 0.041260185 ubox
30 34 0.004094718 ubox
30 53 0.998620453 ubox
30 54 0.017922433 ubox
30 59 0.041281577 ubox
31 38 0.003883638 ubox
31 52 0.998793321 ubox
31 58 0.041278396 ubox
32 37 0.003879892 ubox
32 51 0.997893021 ubox
32 56 0.003881607 ubox
34 50 0.997597192 ubox
34 51 0.005670299 ubox
35 49 0.998303435 ubox
35 50 0.007849842 ubox
35 56 0.048201747 ubox
36 48 0.981358463 ubox
36 55 0.048636973 ubox
37 42 0.003341324 ubox
37 43 0.003382408 ubox
37 47 0.927653934 ubox
37 48 0.180838681 ubox
37 54 0.048756280 ubox
38 42 0.008098008 ubox
38 45 0.785890075 ubox
38 47 0.364483781 ubox
38 53 0.048753417 ubox
39 44 0.754211680 ubox
39 46 0.480845389 ubox
39 52 0.048658367 ubox
40 45 0.486010942 ubox
40 47 0.041264709 ubox
41 46 0.046332679 ubox
41 50 0.048661240 ubox
42 49 0.048649947 ubox
46 64 0.003773693 ubox
47 63 0.003781342 ubox
48 62 0.003753721 ubox
50 60 0.003350656 ubox
82 97 0.042109155 ubox
82 113 0.018665230 ubox
83 96 0.239959552 ubox
83 112 0.021280078 ubox
84 95 0.262424187 ubox
85 94 0.262870872 ubox
85 97 0.006792504 ubox
85 110 0.882337729 ubox
86 93 0.258645201 ubox
86 96 0.034119852 ubox
86 109 0.915958883 ubox
86 111 0.012126703 ubox
86 114 0.022389875 ubox
86 120 0.173355075 ubox
87 95 0.036014665 ubox
87 108 0.915884566 ubox
87 110 0.012570822 ubox
87 113 0.022276520 ubox
87 119 0.173288203 ubox
88 94 0.035926967 ubox
88 95 0.016490082 ubox
88 107 0.915682051 ubox
88 108 0.018317919 ubox
89 94 0.016848243 ubox
89 106 0.877224377 ubox
89 107 0.024761130 ubox
89 110 0.221050091 ubox
90 98 0.023627364 ubox
90 104 0.229922107 ubox
90 105 0.645750061 ubox
90 109 0.229624892 ubox
90 114 0.064091008 ubox
90 120 0.035541588 ubox
91 95 0.003666430 ubox
91 97 0.025868947 ubox
91 103 0.323841484 ubox
91 108 0.225998283 ubox
91 113 0.062816619 ubox
91 119 0.035534432 ubox
92 96 0.021014898 ubox
92 112 0.042777439 ubox
93 103 0.497220195 ubox
93 106 0.347987071 ubox
93 113 0.178083161 ubox
94 100 0.332021354 ubox
94 102 0.500429863 ubox
94 105 0.645995425 ubox
94 112 0.186149192 ubox
95 99 0.327545699 ubox
95 102 0.128414089 ubox
95 104 0.697254833 ubox
95 111 0.193031486 ubox
96 101 0.124323152 ubox
96 103 0.696358034 ubox
96 110 0.207659093 ubox
97 102 0.683511718 ubox
97 104 0.089845134 ubox
97 109 0.325656038 ubox
98 103 0.089692502 ubox
98 107 0.003611123 ubox
98 108 0.328467576 ubox
99 106 0.003739084 ubox
99 107 0.328489306 ubox
99 108 0.003773511 ubox
100 106 0.328279391 ubox
100 107 0.003972613 ubox
102 110 0.008503936 ubox
103 109 0.008672620 ubox
104 108 0.008609991 ubox
110 120 0.069434499 ubox
111 119 0.069991744 ubox
111 122 0.972818231 ubox
112 118 0.069685595 ubox
112 121 0.977199774 ubox
113 120 0.978407589 ubox
114 119 0.977015276 ubox
1 82 0.9500000 lbox
2 81 0.9500000 lbox
4 79 0.9500000 lbox
5 78 0.9500000 lbox
6 77 0.9500000 lbox
7 76 0.9500000 lbox
8 75 0.9500000 lbox
9 74 0.9500000 lbox
10 73 0.9500000 lbox
14 72 0.9500000 lbox
15 71 0.9500000 lbox
16 70 0.9500000 lbox
17 69 0.9500000 lbox
18 67 0.9500000 lbox
19 66 0.9500000 lbox
20 65 0.9500000 lbox
22 64 0.9500000 lbox
23 63 0.9500000 lbox
25 61 0.9500000 lbox
26 60 0.9500000 lbox
27 59 0.9500000 lbox
28 58 0.9500000 lbox
29 54 0.9500000 lbox
30 53 0.9500000 lbox
31 52 0.9500000 lbox
32 51 0.9500000 lbox
34 50 0.9500000 lbox
35 49 0.9500000 lbox
36 48 0.9500000 lbox
37 47 0.9500000 lbox
38 45 0.9500000 lbox
39 44 0.9500000 lbox
85 110 0.9500000 lbox
86 109 0.9500000 lbox
87 108 0.9500000 lbox
88 107 0.9500000 lbox
89 106 0.9500000 lbox
94 105 0.9500000 lbox
95 104 0.9500000 lbox
96 103 0.9500000 lbox
97 102 0.9500000 lbox
111 122 0.9500000 lbox
112 121 0.9500000 lbox
113 120 0.9500000 lbox
114 119 0.9500000 lbox
showpage
end
%%EOF
