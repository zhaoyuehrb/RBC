%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:10:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCUUUGCGCAGGCGCAGAAAGGCACAGGACUCGCUAAGUGUUCGCUACGCGGGGCUACCGGAUCGGUCGGAAAUGGCAGAGGUGGAGGAGACACUGAAGCGACUGCAGAGCCAGAAGGGAGUGCAGGGAAUCAUCGUCGUGAACACAGAAGGCAUUCCCAUCAAGAGCACCA\
) } def
/len { sequence length } bind def

/coor [
[102.50907898 207.34837341]
[96.76018524 193.49375916]
[96.71521759 178.49382019]
[102.38300323 164.60183716]
[102.11225128 149.60427856]
[101.84149933 134.60671997]
[94.88889313 147.89811707]
[87.93628693 161.18951416]
[80.98368073 174.48092651]
[74.03108215 187.77232361]
[67.07847595 201.06372070]
[68.30154419 217.41719055]
[54.60000992 226.42829895]
[40.06883621 218.82717896]
[39.65644836 202.43321228]
[53.78707504 194.11111450]
[60.73968124 180.81971741]
[67.69228363 167.52832031]
[74.64488983 154.23692322]
[81.59749603 140.94551086]
[88.55009460 127.65411377]
[77.68173981 115.32335663]
[75.79376221 100.60732269]
[81.81072235 88.81057739]
[72.60865021 76.96482086]
[63.40658569 65.11905670]
[43.10786438 58.31632996]
[41.03981018 37.79861069]
[31.21689796 26.46236801]
[21.39398766 15.12612534]
[16.39835548 13.40258980]
[12.92884350 10.23856831]
[11.27968311 6.46550083]
[11.36857414 2.91012311]
[2.16650772 -8.93563461]
[-7.03555822 -20.78139305]
[-16.23762512 -32.62715149]
[-25.43968964 -44.47290802]
[-42.64131927 -51.00244904]
[-44.39050674 -68.45020294]
[-53.80253983 -80.12982178]
[-63.21457672 -91.80944824]
[-72.62660980 -103.48907471]
[-82.03864288 -115.16869354]
[-91.45068359 -126.84832001]
[-106.91932678 -128.68103027]
[-116.29808807 -140.65991211]
[-114.45553589 -155.39559937]
[-123.86757660 -167.07522583]
[-138.55134583 -172.96569824]
[-140.51272583 -187.73059082]
[-149.92475891 -199.41021729]
[-159.33679199 -211.08984375]
[-176.20115662 -210.00942993]
[-190.25355530 -219.09356689]
[-196.07521057 -234.60395813]
[-191.56179810 -250.37165833]
[-201.18080139 -261.88143921]
[-210.79980469 -273.39120483]
[-220.41880798 -284.90097046]
[-230.34251404 -296.14907837]
[-240.56378174 -307.12750244]
[-250.78504944 -318.10592651]
[-261.00631714 -329.08435059]
[-276.92330933 -331.09161377]
[-285.15469360 -344.86199951]
[-279.38607788 -359.83206177]
[-264.04263306 -364.51803589]
[-250.89454651 -355.32522583]
[-250.02789307 -339.30560303]
[-239.80662537 -328.32717896]
[-229.58535767 -317.34875488]
[-219.36408997 -306.37036133]
[-215.84027100 -305.88937378]
[-212.37959290 -303.65792847]
[-209.81129456 -299.72695923]
[-208.90904236 -294.51995850]
[-199.29003906 -283.01019287]
[-189.67103577 -271.50042725]
[-180.05203247 -259.99066162]
[-166.85520935 -262.12683105]
[-154.22773743 -257.41775513]
[-145.51306152 -246.99591064]
[-143.07495117 -233.52104187]
[-147.65716553 -220.50187683]
[-138.24513245 -208.82225037]
[-128.83309937 -197.14263916]
[-114.82254791 -192.08757019]
[-112.18795013 -176.48725891]
[-102.77591705 -164.80763245]
[-87.98532104 -163.47578430]
[-78.27379608 -151.76506042]
[-79.77105713 -136.26034546]
[-70.35902405 -124.58072662]
[-60.94698715 -112.90110779]
[-51.53495407 -101.22148132]
[-42.12291718 -89.54186249]
[-32.71088409 -77.86223602]
[-20.70187187 -76.24951172]
[-12.76677799 -66.56777954]
[-13.59393215 -53.67497635]
[-4.39186621 -41.82921600]
[4.81019974 -29.98345947]
[14.01226521 -18.13770103]
[23.21433258 -6.29194260]
[32.73023224 5.30321407]
[42.55314255 16.63945770]
[52.37605286 27.97570038]
[61.27346802 27.15670967]
[69.67037964 30.59324646]
[75.61886597 37.62564468]
[77.67603302 46.74521255]
[75.25234222 55.91699219]
[84.45441437 67.76274872]
[93.65647888 79.60851288]
[119.09406281 82.88320923]
[127.44179535 111.94982147]
[141.67417908 116.68681335]
[157.21157837 113.70355225]
[166.84411621 125.06417084]
[181.07650757 129.80116272]
[195.30888367 134.53816223]
[209.54127502 139.27514648]
[223.77366638 144.01214600]
[238.00605774 148.74914551]
[252.23844910 153.48612976]
[266.47082520 158.22312927]
[277.63885498 144.70199585]
[293.10195923 136.50402832]
[310.49066162 134.85501099]
[327.15197754 139.97950745]
[340.55429077 151.07069397]
[348.67190552 166.41734314]
[350.29135132 183.66767883]
[364.75689697 187.63610840]
[379.22241211 191.60453796]
[393.68795776 195.57295227]
[409.40771484 190.90165710]
[421.12536621 202.37461853]
[416.78677368 218.18945312]
[400.85513306 222.07719421]
[389.71951294 210.03848267]
[375.25399780 206.07006836]
[360.78845215 202.10163879]
[346.32293701 198.13320923]
[339.44436646 208.73179626]
[329.84347534 216.97323608]
[318.29238892 222.18142700]
[305.72384644 223.92472839]
[293.15582275 222.05171204]
[281.60919189 216.70431519]
[272.02471924 208.30706787]
[265.18643188 197.53341675]
[261.65747070 185.25180054]
[261.73382568 172.45552063]
[247.50144958 167.71852112]
[233.26905823 162.98153687]
[219.03666687 158.24453735]
[204.80429077 153.50753784]
[190.57189941 148.77055359]
[176.33950806 144.03355408]
[162.10711670 139.29655457]
[147.58772278 142.61863708]
[136.93719482 130.91920471]
[122.70480347 126.18221283]
[132.92385864 137.16268921]
[143.14292908 148.14315796]
[156.86468506 154.20231628]
[167.24891663 165.02671814]
[172.73356628 178.98805237]
[172.49356079 193.98612976]
[166.56501770 207.76481628]
[155.83975220 218.25141907]
[141.93115234 223.86843872]
[126.93147278 223.77091980]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 21]
[7 20]
[8 19]
[9 18]
[10 17]
[11 16]
[24 115]
[25 114]
[26 113]
[28 108]
[29 107]
[30 106]
[34 105]
[35 104]
[36 103]
[37 102]
[38 101]
[40 98]
[41 97]
[42 96]
[43 95]
[44 94]
[45 93]
[48 90]
[49 89]
[51 87]
[52 86]
[53 85]
[57 80]
[58 79]
[59 78]
[60 77]
[61 73]
[62 72]
[63 71]
[64 70]
[117 165]
[118 164]
[120 162]
[121 161]
[122 160]
[123 159]
[124 158]
[125 157]
[126 156]
[127 155]
[134 145]
[135 144]
[136 143]
[137 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
