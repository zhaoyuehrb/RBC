%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:24:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAACCGUGGCCGGGUCCUCGCGGCUGGAGAACCCAACCGACAGUGGGCGGCAGGACGCACCGCGGACCCCGGAGAGAGCGGACGAGCAGGGCGCCGGCGCCAUGGACCUGGUCAUCACGCAGGAGCUGGCCCGCGCCGAGAGCCAGCAAGAUGCUGCGUCCUUGAAGAAGGCCUACGAGUUGAUCAAAUCGGCCAACCUAG\
) } def
/len { sequence length } bind def

/coor [
[147.26155090 270.17276001]
[142.89332581 255.82290649]
[138.52511597 241.47303772]
[134.15689087 227.12316895]
[129.67721558 212.80770874]
[125.08635712 198.52751160]
[120.49549866 184.24731445]
[115.79373169 170.00325012]
[110.98134613 155.79617310]
[106.16896057 141.58911133]
[101.35657501 127.38203430]
[87.95984650 120.63460541]
[73.67964935 125.22546387]
[59.39945221 129.81632996]
[45.11925888 134.40718079]
[30.83905983 138.99804688]
[16.55886459 143.58889771]
[22.13992500 151.43115234]
[24.11796379 162.35527039]
[21.30395508 174.81927490]
[13.12335968 186.89364624]
[1.07090497 195.82327271]
[-10.98154926 204.75291443]
[-17.46386147 219.18516541]
[-32.29626846 220.54493713]
[-44.34872437 229.47456360]
[-56.40118027 238.40419006]
[-60.17559814 253.99693298]
[-74.78002167 260.63699341]
[-89.01119232 253.23066711]
[-91.95216370 237.45948792]
[-81.34688568 225.42173767]
[-65.33081055 226.35174561]
[-53.27835846 217.42210388]
[-41.22590256 208.49247742]
[-35.60566330 194.69892883]
[-19.91118240 192.70045471]
[-7.85872793 183.77081299]
[4.19372654 174.84118652]
[2.12146330 167.63314819]
[-12.43548489 164.01441956]
[-2.02306271 153.21708679]
[-4.09532547 146.00906372]
[-19.04999542 144.84379578]
[-34.00466537 143.67854309]
[-48.95933914 142.51329041]
[-63.92261887 141.46435547]
[-78.89360046 140.53181458]
[-93.86458588 139.59925842]
[-105.54570007 150.24478149]
[-121.32892609 149.42906189]
[-131.85034180 137.63604736]
[-130.86779785 121.86233521]
[-118.96421051 111.46617889]
[-103.20175934 112.61544037]
[-92.93203735 124.62828064]
[-77.96105957 125.56082153]
[-62.99007416 126.49337006]
[-56.11375046 123.76963043]
[-47.79407883 127.55861664]
[-32.83940887 128.72387695]
[-17.88473892 129.88912964]
[-2.93006802 131.05438232]
[11.96800518 129.30870056]
[26.24820137 124.71784210]
[40.52840042 120.12698364]
[54.80859375 115.53612518]
[69.08879089 110.94526672]
[83.36898804 106.35440826]
[85.88536072 99.28915405]
[71.15233612 96.47171783]
[56.18470383 97.45656586]
[47.14076233 85.48964691]
[52.17366409 71.35918427]
[66.74622345 67.80384827]
[77.72112274 78.02846527]
[90.91811371 85.15863800]
[93.43448639 78.09338379]
[85.27142334 65.50908661]
[69.76390839 62.46072388]
[61.02344894 49.29334259]
[64.23560333 33.81892395]
[77.49465179 25.21816635]
[92.93424988 28.59374237]
[101.39434052 41.94298553]
[97.85572052 57.34602737]
[106.01878357 69.93032074]
[107.18085480 68.21814728]
[108.43077087 66.54613495]
[109.76722717 64.91757202]
[115.45355225 51.03716278]
[121.13987732 37.15675735]
[126.82620239 23.27635002]
[132.51252747 9.39594364]
[132.87095642 0.26112533]
[138.39672852 -4.65500355]
[144.29823303 -18.44529915]
[144.79867554 -27.57343864]
[150.40023804 -32.40303802]
[156.51550293 -46.09988785]
[162.63075256 -59.79673386]
[168.74600220 -73.49358368]
[160.99517822 -84.89658356]
[159.90144348 -98.53234100]
[165.64399719 -110.82878876]
[176.62513733 -118.61769104]
[189.91317749 -119.95078278]
[196.24070740 -133.55087280]
[202.56823730 -147.15095520]
[208.89575195 -160.75105286]
[215.11734009 -174.39993286]
[221.23258972 -188.09678650]
[218.99806213 -204.34297180]
[232.11462402 -214.18615723]
[247.08906555 -207.50048828]
[248.51696777 -191.16362000]
[234.92944336 -181.98152161]
[228.81417847 -168.28468323]
[228.95793152 -160.88995361]
[222.49584961 -154.42352295]
[216.16831970 -140.82344055]
[209.84078979 -127.22334290]
[203.51327515 -113.62325287]
[211.93939209 -99.53890228]
[210.29631042 -83.04191589]
[199.03422546 -70.65028381]
[182.44285583 -67.37832642]
[176.32760620 -53.68148041]
[170.21234131 -39.98463058]
[164.09709167 -26.28778267]
[158.08853149 -12.54379559]
[152.18702698 1.24650037]
[146.39292908 15.08226967]
[140.70660400 28.96267700]
[135.02027893 42.84308243]
[129.33395386 56.72349167]
[123.64762878 70.60389709]
[132.19812012 82.92823029]
[147.19085693 82.46173096]
[162.18360901 81.99523926]
[175.73646545 73.83249664]
[188.69821167 81.17023468]
[203.69096375 80.70373535]
[218.67962646 80.12066650]
[233.66329956 79.42106628]
[248.64697266 78.72145844]
[263.63064575 78.02185059]
[278.61431885 77.32224274]
[294.15423584 70.54373932]
[304.96969604 83.59985352]
[295.41784668 97.60694122]
[279.31393433 92.30592346]
[264.33026123 93.00553131]
[249.34658813 93.70513153]
[234.36289978 94.40473938]
[219.37922668 95.10434723]
[212.83955383 98.55908966]
[204.15745544 95.69647980]
[189.16471863 96.16297913]
[176.68423462 104.29235840]
[162.65010071 96.98798370]
[147.65736389 97.45447540]
[132.66461182 97.92097473]
[128.38937378 104.08314514]
[143.33779907 105.32601929]
[149.73553467 118.89321899]
[141.18478394 131.21736145]
[126.23639679 129.97416687]
[119.83889008 116.40747833]
[115.56364441 122.56964874]
[120.37602997 136.77671814]
[125.18841553 150.98379517]
[130.00080872 165.19087219]
[135.72204590 172.32113647]
[134.77569580 179.65646362]
[139.36654663 193.93666077]
[143.95741272 208.21685791]
[149.56707764 215.43524170]
[148.50675964 222.75495911]
[152.87496948 237.10482788]
[157.24319458 251.45468140]
[161.61141968 265.80456543]
[172.85824585 266.62927246]
[183.29423523 270.83197021]
[191.93278503 277.99783325]
[197.96263123 287.43280029]
[200.82389832 298.23074341]
[200.26011658 309.36047363]
[196.34107971 319.76422119]
[189.45474243 328.45812988]
[180.26879883 334.62536621]
[183.73643494 349.21902466]
[195.38430786 360.76281738]
[190.94993591 376.55105591]
[174.99501038 380.34216309]
[163.93260193 368.23614502]
[169.14276123 352.68667603]
[165.67512512 338.09298706]
[147.30241394 333.67730713]
[133.65626526 320.48898315]
[128.57284546 302.12008667]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 182]
[2 181]
[3 180]
[4 179]
[5 177]
[6 176]
[7 175]
[8 173]
[9 172]
[10 171]
[11 170]
[12 69]
[13 68]
[14 67]
[15 66]
[16 65]
[17 64]
[21 39]
[22 38]
[23 37]
[25 35]
[26 34]
[27 33]
[43 63]
[44 62]
[45 61]
[46 60]
[47 58]
[48 57]
[49 56]
[78 87]
[79 86]
[90 137]
[91 136]
[92 135]
[93 134]
[94 133]
[96 132]
[97 131]
[99 130]
[100 129]
[101 128]
[102 127]
[107 123]
[108 122]
[109 121]
[110 120]
[111 118]
[112 117]
[138 163]
[139 162]
[140 161]
[142 159]
[143 158]
[144 156]
[145 155]
[146 154]
[147 153]
[148 152]
[191 198]
[192 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
