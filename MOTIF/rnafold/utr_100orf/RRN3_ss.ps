%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:20:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGAAGGUUGCGCUGGCACGCGCAACUUCCGGGACAGAGGCUGUGGCUGGAAGGAGCUGGGCAUCCGGCCUGAGGCGCAGCGGUCGCGUUAGUUCGGCCCAAUGGCGGCACCGCUGCUUCACACGCGUUUGCCGGGAGAUGCGGCCGCUUCGUCCUCUGCAGUUAAGAAGCUGGGCGCGUCGAGGACUGGGAUUUCAAAUA\
) } def
/len { sequence length } bind def

/coor [
[80.19493866 185.36051941]
[82.56032562 169.90286255]
[94.34236145 159.62095642]
[93.87815857 144.62814331]
[93.41396332 129.63531494]
[92.94976044 114.64250183]
[78.43614197 110.85372925]
[70.70283508 123.70658875]
[62.96952438 136.55944824]
[55.23621750 149.41230774]
[47.50291061 162.26515198]
[39.76959991 175.11801147]
[32.03629303 187.97087097]
[24.30298615 200.82373047]
[28.35990334 216.09844971]
[20.35557175 229.72586060]
[5.03881693 233.62104797]
[-8.50320148 225.47308350]
[-12.23624420 210.11601257]
[-3.94556284 196.66088867]
[11.45012760 193.09042358]
[19.18343544 180.23756409]
[26.91674423 167.38470459]
[34.65005112 154.53184509]
[42.38335800 141.67898560]
[50.11666870 128.82614136]
[57.84997559 115.97327423]
[65.58328247 103.12042236]
[65.46721649 88.12087250]
[57.53593445 75.38922882]
[49.60464859 62.65758133]
[35.74054337 55.03543854]
[35.57820511 40.14171600]
[27.64692497 27.41007233]
[20.44844246 21.77628326]
[19.69318199 14.41946411]
[11.95987320 1.56660616]
[4.22656536 -11.28625107]
[-3.50674248 -24.13910866]
[-17.25123596 -31.97489166]
[-17.18306923 -46.86933899]
[-24.91637611 -59.72219849]
[-32.74890518 -72.51483154]
[-40.68018723 -85.24647522]
[-48.61146927 -97.97811890]
[-56.54275513 -110.70976257]
[-68.19750977 -120.15257263]
[-82.29730225 -125.27075958]
[-96.39709473 -130.38893127]
[-105.98828888 -123.35136414]
[-117.66662598 -121.83600616]
[-128.51313782 -126.10488129]
[-135.87295532 -134.98870850]
[-138.00497437 -146.20437622]
[-151.93963623 -151.75645447]
[-161.07662964 -152.02656555]
[-166.04588318 -157.50376892]
[-179.89294434 -163.27081299]
[-193.74000549 -169.03787231]
[-207.58706665 -174.80491638]
[-221.43412781 -180.57196045]
[-237.61865234 -177.92745972]
[-247.79025269 -190.79098511]
[-241.48527527 -205.92965698]
[-225.18972778 -207.77009583]
[-215.66708374 -194.41902161]
[-201.82002258 -188.65197754]
[-187.97296143 -182.88493347]
[-174.12590027 -177.11787415]
[-160.27882385 -171.35083008]
[-146.38755798 -165.69110107]
[-132.45291138 -160.13902283]
[-116.10861969 -168.37376404]
[-98.63372040 -161.94245911]
[-91.27891541 -144.48873901]
[-77.17912292 -139.37055969]
[-63.07932663 -134.25236511]
[-51.27983856 -143.51368713]
[-52.90162277 -158.42576599]
[-54.52340698 -173.33782959]
[-56.14519501 -188.24989319]
[-57.76697922 -203.16197205]
[-59.38876343 -218.07403564]
[-61.01055145 -232.98611450]
[-62.63233566 -247.89817810]
[-74.66672516 -257.78811646]
[-76.09902191 -272.93420410]
[-66.59629822 -284.34619141]
[-68.21807861 -299.25827026]
[-69.83986664 -314.17034912]
[-71.46165466 -329.08239746]
[-73.08343506 -343.99447632]
[-87.34861755 -349.54092407]
[-97.39348602 -361.08905029]
[-100.90981293 -375.98516846]
[-97.08956909 -390.80624390]
[-86.81061554 -402.14651489]
[-72.43498993 -407.40005493]
[-57.26609039 -405.35968018]
[-44.78963089 -396.49420166]
[-37.87260818 -382.84088135]
[-38.10450363 -367.53713989]
[-45.43202591 -354.09963989]
[-58.17136765 -345.61627197]
[-56.54958344 -330.70419312]
[-54.92779541 -315.79211426]
[-53.30601120 -300.88006592]
[-51.68422699 -285.96798706]
[-39.95042801 -276.86560059]
[-38.09328079 -261.76574707]
[-47.72026443 -249.51995850]
[-46.09848022 -234.60789490]
[-44.47669601 -219.69583130]
[-42.85490799 -204.78375244]
[-41.23312378 -189.87168884]
[-39.61133957 -174.95960999]
[-37.98955536 -160.04754639]
[-36.36776733 -145.13548279]
[-34.87882233 -134.17436218]
[-37.86750031 -124.82912445]
[-43.81110764 -118.64104462]
[-35.87982559 -105.90940094]
[-27.94854546 -93.17775726]
[-20.01726151 -80.44611359]
[-13.80827618 -76.42843628]
[-12.06351852 -67.45550537]
[-4.33021116 -54.60264969]
[8.86114407 -47.68618774]
[9.34611511 -31.87241745]
[17.07942390 -19.01955986]
[24.81273079 -6.16670179]
[32.54603958 6.68615580]
[40.37856674 19.47879028]
[48.30985260 32.21043396]
[61.60665894 38.92192459]
[62.33629608 54.72629929]
[70.26757812 67.45793915]
[78.19886017 80.18959045]
[135.18629456 80.95999146]
[149.69992065 84.74877167]
[164.21353149 88.53754425]
[178.72715759 92.32632446]
[193.24078369 96.11509705]
[207.75439453 99.90387726]
[223.06141663 95.90318298]
[233.42167664 106.60431671]
[247.93530273 110.39309692]
[262.47781372 114.06945801]
[277.04830933 117.63317871]
[291.61883545 121.19689941]
[306.18933105 124.76062012]
[320.75985718 128.32434082]
[329.42410278 115.86258698]
[342.00714111 107.37546539]
[356.80728149 104.01080322]
[371.82284546 106.22363281]
[385.02316284 113.71469879]
[394.62298584 125.47087860]
[399.32400513 139.90226746]
[398.49044800 155.05711365]
[392.23507690 168.88587952]
[381.40383911 179.51831055]
[367.46157837 185.51646423]
[352.29388428 186.06915283]
[337.95205688 181.10160828]
[326.37570190 171.28567505]
[319.13043213 157.94885254]
[317.19613647 142.89485168]
[302.62561035 139.33113098]
[288.05511475 135.76741028]
[273.48458862 132.20368958]
[258.91409302 128.63996887]
[251.66523743 130.10542297]
[244.14653015 124.90671539]
[229.63290405 121.11793518]
[215.36398315 125.38963318]
[203.96562195 114.41749573]
[189.45199585 110.62872314]
[174.93838501 106.83994293]
[160.42475891 103.05116272]
[145.91114807 99.26239014]
[131.39752197 95.47360992]
[125.53378296 100.14978790]
[136.45425415 110.43295288]
[147.37471008 120.71611786]
[161.77723694 124.90742493]
[169.73509216 137.62248230]
[167.20965576 152.40835571]
[155.48255920 161.76118469]
[140.50537109 160.93440247]
[129.87901306 150.34757996]
[128.99693298 135.37190247]
[121.40162659 122.43701172]
[113.80631256 109.50212860]
[107.94257355 114.17830658]
[108.40677643 129.17112732]
[108.87097931 144.16394043]
[109.33517456 159.15675354]
[121.73072052 168.69009399]
[125.04785156 183.97180176]
[117.72031403 197.78633118]
[103.20795441 203.61087036]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 198]
[4 197]
[5 196]
[6 195]
[7 28]
[8 27]
[9 26]
[10 25]
[11 24]
[12 23]
[13 22]
[14 21]
[29 138]
[30 137]
[31 136]
[33 134]
[34 133]
[36 132]
[37 131]
[38 130]
[39 129]
[41 127]
[42 126]
[43 124]
[44 123]
[45 122]
[46 121]
[47 77]
[48 76]
[49 75]
[54 72]
[55 71]
[57 70]
[58 69]
[59 68]
[60 67]
[61 66]
[78 118]
[79 117]
[80 116]
[81 115]
[82 114]
[83 113]
[84 112]
[85 111]
[88 108]
[89 107]
[90 106]
[91 105]
[92 104]
[139 182]
[140 181]
[141 180]
[142 179]
[143 178]
[144 177]
[146 175]
[147 174]
[148 172]
[149 171]
[150 170]
[151 169]
[152 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
