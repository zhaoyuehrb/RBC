%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:57:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAACCGGCAUCGCCGCCGCCGGAGCCGCAGCGAGUCCUCAGAGCCUGGCUGCUGGCGGCCGGGAGCGCCGGGACGGGGCGCGAAGCCGGAGGCUCCGGGACGUGGAUACAGAUGAAAAGAAGCAAAGAAUUGAUAACUAAAAAUCAUAGUCAAGAGGAAACAAGUAUUCUUCGUUGUUGGAAAUGUAGAAAAUGUAUAGCAAGCUCUGGUU\
) } def
/len { sequence length } bind def

/coor [
[-24.58920288 203.43304443]
[-33.28797531 203.35861206]
[-41.45047379 200.47866821]
[-48.20184708 195.13177490]
[-61.64673615 201.78271484]
[-75.09162140 208.43363953]
[-88.53651428 215.08457947]
[-101.98139954 221.73551941]
[-111.83495331 237.29193115]
[-129.29074097 235.48254395]
[-142.63560486 242.33197021]
[-148.84074402 249.03417969]
[-156.22933960 249.18238831]
[-169.67422485 255.83331299]
[-183.11911011 262.48425293]
[-196.51435852 269.23461914]
[-209.85920715 276.08407593]
[-223.20407104 282.93350220]
[-236.54891968 289.78295898]
[-249.89378357 296.63238525]
[-263.23864746 303.48181152]
[-276.58349609 310.33126831]
[-289.87722778 317.27938843]
[-303.11914062 324.32583618]
[-316.36102295 331.37225342]
[-329.60290527 338.41870117]
[-342.84481812 345.46511841]
[-347.35104370 357.54998779]
[-358.52468872 363.14651489]
[-370.13186646 359.74234009]
[-383.47671509 366.59179688]
[-383.55252075 381.89709473]
[-390.74258423 395.40863037]
[-403.39474487 404.02151489]
[-418.60159302 405.75656128]
[-432.86871338 400.21508789]
[-442.91763306 388.67047119]
[-446.43914795 373.77560425]
[-442.62408447 358.95318604]
[-432.34912109 347.60931396]
[-417.97531128 342.35073853]
[-402.80572510 344.38583374]
[-390.32614136 353.24691772]
[-376.98129272 346.39749146]
[-368.27505493 331.16003418]
[-349.89123535 332.22323608]
[-336.64935303 325.17678833]
[-323.40744019 318.13037109]
[-310.16555786 311.08392334]
[-296.92367554 304.03750610]
[-292.49584961 298.12075806]
[-283.43292236 296.98641968]
[-270.08807373 290.13696289]
[-256.74322510 283.28753662]
[-243.39836121 276.43807983]
[-230.05351257 269.58865356]
[-216.70864868 262.73922729]
[-203.36380005 255.88977051]
[-198.84880066 250.03930664]
[-189.77005005 249.03936768]
[-176.32516479 242.38842773]
[-162.88027954 235.73748779]
[-149.48503113 228.98712158]
[-136.14018250 222.13768005]
[-132.13928223 210.72244263]
[-121.07816315 204.90666199]
[-108.63233948 208.29063416]
[-95.18745422 201.63969421]
[-81.74256134 194.98875427]
[-68.29767609 188.33781433]
[-54.85278702 181.68687439]
[-49.94896698 161.01652527]
[-31.11358833 150.59016418]
[-10.45443249 157.59094238]
[2.46122146 149.96298218]
[15.37687588 142.33500671]
[28.29253006 134.70704651]
[41.20818329 127.07907104]
[54.12383652 119.45111084]
[58.61086273 105.13794708]
[52.36126328 91.50187683]
[46.11166382 77.86579895]
[33.03001785 74.66067505]
[24.30994797 64.65274048]
[22.96581841 51.64260864]
[29.26546860 40.40283966]
[23.21861649 26.67565346]
[17.17176628 12.94846916]
[11.12491417 -0.77871495]
[5.07806301 -14.50589943]
[-6.84034395 -26.56359100]
[1.44678521 -41.35412216]
[17.95340347 -37.48528290]
[18.80524635 -20.55275154]
[24.85209846 -6.82556629]
[30.89895058 6.90161800]
[36.94580078 20.62880135]
[42.99265289 34.35598755]
[58.91560364 39.76986313]
[66.13816833 55.33140564]
[59.74773407 71.61619568]
[65.99733734 85.25227356]
[72.24694061 98.88834381]
[85.52178192 79.00698853]
[107.37815857 77.97534180]
[116.48016357 66.05252838]
[125.58216858 54.12971115]
[121.29663086 39.33307648]
[126.48490906 25.01752281]
[138.96031189 16.60155296]
[153.82130432 17.13894272]
[162.92330933 5.21612644]
[172.02531433 -6.70668983]
[166.23205566 -20.86244583]
[168.28855896 -35.91793060]
[177.54331970 -47.84335709]
[191.43173218 -53.49738693]
[206.18609619 -51.45429993]
[215.28810120 -63.37711334]
[210.22412109 -79.51602936]
[215.72322083 -95.33605957]
[229.43096924 -104.66726685]
[245.83334351 -103.99575806]
[254.75767517 -116.05214691]
[263.68200684 -128.10853577]
[265.00250244 -144.45442200]
[279.93267822 -151.23835754]
[293.11364746 -141.48159790]
[290.98596191 -125.22106934]
[275.73837280 -119.18420410]
[266.81405640 -107.12781525]
[257.88973999 -95.07143402]
[263.06643677 -82.76564026]
[261.47396851 -69.40162659]
[253.42210388 -58.48258972]
[240.92781067 -52.92390060]
[227.21092224 -54.27511215]
[218.10891724 -42.35229492]
[223.96881104 -28.65823936]
[222.17553711 -13.77065659]
[213.11128235 -1.69979751]
[199.13029480 4.25241756]
[183.94812012 2.39531207]
[174.84611511 14.31812859]
[165.74412537 26.24094582]
[170.17967224 40.43474197]
[165.34968567 54.68729019]
[152.90795898 63.46549225]
[137.50498962 63.23171234]
[128.40298462 75.15452576]
[119.30097961 87.07734680]
[120.77798462 89.61742401]
[121.92250824 92.32363892]
[122.71621704 95.15269470]
[137.61093140 96.92679596]
[152.50564575 98.70088959]
[167.40036011 100.47499084]
[182.29507446 102.24908447]
[197.18980408 104.02318573]
[208.46305847 93.18585968]
[224.06837463 92.18188477]
[236.63740540 101.48530579]
[240.23542786 116.70333099]
[233.16355896 130.65046692]
[218.76094055 136.74131775]
[203.82803345 132.09996033]
[195.41569519 118.91790009]
[180.52098083 117.14380646]
[165.62626648 115.36970520]
[150.73155212 113.59560394]
[135.83683777 111.82151031]
[120.94211578 110.04740906]
[108.42430878 124.06981659]
[87.91562653 125.00872040]
[97.70796204 136.37139893]
[107.50028992 147.73405457]
[117.29262543 159.09672546]
[127.08495331 170.45939636]
[136.87728882 181.82206726]
[152.23936462 180.67622375]
[165.17926025 188.70195007]
[170.84509277 202.64332581]
[167.25817871 217.07496643]
[177.05052185 228.43763733]
[192.68331909 228.05075073]
[204.87510681 237.84330750]
[207.86930847 253.19155884]
[200.25213623 266.84854126]
[185.62019348 272.36581421]
[170.88223267 267.13830566]
[162.99708557 253.63430786]
[165.68785095 238.22996521]
[155.89552307 226.86729431]
[141.09245300 228.28411865]
[128.14041138 220.62197876]
[122.11317444 206.63891602]
[125.51461792 191.61439514]
[115.72229004 180.25172424]
[105.92995453 168.88906860]
[96.13762665 157.52639771]
[86.34529114 146.16372681]
[76.55296326 134.80105591]
[61.75180435 132.36676025]
[48.83615112 139.99473572]
[35.92049789 147.62269592]
[23.00484276 155.25065613]
[10.08918858 162.87863159]
[-2.82646608 170.50659180]
[-2.16893840 179.39857483]
[-4.42268801 187.98040771]
[-9.31630611 195.32960510]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 71]
[5 70]
[6 69]
[7 68]
[8 67]
[10 64]
[11 63]
[13 62]
[14 61]
[15 60]
[16 58]
[17 57]
[18 56]
[19 55]
[20 54]
[21 53]
[22 52]
[23 50]
[24 49]
[25 48]
[26 47]
[27 46]
[30 44]
[31 43]
[74 208]
[75 207]
[76 206]
[77 205]
[78 204]
[79 203]
[80 103]
[81 102]
[82 101]
[86 98]
[87 97]
[88 96]
[89 95]
[90 94]
[105 151]
[106 150]
[107 149]
[111 145]
[112 144]
[113 143]
[118 138]
[119 137]
[123 132]
[124 131]
[125 130]
[154 172]
[155 171]
[156 170]
[157 169]
[158 168]
[159 167]
[174 202]
[175 201]
[176 200]
[177 199]
[178 198]
[179 197]
[183 193]
[184 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
