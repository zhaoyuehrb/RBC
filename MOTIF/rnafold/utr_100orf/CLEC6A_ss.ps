%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:05:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGCAGUUUGUCCCUGAGCUCUAGCUUCUUUAAAUGAAGCUGAGUCUCUGGGCAACAUCUUUAGGGAGAGAGGUACAAAAGGUUCCUGGACCUUCUCAACACAGGGAGCCUGCAUAAUGAUGCAAGAGCAGCAACCUCAAAGUACAGAGAAAAGAGGCUGGUUGUCCCUGAGACUCUGGUCUGUGGCUGGGAUUUCCAUUGCACUCCUCAGUGCUU\
) } def
/len { sequence length } bind def

/coor [
[128.42510986 138.55241394]
[126.71572113 153.45469666]
[117.52616882 165.31018066]
[103.52085114 170.68150330]
[88.76042938 168.01133728]
[77.52447510 158.07385254]
[73.07072449 143.75030518]
[76.69046783 129.19360352]
[87.33207703 118.62548065]
[75.24784851 127.51206207]
[63.16361618 136.39865112]
[51.07938766 145.28523254]
[38.99515533 154.17181396]
[26.91092682 163.05839539]
[24.20012665 175.66499329]
[13.95657063 182.81829834]
[1.98140693 181.13223267]
[-10.22962856 189.84375000]
[-22.44066429 198.55528259]
[-34.58861160 207.35455322]
[-46.67284393 216.24113464]
[-58.75707245 225.12773132]
[-63.81317520 232.72877502]
[-71.08008575 234.05381775]
[-83.29111481 242.76533508]
[-95.50215149 251.47685242]
[-107.71318817 260.18838501]
[-119.92422485 268.89990234]
[-132.13525391 277.61141968]
[-133.18046570 293.21405029]
[-144.04754639 304.45861816]
[-159.60537720 306.03582764]
[-172.50805664 297.20095825]
[-176.66331482 282.12554932]
[-170.10916138 267.92776489]
[-155.94027710 261.31134033]
[-140.84678650 265.40039062]
[-128.63574219 256.68887329]
[-116.42471313 247.97734070]
[-104.21367645 239.26582336]
[-92.00263977 230.55430603]
[-79.79160309 221.84277344]
[-67.64365387 213.04350281]
[-55.55942535 204.15690613]
[-43.47519684 195.27032471]
[-39.95069122 188.77867126]
[-31.15218544 186.34423828]
[-18.94115067 177.63272095]
[-6.73011494 168.92120361]
[-0.32194364 152.58166504]
[18.02434158 150.97416687]
[30.10857201 142.08758545]
[42.19280243 133.20100403]
[54.27703476 124.31441498]
[66.36125946 115.42783356]
[78.44549561 106.54124451]
[77.15496063 99.15311432]
[74.57389832 84.37684631]
[73.28336334 76.98870850]
[58.90208817 72.72502899]
[44.52081680 68.46134186]
[30.13954353 64.19765472]
[14.32745743 68.54621887]
[2.84710717 56.83581161]
[7.50849342 41.11310196]
[23.51638222 37.55226898]
[34.40322876 49.81638718]
[48.78450012 54.08007050]
[63.16577530 58.34375381]
[77.54704285 62.60743713]
[89.02999115 52.95642853]
[87.30450439 38.05600357]
[85.57901001 23.15557671]
[83.85352325 8.25515079]
[82.12803650 -6.64527512]
[62.32640839 -11.27015591]
[46.08585358 -24.01056290]
[36.60140610 -42.68909073]
[35.87637711 -63.93229294]
[44.30499268 -83.77929688]
[60.55060196 -98.42033386]
[55.26263809 -112.45733643]
[49.97467041 -126.49433899]
[44.68670654 -140.53134155]
[39.39874268 -154.56834412]
[34.11077499 -168.60534668]
[28.82281113 -182.64234924]
[23.43383980 -196.64088440]
[17.94414330 -210.60021973]
[2.72829056 -211.23086548]
[-10.91269207 -218.00164795]
[-20.61542320 -229.73948669]
[-24.69884491 -244.41073608]
[-22.45547867 -259.47351074]
[-14.27400398 -272.31808472]
[-1.57190824 -280.71908569]
[13.45009232 -283.22097778]
[28.18934631 -279.39025879]
[40.09218597 -269.89065552]
[47.09637833 -256.36804199]
[47.98839951 -241.16528320]
[42.61370087 -226.91633606]
[31.90348625 -216.08992004]
[37.39318085 -202.13058472]
[42.76362228 -197.05889893]
[42.85981369 -187.93031311]
[48.14777756 -173.89331055]
[53.43574142 -159.85630798]
[58.72370911 -145.81930542]
[64.01167297 -131.78230286]
[69.29963684 -117.74530029]
[74.58760071 -103.70829773]
[89.57358551 -104.35659027]
[93.62958527 -118.79781342]
[97.68559265 -133.23902893]
[101.74159241 -147.68025208]
[97.16562653 -163.42803955]
[108.70937347 -175.07594299]
[124.49761963 -170.64161682]
[128.28877258 -154.68670654]
[116.18280792 -143.62425232]
[112.12680817 -129.18302917]
[108.07080841 -114.74181366]
[104.01480865 -100.30059052]
[113.74806213 -94.41712189]
[121.86431885 -86.57424164]
[127.98281860 -77.19358826]
[131.82861328 -66.76737976]
[133.24478149 -55.83263016]
[132.19848633 -44.94350815]
[128.78071594 -34.64325714]
[123.19980621 -25.43710518]
[115.76909637 -17.76747894]
[106.88961029 -11.99278736]
[97.02845764 -8.37076378]
[98.75395203 6.52966213]
[100.47943878 21.43008804]
[102.20492554 36.33051300]
[103.93041229 51.23093796]
[125.96016693 80.10402679]
[116.21385956 102.99304962]
[129.74176025 109.47347260]
[143.26966858 115.95388794]
[156.79756165 122.43431091]
[170.32546997 128.91473389]
[183.85337830 135.39514160]
[199.64193726 134.37924194]
[207.77742004 146.85574341]
[221.30532837 153.33616638]
[234.83322144 159.81658936]
[239.13629150 159.33149719]
[242.98429871 160.15515137]
[246.02236938 161.98458862]
[248.03010559 164.43284607]
[248.93736267 167.07998657]
[262.06945801 174.32901001]
[275.20153809 181.57803345]
[288.38549805 188.73225403]
[301.62069702 195.79127502]
[314.95620728 202.65885925]
[328.38934326 209.33354187]
[341.82244873 216.00823975]
[356.64047241 211.20573425]
[370.16845703 218.16616821]
[374.65560913 232.32249451]
[388.08871460 238.99717712]
[401.52182007 245.67187500]
[414.95495605 252.34655762]
[428.38806152 259.02124023]
[447.85131836 251.04878235]
[466.59747314 259.91827393]
[472.60342407 279.46044922]
[486.39874268 285.35012817]
[500.19409180 291.23983765]
[513.98944092 297.12951660]
[530.19677734 294.62875366]
[540.25384521 307.58203125]
[533.81475830 322.66415405]
[517.50354004 324.35992432]
[508.09973145 310.92486572]
[494.30441284 305.03518677]
[480.50906372 299.14547729]
[466.71371460 293.25576782]
[459.53634644 299.23733521]
[450.61938477 302.21493530]
[441.17242432 301.74029541]
[432.49328613 297.83645630]
[425.78945923 291.00036621]
[422.01049805 282.14013672]
[421.71337891 272.45437622]
[408.28024292 265.77966309]
[394.84713745 259.10498047]
[381.41403198 252.43028259]
[367.98092651 245.75559998]
[353.98825073 250.72959900]
[340.27008057 244.15187073]
[335.14776611 229.44134521]
[321.71463013 222.76666260]
[308.28152466 216.09196472]
[303.55398560 216.73547363]
[298.37139893 214.41961670]
[294.56164551 209.02645874]
[281.32647705 201.96742249]
[273.94921875 201.59339905]
[267.95251465 194.71011353]
[254.82041931 187.46109009]
[241.68833923 180.21206665]
[228.35279846 173.34449768]
[214.82490540 166.86407471]
[201.29699707 160.38365173]
[186.47604370 161.86308289]
[177.37295532 148.92304993]
[163.84504700 142.44262695]
[150.31715393 135.96221924]
[136.78924561 129.48179626]
[123.26134491 123.00137329]
[109.73343658 116.52095032]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 56]
[10 55]
[11 54]
[12 53]
[13 52]
[14 51]
[17 49]
[18 48]
[19 47]
[20 45]
[21 44]
[22 43]
[24 42]
[25 41]
[26 40]
[27 39]
[28 38]
[29 37]
[59 70]
[60 69]
[61 68]
[62 67]
[71 139]
[72 138]
[73 137]
[74 136]
[75 135]
[81 112]
[82 111]
[83 110]
[84 109]
[85 108]
[86 107]
[87 106]
[88 104]
[89 103]
[113 124]
[114 123]
[115 122]
[116 121]
[141 217]
[142 216]
[143 215]
[144 214]
[145 213]
[146 212]
[148 210]
[149 209]
[150 208]
[155 207]
[156 206]
[157 205]
[158 203]
[159 202]
[160 199]
[161 198]
[162 197]
[165 194]
[166 193]
[167 192]
[168 191]
[169 190]
[172 183]
[173 182]
[174 181]
[175 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
