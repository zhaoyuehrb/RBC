%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:01:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUACACAUACACAUGCACACACACACUCAUAUACACAUGCAGAAGCUGUGACACGUGCGGAAGCUGUGGUAAGUGCAUCCUCCUUCAGUCUCAGUUCUGAAAAUAGAUCAUCAUGGUGGCACCAAAGAGUCACACAGAUGACUGGGCUCCUGGGCCUUUCUCCAGUAAGCCACAGAGGAGUCAGCUGCAAAUAUUCUCUUCUGUUCUACAGA\
) } def
/len { sequence length } bind def

/coor [
[75.14812469 254.13572693]
[60.19121933 255.27191162]
[45.36558533 252.99142456]
[31.44156265 247.41275024]
[19.14263344 238.82575989]
[9.10784340 227.67663574]
[1.85859632 214.54467773]
[-2.22844076 200.11221313]
[-2.94090772 185.12913513]
[-0.24178499 170.37397766]
[5.72868252 156.61340332]
[14.66027260 144.56239319]
[26.08890343 134.84713745]
[39.41918564 127.97299194]
[51.05773544 118.51021576]
[36.30725098 121.23477173]
[21.55676460 123.95932007]
[6.80628014 126.68387604]
[-7.94420481 129.40843201]
[-22.69469070 132.13298035]
[-31.66377068 144.86849976]
[-46.66167068 147.42144775]
[-58.74776459 138.79232788]
[-73.49825287 141.51687622]
[-59.24726105 146.19761658]
[-45.48059082 152.15400696]
[-35.25539017 163.12876892]
[-30.28612709 177.28173828]
[-31.40600586 192.23986816]
[-38.42725372 205.49513245]
[-50.17261124 214.82501221]
[-64.67272949 218.66514587]
[-79.49635315 216.37167358]
[-92.15800476 208.32911682]
[-100.53554535 195.88391113]
[-89.92403412 185.28222656]
[-104.31922913 189.49865723]
[-118.71442413 193.71507263]
[-133.10961914 197.93150330]
[-140.46290588 203.34541321]
[-147.74603271 202.10272217]
[-162.20129395 206.10836792]
[-173.30587769 218.17568970]
[-189.24748230 214.32896423]
[-193.62675476 198.52536011]
[-181.93867493 187.02227783]
[-166.20693970 191.65309143]
[-151.75167847 187.64746094]
[-137.32604980 183.53631592]
[-122.93085480 179.31988525]
[-108.53565979 175.10345459]
[-94.14045715 170.88702393]
[-94.46922302 155.88996887]
[-94.79795074 140.89422607]
[-109.36408997 137.31268311]
[-123.93023682 133.73112488]
[-138.49636841 130.14958191]
[-147.57389832 131.13941956]
[-153.24841309 126.40782166]
[-167.76066589 122.61382294]
[-183.42306519 127.47402191]
[-195.27796936 116.14294434]
[-191.13008118 100.27703857]
[-175.24638367 96.19778442]
[-163.96667480 108.10157013]
[-149.45440674 111.89556885]
[-134.91482544 115.58344269]
[-120.34868622 119.16499329]
[-105.78253937 122.74653625]
[-91.21640015 126.32808685]
[-76.22280121 126.76638794]
[-61.47232056 124.04183197]
[-53.26630402 111.66455841]
[-38.34602737 108.69135284]
[-25.41924286 117.38249207]
[-10.66875744 114.65794373]
[4.08172750 111.93338776]
[18.83221245 109.20883942]
[33.58269882 106.48428345]
[48.33318329 103.75972748]
[51.95593643 97.19271851]
[37.22575378 94.36044312]
[35.36754990 79.47599030]
[48.94930649 73.10920715]
[59.20143890 84.05869293]
[62.82419205 77.49167633]
[57.26158905 63.56122589]
[51.69898605 49.63077545]
[46.13638306 35.70032501]
[40.57378006 21.76987457]
[25.50044823 18.08554840]
[15.49717140 6.22325277]
[14.41041374 -9.25571918]
[22.65805817 -22.39938736]
[37.06871414 -28.15374184]
[52.10119247 -24.30611610]
[61.97519684 -12.33600235]
[62.89397430 3.15384817]
[54.50423050 16.20727158]
[60.06683350 30.13772202]
[65.62944031 44.06817245]
[71.19203949 57.99862289]
[76.75463867 71.92907715]
[84.23043823 72.53117371]
[99.18202209 73.73536682]
[106.65781403 74.33747101]
[114.37816620 61.47682571]
[122.09851837 48.61618042]
[123.83142090 39.65078735]
[130.02679443 35.62519455]
[137.93423462 22.87872887]
[145.84169006 10.13226509]
[153.74913025 -2.61420035]
[161.65657043 -15.36066532]
[163.52027893 -24.29978180]
[169.77381897 -28.23442078]
[177.86666870 -40.86398315]
[185.86701965 -53.55233765]
[193.77445984 -66.29880524]
[201.68190002 -79.04526520]
[209.58934021 -91.79173279]
[217.49678040 -104.53820038]
[211.51283264 -118.85503387]
[215.11967468 -133.94709778]
[226.93043518 -144.01116943]
[242.40362549 -145.17741394]
[255.58947754 -136.99739075]
[261.41778564 -122.61648560]
[257.64743042 -107.56443787]
[245.72817993 -97.62908173]
[230.24325562 -96.63076019]
[222.33581543 -83.88429260]
[214.42837524 -71.13782501]
[206.52091980 -58.39136124]
[198.61347961 -45.64489746]
[197.75881958 -38.30611801]
[190.49623108 -32.77114105]
[182.40338135 -20.14157677]
[174.40303040 -7.45322418]
[166.49559021 5.29324102]
[158.58815002 18.03970528]
[150.68070984 30.78617096]
[142.77326965 43.53263474]
[134.95916748 56.33653259]
[127.23880768 69.19717407]
[119.51845551 82.05782318]
[127.14464569 94.97452545]
[142.13464355 94.42669678]
[157.12463379 93.87886810]
[172.11462402 93.33103180]
[187.48548889 83.18859100]
[202.66082764 92.00455475]
[217.64122009 91.23775482]
[232.62161255 90.47095490]
[247.60198975 89.70415497]
[262.58236694 88.93735504]
[272.98443604 77.03890991]
[288.75863647 76.06417084]
[300.54641724 86.59143066]
[301.35433960 102.37505341]
[290.70303345 114.05089569]
[274.91177368 114.69189453]
[263.34918213 103.91774750]
[248.36878967 104.68454742]
[233.38841248 105.45134735]
[218.40802002 106.21813965]
[203.42762756 106.98493958]
[195.09416199 115.75044250]
[182.62207031 116.51356506]
[172.66244507 108.32102966]
[157.67245483 108.86885834]
[142.68246460 109.41668701]
[127.69247437 109.96451569]
[121.82590485 123.76971436]
[131.83567810 134.94129944]
[141.84547424 146.11288452]
[151.85525513 157.28445435]
[161.86503601 168.45603943]
[171.87481689 179.62762451]
[181.88459778 190.79920959]
[191.89437866 201.97079468]
[201.90415955 213.14237976]
[216.09321594 207.75395203]
[231.27061462 207.85897827]
[245.38372803 213.44326782]
[256.52389526 223.75158691]
[263.18447876 237.38980103]
[264.46469116 252.51347351]
[260.19140625 267.07723999]
[250.94255066 279.11148071]
[237.96894836 286.98867798]
[223.02516174 289.64346313]
[208.13223267 286.71682739]
[195.30430603 278.60455322]
[186.27626038 266.40380859]
[182.26904297 251.76458740]
[183.82460022 236.66674805]
[190.73257446 223.15216064]
[180.72279358 211.98057556]
[170.71301270 200.80899048]
[160.70323181 189.63740540]
[150.69345093 178.46582031]
[140.68367004 167.29423523]
[130.67388916 156.12266541]
[120.66410065 144.95108032]
[110.65431976 133.77949524]
[114.08278656 148.38243103]
[122.06336212 161.08323669]
[126.96036530 175.26136780]
[128.51934814 190.18013000]
[126.65931702 205.06436157]
[121.47690582 219.14067078]
[113.24140167 231.67767334]
[102.38071442 242.02395630]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 80]
[16 79]
[17 78]
[18 77]
[19 76]
[20 75]
[23 72]
[24 71]
[36 52]
[37 51]
[38 50]
[39 49]
[41 48]
[42 47]
[54 70]
[55 69]
[56 68]
[57 67]
[59 66]
[60 65]
[86 103]
[87 102]
[88 101]
[89 100]
[90 99]
[106 146]
[107 145]
[108 144]
[110 143]
[111 142]
[112 141]
[113 140]
[114 139]
[116 138]
[117 137]
[118 135]
[119 134]
[120 133]
[121 132]
[122 131]
[147 173]
[148 172]
[149 171]
[150 170]
[152 167]
[153 166]
[154 165]
[155 164]
[156 163]
[174 206]
[175 205]
[176 204]
[177 203]
[178 202]
[179 201]
[180 200]
[181 199]
[182 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
