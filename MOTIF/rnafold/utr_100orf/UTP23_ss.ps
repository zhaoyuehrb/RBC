%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:13:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUUCAUUUCCGGGUGAAACUGGCAUUGAGGGUACUGGGGCGUGCGUGAGGCGUUUACUGAUGCUUCCUGGUCCGGUGGCCUCGGUCCCGGUAAGCCAGGCAUGAAGAUCACAAGGCAGAAACAUGCCAAGAAGCAUCUUGGCUUCUUCCGCAACAACUUCGGAGUCCGCGAGCCGUACCAGAUCCUGCUGGACGGCACCU\
) } def
/len { sequence length } bind def

/coor [
[43.11120605 116.60131836]
[40.73857117 100.14686584]
[25.85452271 98.28538513]
[10.97047520 96.42390442]
[-3.91357255 94.56242371]
[-18.79762077 92.70094299]
[-33.68166733 90.83946228]
[-44.32828140 98.12881470]
[-56.69091797 96.26735687]
[-64.21932983 86.79320526]
[-79.07263184 84.70047760]
[-93.81730652 90.43676758]
[-105.34062958 80.99948883]
[-120.19393158 78.90676117]
[-135.04722595 76.81403351]
[-144.80639648 86.10328674]
[-157.94236755 88.04507446]
[-169.62413025 82.15187836]
[-175.68544006 70.77652740]
[-190.50439453 68.45305634]
[-205.32334900 66.12958527]
[-220.14230347 63.80611038]
[-234.96127319 61.48263931]
[-249.79336548 66.98892975]
[-261.16854858 57.37358856]
[-275.98748779 55.05011368]
[-290.80645752 52.72664261]
[-305.62539673 50.40316772]
[-320.44436646 48.07969666]
[-335.26330566 45.75622177]
[-350.08227539 43.43275070]
[-364.91436768 48.93904495]
[-376.28955078 39.32369614]
[-391.10848999 37.00022507]
[-405.92745972 34.67675400]
[-420.74642944 32.35327911]
[-435.56536865 30.02980614]
[-450.38433838 27.70633507]
[-465.20327759 25.38286209]
[-480.03540039 30.88915443]
[-491.41055298 21.27380943]
[-506.22952271 18.95033646]
[-511.95788574 25.04456329]
[-519.54394531 28.33730316]
[-527.71978760 28.35923958]
[-535.15057373 25.18111801]
[-540.65246582 19.39010048]
[-543.38110352 11.98278618]
[-558.02697754 8.74251842]
[-572.67279053 5.50225163]
[-587.31866455 2.26198411]
[-601.96447754 -0.97828329]
[-616.61029053 -4.21855068]
[-631.25616455 -7.45881796]
[-645.90197754 -10.69908524]
[-661.36859131 -5.24772739]
[-673.64514160 -16.12052727]
[-670.10266113 -32.13248062]
[-654.38525391 -36.81186295]
[-642.66174316 -25.34492683]
[-628.01586914 -22.10466003]
[-613.37005615 -18.86439133]
[-598.72418213 -15.62412453]
[-584.07836914 -12.38385677]
[-569.43255615 -9.14358997]
[-554.78668213 -5.90332270]
[-540.14086914 -2.66305518]
[-520.25146484 -11.19211674]
[-503.90603638 4.13137913]
[-489.08709717 6.45485210]
[-475.31494141 0.78236878]
[-462.87982178 10.56390476]
[-448.06085205 12.88737774]
[-433.24191284 15.21084976]
[-418.42294312 17.53432274]
[-403.60397339 19.85779572]
[-388.78503418 22.18126869]
[-373.96606445 24.50474167]
[-360.19390869 18.83225822]
[-347.75878906 28.61379433]
[-332.93984985 30.93726730]
[-318.12088013 33.26073837]
[-303.30194092 35.58421326]
[-288.48297119 37.90768433]
[-273.66403198 40.23115921]
[-258.84506226 42.55463028]
[-245.07290649 36.88214874]
[-232.63780212 46.66368484]
[-217.81883240 48.98715591]
[-202.99987793 51.31062698]
[-188.18092346 53.63410187]
[-173.36196899 55.95757294]
[-160.21105957 45.47984695]
[-143.21612549 47.79749298]
[-132.95449829 61.96073532]
[-118.10120392 64.05346680]
[-103.24790192 66.14619446]
[-89.56563568 60.26021576]
[-76.97989655 69.84717560]
[-62.12659836 71.93991089]
[-46.23501205 64.50241852]
[-31.82018661 75.95541382]
[-16.93614006 77.81689453]
[-2.05209136 79.67837524]
[12.83195686 81.53985596]
[27.71600533 83.40133667]
[42.60005188 85.26281738]
[47.12577820 72.16231537]
[54.62247467 60.36834717]
[64.72771454 50.54994583]
[76.92963409 43.27839661]
[90.59269714 38.99417114]
[104.99076843 37.98054123]
[119.34567261 40.34545135]
[132.86926270 46.01281357]
[141.79890442 33.96036148]
[150.72853088 21.90790558]
[159.65817261 9.85545158]
[157.08398438 -5.73778915]
[166.35763550 -18.53524971]
[181.97721863 -20.94442177]
[194.67591858 -11.53598881]
[196.91981506 4.10819435]
[187.37765503 16.70671082]
[171.71061707 18.78508377]
[162.78099060 30.83753967]
[153.85134888 42.88999176]
[144.92172241 54.94244766]
[154.22186279 66.71136475]
[168.01216125 60.80985641]
[181.80245972 54.90835190]
[195.59275818 49.00685120]
[209.38304138 43.10534668]
[223.17333984 37.20384216]
[236.96363831 31.30233765]
[242.60755920 16.54016685]
[257.07073975 10.16895962]
[271.77239990 15.96864033]
[277.99035645 30.49836159]
[272.03555298 45.13789749]
[257.44091797 51.20186996]
[242.86514282 45.09263229]
[229.07484436 50.99413681]
[215.28454590 56.89564133]
[201.49426270 62.79714584]
[187.70396423 68.69864655]
[173.91366577 74.60015106]
[160.12336731 80.50165558]
[161.03662109 95.08950043]
[158.56892395 109.03439331]
[172.98498535 113.17891693]
[187.40104675 117.32344818]
[196.49069214 109.64748383]
[208.03955078 107.33937073]
[219.15264893 110.85961151]
[227.10104370 119.22230530]
[229.99180603 130.26779175]
[244.27200317 134.85864258]
[258.55221558 139.44950867]
[274.45944214 135.46302795]
[285.66946411 147.43244934]
[280.65039062 163.04464722]
[264.56539917 166.23913574]
[253.96134949 153.72970581]
[239.68115234 149.13883972]
[225.40095520 144.54798889]
[209.65579224 153.87612915]
[191.78390503 148.65058899]
[183.25651550 131.73951721]
[168.84045410 127.59498596]
[154.42439270 123.45045471]
[146.78062439 136.38009644]
[136.13174438 146.97271729]
[143.69898987 159.92404175]
[151.26622009 172.87536621]
[158.83346558 185.82669067]
[166.40071106 198.77801514]
[173.43722534 204.61418152]
[173.98313904 211.99012756]
[181.34803772 225.05757141]
[188.71295166 238.12501526]
[196.07786560 251.19245911]
[211.36585999 255.19902039]
[219.27081299 268.88430786]
[215.10282898 284.12911987]
[201.33471680 291.88891602]
[186.13485718 287.55999756]
[178.52104187 273.71063232]
[183.01042175 258.55737305]
[175.64550781 245.48992920]
[168.28059387 232.42248535]
[160.91569519 219.35504150]
[153.44938660 206.34526062]
[145.88214111 193.39393616]
[138.31489563 180.44261169]
[130.74766541 167.49128723]
[123.18041229 154.53996277]
[107.11949158 158.83239746]
[90.49829102 158.49491882]
[74.62483978 153.55407715]
[60.74833298 144.39871216]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 107]
[3 106]
[4 105]
[5 104]
[6 103]
[7 102]
[10 100]
[11 99]
[13 97]
[14 96]
[15 95]
[19 92]
[20 91]
[21 90]
[22 89]
[23 88]
[25 86]
[26 85]
[27 84]
[28 83]
[29 82]
[30 81]
[31 80]
[33 78]
[34 77]
[35 76]
[36 75]
[37 74]
[38 73]
[39 72]
[41 70]
[42 69]
[48 67]
[49 66]
[50 65]
[51 64]
[52 63]
[53 62]
[54 61]
[55 60]
[115 128]
[116 127]
[117 126]
[118 125]
[129 148]
[130 147]
[131 146]
[132 145]
[133 144]
[134 143]
[135 142]
[150 171]
[151 170]
[152 169]
[157 166]
[158 165]
[159 164]
[173 197]
[174 196]
[175 195]
[176 194]
[177 193]
[179 192]
[180 191]
[181 190]
[182 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
