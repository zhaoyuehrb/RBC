%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:34:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCCCGCGGCUGUUCGCUGUUCCAGUGGGUCGUGGCGGUGGCGGCAGCGGCGGUUAGGGGAUGUAACGGUCGCCCGCCUCCGGCGUGACGAUGGCGGCCGUAGGGUCCGGAGGCUAUGCGCGGAACGAUGCAGGGGAGAAGCUGCCCUCUGUCAUGGCGGGAGUUCCGGCGCGGAGGGGCCAGUCCUCCC\
) } def
/len { sequence length } bind def

/coor [
[90.34615326 122.56938934]
[85.28834534 113.70117950]
[85.20088959 105.12023926]
[88.82317352 99.06269836]
[74.21501923 95.65655518]
[59.60686111 92.25041199]
[44.97132874 88.96389008]
[30.30939865 85.79721832]
[15.64746952 82.63054657]
[0.98554009 79.46387482]
[-13.67638969 76.29719543]
[-28.33831978 73.13052368]
[-43.00024796 69.96385193]
[-57.66217804 66.79718018]
[-71.90509796 71.50240326]
[-81.79528809 82.77999878]
[-91.68547821 94.05760193]
[-101.57566071 105.33519745]
[-111.46585083 116.61279297]
[-121.35604095 127.89038849]
[-127.25362396 143.78550720]
[-144.16017151 142.51861572]
[-147.62298584 125.92206573]
[-132.63363647 118.00020599]
[-122.74344635 106.72260284]
[-112.85325623 95.44500732]
[-102.96307373 84.16741180]
[-93.07288361 72.88981628]
[-83.18270111 61.61221695]
[-86.58884430 47.00406265]
[-100.44703674 41.26381302]
[-114.30522919 35.52355957]
[-128.16342163 29.78330803]
[-142.02162170 24.04305649]
[-155.87980652 18.30280495]
[-171.59043884 20.17004204]
[-180.38796997 8.15119267]
[-194.24617004 2.41094065]
[-208.10435486 -3.32931089]
[-223.81498718 -1.46207476]
[-232.61251831 -13.48092461]
[-246.47071838 -19.22117615]
[-260.32891846 -24.96142769]
[-274.18710327 -30.70167923]
[-288.04528809 -36.44192886]
[-294.66500854 -35.95696259]
[-299.76303101 -38.51391220]
[-302.25805664 -42.60339355]
[-315.92102051 -48.79399872]
[-329.58398438 -54.98460388]
[-343.24694824 -61.17520905]
[-356.90988159 -67.36581421]
[-372.67321777 -66.01361847]
[-381.07278442 -78.31388092]
[-394.73574829 -84.50448608]
[-408.39868164 -90.69509125]
[-422.06164551 -96.88569641]
[-436.08200073 -89.96008301]
[-451.26156616 -93.71705627]
[-460.43301392 -106.38269043]
[-459.26589966 -121.97666168]
[-448.31127930 -133.13597107]
[-432.74157715 -134.59152222]
[-419.90835571 -125.65607452]
[-415.87103271 -110.54865265]
[-402.20809937 -104.35804749]
[-388.54513550 -98.16744232]
[-374.88217163 -91.97683716]
[-360.09613037 -93.77182770]
[-350.71929932 -81.02877045]
[-337.05633545 -74.83816528]
[-323.39337158 -68.64756012]
[-309.73040771 -62.45695496]
[-296.06744385 -56.26634979]
[-282.30505371 -50.30012131]
[-268.44683838 -44.55987167]
[-254.58865356 -38.81962204]
[-240.73045349 -33.07936859]
[-226.87226868 -27.33911705]
[-212.15286255 -29.61693382]
[-202.36410522 -17.18750381]
[-188.50590515 -11.44725227]
[-174.64772034 -5.70700073]
[-159.92831421 -7.98481798]
[-150.13955688 4.44461250]
[-136.28135681 10.18486404]
[-122.42317200 15.92511559]
[-108.56497955 21.66536713]
[-94.70678711 27.40561867]
[-80.84858704 33.14587021]
[-73.41838074 32.91927338]
[-66.39679718 35.09799194]
[-60.53202057 39.39418411]
[-56.43072891 45.29749680]
[-54.49550629 52.13525009]
[-39.83357620 55.30192184]
[-25.17164612 58.46859741]
[-10.50971603 61.63526917]
[4.15221357 64.80194092]
[18.81414223 67.96861267]
[33.47607422 71.13529205]
[48.13800049 74.30196381]
[55.35143280 72.63831329]
[63.01300430 77.64225769]
[77.62116241 81.04840088]
[92.22931671 84.45454407]
[106.35247803 79.40119934]
[115.48389435 67.50089264]
[124.61531830 55.60059738]
[133.74673462 43.70029449]
[131.70393372 32.99623108]
[135.81330872 23.14121246]
[144.49096680 17.30499077]
[154.72853088 17.21928596]
[164.24443054 5.62412930]
[169.61878967 -10.45544243]
[186.55773926 -9.74238777]
[190.56172180 6.73197079]
[175.83959961 15.14002895]
[166.32369995 26.73518562]
[164.59582520 45.98464203]
[145.64703369 52.83171844]
[136.51562500 64.73201752]
[127.38419342 76.63231659]
[118.25277710 88.53261566]
[119.35325623 95.95143890]
[133.07214355 89.88578033]
[145.08157349 80.89836884]
[159.82847595 83.64221954]
[167.80168152 96.34764862]
[163.85877991 110.82015991]
[150.54278564 117.72554779]
[136.44313049 112.61118317]
[121.55421448 110.78908539]
[122.65468597 118.20791626]
[134.84739685 126.94507599]
[147.04008484 135.68225098]
[159.23278809 144.41940308]
[171.42549133 153.15657043]
[184.26588440 151.83044434]
[194.24426270 159.37190247]
[196.33329773 171.29693604]
[208.38140869 180.23242188]
[220.42951965 189.16792297]
[232.47763062 198.10340881]
[244.67033386 206.84057617]
[257.00436401 215.37707520]
[269.33837891 223.91357422]
[281.67239380 232.45007324]
[294.00643921 240.98658752]
[306.34045410 249.52308655]
[318.67446899 258.05960083]
[331.00848389 266.59609985]
[335.38259888 266.79537964]
[339.08731079 268.23937988]
[341.81188965 270.56198120]
[343.39755249 273.33352661]
[343.84500122 276.11630249]
[355.59432983 285.44122314]
[371.21377563 287.95971680]
[376.37292480 301.93228149]
[388.12222290 311.25717163]
[404.41442871 313.12689209]
[410.69219971 328.27688599]
[400.49749756 341.12210083]
[384.31774902 338.44851685]
[378.79730225 323.00650024]
[367.04800415 313.68157959]
[352.26892090 311.83004761]
[346.26940918 297.19052124]
[334.52011108 287.86560059]
[322.47198486 278.93011475]
[310.13796997 270.39361572]
[297.80395508 261.85711670]
[285.46990967 253.32060242]
[273.13589478 244.78410339]
[260.80187988 236.24760437]
[248.46784973 227.71110535]
[236.13383484 219.17459106]
[231.34346008 219.13694763]
[226.52938843 216.07878113]
[223.54214478 210.15151978]
[211.49403381 201.21603394]
[199.44592285 192.28054810]
[187.39779663 183.34504700]
[169.88743591 182.28977966]
[162.68832397 165.34927368]
[150.49562073 156.61210632]
[138.30291748 147.87493896]
[126.11022186 139.13777161]
[113.91752625 130.40061951]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 106]
[5 105]
[6 104]
[7 102]
[8 101]
[9 100]
[10 99]
[11 98]
[12 97]
[13 96]
[14 95]
[15 29]
[16 28]
[17 27]
[18 26]
[19 25]
[20 24]
[30 90]
[31 89]
[32 88]
[33 87]
[34 86]
[35 85]
[37 83]
[38 82]
[39 81]
[41 79]
[42 78]
[43 77]
[44 76]
[45 75]
[48 74]
[49 73]
[50 72]
[51 71]
[52 70]
[54 68]
[55 67]
[56 66]
[57 65]
[107 125]
[108 124]
[109 123]
[110 122]
[114 120]
[115 119]
[135 191]
[136 190]
[137 189]
[138 188]
[139 187]
[142 185]
[143 184]
[144 183]
[145 182]
[146 179]
[147 178]
[148 177]
[149 176]
[150 175]
[151 174]
[152 173]
[153 172]
[158 171]
[159 170]
[161 168]
[162 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
