%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:25:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUAAAGGGCGGAGGAACGGGGCUGGCUGCUUCCCGAGUCCCCAGGUCCCGCGAGCGGCGGGCGUGUUGCGGGUAUGGGGUGCGGCGCCAGCAGGAAGGUGGUCCCGGGGCCACCAGCGCUGGCUUGGGCCAAGCACGAAGGUCAAAACCAAGCCGGCGUCGGAGGCGCGGGGC\
) } def
/len { sequence length } bind def

/coor [
[145.55955505 134.62736511]
[140.51359558 140.41503906]
[134.73822021 145.47508240]
[128.33741760 149.71636963]
[121.42642975 153.06256104]
[114.12966156 155.45339966]
[106.57850647 156.84585571]
[98.90891266 157.21482849]
[91.25895691 156.55371094]
[83.76638031 154.87437439]
[76.56607819 152.20707703]
[68.68299103 164.96861267]
[72.56100464 180.28973389]
[64.39785004 193.82260132]
[49.03659439 197.53840637]
[35.59078598 189.23263550]
[32.03759384 173.83294678]
[40.48505783 160.47570801]
[55.92145157 157.08552551]
[63.80453873 144.32398987]
[48.92511749 125.80859375]
[42.84560776 102.84652710]
[46.61347580 79.39402008]
[33.44829178 72.20528412]
[20.28310585 65.01654816]
[7.11792183 57.82781219]
[-6.04726315 50.63908005]
[-19.21244812 43.45034409]
[-28.27637863 42.07588959]
[-32.54679108 36.01398849]
[-45.58156586 28.59141350]
[-58.61634064 21.16883850]
[-55.91373825 35.92336273]
[-64.29912567 48.36061478]
[-78.99047852 51.38786316]
[-91.60958099 43.27872086]
[-94.96000671 28.65768623]
[-87.13105774 15.86286068]
[-72.58596802 12.19110394]
[-84.75262451 3.41770434]
[-96.99709320 -5.24676037]
[-109.31840515 -13.80160046]
[-121.63971710 -22.35643959]
[-133.96102905 -30.91127968]
[-146.28233337 -39.46611786]
[-159.19355774 -35.56268311]
[-171.80818176 -39.75685501]
[-179.58042908 -50.30061340]
[-179.84651184 -63.20188141]
[-192.01316833 -71.97528076]
[-204.17982483 -80.74868011]
[-216.34646606 -89.52207947]
[-228.51312256 -98.29547882]
[-240.67977905 -107.06887817]
[-252.84643555 -115.84227753]
[-265.09091187 -124.50674438]
[-277.41220093 -133.06158447]
[-289.73352051 -141.61642456]
[-305.71343994 -140.19441223]
[-316.68380737 -151.90040588]
[-314.22915649 -167.75456238]
[-300.23242188 -175.59492493]
[-285.43075562 -169.40704346]
[-281.17868042 -153.93772888]
[-268.85736084 -145.38290405]
[-256.53607178 -136.82806396]
[-249.22474670 -135.59205627]
[-244.07302856 -128.00894165]
[-231.90638733 -119.23553467]
[-219.73973083 -110.46213531]
[-207.57307434 -101.68873596]
[-195.40641785 -92.91533661]
[-183.23976135 -84.14193726]
[-171.07312012 -75.36853790]
[-154.61819458 -78.77209473]
[-140.50631714 -69.04305267]
[-137.72749329 -51.78742981]
[-125.40618896 -43.23258972]
[-113.08487701 -34.67774963]
[-100.76356506 -26.12291145]
[-88.44225311 -17.56807137]
[-81.13093567 -16.33207703]
[-75.97922516 -8.74894905]
[-63.81256866 0.02445083]
[-51.19376755 8.13406277]
[-38.15899277 15.55663776]
[-25.12421608 22.97921371]
[-12.02371311 30.28516006]
[1.14147174 37.47389221]
[14.30665684 44.66262817]
[27.47184181 51.85136414]
[40.63702774 59.04010010]
[53.80221176 66.22883606]
[64.16524506 55.38388824]
[76.99046326 47.60449600]
[91.39666748 43.42518234]
[106.39399719 43.13310242]
[120.95199585 46.74832153]
[134.07038879 54.02244568]
[144.84782410 64.45566559]
[152.54379272 77.33113098]
[156.62948608 91.76416016]
[156.82418823 106.76306915]
[171.35824585 110.47266388]
[185.89230347 114.18226624]
[200.42636108 117.89186096]
[214.96041870 121.60146332]
[229.49449158 125.31105804]
[240.98579407 119.40695190]
[253.02999878 122.81855011]
[259.30163574 133.18597412]
[273.76718140 137.15440369]
[288.23272705 141.12283325]
[303.58816528 137.31221008]
[313.81494141 148.14097595]
[328.28048706 152.10940552]
[343.63592529 148.29878235]
[353.86273193 159.12754822]
[368.32824707 163.09596252]
[382.79379272 167.06439209]
[397.25930786 171.03282166]
[411.72485352 175.00125122]
[426.19036865 178.96966553]
[440.65591431 182.93809509]
[455.12142944 186.90652466]
[469.58697510 190.87493896]
[484.05252075 194.84336853]
[498.51803589 198.81179810]
[512.98358154 202.78022766]
[527.61175537 206.09938049]
[542.37341309 208.76268005]
[557.13507080 211.42597961]
[567.57208252 200.06495667]
[582.50024414 196.17222595]
[597.15606689 200.98994446]
[606.86291504 212.98080444]
[608.52337646 228.31854248]
[601.60760498 242.10896301]
[588.32238770 249.95158386]
[572.90698242 249.34385681]
[560.28045654 240.47970581]
[554.47174072 226.18765259]
[539.71008301 223.52435303]
[524.94842529 220.86105347]
[531.05877686 234.56010437]
[524.32147217 247.96192932]
[509.68170166 251.22958374]
[497.88507080 241.96463013]
[497.59027100 226.96751404]
[509.01513672 217.24575806]
[494.54962158 213.27732849]
[480.08407593 209.30889893]
[465.61856079 205.34046936]
[451.15301514 201.37205505]
[436.68750000 197.40362549]
[422.22195435 193.43519592]
[407.75640869 189.46678162]
[393.29089355 185.49835205]
[378.82534790 181.52992249]
[364.35983276 177.56150818]
[349.89428711 173.59307861]
[335.57351685 177.68753052]
[324.31207275 166.57493591]
[309.84652710 162.60650635]
[295.52575684 166.70097351]
[284.26428223 155.58836365]
[269.79876709 151.61993408]
[255.33322144 147.65150452]
[238.63722229 153.01130676]
[225.78488159 139.84512329]
[211.25082397 136.13551331]
[196.71676636 132.42591858]
[182.18270874 128.71632385]
[167.64865112 125.00672913]
[153.11459351 121.29712677]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 20]
[12 19]
[23 93]
[24 92]
[25 91]
[26 90]
[27 89]
[28 88]
[30 87]
[31 86]
[32 85]
[39 84]
[40 83]
[41 81]
[42 80]
[43 79]
[44 78]
[45 77]
[49 74]
[50 73]
[51 72]
[52 71]
[53 70]
[54 69]
[55 68]
[56 66]
[57 65]
[58 64]
[103 175]
[104 174]
[105 173]
[106 172]
[107 171]
[108 170]
[111 168]
[112 167]
[113 166]
[115 164]
[116 163]
[118 161]
[119 160]
[120 159]
[121 158]
[122 157]
[123 156]
[124 155]
[125 154]
[126 153]
[127 152]
[128 151]
[129 150]
[130 144]
[131 143]
[132 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
