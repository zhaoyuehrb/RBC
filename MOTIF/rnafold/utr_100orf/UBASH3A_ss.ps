%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:16:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCUCAGCCUUGCCUCUCCCCCUCUUGCUUUAUCUCCUCAUUUCUGUGUGCAGGCGAGCUUCUUGGCCUAAGGGCAGGAAGAGAUGGCAGCGGGGGAGACGCAGCUCUACGCCAAGGUCUCCAACAAGCUCAAGAGCCGCAGCAGCCCCUCGCUCCUGGAGCCCCUCCUGGCCAUGGGCUUCC\
) } def
/len { sequence length } bind def

/coor [
[97.02817535 188.99822998]
[96.26433563 174.01768494]
[95.50049591 159.03715515]
[94.73665619 144.05661011]
[93.97280884 129.07606506]
[75.97689819 117.45380402]
[70.48451233 96.74719238]
[56.47320938 91.39150238]
[42.46191025 86.03580475]
[35.84719849 86.70436859]
[30.67473793 84.28141785]
[28.07088852 80.25301361]
[14.24953079 74.42462921]
[0.42817286 68.59624481]
[-15.29403305 70.36339569]
[-24.01484680 58.28876877]
[-37.83620453 52.46038437]
[-51.65756226 46.63199615]
[-65.47891998 40.80361176]
[-79.30027771 34.97522736]
[-93.12163544 29.14684296]
[-106.94299316 23.31845856]
[-120.76435089 17.49007416]
[-132.99920654 21.62005806]
[-144.39924622 16.46362877]
[-149.06639099 5.28815794]
[-162.78678894 -0.77408385]
[-176.50717163 -6.83632565]
[-190.22756958 -12.89856720]
[-203.94796753 -18.96080971]
[-210.58815002 -18.62995148]
[-215.63050842 -21.31315422]
[-218.02584839 -25.46892548]
[-231.53247070 -31.99356842]
[-245.03909302 -38.51821136]
[-258.54571533 -45.04285812]
[-272.05236816 -51.56750107]
[-276.41976929 -51.08447266]
[-280.31552124 -51.94310760]
[-283.37280273 -53.82675934]
[-285.36691284 -56.33158493]
[-286.23135376 -59.02102280]
[-299.26397705 -66.44737244]
[-312.29660034 -73.87371826]
[-325.32922363 -81.30006409]
[-338.36184692 -88.72641754]
[-351.39447021 -96.15276337]
[-364.42709351 -103.57910919]
[-377.68130493 -95.94538879]
[-392.87655640 -95.97068787]
[-405.93218994 -103.54807281]
[-413.39221191 -116.55593109]
[-413.33996582 -131.45098877]
[-426.37258911 -138.87733459]
[-439.40521240 -146.30368042]
[-452.43783569 -153.73002625]
[-468.25866699 -153.83987427]
[-475.48599243 -166.86349487]
[-488.51861572 -174.28985596]
[-504.90551758 -173.65599060]
[-513.41778564 -187.67289734]
[-505.29870605 -201.92115784]
[-488.90054321 -201.74339294]
[-481.09225464 -187.32247925]
[-468.05963135 -179.89613342]
[-453.17098999 -180.31747437]
[-445.01147461 -166.76266479]
[-431.97885132 -159.33631897]
[-418.94622803 -151.90995789]
[-405.91360474 -144.48361206]
[-393.12588501 -152.12165833]
[-378.13220215 -152.33479309]
[-364.95788574 -144.96563721]
[-357.19000244 -131.90589905]
[-357.00076294 -116.61174011]
[-343.96813965 -109.18538666]
[-330.93551636 -101.75904083]
[-317.90289307 -94.33269501]
[-304.87023926 -86.90634918]
[-291.83761597 -79.47999573]
[-278.80499268 -72.05364990]
[-265.52770996 -65.07412720]
[-252.02108765 -58.54948425]
[-238.51445007 -52.02484131]
[-225.00782776 -45.50019836]
[-211.50120544 -38.97555542]
[-197.88572693 -32.68120193]
[-184.16532898 -26.61896133]
[-170.44493103 -20.55672073]
[-156.72453308 -14.49447823]
[-143.00415039 -8.43223667]
[-125.69474792 -11.26249981]
[-114.93596649 3.66871619]
[-101.11460876 9.49710083]
[-87.29325104 15.32548523]
[-73.47189331 21.15386963]
[-59.65053558 26.98225594]
[-45.82917786 32.81063843]
[-32.00782013 38.63902664]
[-18.18646240 44.46741104]
[-3.45285273 42.28337097]
[6.25655746 54.77488708]
[20.07791519 60.60327148]
[33.89927292 66.43165588]
[47.81760788 72.02450562]
[61.82890701 77.38020325]
[75.84020996 82.73589325]
[86.50644684 73.54874420]
[100.20536041 70.30651855]
[113.85812378 73.73791504]
[124.39627075 83.07171631]
[129.45135498 96.21015167]
[144.32984924 98.11541748]
[159.20835876 100.02068329]
[174.08686829 101.92594910]
[188.99557495 103.57829285]
[203.93020630 104.97724152]
[218.86482239 106.37618256]
[235.40461731 98.30600739]
[249.31898499 108.98383331]
[264.27520752 110.12897491]
[279.23144531 111.27411652]
[294.18765259 112.41925812]
[309.14389038 113.56439972]
[318.30102539 103.66844177]
[331.29763794 100.90097046]
[343.33395386 106.05460358]
[350.09640503 117.03826904]
[365.03100586 118.43721771]
[379.96563721 119.83615875]
[383.88964844 117.85884857]
[387.84005737 117.30344391]
[391.36257935 118.00127411]
[394.10565186 119.65236664]
[395.85458374 121.87081909]
[410.65982056 124.28021240]
[425.46505737 126.68960571]
[438.20358276 117.72478485]
[453.18386841 120.37915802]
[461.65194702 132.57862854]
[476.45715332 134.98802185]
[491.59179688 128.67333984]
[504.46182251 138.83671570]
[501.82769775 155.02291870]
[486.39916992 160.58099365]
[474.04776001 149.79325867]
[459.24255371 147.38386536]
[447.34320068 156.26875305]
[432.29428101 154.03619385]
[423.05566406 141.49484253]
[408.25042725 139.08544922]
[393.44519043 136.67605591]
[378.56668091 134.77078247]
[363.63208008 133.37184143]
[348.69744873 131.97290039]
[336.23077393 143.24562073]
[319.13104248 142.00056458]
[307.99874878 128.52062988]
[293.04251099 127.37548065]
[278.08630371 126.23033905]
[263.13006592 125.08519745]
[248.17384338 123.94005585]
[238.77754211 131.58091736]
[226.29420471 130.73466492]
[217.46588135 121.31080627]
[202.53126526 119.91186523]
[187.59663391 118.51291656]
[183.39756775 120.83152008]
[177.69418335 120.52101898]
[172.18159485 116.80445862]
[157.30310059 114.89919281]
[142.42459106 112.99392700]
[127.54608154 111.08865356]
[124.45465851 116.84382629]
[120.17956543 121.78370667]
[114.92773438 125.66919708]
[108.95335388 128.31222534]
[109.71719360 143.29277039]
[110.48103333 158.27330017]
[111.24487305 173.25384521]
[112.00871277 188.23439026]
[121.37021637 201.69894409]
[114.14641571 216.42134094]
[97.76854706 217.25642395]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 181]
[2 180]
[3 179]
[4 178]
[5 177]
[7 107]
[8 106]
[9 105]
[12 104]
[13 103]
[14 102]
[16 100]
[17 99]
[18 98]
[19 97]
[20 96]
[21 95]
[22 94]
[23 93]
[26 91]
[27 90]
[28 89]
[29 88]
[30 87]
[33 86]
[34 85]
[35 84]
[36 83]
[37 82]
[42 81]
[43 80]
[44 79]
[45 78]
[46 77]
[47 76]
[48 75]
[53 70]
[54 69]
[55 68]
[56 67]
[58 65]
[59 64]
[112 173]
[113 172]
[114 171]
[115 170]
[116 167]
[117 166]
[118 165]
[120 162]
[121 161]
[122 160]
[123 159]
[124 158]
[128 155]
[129 154]
[130 153]
[135 152]
[136 151]
[137 150]
[140 147]
[141 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
