%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:57:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUGACUGGCCGUAGAGUCUGCGCAGUUGGUGAAUGGCGUUGGUGGCGGGAAAGUUGAGUCUCUCCUGCGCCGAGCCUUCGGGGCGAUGUGUAGUGCCUUCCAUAGGGCUGAGUCUGGGACCGAGCUCCUUGCCCGACUUGAAGGUAGAAGUUCCUUGAAAGAAAUAGAACCAAAUCUGUUUGCUG\
) } def
/len { sequence length } bind def

/coor [
[79.17980957 114.43965149]
[71.69673920 113.93602753]
[63.16778946 126.27528381]
[61.68589401 142.02693176]
[48.08438110 148.09719849]
[39.55543518 160.43644714]
[31.02648926 172.77569580]
[22.49754333 185.11494446]
[13.96859646 197.45419312]
[5.43965054 209.79344177]
[-2.88080287 222.27423096]
[-10.99041557 234.89303589]
[-19.10002708 247.51184082]
[-27.20964050 260.13064575]
[-35.31925201 272.74945068]
[-38.79602814 289.34307861]
[-55.70363617 290.59573364]
[-61.58784103 274.69564819]
[-47.93805313 264.63983154]
[-39.82844162 252.02102661]
[-31.71883011 239.40222168]
[-23.60921860 226.78341675]
[-15.49960613 214.16462708]
[-15.62715912 209.37145996]
[-12.73078918 204.45133972]
[-6.89959908 201.26449585]
[1.62934685 188.92524719]
[10.15829277 176.58599854]
[18.68723869 164.24674988]
[27.21618462 151.90750122]
[35.74513245 139.56825256]
[36.61698151 124.69918823]
[50.82854080 117.74633789]
[59.35748672 105.40708160]
[73.82523346 101.93605042]
[88.50943756 100.17697144]
[74.30717468 95.35041046]
[60.10491180 90.52384949]
[50.95129395 90.72377777]
[45.70578384 85.49507141]
[31.58660889 80.43060303]
[17.46743202 75.36613464]
[3.34825420 70.30166626]
[-10.77092266 65.23719788]
[-24.89010048 60.17272949]
[-34.04578400 60.21885681]
[-39.20271301 54.90277100]
[-53.23482132 49.60182571]
[-67.26692200 44.30088425]
[-81.29903412 38.99993896]
[-95.33113861 33.69899368]
[-110.97516632 36.06010818]
[-120.14686584 24.32429504]
[-134.17897034 19.02335167]
[-148.47753906 25.75585365]
[-163.32025146 20.32729912]
[-169.90121460 5.95835400]
[-164.31602478 -8.82614231]
[-149.87831116 -15.25481129]
[-135.15368652 -9.51363564]
[-128.87802124 4.99124527]
[-114.84591675 10.29218960]
[-100.20555878 7.55191851]
[-90.03018951 19.66688919]
[-75.99808502 24.96783257]
[-61.96598053 30.26877785]
[-47.93387604 35.56972122]
[-33.90177155 40.87066650]
[-19.82563210 46.05355453]
[-5.70645475 51.11802292]
[8.41272259 56.18249130]
[22.53190041 61.24695969]
[36.65107727 66.31142426]
[50.77025223 71.37589264]
[64.93147278 76.32158661]
[79.13373566 81.14814758]
[93.33599854 85.97470856]
[108.05692291 83.09471130]
[119.39316559 73.27180481]
[130.72941589 63.44889069]
[142.06565857 53.62598038]
[153.40190125 43.80307007]
[164.73814392 33.98015594]
[176.07438660 24.15724754]
[180.52293396 16.15480232]
[187.68457031 14.26648808]
[199.18423462 4.63540268]
[210.68388367 -4.99568224]
[207.91091919 -16.15541267]
[209.50552368 -27.49151230]
[215.19824219 -37.36415482]
[224.12959290 -44.35974884]
[234.97972107 -47.49328995]
[246.16329956 -46.34693527]
[256.06115723 -41.12527847]
[268.03143311 -50.16479874]
[280.00167847 -59.20431519]
[291.97195435 -68.24383545]
[303.94219971 -77.28335571]
[315.91247559 -86.32287598]
[327.88272095 -95.36239624]
[325.67977905 -111.73957825]
[331.99465942 -126.90847015]
[345.01882935 -136.77098083]
[361.14535522 -138.71437073]
[375.96743774 -132.30281067]
[387.78417969 -141.54214478]
[399.60089111 -150.78147888]
[411.41760254 -160.02081299]
[418.08639526 -179.02975464]
[437.31539917 -180.94419861]
[448.81506348 -190.57528687]
[460.31469727 -200.20637512]
[471.81436157 -209.83744812]
[477.42630005 -224.62991333]
[492.15148926 -226.86999512]
[503.65115356 -236.50108337]
[508.76303101 -252.08314514]
[524.86676025 -255.18188477]
[535.39617920 -242.60957336]
[529.51953125 -227.29953003]
[513.28222656 -225.00141907]
[501.78256226 -215.37033081]
[496.99319458 -201.26675415]
[481.44546509 -198.33779907]
[469.94580078 -188.70671082]
[458.44613647 -179.07562256]
[446.94647217 -169.44453430]
[446.96209717 -159.20079041]
[441.20660400 -150.46231079]
[431.38513184 -146.25817871]
[420.65692139 -148.20410156]
[408.84020996 -138.96476746]
[397.02349854 -129.72543335]
[385.20678711 -120.48609161]
[388.00015259 -107.10630798]
[384.73617554 -93.76531219]
[375.99734497 -83.08394623]
[363.44732666 -77.18585205]
[349.51452637 -77.27539062]
[336.92224121 -83.39213562]
[324.95196533 -74.35261536]
[312.98171997 -65.31309509]
[301.01147461 -56.27357864]
[289.04119873 -47.23405838]
[277.07095337 -38.19453812]
[265.10067749 -29.15501976]
[266.54211426 -10.54224968]
[256.41436768 5.31823063]
[238.64187622 11.94574738]
[220.31497192 6.50397825]
[208.81530762 16.13506317]
[197.31565857 25.76614952]
[185.89729309 35.49349213]
[174.56105042 45.31640244]
[163.22480774 55.13931274]
[151.88856506 64.96222687]
[140.55232239 74.78513336]
[129.21607971 84.60804749]
[117.87983704 94.43095398]
[114.99983978 109.15187836]
[121.79846954 122.52269745]
[128.70916748 135.83592224]
[135.73146057 149.09063721]
[142.75373840 162.34535217]
[149.77603149 175.60006714]
[156.79832458 188.85478210]
[163.82060242 202.10949707]
[170.84289551 215.36421204]
[186.02142334 219.76734924]
[193.56748962 233.65377808]
[189.00411987 248.78491211]
[175.03869629 256.18371582]
[159.95664978 251.46063232]
[152.70590210 237.41777039]
[157.58818054 222.38650513]
[150.56588745 209.13179016]
[143.54360962 195.87707520]
[136.52131653 182.62236023]
[129.49902344 169.36764526]
[122.47673798 156.11293030]
[115.45445251 142.85821533]
[109.53245544 138.41021729]
[108.42765045 129.32131958]
[101.62902069 115.95050812]
[94.14595032 115.44689178]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 34]
[3 33]
[5 31]
[6 30]
[7 29]
[8 28]
[9 27]
[10 26]
[11 23]
[12 22]
[13 21]
[14 20]
[15 19]
[36 77]
[37 76]
[38 75]
[40 74]
[41 73]
[42 72]
[43 71]
[44 70]
[45 69]
[47 68]
[48 67]
[49 66]
[50 65]
[51 64]
[53 62]
[54 61]
[78 160]
[79 159]
[80 158]
[81 157]
[82 156]
[83 155]
[84 154]
[86 153]
[87 152]
[88 151]
[95 147]
[96 146]
[97 145]
[98 144]
[99 143]
[100 142]
[101 141]
[106 135]
[107 134]
[108 133]
[109 132]
[111 128]
[112 127]
[113 126]
[114 125]
[116 123]
[117 122]
[161 185]
[162 184]
[163 182]
[164 181]
[165 180]
[166 179]
[167 178]
[168 177]
[169 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
