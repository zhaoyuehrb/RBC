%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:16:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAGGGCGAGGCGGCCACGCGGGGCCGGGAAUGCCCGCGGUGCGGGGCCCCAGAGCCGCCCGGUGGUCGUGUCCGGGCGAUGGCUCUUCGCCUGGUCGCCGACUUCGACCUCGGGAAGGACGUGCUCCCGUGGUUGCGGGCGCAGCGGGCAGUGUCGGAGGCCAGCGGGGCCGGAAGCG\
) } def
/len { sequence length } bind def

/coor [
[61.94130325 717.90014648]
[46.91663742 722.23529053]
[32.64152527 715.85131836]
[25.85624123 701.76251221]
[29.76458549 686.62121582]
[42.52115631 677.57666016]
[43.56750488 662.61322021]
[32.57716751 655.00610352]
[26.74041939 642.86132812]
[27.68146133 629.31109619]
[35.26087952 617.90924072]
[47.58418655 611.69921875]
[48.89152145 596.75634766]
[50.19886017 581.81341553]
[51.50619507 566.87048340]
[52.81352997 551.92755127]
[46.21492767 538.57440186]
[55.12554932 525.50103760]
[56.43288422 510.55813599]
[57.74022293 495.61523438]
[50.20045090 486.13348389]
[51.18541718 473.65701294]
[60.71063232 464.93316650]
[62.27856064 450.01535034]
[63.84648895 435.09750366]
[65.41441345 420.17968750]
[54.28392792 407.58895874]
[55.71818542 390.50646973]
[69.31710052 379.52371216]
[70.62443542 364.58081055]
[61.17448425 347.72976685]
[72.91761017 331.36752319]
[73.70265198 316.38809204]
[74.48769379 301.40863037]
[75.27272797 286.42919922]
[76.05776978 271.44976807]
[76.84281158 256.47030640]
[77.62785339 241.49087524]
[75.13537598 237.38713074]
[75.21371460 231.66932678]
[78.71071625 226.00511169]
[80.01805878 211.06219482]
[81.32539368 196.11927795]
[77.17528534 197.49957275]
[72.96868896 198.71324158]
[68.71064758 199.75856018]
[54.09509659 196.38430786]
[39.47954559 193.01004028]
[26.21124840 201.59652710]
[10.77529621 198.20434570]
[2.32956362 184.84600830]
[5.88475513 169.44677734]
[19.33163834 161.14276123]
[34.69241714 164.86054993]
[42.85380936 178.39448547]
[57.46936035 181.76875305]
[72.08491516 185.14302063]
[85.20420837 177.87086487]
[90.08773041 163.68809509]
[94.97125244 149.50531006]
[99.85477448 135.32254028]
[104.73829651 121.13975525]
[87.17536163 115.63288879]
[81.22908020 99.55373383]
[89.65631866 86.09268188]
[86.79418182 71.36827087]
[83.93204498 56.64386749]
[81.06990814 41.91946030]
[78.20777893 27.19505119]
[75.21725464 12.49618053]
[72.09857941 -2.17603326]
[61.66114426 -14.06596375]
[66.58321381 -28.12378883]
[63.46454239 -42.79600143]
[60.34586716 -57.46821594]
[57.22719193 -72.14043427]
[54.10851288 -86.81264496]
[50.98983765 -101.48485565]
[47.87116241 -116.15707397]
[44.75248718 -130.82928467]
[30.86130333 -138.01043701]
[24.88373566 -152.46044922]
[29.64220619 -167.35646057]
[42.88991547 -175.66502380]
[58.37169647 -173.46308899]
[68.77752686 -161.79035950]
[69.19409180 -146.15832520]
[59.42470169 -133.94796753]
[62.54337692 -119.27574921]
[65.66205597 -104.60353088]
[68.78073120 -89.93132019]
[71.89940643 -75.25910950]
[75.01808167 -60.58689117]
[78.13675690 -45.91467667]
[81.25543213 -31.24246407]
[91.46980286 -20.40198898]
[86.77079773 -5.29470873]
[89.88947296 9.37750530]
[94.36823273 15.28303337]
[92.93218231 24.33291626]
[95.79431915 39.05732346]
[98.65645599 53.78173065]
[101.51858521 68.50614166]
[104.38072205 83.23054504]
[115.80175781 88.57695770]
[121.62072754 101.37297821]
[134.86494446 94.33090210]
[148.10914612 87.28882599]
[161.35336304 80.24675751]
[174.59757996 73.20468140]
[183.14996338 59.89426041]
[198.01992798 60.75080109]
[211.26412964 53.70872879]
[224.50834656 46.66665268]
[237.75256348 39.62458038]
[243.88191223 32.81328964]
[251.28994751 32.57746887]
[264.65502930 25.76761055]
[269.29986572 10.66127777]
[283.30493164 3.33780169]
[298.36129761 8.14206886]
[305.53631592 22.22379303]
[300.57312012 37.22853851]
[286.41632080 44.25425339]
[271.46490479 39.13270950]
[258.09979248 45.94256592]
[244.79463196 52.86879349]
[231.55043030 59.91086960]
[218.30621338 66.95294189]
[205.06199646 73.99501801]
[197.45692444 86.80173492]
[181.63964844 86.44889832]
[168.39543152 93.49096680]
[155.15122986 100.53304291]
[141.90701294 107.57511902]
[128.66279602 114.61718750]
[118.92107391 126.02327728]
[114.03755188 140.20605469]
[109.15402985 154.38883972]
[104.27050781 168.57160950]
[99.38698578 182.75439453]
[96.26831055 197.42660522]
[94.96097565 212.36952209]
[93.65364075 227.31245422]
[92.60729218 242.27590942]
[91.82225037 257.25534058]
[91.03721619 272.23480225]
[90.25217438 287.21423340]
[89.46713257 302.19369507]
[88.68209839 317.17312622]
[87.89705658 332.15255737]
[95.65325165 339.82843018]
[97.84390259 350.29394531]
[93.97943115 360.02722168]
[85.56735992 365.88815308]
[84.26002502 380.83105469]
[94.05788422 390.09759521]
[96.68259430 403.12686157]
[91.39395905 415.10778809]
[80.33224487 421.74761963]
[78.76431274 436.66543579]
[77.19638824 451.58325195]
[75.62846375 466.50109863]
[83.51185608 483.12808228]
[72.68314362 496.92257690]
[71.37580872 511.86547852]
[70.06847382 526.80841064]
[76.57356262 541.23040771]
[67.75645447 553.23492432]
[66.44911194 568.17779541]
[65.14177704 583.12072754]
[63.83444214 598.06365967]
[62.52710724 613.00659180]
[75.43583679 623.91571045]
[79.27074432 640.20538330]
[72.71575928 655.42254639]
[58.53096390 663.65954590]
[57.48461914 678.62304688]
[68.85828400 689.35491943]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 178]
[7 177]
[12 173]
[13 172]
[14 171]
[15 170]
[16 169]
[18 167]
[19 166]
[20 165]
[23 163]
[24 162]
[25 161]
[26 160]
[29 156]
[30 155]
[32 151]
[33 150]
[34 149]
[35 148]
[36 147]
[37 146]
[38 145]
[41 144]
[42 143]
[43 142]
[46 57]
[47 56]
[48 55]
[58 141]
[59 140]
[60 139]
[61 138]
[62 137]
[65 104]
[66 103]
[67 102]
[68 101]
[69 100]
[70 98]
[71 97]
[73 95]
[74 94]
[75 93]
[76 92]
[77 91]
[78 90]
[79 89]
[80 88]
[106 136]
[107 135]
[108 134]
[109 133]
[110 132]
[112 130]
[113 129]
[114 128]
[115 127]
[117 126]
[118 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
