%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:11:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGUCAUCCAGCUGGAGCCCUGAGUGGCUGAGCUCAGGCCUUCGCAGCAUUCUUGGGUGGGAGCAGCCACGGGUCAGCCACAAGGGCCACAGCCAUGAAUGGCACAGAAGGCCCUAACUUCUACGUGCCCUUCUCCAAUGCGACGGGUGUGGUACGCAGCCCCUUCGAGUACCCACAGUACUACCUGGCUGAGC\
) } def
/len { sequence length } bind def

/coor [
[70.29791260 266.20800781]
[55.79200363 260.36740112]
[48.47974014 246.54478455]
[51.81375885 231.26675415]
[64.21983337 221.74713135]
[64.70060730 206.75483704]
[65.18138123 191.76254272]
[57.85598373 178.79380798]
[66.03163147 165.24873352]
[66.51239777 150.25643921]
[66.99317169 135.26414490]
[57.26974869 123.84245300]
[42.39289856 121.92429352]
[27.51604843 120.00613403]
[12.63919830 118.08797455]
[0.20431215 127.46941376]
[-14.85560417 125.31220245]
[-23.72273827 113.39962769]
[-38.59959030 111.48146820]
[-53.47644043 109.56330872]
[-68.35328674 107.64514923]
[-83.23014069 105.72699738]
[-93.90764618 112.97707367]
[-106.26596069 111.06523132]
[-113.75643921 101.55691528]
[-128.60063171 99.40055847]
[-143.44482422 97.24420166]
[-158.28903198 95.08785248]
[-173.13322449 92.93149567]
[-187.97741699 90.77513885]
[-202.82160950 88.61878204]
[-217.66580200 86.46243286]
[-232.43492126 92.13549042]
[-243.91770935 82.64892578]
[-258.76190186 80.49256897]
[-271.34555054 89.67350006]
[-286.36895752 87.27518463]
[-295.04403687 75.22201538]
[-309.88821411 73.06565857]
[-324.73242188 70.90930939]
[-341.66726685 78.12601471]
[-355.01654053 66.74277496]
[-369.89337158 64.82461548]
[-384.77023315 62.90645981]
[-399.44653320 68.81551361]
[-411.07989502 59.51420593]
[-425.95672607 57.59605026]
[-442.77374268 65.08325958]
[-456.30374146 53.91544342]
[-471.20941162 52.23597717]
[-486.01571655 59.28623199]
[-499.36929321 49.76712036]
[-497.53317261 33.47108841]
[-482.39617920 27.16209602]
[-469.52996826 37.33029556]
[-454.62426758 39.00976181]
[-444.96694946 31.71241379]
[-432.52786255 32.99783325]
[-424.03857422 42.71920013]
[-409.16174316 44.63735580]
[-395.54953003 38.59110641]
[-382.85208130 48.02960968]
[-367.97521973 49.94776917]
[-353.09838867 51.86592484]
[-343.32531738 44.72430038]
[-330.90844727 46.20893097]
[-322.57604980 56.06510925]
[-307.73187256 58.22146606]
[-292.88766479 60.37781906]
[-281.14172363 51.29113007]
[-266.05685425 53.26651764]
[-256.60556030 65.64837646]
[-241.76135254 67.80473328]
[-228.05398560 61.97743225]
[-215.50944519 71.61823273]
[-200.66525269 73.77458954]
[-185.82106018 75.93094635]
[-170.97686768 78.08730316]
[-156.13267517 80.24365234]
[-141.28846741 82.40000916]
[-126.44428253 84.55636597]
[-111.60008240 86.71272278]
[-95.67980957 79.34209442]
[-81.31198120 90.85014343]
[-66.43513489 92.76830292]
[-51.55828094 94.68646240]
[-36.68143082 96.60461426]
[-21.80458069 98.52277374]
[-10.20576763 89.24898529]
[4.90879869 90.98234558]
[14.55735588 103.21112823]
[29.43420601 105.12928772]
[44.31105804 107.04743958]
[59.18790817 108.96559906]
[58.79650116 87.60253143]
[69.18079376 68.21779633]
[88.23309326 56.03332901]
[111.43229675 54.66219330]
[119.61531830 42.09086990]
[127.79833984 29.51955032]
[128.84228516 13.73282242]
[142.26998901 7.28721476]
[150.45301819 -5.28410721]
[158.63603210 -17.85542870]
[166.81906128 -30.42675018]
[175.00207520 -42.99807358]
[182.98255920 -55.69893646]
[190.75845337 -68.52607727]
[198.53434753 -81.35321808]
[206.31022644 -94.18035889]
[214.08612061 -107.00749969]
[208.88201904 -121.75373077]
[214.42251587 -136.37689209]
[228.09156799 -143.97238159]
[243.43504333 -140.95382690]
[253.20823669 -128.74650574]
[252.79653931 -113.11434174]
[242.39434814 -101.43836212]
[226.91325378 -99.23161316]
[219.13737488 -86.40447235]
[211.36148071 -73.57733154]
[203.58558655 -60.75018692]
[195.80970764 -47.92304611]
[196.06039429 -43.14242172]
[193.30206299 -38.15575027]
[187.57341003 -34.81504822]
[179.39038086 -22.24372673]
[171.20735168 -9.67240524]
[163.02433777 2.89891648]
[154.84130859 15.47023773]
[154.38267517 30.35778046]
[140.36965942 37.70257187]
[132.18664551 50.27389526]
[124.00361633 62.84521484]
[126.70633698 69.84130859]
[139.91462708 62.73208618]
[152.50285339 54.57510376]
[164.79957581 63.16525650]
[161.47204590 77.79151917]
[146.66911316 80.21635437]
[132.11177063 83.83349609]
[134.81448364 90.82958984]
[149.32391357 94.63440704]
[163.83332825 98.43922424]
[179.14477539 94.45545197]
[189.49319458 105.16803741]
[204.00260925 108.97285461]
[218.51203918 112.77767181]
[232.04450989 105.06339264]
[246.70492554 109.12871552]
[253.97590637 122.07739258]
[268.48532104 125.88220978]
[283.00579834 119.06052399]
[297.32824707 126.28875732]
[300.46569824 142.02203369]
[290.01138306 154.19113159]
[273.98495483 153.46095276]
[264.68051147 140.39163208]
[250.17109680 136.58682251]
[237.48159790 144.30123901]
[222.71278381 140.64930725]
[214.70721436 127.28709412]
[200.19779968 123.48227692]
[185.68836975 119.67745972]
[171.41474915 123.93338013]
[160.02851868 112.94864655]
[145.51908875 109.14382935]
[131.00967407 105.33901215]
[122.62620544 117.77756500]
[131.59785461 129.79876709]
[140.56951904 141.81997681]
[149.54118347 153.84117126]
[158.51283264 165.86238098]
[174.11865234 169.58233643]
[180.80964661 184.16348267]
[173.45307922 198.42042542]
[157.69226074 201.41644287]
[145.61755371 190.85325623]
[146.49163818 174.83404541]
[137.51997375 162.81283569]
[128.54830933 150.79162598]
[119.57666016 138.77043152]
[110.60499573 126.74922180]
[103.45011902 128.99813843]
[100.19078827 143.63975525]
[89.14035034 133.49598694]
[81.98546600 135.74491882]
[81.50469208 150.73721313]
[81.02391815 165.72949219]
[88.31492615 179.77056885]
[80.17367554 192.24331665]
[79.69290161 207.23561096]
[79.21212769 222.22790527]
[90.98278809 232.52282715]
[93.33109283 247.98307800]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 193]
[6 192]
[7 191]
[9 189]
[10 188]
[11 187]
[12 94]
[13 93]
[14 92]
[15 91]
[18 88]
[19 87]
[20 86]
[21 85]
[22 84]
[25 82]
[26 81]
[27 80]
[28 79]
[29 78]
[30 77]
[31 76]
[32 75]
[34 73]
[35 72]
[38 69]
[39 68]
[40 67]
[42 64]
[43 63]
[44 62]
[46 60]
[47 59]
[49 56]
[50 55]
[98 134]
[99 133]
[100 132]
[102 130]
[103 129]
[104 128]
[105 127]
[106 126]
[107 123]
[108 122]
[109 121]
[110 120]
[111 119]
[142 168]
[143 167]
[144 166]
[146 164]
[147 163]
[148 162]
[151 159]
[152 158]
[169 183]
[170 182]
[171 181]
[172 180]
[173 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
