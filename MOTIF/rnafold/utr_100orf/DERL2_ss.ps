%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:22:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGCCGGGGCCUGCUGGCGGAAGGGGAAAUGGGGUGGGUGGGGGGUGGGGCAGGCGACGGUGGGGAAGAUGGCGUACCAGAGCUUGCGGCUGGAGUACCUGCAGAUCCCACCGGUCAGCCGCGCCUACACCACUGCCUGCGUCCUCACCACCGCCGCCGUGCAGUUGG\
) } def
/len { sequence length } bind def

/coor [
[52.08972549 568.43914795]
[48.79053116 583.07183838]
[45.49133301 597.70452881]
[52.81263351 611.97961426]
[46.08559799 626.54418945]
[30.47063065 630.22552490]
[17.94619942 620.19964600]
[18.11997604 604.15753174]
[30.85865402 594.40533447]
[34.15784836 579.77264404]
[37.45704651 565.13995361]
[40.07693100 550.37054443]
[42.01192093 535.49584961]
[43.94690704 520.62115479]
[45.88189697 505.74652100]
[47.67936325 490.85461426]
[49.33915329 475.94671631]
[50.99894333 461.03881836]
[52.65873337 446.13095093]
[54.31852341 431.22305298]
[55.97831345 416.31515503]
[48.66185379 406.65124512]
[49.94854355 394.19506836]
[59.69033051 385.70257568]
[61.62531662 370.82791138]
[63.42278290 355.93600464]
[65.08257294 341.02810669]
[54.40964508 332.97146606]
[49.07777023 320.58993530]
[50.58204651 307.08428955]
[58.63500214 296.00405884]
[71.21402740 290.31448364]
[73.14900970 275.43981934]
[75.08399963 260.56515503]
[76.88146973 245.67323303]
[78.54125977 230.76535034]
[80.20104980 215.85746765]
[81.86083984 200.94956970]
[83.52062988 186.04168701]
[85.18041992 171.13380432]
[86.84020996 156.22592163]
[88.50000000 141.31802368]
[90.02197266 126.39543915]
[91.40599823 111.45942688]
[85.73715973 98.67835236]
[93.65798950 87.15654755]
[95.04201508 72.22053528]
[96.42604065 57.28451920]
[97.81006622 42.34850693]
[99.19409180 27.41249466]
[100.44004822 12.46433163]
[101.54783630 -2.49470544]
[99.05380249 -11.32380962]
[102.81682587 -17.71910667]
[104.20085144 -32.65511703]
[105.58487701 -47.59113312]
[106.83083344 -62.53929520]
[107.93862152 -77.49832916]
[109.04640961 -92.45736694]
[110.01593018 -107.42600250]
[110.84710693 -122.40296173]
[111.67827606 -137.37991333]
[112.50944519 -152.35687256]
[113.34062195 -167.33381653]
[114.17179108 -182.31077576]
[115.00296783 -197.28773499]
[101.71356201 -204.71424866]
[93.00195312 -217.12371826]
[90.55220032 -232.02401733]
[94.79734039 -246.45106506]
[104.84398651 -257.55847168]
[118.65972137 -263.17904663]
[119.49089050 -278.15600586]
[116.83412170 -286.93750000]
[120.47832489 -293.40124512]
[121.58611298 -308.36029053]
[122.69390106 -323.31933594]
[123.80168915 -338.27835083]
[112.12707520 -348.32870483]
[108.64964294 -363.15304565]
[114.49892426 -377.01846313]
[127.23862457 -384.68905640]
[128.34642029 -399.64810181]
[129.45420837 -414.60714722]
[130.56199646 -429.56619263]
[125.70191956 -445.80859375]
[139.96417236 -454.97506714]
[152.72061157 -443.80773926]
[145.52102661 -428.45840454]
[144.41323853 -413.49935913]
[143.30545044 -398.54031372]
[142.19766235 -383.58126831]
[153.66850281 -374.11776733]
[157.41157532 -359.54199219]
[151.78842163 -345.39160156]
[138.76072693 -337.17056274]
[137.65293884 -322.21154785]
[136.54515076 -307.25250244]
[135.43736267 -292.29345703]
[134.46784973 -277.32482910]
[133.63667297 -262.34786987]
[146.74563599 -255.23306274]
[155.50152588 -243.08218384]
[158.12419128 -228.27398682]
[154.04072571 -213.73626709]
[144.00947571 -202.36695862]
[129.97991943 -196.45655823]
[129.14874268 -181.47959900]
[128.31758118 -166.50265503]
[127.48640442 -151.52569580]
[126.65522766 -136.54873657]
[125.82405853 -121.57178497]
[124.99288940 -106.59483337]
[127.77282715 -99.71499634]
[124.00544739 -91.34957886]
[122.89765930 -76.39054108]
[121.78987122 -61.43150711]
[124.44220734 -54.50147629]
[120.52088928 -46.20710754]
[119.13686371 -31.27109337]
[117.75283813 -16.33508110]
[116.50687408 -1.38691759]
[115.39908600 13.57211971]
[118.05142212 20.50214958]
[114.13010406 28.79652023]
[112.74607849 43.73253250]
[111.36205292 58.66854477]
[109.97802734 73.60456085]
[108.59400177 88.54057312]
[114.26284027 101.32164764]
[106.34201050 112.84345245]
[104.95798492 127.77946472]
[107.28844452 136.65315247]
[103.40788269 142.97781372]
[101.74809265 157.88571167]
[100.08830261 172.79359436]
[98.42851257 187.70147705]
[96.76872253 202.60935974]
[95.10893250 217.51725769]
[93.44914246 232.42514038]
[91.78935242 247.33302307]
[93.95544434 256.24826050]
[89.95867157 262.50015259]
[88.02368164 277.37481689]
[86.08869171 292.24948120]
[98.52453613 303.68682861]
[101.67587280 320.11703491]
[94.49803925 335.04473877]
[79.99046326 342.68789673]
[78.33067322 357.59579468]
[80.49675751 366.51101685]
[76.49998474 372.76290894]
[74.56500244 387.63757324]
[82.03862762 404.44705200]
[70.88619995 417.97494507]
[69.22640991 432.88284302]
[67.56661987 447.79074097]
[65.90682983 462.69860840]
[64.24703979 477.60650635]
[62.58724976 492.51440430]
[64.75334167 501.42962646]
[60.75656891 507.68148804]
[58.82157898 522.55615234]
[56.88659286 537.43084717]
[54.95160294 552.30554199]
[68.35184479 545.56506348]
[82.05494690 551.66632080]
[86.01197815 566.13494873]
[77.32110596 578.36071777]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 11]
[2 10]
[3 9]
[12 165]
[13 164]
[14 163]
[15 162]
[16 160]
[17 159]
[18 158]
[19 157]
[20 156]
[21 155]
[24 153]
[25 152]
[26 150]
[27 149]
[32 145]
[33 144]
[34 143]
[35 141]
[36 140]
[37 139]
[38 138]
[39 137]
[40 136]
[41 135]
[42 134]
[43 132]
[44 131]
[46 129]
[47 128]
[48 127]
[49 126]
[50 125]
[51 123]
[52 122]
[54 121]
[55 120]
[56 119]
[57 117]
[58 116]
[59 115]
[60 113]
[61 112]
[62 111]
[63 110]
[64 109]
[65 108]
[66 107]
[72 101]
[73 100]
[75 99]
[76 98]
[77 97]
[78 96]
[82 92]
[83 91]
[84 90]
[85 89]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
