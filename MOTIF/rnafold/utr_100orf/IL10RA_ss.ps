%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:06:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCAGUCCCAGCCCAAGGGUAGCUGGAGGCGCGCAGGCCGGCUCCGCUCCGGCCCCGGACGAUGCGGCGCGCCCAGGAUGCUGCCGUGCCUCGUAGUGCUGCUGGCGGCGCUCCUCAGCCUCCGUCUUGGCUCAGACGCUCAUGGGACAGAGCUGCCCAGCCCUCCGUCUGUGUGGU\
) } def
/len { sequence length } bind def

/coor [
[350.36965942 594.10229492]
[339.85720825 583.40240479]
[333.56399536 569.78637695]
[332.22579956 554.84619141]
[335.99908447 540.32855225]
[344.44268799 527.93072510]
[356.56942749 519.10229492]
[370.96154785 514.87530518]
[385.93637085 515.74407959]
[399.74230957 521.60638428]
[390.84008789 509.53369141]
[381.93783569 497.46099854]
[373.03561401 485.38827515]
[366.51556396 481.86019897]
[364.08505249 473.02304077]
[355.39727783 460.79507446]
[346.70947266 448.56713867]
[337.80725098 436.49444580]
[328.69335938 424.58071899]
[313.94113159 422.87554932]
[304.52862549 410.92318726]
[306.41717529 395.46127319]
[297.30325317 383.54754639]
[288.18936157 371.63381958]
[279.07543945 359.72012329]
[272.49414062 356.30764771]
[269.90802002 347.51473999]
[261.00579834 335.44204712]
[252.10356140 323.36932373]
[238.32281494 317.71777344]
[236.36000061 302.01879883]
[227.45777893 289.94607544]
[218.55554199 277.87338257]
[209.65332031 265.80065918]
[197.72584534 263.67477417]
[190.21325684 253.66340637]
[191.59040833 240.81913757]
[182.90263367 228.59120178]
[174.21485901 216.36325073]
[165.52706909 204.13531494]
[156.83929443 191.90737915]
[148.15151978 179.67944336]
[133.46865845 177.45471191]
[124.48383331 165.17759705]
[126.91688538 149.79196167]
[118.22910309 137.56402588]
[109.54132843 125.33608246]
[100.85354614 113.10813904]
[88.78083801 104.20590973]
[74.53144073 99.52032471]
[60.28204346 94.83474731]
[44.34869385 98.71550751]
[33.21837616 86.67191315]
[38.34101486 71.09338379]
[54.44687271 68.00576782]
[64.96762848 80.58535004]
[79.21702576 85.27092743]
[93.46642303 89.95651245]
[103.39801025 78.71535492]
[96.99216461 65.15198517]
[90.58631897 51.58860779]
[84.18046570 38.02523422]
[79.83758545 35.02193832]
[77.34963989 31.04389763]
[76.77605438 26.96915817]
[77.81589508 23.57024574]
[72.13684082 9.68686008]
[66.45779419 -4.19652605]
[60.77874756 -18.07991219]
[55.09969711 -31.96329880]
[49.42065048 -45.84668350]
[37.83393097 -51.55804062]
[33.39822006 -63.26235962]
[37.98641968 -74.47540283]
[32.55327606 -88.45685577]
[27.12013245 -102.43830872]
[14.00138855 -112.27856445]
[16.23229599 -128.52525330]
[31.51788712 -134.46517944]
[44.13365555 -123.98785400]
[41.10158157 -107.87145233]
[46.53472519 -93.88999939]
[51.96786880 -79.90854645]
[66.22140503 -69.69320679]
[63.30403519 -51.52573395]
[68.98308563 -37.64234543]
[74.66213226 -23.75896072]
[80.34117889 -9.87557411]
[86.02023315 4.00781155]
[91.69927979 17.89119720]
[97.74384308 31.61938858]
[104.14968872 45.18276215]
[110.55553436 58.74613571]
[116.96138000 72.30950928]
[113.08148956 104.42036438]
[121.76926422 116.64830017]
[130.45704651 128.87623596]
[139.14482117 141.10418701]
[154.47416687 143.86988831]
[163.11061096 156.39453125]
[160.37945557 170.99165344]
[169.06723022 183.21960449]
[177.75502014 195.44754028]
[186.44279480 207.67547607]
[195.13056946 219.90341187]
[203.81835938 232.13136292]
[220.72599792 239.39082336]
[221.72602844 256.89843750]
[230.62825012 268.97113037]
[239.53048706 281.04385376]
[248.43270874 293.11654663]
[262.85021973 299.63165283]
[264.17626953 314.46710205]
[273.07852173 326.53982544]
[281.98074341 338.61251831]
[290.98916626 350.60620117]
[300.10305786 362.51992798]
[309.21697998 374.43362427]
[318.33087158 386.34735107]
[333.74829102 388.57034302]
[342.82135010 400.78237915]
[340.60705566 415.46682739]
[349.72097778 427.38052368]
[355.71255493 430.28906250]
[358.84405518 435.07696533]
[358.93743896 439.87936401]
[367.62521362 452.10729980]
[376.31298828 464.33523560]
[385.10833740 476.48605347]
[394.01055908 488.55874634]
[402.91278076 500.63146973]
[411.81503296 512.70416260]
[422.32760620 523.40393066]
[434.24133301 532.51788330]
[446.15505981 541.63177490]
[458.06875610 550.74566650]
[469.98248291 559.85961914]
[481.89620972 568.97351074]
[497.93170166 561.84649658]
[515.28179932 563.79437256]
[529.19543457 574.19335938]
[535.90808105 590.11779785]
[533.66058350 607.16284180]
[545.88848877 615.85064697]
[558.11645508 624.53839111]
[570.34436035 633.22619629]
[579.18151855 635.65667725]
[582.70959473 642.17675781]
[594.78234863 651.07897949]
[611.13061523 652.36956787]
[617.94189453 667.28729248]
[608.20928955 680.48608398]
[591.94488525 678.38818359]
[585.88012695 663.15167236]
[573.80737305 654.24945068]
[561.65661621 645.45410156]
[549.42864990 636.76635742]
[537.20074463 628.07855225]
[524.97277832 619.39080811]
[514.08868408 625.87036133]
[501.51455688 627.74877930]
[489.12103271 624.71081543]
[478.76541138 617.17517090]
[472.01336670 606.23736572]
[469.90234375 593.51043701]
[472.78228760 580.88720703]
[460.86856079 571.77331543]
[448.95486450 562.65942383]
[437.04113770 553.54547119]
[425.12741089 544.43157959]
[413.21371460 535.31768799]
[418.83169556 549.22589111]
[419.43566895 564.21374512]
[414.95504761 578.52886963]
[405.91369629 590.49774170]
[393.36862183 598.72094727]
[378.78656006 602.23712158]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 132]
[11 131]
[12 130]
[13 129]
[15 128]
[16 127]
[17 126]
[18 123]
[19 122]
[22 119]
[23 118]
[24 117]
[25 116]
[27 115]
[28 114]
[29 113]
[31 111]
[32 110]
[33 109]
[34 108]
[37 106]
[38 105]
[39 104]
[40 103]
[41 102]
[42 101]
[45 98]
[46 97]
[47 96]
[48 95]
[49 58]
[50 57]
[51 56]
[59 94]
[60 93]
[61 92]
[62 91]
[66 90]
[67 89]
[68 88]
[69 87]
[70 86]
[71 85]
[74 83]
[75 82]
[76 81]
[133 171]
[134 170]
[135 169]
[136 168]
[137 167]
[138 166]
[143 159]
[144 158]
[145 157]
[146 156]
[148 155]
[149 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
