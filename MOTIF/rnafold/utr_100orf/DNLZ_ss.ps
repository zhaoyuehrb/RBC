%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:43:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGACGGAAGCCCAAGAACGCCGCUUCCGCCCGGCGCCCACUUCCAAGAUGGCGGCGGGGCGGGGCCGGGGCAGGGCGGACGGAGCCGGCGAGCGGGAUGCUGCGGACUGCGCUGCGCGGCGCGCCGAGGUUGCUGAGUCGCGUGCAGCCCCGGGCGCCCUGCCUGAGGCGGCUGUGGGGCCGCGGGGCCCGUCCAG\
) } def
/len { sequence length } bind def

/coor [
[81.33767700 266.83972168]
[81.25401306 251.03564453]
[92.42924500 239.86024475]
[92.19125366 224.86213684]
[91.95326996 209.86401367]
[91.71527863 194.86590576]
[91.47728729 179.86779785]
[88.72349548 175.95391846]
[88.40634155 170.26626587]
[91.47728729 164.39181519]
[91.71527863 149.39370728]
[91.95326996 134.39559937]
[92.19125366 119.39748383]
[86.56227875 114.44121552]
[85.83174133 129.42341614]
[73.66281128 138.19364929]
[59.21870804 134.14791870]
[53.37588120 120.33265686]
[60.53398895 107.15079498]
[75.30432129 104.52867889]
[69.67533875 99.57241058]
[54.82801819 101.70713043]
[39.98069382 103.84185791]
[27.42212105 113.46437073]
[13.72326183 107.61710358]
[-1.12405956 109.75183105]
[-15.97138119 111.88655090]
[-30.81870270 114.02127075]
[-45.66602325 116.15599823]
[-60.51334763 118.29071808]
[-75.36066437 120.42543793]
[-90.20799255 122.56016541]
[-102.76656342 132.18267822]
[-116.46542358 126.33541107]
[-131.31274414 128.47013855]
[-140.78208923 140.83821106]
[-155.86979675 142.79161072]
[-167.60250854 133.68782043]
[-182.44982910 135.82254028]
[-197.29714966 137.95726013]
[-212.12707520 140.20970154]
[-226.93865967 142.57972717]
[-239.31867981 153.33457947]
[-254.73239136 147.73550415]
[-257.32348633 131.54235840]
[-244.42645264 121.41324615]
[-229.30867004 127.76814270]
[-214.49708557 125.39811707]
[-208.38246155 121.23253632]
[-199.43186951 123.10993958]
[-184.58454895 120.97521973]
[-169.73722839 118.84049225]
[-161.04461670 106.79998016]
[-146.01773071 104.42356110]
[-133.44746399 113.62281036]
[-118.60014343 111.48809052]
[-107.10355377 102.01826477]
[-92.34271240 107.71284485]
[-77.49539185 105.57811737]
[-62.64806747 103.44339752]
[-47.80074692 101.30867767]
[-32.95342636 99.17395020]
[-18.10610390 97.03923035]
[-3.25878215 94.90450287]
[11.58853912 92.76978302]
[23.08513260 83.29995728]
[37.84597397 88.99453735]
[52.69329453 86.85980988]
[67.54061890 84.72509003]
[80.15941620 76.61547852]
[88.26902771 63.99667358]
[96.37864685 51.37787247]
[104.48825836 38.75906754]
[112.59786987 26.14026451]
[120.70748138 13.52146244]
[128.81709290 0.90265930]
[136.92671204 -11.71614361]
[145.03631592 -24.33494759]
[141.89025879 -39.59076691]
[150.29431152 -52.27250290]
[164.85780334 -55.17777252]
[172.96740723 -67.79657745]
[181.07702637 -80.41538239]
[166.88497925 -86.67242432]
[161.02218628 -100.22311401]
[165.68690491 -113.44349670]
[177.43836975 -119.61621094]
[181.20559692 -134.13543701]
[184.97282410 -148.65467834]
[188.74003601 -163.17390442]
[192.50726318 -177.69313049]
[188.48382568 -192.99420166]
[199.16957092 -203.37033081]
[202.93678284 -217.88957214]
[195.02401733 -226.77931213]
[192.41661072 -238.26846313]
[195.65043640 -249.47247314]
[203.80950928 -257.63543701]
[214.78155518 -260.80798340]
[219.00753784 -275.20037842]
[223.23353577 -289.59277344]
[219.69760132 -305.01379395]
[230.70716858 -315.04565430]
[234.93316650 -329.43804932]
[239.15914917 -343.83044434]
[232.76345825 -358.54351807]
[240.40596008 -372.64926147]
[256.22396851 -375.32693481]
[268.08328247 -364.52246094]
[266.88644409 -348.52413940]
[253.55154419 -339.60446167]
[249.32556152 -325.21206665]
[245.09956360 -310.81967163]
[248.93777466 -296.42810059]
[237.62593079 -285.36679077]
[233.39993286 -270.97439575]
[229.17395020 -256.58200073]
[238.90039062 -241.08264160]
[234.13771057 -223.08454895]
[217.45602417 -214.12234497]
[213.68879700 -199.60311890]
[217.98168945 -185.34056091]
[207.02648926 -173.92591858]
[203.25926208 -159.40667725]
[199.49205017 -144.88745117]
[195.72482300 -130.36822510]
[191.95761108 -115.84899139]
[199.61279297 -107.81972504]
[201.47795105 -95.68732452]
[215.87034607 -99.91331482]
[230.26274109 -104.13930511]
[244.65513611 -108.36529541]
[259.04754639 -112.59127808]
[273.43994141 -116.81726837]
[276.98291016 -131.76193237]
[287.53518677 -142.92189026]
[302.25830078 -147.29515076]
[317.19180298 -143.70535278]
[328.31860352 -133.11813354]
[332.64572144 -118.38137817]
[329.00912476 -103.45922089]
[318.38708496 -92.36563873]
[303.63684082 -88.08475494]
[288.72613525 -91.76809692]
[277.66592407 -102.42487335]
[263.27352905 -98.19888306]
[248.88113403 -93.97290039]
[234.48873901 -89.74691010]
[220.09634399 -85.52091980]
[205.70394897 -81.29492950]
[193.69583130 -72.30577087]
[185.58621216 -59.68696594]
[177.47660828 -47.06816101]
[180.88375854 -32.61386108]
[172.83921814 -19.70107460]
[157.65512085 -16.22533417]
[149.54550171 -3.60653138]
[141.43589783 9.01227188]
[133.32627869 21.63107491]
[125.21666718 34.24987793]
[117.10705566 46.86867905]
[108.99744415 59.48748398]
[100.88783264 72.10628510]
[92.77822113 84.72509003]
[99.13701630 77.06277466]
[110.39412689 72.91511536]
[124.42392731 74.83549500]
[137.93824768 84.12532806]
[147.18159485 100.36514282]
[156.63987732 112.00733948]
[166.09817505 123.64953613]
[175.55645752 135.29173279]
[185.01475525 146.93392944]
[194.47303772 158.57612610]
[209.97703552 163.92012024]
[212.83494568 180.06831360]
[200.10681152 190.40884399]
[184.88623047 184.30424500]
[182.83084106 168.03442383]
[173.37255859 156.39221191]
[163.91426086 144.75001526]
[154.45597839 133.10781860]
[144.99768066 121.46562958]
[135.53939819 109.82343292]
[128.45188904 112.27644348]
[107.18936920 119.63546753]
[106.95137787 134.63357544]
[106.71339417 149.63169861]
[106.47540283 164.62980652]
[106.47540283 179.62980652]
[106.71339417 194.62791443]
[106.95137787 209.62603760]
[107.18936920 224.62414551]
[107.42736053 239.62225342]
[118.95153809 250.43746948]
[119.36934662 266.23623657]
[108.43290710 277.64541626]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 194]
[4 193]
[5 192]
[6 191]
[7 190]
[10 189]
[11 188]
[12 187]
[13 186]
[21 69]
[22 68]
[23 67]
[25 65]
[26 64]
[27 63]
[28 62]
[29 61]
[30 60]
[31 59]
[32 58]
[34 56]
[35 55]
[38 52]
[39 51]
[40 50]
[41 48]
[42 47]
[70 164]
[71 163]
[72 162]
[73 161]
[74 160]
[75 159]
[76 158]
[77 157]
[78 156]
[81 153]
[82 152]
[83 151]
[87 127]
[88 126]
[89 125]
[90 124]
[91 123]
[93 121]
[94 120]
[99 117]
[100 116]
[101 115]
[103 113]
[104 112]
[105 111]
[129 150]
[130 149]
[131 148]
[132 147]
[133 146]
[134 145]
[169 184]
[170 183]
[171 182]
[172 181]
[173 180]
[174 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
