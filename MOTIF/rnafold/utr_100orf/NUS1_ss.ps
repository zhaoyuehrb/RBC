%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:09:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUGUCCAUGUACUACUGGGGGCGGGGCUGCCAAGGGAGGAGGAAGAUGGCGGCGGGGGCGAGGUGAGGUGUUGGCAGUGGAAAGGGGUUCGGGCUCGGGGGGCGGGGGGACGCGGAGCGAUGGCCCGCGCCGGCCGCAGGGGCGGAUAAAAAGCCGUCGCGCUGCGGGAGUGGGCGGGAGGGAGAGGGGGUGUCUGAGGGCCACAAGAGUAUGACGGGGCUGUACGAGCUGGUGUGGCGGGUGCUGCACGCGCU\
GCUCUGUCUGCACCGCACGCUCACCUCCUGGCUCCGCGUUCGGUUCGGCACCUGGA\
) } def
/len { sequence length } bind def

/coor [
[-211.26737976 411.62103271]
[-222.08541870 422.01187134]
[-232.90345764 432.40274048]
[-243.72149658 442.79360962]
[-247.71412659 450.94934082]
[-254.70115662 453.23394775]
[-265.62326050 463.51538086]
[-276.54537964 473.79678345]
[-277.70419312 486.60818481]
[-286.96859741 494.94558716]
[-299.03076172 494.76324463]
[-310.05584717 504.93414307]
[-321.08090210 515.10504150]
[-332.10598755 525.27600098]
[-343.02810669 535.55737305]
[-353.84616089 545.94824219]
[-364.66418457 556.33911133]
[-362.59039307 567.98156738]
[-366.33221436 579.07354736]
[-374.85879517 586.91876221]
[-385.99127197 589.66857910]
[-396.95895386 586.75701904]
[-407.98403931 596.92791748]
[-405.79199219 613.72491455]
[-413.97955322 628.36370850]
[-429.13513184 635.15185547]
[-445.18359375 631.58612061]
[-456.10568237 641.86755371]
[-467.02780151 652.14898682]
[-477.94992065 662.43035889]
[-488.87203979 672.71179199]
[-499.79415894 682.99322510]
[-510.71627808 693.27459717]
[-505.29324341 707.47528076]
[-505.72238159 722.67016602]
[-511.93823242 736.54211426]
[-522.99291992 746.97583008]
[-537.20074463 752.38018799]
[-552.39501953 751.93103027]
[-566.25878906 745.69696045]
[-576.67797852 734.62854004]
[-582.06359863 720.41363525]
[-581.59448242 705.21997070]
[-575.34216309 691.36437988]
[-564.26007080 680.95977783]
[-550.03808594 675.59283447]
[-534.84503174 676.08197021]
[-520.99768066 682.35247803]
[-510.07556152 672.07110596]
[-499.15344238 661.78967285]
[-488.23132324 651.50823975]
[-477.30923462 641.22686768]
[-466.38711548 630.94543457]
[-455.46499634 620.66406250]
[-458.37536621 607.66424561]
[-454.46347046 594.81689453]
[-444.64532471 585.49627686]
[-431.40240479 582.20495605]
[-418.15493774 585.90283203]
[-407.12985229 575.73193359]
[-407.45993042 557.39105225]
[-394.01046753 544.44952393]
[-375.05505371 545.52111816]
[-364.23703003 535.13024902]
[-353.41897583 524.73937988]
[-352.42608643 520.11657715]
[-348.55072021 516.05047607]
[-342.27691650 514.25091553]
[-331.25183105 504.07998657]
[-320.22674561 493.90905762]
[-309.20166016 483.73815918]
[-304.86163330 466.71130371]
[-286.82681274 462.87466431]
[-275.90469360 452.59326172]
[-264.98257446 442.31185913]
[-254.11235046 431.97558594]
[-243.29432678 421.58471680]
[-232.47628784 411.19384766]
[-221.65824890 400.80297852]
[-225.97123718 388.98913574]
[-225.51213074 376.37435913]
[-220.31353760 364.82031250]
[-211.11009216 356.04528809]
[-199.23483276 351.36883545]
[-186.42617798 351.51321411]
[-174.57345581 356.49230957]
[-163.54837036 346.32138062]
[-152.52328491 336.15045166]
[-141.49819946 325.97955322]
[-130.52445984 315.75326538]
[-119.60234833 305.47183228]
[-108.68023682 295.19042969]
[-97.75812531 284.90902710]
[-86.83600616 274.62762451]
[-75.91389465 264.34619141]
[-64.99178314 254.06478882]
[-54.22619247 243.61959839]
[-43.61959076 233.01298523]
[-40.09114838 218.54235840]
[-24.86185646 214.25524902]
[-14.25525475 203.64865112]
[-3.64865279 193.04205322]
[6.95794916 182.43545532]
[17.56455040 171.82884216]
[21.09299278 157.35821533]
[36.32228470 153.07110596]
[46.92888641 142.46450806]
[57.53548813 131.85791016]
[68.14208984 121.25130463]
[78.74869537 110.64470673]
[76.83917236 94.66108704]
[85.55310822 81.12633514]
[80.66007233 66.94683838]
[75.76702881 52.76734161]
[70.87398529 38.58784485]
[65.98094177 24.40834808]
[54.16521835 13.88697624]
[57.32761765 -0.66804057]
[52.43457413 -14.84753799]
[47.54153442 -29.02703476]
[42.64849091 -43.20653152]
[37.75545120 -57.38602829]
[32.86240768 -71.56552887]
[27.96936607 -85.74502563]
[23.07632446 -99.92452240]
[17.68670654 -113.92280579]
[11.80720806 -127.72249603]
[5.92770863 -141.52218628]
[0.04820970 -155.32188416]
[-12.47915459 -164.98500061]
[-10.34966278 -179.72659302]
[-16.22916222 -193.52627563]
[-31.24124718 -197.90478516]
[-39.88368607 -210.93713379]
[-38.07578659 -226.46986389]
[-26.67117882 -237.16886902]
[-11.05477333 -237.98243713]
[1.39984202 -228.52639771]
[4.81197882 -213.26562500]
[-2.42947030 -199.40577698]
[3.45002890 -185.60607910]
[15.55685139 -176.93002319]
[13.84790134 -161.20138550]
[19.72739983 -147.40168762]
[25.60689926 -133.60200500]
[31.48639870 -119.80230713]
[36.63654327 -133.89045715]
[49.59480667 -141.44581604]
[64.39208984 -138.98806763]
[74.21215820 -127.64936829]
[74.53150177 -112.65277100]
[65.20301056 -100.90631104]
[50.52376556 -97.82089233]
[37.25582123 -104.81756592]
[42.14886475 -90.63806915]
[47.04190445 -76.45856476]
[51.93494797 -62.27907181]
[56.82798767 -48.09957504]
[61.72103119 -33.92007828]
[66.61407471 -19.74057961]
[71.50711060 -5.56108236]
[82.97285461 3.94607639]
[80.16043854 19.51530647]
[85.05348206 33.69480133]
[89.94652557 47.87430191]
[94.83956909 62.05379868]
[99.73260498 76.23329163]
[111.57186890 79.23898315]
[120.35489655 87.72783661]
[134.98835754 84.43210602]
[149.62181091 81.13638306]
[164.25527954 77.84065247]
[178.88873291 74.54492188]
[190.65168762 63.96458435]
[204.76795959 68.71643829]
[219.40142822 65.42070770]
[234.03488159 62.12498474]
[248.66835022 58.82925415]
[254.88403320 44.73416901]
[268.05358887 37.09110260]
[283.02136230 38.64985657]
[294.06893921 48.60419464]
[308.70239258 45.30846405]
[323.33584595 42.01273727]
[335.09881592 31.43239594]
[349.21508789 36.18425369]
[363.84854126 32.88852310]
[378.48199463 29.59279633]
[393.11544800 26.29706764]
[407.73214722 22.92770767]
[422.33166504 19.48480225]
[436.93121338 16.04189491]
[451.53073120 12.59898949]
[466.13027954 9.15608311]
[477.78610229 -1.54216242]
[491.94949341 3.06731582]
[506.54904175 -0.37559032]
[518.20483398 -11.07383537]
[532.36828613 -6.46435738]
[546.96777344 -9.90726376]
[561.47601318 -13.71655464]
[575.88378906 -17.88981628]
[590.29156494 -22.06307793]
[604.69934082 -26.23633957]
[619.10711670 -30.40960312]
[633.51489258 -34.58286285]
[641.17742920 -48.14471054]
[655.84838867 -52.17174530]
[668.73034668 -44.78313446]
[683.13806152 -48.95639801]
[697.54583740 -53.12965775]
[708.64849854 -64.40092468]
[723.02593994 -60.51005554]
[737.43371582 -64.68331909]
[751.82031250 -68.92906189]
[766.18530273 -73.24718475]
[780.55035400 -77.56530762]
[791.39068604 -89.87057495]
[807.41192627 -86.37039185]
[812.13281250 -70.66545105]
[800.69689941 -58.91165161]
[784.86846924 -63.20029068]
[770.50341797 -58.88216782]
[756.13842773 -54.56404495]
[750.66638184 -49.65540314]
[741.60699463 -50.27554703]
[727.19921875 -46.10228348]
[717.12707520 -35.12951660]
[701.71911621 -38.72188568]
[687.31134033 -34.54862595]
[672.90356445 -30.37536240]
[665.96484375 -17.24563217]
[651.41278076 -12.80810642]
[637.68817139 -20.17509270]
[623.28039551 -16.00183105]
[608.87261963 -11.82856846]
[594.46484375 -7.65530682]
[580.05706787 -3.48204470]
[565.64929199 0.69121724]
[577.51666260 9.86543941]
[577.84661865 24.86180878]
[566.39434814 34.54919815]
[551.66033936 31.73709488]
[544.58093262 18.51279831]
[550.41070557 4.69227076]
[535.81115723 8.13517666]
[525.19958496 18.58716202]
[509.99194336 14.22394371]
[495.39239502 17.66684914]
[484.78085327 28.11883545]
[469.57318115 23.75561714]
[454.97366333 27.19852257]
[440.37411499 30.64142990]
[425.77459717 34.08433533]
[411.17504883 37.52724075]
[405.41659546 42.09653473]
[396.41119385 40.93053055]
[381.77774048 44.22625732]
[367.14425659 47.52198410]
[352.51080322 50.81771469]
[341.79452515 61.16232300]
[326.63159180 56.64619827]
[311.99813843 59.94192505]
[297.36465454 63.23765564]
[291.65106201 76.96692657]
[278.79666138 84.79175568]
[263.62210083 83.53231049]
[251.96406555 73.46271515]
[237.33061218 76.75844574]
[222.69714355 80.05416870]
[208.06369019 83.34989929]
[197.34742737 93.69451141]
[182.18446350 89.17838287]
[167.55101013 92.47411346]
[152.91754150 95.76984406]
[138.28408813 99.06556702]
[123.65062714 102.36129761]
[117.47611237 116.10942078]
[104.27513885 123.38056946]
[89.35529327 121.25130463]
[78.74869537 131.85791016]
[68.14208984 142.46450806]
[57.53548813 153.07110596]
[46.92888641 163.67771912]
[42.64178848 178.90701294]
[28.17115211 182.43545532]
[17.56455040 193.04205322]
[6.95794916 203.64865112]
[-3.64865279 214.25524902]
[-14.25525475 224.86186218]
[-18.54235268 240.09115601]
[-33.01298904 243.61959839]
[-43.61959076 254.22619629]
[-44.94700623 259.16665649]
[-47.73550034 262.77099609]
[-51.24490738 264.70922852]
[-54.71036911 264.98690796]
[-65.63248444 275.26831055]
[-76.55459595 285.54971313]
[-87.47670746 295.83114624]
[-98.39882660 306.11254883]
[-109.32093811 316.39395142]
[-120.24305725 326.67538452]
[-124.31760406 334.79049683]
[-131.32728577 337.00463867]
[-142.35237122 347.17553711]
[-153.37745667 357.34646606]
[-164.40254211 367.51739502]
[-160.14878845 384.61425781]
[-165.14575195 401.41558838]
[-177.92037964 413.28720093]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 79]
[2 78]
[3 77]
[4 76]
[6 75]
[7 74]
[8 73]
[11 71]
[12 70]
[13 69]
[14 68]
[15 65]
[16 64]
[17 63]
[22 60]
[23 59]
[27 54]
[28 53]
[29 52]
[30 51]
[31 50]
[32 49]
[33 48]
[86 308]
[87 307]
[88 306]
[89 305]
[90 303]
[91 302]
[92 301]
[93 300]
[94 299]
[95 298]
[96 297]
[97 293]
[98 292]
[100 290]
[101 289]
[102 288]
[103 287]
[104 286]
[106 284]
[107 283]
[108 282]
[109 281]
[110 280]
[112 167]
[113 166]
[114 165]
[115 164]
[116 163]
[118 161]
[119 160]
[120 159]
[121 158]
[122 157]
[123 156]
[124 155]
[125 154]
[126 146]
[127 145]
[128 144]
[129 143]
[131 141]
[132 140]
[169 277]
[170 276]
[171 275]
[172 274]
[173 273]
[175 271]
[176 270]
[177 269]
[178 268]
[182 264]
[183 263]
[184 262]
[186 260]
[187 259]
[188 258]
[189 257]
[190 255]
[191 254]
[192 253]
[193 252]
[194 251]
[196 249]
[197 248]
[199 246]
[200 245]
[201 239]
[202 238]
[203 237]
[204 236]
[205 235]
[206 234]
[209 231]
[210 230]
[211 229]
[213 227]
[214 226]
[215 224]
[216 223]
[217 222]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
