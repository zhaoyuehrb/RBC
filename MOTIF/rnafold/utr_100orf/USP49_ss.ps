%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:35:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAUAGAGAAGAGGAAACCUAACCAAUGACUGUGGAAUAAUAUGGAAGAAGAUGGAAAAAACUUGUUUAAUGGGUUGAGAAAGUGGCGACUUCUAUAAGACAUGGAUAGAUGCAAACAUGUAGGGCGGUUACGGCUCGCCCAGGACCACUCCAUCCUGAACCCUCAGAAGUGGUGCUGCUUAGAGUGUGCCACCACCGAGU\
) } def
/len { sequence length } bind def

/coor [
[-109.66667175 254.14620972]
[-116.26959229 258.36904907]
[-123.33905029 261.74853516]
[-130.76788330 264.23403931]
[-138.44360352 265.78842163]
[-146.24998474 266.38870239]
[-154.06893921 266.02630615]
[-161.78221130 264.70721436]
[-169.27322388 262.45190430]
[-176.42884827 259.29495239]
[-183.14105225 255.28462219]
[-189.30857849 250.48194885]
[-194.83845520 244.96002197]
[-199.64739990 238.80270386]
[-203.66310120 232.10343933]
[-206.82524109 224.96382141]
[-209.08648682 217.49205017]
[-223.98554993 219.22917175]
[-238.88462830 220.96629333]
[-253.78370667 222.70341492]
[-268.68276978 224.44053650]
[-283.58184814 226.17767334]
[-292.29251099 246.93334961]
[-319.46240234 253.63372803]
[-331.47369385 262.61865234]
[-343.48498535 271.60360718]
[-344.17770386 287.22583008]
[-354.78820801 298.71286011]
[-370.30648804 300.64083862]
[-383.40527344 292.09948730]
[-387.89978027 277.12170410]
[-381.66778564 262.77960205]
[-367.65188599 255.84503174]
[-352.46990967 259.59231567]
[-340.45864868 250.60737610]
[-328.44735718 241.62243652]
[-330.05963135 234.29779053]
[-344.70895386 237.52233887]
[-359.35824585 240.74690247]
[-372.29421997 248.34036255]
[-383.51333618 238.38388062]
[-377.51089478 224.63722229]
[-362.58279419 226.09759521]
[-347.93350220 222.87303162]
[-333.28417969 219.64848328]
[-334.89645386 212.32382202]
[-349.57028198 209.21272278]
[-364.24411011 206.10160828]
[-379.34896851 210.80841064]
[-390.19470215 200.59963989]
[-404.86853027 197.48852539]
[-419.54235840 194.37742615]
[-429.75378418 205.85011292]
[-444.33850098 210.66479492]
[-459.37332153 207.52636719]
[-470.81393433 197.27903748]
[-475.58288574 182.67929077]
[-472.39733887 167.65437317]
[-462.11419678 156.24592590]
[-447.49957275 151.52276611]
[-432.48474121 154.75538635]
[-421.10858154 165.07423401]
[-416.43124390 179.70359802]
[-401.75741577 182.81471252]
[-387.08358765 185.92581177]
[-373.02832031 180.99649048]
[-361.13299561 191.42779541]
[-346.45919800 194.53889465]
[-331.78536987 197.65000916]
[-311.21029663 190.68257141]
[-293.43969727 197.26310730]
[-285.31896973 211.27859497]
[-270.41989136 209.54147339]
[-255.52082825 207.80435181]
[-240.62174988 206.06721497]
[-225.72268677 204.33009338]
[-210.82360840 202.59297180]
[-206.46156311 179.44798279]
[-193.95135498 159.46511841]
[-174.99958801 145.40257263]
[-152.20343018 139.20869446]
[-128.69456482 141.75207520]
[-107.70908356 152.69976807]
[-92.14194489 170.56074524]
[-78.38578796 164.58010864]
[-64.62962341 158.59945679]
[-50.87346649 152.61882019]
[-37.11730957 146.63816833]
[-23.36115074 140.65753174]
[-9.65168190 134.57061768]
[4.01027679 128.37780762]
[17.67223549 122.18499756]
[31.33419609 115.99219513]
[32.91143417 112.83192444]
[36.10109711 110.28081512]
[40.59914017 109.08988953]
[45.77695465 109.84548187]
[59.71160507 104.29340363]
[73.64625549 98.74133301]
[87.58090973 93.18926239]
[97.81182861 82.21983337]
[102.38079834 67.93261719]
[106.94976807 53.64540482]
[111.51874542 39.35819244]
[116.08771515 25.07097816]
[104.97139740 14.61200333]
[99.50193024 0.36252192]
[100.76528931 -14.84822083]
[108.51062775 -28.00012016]
[121.20010376 -36.48185730]
[136.31422424 -38.60937881]
[150.85205078 -33.96025848]
[161.92709351 -23.45759010]
[167.34040833 -9.18668079]
[166.01715088 6.01896811]
[158.22009277 19.14026451]
[145.49729919 27.57196617]
[130.37492371 29.63994980]
[125.80595398 43.92716599]
[121.23698425 58.21437836]
[116.66801453 72.50159454]
[112.09903717 86.78881073]
[118.10468292 91.28128052]
[136.12159729 104.75868988]
[148.53694153 96.34088135]
[160.95227051 87.92308044]
[173.36759949 79.50527191]
[185.78294373 71.08746338]
[198.13276672 62.57384491]
[210.41635132 53.96491623]
[216.84628296 38.87889481]
[233.15647888 37.17324829]
[242.56842041 50.60260010]
[235.39990234 65.35198212]
[219.02526855 66.24849701]
[206.74169922 74.85742188]
[203.06605530 81.27481842]
[194.20074463 83.50279999]
[181.78541565 91.92060852]
[169.37007141 100.33840942]
[156.95474243 108.75621796]
[144.53939819 117.17402649]
[147.08059692 131.95719910]
[161.59422302 135.74597168]
[176.90124512 131.74528503]
[187.26150513 142.44641113]
[201.77513123 146.23519897]
[216.28874207 150.02397156]
[230.80236816 153.81274414]
[245.31597900 157.60153198]
[259.82958984 161.39030457]
[266.13543701 155.89857483]
[274.01000977 153.37838745]
[282.14556885 154.17024231]
[289.22171021 158.07093811]
[294.11944580 164.37882996]
[296.09814453 172.01884460]
[310.34957886 176.69822693]
[324.60101318 181.37762451]
[338.85244751 186.05700684]
[354.78411865 182.16931152]
[365.91964722 194.20806885]
[360.80380249 209.78883362]
[344.69927979 212.88343811]
[334.17306519 200.30844116]
[319.92163086 195.62904358]
[305.67019653 190.94966125]
[291.41876221 186.27027893]
[270.77947998 192.77912903]
[256.04083252 175.90393066]
[241.52720642 172.11514282]
[227.01358032 168.32637024]
[212.49996948 164.53759766]
[197.98634338 160.74880981]
[183.47273254 156.96003723]
[169.20381165 161.23173523]
[157.80545044 150.25959778]
[143.29182434 146.47082520]
[99.68726349 136.70182800]
[93.13298035 107.12390900]
[79.19832611 112.67598724]
[65.26367950 118.22805786]
[51.32902527 123.78012848]
[37.52700424 129.65414429]
[23.86504364 135.84695435]
[10.20308495 142.03976440]
[-3.45887446 148.23257446]
[-9.98818207 154.62991333]
[-17.38050652 154.41368103]
[-31.13666534 160.39433289]
[-44.89282227 166.37496948]
[-58.64898300 172.35562134]
[-72.40513611 178.33625793]
[-86.16130066 184.31690979]
[-84.37890625 191.97077942]
[-83.54972076 199.78349304]
[-83.68579102 207.63681030]
[-84.78453064 215.41195679]
[-86.82881927 222.99142456]
[-89.78724670 230.26071167]
[-93.61458588 237.11004639]
[-98.25250244 243.43609619]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 77]
[18 76]
[19 75]
[20 74]
[21 73]
[22 72]
[24 36]
[25 35]
[26 34]
[46 69]
[47 68]
[48 67]
[50 65]
[51 64]
[52 63]
[84 194]
[85 193]
[86 192]
[87 191]
[88 190]
[89 189]
[90 187]
[91 186]
[92 185]
[93 184]
[97 183]
[98 182]
[99 181]
[100 180]
[101 122]
[102 121]
[103 120]
[104 119]
[105 118]
[124 142]
[125 141]
[126 140]
[127 139]
[128 138]
[129 136]
[130 135]
[143 178]
[144 177]
[146 175]
[147 174]
[148 173]
[149 172]
[150 171]
[151 170]
[157 168]
[158 167]
[159 166]
[160 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
