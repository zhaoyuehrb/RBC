%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:31:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAUGCCGGUGUUGGCGGCCCGAGCGGCUGCAGUUGCAGGGGCGGGGGAGGCGGCGGCGGGGCCCGGGAGAGGGGUGGCGUGGGGGACCGGCGCGUAGCCGGGACCAUGGAGGGGCAGAGCGGCCGCUGCAAGAUCGUGGUGGUGGGAGACGCAGAGUGCGGCAAGACGGCGCUGCUGCAGGUGUUCGCCAAGGACGCCUAUCCCG\
) } def
/len { sequence length } bind def

/coor [
[-46.08043671 226.42835999]
[-53.78113174 237.20848083]
[-64.30031586 245.49549866]
[-76.84915924 250.56619263]
[-90.45761871 251.94233704]
[-104.04934692 249.43470764]
[-109.15599060 263.53869629]
[-114.26262665 277.64266968]
[-119.36927032 291.74664307]
[-115.96334839 307.78820801]
[-128.33213806 318.55599976]
[-143.75167847 312.97302246]
[-146.35968018 296.78256226]
[-133.47325134 286.64001465]
[-128.36660767 272.53601074]
[-123.25997162 258.43203735]
[-118.15332794 244.32806396]
[-128.59852600 233.56248474]
[-142.85031128 238.24079895]
[-157.10208130 242.91912842]
[-171.35386658 247.59745789]
[-185.60565186 252.27578735]
[-192.11337280 263.41363525]
[-204.08183289 267.01605225]
[-214.93641663 261.67373657]
[-229.25723267 266.13629150]
[-240.13067627 277.62884521]
[-254.58354187 274.02828979]
[-268.90435791 278.49084473]
[-283.22515869 282.95336914]
[-297.54598999 287.41592407]
[-311.86679077 291.87847900]
[-320.24456787 310.13784790]
[-339.05844116 316.25836182]
[-356.04354858 306.72192383]
[-370.14752197 311.82855225]
[-384.25149536 316.93518066]
[-398.35546875 322.04183960]
[-408.49804688 334.92825317]
[-424.68847656 332.32025146]
[-430.27145386 316.90072632]
[-419.50369263 304.53192139]
[-403.46212769 307.93783569]
[-389.35812378 302.83120728]
[-375.25415039 297.72457886]
[-361.15017700 292.61791992]
[-359.46041870 282.48886108]
[-353.67236328 273.90878296]
[-344.77548218 268.46426392]
[-334.34094238 267.19546509]
[-324.24456787 270.39804077]
[-316.32934570 277.55764771]
[-302.00851440 273.09512329]
[-287.68771362 268.63256836]
[-273.36688232 264.17001343]
[-259.04608154 259.70748901]
[-249.19696045 248.53411865]
[-233.71977234 251.81547546]
[-219.39897156 247.35293579]
[-208.21351624 233.83193970]
[-190.28398132 238.02400208]
[-176.03219604 233.34567261]
[-161.78041077 228.66735840]
[-147.52864075 223.98902893]
[-133.27685547 219.31069946]
[-135.41676331 202.33755493]
[-131.62794495 185.83685303]
[-122.49155426 171.79481506]
[-109.22471619 161.85847473]
[-93.51953888 157.14279175]
[-77.32772827 158.10650635]
[-62.61814117 164.51025391]
[-51.13740921 175.46069336]
[-37.96236801 168.29005432]
[-24.78732491 161.11940002]
[-11.61228085 153.94874573]
[1.56276178 146.77809143]
[14.68327808 139.50814819]
[27.74851799 132.13932800]
[40.81375885 124.77051544]
[53.87899780 117.40169525]
[66.94423676 110.03287506]
[65.97470856 94.03164673]
[72.33232880 79.31566620]
[84.64802551 69.05393982]
[81.05828857 54.48981094]
[67.81597900 46.28743362]
[64.38294983 31.46619987]
[72.28427124 18.89223099]
[68.69453430 4.32810307]
[65.10480499 -10.23602390]
[61.51506805 -24.80015182]
[57.92533112 -39.36427689]
[44.99510574 -48.86105728]
[44.50212097 -64.89653778]
[56.82455444 -75.16966248]
[72.50968933 -71.79978180]
[79.52523041 -57.37197113]
[72.48945618 -42.95401382]
[76.07919312 -28.38988686]
[79.66893005 -13.82575893]
[83.25866699 0.73836815]
[86.84839630 15.30249500]
[99.68808746 22.76426315]
[103.53606415 37.48322296]
[95.62241364 50.90007782]
[99.21215057 65.46420288]
[110.11750031 62.30786133]
[122.64066315 62.84692764]
[129.81130981 49.67188644]
[129.61244202 33.85192871]
[142.49258423 26.37187004]
[149.66323853 13.19682693]
[149.46437073 -2.62312937]
[162.34451294 -10.10318756]
[169.51515198 -23.27823067]
[176.68580627 -36.45327377]
[171.97259521 -51.53840256]
[179.38053894 -65.49898529]
[194.51464844 -70.05245209]
[208.39613342 -62.49731445]
[212.78933716 -47.31590271]
[205.08786011 -33.51507568]
[189.86085510 -29.28262329]
[182.69020081 -16.10758018]
[175.51954651 -2.93253636]
[176.23130798 11.94505310]
[162.83828735 20.36747932]
[155.66763306 33.54252243]
[156.37939453 48.42011261]
[142.98635864 56.84253693]
[135.81570435 70.01757812]
[138.52812195 77.00991821]
[151.13742065 68.88552094]
[160.36845398 57.06232071]
[175.33731079 56.09646225]
[186.01124573 66.63530731]
[185.23611450 81.61526489]
[173.53143311 90.99612427]
[158.74249268 88.49062347]
[143.95295715 90.99459076]
[146.66539001 97.98693085]
[160.84487915 102.87997437]
[175.02438354 107.77301025]
[189.20387268 112.66605377]
[203.38337708 117.55909729]
[217.56286621 122.45214081]
[231.74237061 127.34517670]
[244.11497498 116.37824249]
[260.23745728 113.16504669]
[275.69158936 118.48960114]
[286.29086304 130.80934143]
[289.21453857 146.70053101]
[303.46633911 151.37886047]
[317.71810913 156.05717468]
[331.96987915 160.73550415]
[346.25659180 165.30607605]
[360.57742310 169.76861572]
[374.89822388 174.23117065]
[389.21902466 178.69371033]
[403.53985596 183.15626526]
[415.29763794 173.16836548]
[430.59179688 171.14540100]
[444.54199219 177.73289490]
[452.69680786 190.82879639]
[452.45407104 206.25424194]
[443.89117432 219.08705139]
[429.74060059 225.23229980]
[414.51766968 222.72906494]
[403.07998657 212.37612915]
[399.07730103 197.47706604]
[384.75650024 193.01452637]
[370.43566895 188.55198669]
[356.11486816 184.08943176]
[341.79403687 179.62689209]
[334.47116089 180.63841248]
[327.29156494 174.98728943]
[313.03979492 170.30895996]
[298.78799438 165.63063049]
[284.53622437 160.95230103]
[274.98092651 170.71179199]
[262.09078979 175.42431641]
[248.36222839 174.11651611]
[236.48020935 166.98690796]
[228.79328918 155.37817383]
[226.84931946 141.52467346]
[212.66983032 136.63163757]
[198.49032593 131.73858643]
[184.31083679 126.84555054]
[170.13133240 121.95250702]
[155.95184326 117.05947113]
[141.77233887 112.16642761]
[128.30796814 130.02737427]
[108.68738556 138.04721069]
[88.88459015 135.06605530]
[74.31305695 123.09811401]
[61.24781799 130.46693420]
[48.18257904 137.83575439]
[35.11733627 145.20457458]
[22.05209732 152.57339478]
[16.11293602 159.51658630]
[8.73341274 159.95314026]
[-4.44162989 167.12379456]
[-17.61667252 174.29443359]
[-30.79171562 181.46508789]
[-43.96675873 188.63574219]
[-41.05044556 201.11791992]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 17]
[7 16]
[8 15]
[9 14]
[18 65]
[19 64]
[20 63]
[21 62]
[22 61]
[25 59]
[26 58]
[28 56]
[29 55]
[30 54]
[31 53]
[32 52]
[35 46]
[36 45]
[37 44]
[38 43]
[73 206]
[74 205]
[75 204]
[76 203]
[77 202]
[78 200]
[79 199]
[80 198]
[81 197]
[82 196]
[85 107]
[86 106]
[89 103]
[90 102]
[91 101]
[92 100]
[93 99]
[109 132]
[110 131]
[112 129]
[113 128]
[115 126]
[116 125]
[117 124]
[142 192]
[143 191]
[144 190]
[145 189]
[146 188]
[147 187]
[148 186]
[153 180]
[154 179]
[155 178]
[156 177]
[157 175]
[158 174]
[159 173]
[160 172]
[161 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
