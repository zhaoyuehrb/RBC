%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:09:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGACUGAAGAGUGGGCGGCGCAAAUGGGCGAGGUGUUUACUCGCCAUUUUGUGUGAGGAACGUUGACGCUACCUACCUCUGGCCUGGCCUCUACCCACUGCUGCCCUGGCCGCUACCAACAUGAGCCUCCCGGAGAGUCCUCACAGCCCCGCUACUCUCGACUAUGCUCUGGAAGACCCGCACCAGGGCCAGAGGUCCCGAGAAAAGAGCAAGGCGACAG\
) } def
/len { sequence length } bind def

/coor [
[312.92446899 222.25987244]
[299.53060913 215.50680542]
[286.13671875 208.75375366]
[272.69537354 202.09564209]
[259.20727539 195.53279114]
[245.71916199 188.96995544]
[237.05360413 195.97402954]
[226.35243225 199.25715637]
[215.14767456 198.30929565]
[205.05847168 193.22904968]
[197.55705261 184.71490479]
[193.75390625 173.96945190]
[194.23355103 162.52960205]
[181.03613281 155.40022278]
[167.83871460 148.27082825]
[154.64129639 141.14144897]
[139.76600647 141.89976501]
[131.30171204 128.53315735]
[118.10428619 121.40377808]
[104.90686798 114.27439880]
[89.90837097 114.48665619]
[76.91799164 121.98665619]
[63.92760849 129.48666382]
[50.93722534 136.98666382]
[37.94684601 144.48666382]
[33.75255203 159.48818970]
[20.47161865 166.90919495]
[6.19580793 162.81813049]
[-6.79457331 170.31813049]
[-19.78495407 177.81813049]
[-32.77533722 185.31813049]
[-45.76571655 192.81813049]
[-58.75609589 200.31813049]
[-61.29317093 215.74853516]
[-73.18877411 225.89883423]
[-88.82616425 225.97637939]
[-100.82184601 215.94454956]
[-103.51182556 200.54006958]
[-95.62597656 187.03645325]
[-80.88775635 181.80972290]
[-66.25609589 187.32774353]
[-53.26571655 179.82774353]
[-40.27533722 172.32774353]
[-27.28495407 164.82774353]
[-14.29457378 157.32774353]
[-1.30419230 149.82774353]
[2.29074597 135.41900635]
[15.35799885 127.62788391]
[30.44684410 131.49627686]
[43.43722534 123.99627686]
[56.42760849 116.49627686]
[69.41799164 108.99627686]
[82.40837097 101.49627686]
[81.77232361 94.02330017]
[80.50023651 79.07733917]
[79.86418915 71.60435486]
[65.79315948 66.40762329]
[51.72212601 61.21088409]
[37.65109253 56.01415253]
[24.76696014 64.45839691]
[9.55884171 63.70569611]
[-2.15140915 54.25402832]
[-6.00455379 39.89118195]
[-20.07558632 34.69445038]
[-33.56422806 42.60586929]
[-48.97377777 39.94507980]
[-59.02831650 27.96842766]
[-58.98040009 12.33091736]
[-48.85265350 0.41610554]
[-33.42708588 -2.15019846]
[-19.98718262 5.84373569]
[-14.87885189 20.62341690]
[-0.80781972 25.82015038]
[11.45600891 17.40965271]
[26.49862099 17.83839226]
[38.54521942 27.15144157]
[42.84782791 41.94311905]
[56.91886139 47.13985443]
[70.98989105 52.33658600]
[85.06092834 57.53332138]
[95.44001007 46.70397949]
[89.65076447 32.86618042]
[83.86151886 19.02838326]
[78.07228088 5.19058561]
[72.28303528 -8.64721298]
[57.37855148 -19.46732330]
[60.29456711 -36.77581406]
[54.31008530 -50.53030396]
[48.32560730 -64.28479767]
[33.12770844 -63.98093033]
[18.97221756 -69.52083588]
[8.01774597 -80.05971527]
[1.93476892 -93.99046326]
[1.65089667 -109.18875122]
[7.20941782 -123.33693695]
[17.76269722 -134.27754211]
[31.70143890 -140.34219360]
[46.90008545 -140.60606384]
[61.04095078 -135.02893066]
[71.96765900 -124.46127319]
[78.01396179 -110.51456451]
[78.25785065 -95.31558990]
[72.66212463 -81.18207550]
[62.08009720 -70.26927185]
[68.06457520 -56.51478577]
[74.04905701 -42.76029587]
[85.18221283 -38.04254150]
[90.28283691 -26.63910294]
[86.12083435 -14.43645573]
[91.91007996 -0.59865773]
[97.69931793 13.23914051]
[103.48856354 27.07693863]
[109.27780914 40.91473770]
[110.83145905 25.99541473]
[124.37995911 19.55816841]
[139.32803345 18.31116104]
[153.75585938 22.41455460]
[165.81042480 31.34133339]
[173.94354248 43.94500732]
[177.11062622 58.60684967]
[174.90492249 73.44379425]
[167.60974121 86.55028534]
[156.16198730 96.24302673]
[142.03196716 101.27713776]
[127.03608704 101.00641632]
[112.03624725 101.07698059]
[125.23367310 108.20635986]
[138.43109131 115.33574677]
[154.25035095 115.08736420]
[161.77067566 127.94403076]
[174.96809387 135.07341003]
[188.16551208 142.20280457]
[201.36294556 149.33218384]
[218.26412964 140.33158875]
[237.02536011 143.32205200]
[250.08247375 156.91427612]
[252.28199768 175.48184204]
[265.77011108 182.04469299]
[279.25820923 188.60752869]
[288.33596802 189.54652405]
[292.88977051 195.35986328]
[306.28366089 202.11293030]
[319.67755127 208.86598206]
[336.31726074 199.39071655]
[355.15557861 201.84906006]
[368.59213257 215.06632996]
[371.31622314 233.56420898]
[384.98464966 239.74273682]
[398.65307617 245.92124939]
[413.28536987 240.57957458]
[427.05908203 247.04017639]
[432.06137085 261.02276611]
[445.72979736 267.20129395]
[459.39825439 273.37979126]
[476.86282349 266.02182007]
[493.86444092 273.64294434]
[499.78500366 290.97140503]
[513.62280273 296.76065063]
[527.46063232 302.54989624]
[541.29840088 308.33914185]
[555.13623047 314.12838745]
[564.61248779 305.36767578]
[576.65350342 300.85540771]
[589.46008301 301.22811890]
[601.13287354 306.39520264]
[609.95410156 315.55761719]
[614.64007568 327.33126831]
[614.52832031 339.95602417]
[628.19671631 346.13452148]
[641.86517334 352.31304932]
[655.53356934 358.49157715]
[669.20202637 364.67007446]
[682.87042236 370.84860229]
[687.15539551 370.26947021]
[691.01562500 371.00540161]
[694.09088135 372.76257324]
[696.15289307 375.16061401]
[697.12194824 377.78289795]
[710.41894531 384.72479248]
[723.71594238 391.66671753]
[738.71734619 386.69354248]
[752.80383301 393.85913086]
[757.61816406 408.91232300]
[750.30401611 422.92227173]
[735.20080566 427.57714844]
[721.26892090 420.11529541]
[716.77398682 404.96371460]
[703.47698975 398.02178955]
[690.18005371 391.07986450]
[676.69189453 384.51702881]
[663.02349854 378.33850098]
[649.35504150 372.16000366]
[635.68664551 365.98147583]
[622.01818848 359.80294800]
[608.34979248 353.62445068]
[594.73022461 364.16836548]
[577.55749512 366.36843872]
[561.55590820 359.52841187]
[551.17376709 345.45147705]
[549.34698486 327.96618652]
[535.50915527 322.17694092]
[521.67138672 316.38769531]
[507.83355713 310.59844971]
[493.99575806 304.80920410]
[484.63739014 311.31863403]
[473.18057251 312.51824951]
[462.45599365 307.99548340]
[455.16949463 298.76602173]
[453.21972656 287.04821777]
[439.55130005 280.86972046]
[425.88287354 274.69119263]
[412.08163452 280.17404175]
[398.13189697 274.10284424]
[392.47454834 259.58969116]
[378.80612183 253.41116333]
[365.13769531 247.23263550]
[356.67382812 254.47914124]
[346.06982422 258.06378174]
[334.84274292 257.43338013]
[324.61383057 252.64068604]
[316.87445068 244.34222412]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 143]
[2 142]
[3 141]
[4 139]
[5 138]
[6 137]
[13 133]
[14 132]
[15 131]
[16 130]
[18 128]
[19 127]
[20 126]
[21 53]
[22 52]
[23 51]
[24 50]
[25 49]
[28 46]
[29 45]
[30 44]
[31 43]
[32 42]
[33 41]
[56 80]
[57 79]
[58 78]
[59 77]
[63 73]
[64 72]
[81 113]
[82 112]
[83 111]
[84 110]
[85 109]
[87 106]
[88 105]
[89 104]
[147 216]
[148 215]
[149 214]
[152 211]
[153 210]
[154 209]
[157 204]
[158 203]
[159 202]
[160 201]
[161 200]
[168 195]
[169 194]
[170 193]
[171 192]
[172 191]
[173 190]
[178 189]
[179 188]
[180 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
