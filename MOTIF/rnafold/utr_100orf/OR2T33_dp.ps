%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:48:52 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR2T33)
} def

/sequence { (\
AUGGAGAUGAGAAAUACUACCCCAGAUUUUAUUCUCCUAGGACUCUUUAACCACACCAGAGCCCACCAAGUCCUCUUCAUGAUGGUUCUGAGUAUCGUUU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 80 0.008487296 ubox
1 93 0.009472417 ubox
1 95 0.011454646 ubox
1 98 0.016660505 ubox
2 24 0.003275460 ubox
2 39 0.119607550 ubox
2 49 0.012303472 ubox
2 53 0.060043395 ubox
2 55 0.004038711 ubox
2 79 0.009247189 ubox
2 92 0.009183577 ubox
2 94 0.012689712 ubox
2 97 0.017938752 ubox
3 21 0.006384690 ubox
3 23 0.004131094 ubox
3 35 0.003526338 ubox
3 36 0.003568741 ubox
3 37 0.994573712 ubox
3 38 0.030332482 ubox
3 46 0.017557239 ubox
3 48 0.013465143 ubox
3 52 0.069571043 ubox
3 54 0.004971393 ubox
3 78 0.009983972 ubox
3 96 0.008568348 ubox
4 20 0.006412624 ubox
4 22 0.004119561 ubox
4 34 0.003932893 ubox
4 36 0.996479453 ubox
4 37 0.023215346 ubox
4 45 0.019013435 ubox
4 47 0.014049215 ubox
4 51 0.069471928 ubox
4 77 0.009960309 ubox
4 98 0.003565574 ubox
5 18 0.006904849 ubox
5 33 0.003605783 ubox
5 35 0.996531731 ubox
5 38 0.005674597 ubox
5 44 0.019023653 ubox
5 46 0.014427360 ubox
5 48 0.012041535 ubox
5 76 0.009964832 ubox
5 100 0.015661979 ubox
6 17 0.006947384 ubox
6 33 0.033577686 ubox
6 34 0.996038278 ubox
6 36 0.010928427 ubox
6 37 0.005800651 ubox
6 43 0.018931746 ubox
6 45 0.014395164 ubox
6 47 0.014903038 ubox
6 48 0.028015947 ubox
6 75 0.009957128 ubox
6 96 0.006462275 ubox
6 99 0.019893481 ubox
7 15 0.006879853 ubox
7 32 0.272629798 ubox
7 33 0.952339537 ubox
7 35 0.010790804 ubox
7 44 0.013947316 ubox
7 46 0.014594443 ubox
7 47 0.027733548 ubox
7 74 0.008704197 ubox
7 95 0.006411520 ubox
7 98 0.020384280 ubox
8 14 0.007292431 ubox
8 19 0.004089160 ubox
8 24 0.010177846 ubox
8 31 0.383469446 ubox
8 39 0.005679304 ubox
8 49 0.010873250 ubox
8 94 0.006124834 ubox
8 97 0.020415483 ubox
9 18 0.003835117 ubox
9 23 0.010262122 ubox
9 28 0.006031968 ubox
9 29 0.015894523 ubox
9 30 0.386020878 ubox
9 33 0.027408899 ubox
9 34 0.012125877 ubox
9 36 0.025822269 ubox
9 45 0.037454978 ubox
9 47 0.057978112 ubox
9 48 0.009797132 ubox
9 72 0.004768945 ubox
9 96 0.020403343 ubox
10 18 0.015637228 ubox
10 27 0.006886355 ubox
10 28 0.016471697 ubox
10 29 0.379697858 ubox
10 30 0.730512036 ubox
10 32 0.051732349 ubox
10 33 0.012771218 ubox
10 35 0.025952891 ubox
10 44 0.037572468 ubox
10 46 0.059261634 ubox
10 47 0.008232934 ubox
10 71 0.004390425 ubox
10 95 0.018326250 ubox
11 17 0.016449803 ubox
11 27 0.012689219 ubox
11 28 0.362397647 ubox
11 29 0.709321586 ubox
11 30 0.488928602 ubox
11 32 0.011962147 ubox
11 34 0.025982719 ubox
11 43 0.037454738 ubox
11 45 0.059624626 ubox
11 46 0.005621112 ubox
12 27 0.334597143 ubox
12 28 0.678906376 ubox
12 29 0.559852675 ubox
12 30 0.099026818 ubox
12 33 0.024522709 ubox
12 44 0.058482438 ubox
13 27 0.611970947 ubox
13 28 0.604581071 ubox
13 29 0.102381317 ubox
13 30 0.008843572 ubox
13 32 0.020310532 ubox
13 33 0.008297106 ubox
14 27 0.640751989 ubox
14 28 0.101654286 ubox
14 29 0.009826245 ubox
14 32 0.012935471 ubox
14 95 0.009054768 ubox
15 26 0.670607391 ubox
15 31 0.015005088 ubox
15 39 0.003413781 ubox
15 94 0.016712266 ubox
16 30 0.014369667 ubox
16 38 0.003277251 ubox
16 93 0.016845507 ubox
17 25 0.802688300 ubox
17 40 0.068287989 ubox
17 41 0.008474767 ubox
17 92 0.016875023 ubox
18 24 0.780019783 ubox
18 39 0.068143610 ubox
18 40 0.008151728 ubox
18 91 0.016380363 ubox
19 38 0.065709980 ubox
20 41 0.012547240 ubox
21 40 0.012557407 ubox
21 41 0.012487411 ubox
22 40 0.012496098 ubox
22 41 0.013578941 ubox
23 40 0.013617302 ubox
23 90 0.004111041 ubox
24 35 0.069611004 ubox
24 38 0.010656885 ubox
24 46 0.006633591 ubox
24 89 0.004114719 ubox
25 33 0.004355352 ubox
25 34 0.071942914 ubox
25 36 0.008200437 ubox
25 37 0.010346936 ubox
25 45 0.007170899 ubox
25 88 0.004115315 ubox
26 32 0.005322009 ubox
26 33 0.070938348 ubox
26 35 0.008609282 ubox
26 44 0.007116800 ubox
26 87 0.004019226 ubox
27 31 0.005169500 ubox
27 42 0.007729340 ubox
28 41 0.007856334 ubox
29 40 0.007888803 ubox
30 39 0.007945910 ubox
31 38 0.007587312 ubox
32 42 0.005351622 ubox
33 41 0.005883958 ubox
33 42 0.006079873 ubox
34 40 0.006130610 ubox
34 41 0.006569529 ubox
35 39 0.005531609 ubox
35 40 0.006044044 ubox
35 42 0.005348255 ubox
36 41 0.006610750 ubox
38 49 0.136918984 ubox
38 90 0.005993001 ubox
38 94 0.011894841 ubox
39 46 0.149185292 ubox
39 47 0.087758405 ubox
39 48 0.144883095 ubox
39 74 0.062343519 ubox
39 89 0.006433161 ubox
39 93 0.008490016 ubox
39 99 0.025299537 ubox
39 100 0.013407535 ubox
40 45 0.160933111 ubox
40 46 0.108149720 ubox
40 47 0.138440167 ubox
40 48 0.049916483 ubox
40 52 0.352485938 ubox
40 57 0.009119166 ubox
40 63 0.034294657 ubox
40 64 0.047227660 ubox
40 73 0.067589505 ubox
40 88 0.006454123 ubox
40 96 0.291387027 ubox
40 98 0.026351248 ubox
40 99 0.015575371 ubox
40 100 0.042498800 ubox
41 45 0.108957105 ubox
41 46 0.109649628 ubox
41 47 0.054527980 ubox
41 48 0.050138078 ubox
41 51 0.351687176 ubox
41 56 0.010641143 ubox
41 62 0.034456343 ubox
41 63 0.047163954 ubox
41 72 0.067616221 ubox
41 87 0.005965518 ubox
41 95 0.264133459 ubox
41 96 0.181405592 ubox
41 98 0.014490984 ubox
41 99 0.057420658 ubox
41 100 0.009187147 ubox
42 46 0.048019455 ubox
42 47 0.048619229 ubox
42 71 0.067601185 ubox
42 86 0.005368846 ubox
42 93 0.425187984 ubox
42 95 0.173537665 ubox
42 98 0.058637047 ubox
42 99 0.008150580 ubox
43 61 0.058935595 ubox
43 70 0.067222190 ubox
43 85 0.004965509 ubox
43 92 0.437388644 ubox
43 97 0.058410334 ubox
44 60 0.059507779 ubox
44 69 0.064952308 ubox
44 84 0.004249831 ubox
44 91 0.437368305 ubox
45 59 0.059804628 ubox
45 61 0.048725330 ubox
45 90 0.432007405 ubox
45 92 0.165515112 ubox
46 58 0.056871067 ubox
46 60 0.048700588 ubox
46 91 0.164998315 ubox
46 92 0.007277339 ubox
47 59 0.048258832 ubox
47 90 0.147188953 ubox
47 91 0.010825788 ubox
47 92 0.007245510 ubox
48 58 0.043537371 ubox
48 59 0.003338903 ubox
48 90 0.010744064 ubox
48 91 0.007597569 ubox
48 94 0.017237365 ubox
49 87 0.393462007 ubox
49 89 0.009804897 ubox
49 93 0.012580323 ubox
49 99 0.484162992 ubox
49 100 0.031348509 ubox
50 86 0.446648317 ubox
50 93 0.023945029 ubox
50 98 0.559613158 ubox
50 99 0.030866992 ubox
51 85 0.449619910 ubox
51 92 0.025007797 ubox
51 97 0.567143927 ubox
52 84 0.449615801 ubox
52 90 0.004861123 ubox
53 80 0.003234514 ubox
53 83 0.446268962 ubox
53 89 0.003546531 ubox
53 93 0.155496389 ubox
53 98 0.131362241 ubox
54 81 0.431366933 ubox
54 90 0.004067419 ubox
54 92 0.160251322 ubox
54 97 0.140304425 ubox
55 80 0.414523947 ubox
55 93 0.758277790 ubox
55 98 0.018560177 ubox
56 92 0.786298272 ubox
56 97 0.019715365 ubox
57 81 0.045010316 ubox
57 90 0.883599530 ubox
58 74 0.018157953 ubox
58 76 0.422097501 ubox
58 77 0.062777562 ubox
58 80 0.039221419 ubox
58 89 0.888300992 ubox
59 72 0.006288269 ubox
59 73 0.018786203 ubox
59 75 0.444452543 ubox
59 76 0.010199694 ubox
59 77 0.038116877 ubox
59 78 0.043607341 ubox
59 88 0.888663793 ubox
60 71 0.006322244 ubox
60 74 0.444167053 ubox
60 76 0.041338556 ubox
60 77 0.041803524 ubox
60 87 0.888167890 ubox
61 71 0.050683186 ubox
61 73 0.439398834 ubox
61 75 0.042463702 ubox
61 76 0.032394442 ubox
61 86 0.887819355 ubox
62 70 0.089322981 ubox
62 85 0.878454202 ubox
63 84 0.864868707 ubox
63 85 0.132736542 ubox
64 81 0.748003368 ubox
64 84 0.186606773 ubox
65 71 0.271555843 ubox
65 80 0.746734264 ubox
65 83 0.223503767 ubox
65 86 0.025919336 ubox
65 93 0.030342299 ubox
66 70 0.271704194 ubox
66 85 0.027969557 ubox
66 92 0.031844853 ubox
67 81 0.258710957 ubox
67 84 0.028589593 ubox
67 90 0.026988148 ubox
68 77 0.789419603 ubox
68 80 0.230676307 ubox
68 83 0.026073223 ubox
68 89 0.024783366 ubox
69 76 0.833639963 ubox
69 77 0.040113715 ubox
69 87 0.007873785 ubox
69 89 0.025649300 ubox
70 75 0.833122720 ubox
70 76 0.037451506 ubox
70 80 0.029909715 ubox
70 83 0.195078385 ubox
70 86 0.008061885 ubox
70 88 0.027350740 ubox
70 95 0.004024290 ubox
71 79 0.030983365 ubox
71 82 0.198955175 ubox
71 85 0.004182879 ubox
71 94 0.004126714 ubox
72 81 0.198939614 ubox
72 84 0.006452329 ubox
72 85 0.036840672 ubox
73 84 0.036969223 ubox
73 85 0.003799200 ubox
73 92 0.006983222 ubox
74 82 0.072176305 ubox
74 91 0.007006143 ubox
75 81 0.073446057 ubox
75 84 0.003448756 ubox
75 90 0.006995243 ubox
75 92 0.007391291 ubox
76 82 0.004512852 ubox
76 91 0.005687804 ubox
76 92 0.021820461 ubox
77 81 0.004283141 ubox
77 91 0.027406441 ubox
78 84 0.003209440 ubox
78 90 0.028332372 ubox
79 83 0.003232013 ubox
79 86 0.003963300 ubox
79 89 0.027699867 ubox
79 98 0.060896971 ubox
80 85 0.004055954 ubox
80 97 0.063938649 ubox
81 87 0.003267660 ubox
81 88 0.028194668 ubox
81 96 0.067105375 ubox
81 99 0.025961123 ubox
82 87 0.027579870 ubox
82 95 0.067093924 ubox
82 98 0.028303406 ubox
83 94 0.067025151 ubox
83 97 0.028516686 ubox
84 93 0.066705845 ubox
84 96 0.028748236 ubox
85 95 0.028610547 ubox
86 94 0.028417795 ubox
89 97 0.006439625 ubox
90 96 0.010695400 ubox
90 99 0.003218824 ubox
91 95 0.009995465 ubox
91 98 0.012757436 ubox
91 99 0.008825779 ubox
91 100 0.015525528 ubox
92 98 0.008645522 ubox
92 99 0.018463010 ubox
93 97 0.004317029 ubox
3 37 0.9500000 lbox
4 36 0.9500000 lbox
5 35 0.9500000 lbox
6 34 0.9500000 lbox
7 33 0.9500000 lbox
10 30 0.9500000 lbox
11 29 0.9500000 lbox
12 28 0.9500000 lbox
13 27 0.9500000 lbox
17 25 0.9500000 lbox
18 24 0.9500000 lbox
49 99 0.9500000 lbox
50 98 0.9500000 lbox
51 97 0.9500000 lbox
55 93 0.9500000 lbox
56 92 0.9500000 lbox
57 90 0.9500000 lbox
58 89 0.9500000 lbox
59 88 0.9500000 lbox
60 87 0.9500000 lbox
61 86 0.9500000 lbox
62 85 0.9500000 lbox
63 84 0.9500000 lbox
64 81 0.9500000 lbox
65 80 0.9500000 lbox
68 77 0.9500000 lbox
69 76 0.9500000 lbox
70 75 0.9500000 lbox
showpage
end
%%EOF
