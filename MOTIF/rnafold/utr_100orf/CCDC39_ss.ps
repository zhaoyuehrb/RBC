%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:58:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCCCCGGCAAUUGCCGCGGCACUGUGCAGGUGCCUGGGCUUGACGCGGGUGCUGCUCACCCGCUGUACAAGAAGGCGGAUCUUUGCUCUGUAUCUUCUCUAUCCGUUUGCAGUCAUGAGUAGCGAAUUCCUGGCUGAGCUGCACUGGGAGGAUGGGUUCGCCAUCCCGGUGGCGAACGAGGAGAACAAGCUACUGGAAGAUCAGUUGUCAAAGC\
) } def
/len { sequence length } bind def

/coor [
[99.94258118 136.51548767]
[89.96525574 135.81312561]
[80.37398529 132.38677979]
[71.77033997 144.67405701]
[63.16669464 156.96133423]
[56.33740616 170.31651306]
[51.41264725 184.48503113]
[46.48788834 198.65354919]
[41.56313324 212.82205200]
[45.17515945 228.81846619]
[32.94593430 239.74449158]
[17.45583153 234.36036682]
[14.63974285 218.20483398]
[27.39461899 207.89729309]
[32.31937790 193.72879028]
[37.24413300 179.56027222]
[42.16889191 165.39175415]
[35.81431961 161.40811157]
[16.75059700 149.45719910]
[6.14399576 160.06379700]
[-4.46260595 170.67039490]
[-15.06920815 181.27699280]
[-25.67580986 191.88360596]
[-36.28240967 202.49020386]
[-37.72028351 218.46868896]
[-51.18810272 227.18634033]
[-66.35451508 221.95570374]
[-71.58514404 206.78929138]
[-62.86750031 193.32147217]
[-46.88901138 191.88360596]
[-36.28240967 181.27699280]
[-25.67580986 170.67039490]
[-15.06920815 160.06379700]
[-4.46260595 149.45719910]
[6.14399576 138.85058594]
[34.44461060 134.61283875]
[50.87941360 148.35769653]
[59.48305893 136.07040405]
[68.08670807 123.78312683]
[61.55038452 110.28215027]
[46.57575989 109.40997314]
[31.60113907 108.53780365]
[16.62651634 107.66562653]
[1.64594758 106.90238190]
[-13.33977604 106.24808502]
[-28.32986069 105.70278931]
[-43.32351685 105.26652527]
[-58.31716919 104.83025360]
[-73.31082153 104.39398193]
[-88.30448151 103.95771027]
[-103.29813385 103.52143860]
[-118.29178619 103.08516693]
[-130.90084839 113.00440216]
[-146.48400879 109.19067383]
[-153.08720398 94.56954956]
[-145.64503479 80.35710144]
[-129.86648560 77.45590973]
[-117.85551453 88.09151459]
[-102.86186218 88.52778625]
[-87.86820984 88.96405792]
[-72.87454987 89.40032196]
[-57.88089752 89.83659363]
[-42.88724518 90.27286530]
[-27.89359093 90.70913696]
[-21.11874771 87.76271820]
[-12.68548489 91.26236725]
[2.30023837 91.91665649]
[9.11721611 89.06907654]
[17.49868965 92.69100952]
[32.47331238 93.56317902]
[47.44793320 94.43535614]
[62.42255783 95.30752563]
[76.65882111 72.80443573]
[100.94688416 66.20523834]
[122.01387787 77.08294678]
[134.66474915 69.02345276]
[147.31562805 60.96395493]
[159.96649170 52.90446091]
[172.43853760 44.57090759]
[184.72581482 35.96726227]
[197.01310730 27.36361504]
[209.30038452 18.75996780]
[221.58766174 10.15632153]
[233.87493896 1.55267465]
[246.16223145 -7.05097198]
[258.12860107 -16.09561157]
[269.75830078 -25.56928635]
[281.38796997 -35.04296112]
[286.06265259 -42.88610458]
[293.25637817 -44.56836700]
[305.02261353 -53.87189865]
[316.78884888 -63.17543411]
[321.57711792 -70.94976044]
[328.79455566 -72.52722168]
[340.69485474 -81.65863800]
[352.59515381 -90.79006195]
[364.49545288 -99.92148590]
[376.39575195 -109.05290222]
[388.29605103 -118.18432617]
[400.19635010 -127.31575012]
[401.64648438 -169.59701538]
[409.88909912 -182.12933350]
[418.13174438 -194.66165161]
[426.37438965 -207.19396973]
[434.61700439 -219.72628784]
[435.38125610 -226.28730774]
[438.82531738 -230.80194092]
[443.28607178 -232.49839783]
[451.88973999 -244.78569031]
[453.46716309 -260.52804565]
[467.10525513 -266.51568604]
[475.70889282 -278.80297852]
[484.31253052 -291.09027100]
[492.91619873 -303.37753296]
[501.43023682 -315.72705078]
[509.85427856 -328.13818359]
[504.22640991 -340.71829224]
[505.53808594 -354.32858276]
[513.34039307 -365.42526245]
[525.50842285 -371.17218018]
[538.81903076 -370.16525269]
[547.42266846 -382.45254517]
[556.02630615 -394.73983765]
[564.62994385 -407.02709961]
[558.68774414 -421.26412964]
[561.40844727 -436.44970703]
[571.92388916 -447.73812866]
[586.87866211 -451.52734375]
[601.50073242 -446.60818481]
[611.12426758 -434.55035400]
[612.67846680 -419.20147705]
[605.66729736 -405.45932007]
[592.32806396 -397.70892334]
[576.91723633 -398.42346191]
[568.31359863 -386.13616943]
[559.70996094 -373.84890747]
[551.10632324 -361.56161499]
[556.94500732 -346.21743774]
[552.44085693 -330.25711060]
[539.17871094 -320.02603149]
[522.26538086 -319.71414185]
[513.84136963 -307.30303955]
[512.68621826 -300.00607300]
[505.20346069 -294.77389526]
[496.59982300 -282.48660278]
[487.99618530 -270.19934082]
[479.39251709 -257.91204834]
[478.43048096 -243.04853821]
[464.17700195 -236.18203735]
[455.57336426 -223.89476013]
[447.14932251 -211.48364258]
[438.90670776 -198.95132446]
[430.66406250 -186.41900635]
[422.42141724 -173.88668823]
[414.17880249 -161.35438538]
[417.19940186 -154.48954773]
[426.26119995 -133.89503479]
[441.06964111 -131.50543213]
[455.87805176 -129.11582947]
[470.68649292 -126.72622681]
[485.49493408 -124.33662415]
[500.30337524 -121.94702148]
[515.11181641 -119.55741882]
[529.92022705 -117.16781616]
[544.72869873 -114.77820587]
[559.85485840 -121.11311340]
[572.73846436 -110.96695709]
[570.12597656 -94.77724457]
[554.70489502 -89.19855499]
[542.33911133 -99.96977234]
[527.53063965 -102.35937500]
[512.72222900 -104.74897766]
[497.91375732 -107.13858032]
[483.10534668 -109.52818298]
[468.29690552 -111.91778564]
[453.48846436 -114.30738831]
[438.68002319 -116.69699097]
[423.87158203 -119.08659363]
[409.32775879 -115.41544342]
[397.42745972 -106.28402710]
[385.52716064 -97.15260315]
[373.62686157 -88.02117920]
[361.72656250 -78.88976288]
[349.82626343 -69.75833893]
[337.92596436 -60.62691879]
[326.09237671 -51.40919876]
[314.32614136 -42.10566711]
[302.55990601 -32.80213165]
[290.86166382 -23.41328049]
[279.23196411 -13.93960571]
[267.60229492 -4.46593046]
[282.03759766 -0.38889885]
[287.98788452 13.38041687]
[281.06484985 26.68725395]
[266.37420654 29.71792221]
[254.75018311 20.23732758]
[254.76586914 5.23630857]
[242.47859192 13.83995533]
[230.19131470 22.44360161]
[217.90402222 31.04724884]
[205.61674500 39.65089417]
[193.32946777 48.25454330]
[181.04219055 56.85818863]
[180.07260132 60.24452209]
[177.41680908 63.33038712]
[173.23345947 65.32934570]
[168.02598572 65.55533600]
[155.37512207 73.61483002]
[142.72424316 81.67432404]
[130.07337952 89.73381805]
[132.40090942 98.13983917]
[132.37348938 107.04486847]
[129.89505005 115.78823090]
[125.05496979 123.69509125]
[118.12816620 130.12840271]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 39]
[4 38]
[5 37]
[6 17]
[7 16]
[8 15]
[9 14]
[19 35]
[20 34]
[21 33]
[22 32]
[23 31]
[24 30]
[40 72]
[41 71]
[42 70]
[43 69]
[44 67]
[45 66]
[46 64]
[47 63]
[48 62]
[49 61]
[50 60]
[51 59]
[52 58]
[75 210]
[76 209]
[77 208]
[78 207]
[79 203]
[80 202]
[81 201]
[82 200]
[83 199]
[84 198]
[85 197]
[86 191]
[87 190]
[88 189]
[90 188]
[91 187]
[92 186]
[94 185]
[95 184]
[96 183]
[97 182]
[98 181]
[99 180]
[100 179]
[101 155]
[102 154]
[103 153]
[104 152]
[105 151]
[108 150]
[109 149]
[111 147]
[112 146]
[113 145]
[114 144]
[115 142]
[116 141]
[121 137]
[122 136]
[123 135]
[124 134]
[157 178]
[158 177]
[159 176]
[160 175]
[161 174]
[162 173]
[163 172]
[164 171]
[165 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
