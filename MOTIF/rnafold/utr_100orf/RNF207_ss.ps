%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:14:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGCGCAGAGUGGGAACCAUCGCCCGGUGCGGGCCUGAACUUCCAGGGCCGGCUACUCCUCGGCAGAGCGACCGCGCGGUGUCUCAGAGCGCGGCCCGGAGCCGCACUAAGAGCGCUGGACGGCGGGAGAGAGGCUCGGAGGACCGGUAGCUCCCAGCAAAGCGGCCCAGCGGAUGUCGGGAGCUAUCUUCGGGCCCCUGGAGGGCCCGAGCUCCCUGGAUGCCCCGAGCAUCCACCCGCUGGUGUGCCCGCUG\
UGCCACGUGCAGUACGAGC\
) } def
/len { sequence length } bind def

/coor [
[-15.80102444 350.45736694]
[-12.06973076 335.69262695]
[-2.65056491 323.72604370]
[10.82454681 316.63088989]
[9.79719448 301.66610718]
[8.76984119 286.70132446]
[7.74248886 271.73654175]
[4.10502720 270.67562866]
[0.65228701 269.11508179]
[-9.86304951 279.81216431]
[-20.37838554 290.50924683]
[-30.89372253 301.20635986]
[-41.40905762 311.90344238]
[-51.92439651 322.60052490]
[-45.60284805 334.42413330]
[-47.81413651 350.32458496]
[-60.58432770 364.04620361]
[-68.10904694 377.02227783]
[-75.63376617 389.99835205]
[-70.14360046 404.64047241]
[-75.39839935 419.36871338]
[-88.91699219 427.22885132]
[-104.31632233 424.50955200]
[-114.32529449 412.49478149]
[-114.21797943 396.85757446]
[-104.04504395 384.98132324]
[-88.60984039 382.47363281]
[-81.08512115 369.49755859]
[-73.56040192 356.52148438]
[-84.66977692 346.44168091]
[-95.77814484 336.36279297]
[-107.96356201 345.11010742]
[-120.14897919 353.85745239]
[-126.84766388 368.19055176]
[-141.69885254 369.32705688]
[-153.88426208 378.07437134]
[-166.06968689 386.82168579]
[-178.25509644 395.56900024]
[-180.56892395 411.20300293]
[-193.30955505 420.55456543]
[-208.91821289 418.07559204]
[-218.13455200 405.23678589]
[-215.49069214 389.65521240]
[-202.55517578 380.57513428]
[-187.00242615 383.38357544]
[-174.81700134 374.63626099]
[-162.63159180 365.88894653]
[-150.44616699 357.14163208]
[-144.61906433 343.43417358]
[-128.89630127 341.67202759]
[-116.71088409 332.92471313]
[-104.52546692 324.17739868]
[-83.31047821 306.42526245]
[-62.62148285 312.08520508]
[-52.10614777 301.38809204]
[-41.59080887 290.69100952]
[-31.07547379 279.99392700]
[-20.56013870 269.29684448]
[-10.04480171 258.59976196]
[-13.68003368 243.35429382]
[-8.20833111 228.50959778]
[4.69109678 219.09588623]
[20.79331589 218.39956665]
[28.46578026 205.51028442]
[36.13824463 192.62101746]
[43.81070709 179.73175049]
[43.67213440 164.83778381]
[57.37943268 156.93711853]
[65.05189514 144.04785156]
[72.72435760 131.15858459]
[80.39682770 118.26931000]
[73.62249756 104.72013855]
[75.27776337 89.66253662]
[63.61159134 80.23383331]
[51.94542313 70.80512238]
[36.43859100 72.28024292]
[24.74175072 62.55200958]
[23.43101501 47.75952530]
[11.76484394 38.33082199]
[0.09867290 28.90211678]
[-11.56749821 19.47341347]
[-23.23366928 10.04471016]
[-31.83974266 7.10063887]
[-34.97844696 0.44105077]
[-46.53614807 -9.12030888]
[-58.09384537 -18.68166924]
[-73.61651611 -17.38379288]
[-85.20146179 -27.24501419]
[-86.34312439 -42.05150604]
[-97.90082550 -51.61286545]
[-113.46598053 -54.44773483]
[-118.34056854 -68.52209473]
[-129.89826965 -78.08345795]
[-141.45596313 -87.64481354]
[-153.01367188 -97.20617676]
[-164.57136536 -106.76753235]
[-180.61425781 -106.69531250]
[-190.56065369 -119.28296661]
[-186.78051758 -134.87431335]
[-172.17366028 -141.50901794]
[-157.94520569 -134.09748840]
[-155.01000977 -118.32523346]
[-143.45230103 -108.76387024]
[-131.89460754 -99.20251465]
[-120.33691406 -89.64115143]
[-108.77921295 -80.07979584]
[-94.04074097 -77.92881775]
[-88.33946228 -63.17056274]
[-76.78176880 -53.60920334]
[-62.02361298 -55.26222229]
[-50.16625595 -45.73028564]
[-48.53248596 -30.23936844]
[-36.97478867 -20.67800713]
[-25.41708946 -11.11664772]
[-13.80496502 -1.62146103]
[-2.13879395 7.80724287]
[9.52737713 17.23594666]
[21.19354820 26.66464996]
[32.85971832 36.09335327]
[47.59802628 34.27185440]
[59.56349945 43.66771317]
[61.37412643 59.13895416]
[73.04029846 68.56765747]
[84.70646667 77.99636078]
[91.19244385 69.14800262]
[101.91381073 62.67641068]
[103.11204529 47.72434616]
[104.31028748 32.77228546]
[105.50852966 17.82021904]
[106.70676422 2.86815548]
[97.41706085 -4.47801018]
[92.85728455 -15.27865601]
[94.04749298 -26.82154846]
[100.57923889 -36.26768494]
[110.74459839 -41.34952927]
[112.28411865 -56.27031708]
[110.05762482 -65.08931732]
[113.92740631 -71.35241699]
[115.63727570 -86.25464630]
[117.34714508 -101.15686798]
[110.32711029 -115.97750092]
[119.87344360 -129.31164551]
[136.16569519 -127.44229126]
[142.44380188 -112.29245758]
[132.24937439 -99.44699860]
[130.53950500 -84.54476929]
[128.82963562 -69.64254761]
[127.20491028 -54.73079681]
[125.66539001 -39.81000900]
[138.04631042 -26.28882027]
[136.54797363 -7.69529438]
[121.65882874 4.06639481]
[120.46059418 19.01845932]
[119.26235199 33.97052383]
[118.06410980 48.92258835]
[116.86587524 63.87465286]
[121.96866608 69.37115479]
[126.38619995 55.03639221]
[141.00926208 51.69481277]
[151.21459961 62.68803787]
[146.79675293 77.02270508]
[132.17424011 80.36415863]
[137.27703857 85.86065674]
[152.27679443 85.77497864]
[167.27655029 85.68930054]
[178.34725952 74.73133087]
[193.56036377 74.85811615]
[203.93888855 85.47988129]
[218.93864441 85.39420319]
[233.93840027 85.30852509]
[248.93815613 85.22283936]
[263.93789673 85.13716125]
[278.93765259 85.05148315]
[293.93740845 84.96580505]
[297.41384888 75.82084656]
[304.35437012 68.30645752]
[313.99880981 63.72978592]
[325.09930420 63.04671860]
[336.08071899 66.68359375]
[345.26394653 74.43082428]
[360.02941895 71.78860474]
[374.79486084 69.14639282]
[389.56033325 66.50417328]
[404.32577515 63.86196136]
[419.09124756 61.21974564]
[408.30862427 50.79212570]
[409.62139893 35.84968185]
[422.05703735 27.46189880]
[436.40310669 31.84251595]
[442.03195190 45.74633408]
[434.77337646 58.87348938]
[449.66558838 57.07852554]
[464.55780029 55.28356171]
[479.45001221 53.48859787]
[494.34222412 51.69363403]
[509.23443604 49.89867020]
[524.12664795 48.10370636]
[539.01885986 46.30874252]
[550.01525879 34.62715912]
[565.99194336 36.08467484]
[574.69305420 49.56320572]
[569.44378662 64.72317505]
[554.27093506 69.93515015]
[540.81384277 61.20095825]
[525.92163086 62.99592209]
[511.02941895 64.79088593]
[496.13720703 66.58585358]
[481.24499512 68.38081360]
[466.35275269 70.17578125]
[451.46054077 71.97074127]
[436.56832886 73.76570892]
[421.73345947 75.98519897]
[406.96798706 78.62741852]
[392.20254517 81.26963043]
[377.43707275 83.91184998]
[362.67163086 86.55406189]
[347.90615845 89.19628143]
[345.68667603 104.03116608]
[359.03225708 110.87916565]
[372.37786865 117.72716522]
[385.72344971 124.57516479]
[399.06906128 131.42317200]
[412.41464233 138.27116394]
[425.76025391 145.11917114]
[441.41113281 141.59371948]
[453.83496094 151.74400330]
[453.50122070 167.78358459]
[440.66589355 177.40827942]
[425.17520142 173.23483276]
[418.91223145 158.46476746]
[405.56665039 151.61676025]
[392.22103882 144.76876831]
[378.87545776 137.92076111]
[365.52984619 131.07275391]
[352.18426514 124.22476196]
[338.83868408 117.37676239]
[309.97113037 120.04381561]
[294.02310181 99.96556091]
[279.02334595 100.05123901]
[264.02359009 100.13691711]
[249.02383423 100.22259521]
[234.02407837 100.30828094]
[219.02432251 100.39395905]
[204.02456665 100.47963715]
[193.76806641 111.21926880]
[178.55740356 111.51983643]
[167.36222839 100.68905640]
[152.36247253 100.77473450]
[137.36271667 100.86041260]
[119.34710693 125.59508514]
[93.28609467 125.94177246]
[85.61363220 138.83103943]
[77.94116974 151.72032166]
[70.26869965 164.60958862]
[69.85848999 180.42547607]
[56.69997787 187.40420532]
[49.02751541 200.29348755]
[41.35504913 213.18275452]
[33.68258667 226.07202148]
[40.94462585 242.59391785]
[36.58605194 259.87881470]
[22.70726585 270.70919800]
[23.73461914 285.67398071]
[24.76197052 300.63876343]
[25.78932381 315.60351562]
[40.10762787 320.79061890]
[51.07376480 331.35772705]
[56.78778076 345.47402954]
[56.25968933 360.69378662]
[49.58098602 374.38009644]
[37.90879822 384.16171265]
[23.26539803 388.34390259]
[8.18784714 386.20208740]
[-4.71157837 378.10736084]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 265]
[5 264]
[6 263]
[7 262]
[9 59]
[10 58]
[11 57]
[12 56]
[13 55]
[14 54]
[17 29]
[18 28]
[19 27]
[31 52]
[32 51]
[33 50]
[35 48]
[36 47]
[37 46]
[38 45]
[63 259]
[64 258]
[65 257]
[66 256]
[68 254]
[69 253]
[70 252]
[71 251]
[73 124]
[74 123]
[75 122]
[78 119]
[79 118]
[80 117]
[81 116]
[82 115]
[84 114]
[85 113]
[86 112]
[89 109]
[90 108]
[92 106]
[93 105]
[94 104]
[95 103]
[96 102]
[126 156]
[127 155]
[128 154]
[129 153]
[130 152]
[135 149]
[136 148]
[138 147]
[139 146]
[140 145]
[163 249]
[164 248]
[165 247]
[168 244]
[169 243]
[170 242]
[171 241]
[172 240]
[173 239]
[174 238]
[180 217]
[181 216]
[182 215]
[183 214]
[184 213]
[185 212]
[191 211]
[192 210]
[193 209]
[194 208]
[195 207]
[196 206]
[197 205]
[198 204]
[218 236]
[219 235]
[220 234]
[221 233]
[222 232]
[223 231]
[224 230]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
