%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:42:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCAGUCCGAGCCAAGGGCACUAUUGGCCAGUUCCGUUCAACGAAGUGGUUGCUUUUUUUAGUUCCGGCAAUGAGUUGCGCCGGGGCGGCGGCGGCUCCCCGCCUUUGGCGGCUGCGCCCGGGGGCCCGGCGGUCCCUCUCAGCUUAUGGAAGAAGAACCAGUGUCAGAU\
) } def
/len { sequence length } bind def

/coor [
[164.42996216 158.80352783]
[150.11820984 163.29507446]
[135.19099426 161.81921387]
[122.03838348 154.61415100]
[121.15277863 139.64031982]
[114.75112915 153.20567322]
[108.34947968 166.77102661]
[101.94783783 180.33639526]
[108.65528870 194.46238708]
[104.66347504 209.58189392]
[91.85720062 218.55593872]
[76.28319550 217.14723206]
[65.29503632 206.02095032]
[64.08098602 190.43055725]
[73.21428680 177.73738098]
[88.38247681 173.93473816]
[94.78412628 160.36938477]
[101.18576813 146.80403137]
[107.58741760 133.23866272]
[103.09033203 127.23648834]
[91.08596802 136.23066711]
[79.08145905 145.22465515]
[70.08765411 133.22001648]
[82.09178925 124.22630310]
[94.09615326 115.23212433]
[89.59906006 109.22994232]
[74.78158569 111.56285095]
[59.96411514 113.89575195]
[45.14664078 116.22866058]
[30.32916451 118.56156921]
[17.90027809 128.35101318]
[4.12451649 122.68730164]
[-10.69295788 125.02021027]
[-25.51043320 127.35311890]
[-32.44753647 141.23318481]
[-46.23375320 148.35496521]
[-61.56800079 145.98001099]
[-72.55394745 135.02151489]
[-74.96727753 119.69325256]
[-67.88000488 105.88925934]
[-54.01734161 98.91744995]
[-38.70976257 101.45861816]
[-27.84333992 112.53564453]
[-13.02586460 110.20273590]
[1.79160964 107.86982727]
[13.16065121 98.24724579]
[27.99625778 103.74409485]
[42.81373215 101.41118622]
[57.63120651 99.07827759]
[72.44868469 96.74537659]
[87.26615906 94.41246796]
[100.71161652 87.76269531]
[111.55898285 77.40244293]
[122.40634155 67.04219818]
[122.93266296 51.47425842]
[134.08102417 41.12202072]
[148.91941833 41.71972275]
[159.76678467 31.35947800]
[170.61415100 20.99922943]
[181.46151733 10.63898277]
[181.98783875 -4.92895699]
[193.13618469 -15.28119659]
[207.97459412 -14.68349171]
[218.82196045 -25.04373932]
[229.66931152 -35.40398788]
[240.51667786 -45.76423264]
[241.60192871 -50.05801392]
[243.79353333 -53.42656708]
[246.65730286 -55.63318634]
[249.72673035 -56.60934448]
[252.56170654 -56.45039368]
[264.14044189 -65.98624420]
[275.71920776 -75.52210236]
[287.29794312 -85.05796051]
[298.87670898 -94.59381866]
[310.45544434 -104.12966919]
[322.03421021 -113.66552734]
[333.61294556 -123.20138550]
[331.75729370 -136.88133240]
[336.87210083 -149.58734131]
[347.51828003 -158.03160095]
[360.84088135 -160.08644104]
[373.33410645 -155.31961060]
[385.08609009 -164.64114380]
[396.83807373 -173.96267700]
[408.59002686 -183.28422546]
[420.34201050 -192.60575867]
[426.34573364 -207.24357605]
[441.12533569 -209.09085083]
[452.87731934 -218.41238403]
[452.87435913 -231.90419006]
[460.54071045 -242.76866150]
[472.88592529 -247.15748596]
[485.31466675 -243.67536926]
[497.23590088 -252.77943420]
[509.15713501 -261.88351440]
[514.10241699 -269.60977173]
[521.38201904 -271.04290771]
[533.46850586 -279.92645264]
[545.55499268 -288.80996704]
[557.64147949 -297.69351196]
[569.72796631 -306.57702637]
[555.59216309 -311.59503174]
[550.52398682 -325.71286011]
[558.24072266 -338.57571411]
[573.08239746 -340.74914551]
[584.16333008 -330.63909912]
[583.35571289 -315.66018677]
[596.20611572 -323.39758301]
[609.05651855 -331.13494873]
[621.90692139 -338.87231445]
[629.36639404 -353.47671509]
[645.75561523 -354.04849243]
[654.21466064 -339.99942017]
[646.04168701 -325.78204346]
[629.64428711 -326.02191162]
[616.79388428 -318.28454590]
[603.94348145 -310.54714966]
[591.09307861 -302.80978394]
[578.61151123 -294.49057007]
[566.52502441 -285.60702515]
[554.43853760 -276.72351074]
[542.35205078 -267.83996582]
[530.26556396 -258.95645142]
[518.26123047 -249.96226501]
[506.33996582 -240.85820007]
[494.41873169 -231.75413513]
[492.91241455 -215.02113342]
[479.51800537 -204.33009338]
[462.19885254 -206.66041565]
[450.44686890 -197.33888245]
[445.28375244 -183.36779785]
[429.66354370 -180.85377502]
[417.91156006 -171.53224182]
[406.15960693 -162.21070862]
[394.40762329 -152.88917542]
[382.65563965 -143.56764221]
[383.88092041 -127.21513367]
[375.04095459 -113.20688629]
[359.44366455 -107.15499878]
[343.14880371 -111.62263489]
[331.57006836 -102.08677673]
[319.99130249 -92.55092621]
[308.41256714 -83.01506805]
[296.83380127 -73.47920990]
[285.25506592 -63.94335556]
[273.67630005 -54.40749741]
[262.09756470 -44.87164307]
[250.87692261 -34.91687012]
[240.02957153 -24.55662346]
[229.18220520 -14.19637680]
[218.33483887 -3.83612919]
[218.25062561 11.01407242]
[207.39744568 21.67536163]
[191.82176208 21.48634529]
[180.97439575 31.84659195]
[170.12702942 42.20684052]
[159.27967834 52.56708527]
[159.19546509 67.41728973]
[148.34228516 78.07857513]
[132.76658630 77.88956451]
[121.91922760 88.24980927]
[111.07186890 98.61005402]
[125.55828857 94.71858978]
[139.46749878 89.10308838]
[154.46481323 89.38713074]
[168.15141296 95.52528381]
[178.33816528 106.53574371]
[183.39567566 120.65740967]
[182.51504517 135.63153076]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 19]
[6 18]
[7 17]
[8 16]
[26 51]
[27 50]
[28 49]
[29 48]
[30 47]
[32 45]
[33 44]
[34 43]
[52 163]
[53 162]
[54 161]
[57 158]
[58 157]
[59 156]
[60 155]
[63 152]
[64 151]
[65 150]
[66 149]
[71 148]
[72 147]
[73 146]
[74 145]
[75 144]
[76 143]
[77 142]
[78 141]
[83 137]
[84 136]
[85 135]
[86 134]
[87 133]
[89 131]
[90 130]
[94 127]
[95 126]
[96 125]
[98 124]
[99 123]
[100 122]
[101 121]
[102 120]
[108 119]
[109 118]
[110 117]
[111 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
