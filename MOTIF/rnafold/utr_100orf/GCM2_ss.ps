%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:17:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACCUGGCGCACCUGUCCUUUUUUCUUCUAUUUUUCAGAACCCUGGGCGGAAAGCGCGAGCGAGUUGGGCAGAUGCCGGCGGCCGCGGUGCAGGAAGCGGUCGGCGUGUGCUCCUACGGGAUGCAGCUCAGCUGGGACAUCAACGAUCCGCAGAUGCCUCAGGAGCUGGCCC\
) } def
/len { sequence length } bind def

/coor [
[112.74932098 122.65872955]
[101.61463165 124.97685242]
[91.00010681 122.31192780]
[82.94108582 115.55848694]
[69.17584991 121.51821136]
[59.58581543 134.10160828]
[44.83208084 132.05795288]
[31.06684303 138.01766968]
[17.30160522 143.97738647]
[3.53636813 149.93710327]
[-2.58610106 166.30589294]
[-18.33568001 173.06579590]
[-33.79778671 166.49157715]
[-47.45253372 172.70027161]
[-61.10728455 178.90895081]
[-74.76203156 185.11764526]
[-88.41677856 191.32633972]
[-102.07152557 197.53503418]
[-103.65274048 212.74841309]
[-112.57762146 225.04650879]
[-126.36824036 231.18534851]
[-141.28021240 229.60772705]
[-153.31925964 220.83691406]
[-166.97401428 227.04560852]
[-180.62875366 233.25430298]
[-194.28350830 239.46299744]
[-195.68881226 254.75746155]
[-204.56619263 267.29092407]
[-218.52764893 273.69195557]
[-233.81762695 272.23870850]
[-246.32321167 263.32211304]
[-252.68045044 249.34065247]
[-251.17929077 234.05529785]
[-242.22352600 221.57772827]
[-228.22221375 215.26434326]
[-212.94163513 216.81341553]
[-200.49220276 225.80824280]
[-186.83744812 219.59954834]
[-173.18269348 213.39085388]
[-159.52795410 207.18217468]
[-158.22358704 192.34423828]
[-149.61003113 180.06976318]
[-135.91862488 173.71275330]
[-120.78418732 175.07130432]
[-108.28022003 183.88027954]
[-94.62547302 177.67158508]
[-80.97072601 171.46290588]
[-67.31597137 165.25421143]
[-53.66122437 159.04551697]
[-40.00647736 152.83682251]
[-37.20690918 140.23815918]
[-27.50996399 131.42907715]
[-14.31446934 129.80064392]
[-2.42335010 136.17185974]
[11.34188747 130.21214294]
[25.10712433 124.25242615]
[38.87236023 118.29270935]
[47.47781372 106.13559723]
[63.21613312 107.75296783]
[76.98136902 101.79325104]
[78.31820679 89.02497864]
[86.53639984 78.32736969]
[99.74478149 73.27420044]
[114.28772736 75.98960114]
[116.45920563 61.14761353]
[110.80120087 46.37271881]
[120.29946899 34.89960861]
[122.47094727 20.05761909]
[124.50758362 5.19652557]
[126.40919495 -9.68244839]
[128.31082153 -24.56142235]
[122.38545227 -39.23114014]
[131.67381287 -50.87483215]
[133.57542419 -65.75380707]
[135.47705078 -80.63278198]
[137.37866211 -95.51174927]
[139.28027344 -110.39072418]
[141.18190002 -125.26969910]
[139.13339233 -130.14846802]
[139.18075562 -134.84938049]
[140.89874268 -138.59642029]
[143.61366272 -140.89872742]
[146.32264709 -155.65206909]
[149.03161621 -170.40542603]
[151.74060059 -185.15878296]
[154.44958496 -199.91213989]
[142.70214844 -209.80624390]
[137.49072266 -224.25396729]
[140.21714783 -239.36892700]
[150.14804077 -251.08529663]
[164.61203003 -256.25140381]
[179.71836853 -253.47761536]
[191.40354919 -243.51005554]
[196.52429199 -229.02993774]
[193.70315552 -213.93237305]
[183.69902039 -202.27848816]
[169.20292664 -197.20315552]
[166.49395752 -182.44979858]
[163.78497314 -167.69645691]
[161.07600403 -152.94309998]
[158.36701965 -138.18974304]
[156.06086731 -123.36808014]
[154.15925598 -108.48911285]
[152.25762939 -93.61013794]
[150.35601807 -78.73116302]
[148.45440674 -63.85218811]
[146.55279541 -48.97321701]
[152.61416626 -35.36774063]
[143.18978882 -22.65980530]
[141.28817749 -7.78083181]
[139.38655090 7.09814167]
[141.66577148 14.15690327]
[137.31294250 22.22910309]
[135.14144897 37.07109070]
[140.95478821 50.78438950]
[131.30119324 63.31909561]
[129.12971497 78.16108704]
[135.46212769 91.75889587]
[148.21960449 99.64856720]
[160.97708130 107.53823853]
[171.44601440 104.42527008]
[181.68367004 107.54328918]
[188.35952759 115.62434387]
[189.44256592 125.82892609]
[201.90515137 134.17663574]
[214.36772156 142.52433777]
[226.83030701 150.87203979]
[239.29287720 159.21974182]
[251.75546265 167.56744385]
[258.37322998 168.39456177]
[262.88201904 171.92749023]
[264.51141357 176.45140076]
[276.66265869 185.24613953]
[288.81390381 194.04086304]
[300.96514893 202.83558655]
[313.11639404 211.63031006]
[328.83218384 213.45370483]
[334.60583496 227.18376160]
[346.75708008 235.97848511]
[358.90832520 244.77320862]
[371.05957031 253.56794739]
[386.46597290 251.26997375]
[398.66378784 260.36218262]
[400.75961304 275.06396484]
[412.91085815 283.85870361]
[429.28692627 288.24737549]
[429.60308838 305.19839478]
[413.40206909 310.19470215]
[404.11611938 296.00994873]
[391.96487427 287.21520996]
[377.34432983 289.81820679]
[364.89596558 281.07220459]
[362.26486206 265.71917725]
[350.11361694 256.92446899]
[337.96237183 248.12973022]
[325.81112671 239.33500671]
[310.96447754 238.14067078]
[304.32168579 223.78155518]
[292.17044067 214.98683167]
[280.01919556 206.19210815]
[267.86795044 197.39738464]
[255.71669006 188.60264587]
[243.40776062 180.03002930]
[230.94517517 171.68232727]
[218.48260498 163.33460999]
[206.02001953 154.98690796]
[193.55744934 146.63920593]
[181.09486389 138.29150391]
[161.78015137 138.45762634]
[153.08740234 120.29570770]
[140.32994080 112.40604401]
[127.57246399 104.51637268]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 60]
[5 59]
[7 57]
[8 56]
[9 55]
[10 54]
[13 50]
[14 49]
[15 48]
[16 47]
[17 46]
[18 45]
[23 40]
[24 39]
[25 38]
[26 37]
[64 117]
[65 116]
[67 114]
[68 113]
[69 111]
[70 110]
[71 109]
[73 107]
[74 106]
[75 105]
[76 104]
[77 103]
[78 102]
[82 101]
[83 100]
[84 99]
[85 98]
[86 97]
[118 172]
[119 171]
[120 170]
[124 168]
[125 167]
[126 166]
[127 165]
[128 164]
[129 163]
[132 162]
[133 161]
[134 160]
[135 159]
[136 158]
[138 156]
[139 155]
[140 154]
[141 153]
[144 150]
[145 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
