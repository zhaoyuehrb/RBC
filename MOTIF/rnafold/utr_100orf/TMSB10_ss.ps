%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:33:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGGCGCCGCUCUUUUGUUUCUUGCUGCAGCAACGCGAGUGGGAGCACCAGGAUCUCGGGCUCGGAACGAGACUGCACGGAUUGUUUUAAGAAAAUGGCAGACAAACCAGACAUGGGGGAAAUCGCCAGCUUCGAUAAGGCCAAGCUGAAGAAAACGGAGACGCAGGAGAAGAACACCCUGCCGACCAAAGAGA\
) } def
/len { sequence length } bind def

/coor [
[179.21011353 619.39801025]
[176.34274292 634.12139893]
[173.47535706 648.84478760]
[170.60798645 663.56817627]
[173.51502991 680.27105713]
[158.26968384 687.68829346]
[146.92196655 675.09204102]
[155.88459778 660.70080566]
[158.75196838 645.97741699]
[161.61935425 631.25402832]
[164.48672485 616.53063965]
[167.23602295 601.78472900]
[169.86705017 587.01727295]
[172.49807739 572.24987793]
[175.12910461 557.48242188]
[177.76013184 542.71496582]
[180.39115906 527.94750977]
[213.80952454 502.87228394]
[210.23774719 488.30374146]
[206.66596985 473.73519897]
[203.09419250 459.16665649]
[199.52241516 444.59811401]
[195.95065308 430.02957153]
[178.59829712 421.19766235]
[173.23411560 402.16363525]
[183.73995972 385.05096436]
[179.47204590 370.67095947]
[168.43328857 360.67120361]
[171.92425537 345.23992920]
[167.65634155 330.85992432]
[163.38842773 316.47988892]
[159.12051392 302.09988403]
[145.03958130 297.31814575]
[136.37181091 285.01635742]
[136.61262512 269.79153442]
[145.87924194 257.48559570]
[141.61132812 243.10559082]
[126.50161743 235.73353577]
[121.29043579 219.39462280]
[129.66468811 204.04264832]
[125.16683960 189.73287964]
[113.96922302 179.91133118]
[117.21241760 164.42611694]
[112.71456909 150.11634827]
[108.21672058 135.80657959]
[103.71887207 121.49681091]
[99.22103119 107.18704987]
[95.82676697 111.35128021]
[90.47113800 114.02894592]
[83.73443604 114.55062866]
[76.39464569 112.45356750]
[69.35881805 107.53479767]
[63.58121490 99.88264465]
[51.41775894 91.10481262]
[39.25430298 82.32698059]
[27.09084702 73.54914856]
[14.92739010 64.77131653]
[2.55642581 56.28844070]
[-10.01489544 48.10541534]
[-22.58621788 39.92239380]
[-38.37294388 38.87845612]
[-44.81855392 25.45074654]
[-57.38987350 17.26772308]
[-69.96119690 9.08469963]
[-82.53251648 0.90167594]
[-99.10559845 -2.67175817]
[-100.25969696 -19.58637810]
[-84.32559204 -25.37781143]
[-74.34949493 -11.66964531]
[-61.77817154 -3.48662210]
[-49.20685196 4.69640160]
[-36.63552856 12.87942505]
[-21.74798775 13.33805656]
[-14.40319347 27.35107231]
[-1.83187234 35.53409576]
[10.73944950 43.71711731]
[14.25727844 43.34282684]
[18.13105774 44.66166306]
[21.55944443 47.82218552]
[23.70522118 52.60786438]
[35.86867905 61.38569260]
[48.03213501 70.16352844]
[60.19559097 78.94136047]
[72.35904694 87.71919250]
[79.65739441 85.99173737]
[73.19127655 72.45699310]
[66.72515869 58.92224884]
[56.33223343 48.10618973]
[55.37033463 33.13706207]
[64.29344177 21.07977676]
[78.89016724 17.62495232]
[92.27134705 24.40314484]
[98.12154388 38.21528244]
[93.67980957 52.54232788]
[93.96695709 67.53958130]
[94.25409698 82.53682709]
[101.55244446 80.80937958]
[108.49051666 67.51039124]
[115.42859650 54.21139908]
[122.36666870 40.91241074]
[123.56444550 31.84399796]
[129.52401733 27.45718575]
[136.67434692 14.27110767]
[127.13761902 -0.47719061]
[126.38033295 -17.93486786]
[134.52081299 -33.29634476]
[149.24046326 -42.37866211]
[166.44338989 -42.76038742]
[173.16741943 -56.16886902]
[179.89144897 -69.57735443]
[178.38858032 -85.90749359]
[191.93382263 -95.15185547]
[206.59300232 -87.80062866]
[207.28601074 -71.41613007]
[193.29992676 -62.85332489]
[186.57589722 -49.44483948]
[179.85186768 -36.03635788]
[187.90313721 -26.28248024]
[191.67720032 -14.16215324]
[190.57861328 -1.46853530]
[184.73561096 9.90633297]
[174.98623657 18.25354385]
[162.75833130 22.30403328]
[149.86042786 21.42144394]
[142.71009827 34.60752487]
[135.66566467 47.85048294]
[128.72758484 61.14947128]
[121.78951263 74.44846344]
[114.85143280 87.74745178]
[113.53079224 102.68920135]
[118.02864075 116.99897003]
[122.52648926 131.30873108]
[127.02433014 145.61849976]
[131.52218628 159.92826843]
[143.04151917 170.77333069]
[139.47660828 185.23503113]
[143.97445679 199.54479980]
[156.56028748 204.36268616]
[163.96194458 215.39091492]
[163.66090393 228.47457886]
[155.99134827 238.83767700]
[160.25926208 253.21768188]
[174.73880005 258.47589111]
[183.24630737 271.10427856]
[182.69300842 286.14282227]
[173.50053406 297.83197021]
[177.76844788 312.21197510]
[182.03636169 326.59201050]
[186.30427551 340.97201538]
[197.64831543 352.00033569]
[193.85206604 366.40304565]
[198.11997986 380.78305054]
[208.49136353 383.37573242]
[216.78346252 389.99441528]
[221.53764343 399.38882446]
[221.95346069 409.82858276]
[218.02282715 419.42178345]
[210.51919556 426.45779419]
[214.09095764 441.02633667]
[217.66273499 455.59487915]
[221.23451233 470.16342163]
[224.80628967 484.73196411]
[228.37806702 499.30050659]
[235.31613159 512.59948730]
[245.22137451 523.86389160]
[255.12661743 535.12823486]
[265.03186035 546.39263916]
[274.93710327 557.65698242]
[289.98089600 554.56188965]
[304.55169678 559.41857910]
[314.73004150 570.92059326]
[317.77798462 585.97399902]
[312.87567139 600.52954102]
[301.34179688 610.67175293]
[286.27890015 613.67254639]
[271.73883057 608.72460938]
[261.63278198 597.15899658]
[258.67926025 582.08673096]
[263.67272949 567.56225586]
[253.76748657 556.29785156]
[243.86224365 545.03350830]
[233.95700073 533.76910400]
[224.05175781 522.50476074]
[216.82847595 524.52319336]
[220.86535645 538.96978760]
[224.90200806 553.41638184]
[210.45529175 557.45281982]
[206.41877747 543.00665283]
[202.38189697 528.56005859]
[195.15861511 530.57849121]
[192.52758789 545.34594727]
[189.89656067 560.11340332]
[187.26553345 574.88085938]
[184.63450623 589.64831543]
[182.00347900 604.41577148]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 11]
[2 10]
[3 9]
[4 8]
[12 195]
[13 194]
[14 193]
[15 192]
[16 191]
[17 190]
[18 163]
[19 162]
[20 161]
[21 160]
[22 159]
[23 158]
[26 152]
[27 151]
[29 149]
[30 148]
[31 147]
[32 146]
[36 142]
[37 141]
[40 137]
[41 136]
[43 134]
[44 133]
[45 132]
[46 131]
[47 130]
[53 84]
[54 83]
[55 82]
[56 81]
[57 80]
[58 76]
[59 75]
[60 74]
[62 72]
[63 71]
[64 70]
[65 69]
[97 129]
[98 128]
[99 127]
[100 126]
[102 125]
[103 124]
[108 117]
[109 116]
[110 115]
[164 183]
[165 182]
[166 181]
[167 180]
[168 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
