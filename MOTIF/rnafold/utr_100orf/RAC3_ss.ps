%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:12:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCUCCGGCCGAUCGCUCGGCGCUCGGGUCCGCGGCCGCUGCGGCGCCGGGCAUUUCUCCGCAGCUCGGCUCGCGGCCGCGCCCGCCGCCGCCCGGCCCGCGCCCAUGCAGGCCAUCAAGUGCGUGGUGGUCGGCGACGGCGCCGUGGGGAAGACAUGCUUGCUGAUCAGCUACACGACCAACGCCUUCCCCGGAGAGUACAUCC\
) } def
/len { sequence length } bind def

/coor [
[84.35536957 216.87484741]
[91.91385651 203.56590271]
[104.79779816 195.30378723]
[103.43377686 180.36593628]
[102.06975555 165.42808533]
[100.70572662 150.49023438]
[99.34170532 135.55238342]
[88.00735474 132.77215576]
[78.39000702 126.55470276]
[71.59029388 139.92497253]
[64.79058075 153.29522705]
[57.99086380 166.66548157]
[51.19115067 180.03575134]
[52.60169220 196.37411499]
[39.00440216 205.54176331]
[24.38701057 198.10780334]
[23.78663445 181.71965027]
[37.82088852 173.23603821]
[44.62060547 159.86576843]
[51.42031860 146.49551392]
[58.22003174 133.12524414]
[65.01974487 119.75498962]
[60.21162796 105.54647064]
[46.69004822 99.05287170]
[31.93789291 104.05403900]
[18.31759071 97.27597809]
[13.64065552 83.18123627]
[0.11907476 76.68762970]
[-13.40250587 70.19403076]
[-26.92408562 63.70042801]
[-42.71362686 64.70094299]
[-50.83695221 52.21651840]
[-64.35852814 45.72291565]
[-73.45227051 44.82818985]
[-78.03490448 39.02679062]
[-91.45638275 32.32873154]
[-104.87785339 25.63067055]
[-118.29933167 18.93260956]
[-131.72080994 12.23454952]
[-144.18103027 15.57499599]
[-155.22288513 9.71739769]
[-159.18107605 -1.71531653]
[-172.49935913 -8.61629200]
[-185.81764221 -15.51726723]
[-199.13591003 -22.41824341]
[-212.45419312 -29.31921959]
[-225.77247620 -36.22019577]
[-241.58509827 -35.69933701]
[-249.32579041 -48.42454529]
[-262.64407349 -55.32551956]
[-275.96234131 -62.22649384]
[-289.28063965 -69.12747192]
[-302.59890747 -76.02845001]
[-312.77011108 -68.06504059]
[-325.15298462 -64.55376434]
[-337.89749146 -65.98246002]
[-349.11346436 -72.10366821]
[-357.15090942 -81.97660828]
[-360.84268188 -94.11162567]
[-359.67391968 -106.69490051]
[-372.77664185 -113.99689484]
[-385.87933350 -121.29888916]
[-398.98205566 -128.60087585]
[-412.13977051 -135.80323792]
[-425.35180664 -142.90553284]
[-438.56381226 -150.00784302]
[-455.37780762 -152.18183899]
[-457.94332886 -168.94053650]
[-442.54977417 -176.04508972]
[-431.46151733 -163.21984863]
[-418.24948120 -156.11755371]
[-405.03747559 -149.01524353]
[-397.65518188 -148.61692810]
[-391.68005371 -141.70358276]
[-378.57733154 -134.40159607]
[-365.47463989 -127.09960175]
[-352.37191772 -119.79760742]
[-337.92687988 -129.16189575]
[-320.63989258 -129.92607117]
[-305.26748657 -121.78962708]
[-296.08505249 -106.91344452]
[-295.69793701 -89.34672546]
[-282.37966919 -82.44574738]
[-269.06137085 -75.54477692]
[-255.74310303 -68.64379883]
[-242.42481995 -61.74282074]
[-227.56480408 -62.75728226]
[-218.87149048 -49.53847122]
[-205.55322266 -42.63749695]
[-192.23493958 -35.73652267]
[-178.91665649 -28.83554649]
[-165.59838867 -21.93457031]
[-152.28010559 -15.03359509]
[-134.81929016 -16.77717209]
[-125.02274323 -1.18692517]
[-111.60127258 5.51113462]
[-98.17979431 12.20919514]
[-84.75832367 18.90725517]
[-71.33684540 25.60531425]
[-57.86492920 32.20133591]
[-44.34334946 38.69493866]
[-29.52096367 37.22995758]
[-20.43048477 50.17884827]
[-6.90890408 56.67245102]
[6.61267662 63.16604996]
[20.13425636 69.65965271]
[34.05883789 64.49809265]
[47.86414719 70.89091492]
[53.18365097 85.53128815]
[66.70523071 92.02488708]
[80.79074097 70.36955261]
[106.70578003 64.23519897]
[114.88491058 51.66134644]
[123.06404114 39.08749008]
[131.24316406 26.51363564]
[139.42230225 13.93978119]
[147.60142517 1.36592531]
[155.78056335 -11.20793056]
[163.95968628 -23.78178596]
[160.44073486 -39.18933487]
[168.91787720 -52.52776337]
[184.36177063 -55.88361359]
[197.60983276 -47.26592636]
[200.80221558 -31.78741837]
[192.04493713 -18.63121414]
[176.53353882 -15.60265636]
[168.35441589 -3.02880073]
[160.17527771 9.54505444]
[151.99615479 22.11890984]
[143.81701660 34.69276428]
[135.63789368 47.26662064]
[127.45876312 59.84047699]
[119.27963257 72.41432953]
[129.35038757 83.53099060]
[142.66865540 76.63001251]
[155.98693848 69.72903442]
[169.30522156 62.82806015]
[177.68209839 48.72983170]
[194.07432556 49.20583344]
[201.61900330 63.76639175]
[192.55479431 77.43286133]
[176.20619202 76.14633942]
[162.88790894 83.04731750]
[149.56964111 89.94828796]
[136.25135803 96.84926605]
[136.04658508 102.16449738]
[135.07258606 107.35256958]
[133.36203003 112.30364990]
[146.78350830 119.00170898]
[160.20498657 125.69976807]
[173.62646484 132.39782715]
[187.04792786 139.09588623]
[200.46940613 145.79394531]
[213.89088440 152.49200439]
[228.78788757 144.48422241]
[245.35820007 146.90841675]
[257.10150146 158.61347961]
[259.53051758 174.84709167]
[273.05209351 181.34068298]
[288.84164429 180.34017944]
[296.96496582 192.82460022]
[310.48654175 199.31819153]
[324.00811768 205.81179810]
[333.10186768 206.70652771]
[337.68450928 212.50793457]
[351.10595703 219.20599365]
[364.80984497 211.92701721]
[380.17025757 214.12648010]
[391.28079224 224.95863342]
[393.86923218 240.25828552]
[386.94027710 254.14242554]
[373.15826416 261.27230835]
[357.82260132 258.90634155]
[346.83023071 247.95429993]
[344.40789795 232.62745667]
[330.98641968 225.92939758]
[317.51452637 219.33337402]
[303.99295044 212.83978271]
[290.47134399 206.34617615]
[275.64898682 207.81115723]
[266.55850220 194.86227417]
[253.03691101 188.36866760]
[241.92445374 195.77148438]
[228.49743652 196.72352600]
[216.25627136 190.86936951]
[208.44522095 179.64196777]
[207.19282532 165.91348267]
[193.77134705 159.21542358]
[180.34986877 152.51736450]
[166.92840576 145.81930542]
[153.50692749 139.12124634]
[140.08544922 132.42318726]
[126.66397095 125.72512817]
[114.27955627 134.18835449]
[115.64358521 149.12620544]
[117.00760651 164.06405640]
[118.37162781 179.00192261]
[119.73564911 193.93977356]
[133.90292358 199.73175049]
[143.74687195 211.45162964]
[147.00541687 226.40623474]
[142.92979431 241.15913391]
[132.45654297 252.32019043]
[117.99233246 257.32470703]
[102.86093140 255.02265930]
[90.53943634 245.94305420]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 198]
[4 197]
[5 196]
[6 195]
[7 194]
[9 22]
[10 21]
[11 20]
[12 19]
[13 18]
[23 110]
[24 109]
[27 106]
[28 105]
[29 104]
[30 103]
[32 101]
[33 100]
[35 99]
[36 98]
[37 97]
[38 96]
[39 95]
[42 93]
[43 92]
[44 91]
[45 90]
[46 89]
[47 88]
[49 86]
[50 85]
[51 84]
[52 83]
[53 82]
[60 77]
[61 76]
[62 75]
[63 74]
[64 72]
[65 71]
[66 70]
[112 133]
[113 132]
[114 131]
[115 130]
[116 129]
[117 128]
[118 127]
[119 126]
[134 145]
[135 144]
[136 143]
[137 142]
[148 193]
[149 192]
[150 191]
[151 190]
[152 189]
[153 188]
[154 187]
[158 182]
[159 181]
[161 179]
[162 178]
[163 177]
[165 176]
[166 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
