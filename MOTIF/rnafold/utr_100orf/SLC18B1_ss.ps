%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:13:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCGGGCGGAUCGCUGCCUGCAGGGAGUCGGGGAUGCCAGGUUCCAGCUGAGCAGCGGCCGCCCGCCAGAGUGCCAGUGGCUCCUUGGAGGUCGAGUCCAAGGACGUGGCUUGAAGCCGGGAGCUGGGGCGCCGGAGUCCACGCACCGGGGAUGGAGGCGCUGGGUGACCUGGAGGGACCACGCGCACCAGGAGGUGAUGAUCCUGCAGGAAGUGCAGGAGAGACCCCCGGGUGGCUUUCGAGAGAACAGG\
) } def
/len { sequence length } bind def

/coor [
[94.04934692 115.08019257]
[82.71310425 124.90310669]
[71.37686157 134.72601318]
[66.95650482 142.68807983]
[59.83832550 144.59945679]
[48.38098526 154.28083801]
[36.92364502 163.96223450]
[25.46630287 173.64363098]
[14.00896168 183.32501221]
[2.55162072 193.00640869]
[-1.96726024 200.91296387]
[-9.10862064 202.73580933]
[-20.68529320 212.27418518]
[-32.26196671 221.81256104]
[-43.83863831 231.35093689]
[-55.41530991 240.88932800]
[-66.99198151 250.42770386]
[-78.56865692 259.96606445]
[-79.93896484 277.41864014]
[-93.25392914 288.25637817]
[-109.95028687 286.14007568]
[-121.40763092 295.82147217]
[-123.25704956 308.56851196]
[-132.97648621 316.39691162]
[-145.02592468 315.54357910]
[-156.60260010 325.08197021]
[-168.17927551 334.62033081]
[-179.75593567 344.15872192]
[-191.33261108 353.69711304]
[-202.90928650 363.23547363]
[-208.63987732 377.98236084]
[-223.38258362 380.10406494]
[-234.95925903 389.64245605]
[-240.19616699 405.18292236]
[-256.32427979 408.15219116]
[-266.75234985 395.49566650]
[-260.75289917 380.23333740]
[-244.49763489 378.06576538]
[-232.92097473 368.52740479]
[-228.01841736 354.46273804]
[-212.44766235 351.65881348]
[-200.87098694 342.12042236]
[-189.29432678 332.58206177]
[-177.71765137 323.04367065]
[-166.14097595 313.50527954]
[-154.56430054 303.96691895]
[-149.29357910 287.21612549]
[-131.08901978 284.36410522]
[-119.63167572 274.68273926]
[-120.36285400 261.83395386]
[-113.46417236 250.73999023]
[-101.25916290 245.56088257]
[-88.10703278 248.38940430]
[-76.53035736 238.85102844]
[-64.95368958 229.31265259]
[-53.37701416 219.77427673]
[-41.80034256 210.23588562]
[-30.22367096 200.69750977]
[-18.64699936 191.15913391]
[-7.12977028 181.54907227]
[4.32757092 171.86767578]
[15.78491211 162.18627930]
[27.24225235 152.50489807]
[38.69959259 142.82350159]
[50.15693665 133.14210510]
[61.55394745 123.38977051]
[72.89019012 113.56686401]
[84.22643280 103.74394989]
[69.83779144 107.98268890]
[56.32123184 101.47864532]
[50.65538406 87.58986664]
[55.76554108 73.48715973]
[69.01331329 66.45178986]
[83.55885315 70.11612701]
[91.89270782 82.59027100]
[89.48182678 67.78527832]
[87.07094574 52.98029327]
[84.66005707 38.17530823]
[82.24917603 23.37031937]
[79.83829498 8.56533337]
[69.98354340 -3.81184316]
[75.57465363 -17.61723137]
[73.16377258 -32.42221832]
[70.75289154 -47.22720718]
[68.34200287 -62.03219223]
[52.42623901 -64.47621155]
[38.41769409 -73.97023773]
[29.41046906 -89.25749207]
[27.73900032 -107.74678040]
[34.41802979 -125.94618988]
[25.69190788 -138.14680481]
[16.96578407 -150.34739685]
[8.23966312 -162.54800415]
[-0.48645943 -174.74861145]
[-9.21258163 -186.94921875]
[-23.53403091 -193.67280579]
[-24.64469719 -208.52595520]
[-33.37081909 -220.72654724]
[-42.09693909 -232.92715454]
[-57.24382401 -239.21238708]
[-59.10552597 -255.50550842]
[-45.76689148 -265.04556274]
[-30.94956017 -258.01858521]
[-29.89633369 -241.65328979]
[-21.17021179 -229.45268250]
[-12.44408989 -217.25207520]
[1.25320876 -211.40115356]
[2.98802447 -195.67533875]
[11.71414661 -183.47473145]
[20.44026947 -171.27412415]
[29.16639137 -159.07353210]
[37.89251328 -146.87292480]
[46.61863708 -134.67231750]
[53.94225311 -136.28929138]
[50.70851517 -150.93658447]
[65.35585022 -154.17008972]
[68.58948517 -139.52325439]
[75.91310120 -141.14024353]
[78.69088745 -155.88079834]
[81.46866608 -170.62135315]
[84.24644470 -185.36190796]
[77.63655090 -196.41706848]
[80.23560333 -208.62348938]
[90.12102509 -215.56581116]
[93.08162689 -230.27073669]
[84.59877014 -243.33514404]
[87.81071472 -258.20584106]
[100.31790924 -266.21246338]
[103.27851105 -280.91738892]
[106.23911285 -295.62231445]
[109.19970703 -310.32723999]
[100.24231720 -323.34802246]
[103.19768524 -338.87350464]
[116.31243896 -347.69274902]
[131.80583191 -344.57339478]
[140.48591614 -331.36611938]
[137.20292664 -315.90658569]
[123.90464020 -307.36663818]
[120.94403839 -292.66171265]
[117.98343658 -277.95678711]
[115.02283478 -263.25186157]
[123.45716858 -251.02902222]
[120.66417694 -236.07395935]
[107.78655243 -227.31013489]
[104.82595062 -212.60520935]
[111.30860138 -196.28514099]
[98.98699951 -182.58412170]
[96.20922089 -167.84356689]
[93.43143463 -153.10301208]
[90.65365601 -138.36245728]
[104.96482086 -123.89455414]
[111.01928711 -105.37201691]
[108.26409912 -86.95288849]
[98.04086304 -72.42848206]
[83.14699554 -64.44307709]
[85.55787659 -49.63808823]
[87.96875763 -34.83310318]
[90.37964630 -20.02811432]
[100.06195068 -8.70989037]
[94.64328003 6.15444994]
[97.05416107 20.95943642]
[99.46504974 35.76442337]
[101.87593079 50.56941223]
[104.28681183 65.37439728]
[106.69769287 80.17938232]
[122.73995209 98.45038605]
[136.30599976 104.85055542]
[149.87538147 97.55821228]
[164.96049500 99.63000488]
[175.80485535 110.06379700]
[178.39494324 124.70720673]
[191.96099854 131.10737610]
[207.74327087 129.99795532]
[215.95251465 142.42605591]
[229.51856995 148.82621765]
[243.08462524 155.22637939]
[256.65069580 161.62655640]
[270.21673584 168.02671814]
[279.28601074 168.85273743]
[283.91076660 174.59150696]
[297.39630127 181.15963745]
[310.88183594 187.72776794]
[324.36737061 194.29589844]
[340.16217041 193.38253784]
[348.21649170 205.91159058]
[361.70202637 212.47972107]
[359.19888306 197.69004822]
[369.10559082 186.42695618]
[384.09378052 187.02215576]
[393.07614136 199.03536987]
[389.40808105 213.57997131]
[375.80126953 219.89677429]
[388.85330200 227.28897095]
[397.83593750 228.78776550]
[402.02069092 234.85487366]
[414.97988892 242.40856934]
[427.93911743 249.96228027]
[438.58813477 243.47413635]
[450.91241455 242.12628174]
[462.57565308 246.11267090]
[471.39291382 254.62188721]
[475.73995972 266.00140381]
[474.85214233 278.07827759]
[487.61978149 285.95147705]
[500.38745117 293.82464600]
[513.15509033 301.69781494]
[525.92272949 309.57101440]
[538.69042969 317.44418335]
[551.45806885 325.31738281]
[567.33715820 323.02975464]
[578.92700195 334.12280273]
[577.33679199 350.08685303]
[563.78649902 358.67565918]
[548.67065430 353.30062866]
[543.58489990 338.08502197]
[530.81719971 330.21185303]
[518.04956055 322.33865356]
[505.28192139 314.46548462]
[492.51425171 306.59228516]
[479.74661255 298.71911621]
[466.97894287 290.84594727]
[450.94952393 298.30761719]
[433.50030518 294.60061646]
[421.68173218 281.02905273]
[420.38543701 262.92150879]
[407.42620850 255.36779785]
[394.46697998 247.81410217]
[381.46109009 240.34100342]
[368.40908813 232.94879150]
[355.13391113 225.96525574]
[341.64837646 219.39714050]
[326.81811523 220.78028870]
[317.79922485 207.78143311]
[304.31369019 201.21330261]
[290.82815552 194.64517212]
[277.34262085 188.07705688]
[263.81655884 181.59277344]
[250.25051880 175.19261169]
[236.68446350 168.79243469]
[223.11840820 162.39227295]
[209.55235291 155.99209595]
[194.74041748 157.55929565]
[185.56083679 144.67343140]
[171.99478149 138.27325439]
[159.04629517 145.58590698]
[144.09788513 143.85124207]
[132.90641785 133.52630615]
[129.90583801 118.41661072]
[116.33978271 112.01644135]
[123.15983582 125.37634277]
[116.21850586 138.67362976]
[101.35822296 140.71617126]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 68]
[2 67]
[3 66]
[5 65]
[6 64]
[7 63]
[8 62]
[9 61]
[10 60]
[12 59]
[13 58]
[14 57]
[15 56]
[16 55]
[17 54]
[18 53]
[21 49]
[22 48]
[25 46]
[26 45]
[27 44]
[28 43]
[29 42]
[30 41]
[32 39]
[33 38]
[75 165]
[76 164]
[77 163]
[78 162]
[79 161]
[80 160]
[82 158]
[83 157]
[84 156]
[85 155]
[90 113]
[91 112]
[92 111]
[93 110]
[94 109]
[95 108]
[97 106]
[98 105]
[99 104]
[118 150]
[119 149]
[120 148]
[121 147]
[124 145]
[125 144]
[128 141]
[129 140]
[130 139]
[131 138]
[166 249]
[167 248]
[171 244]
[172 243]
[174 241]
[175 240]
[176 239]
[177 238]
[178 237]
[180 236]
[181 235]
[182 234]
[183 233]
[185 231]
[186 230]
[192 229]
[193 228]
[195 227]
[196 226]
[197 225]
[203 221]
[204 220]
[205 219]
[206 218]
[207 217]
[208 216]
[209 215]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
