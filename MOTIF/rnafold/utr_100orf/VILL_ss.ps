%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:18:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGUACAGGUAGCCAGGUGUCGGUCUCCAGCCUGAGAACUCUGGCUGUUGUUCCUUGUGUCGUCCCAUAUUCCUGCCUGGCCUGCGAUGGACAUCAGCAAGGGCCUCCCAGGCAUGCAGGGAGGCCUCCACAUAUGGAUCUCUGAGAACCGGAAGAUGGUGCCGGUACCCGAGGGGGCUUACGGGA\
) } def
/len { sequence length } bind def

/coor [
[144.09786987 446.84887695]
[156.86636353 438.97708130]
[171.03959656 443.88955688]
[167.05598450 429.42819214]
[163.07237244 414.96685791]
[159.08876038 400.50549316]
[148.24926758 390.29006958]
[152.04376221 374.93063354]
[148.06015015 360.46926880]
[144.07653809 346.00793457]
[140.09292603 331.54656982]
[135.27532959 325.92114258]
[136.16604614 316.80874634]
[132.42593384 302.28253174]
[128.68582153 287.75628662]
[114.30065155 283.89205933]
[103.71067047 273.27563477]
[99.83087921 258.68750000]
[103.80001831 244.01976013]
[114.64878845 233.23776245]
[110.90867615 218.71151733]
[107.16857147 204.18528748]
[103.42845917 189.65904236]
[99.68834686 175.13281250]
[95.82634735 160.63850403]
[91.84273529 146.17713928]
[87.85912323 131.71578979]
[74.66386414 124.58240509]
[60.38252258 129.16970825]
[46.10118103 133.75700378]
[31.81983948 138.34429932]
[17.53849792 142.93159485]
[6.76571846 154.51855469]
[-7.71800184 151.04420471]
[-21.99934387 155.63150024]
[-32.60651779 168.13829041]
[-48.69072342 164.93978882]
[-53.70590591 149.32633972]
[-42.49287796 137.35971069]
[-26.58663940 141.35015869]
[-12.30529785 136.76286316]
[-2.55401516 125.50401306]
[12.95120239 128.65025330]
[27.23254395 124.06295013]
[41.51388550 119.47565460]
[55.79522705 114.88835907]
[70.07656860 110.30106354]
[72.72704315 103.28501129]
[57.92438889 105.71020508]
[48.42287064 94.10326385]
[53.72412109 80.07127380]
[68.52682495 77.64640045]
[78.02798462 89.25290680]
[80.67845917 82.23685455]
[72.99732971 69.35274506]
[65.31620789 56.46863174]
[57.63508606 43.58451843]
[49.84600830 30.76538277]
[41.94952393 18.01212502]
[26.82595253 14.28179550]
[18.99947166 1.23569047]
[22.64897346 -13.15933418]
[14.75249100 -25.91259193]
[6.85600853 -38.66584778]
[-1.04047382 -51.41910553]
[-17.62959671 -48.44603729]
[-34.05426407 -52.05606842]
[-47.80756760 -61.66935349]
[-56.80139923 -75.79199219]
[-59.68347168 -92.24810028]
[-56.04056931 -108.51505280]
[-46.45753860 -122.11017609]
[-54.77799225 -134.59095764]
[-70.16418457 -139.13461304]
[-76.07122040 -154.05059814]
[-67.96773529 -167.89663696]
[-52.07002258 -170.05125427]
[-40.57345200 -158.86160278]
[-42.29720688 -142.91142273]
[-33.97675323 -130.43063354]
[-21.13959122 -133.83326721]
[-7.85612488 -133.10772705]
[4.57662630 -128.31077576]
[14.94036007 -119.89736176]
[22.21487427 -108.67758942]
[25.67848396 -95.73867035]
[24.97960472 -82.33959961]
[20.17238235 -69.78863525]
[11.71278286 -59.31558609]
[19.60926628 -46.56233215]
[27.50574875 -33.80907440]
[35.40222931 -21.05581665]
[49.91485214 -17.90630150]
[58.10468292 -5.08517361]
[54.70278168 10.11564255]
[62.59926224 22.86890030]
[68.80657196 26.90919495]
[70.51919556 35.90339661]
[78.20031738 48.78750610]
[85.88144684 61.67161942]
[93.56256866 74.55573273]
[108.51972198 75.68864441]
[118.05387115 64.10848999]
[127.58802032 52.52833939]
[137.12217712 40.94818115]
[146.65632629 29.36802864]
[156.19047546 17.78787231]
[165.72462463 6.20771790]
[175.25877380 -5.37243700]
[170.44297791 -20.02889442]
[174.33767700 -34.95655060]
[185.70007324 -45.39204407]
[200.90446472 -48.00544739]
[215.09919739 -41.96283340]
[223.75477600 -29.19237709]
[224.10923767 -13.76908684]
[216.04946899 -0.61447620]
[202.14732361 6.07386541]
[186.83892822 4.16171312]
[177.30477905 15.74186802]
[167.77062988 27.32202339]
[158.23648071 38.90217590]
[148.70233154 50.48233414]
[139.16818237 62.06248856]
[129.63403320 73.64263916]
[120.09987640 85.22280121]
[128.20948792 97.84159851]
[142.70379639 93.97960663]
[157.19810486 90.11760712]
[171.69241333 86.25560760]
[182.91619873 74.29907227]
[198.81883240 78.30381012]
[203.04107666 94.15010071]
[191.23942566 105.53662872]
[175.55441284 100.74991608]
[161.06010437 104.61191559]
[146.56579590 108.47391510]
[132.07148743 112.33590698]
[125.41056824 115.78295898]
[139.98205566 119.34268188]
[134.29747009 133.22380066]
[119.41049194 135.06631470]
[108.98139954 124.28511810]
[102.32048035 127.73217010]
[106.30409241 142.19352722]
[110.28770447 156.65489197]
[115.59439850 164.11596680]
[114.21458435 171.39270020]
[117.95469666 185.91893005]
[121.69480896 200.44517517]
[125.43491364 214.97140503]
[129.17503357 229.49765015]
[143.88180542 233.69978333]
[154.44091797 244.62689209]
[158.08860779 259.27478027]
[153.94241333 273.68536377]
[143.21206665 284.01617432]
[146.95217896 298.54241943]
[150.69229126 313.06863403]
[154.55427551 327.56295776]
[158.53788757 342.02432251]
[162.52149963 356.48565674]
[166.50511169 370.94702148]
[177.62954712 382.19680786]
[173.55012512 396.52188110]
[177.53373718 410.98324585]
[181.51734924 425.44458008]
[185.50096130 439.90594482]
[190.08825684 454.18728638]
[195.27113342 468.26342773]
[200.45402527 482.33956909]
[205.75497437 496.37167358]
[211.17359924 510.35876465]
[216.59222412 524.34582520]
[227.95202637 536.93121338]
[219.00320435 551.33105469]
[202.68884277 546.71820068]
[202.60513306 529.76446533]
[197.18650818 515.77740479]
[191.76788330 501.79028320]
[186.40867615 496.67819214]
[186.37788391 487.52246094]
[181.19500732 473.44631958]
[176.01211548 459.37017822]
[167.35113525 471.61712646]
[152.38699341 472.65371704]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 168]
[4 167]
[5 166]
[6 165]
[8 163]
[9 162]
[10 161]
[11 160]
[13 159]
[14 158]
[15 157]
[20 152]
[21 151]
[22 150]
[23 149]
[24 148]
[25 146]
[26 145]
[27 144]
[28 47]
[29 46]
[30 45]
[31 44]
[32 43]
[34 41]
[35 40]
[54 101]
[55 100]
[56 99]
[57 98]
[58 96]
[59 95]
[62 92]
[63 91]
[64 90]
[65 89]
[72 80]
[73 79]
[102 126]
[103 125]
[104 124]
[105 123]
[106 122]
[107 121]
[108 120]
[109 119]
[127 138]
[128 137]
[129 136]
[130 135]
[169 184]
[170 183]
[171 182]
[172 180]
[173 179]
[174 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
