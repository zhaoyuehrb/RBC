%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:27:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUUCCGAUUCCGGGGUGGCCGGGUGGCGGCGGCGGCGCUCCGGUCGCGAUGGGCCAGAGGUGACGCCGCAGCCGCCGGGAGCCGCGAGGGACGGGGCAGGAUGAACCGGGCCAAGCCCACCACGGUGCGCCGGCCCAGCGCCGCGGCCAAACCCUCAGGGCACCCUCCCCCAGGAGACUUCAUUGCUCUGGGCUCAAAGG\
) } def
/len { sequence length } bind def

/coor [
[208.60299683 422.90457153]
[203.57025146 408.77404785]
[198.53750610 394.64355469]
[193.50474548 380.51303101]
[188.47200012 366.38250732]
[183.43925476 352.25201416]
[168.52359009 351.57931519]
[154.96511841 345.23004150]
[144.84310913 334.14358521]
[139.72302246 319.98828125]
[140.41435242 304.91061401]
[146.84286499 291.20962524]
[158.05712891 280.98632812]
[153.02438354 266.85580444]
[147.99163818 252.72531128]
[142.95887756 238.59478760]
[137.92613220 224.46427917]
[132.89338684 210.33375549]
[121.33437347 200.94023132]
[123.99298096 185.34399414]
[118.96023560 171.21348572]
[113.59923553 157.20420837]
[107.91291046 143.32380676]
[102.22658539 129.44340515]
[96.54026031 115.56299591]
[84.21592712 107.01251221]
[69.22318268 106.54601288]
[54.23043442 106.07951355]
[39.23768997 105.61301422]
[24.24494743 105.14651489]
[9.25220299 104.68002319]
[-4.78192282 111.98439026]
[-17.26240921 103.85501862]
[-32.25515366 103.38851929]
[-47.24789810 102.92202759]
[-62.24064255 102.45552826]
[-77.23338318 101.98902893]
[-92.22612762 101.52252960]
[-107.22612762 101.52252960]
[-122.21887207 101.98902893]
[-137.21162415 102.45552826]
[-150.76448059 110.61827087]
[-163.72622681 103.28052521]
[-178.71897888 103.74702454]
[-193.71171570 104.21352386]
[-208.70446777 104.68002319]
[-219.34281921 116.36766052]
[-235.13337708 117.02616119]
[-246.70790100 106.26483154]
[-247.19940186 90.46818542]
[-236.31631470 79.00809479]
[-220.51535034 78.68362427]
[-209.17095947 89.68727875]
[-194.17822266 89.22077942]
[-179.18547058 88.75428009]
[-164.19273376 88.28778076]
[-151.71224976 80.15840912]
[-137.67811584 87.46278381]
[-122.68537140 86.99628448]
[-107.69262695 86.52978516]
[-105.67488098 84.57392120]
[-102.75803375 83.30245209]
[-99.19996643 83.06288147]
[-95.37981415 84.10263824]
[-91.75963593 86.52978516]
[-76.76689148 86.99628448]
[-61.77414322 87.46278381]
[-46.78139877 87.92928314]
[-31.78865623 88.39577484]
[-16.79591179 88.86227417]
[-3.83416700 81.52453613]
[9.71870136 89.68727875]
[24.71144485 90.15377045]
[39.70418930 90.62026978]
[54.69693375 91.08676910]
[69.68967438 91.55326843]
[84.68241882 92.01976776]
[97.26671600 83.85670471]
[102.95304108 69.97629547]
[97.09208679 55.54414368]
[103.05656433 41.54843903]
[116.85153198 36.04986191]
[122.53786469 22.16945457]
[120.60955811 6.46619940]
[132.59410095 -2.37799382]
[138.28044128 -16.25839996]
[143.96676636 -30.13880730]
[141.06692505 -48.31982422]
[155.34887695 -58.51221848]
[160.81864929 -72.47937775]
[166.28842163 -86.44654083]
[164.11613464 -102.11790466]
[175.96168518 -111.14741516]
[181.43145752 -125.11457062]
[186.90122986 -139.08174133]
[184.72894287 -154.75309753]
[196.57450867 -163.78260803]
[202.04428101 -177.74977112]
[207.51405334 -191.71693420]
[199.32232666 -204.76306152]
[200.37104797 -219.95364380]
[210.04898071 -231.47760010]
[224.48413086 -235.05030823]
[229.95390320 -249.01747131]
[223.15830994 -258.78280640]
[221.93635559 -270.49649048]
[226.47677612 -281.23324585]
[235.54371643 -288.36782837]
[246.81050110 -290.21679688]
[252.71200562 -304.00708008]
[258.61352539 -317.79739380]
[264.51501465 -331.58767700]
[265.18795776 -348.52825928]
[281.65277100 -352.57125854]
[290.09567261 -337.86911011]
[278.30529785 -325.68618774]
[272.40380859 -311.89587402]
[266.50231934 -298.10559082]
[260.60079956 -284.31527710]
[268.42123413 -267.76943970]
[261.55313110 -250.46223450]
[243.92106628 -243.54769897]
[238.45129395 -229.58053589]
[246.62136841 -217.15524292]
[245.89976501 -202.12384033]
[236.35388184 -190.26089478]
[221.48121643 -186.24716187]
[216.01144409 -172.27999878]
[210.54167175 -158.31283569]
[213.10519409 -143.64048767]
[200.86839294 -133.61195374]
[195.39862061 -119.64479828]
[189.92884827 -105.67764282]
[192.49237061 -91.00529480]
[180.25558472 -80.97676849]
[174.78581238 -67.00960541]
[169.31604004 -53.04244614]
[173.87315369 -41.83222198]
[169.42480469 -30.14838791]
[157.84716797 -24.45248222]
[152.16084290 -10.57207489]
[146.47451782 3.30833220]
[148.80953979 18.01876640]
[136.41827393 27.85577965]
[130.73194885 41.73618698]
[136.70428467 55.33275604]
[131.13526917 69.49046326]
[116.83345032 75.66262054]
[111.14711761 89.54302979]
[114.51182556 96.30315399]
[114.19371033 103.69358826]
[110.42066956 109.87667084]
[116.10699463 123.75707245]
[121.79331970 137.63748169]
[127.47964478 151.51788330]
[131.62142944 154.71847534]
[133.88973999 158.78274536]
[134.26969910 162.85047913]
[133.09074402 166.18074036]
[138.12350464 180.31124878]
[150.04249573 190.71548462]
[147.02389526 205.30101013]
[152.05665588 219.43151855]
[157.08940125 233.56204224]
[162.12214661 247.69255066]
[167.15489197 261.82305908]
[172.18765259 275.95358276]
[187.33963013 276.78622437]
[200.98170471 283.33883667]
[211.04852295 294.58486938]
[216.02925110 308.78979492]
[215.19432068 323.77871704]
[208.70202637 337.26928711]
[197.56976318 347.21923828]
[202.60250854 361.34976196]
[207.63526917 375.48028564]
[212.66801453 389.61077881]
[217.70075989 403.74130249]
[222.73352051 417.87182617]
[239.58843994 418.46383667]
[254.89102173 425.46612549]
[266.30761719 437.77978516]
[272.10919189 453.49835205]
[271.43298340 470.20300293]
[264.41082764 485.33456421]
[252.14462280 496.58578491]
[257.61441040 510.55294800]
[263.08416748 524.52008057]
[274.48995972 537.06378174]
[265.59387207 551.49627686]
[249.26275635 546.94317627]
[249.11700439 529.98986816]
[243.64723206 516.02270508]
[238.17745972 502.05554199]
[224.92431641 502.64544678]
[212.11283875 499.11489868]
[200.99468994 491.79421997]
[192.66062927 481.38482666]
[187.93342590 468.89184570]
[187.28668213 455.52728271]
[190.79743958 442.59225464]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 179]
[2 178]
[3 177]
[4 176]
[5 175]
[6 174]
[13 167]
[14 166]
[15 165]
[16 164]
[17 163]
[18 162]
[20 160]
[21 159]
[22 155]
[23 154]
[24 153]
[25 152]
[26 77]
[27 76]
[28 75]
[29 74]
[30 73]
[31 72]
[33 70]
[34 69]
[35 68]
[36 67]
[37 66]
[38 65]
[39 60]
[40 59]
[41 58]
[43 56]
[44 55]
[45 54]
[46 53]
[78 149]
[79 148]
[82 145]
[83 144]
[85 142]
[86 141]
[87 140]
[89 137]
[90 136]
[91 135]
[93 133]
[94 132]
[95 131]
[97 129]
[98 128]
[99 127]
[103 123]
[104 122]
[109 119]
[110 118]
[111 117]
[112 116]
[186 194]
[187 193]
[188 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
