%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:33:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGACUUGGGCGGCCCCUCCGCAGGCGGACCGGGGGCAAAGGAGGUGGCAUGUCGGUCAGGCACAGCAGGGUCCUGUGUCCGCGCUGAGCCGCGCUCUCCCUGCUCCAGCAAGGACCAUGAGGGCGCUGGAGGGGCCAGGCCUGUCGCUGCUGUGCCUGGUGUUGGCGCUGCCUGCCCUGCUGCCGGUGCCGGCUGUACGCGGAGUGGCAGAAACAC\
) } def
/len { sequence length } bind def

/coor [
[104.42430115 730.43652344]
[89.37492371 731.62768555]
[74.56246948 728.71325684]
[61.08612442 721.90954590]
[49.94591904 711.72137451]
[41.96853256 698.90484619]
[37.74593735 684.41094971]
[37.59148026 669.31530762]
[41.51662445 654.73809814]
[49.23009109 641.76098633]
[60.15950012 631.34704590]
[73.49380493 624.26898193]
[88.24352264 621.05206299]
[89.10770416 606.07696533]
[89.97188568 591.10192871]
[82.98068237 577.95001221]
[91.50018311 564.61853027]
[92.36436462 549.64343262]
[93.22854614 534.66833496]
[94.09272003 519.69323730]
[94.95690155 504.71817017]
[95.82108307 489.74310303]
[96.25334930 474.74932861]
[96.25334930 459.74932861]
[88.51605225 447.02203369]
[96.25334930 433.22186279]
[96.25334930 418.22186279]
[96.25334930 403.22186279]
[96.14527130 388.22225952]
[95.92911530 373.22381592]
[95.71295929 358.22537231]
[95.49679565 343.22692871]
[95.28063965 328.22848511]
[87.36074066 315.61404419]
[94.89836884 301.70379639]
[94.68221283 286.70535278]
[94.46605682 271.70690918]
[94.24989319 256.70846558]
[85.79701996 248.05999756]
[85.49114990 235.56973267]
[94.04123688 225.91723633]
[94.04123688 210.91723633]
[93.93315125 195.91761780]
[93.71699524 180.91917419]
[93.50083923 165.92073059]
[93.28468323 150.92228699]
[93.06852722 135.92384338]
[92.85237122 120.92540741]
[92.63621521 105.92696381]
[89.80274200 101.51942444]
[89.63747406 95.83847809]
[92.63621521 90.49465179]
[92.85237122 75.49620819]
[93.06852722 60.49776459]
[93.28468323 45.49932480]
[93.50083923 30.50088120]
[93.50083923 15.50088120]
[93.28468323 0.50243908]
[93.06852722 -14.49600315]
[92.85237122 -29.49444580]
[92.63621521 -44.49288940]
[92.42005157 -59.49132919]
[92.20389557 -74.48977661]
[91.98773956 -89.48821259]
[91.77158356 -104.48665619]
[91.55542755 -119.48509979]
[91.33927155 -134.48353577]
[91.12311554 -149.48197937]
[90.90695190 -164.48042297]
[90.15069580 -179.46134949]
[88.85532379 -194.40531921]
[84.99827576 -202.67956543]
[87.65055084 -209.57369995]
[86.57066345 -224.53479004]
[85.49077606 -239.49586487]
[84.41088867 -254.45693970]
[80.67346954 -262.78591919]
[83.42481995 -269.64111328]
[82.56063843 -284.61621094]
[81.69645691 -299.59127808]
[80.83228302 -314.56637573]
[73.15528870 -317.59991455]
[66.72934723 -322.72732544]
[62.10540390 -329.48373413]
[59.67248154 -337.26571655]
[59.62498856 -345.38531494]
[61.94734192 -353.13061523]
[66.41706848 -359.82843018]
[72.62593842 -364.90258789]
[80.01721954 -367.92361450]
[80.44948578 -382.91738892]
[80.77371216 -397.91387939]
[80.98986816 -412.91232300]
[81.20602417 -427.91076660]
[81.42218018 -442.90921021]
[81.63833618 -457.90765381]
[81.85449219 -472.90609741]
[82.07064819 -487.90454102]
[82.28681183 -502.90298462]
[73.87670898 -512.67767334]
[74.36254120 -525.16223145]
[82.93916321 -533.68804932]
[83.37143707 -548.68176270]
[76.03504181 -562.69921875]
[84.13590240 -575.19824219]
[84.56816864 -590.19201660]
[85.00044250 -605.18572998]
[75.07784271 -617.79217529]
[78.88740540 -633.37634277]
[93.50676727 -639.98345947]
[107.72119904 -632.54504395]
[110.62660980 -616.76727295]
[99.99420929 -604.75347900]
[99.56194305 -589.75970459]
[99.12966919 -574.76593018]
[106.49698639 -561.82098389]
[98.36520386 -548.24951172]
[97.93293762 -533.25573730]
[107.08499146 -518.27960205]
[97.28524780 -502.68682861]
[97.06909180 -487.68838501]
[96.85293579 -472.68994141]
[96.63677979 -457.69149780]
[96.42062378 -442.69305420]
[96.20446777 -427.69461060]
[95.98831177 -412.69616699]
[95.77214813 -397.69772339]
[98.81720734 -390.96783447]
[95.44326019 -382.48510742]
[95.01098633 -367.49133301]
[111.59101868 -353.13061523]
[112.10552979 -330.92523193]
[95.80736542 -315.43054199]
[96.67154694 -300.45547485]
[97.53572845 -285.48037720]
[98.39990234 -270.50531006]
[99.37196350 -255.53683472]
[100.45185089 -240.57574463]
[101.53173828 -225.61466980]
[102.61162567 -210.65359497]
[103.79928589 -195.70068359]
[105.09465790 -180.75672913]
[116.57731628 -190.40808105]
[131.31086731 -187.59338379]
[138.42715454 -174.38890076]
[132.67687988 -160.53486633]
[118.30171204 -156.25065613]
[105.90539551 -164.69657898]
[106.12155151 -149.69813538]
[106.33771515 -134.69970703]
[106.55387115 -119.70125580]
[106.77002716 -104.70281219]
[106.98618317 -89.70437622]
[107.20233917 -74.70593262]
[107.41849518 -59.70748901]
[107.63465118 -44.70904541]
[107.85081482 -29.71060371]
[108.06697083 -14.71216011]
[108.28312683 0.28628194]
[108.49928284 15.28472424]
[111.23583221 19.19305992]
[111.54974365 24.86085701]
[108.49928284 30.71703911]
[108.28312683 45.71548080]
[108.06697083 60.71392441]
[107.85081482 75.71236420]
[107.63465118 90.71080780]
[107.63465118 105.71080780]
[107.85081482 120.70925140]
[108.06697083 135.70768738]
[108.28312683 150.70613098]
[108.49928284 165.70457458]
[108.71543884 180.70301819]
[108.93159485 195.70146179]
[112.18295288 204.23193359]
[109.04123688 210.91723633]
[109.04123688 225.91723633]
[118.61526489 241.64962769]
[109.24833679 256.49230957]
[109.46449280 271.49075317]
[109.68065643 286.48919678]
[109.89681244 301.48764038]
[117.83217621 315.17489624]
[110.27908325 328.01232910]
[110.49523926 343.01077271]
[110.71139526 358.00921631]
[110.92755890 373.00765991]
[111.14371490 388.00610352]
[114.39507294 396.53656006]
[111.25334930 403.22186279]
[111.25334930 418.22186279]
[111.25334930 433.22186279]
[118.99065399 447.02203369]
[111.25334930 459.74932861]
[111.25334930 474.74932861]
[113.54987335 478.42050171]
[114.46949768 482.24673462]
[114.13213348 485.77700806]
[112.79154968 488.64541626]
[110.79616547 490.60726929]
[109.93199158 505.58236694]
[109.06781006 520.55743408]
[108.20362854 535.53253174]
[107.33944702 550.50762939]
[106.47526550 565.48272705]
[113.40466309 579.70568848]
[104.94696808 591.96606445]
[104.08279419 606.94116211]
[103.21861267 621.91625977]
[117.50036621 626.80847168]
[129.93194580 635.37341309]
[139.59086609 646.97552490]
[145.76034546 660.75378418]
[147.98257446 675.68572998]
[146.09263611 690.66339111]
[140.23080444 704.57531738]
[130.83206177 716.38916016]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 209]
[14 208]
[15 207]
[17 205]
[18 204]
[19 203]
[20 202]
[21 201]
[22 200]
[23 195]
[24 194]
[26 192]
[27 191]
[28 190]
[29 188]
[30 187]
[31 186]
[32 185]
[33 184]
[35 182]
[36 181]
[37 180]
[38 179]
[41 177]
[42 176]
[43 174]
[44 173]
[45 172]
[46 171]
[47 170]
[48 169]
[49 168]
[52 167]
[53 166]
[54 165]
[55 164]
[56 163]
[57 160]
[58 159]
[59 158]
[60 157]
[61 156]
[62 155]
[63 154]
[64 153]
[65 152]
[66 151]
[67 150]
[68 149]
[69 148]
[70 142]
[71 141]
[73 140]
[74 139]
[75 138]
[76 137]
[78 136]
[79 135]
[80 134]
[81 133]
[90 130]
[91 129]
[92 127]
[93 126]
[94 125]
[95 124]
[96 123]
[97 122]
[98 121]
[99 120]
[102 118]
[103 117]
[105 115]
[106 114]
[107 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
