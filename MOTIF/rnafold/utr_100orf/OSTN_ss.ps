%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:35:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGCUGAGUUUUGGAGAAACUGCAGAGACAGUACUCUAAAGUUAGAAUCUCCUGAUCUUUCACGAGAUGCUGGACUGGAGAUUGGCAAGUGCACAUUUCAUCCUGGCUGUGACACUGACACUGUGGAGCUCAGGAAAAGUCCUCUCAGUAGAUGUAACAACAACAG\
) } def
/len { sequence length } bind def

/coor [
[85.30400085 235.54141235]
[92.41011047 222.22204590]
[102.84706879 211.31459045]
[115.84037781 203.62846375]
[111.95809174 189.13957214]
[108.07580566 174.65068054]
[104.19351959 160.16180420]
[100.31123352 145.67291260]
[96.42894745 131.18402100]
[82.36581421 125.96595764]
[69.97222900 134.41575623]
[57.57864761 142.86557007]
[45.18506622 151.31536865]
[32.79148483 159.76516724]
[20.39790344 168.21496582]
[8.00432110 176.66476440]
[-4.38926077 185.11456299]
[-7.56171799 197.64456177]
[-18.09305191 204.42257690]
[-30.02161980 202.26216125]
[-42.57103729 210.47874451]
[-55.12045288 218.69532776]
[-67.66986847 226.91189575]
[-70.65216827 242.43225098]
[-83.78221130 251.22871399]
[-99.27016449 248.08248901]
[-107.92731476 234.86016846]
[-104.61751556 219.40634155]
[-91.30442047 210.88948059]
[-75.88644409 214.36248779]
[-63.33703232 206.14590454]
[-50.78761292 197.92932129]
[-38.23819733 189.71275330]
[-31.21040535 173.65177917]
[-12.83906174 172.72099304]
[-0.44547999 164.27117920]
[11.94810200 155.82138062]
[24.34168243 147.37158203]
[36.73526382 138.92178345]
[49.12884521 130.47198486]
[61.52242661 122.02217865]
[73.91600800 113.57238007]
[71.28725433 100.62522888]
[74.59027863 88.15416718]
[82.87537384 78.67334747]
[70.64196014 69.99327850]
[54.90972900 68.31775665]
[49.00721741 54.64260864]
[36.77380371 45.96253967]
[24.54039001 37.28247070]
[12.30697727 28.60240173]
[0.07356391 19.92233276]
[-15.65867043 18.24680901]
[-21.56118202 4.57166195]
[-33.79459381 -4.10840750]
[-46.02800751 -12.78847694]
[-62.39715195 -13.78000546]
[-69.47995758 -28.57074165]
[-59.99024200 -41.94524384]
[-43.69021225 -40.14497375]
[-37.34793854 -25.02189064]
[-25.11452484 -16.34181976]
[-12.88111210 -7.66175127]
[1.97610641 -6.60708380]
[8.75363350 7.68891907]
[20.98704720 16.36898804]
[33.22045898 25.04905891]
[45.45387268 33.72912598]
[57.68728638 42.40919876]
[72.54450226 43.46386337]
[79.32202911 57.75986862]
[91.55544281 66.43993378]
[106.54954529 66.01924133]
[118.27701569 56.66689682]
[130.00448608 47.31454849]
[141.73196411 37.96220398]
[153.45942688 28.60985565]
[155.95330811 8.99657154]
[172.29754639 -1.15308297]
[175.36132812 -15.83685780]
[178.42509460 -30.52063370]
[181.48887634 -45.20440674]
[184.55265808 -59.88818359]
[176.16174316 -73.01184082]
[179.47802734 -87.85962677]
[192.04113770 -95.77820587]
[195.10491943 -110.46198273]
[189.46781921 -125.86182404]
[200.19209290 -138.26835632]
[216.24552917 -134.91879272]
[221.11372375 -119.25888824]
[209.78869629 -107.39820099]
[206.72491455 -92.71443176]
[215.07321167 -80.43267059]
[212.17527771 -65.49758911]
[199.23643494 -56.82440567]
[196.17265320 -42.14062881]
[193.10887146 -27.45685387]
[190.04510498 -12.77307892]
[186.98132324 1.91069674]
[190.56622314 4.66329765]
[193.51550293 8.08822727]
[208.00439453 4.20594120]
[222.49328613 0.32365549]
[236.98216248 -3.55863023]
[251.47105408 -7.44091606]
[265.95993042 -11.32320118]
[270.94729614 -15.76540089]
[276.58319092 -16.82981110]
[281.06335449 -15.06891441]
[295.68728638 -18.40672874]
[304.11700439 -31.50548553]
[318.99530029 -34.68217850]
[331.43099976 -26.56499863]
[346.05493164 -29.90281296]
[360.67883301 -33.24062729]
[367.65139771 -47.23768234]
[382.01034546 -53.43074799]
[396.97589111 -48.89564514]
[405.48168945 -35.77370834]
[403.51162720 -20.26072121]
[391.99584961 -9.68143845]
[376.37179565 -9.03107262]
[364.01666260 -18.61670876]
[349.39273071 -15.27889442]
[334.76882935 -11.94108105]
[327.08654785 0.76789999]
[312.30334473 4.36124134]
[299.02508545 -3.78280926]
[284.40118408 -0.44499528]
[269.84222412 3.16568589]
[255.35333252 7.04797173]
[240.86445618 10.93025684]
[226.37556458 14.81254292]
[211.88667297 18.69482803]
[197.39779663 22.57711411]
[191.54266357 36.36777496]
[178.03169250 43.46075058]
[162.81178284 40.33732605]
[151.08430481 49.68967438]
[139.35684204 59.04202271]
[127.62936401 68.39437103]
[115.90189362 77.74671173]
[128.17329407 103.39758301]
[110.91783142 127.30173492]
[114.80011749 141.79061890]
[118.68240356 156.27951050]
[122.56468964 170.76840210]
[126.44697571 185.25729370]
[130.32926941 199.74617004]
[145.42486572 199.90589905]
[159.91725159 204.13356018]
[172.73101807 212.11541748]
[182.91528320 223.25918579]
[189.71429443 236.73789978]
[192.62353516 251.55137634]
[191.42712402 266.60034180]
[186.21383667 280.76803589]
[177.37054443 293.00317383]
[165.55345154 302.39779663]
[151.63948059 308.25479126]
[136.66114807 310.13946533]
[121.72994232 307.91204834]
[107.95384979 301.73776245]
[96.35514832 292.07479858]
[87.79454803 279.64022827]
[82.90729523 265.35675049]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 150]
[5 149]
[6 148]
[7 147]
[8 146]
[9 145]
[10 42]
[11 41]
[12 40]
[13 39]
[14 38]
[15 37]
[16 36]
[17 35]
[20 33]
[21 32]
[22 31]
[23 30]
[45 72]
[46 71]
[48 69]
[49 68]
[50 67]
[51 66]
[52 65]
[54 63]
[55 62]
[56 61]
[73 143]
[74 142]
[75 141]
[76 140]
[77 139]
[79 100]
[80 99]
[81 98]
[82 97]
[83 96]
[86 93]
[87 92]
[102 136]
[103 135]
[104 134]
[105 133]
[106 132]
[107 131]
[110 130]
[111 129]
[114 126]
[115 125]
[116 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
