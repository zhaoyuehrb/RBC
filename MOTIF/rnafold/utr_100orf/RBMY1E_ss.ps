%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:23:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUCCAGCUGUCCCUCCCGCAGUUGGCCCUGUGGUGUUCCGAAGCCGGUUACGUACGGCCUGAGGGCCAGGCGAACCUCAGGCUCUUUGUCCUACUAAAAAGCGCAGCACAAUGGUAGAAGCAGAUCAUCCUGGCAAGCUUUUCAUUGGUGGCCUCAAUAGAGAAACCAAUGAGAAGAUGCUUAAAGCAGUAUUUGGGAAACAUGGUCCCA\
) } def
/len { sequence length } bind def

/coor [
[102.27678680 204.21821594]
[112.82995605 186.02857971]
[108.04766083 171.81135559]
[103.26537323 157.59411621]
[88.30613708 156.48893738]
[81.48642731 169.84899902]
[74.66671753 183.20907593]
[67.84700775 196.56915283]
[61.02729416 209.92921448]
[54.20758057 223.28929138]
[47.38787079 236.64936829]
[40.56815720 250.00942993]
[46.83382416 264.33688354]
[42.37452698 279.32516479]
[29.29581642 287.89727783]
[13.77305508 286.00573730]
[3.13561773 274.54367065]
[2.40617657 258.92312622]
[11.92915154 246.51962280]
[27.20808601 243.18972778]
[34.02779770 229.82965088]
[40.84750748 216.46957397]
[47.66722107 203.10951233]
[54.48693466 189.74943542]
[61.30664444 176.38935852]
[68.12635803 163.02929688]
[74.94606781 149.66921997]
[66.90127563 144.71247864]
[59.81143188 138.46569824]
[53.88109589 131.10911560]
[49.28136826 122.85499573]
[46.14495468 113.94147491]
[31.64184952 117.77030945]
[17.13874435 121.59914398]
[2.66427112 125.53482819]
[-11.78078556 129.57714844]
[-26.22584152 133.61946106]
[-33.21881866 144.45622253]
[-45.33220291 147.52627563]
[-55.93905258 141.71264648]
[-70.44215393 145.54148865]
[-84.94525909 149.37031555]
[-96.19635773 161.30114746]
[-112.08980560 157.26004028]
[-116.27577972 141.40414429]
[-104.44811249 130.04463196]
[-88.77409363 134.86721802]
[-74.27098846 131.03837585]
[-59.76788712 127.20954895]
[-47.99653244 114.19321442]
[-30.26816177 119.17440796]
[-15.82310486 115.13208771]
[-1.37804914 111.08976746]
[4.21531725 106.26078796]
[13.30991077 107.09603882]
[27.81301498 103.26720428]
[42.31612015 99.43836975]
[44.41101837 84.58537292]
[31.53266525 76.89459991]
[18.65431213 69.20382690]
[5.77595949 61.51304626]
[-7.10239315 53.82227325]
[-19.98074532 46.13149643]
[-32.85909653 38.44071960]
[-45.73744965 30.74994469]
[-58.61580276 23.05916977]
[-71.98954010 30.61157417]
[-87.34757233 30.44923401]
[-100.55867004 22.61581993]
[-108.06912231 9.21847916]
[-107.85864258 -6.13897085]
[-99.98385620 -19.32545280]
[-86.56304169 -26.79386902]
[-71.20632172 -26.53525352]
[-58.04459000 -18.61917305]
[-50.61827850 -5.17501259]
[-50.92502594 10.18081570]
[-38.04667664 17.87159157]
[-25.16832161 25.56236839]
[-12.28996944 33.25314331]
[0.58838284 40.94392014]
[13.46673584 48.63469696]
[26.34508896 56.32546997]
[39.22344208 64.01625061]
[52.10179520 71.70702362]
[70.14857483 55.59613419]
[92.50000000 49.17016220]
[92.50000000 34.17016220]
[92.50000000 19.17016029]
[92.50000000 4.17016077]
[92.50000000 -10.82983971]
[82.92550659 -26.55995560]
[92.28804779 -41.40356064]
[92.06681061 -56.40192795]
[91.84558105 -71.40029907]
[91.62435150 -86.39866638]
[91.40312195 -101.39703369]
[91.18189240 -116.39540100]
[77.87471008 -123.93637848]
[70.17958069 -137.03910828]
[70.07677460 -152.13400269]
[77.49376678 -165.16644287]
[90.35158539 -172.68588257]
[90.13035583 -187.68424988]
[83.85106659 -203.43249512]
[97.24557495 -213.82592773]
[110.94079590 -203.83207703]
[105.12872314 -187.90548706]
[105.34995270 -172.90711975]
[118.42395782 -165.77017212]
[126.22210693 -152.96217346]
[126.56455994 -137.87081909]
[119.25923157 -124.54681396]
[106.18025970 -116.61663055]
[106.40148926 -101.61826324]
[106.62271881 -86.61989594]
[106.84394836 -71.62152863]
[107.06518555 -56.62315750]
[107.28641510 -41.62479019]
[115.74337006 -32.97705460]
[116.05131531 -20.48447800]
[107.50000000 -10.82983971]
[107.50000000 4.17016077]
[107.50000000 19.17016029]
[107.50000000 34.17016220]
[107.50000000 49.17016220]
[115.26293945 50.93916702]
[122.65936279 53.88627243]
[129.51167297 57.94070816]
[135.65530396 63.00511551]
[140.94276428 68.95788574]
[145.24705505 75.65606689]
[148.46481323 82.93881989]
[150.51879883 90.63126373]
[165.50860596 90.07829285]
[180.49841309 89.52532196]
[195.48822021 88.97235107]
[204.82104492 80.07093048]
[217.31648254 79.91813660]
[226.27011108 88.05054474]
[241.26643372 87.71871185]
[256.26275635 87.38687897]
[271.25909424 87.05504608]
[286.25543213 86.72322083]
[301.25173950 86.39138794]
[316.24807739 86.05955505]
[331.24441528 85.72772217]
[346.24075317 85.39588928]
[361.23706055 85.06406403]
[376.23339844 84.73223114]
[391.22973633 84.40039825]
[399.35781860 73.66149139]
[412.00210571 69.62313843]
[424.47888184 73.54604340]
[432.30072021 83.78446198]
[447.30032349 83.67384338]
[462.29989624 83.56322479]
[476.15945435 74.79707336]
[490.55322266 82.65526581]
[490.67416382 99.05397034]
[476.39785767 107.12360382]
[462.41052246 98.56281281]
[447.41094971 98.67343140]
[432.41134644 98.78404999]
[421.12921143 111.25704956]
[403.97912598 111.71941376]
[391.56155396 99.39672852]
[376.56521606 99.72856140]
[361.56890869 100.06038666]
[346.57257080 100.39221954]
[331.57623291 100.72405243]
[316.57992554 101.05588531]
[301.58358765 101.38771820]
[286.58724976 101.71954346]
[271.59091187 102.05137634]
[256.59460449 102.38320923]
[241.59826660 102.71504211]
[226.60194397 103.04687500]
[212.11357117 112.95024872]
[196.04118347 103.96215057]
[181.05137634 104.51512909]
[166.06158447 105.06809998]
[151.07177734 105.62107086]
[148.40455627 120.18011475]
[141.59182739 133.65902710]
[131.03854370 144.88040161]
[117.48260498 152.81182861]
[122.26489258 167.02906799]
[127.04718781 181.24629211]
[136.61035156 182.86174011]
[144.87910461 187.81874084]
[150.73977661 195.40055847]
[153.42102051 204.54035950]
[152.59513855 213.97135925]
[148.41749573 222.40228271]
[141.49949646 228.69421387]
[145.43518066 243.16868591]
[149.37086487 257.64315796]
[153.30654907 272.11761475]
[157.24223328 286.59210205]
[171.51388550 292.98382568]
[178.29151917 307.07629395]
[174.37496948 322.21545410]
[161.61347961 331.25308228]
[146.03266907 329.92187500]
[134.98928833 318.85040283]
[133.69770813 303.26623535]
[142.76776123 290.52780151]
[138.83207703 276.05331421]
[134.89639282 261.57882690]
[130.96070862 247.10437012]
[127.02502441 232.62989807]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 189]
[3 188]
[4 187]
[5 27]
[6 26]
[7 25]
[8 24]
[9 23]
[10 22]
[11 21]
[12 20]
[32 57]
[33 56]
[34 55]
[35 53]
[36 52]
[37 51]
[40 49]
[41 48]
[42 47]
[58 85]
[59 84]
[60 83]
[61 82]
[62 81]
[63 80]
[64 79]
[65 78]
[66 77]
[87 126]
[88 125]
[89 124]
[90 123]
[91 122]
[93 119]
[94 118]
[95 117]
[96 116]
[97 115]
[98 114]
[103 109]
[104 108]
[134 183]
[135 182]
[136 181]
[137 180]
[140 178]
[141 177]
[142 176]
[143 175]
[144 174]
[145 173]
[146 172]
[147 171]
[148 170]
[149 169]
[150 168]
[151 167]
[155 164]
[156 163]
[157 162]
[196 212]
[197 211]
[198 210]
[199 209]
[200 208]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
