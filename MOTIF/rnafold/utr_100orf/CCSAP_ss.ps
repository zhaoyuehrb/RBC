%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:53:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGGAUCGGCCGGGCGCGGCGGGAAGGAGGCUGCGGGCAGCGAGGAGCGGCUGGCGCUCGAGGCGGCGGACGGCACCAUGUCCCCGGGGAGCGGGGUGAAGAGCGAGUACAUGAAGCGCUACCAGGAGCCGCGCUGGGAGGAGUACGGGCCGUGCUACCGCGAGCUGCUGCACUACC\
) } def
/len { sequence length } bind def

/coor [
[14.57300949 314.22381592]
[14.48183346 323.13339233]
[11.50145626 331.48394775]
[5.98528528 338.36987305]
[-1.43994606 343.05429077]
[-9.94529247 345.04782104]
[-18.59210968 344.15969849]
[-26.35651016 356.99380493]
[-26.87976074 372.80633545]
[-40.08782196 379.69085693]
[-47.85221863 392.52496338]
[-55.61661911 405.35903931]
[-63.38101959 418.19314575]
[-63.17562866 434.59100342]
[-77.41019440 442.73406982]
[-91.44141388 434.24542236]
[-90.83517456 417.85748291]
[-76.21511841 410.42874146]
[-68.45072174 397.59466553]
[-60.68632126 384.76055908]
[-52.92192078 371.92645264]
[-52.95402908 357.03189087]
[-39.19060898 349.22940063]
[-31.42621040 336.39529419]
[-38.45085526 316.36938477]
[-28.31085396 297.40557861]
[-7.20880079 291.98614502]
[-0.59907651 278.52096558]
[-1.93644452 263.68652344]
[11.09019661 254.70779419]
[17.69992065 241.24259949]
[17.82519341 233.83106995]
[24.54562569 227.60063171]
[31.39064407 214.25350952]
[38.23566437 200.90638733]
[45.08068085 187.55926514]
[51.92570114 174.21214294]
[52.18102646 166.80395508]
[59.00976562 160.69241333]
[66.08797455 147.46746826]
[73.16617584 134.24252319]
[80.24438477 121.01759338]
[76.28518677 116.42045593]
[73.37514496 111.09687042]
[71.64299011 105.28236389]
[71.16535187 99.23416138]
[56.78992844 94.95079803]
[42.41450500 90.66743469]
[28.03907967 86.38407135]
[13.66365719 82.10070801]
[-1.07481885 88.43765259]
[-15.14995575 80.73894501]
[-17.76451302 64.91037750]
[-6.91282749 53.09426880]
[9.08061790 54.35492706]
[17.94701958 67.72528076]
[32.32244492 72.00864410]
[46.69786835 76.29200745]
[61.07329178 80.57537079]
[75.44871521 84.85873413]
[83.16588593 76.57701874]
[93.47570801 71.90271759]
[104.79035187 71.55574036]
[115.36722565 75.58950806]
[126.38429260 65.40991974]
[137.40136719 55.23032379]
[148.41844177 45.05072784]
[153.30343628 30.00255775]
[167.90208435 27.04815292]
[178.91915894 16.86855888]
[189.84648132 6.59267759]
[200.68319702 -3.77869749]
[211.51992798 -14.15007305]
[222.35664368 -24.52144814]
[233.19337463 -34.89282227]
[237.24531555 -43.11257553]
[244.31246948 -45.34905243]
[255.32954407 -55.52864456]
[253.11271667 -72.28312683]
[261.22912598 -86.91757202]
[276.31341553 -93.77164459]
[292.35058594 -90.32936859]
[303.18731689 -100.70074463]
[314.02404785 -111.07211304]
[324.76931763 -121.53818512]
[335.42236328 -132.09814453]
[339.77624512 -147.30848694]
[354.26223755 -150.77340698]
[364.91525269 -161.33335876]
[365.75732422 -174.22306824]
[374.87210083 -182.80035400]
[386.98675537 -182.85375977]
[397.82348633 -193.22514343]
[408.66021729 -203.59651184]
[419.49691772 -213.96788025]
[413.00820923 -228.50424194]
[411.88595581 -244.35658264]
[416.24734497 -259.61053467]
[425.54837036 -272.43029785]
[438.65173340 -281.27947998]
[453.96582031 -285.10540771]
[469.63809204 -283.46411133]
[483.77908325 -276.57196045]
[494.43209839 -287.13189697]
[505.08514404 -297.69186401]
[515.73815918 -308.25183105]
[511.18795776 -322.86532593]
[513.96160889 -337.91741943]
[523.42169189 -349.94924927]
[537.39440918 -356.19601440]
[552.66888428 -355.22222900]
[565.73522949 -347.25167847]
[573.59082031 -334.11590576]
[574.43054199 -318.83343506]
[568.06140137 -304.91610718]
[555.94702148 -295.56195068]
[540.87115479 -292.92053223]
[526.29815674 -297.59878540]
[515.64508057 -287.03881836]
[504.99206543 -276.47888184]
[494.33901978 -265.91891479]
[500.65740967 -253.23408508]
[502.74835205 -239.19616699]
[500.39392090 -225.17825317]
[493.81167603 -212.55566406]
[483.63458252 -202.57095337]
[470.85021973 -196.21163940]
[456.70498657 -194.11254883]
[442.58248901 -196.49238586]
[429.86831665 -203.13116455]
[419.03158569 -192.75979614]
[408.19485474 -182.38841248]
[397.35812378 -172.01704407]
[393.37649536 -154.93841553]
[375.47521973 -150.68032837]
[364.82217407 -140.12036133]
[361.23028564 -125.66534424]
[345.98233032 -121.44511414]
[335.32928467 -110.88514709]
[332.78497314 -103.92289734]
[324.39541626 -100.23538971]
[313.55868530 -89.86402130]
[302.72195435 -79.49264526]
[305.74087524 -66.47122192]
[301.89346313 -53.55701065]
[292.08410645 -44.16086578]
[278.80624390 -40.81956482]
[265.50912476 -44.51157379]
[254.49206543 -34.33198166]
[243.56474304 -24.05609894]
[232.72802734 -13.68472385]
[221.89129639 -3.31334901]
[211.05458069 7.05802584]
[200.21784973 17.42940140]
[197.55174255 24.34592819]
[189.09875488 27.88562965]
[178.08168030 38.06522369]
[173.98469543 52.38528061]
[158.59803772 56.06779861]
[147.58096313 66.24739075]
[136.56388855 76.42698669]
[125.54681396 86.60658264]
[127.73884583 107.91075134]
[114.63918304 124.85393524]
[93.46932220 128.09579468]
[86.39111328 141.32073975]
[79.31291199 154.54566956]
[72.23470306 167.77061462]
[65.27282715 181.05715942]
[58.42780685 194.40428162]
[51.58278656 207.75140381]
[44.73776627 221.09852600]
[37.89274979 234.44564819]
[31.16511726 247.85232544]
[24.55539322 261.31753540]
[25.41999054 277.11508179]
[12.86612129 285.13067627]
[6.25639677 298.59588623]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 24]
[8 23]
[10 21]
[11 20]
[12 19]
[13 18]
[27 178]
[28 177]
[30 175]
[31 174]
[33 173]
[34 172]
[35 171]
[36 170]
[37 169]
[39 168]
[40 167]
[41 166]
[42 165]
[46 60]
[47 59]
[48 58]
[49 57]
[50 56]
[64 162]
[65 161]
[66 160]
[67 159]
[69 157]
[70 156]
[71 154]
[72 153]
[73 152]
[74 151]
[75 150]
[77 149]
[78 148]
[82 143]
[83 142]
[84 141]
[85 139]
[86 138]
[88 136]
[89 135]
[92 133]
[93 132]
[94 131]
[95 130]
[103 121]
[104 120]
[105 119]
[106 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
