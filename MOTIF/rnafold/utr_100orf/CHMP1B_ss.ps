%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:00:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAGUAGAAACAGGAAGUGGGACCAAAACAAAGGAGCGGCGGCCGGGAGCGGACUUACCUUACCUUCUCUGCCUUCGGCGCGCUUCUCAGCCGGGCCGCCGACCCAAAGGAGCCGUCCGACUAUGUCUAACAUGGAGAAACACCUGUUCAACCUGAAGUUCGCGGCCAAAGAACUGAGUAGGAGUGCCAAAAAAUGCGAUAAGGAGGAAAAGGCCGAAAAGG\
) } def
/len { sequence length } bind def

/coor [
[68.69154358 117.02465820]
[66.46652222 95.91325378]
[52.35116196 90.83815002]
[38.20040512 85.86260223]
[24.01495552 80.98684692]
[9.79551029 76.21113586]
[-4.45722055 71.53570557]
[-18.70995140 66.86027527]
[-25.23436928 67.83856964]
[-30.48841667 65.70148468]
[-33.29507446 61.84714890]
[-47.41043472 56.77204514]
[-56.95580292 61.96385574]
[-67.56459045 61.06868362]
[-75.75984192 54.62192154]
[-78.98877716 44.93850327]
[-92.95555878 39.46775436]
[-106.92233276 33.99700928]
[-122.59385681 36.16820145]
[-131.62252808 24.32201195]
[-145.58930969 18.85126495]
[-159.55609131 13.38051796]
[-173.52287292 7.90977097]
[-182.79600525 19.82148933]
[-195.03755188 28.62867928]
[-209.25045776 33.62452316]
[-224.28002930 34.41221237]
[-238.90777588 30.93644524]
[-251.95021057 23.48722076]
[-262.35458374 12.67566681]
[-269.28387451 -0.61609584]
[-272.18405151 -15.30691719]
[-270.82849121 -30.20456123]
[-284.79528809 -35.67530823]
[-299.13494873 -29.59161949]
[-313.22131348 -35.33869934]
[-318.93283081 -49.04688644]
[-332.89959717 -54.51763153]
[-346.86639404 -59.98838043]
[-360.83316040 -65.45912933]
[-374.79992676 -70.92987061]
[-388.76672363 -76.40061951]
[-402.73348999 -81.87136841]
[-416.70028687 -87.34211731]
[-443.06127930 -71.03286743]
[-457.95385742 -72.82477570]
[-472.84643555 -74.61669159]
[-481.73153687 -72.53601074]
[-487.93563843 -76.54018402]
[-502.80151367 -78.54171753]
[-517.66735840 -80.54324341]
[-532.53326416 -82.54477692]
[-547.39910889 -84.54631042]
[-555.00787354 -71.38672638]
[-567.07647705 -62.14458847]
[-581.76452637 -58.22924805]
[-596.83221436 -60.23777390]
[-609.98175049 -67.86387634]
[-619.20800781 -79.94463348]
[-623.10400391 -94.63780975]
[-621.07568359 -109.70281219]
[-613.43231201 -122.84233093]
[-601.33941650 -132.05268860]
[-586.64111328 -135.92936707]
[-571.57879639 -133.88121033]
[-558.44934082 -126.22053528]
[-549.25488281 -114.11555481]
[-545.39758301 -99.41217041]
[-530.53167725 -97.41064453]
[-515.66583252 -95.40911102]
[-500.79998779 -93.40757751]
[-485.93411255 -91.40604401]
[-471.05453491 -89.50927734]
[-456.16192627 -87.71736145]
[-441.26934814 -85.92545319]
[-434.54437256 -99.33345032]
[-444.88629150 -110.19829559]
[-455.22817993 -121.06314087]
[-465.57009888 -131.92797852]
[-480.48007202 -128.24179077]
[-495.23114014 -132.51985168]
[-505.85531616 -143.61140442]
[-509.49475098 -158.53286743]
[-505.17047119 -173.27044678]
[-494.04568481 -183.85980225]
[-479.11288452 -187.45245361]
[-464.38891602 -183.08200073]
[-453.83450317 -171.92405701]
[-450.28866577 -156.98007202]
[-454.70526123 -142.26989746]
[-444.36334229 -131.40504456]
[-434.02142334 -120.54020691]
[-423.67950439 -109.67536163]
[-411.22952271 -101.30889130]
[-397.26275635 -95.83815002]
[-383.29595947 -90.36740112]
[-369.32919312 -84.89665222]
[-355.36242676 -79.42590332]
[-341.39562988 -73.95516205]
[-327.42886353 -68.48441315]
[-313.46206665 -63.01366425]
[-299.95959473 -69.19579315]
[-285.71737671 -63.84664154]
[-279.32452393 -49.64208603]
[-265.35775757 -44.17134094]
[-256.23437500 -56.02634430]
[-244.12789917 -64.83910370]
[-230.01445007 -69.88848877]
[-215.03492737 -70.75724792]
[-200.40281677 -67.36643219]
[-187.30587769 -59.98252106]
[-176.80970764 -49.19647598]
[-169.77107239 -35.87646866]
[-166.76795959 -21.09798241]
[-168.05212402 -6.05700874]
[-154.08534241 -0.58626163]
[-140.11856079 4.88448524]
[-126.15178680 10.35523224]
[-111.47926331 7.79273367]
[-101.45159149 20.03022766]
[-87.48480988 25.50097466]
[-73.51802826 30.97172165]
[-54.65576172 26.69426346]
[-42.33533096 42.65668869]
[-28.21997261 47.73179245]
[-14.03452015 52.60754395]
[0.21821088 57.28297424]
[14.47094154 61.95840836]
[21.79982567 61.05738068]
[28.89070511 66.80139923]
[43.07615662 71.67714691]
[50.41700745 70.87945557]
[57.42626572 76.72279358]
[71.54162598 81.79789734]
[78.38294983 73.24018860]
[87.75496674 67.19150543]
[98.75500488 64.38387299]
[110.27494812 65.22975922]
[121.11281586 69.76683044]
[130.09815979 77.64126587]
[136.21820068 88.13249969]
[138.73107910 100.21813202]
[137.25381470 112.67325592]
[151.57099915 117.14744568]
[165.88818359 121.62162781]
[181.36802673 118.35283661]
[191.20805359 129.53421021]
[205.52523804 134.00839233]
[219.84242249 138.48257446]
[233.71836853 131.40472412]
[248.17428589 136.14613342]
[254.83642578 149.41835022]
[269.15359497 153.89253235]
[283.47079468 158.36671448]
[291.37689209 151.22586060]
[301.45541382 148.03082275]
[311.87133789 149.29313660]
[320.75711060 154.71908569]
[326.54754639 163.27449036]
[328.25531006 173.38122559]
[342.37066650 178.45632935]
[356.48602295 183.53143311]
[370.60137939 188.60653687]
[384.71673584 193.68164062]
[394.35458374 181.13330078]
[407.38314819 172.18955994]
[422.51959229 167.71653748]
[438.27798462 168.14079285]
[453.11517334 173.40875244]
[465.58200073 182.99314880]
[474.46472168 195.94569397]
[478.90325928 210.99098206]
[478.47436523 226.65200806]
[492.65982056 231.52775574]
[506.84527588 236.40351868]
[520.15069580 228.18772888]
[535.61669922 230.49777222]
[545.94073486 242.24293518]
[546.24804688 257.87750244]
[536.39361572 270.01928711]
[521.03027344 272.93536377]
[507.41226196 265.24877930]
[501.96951294 250.58895874]
[487.78405762 245.71321106]
[473.59860229 240.83746338]
[465.31329346 252.43124390]
[454.08435059 261.23046875]
[440.81616211 266.51501465]
[426.58071899 267.84823608]
[412.53082275 265.11322021]
[399.80673218 258.52276611]
[389.44372559 248.60302734]
[382.28787231 236.15138245]
[378.92681885 222.17247009]
[379.64163208 207.79701233]
[365.52627563 202.72190857]
[351.41091919 197.64680481]
[337.29556274 192.57170105]
[323.18020630 187.49659729]
[306.20230103 197.06472778]
[287.37490845 190.95431519]
[278.99661255 172.68389893]
[264.67941284 168.20971680]
[250.36222839 163.73553467]
[237.32835388 170.85264587]
[222.74494934 166.51914978]
[215.36824036 152.79975891]
[201.05105591 148.32556152]
[186.73387146 143.85137939]
[172.27809143 147.44020081]
[161.41400146 135.93881226]
[147.09681702 131.46463013]
[132.77963257 126.99044037]
[121.34956360 136.70401001]
[123.45575714 151.55540466]
[135.36488342 162.30493164]
[134.24200439 178.30863953]
[120.94850159 187.28985596]
[105.68200684 182.35896301]
[100.15367126 167.29850769]
[108.60436249 153.66160583]
[106.49816895 138.81021118]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 134]
[3 133]
[4 131]
[5 130]
[6 128]
[7 127]
[8 126]
[11 125]
[12 124]
[16 122]
[17 121]
[18 120]
[20 118]
[21 117]
[22 116]
[23 115]
[33 105]
[34 104]
[37 101]
[38 100]
[39 99]
[40 98]
[41 97]
[42 96]
[43 95]
[44 94]
[45 75]
[46 74]
[47 73]
[49 72]
[50 71]
[51 70]
[52 69]
[53 68]
[76 93]
[77 92]
[78 91]
[79 90]
[143 213]
[144 212]
[145 211]
[147 209]
[148 208]
[149 207]
[152 204]
[153 203]
[154 202]
[160 199]
[161 198]
[162 197]
[163 196]
[164 195]
[173 185]
[174 184]
[175 183]
[214 222]
[215 221]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
