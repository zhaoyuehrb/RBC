%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:52:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCUCCAGCAUCCUCCACCUGUCUACCACCGAGCAUGGGCCUAUAUUUGAAGCCUUAGAUCUCUCCAGCACAGUAAGCACCAGGAGUCCAUGAAGAAGAUGGCUCCUGCCAUGGAAUCCCCUACUCUACUGUGUGUAGCCUUACUGUUCUUCGCUCCAGAUGGCGUGUUAGCAGUCCCUCAGAAACCUAAGGUCUCCU\
) } def
/len { sequence length } bind def

/coor [
[-65.09610748 352.16476440]
[-78.04905701 362.43121338]
[-93.70867157 367.63772583]
[-110.17890930 367.17239380]
[-125.47188568 361.10897827]
[-135.21360779 372.51504517]
[-144.95532227 383.92114258]
[-154.69705200 395.32723999]
[-164.34889221 406.80947876]
[-173.91024780 418.36718750]
[-176.97309875 426.98251343]
[-183.71369934 430.02978516]
[-193.45541382 441.43588257]
[-185.53552246 454.32504272]
[-181.98820496 469.03121948]
[-183.16098022 484.11364746]
[-188.93896484 498.09472656]
[-198.75607300 509.60467529]
[-211.65054321 517.51593018]
[-226.35910034 521.05340576]
[-241.44073486 519.87054443]
[-255.41792297 514.08319092]
[-266.92132568 504.25836182]
[-274.82391357 491.35858154]
[-278.35153198 476.64767456]
[-277.15853882 461.56683350]
[-271.36184692 447.59350586]
[-261.52929688 436.09671021]
[-248.62425232 428.20272827]
[-233.91096497 424.68499756]
[-218.83091736 425.88809204]
[-204.86149597 431.69415283]
[-195.11978149 420.28805542]
[-185.46794128 408.80581665]
[-175.90658569 397.24810791]
[-174.06359863 390.08398438]
[-166.10313416 385.58551025]
[-156.36141968 374.17941284]
[-146.61968994 362.77334595]
[-136.87797546 351.36724854]
[-144.10826111 339.99334717]
[-147.84507751 327.02676392]
[-147.77644348 313.51580811]
[-143.89845276 300.55563354]
[-136.51632690 289.19934082]
[-126.22045898 280.37261963]
[-113.83915710 274.79800415]
[-100.37205505 272.93597412]
[-86.90937805 274.94686890]
[-74.54367828 280.67706299]
[-64.44848633 269.58261108]
[-61.60562515 254.96182251]
[-46.59518814 249.96208191]
[-36.50000000 238.86761475]
[-26.40481186 227.77314758]
[-16.30962563 216.67868042]
[-6.21443748 205.58421326]
[3.88075042 194.48974609]
[13.97593784 183.39527893]
[10.77950573 168.87217712]
[16.81924057 155.08865356]
[29.97086716 147.41479492]
[45.29645157 148.97448730]
[55.39163971 137.88002014]
[65.48682404 126.78556061]
[56.67924881 105.65134430]
[59.77027130 82.96491241]
[73.91091156 64.95738983]
[95.21725464 56.57476807]
[96.15911102 41.60437012]
[97.10096741 26.63396835]
[98.04283142 11.66356754]
[98.98468781 -3.30683374]
[99.92654419 -18.27723503]
[100.86840057 -33.24763489]
[101.81025696 -48.21803665]
[86.00046539 -54.36004639]
[73.59031677 -66.78076172]
[67.02697754 -83.70822144]
[67.87107086 -102.44193268]
[76.45784760 -119.78258514]
[91.76102448 -132.57821655]
[89.64750671 -147.42857361]
[87.53398895 -162.27893066]
[85.42047119 -177.12928772]
[83.30695343 -191.97964478]
[81.19343567 -206.82998657]
[76.88259125 -214.89360046]
[79.16524506 -221.93000793]
[77.28524780 -236.81172180]
[75.40525055 -251.69345093]
[73.52525330 -266.57516479]
[60.28369141 -274.89352417]
[55.53622818 -289.79302979]
[61.52447891 -304.23861694]
[75.42096710 -311.40951538]
[90.66419983 -307.91983032]
[100.05678558 -295.41729736]
[99.16383362 -279.80523682]
[88.40697479 -268.45516968]
[90.28697205 -253.57344055]
[92.16696930 -238.69172668]
[94.04696655 -223.81001282]
[96.04378510 -208.94351196]
[98.15731049 -194.09315491]
[100.27082825 -179.24279785]
[102.38434601 -164.39244080]
[104.49786377 -149.54208374]
[106.61138153 -134.69174194]
[113.94338226 -133.11320496]
[117.10070038 -147.77714539]
[131.76458740 -144.61958313]
[128.60737610 -129.95611572]
[135.93937683 -128.37757874]
[143.97677612 -141.04249573]
[141.89442444 -156.94984436]
[153.13619995 -168.39544678]
[169.07838440 -166.59924316]
[177.49150085 -152.93911743]
[171.92170715 -137.89393616]
[156.64169312 -133.00509644]
[148.60429382 -120.34017944]
[156.49041748 -104.62409973]
[158.19152832 -87.65139008]
[153.85443115 -71.69852448]
[144.41183472 -58.77426529]
[131.41304016 -50.36699295]
[116.78066254 -47.27618027]
[115.83880615 -32.30577850]
[114.89694214 -17.33537674]
[113.95508575 -2.36497593]
[113.01322937 12.60542488]
[112.07137299 27.57582664]
[111.12951660 42.54622650]
[110.18765259 57.51662827]
[116.99182129 59.75197983]
[123.33934784 63.06898117]
[129.05963135 67.37848663]
[133.99894714 72.56468201]
[138.02456665 78.48818970]
[141.02827454 84.98982239]
[142.92938232 91.89484406]
[143.67677307 99.01768494]
[143.25036621 106.16693115]
[157.51622009 110.80218506]
[171.78205872 115.43743896]
[186.04791260 120.07269287]
[200.31375122 124.70794678]
[214.57960510 129.34320068]
[225.80195618 121.88545990]
[239.07666016 122.25038147]
[249.56036377 130.08055115]
[253.55712891 142.33572388]
[267.74841309 147.19448853]
[281.93969727 152.05323792]
[297.50207520 149.20321655]
[307.03692627 160.64595032]
[321.22821045 165.50471497]
[337.20764160 161.81826782]
[348.19046021 173.99650574]
[342.87847900 189.51150513]
[326.73620605 192.40275574]
[316.36944580 179.69598389]
[302.17816162 174.83721924]
[287.63082886 178.03479004]
[277.08093262 166.24452209]
[262.88964844 161.38575745]
[248.69836426 156.52700806]
[233.93026733 164.56480408]
[217.59530640 159.33586121]
[209.94435120 143.60905457]
[195.67849731 138.97380066]
[181.41265869 134.33854675]
[167.14680481 129.70329285]
[152.88096619 125.06803131]
[138.61511230 120.43277740]
[131.61642456 130.15008545]
[122.24217224 137.60200500]
[111.19672394 142.22865295]
[99.30998993 143.68237305]
[87.47510529 141.85394287]
[76.58129120 136.88075256]
[66.48610687 147.97521973]
[56.39091873 159.06967163]
[59.38596344 174.18046570]
[52.98384094 187.99589539]
[39.82987595 195.30596924]
[25.07040405 193.49047852]
[14.97521687 204.58494568]
[4.88002920 215.67941284]
[-5.21515846 226.77388000]
[-15.31034660 237.86834717]
[-25.40553474 248.96279907]
[-35.50072098 260.05728149]
[-39.06566238 275.47161865]
[-53.35402298 279.67779541]
[-63.44921112 290.77224731]
[-55.52973557 305.39636230]
[-53.09601212 321.82214355]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 40]
[6 39]
[7 38]
[8 37]
[9 35]
[10 34]
[12 33]
[13 32]
[50 197]
[51 196]
[53 194]
[54 193]
[55 192]
[56 191]
[57 190]
[58 189]
[59 188]
[63 184]
[64 183]
[65 182]
[69 135]
[70 134]
[71 133]
[72 132]
[73 131]
[74 130]
[75 129]
[76 128]
[82 109]
[83 108]
[84 107]
[85 106]
[86 105]
[87 104]
[89 103]
[90 102]
[91 101]
[92 100]
[114 122]
[115 121]
[144 176]
[145 175]
[146 174]
[147 173]
[148 172]
[149 171]
[153 168]
[154 167]
[155 166]
[157 164]
[158 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
