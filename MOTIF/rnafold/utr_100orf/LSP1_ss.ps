%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:35:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUCAGGCCAGGUCGCCGCCUGAGCAGAGGCUGCAGCCUGGGCAGUCCCGGGCUUCUGAGGAGGAACUCUAGCAGACAGGGCCUGGAUACCUCUUGAGAUGCAGAGAGAUGGCUCCGAUCUGGUCCCCACCUGGCAGGGUCUCCGGCUGUCACCUGAGUUCAGGACCAGCACCAGGAUCUGCAGUGGGCCCCUGGCUGGGCACACCUC\
) } def
/len { sequence length } bind def

/coor [
[97.50251770 300.36517334]
[109.73976135 290.97085571]
[108.38875580 276.03179932]
[107.03775024 261.09277344]
[98.18559265 249.11410522]
[104.64850616 234.67314148]
[103.29750061 219.73410034]
[101.94649506 204.79507446]
[100.59548950 189.85603333]
[99.24448395 174.91699219]
[97.89347839 159.97796631]
[96.54247284 145.03892517]
[84.42407227 145.96800232]
[71.69786072 143.50279236]
[59.33690262 137.42301941]
[49.26090622 148.53492737]
[45.72261810 163.95539856]
[31.44154930 168.18627930]
[21.36555481 179.29817200]
[11.28956032 190.41007996]
[1.21356571 201.52197266]
[2.23557472 217.29318237]
[-8.25631237 229.11248779]
[-24.03744507 229.96769714]
[-35.74515915 219.35144043]
[-36.43347168 203.56214905]
[-25.69402313 191.96733093]
[-9.89833450 191.44598389]
[0.17765947 180.33409119]
[10.25365353 169.22218323]
[20.32964897 158.11029053]
[23.14723587 143.48460388]
[38.14900589 138.45892334]
[48.22500229 127.34703064]
[40.59520340 114.43245697]
[26.00049400 117.89575958]
[11.40578365 121.35905457]
[-3.18892550 124.82235718]
[-17.78363419 128.28565979]
[-32.37834549 131.74896240]
[-46.97305298 135.21226501]
[-61.56776428 138.67556763]
[-73.11502075 150.31999207]
[-88.90193176 145.88092041]
[-92.68827820 129.92486572]
[-80.57898712 118.86605835]
[-65.03106689 124.08084869]
[-50.43635559 120.61755371]
[-35.84164429 117.15425110]
[-21.24693680 113.69094849]
[-6.65222645 110.22764587]
[7.94248343 106.76435089]
[22.53719330 103.30104828]
[37.13190079 99.83774567]
[40.92336655 85.32482910]
[29.88750839 75.16560364]
[18.85164833 65.00637817]
[3.45820165 61.35229492]
[-0.66522580 47.03982925]
[-11.70108414 36.88060760]
[-22.73694229 26.72138405]
[-33.77280045 16.56216049]
[-44.80865860 6.40293694]
[-55.84452057 -3.75628662]
[-69.14945221 -1.65426600]
[-81.06164551 -7.51383495]
[-87.33065796 -18.99448967]
[-85.86415863 -31.79691887]
[-96.74606323 -42.12087250]
[-107.62797546 -52.44482803]
[-118.50988007 -62.76878357]
[-129.46907043 -73.01066589]
[-140.50492859 -83.16989136]
[-155.98913574 -80.98507690]
[-169.22766113 -89.30828857]
[-173.96965027 -104.20954132]
[-167.97612000 -118.65293121]
[-154.07699585 -125.81872559]
[-138.83505249 -122.32345581]
[-129.44703674 -109.81748962]
[-130.34571838 -94.20574951]
[-119.30985260 -84.04652405]
[-112.25856781 -81.82874298]
[-108.18592834 -73.65069580]
[-97.30401611 -63.32674026]
[-86.42211151 -53.00278473]
[-75.54019928 -42.67882919]
[-58.76319504 -43.83953857]
[-46.08757019 -32.28018570]
[-45.68529510 -14.79214573]
[-34.64943695 -4.63292170]
[-23.61357880 5.52630186]
[-12.57771969 15.68552494]
[-1.54186082 25.84474945]
[9.49399757 36.00397110]
[24.09808731 38.93140411]
[29.01087189 53.97052002]
[40.04673004 64.12974548]
[51.08259201 74.28897095]
[66.36652374 60.47415543]
[84.58593750 53.97747040]
[102.64853668 54.90626526]
[106.00204468 40.28593826]
[109.35556030 25.66561317]
[112.70907593 11.04528713]
[115.73211670 -3.64692950]
[118.42314148 -18.40356827]
[121.11417389 -33.16020584]
[115.08898926 -48.41239166]
[125.49571228 -61.08646774]
[141.62879944 -58.14442825]
[146.89190674 -42.61279297]
[135.87081909 -30.46917534]
[133.17977905 -15.71253777]
[130.48875427 -0.95589995]
[132.18400574 2.13744521]
[132.46429443 6.20595264]
[130.88745117 10.57521534]
[127.32939911 14.39880085]
[123.97589111 29.01912689]
[120.62237549 43.63945389]
[117.26885986 58.25978088]
[127.23224640 63.96023941]
[135.43708801 71.98799896]
[141.35354614 81.82465363]
[144.59957886 92.83499146]
[159.59915161 92.94773102]
[174.59872437 93.06046295]
[189.59831238 93.17320251]
[204.59788513 93.28593445]
[211.89396667 85.21633911]
[222.21446228 82.55006409]
[232.09062195 85.93383789]
[238.33880615 94.02160645]
[253.32821655 94.58515930]
[268.31762695 95.14871216]
[283.30703735 95.71225739]
[298.29644775 96.27581024]
[312.37756348 89.06244659]
[324.80517578 97.27244568]
[339.79458618 97.83599854]
[354.78399658 98.39954376]
[364.40353394 86.36747742]
[379.09173584 82.35372925]
[393.16052246 87.69538116]
[401.28890991 100.14797211]
[416.27832031 100.71152496]
[431.26773071 101.27507019]
[446.25714111 101.83862305]
[455.01300049 91.60266113]
[467.87780762 88.32679749]
[480.09915161 92.98994446]
[487.29449463 103.68011475]
[502.27374268 104.46890259]
[517.25299072 105.25769806]
[532.23223877 106.04648590]
[546.59234619 98.12696838]
[560.48913574 106.83392334]
[559.62677002 123.21038818]
[544.89239502 130.40965271]
[531.44342041 121.02573395]
[516.46417236 120.23694611]
[501.48495483 119.44815063]
[486.50570679 118.65935516]
[474.49777222 130.43325806]
[457.35217285 129.86917114]
[445.69360352 116.82803345]
[430.70419312 116.26448059]
[415.71478271 115.70093536]
[400.72537231 115.13738251]
[391.68487549 126.94448090]
[377.25473022 131.21466064]
[362.90936279 126.10935974]
[354.22042847 113.38895416]
[339.23101807 112.82540894]
[324.24160767 112.26185608]
[311.23263550 119.51553345]
[297.73291016 111.26522064]
[282.74349976 110.70166779]
[267.75408936 110.13812256]
[252.76466370 109.57456970]
[237.77525330 109.01101685]
[221.38638306 119.27050018]
[204.48515320 108.28551483]
[189.48556519 108.17277527]
[174.48599243 108.06004333]
[159.48641968 107.94730377]
[144.48684692 107.83457184]
[138.41148376 123.77008820]
[126.86089325 136.31738281]
[111.48150635 143.68792725]
[112.83251190 158.62695312]
[114.18351746 173.56599426]
[115.53452301 188.50503540]
[116.88552856 203.44406128]
[118.23653412 218.38310242]
[119.58753967 233.32212830]
[128.53633118 246.36933899]
[121.97679138 259.74176025]
[123.32779694 274.68078613]
[124.67880249 289.61984253]
[138.40286255 296.66635132]
[146.11886597 310.02551270]
[145.36465454 325.43441772]
[136.38090515 337.97619629]
[122.03427887 343.64874268]
[106.90274811 340.64202881]
[95.81472778 329.91546631]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 201]
[3 200]
[4 199]
[6 197]
[7 196]
[8 195]
[9 194]
[10 193]
[11 192]
[12 191]
[15 34]
[16 33]
[18 31]
[19 30]
[20 29]
[21 28]
[35 54]
[36 53]
[37 52]
[38 51]
[39 50]
[40 49]
[41 48]
[42 47]
[55 99]
[56 98]
[57 97]
[59 95]
[60 94]
[61 93]
[62 92]
[63 91]
[64 90]
[68 87]
[69 86]
[70 85]
[71 84]
[72 82]
[73 81]
[102 122]
[103 121]
[104 120]
[105 119]
[106 115]
[107 114]
[108 113]
[126 188]
[127 187]
[128 186]
[129 185]
[130 184]
[134 182]
[135 181]
[136 180]
[137 179]
[138 178]
[140 176]
[141 175]
[142 174]
[146 170]
[147 169]
[148 168]
[149 167]
[153 164]
[154 163]
[155 162]
[156 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
