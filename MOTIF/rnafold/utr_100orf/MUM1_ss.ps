%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:23:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGGGGAGCGGCGGCGGCGGCGGCGGCGGCGGUGGCGGAGGCGGACACAUUGGCGUGAGACCUGGGAGUACGUUGUGCCAAAUCAUUGCCACUUGCCACAUGAGUGUAAAUGAUGGCGGAUGCCAAGUAUGUCCUCUGCCGAUGGGAAAAGCGAUUAUGGCCUGCGAAGGUUUUGGCCCGAACCGCGACUUCAACAAAAAAUAAGAGAA\
) } def
/len { sequence length } bind def

/coor [
[119.43225098 180.49851990]
[114.60625458 166.29606628]
[109.78025818 152.09361267]
[104.95426178 137.89115906]
[100.12825775 123.68869781]
[92.71972656 122.52095795]
[83.28862762 134.18519592]
[77.90265656 120.18547058]
[70.49412537 119.01773071]
[61.53342819 131.04710388]
[59.49448013 146.73637390]
[45.68647003 152.32101440]
[36.72577667 164.35038757]
[34.68682480 180.03965759]
[20.87881851 185.62429810]
[11.91812229 197.65368652]
[9.87917233 213.34295654]
[-3.92883563 218.92759705]
[-12.88953209 230.95697021]
[-14.25939941 247.29879761]
[-29.20999908 254.03761292]
[-42.36143494 244.24108887]
[-40.18463898 227.98706055]
[-24.91890907 221.99627686]
[-15.95821381 209.96688843]
[-14.56019306 195.13804626]
[-0.11125584 188.69297791]
[8.84944057 176.66360474]
[10.24746037 161.83476257]
[24.69639778 155.38969421]
[33.65709305 143.36032104]
[35.05511475 128.53146362]
[49.50405121 122.08641052]
[58.46474838 110.05702972]
[59.35756302 95.08362579]
[51.88982010 82.07467651]
[44.42208099 69.06571960]
[36.95433807 56.05677032]
[29.48659897 43.04781723]
[22.01885796 30.03886414]
[17.50391960 27.41924286]
[14.72334480 23.70148659]
[13.80499458 19.73012924]
[14.52301407 16.27805901]
[7.64360142 2.94863009]
[0.76418906 -10.38079929]
[-6.11522341 -23.71022797]
[-12.99463558 -37.03965759]
[-29.75440598 -42.05258179]
[-37.54977036 -57.33483505]
[-31.99200058 -73.20776367]
[-39.06910706 -86.43329620]
[-46.14621353 -99.65882111]
[-53.22331619 -112.88434601]
[-60.30042267 -126.10987854]
[-67.37752533 -139.33540344]
[-74.45463562 -152.56092834]
[-70.88526154 -137.99180603]
[-76.22754669 -123.97537994]
[-88.58857727 -115.47802734]
[-103.58853912 -115.51056671]
[-115.91258240 -124.06147003]
[-121.19400024 -138.10093689]
[-117.56185150 -152.65379333]
[-128.51776123 -162.89918518]
[-139.47366333 -173.14457703]
[-154.83801270 -176.91918945]
[-158.84915161 -191.26351929]
[-169.80506897 -201.50891113]
[-180.76097107 -211.75430298]
[-195.91116333 -208.96539307]
[-209.63809204 -215.55513000]
[-216.76829529 -228.80746460]
[-214.75189209 -243.54083252]
[-225.70779419 -253.78622437]
[-236.66371155 -264.03161621]
[-252.36231995 -270.43392944]
[-250.55601501 -287.29138184]
[-233.85731506 -290.22225952]
[-226.41831970 -274.98751831]
[-215.46240234 -264.74212646]
[-204.50650024 -254.49673462]
[-189.94119263 -257.49502563]
[-176.24122620 -251.26806641]
[-168.74723816 -238.01312256]
[-170.51557922 -222.71020508]
[-159.55967712 -212.46481323]
[-148.60375977 -202.21942139]
[-134.02305603 -199.17764282]
[-129.22827148 -184.10049438]
[-118.27236938 -173.85510254]
[-107.31645966 -163.60971069]
[-100.37144470 -166.44110107]
[-79.53640747 -174.93528748]
[-78.86661530 -189.92031860]
[-78.19683075 -204.90536499]
[-77.52704620 -219.89039612]
[-76.85726166 -234.87544250]
[-76.18747711 -249.86047363]
[-75.62926483 -264.85009766]
[-75.18266296 -279.84344482]
[-74.73605347 -294.83679199]
[-87.09441376 -304.22030640]
[-91.54478455 -319.08551025]
[-86.37592316 -333.71636963]
[-73.57535553 -342.48706055]
[-58.06515503 -342.02505493]
[-45.80932236 -332.50802612]
[-41.52046585 -317.59542847]
[-46.84774399 -303.02148438]
[-59.74270630 -294.39016724]
[-60.18931198 -279.39682007]
[-60.63591766 -264.40347290]
[-57.69296265 -257.62405396]
[-61.20243835 -249.19068909]
[-61.87222672 -234.20565796]
[-62.54201126 -219.22061157]
[-63.21179581 -204.23558044]
[-63.88158035 -189.25053406]
[-64.55136871 -174.26550293]
[-61.22910690 -159.63803101]
[-54.15200043 -146.41250610]
[-47.07489395 -133.18698120]
[-39.99779129 -119.96145630]
[-32.92068481 -106.73592377]
[-25.84357834 -93.51039886]
[-18.76647377 -80.28487396]
[-6.03310013 -78.31237793]
[3.37973928 -69.23049927]
[5.87997675 -56.19365692]
[0.33479321 -43.91907120]
[7.21420574 -30.58964157]
[14.09361839 -17.26021194]
[20.97303009 -3.93078256]
[27.85244370 9.39864635]
[35.02780914 22.57112312]
[42.49555206 35.58007431]
[49.96329117 48.58902740]
[57.43103409 61.59798050]
[64.89877319 74.60693359]
[72.36651611 87.61588287]
[81.66086578 72.87619781]
[98.60741425 64.82559204]
[118.56247711 67.23001862]
[135.20181274 80.74813843]
[150.08183289 82.64143372]
[164.96186829 84.53472900]
[177.38107300 75.13252258]
[192.44456482 77.26456451]
[201.33160400 89.16230011]
[216.21163940 91.05559540]
[231.09167480 92.94889069]
[221.13752747 81.72769928]
[219.56536865 66.81031799]
[226.96156311 53.76055527]
[240.56752014 47.44565201]
[255.30854797 50.22091293]
[265.68661499 61.05123138]
[267.83093262 75.89717102]
[260.94177246 89.22155762]
[247.58743286 96.05491638]
[262.13705444 99.70300293]
[276.68667603 103.35108948]
[291.23629761 106.99917603]
[306.84909058 101.98195648]
[318.81716919 113.19342041]
[314.82879639 129.10017395]
[298.98687744 133.33871460]
[287.58819580 121.54879761]
[273.03857422 117.90071106]
[258.48895264 114.25262451]
[243.93933105 110.60453796]
[229.19837952 107.82892609]
[214.31834412 105.93563080]
[199.43830872 104.04233551]
[187.85501099 113.33549500]
[172.73756409 111.62740326]
[163.06858826 99.41476440]
[148.18855286 97.52146912]
[133.30851746 95.62817383]
[128.56405640 101.43680573]
[133.88075256 115.46295929]
[119.07516479 113.05406952]
[114.33071899 118.86270142]
[119.15671539 133.06515503]
[123.98271179 147.26760864]
[128.80871582 161.47007751]
[133.63470459 175.67253113]
[148.67166138 174.51451111]
[163.52403259 177.13320923]
[177.25820923 183.36404419]
[189.01084900 192.81530762]
[198.04315186 204.89289856]
[203.78736877 218.83760071]
[205.88238525 233.77284241]
[204.19651794 248.75979614]
[198.83575439 262.85635376]
[190.13705444 275.17639160]
[178.64724731 284.94549561]
[165.08856201 291.54949951]
[150.31333923 294.57336426]
[135.25035095 293.82690430]
[120.84647369 289.35714722]
[108.00713348 281.44497681]
[97.53943634 270.58779907]
[90.10137939 257.46810913]
[86.16053772 242.91062927]
[85.96462250 227.83042908]
[89.52595520 213.17547607]
[96.62067413 199.86698914]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 188]
[2 187]
[3 186]
[4 185]
[5 184]
[9 34]
[10 33]
[12 31]
[13 30]
[15 28]
[16 27]
[18 25]
[19 24]
[35 141]
[36 140]
[37 139]
[38 138]
[39 137]
[40 136]
[44 135]
[45 134]
[46 133]
[47 132]
[48 131]
[51 127]
[52 126]
[53 125]
[54 124]
[55 123]
[56 122]
[57 121]
[64 92]
[65 91]
[66 90]
[68 88]
[69 87]
[70 86]
[74 82]
[75 81]
[76 80]
[94 120]
[95 119]
[96 118]
[97 117]
[98 116]
[99 115]
[100 113]
[101 112]
[102 111]
[145 180]
[146 179]
[147 178]
[150 175]
[151 174]
[152 173]
[161 172]
[162 171]
[163 170]
[164 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
