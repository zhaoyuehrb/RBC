%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:12:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGGAUGUACAGAGGAUCCCCAACCGCCUGCGAAACCCAAGCCGCCGCGUAGGAGCGUGCGUUCGGGCCCUCUUCUCCCACCUGUUCGACUCCCCAUCCCCAGGAUGUCAACCUCAGUCCCUCAAGGCCAUACCUGGACCCAACGGGUGAAGAAAGACGAUGAGGAGGAGGACCCGCUGGACCAGCUGAUCUCCCGCUCUGGCU\
) } def
/len { sequence length } bind def

/coor [
[79.23831940 266.06066895]
[70.08724213 279.30010986]
[56.12961197 287.19564819]
[40.18404007 288.21118164]
[34.81563950 302.21762085]
[29.44723892 316.22406006]
[24.07884026 330.23049927]
[33.29511261 342.60238647]
[34.33678055 357.99456787]
[26.87145805 371.49539185]
[13.28129578 378.79684448]
[-2.09713125 377.56903076]
[-14.35662365 368.20373535]
[-19.58522224 353.68942261]
[-16.11450195 338.65753174]
[-5.05195332 327.90469360]
[10.07240200 324.86209106]
[15.44080162 310.85565186]
[20.80920219 296.84921265]
[26.17760086 282.84280396]
[16.17420959 273.22732544]
[10.57421303 260.48489380]
[10.25355625 246.52659607]
[15.29368114 233.45962524]
[24.96424294 223.26924133]
[37.82876205 217.51710510]
[51.95792770 217.10206604]
[57.53929901 203.17912292]
[63.12067032 189.25617981]
[58.98130035 170.37062073]
[75.01373291 158.15505981]
[80.16791534 144.06838989]
[85.32209778 129.98170471]
[80.33708191 124.81662750]
[76.83020020 118.96631622]
[74.85237885 112.81161499]
[74.36296082 106.72129822]
[59.36994171 106.26385498]
[44.37691498 105.80641174]
[30.34720421 113.11925507]
[17.86181068 104.99742126]
[2.86878753 104.53997803]
[-12.12423611 104.08254242]
[-20.80129051 106.94966125]
[-27.34192276 103.50206757]
[-42.32622910 102.81603241]
[-57.31532669 102.24428558]
[-72.30834961 101.78684235]
[-87.30137634 101.32939911]
[-98.63911438 112.33989716]
[-114.44026947 112.02497101]
[-125.33028412 100.57144928]
[-124.84831238 84.77451324]
[-113.28029633 74.00620270]
[-97.48934174 74.65515900]
[-86.84393311 86.33637238]
[-71.85090637 86.79381561]
[-56.85788345 87.25125885]
[-50.07362366 84.31194305]
[-41.64019775 87.83173370]
[-26.65589333 88.51776123]
[-11.66679287 89.08951569]
[3.32623005 89.54695892]
[18.31925392 90.00440216]
[31.27656364 82.65882874]
[44.83435822 90.81338501]
[59.82738113 91.27082825]
[74.82040405 91.72827148]
[86.34201050 77.28672791]
[104.49990082 73.88134003]
[111.12567902 60.42403793]
[117.75145721 46.96673203]
[124.37724304 33.50942993]
[130.27561951 19.71779633]
[135.42979431 5.63112068]
[140.58398438 -8.45555496]
[145.73815918 -22.54223061]
[141.02433777 -34.55095291]
[145.61021423 -46.17922592]
[156.52899170 -51.39138031]
[161.89739990 -65.39781952]
[167.26579285 -79.40425873]
[172.63418579 -93.41069031]
[178.00259399 -107.41712952]
[183.37098694 -121.42356873]
[188.73939514 -135.43000793]
[194.10778809 -149.43644714]
[179.84022522 -167.98931885]
[188.81553650 -195.64460754]
[187.21728516 -210.55921936]
[185.61901855 -225.47383118]
[183.90708923 -240.37582397]
[182.08157349 -255.26432800]
[180.25605774 -270.15283203]
[166.31478882 -276.75924683]
[158.17774963 -289.86618042]
[158.44143677 -305.29129028]
[167.02171326 -318.11245728]
[181.18063354 -324.23852539]
[196.40014648 -321.71463013]
[207.82376099 -311.34619141]
[211.80622864 -296.44171143]
[207.07678223 -281.75717163]
[195.14454651 -271.97833252]
[196.97007751 -257.08984375]
[198.79559326 -242.20133972]
[202.73141479 -235.94233704]
[200.53363037 -227.07209778]
[202.13189697 -212.15748596]
[203.73014832 -197.24287415]
[210.79293823 -194.71955872]
[215.83955383 -208.84513855]
[216.27415466 -223.83883667]
[230.66831970 -228.05879211]
[239.12974548 -215.67315674]
[229.96511841 -203.79850769]
[224.91850281 -189.67294312]
[231.98127747 -187.14964294]
[242.66845703 -197.67504883]
[253.35562134 -208.20046997]
[264.04278564 -218.72589111]
[265.05017090 -222.95870972]
[267.14334106 -226.31178284]
[269.91165161 -228.55154419]
[272.91073608 -229.60203552]
[275.71710205 -229.54228210]
[287.02606201 -239.39659119]
[298.33502197 -249.25090027]
[300.86520386 -265.09317017]
[314.89910889 -272.86676025]
[329.67114258 -266.60842896]
[333.84945679 -251.11904907]
[324.22879028 -238.28073120]
[308.18933105 -237.94194031]
[296.88037109 -228.08763123]
[285.57138062 -218.23332214]
[274.56820679 -208.03871155]
[263.88104248 -197.51330566]
[253.19386292 -186.98788452]
[242.50669861 -176.46246338]
[237.87100220 -156.06134033]
[223.77198792 -144.42472839]
[208.11422729 -144.06803894]
[202.74583435 -130.06159973]
[197.37742615 -116.05516815]
[192.00903320 -102.04872894]
[186.64062500 -88.04228973]
[181.27223206 -74.03585815]
[175.90382385 -60.02941895]
[170.53543091 -46.02297974]
[174.22090149 -28.86706734]
[159.82482910 -17.38805199]
[154.67065430 -3.30137610]
[149.51647949 10.78530025]
[144.36228943 24.87197495]
[157.94313049 18.50322342]
[172.47286987 22.22967529]
[181.31217957 34.34853363]
[180.42192078 49.32209015]
[170.20892334 60.30819321]
[155.33998108 62.28674698]
[142.60946655 54.35365295]
[137.83454895 40.13520813]
[131.20877075 53.59251404]
[124.58298492 67.04981995]
[117.95719910 80.50711823]
[129.89949036 98.39347076]
[125.11812592 121.98689270]
[135.31272888 132.99008179]
[145.50733948 143.99325562]
[155.70193481 154.99644470]
[165.89654541 165.99963379]
[179.42547607 163.35002136]
[192.39375305 167.69775391]
[201.44712830 177.80548096]
[204.29986572 190.96090698]
[200.31112671 203.70414734]
[210.33676147 214.86152649]
[220.36238098 226.01889038]
[230.38800049 237.17626953]
[245.47189331 244.91658020]
[242.20970154 261.55371094]
[225.31968689 263.02465820]
[219.23062134 247.20188904]
[209.20500183 236.04450989]
[199.17938232 224.88714600]
[189.15376282 213.72976685]
[172.89089966 215.95178223]
[158.36192322 207.96366882]
[151.38665771 192.73918152]
[154.89335632 176.19422913]
[144.69876099 165.19105530]
[134.50415039 154.18786621]
[124.30954742 143.18467712]
[114.11494446 132.18148804]
[99.40876770 135.13589478]
[94.25459290 149.22256470]
[89.10041046 163.30923462]
[94.24504089 172.89828491]
[93.28064728 183.51690674]
[86.76643372 191.67869568]
[77.04360962 194.83755493]
[71.46224213 208.76049805]
[65.88086700 222.68342590]
[76.95605469 234.60038757]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 20]
[5 19]
[6 18]
[7 17]
[27 204]
[28 203]
[29 202]
[31 198]
[32 197]
[33 196]
[37 68]
[38 67]
[39 66]
[41 64]
[42 63]
[43 62]
[45 61]
[46 60]
[47 58]
[48 57]
[49 56]
[70 166]
[71 165]
[72 164]
[73 163]
[74 155]
[75 154]
[76 153]
[77 152]
[80 150]
[81 149]
[82 148]
[83 147]
[84 146]
[85 145]
[86 144]
[87 143]
[89 110]
[90 109]
[91 108]
[92 106]
[93 105]
[94 104]
[118 140]
[119 139]
[120 138]
[121 137]
[126 136]
[127 135]
[128 134]
[168 195]
[169 194]
[170 193]
[171 192]
[172 191]
[177 187]
[178 186]
[179 185]
[180 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
