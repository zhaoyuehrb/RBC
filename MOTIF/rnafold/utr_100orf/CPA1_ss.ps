%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:24:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAACUCCCACCCCAGCCUCCCCGUGGGACAGGACCCAGGUGCUGGGGGAGAACAGACCUCGGGAGCAGCCAGGAGUCCUCGGUCCUGGGAGGGUUUAAAAGCCAGGGGGCCGUCUCGACCUCAGUCUGACCUUCCCUCCCGGCAGCAGCAUGCGGGGGUUGCUGGUGUUGAGUGUCCUGUUGGGGGCUGUCUUUGGCAAGGAGGACUUUGUGGGGCAUCAGGUGCUCCGAAUCUCUGUAGCCGAUGAGG\
) } def
/len { sequence length } bind def

/coor [
[301.06759644 326.47146606]
[302.33819580 319.68084717]
[305.07211304 313.96563721]
[308.86193848 309.60687256]
[296.98550415 300.44445801]
[285.10906982 291.28204346]
[273.23260498 282.11962891]
[261.21600342 283.35861206]
[251.25048828 275.84481812]
[248.99444580 263.16268921]
[237.23359680 253.85234070]
[222.45223999 252.01913452]
[216.43458557 237.38702393]
[204.67375183 228.07667542]
[192.91290283 218.76632690]
[181.15206909 209.45597839]
[169.39122009 200.14562988]
[151.90681458 198.51826477]
[145.28684998 181.32240295]
[133.41040039 172.15997314]
[121.53395081 162.99755859]
[109.65750885 153.83512878]
[97.78105927 144.67271423]
[85.90460968 135.51029968]
[74.02816010 126.34786987]
[59.49568176 122.63207245]
[44.67889404 124.96932220]
[29.86210251 127.30656433]
[15.04531097 129.64381409]
[0.22852056 131.98104858]
[-14.55785656 134.50355530]
[-29.31150436 137.21093750]
[-44.06515121 139.91831970]
[-58.81879807 142.62568665]
[-73.57244873 145.33306885]
[-88.30886078 148.13272095]
[-103.02746582 151.02455139]
[-115.07709503 161.27720642]
[-129.05726624 156.13871765]
[-143.77587891 159.03053284]
[-158.47608948 162.01441956]
[-173.15734863 165.09022522]
[-187.83860779 168.16604614]
[-202.51986694 171.24185181]
[-216.94798279 185.34399414]
[-235.03230286 178.45780945]
[-249.63197327 181.90013123]
[-264.23162842 185.34243774]
[-278.83132935 188.78475952]
[-284.70327759 203.14790344]
[-297.91394043 211.28782654]
[-313.38351440 210.07456970]
[-325.16363525 199.97465515]
[-328.72460938 184.87170410]
[-322.69717407 170.57312012]
[-309.39901733 162.57698059]
[-293.94351196 163.95797729]
[-282.27362061 174.18508911]
[-267.67395020 170.74276733]
[-253.07429504 167.30044556]
[-238.47462463 163.85812378]
[-233.92176819 154.74559021]
[-224.92231750 149.52148438]
[-214.31359863 150.11099243]
[-205.59568787 156.56059265]
[-190.91442871 153.48478699]
[-176.23316956 150.40896606]
[-161.55191040 147.33316040]
[-155.66505432 142.89709473]
[-146.66769409 144.31193542]
[-131.94909668 141.42012024]
[-120.95223236 131.37429810]
[-105.91928864 136.30593872]
[-91.20068359 133.41412354]
[-85.25876617 129.05207825]
[-76.27982330 130.57942200]
[-61.52617645 127.87204742]
[-46.77252960 125.16466522]
[-32.01888275 122.45729065]
[-17.26523399 119.74991608]
[-13.87616825 116.41834259]
[-8.36659050 115.16420746]
[-2.10872436 117.16426086]
[12.70806599 114.82701874]
[27.52485657 112.48977661]
[42.34164810 110.15252686]
[57.15843964 107.81528473]
[65.24649811 95.18265533]
[61.16811752 80.74774170]
[57.08973694 66.31282806]
[53.01135254 51.87791061]
[48.93297195 37.44299316]
[44.85459137 23.00807762]
[40.77620697 8.57316208]
[25.71359444 6.73105288]
[12.53929806 -0.71750045]
[3.24554706 -12.61034966]
[-0.77597439 -27.11603737]
[1.05754173 -42.01580429]
[8.43578911 -55.04296494]
[20.20734024 -64.22772217]
[16.12895775 -78.66264343]
[2.88968778 -82.44525146]
[-6.68057871 -92.19356537]
[-10.16292572 -105.29125977]
[-6.75263309 -118.29610443]
[2.55789423 -127.84459686]
[-1.33950174 -142.32942200]
[-5.23689747 -156.81425476]
[-9.13429356 -171.29908752]
[-20.19150734 -182.61494446]
[-16.02682304 -196.91545105]
[-19.92421913 -211.40028381]
[-29.87832451 -225.12443542]
[-19.44609451 -238.48873901]
[-3.71613359 -232.16381836]
[-5.43938923 -215.29768372]
[-1.54199326 -200.81285095]
[9.23645306 -190.53305054]
[5.35053682 -175.19648743]
[9.24793243 -160.71165466]
[13.14532852 -146.22682190]
[17.04272461 -131.74198914]
[32.56369781 -126.36001587]
[41.90417862 -112.64449310]
[41.21266174 -95.89841461]
[30.56387520 -82.74102020]
[34.64225769 -68.30610657]
[49.47975159 -66.63935852]
[62.58421326 -59.39929962]
[71.94367218 -47.66194916]
[76.10754395 -33.19647980]
[74.41139221 -18.19859123]
[67.08274841 -4.95721865]
[55.21112442 4.49477959]
[59.28950500 18.92969513]
[63.36788940 33.36461258]
[67.44627380 47.79952621]
[71.52465057 62.23444366]
[75.60303497 76.66935730]
[79.68141937 91.10427856]
[89.79514313 82.24773407]
[102.14813995 81.35114288]
[109.67521667 68.37644196]
[109.16832733 51.98512650]
[123.25074005 43.58169937]
[137.43568420 51.81088257]
[137.13090515 68.20719910]
[122.64992523 75.90351868]
[115.12284851 88.87822723]
[118.43204498 107.52333069]
[103.38671875 120.77014923]
[83.19058228 114.47142029]
[95.06703186 123.63384247]
[106.94348145 132.79626465]
[118.81992340 141.95869446]
[130.69638062 151.12110901]
[142.57283020 160.28352356]
[154.44927979 169.44595337]
[167.30070496 168.57048035]
[177.00001526 176.42492676]
[178.70156860 188.38479614]
[190.46241760 197.69514465]
[202.22325134 207.00549316]
[213.98410034 216.31584167]
[225.74493408 225.62619019]
[241.36750793 228.12533569]
[246.54394531 242.09150696]
[258.30477905 251.40185547]
[276.59072876 253.67019653]
[282.39501953 270.24316406]
[294.27148438 279.40557861]
[306.14791870 288.56802368]
[318.02438354 297.73043823]
[332.57983398 301.35522461]
[347.36621094 298.83270264]
[362.15258789 296.31021118]
[376.93896484 293.78768921]
[391.72534180 291.26516724]
[403.99389648 280.38333130]
[419.46447754 285.82330322]
[422.22225952 301.98889160]
[409.43029785 312.25033569]
[394.24783325 306.05154419]
[379.46145630 308.57406616]
[364.67507935 311.09658813]
[349.88870239 313.61907959]
[335.10232544 316.14160156]
[332.83831787 323.29171753]
[328.31033325 337.59197998]
[326.04635620 344.74209595]
[336.68609619 355.31546021]
[351.92871094 359.55490112]
[355.50241089 374.01440430]
[366.14215088 384.58776855]
[376.78189087 395.16113281]
[387.42163086 405.73449707]
[398.06137085 416.30786133]
[415.56326294 415.93981934]
[427.66860962 428.11306763]
[427.22039795 444.93655396]
[437.99163818 455.37591553]
[448.76287842 465.81527710]
[459.53411865 476.25463867]
[470.30535889 486.69400024]
[479.49163818 483.75878906]
[489.05929565 484.35260010]
[497.70724487 488.35275269]
[504.27471924 495.17614746]
[507.89709473 503.86392212]
[508.11941528 513.21624756]
[504.95333862 521.95770264]
[515.18865967 532.92303467]
[525.42395020 543.88836670]
[535.65930176 554.85369873]
[545.89459229 565.81903076]
[556.12988281 576.78436279]
[566.36523438 587.74963379]
[576.60052490 598.71496582]
[591.82843018 606.16796875]
[588.88220215 622.86395264]
[572.02307129 624.65478516]
[565.63519287 608.95031738]
[555.39990234 597.98498535]
[545.16455078 587.01965332]
[534.92926025 576.05432129]
[524.69396973 565.08898926]
[514.45861816 554.12365723]
[504.22332764 543.15832520]
[493.98800659 532.19299316]
[473.55014038 533.16827393]
[458.87033081 518.49377441]
[459.86599731 497.46527100]
[449.09475708 487.02587891]
[438.32351685 476.58651733]
[427.55227661 466.14715576]
[416.78103638 455.70779419]
[404.06771851 457.71118164]
[392.34320068 451.94747925]
[385.97817993 440.31610107]
[387.48800659 426.94760132]
[376.84826660 416.37423706]
[366.20852661 405.80087280]
[355.56878662 395.22750854]
[344.92904663 384.65414429]
[330.44744873 381.17102051]
[326.11273193 365.95520020]
[315.47299194 355.38183594]
[308.77093506 348.95544434]
[304.12619019 341.62057495]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 174]
[5 173]
[6 172]
[7 171]
[10 169]
[11 168]
[13 166]
[14 165]
[15 164]
[16 163]
[17 162]
[19 159]
[20 158]
[21 157]
[22 156]
[23 155]
[24 154]
[25 153]
[26 87]
[27 86]
[28 85]
[29 84]
[30 83]
[31 80]
[32 79]
[33 78]
[34 77]
[35 76]
[36 74]
[37 73]
[39 71]
[40 70]
[41 68]
[42 67]
[43 66]
[44 65]
[46 61]
[47 60]
[48 59]
[49 58]
[88 141]
[89 140]
[90 139]
[91 138]
[92 137]
[93 136]
[94 135]
[101 128]
[102 127]
[107 123]
[108 122]
[109 121]
[110 120]
[112 118]
[113 117]
[143 150]
[144 149]
[175 188]
[176 187]
[177 186]
[178 185]
[179 184]
[191 248]
[192 247]
[194 245]
[195 244]
[196 243]
[197 242]
[198 241]
[201 237]
[202 236]
[203 235]
[204 234]
[205 233]
[212 230]
[213 229]
[214 228]
[215 227]
[216 226]
[217 225]
[218 224]
[219 223]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
