%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:23:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAUAGUAAAGGUCGGCCCGCGCAAGAUGGCGGCCCCCUUGGAACUCAGUUGCUGGGGAGGCGGCUGGGGACUCCCAUCGGUUCACAGCGAGUCCCUGGUGGUGAUGGCGAUGUACCAAUUUUGACAACUGAAGACGACAUGGUUUCUCAGCCAGCAAAAAUACUAAACUUUUUAAGAAAACAGAAAUAUAAUGCUGAUUAUGAACUCUCAGCAAAACAAGGGGCAGAUACAUUGGCUU\
) } def
/len { sequence length } bind def

/coor [
[181.87580872 455.93743896]
[181.77059937 471.24258423]
[174.55455017 484.74026489]
[161.88586426 493.32879639]
[146.67570496 495.03460693]
[132.41926575 489.46572876]
[122.39257050 477.90182495]
[118.89966583 463.00021362]
[122.74321747 448.18515015]
[133.03997803 436.86105347]
[147.42385864 431.63012695]
[149.37367249 416.75738525]
[151.32348633 401.88464355]
[153.27330017 387.01190186]
[155.22311401 372.13919067]
[141.43130493 366.24124146]
[132.02445984 377.92504883]
[122.61761475 389.60885620]
[113.21076965 401.29266357]
[110.27526855 409.92065430]
[103.60436249 413.06640625]
[94.04601288 424.62658691]
[98.03915405 439.62106323]
[92.42473602 454.08682251]
[79.36161804 462.46145630]
[63.87284088 461.52478027]
[51.91415024 451.63693237]
[48.08390808 436.60003662]
[53.85491943 422.19601440]
[67.00811768 413.96359253]
[82.48582458 415.06823730]
[92.04416656 403.50805664]
[101.52696228 391.88580322]
[110.93380737 380.20199585]
[120.34065247 368.51818848]
[129.74749756 356.83438110]
[136.53120422 343.45599365]
[140.39775085 328.96292114]
[144.26429749 314.46981812]
[148.13084412 299.97671509]
[151.99737549 285.48361206]
[155.86392212 270.99050903]
[146.39443970 282.62362671]
[132.02465820 286.92587280]
[117.72039795 282.41058350]
[108.42479706 270.63806152]
[107.35017395 255.67662048]
[114.86788177 242.69647217]
[128.38002014 236.18322754]
[143.21714783 238.38768005]
[154.25215149 248.54832458]
[148.35420227 234.75650024]
[142.45625305 220.96469116]
[136.55831909 207.17286682]
[130.66036987 193.38105774]
[124.76242828 179.58923340]
[118.86448669 165.79740906]
[104.27248383 156.03308105]
[106.64609528 137.76312256]
[100.56887817 124.04936218]
[94.49165344 110.33559418]
[84.85816193 98.83795166]
[72.42017365 90.45365906]
[56.65229034 89.15578461]
[50.42362595 75.62607574]
[37.98563385 67.24178314]
[25.54763985 58.85749054]
[13.10964680 50.47319794]
[0.67165422 42.08890915]
[-11.76633835 33.70461655]
[-24.20433235 25.32032776]
[-36.64232254 16.93603706]
[-49.08031845 8.55174541]
[-61.51831055 0.16745448]
[-73.95630646 -8.21683598]
[-86.39665985 0.47810477]
[-101.13884735 4.08812237]
[-116.18911743 2.12499118]
[-129.51203918 -5.14579153]
[-139.30578613 -16.74091148]
[-144.24584961 -31.09222603]
[-143.66412354 -46.25883484]
[-137.63928223 -60.18957901]
[-126.98612976 -71.00044250]
[-113.14541626 -77.22933960]
[-97.98899841 -78.03387451]
[-83.56664276 -73.30522156]
[-71.82885742 -63.68291092]
[-64.36309052 -50.46827316]
[-62.17901230 -35.44847488]
[-65.57201385 -20.65482903]
[-53.13401794 -12.27053833]
[-40.69602585 -3.88624763]
[-28.25803375 4.49804354]
[-15.82004070 12.88233376]
[-3.38204789 21.26662445]
[9.05594540 29.65091515]
[21.49393845 38.03520584]
[33.93193054 46.41949844]
[46.36992264 54.80378723]
[58.80791473 63.18807983]
[73.68614960 63.88625717]
[80.80445862 78.01566315]
[93.24245453 86.39995575]
[100.13836670 83.45098877]
[101.92647552 68.55794525]
[113.93018341 77.55303955]
[120.82608795 74.60407257]
[123.35589600 59.81893921]
[125.88569641 45.03380585]
[120.58667755 30.12639427]
[130.35964966 18.88635826]
[132.88945007 4.10122776]
[135.41925049 -10.68390274]
[137.94905090 -25.46903419]
[126.74671173 -33.82740402]
[120.26554108 -46.13614273]
[119.71819305 -59.97000504]
[125.15444946 -72.63080597]
[135.46258545 -81.67366791]
[148.59619141 -85.37911224]
[151.31849670 -100.13001251]
[154.04081726 -114.88091278]
[143.25379944 -126.03527832]
[141.11663818 -141.40447998]
[148.45111084 -155.07872009]
[162.43695068 -161.80000305]
[177.69635010 -158.98385620]
[188.36172485 -147.71311951]
[190.33203125 -132.32164001]
[182.84965515 -118.72776031]
[168.79171753 -112.15859222]
[166.06939697 -97.40769958]
[163.34707642 -82.65679932]
[175.90014648 -72.46693420]
[181.62904358 -57.24721146]
[178.87928772 -41.12380219]
[168.30891418 -28.51921844]
[152.73419189 -22.93922997]
[150.20437622 -8.15409946]
[147.67457581 6.63103151]
[145.14477539 21.41616249]
[150.62474060 35.26604462]
[140.67082214 47.56361008]
[138.14102173 62.34874344]
[135.61122131 77.13387299]
[125.75518799 98.81318665]
[108.20542145 104.25837708]
[114.28263855 117.97213745]
[120.35986328 131.68589783]
[132.07937622 137.04074097]
[136.86402893 148.57186890]
[132.65629578 159.89947510]
[138.55424500 173.69128418]
[144.45219421 187.48310852]
[150.35012817 201.27493286]
[156.24807739 215.06674194]
[162.14602661 228.85856628]
[168.04396057 242.65037537]
[169.48017883 227.71929932]
[170.91639709 212.78820801]
[172.35261536 197.85713196]
[169.05197144 183.22477722]
[168.33685303 168.24183655]
[170.22889709 153.36163330]
[174.67085266 139.03442383]
[181.52832031 125.69368744]
[190.59379578 113.74308777]
[201.59301758 103.54419708]
[214.19316101 95.40562439]
[228.01298523 89.57360840]
[242.63435364 86.22460175]
[257.61483765 85.45995331]
[272.50122070 87.30278015]
[286.84304810 91.69734192]
[300.20635986 98.51065826]
[312.18688965 107.53657532]
[322.42208862 118.50201416]
[330.60226440 131.07518005]
[336.47994995 144.87564087]
[339.87728882 159.48585510]
[340.69146729 174.46374512]
[338.89785767 189.35612488]
[334.55075073 203.71238708]
[327.78164673 217.09819031]
[318.79537964 229.10847473]
[307.86386108 239.37986755]
[295.31781006 247.60159302]
[281.53686523 253.52487183]
[266.93795776 256.97048950]
[251.97117615 257.83441162]
[237.07759094 256.05075073]
[222.18402100 254.26707458]
[207.29045105 252.48341370]
[219.50564575 261.18908691]
[231.72085571 269.89477539]
[243.93605042 278.60043335]
[256.15124512 287.30612183]
[268.36645508 296.01181030]
[282.30642700 289.56408691]
[297.60119629 290.96618652]
[310.13653564 299.84091187]
[316.54049683 313.80102539]
[315.09048462 329.09130859]
[306.17651367 341.59875488]
[292.19641113 347.95895386]
[276.91073608 346.46102905]
[264.43127441 337.50787354]
[258.11492920 323.50790405]
[259.66076660 308.22702026]
[247.44557190 299.52133179]
[235.23037720 290.81564331]
[223.01516724 282.10995483]
[210.79997253 273.40429688]
[198.58477783 264.69860840]
[191.52783203 267.23822021]
[188.86994934 282.00085449]
[177.41395569 272.31744385]
[170.35702515 274.85705566]
[166.49047852 289.35015869]
[162.62393188 303.84326172]
[158.75738525 318.33636475]
[154.89085388 332.82943726]
[151.02430725 347.32254028]
[161.36587524 336.45736694]
[172.78977966 326.73654175]
[187.29043579 322.89846802]
[202.02745056 325.69491577]
[214.11415100 334.57815552]
[221.18295288 347.80810547]
[221.84925842 362.79330444]
[215.98251343 376.59841919]
[204.73191833 386.51931763]
[190.30125427 390.61267090]
[175.51509094 388.07583618]
[170.09585571 374.08898926]
[168.14604187 388.96173096]
[166.19622803 403.83447266]
[164.24641418 418.70718384]
[162.29660034 433.57992554]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 240]
[12 239]
[13 238]
[14 237]
[15 236]
[16 36]
[17 35]
[18 34]
[19 33]
[21 32]
[22 31]
[37 224]
[38 223]
[39 222]
[40 221]
[41 220]
[42 219]
[51 159]
[52 158]
[53 157]
[54 156]
[55 155]
[56 154]
[57 153]
[59 150]
[60 149]
[61 148]
[62 104]
[63 103]
[65 101]
[66 100]
[67 99]
[68 98]
[69 97]
[70 96]
[71 95]
[72 94]
[73 93]
[74 92]
[75 91]
[108 146]
[109 145]
[110 144]
[112 142]
[113 141]
[114 140]
[115 139]
[121 134]
[122 133]
[123 132]
[194 215]
[195 214]
[196 213]
[197 212]
[198 211]
[199 210]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
