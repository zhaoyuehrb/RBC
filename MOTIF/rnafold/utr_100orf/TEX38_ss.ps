%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:17:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGACUCUGAUUGGCUGGGCAGAUGGGCUGACUGGCUGGGCAGAUGGGUGGGUGAGUUCCCUCUCCCCAGAGCCAUCGGCCAGGUACCAAAGCUCAGCUGUAUGGAUUCCCAACAGGAGGACCUGCGCUUCCCUGGGAUGUGGGUCUCAUUGUACUUUGGAAUCCUGGGGCUGUGUUCUGUGAUAACUGGAGGGUGCAUUA\
) } def
/len { sequence length } bind def

/coor [
[77.59726715 226.41612244]
[71.75637054 212.26895142]
[73.17057800 197.02891541]
[81.51492310 184.19807434]
[94.87192535 176.72485352]
[94.40772247 161.73204041]
[93.94352722 146.73921204]
[93.47932434 131.74639893]
[93.01512146 116.75358582]
[81.21563721 107.49226379]
[66.54181671 110.60337067]
[51.86799240 113.71447754]
[44.11610031 118.55863953]
[36.94308472 116.75833893]
[22.22287750 119.64199066]
[7.50266790 122.52564240]
[-7.21754074 125.40929413]
[-21.89136124 128.52040100]
[-36.51528168 131.85821533]
[-51.13919830 135.19602966]
[-62.87166214 145.81016541]
[-77.00154114 141.09893799]
[-91.62546539 144.43675232]
[-106.24938202 147.77456665]
[-117.98184204 158.38870239]
[-132.11172485 153.67747498]
[-146.73564148 157.01528931]
[-161.35955811 160.35310364]
[-175.95721436 163.80398560]
[-190.52774048 167.36770630]
[-202.09452820 178.16212463]
[-216.29563904 173.67013550]
[-230.86614990 177.23385620]
[-245.43666077 180.79757690]
[-257.00344849 191.59201050]
[-271.20455933 187.10000610]
[-285.77508545 190.66372681]
[-300.34558105 194.22744751]
[-305.26669312 208.84889221]
[-317.32577515 218.47082520]
[-332.67486572 220.02294922]
[-346.41610718 213.00996399]
[-354.16470337 199.66970825]
[-353.44815063 184.25898743]
[-344.49505615 171.69532776]
[-330.16232300 165.98773193]
[-315.02349854 168.95748901]
[-303.90930176 179.65693665]
[-289.33880615 176.09321594]
[-274.76828003 172.52949524]
[-264.24365234 161.98995972]
[-249.00038147 166.22706604]
[-234.42987061 162.66334534]
[-219.85935974 159.09962463]
[-209.33473206 148.56008911]
[-194.09146118 152.79719543]
[-179.52093506 149.23345947]
[-173.76681519 144.58769226]
[-164.69737244 145.72918701]
[-150.07345581 142.39137268]
[-135.44953918 139.05355835]
[-124.76308441 128.67816162]
[-109.58719635 133.15065002]
[-94.96327972 129.81283569]
[-80.33935547 126.47502136]
[-69.65290070 116.09962463]
[-54.47701263 120.57211304]
[-39.85309601 117.23429871]
[-25.22917557 113.89648438]
[-21.97205162 110.39565277]
[-16.47889900 108.90769196]
[-10.10119438 110.68908691]
[4.61901474 107.80543518]
[19.33922386 104.92178345]
[34.05943298 102.03812408]
[48.75688553 99.04065704]
[63.43070602 95.92955017]
[78.10453033 92.81844330]
[88.82986450 83.84015656]
[100.71835327 83.76972198]
[108.21045685 90.11812592]
[121.35281372 82.88775635]
[134.49517822 75.65737915]
[147.63754272 68.42700958]
[147.58605957 50.85887909]
[156.39118958 35.75949097]
[171.55137634 27.23971558]
[188.84944153 27.56614685]
[203.52558899 36.55881500]
[216.43789673 28.92519379]
[224.37980652 15.24174404]
[239.27326965 15.42515945]
[252.18559265 7.79153681]
[265.09790039 0.15791377]
[273.03979492 -13.52553654]
[287.93328857 -13.34212017]
[300.84558105 -20.97574234]
[313.75790405 -28.60936546]
[326.67019653 -36.24298859]
[339.58251953 -43.87661362]
[347.52441406 -57.56006241]
[362.41790771 -57.37664795]
[375.33020020 -65.01026917]
[381.12957764 -72.07604218]
[388.50195312 -72.66033936]
[401.53082275 -80.09322357]
[414.55972290 -87.52611542]
[427.58862305 -94.95899963]
[440.61752319 -102.39189148]
[453.64642334 -109.82477570]
[466.67532349 -117.25766754]
[470.93270874 -136.88713074]
[487.98532104 -146.91149902]
[506.62341309 -141.26119995]
[519.29333496 -149.29075623]
[531.96319580 -157.32031250]
[544.63311768 -165.34988403]
[548.20489502 -180.51167297]
[561.16833496 -188.47430420]
[575.60076904 -184.97569275]
[588.27069092 -193.00526428]
[600.94061279 -201.03482056]
[613.61047363 -209.06437683]
[626.28039551 -217.09393311]
[638.95025635 -225.12350464]
[651.62017822 -233.15306091]
[664.29003906 -241.18261719]
[676.95996094 -249.21217346]
[680.36505127 -254.89140320]
[685.37634277 -257.58880615]
[690.14849854 -257.28713989]
[703.06079102 -264.92074585]
[715.97314453 -272.55438232]
[726.53076172 -285.81985474]
[742.20043945 -279.34707642]
[740.31842041 -262.49792480]
[723.60675049 -259.64205933]
[710.69445801 -252.00843811]
[697.78210449 -244.37481689]
[684.98950195 -236.54228210]
[672.31958008 -228.51272583]
[659.64971924 -220.48316956]
[646.97979736 -212.45361328]
[634.30993652 -204.42404175]
[621.64001465 -196.39448547]
[608.97015381 -188.36492920]
[596.30023193 -180.33535767]
[583.63037109 -172.30580139]
[580.63293457 -157.76100159]
[567.89825439 -149.43740845]
[552.66265869 -152.67999268]
[539.99279785 -144.65042114]
[527.32287598 -136.62086487]
[514.65301514 -128.59130859]
[515.18841553 -118.32922363]
[511.38296509 -108.69685364]
[503.86196899 -101.45954895]
[493.93801880 -97.97353363]
[483.38223267 -98.93206787]
[474.10821533 -104.22876740]
[461.07931519 -96.79588318]
[448.05041504 -89.36299133]
[435.02151489 -81.93009949]
[421.99261475 -74.49721527]
[408.96371460 -67.06432343]
[395.93481445 -59.63143921]
[382.96383667 -52.09795761]
[370.05151367 -44.46433258]
[363.03320312 -31.32689285]
[347.21615601 -30.96430016]
[334.30383301 -23.33067703]
[321.39151001 -15.69705391]
[308.47921753 -8.06343174]
[295.56689453 -0.42980829]
[288.54858398 12.70763397]
[272.73153687 13.07022572]
[259.81921387 20.70384789]
[246.90689087 28.33747101]
[239.88858032 41.47491455]
[224.07151794 41.83750534]
[211.15921021 49.47113037]
[212.64833069 62.02410889]
[209.26463318 74.25231171]
[201.47714233 84.32810211]
[190.41580200 90.73168945]
[177.70762634 92.48032379]
[165.23731995 89.27896118]
[154.86791992 81.56937408]
[141.72555542 88.79974365]
[128.58319092 96.03011322]
[115.44082642 103.26049042]
[108.00794220 116.28939056]
[108.47213745 131.28219604]
[108.93634033 146.27502441]
[109.40054321 161.26783752]
[109.86473846 176.26065063]
[123.65848541 182.89324951]
[132.78060913 195.18330383]
[135.13491821 210.30665588]
[130.18040466 224.78807068]
[119.05558014 235.29981995]
[104.31685638 239.42639160]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 196]
[6 195]
[7 194]
[8 193]
[9 192]
[10 78]
[11 77]
[12 76]
[14 75]
[15 74]
[16 73]
[17 72]
[18 69]
[19 68]
[20 67]
[22 65]
[23 64]
[24 63]
[26 61]
[27 60]
[28 59]
[29 57]
[30 56]
[32 54]
[33 53]
[34 52]
[36 50]
[37 49]
[38 48]
[81 191]
[82 190]
[83 189]
[84 188]
[89 181]
[90 180]
[92 178]
[93 177]
[94 176]
[96 174]
[97 173]
[98 172]
[99 171]
[100 170]
[102 168]
[103 167]
[105 166]
[106 165]
[107 164]
[108 163]
[109 162]
[110 161]
[111 160]
[114 154]
[115 153]
[116 152]
[117 151]
[120 148]
[121 147]
[122 146]
[123 145]
[124 144]
[125 143]
[126 142]
[127 141]
[128 140]
[131 139]
[132 138]
[133 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
