%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:13:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGCUAAUGAGCGAGUUGCCAGGCGAGACAGGAACUUCUUUCCCCUUCUCUGUGUCAGGAUCGCAGAAAGUAUGUCCCUUCUCUCACCAUGAGCUGGCUCUCCAGUUCCCAGGGAGUGGUACUAACAGCCUACCACCCCAGCGGCAAGGACCAGACCGUCGGGAACAGCCAUGCAAAGGCAGGGGAGG\
) } def
/len { sequence length } bind def

/coor [
[-306.90188599 231.51686096]
[-321.53704834 223.24774170]
[-335.80288696 227.88299561]
[-350.06872559 232.51824951]
[-364.33459473 237.15350342]
[-378.60043335 241.78875732]
[-380.79785156 255.61293030]
[-388.70263672 267.08471680]
[-400.72326660 273.99496460]
[-414.48254395 275.04293823]
[-427.28762817 270.08078003]
[-436.65707397 260.13128662]
[-450.99761963 264.53005981]
[-465.33816528 268.92880249]
[-479.67871094 273.32754517]
[-485.03955078 290.63305664]
[-499.57968140 301.17523193]
[-517.38024902 300.89526367]
[-531.33331299 290.09323120]
[-545.52056885 294.96371460]
[-559.66711426 299.95132446]
[-573.77185059 305.05572510]
[-587.87664795 310.16012573]
[-601.98144531 315.26452637]
[-612.32507324 327.23617554]
[-626.92572021 324.29162598]
[-641.03051758 329.39602661]
[-655.13531494 334.50042725]
[-659.18334961 344.62045288]
[-667.95812988 350.70834351]
[-678.41540527 350.94665527]
[-687.08599854 345.49841309]
[-701.35180664 350.13366699]
[-715.61767578 354.76892090]
[-729.88354492 359.40417480]
[-738.41876221 372.98834229]
[-754.37640381 374.64157104]
[-765.51513672 363.09564209]
[-763.29022217 347.20761108]
[-749.40850830 339.16540527]
[-734.51879883 345.13833618]
[-720.25292969 340.50308228]
[-705.98706055 335.86782837]
[-691.72125244 331.23257446]
[-679.89013672 315.95153809]
[-660.23968506 320.39562988]
[-646.13494873 315.29125977]
[-632.03015137 310.18685913]
[-622.69537354 298.58032227]
[-607.08587646 301.15972900]
[-592.98107910 296.05532837]
[-578.87628174 290.95095825]
[-564.77148438 285.84655762]
[-559.54229736 280.60461426]
[-550.39105225 280.77645874]
[-536.20379639 275.90597534]
[-534.39825439 263.88076782]
[-527.60522461 253.70811462]
[-517.06610107 247.35771179]
[-504.75436401 246.09049988]
[-493.00628662 250.20878601]
[-484.07745361 258.98699951]
[-469.73690796 254.58825684]
[-455.39636230 250.18951416]
[-441.05584717 245.79075623]
[-437.82598877 229.96629333]
[-426.99801636 217.85678101]
[-411.45327759 212.82647705]
[-395.40036011 216.33670044]
[-383.23568726 227.52290344]
[-368.96984863 222.88764954]
[-354.70397949 218.25239563]
[-340.43814087 213.61714172]
[-326.17230225 208.98188782]
[-321.98065186 196.78645325]
[-311.36856079 189.12216187]
[-298.08432007 188.97279358]
[-286.98175049 196.61726379]
[-272.64123535 192.21852112]
[-258.30068970 187.81976318]
[-243.96014404 183.42102051]
[-229.61961365 179.02226257]
[-215.27906799 174.62351990]
[-200.93853760 170.22476196]
[-186.59800720 165.82601929]
[-180.64544678 155.28247070]
[-168.71989441 151.50720215]
[-157.05935669 157.04779053]
[-142.64805603 152.88674927]
[-139.28489685 139.95629883]
[-129.89309692 130.30191040]
[-116.85222626 126.52324677]
[-103.54318237 129.71141052]
[-93.47169495 139.13671875]
[-78.99356079 135.21452332]
[-64.54834747 131.17276001]
[-50.13703918 127.01171875]
[-35.72573471 122.85066986]
[-21.31443024 118.68962860]
[-6.90312481 114.52858734]
[-18.50868225 105.02537537]
[-18.48458481 90.02539062]
[-6.84855509 80.55951691]
[7.84235907 83.58888245]
[14.78456879 96.88571167]
[8.87211227 110.67224884]
[23.57781219 107.71549225]
[38.28351212 104.75873566]
[52.98921204 101.80197906]
[67.69490814 98.84523010]
[82.40061188 95.88847351]
[88.62271881 76.58663177]
[114.37387085 69.19958496]
[127.32271576 61.62810135]
[140.27156067 54.05661774]
[146.11331177 47.01045609]
[153.49769592 46.46902847]
[166.56996155 39.11267471]
[179.64222717 31.75632477]
[192.71449280 24.39997101]
[205.78675842 17.04361916]
[218.85900879 9.68726635]
[219.66021729 -5.71927834]
[228.68218994 -18.23357201]
[243.04605103 -23.86235046]
[258.16833496 -20.80949020]
[269.22360229 -10.04914665]
[272.68411255 4.98509169]
[267.44567871 19.49585533]
[255.17982483 28.85281181]
[239.80056763 30.07019043]
[226.21536255 22.75952911]
[213.14309692 30.11588287]
[200.07084656 37.47223663]
[186.99858093 44.82858658]
[173.92631531 52.18494034]
[160.85404968 59.54129410]
[147.84304810 67.00546265]
[134.89419556 74.57695007]
[121.94535828 82.14842987]
[122.87304688 89.59083557]
[125.65613556 111.91805267]
[140.06744385 116.07909393]
[154.47874451 120.24013519]
[168.89004517 124.40117645]
[179.43705750 113.30977631]
[193.93412781 108.40124512]
[209.04992676 110.80353546]
[221.31097412 119.96461487]
[227.89974976 133.77932739]
[227.30223083 149.07316589]
[219.65568542 162.33172607]
[206.71726990 170.50825500]
[191.46011353 171.72387695]
[177.39019775 165.69923401]
[167.74070740 153.81875610]
[164.72900391 138.81248474]
[150.31770325 134.65144348]
[135.90638733 130.49040222]
[121.49508667 126.32935333]
[96.62796783 125.81196594]
[85.35736847 110.59416962]
[70.65166473 113.55092621]
[55.94596481 116.50768280]
[41.24026871 119.46443939]
[26.53456688 122.42119598]
[11.82886791 125.37794495]
[-2.74208117 128.93989563]
[-17.15338707 133.10093689]
[-31.56469154 137.26197815]
[-45.97599792 141.42301941]
[-60.38730240 145.58406067]
[-67.78002167 150.98056030]
[-75.07135773 149.69265747]
[-89.54949188 153.61485291]
[-95.34549713 169.49604797]
[-109.32294464 178.70741272]
[-125.87106323 177.78829956]
[-138.48701477 167.29804993]
[-152.89831543 171.45909119]
[-165.34283447 185.02041626]
[-182.19924927 180.16654968]
[-196.53979492 184.56530762]
[-210.88032532 188.96405029]
[-225.22085571 193.36280823]
[-239.56140137 197.76155090]
[-253.90193176 202.16030884]
[-268.24246216 206.55905151]
[-282.58300781 210.95780945]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 74]
[3 73]
[4 72]
[5 71]
[6 70]
[12 65]
[13 64]
[14 63]
[15 62]
[19 56]
[20 55]
[21 53]
[22 52]
[23 51]
[24 50]
[26 48]
[27 47]
[28 46]
[32 44]
[33 43]
[34 42]
[35 41]
[78 189]
[79 188]
[80 187]
[81 186]
[82 185]
[83 184]
[84 183]
[85 182]
[88 180]
[89 179]
[94 175]
[95 174]
[96 172]
[97 171]
[98 170]
[99 169]
[100 168]
[106 167]
[107 166]
[108 165]
[109 164]
[110 163]
[111 162]
[113 140]
[114 139]
[115 138]
[117 137]
[118 136]
[119 135]
[120 134]
[121 133]
[122 132]
[142 160]
[143 159]
[144 158]
[145 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
