%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:30:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUCGCCUUCCUCCGGCUCAGCCGCCGCGCCGCCGGGCUGCUCCUUCUUCCUCCUCGGGCGCCCGCGGCGAUGUUCAACCGCGCCGUGAGCCGGCUGAGCAGGAAGCGGCCGCCGUCAGACAUCCACGACAGCGAUGGCAGUUCCAGCAGCAGCCACCAGAGCCUCAAGA\
) } def
/len { sequence length } bind def

/coor [
[111.01811218 288.57540894]
[99.46610260 298.27087402]
[85.86550140 304.78811646]
[71.07125854 307.71746826]
[56.01334763 306.87481689]
[41.63832092 302.31307983]
[28.84980583 294.31903076]
[18.45170021 283.39520264]
[11.09763622 270.22824097]
[7.24989796 255.64585876]
[7.15035677 240.56471252]
[10.80527020 225.93281555]
[17.98488617 212.66993713]
[28.23789024 201.60980225]
[40.91976547 193.44764709]
[55.23332596 188.69654846]
[70.27880096 187.65518188]
[72.98777771 172.90182495]
[75.69675446 158.14848328]
[78.40573883 143.39512634]
[81.11471558 128.64176941]
[70.56638336 95.83706665]
[92.52278900 75.99182892]
[82.97402954 64.42371368]
[73.42527008 52.85560608]
[63.87650681 41.28749847]
[54.32774734 29.71938705]
[34.23896408 31.47337532]
[17.67633820 20.33966255]
[11.83965874 1.47316957]
[-2.57005405 -2.69338322]
[-16.97976685 -6.85993624]
[-31.38948059 -11.02648926]
[-45.79919434 -15.19304180]
[-60.20890808 -19.35959435]
[-69.35885620 -18.73832893]
[-74.84117126 -23.73484421]
[-89.17284393 -28.16236877]
[-103.50452423 -32.58989334]
[-117.83620453 -37.01741791]
[-126.99592590 -36.56240463]
[-132.38661194 -41.65764618]
[-146.63552856 -46.34468460]
[-160.88444519 -51.03171921]
[-175.13336182 -55.71875763]
[-185.33323669 -44.41024399]
[-199.25350952 -38.23399734]
[-214.48239136 -38.26008987]
[-228.38142395 -44.48400497]
[-238.54248047 -55.82740784]
[-243.20510864 -70.32498169]
[-241.56147766 -85.46494293]
[-233.89637756 -98.62419891]
[-221.53779602 -107.52281952]
[-206.62695312 -110.61907959]
[-191.74725342 -107.37652588]
[-179.47666931 -98.35694885]
[-171.94117737 -85.12304688]
[-170.44631958 -69.96767426]
[-156.19740295 -65.28063965]
[-141.94848633 -60.59360123]
[-127.69956970 -55.90656662]
[-113.40868378 -51.34909821]
[-99.07700348 -46.92157364]
[-84.74532318 -42.49404907]
[-70.41364288 -38.06652451]
[-56.04235458 -33.76930618]
[-41.63264084 -29.60275459]
[-27.22292709 -25.43620300]
[-12.81321430 -21.26964951]
[1.59649873 -17.10309601]
[16.00621223 -12.93654346]
[24.47180557 -22.01485443]
[35.92235184 -26.80724716]
[37.01096344 -41.76769257]
[38.09957504 -56.72813797]
[39.18818665 -71.68858337]
[40.27679825 -86.64902496]
[41.36540985 -101.60947418]
[34.65004730 -115.93478394]
[43.29061508 -128.06697083]
[44.37922668 -143.02740479]
[45.46783829 -157.98785400]
[42.96310806 -166.81021118]
[46.71447754 -173.20927429]
[48.07456589 -188.14749146]
[38.95180893 -201.34426880]
[43.71928024 -216.66258240]
[58.71979141 -222.35153198]
[72.44623566 -214.04705811]
[74.36885071 -198.11961365]
[63.01277924 -186.78739929]
[61.65268707 -171.84918213]
[60.42828369 -156.89924622]
[59.33967209 -141.93879700]
[58.25106049 -126.97835541]
[65.04428864 -113.72311401]
[56.32585526 -100.52085876]
[55.23724365 -85.56041718]
[54.14863205 -70.59996796]
[53.06002045 -55.63952637]
[51.97140884 -40.67908096]
[50.88279724 -25.71863556]
[60.55459595 -20.43181610]
[67.66534424 -11.91847610]
[71.18915558 -1.32708156]
[70.58856964 9.88894081]
[65.89585876 20.17062759]
[75.44461823 31.73873711]
[84.99337769 43.30684662]
[94.54213715 54.87495422]
[104.09090424 66.44306183]
[118.20687866 71.51644135]
[132.93502808 68.67362213]
[147.66317749 65.83080292]
[159.74685669 55.61830139]
[173.70985413 60.80328369]
[188.43800354 57.96046066]
[203.16615295 55.11764145]
[208.10966492 40.57606888]
[219.67221069 30.46652794]
[234.74356079 27.50843430]
[249.26956177 32.49749756]
[259.34280396 44.09168625]
[262.25363159 59.17222595]
[257.21908569 73.68251801]
[245.59336853 83.71937561]
[230.50378418 86.58293152]
[216.00933838 81.50289917]
[206.00897217 69.84578705]
[191.28082275 72.68861389]
[176.55267334 75.53143311]
[165.52244568 85.54059601]
[150.50599670 80.55895233]
[135.77784729 83.40177155]
[121.04969788 86.24459076]
[129.35317993 95.30328369]
[133.14126587 108.86912537]
[144.96514893 118.09928131]
[156.78904724 127.32942963]
[168.61293030 136.55958557]
[184.25213623 138.95242310]
[189.52343750 152.88307190]
[201.34732056 162.11322021]
[213.17120361 171.34336853]
[229.20561218 170.81677246]
[239.50456238 183.11763000]
[236.16757202 198.80979919]
[221.75450134 205.85557556]
[207.32182312 198.85005188]
[203.94105530 183.16726685]
[192.11717224 173.93710327]
[180.29327393 164.70695496]
[165.49978638 162.97430420]
[159.38278198 148.38346863]
[147.55889893 139.15332031]
[135.73500061 129.92317200]
[123.91111755 120.69301605]
[116.90035248 123.35744476]
[114.50455475 138.16488647]
[102.87882996 128.68630981]
[95.86806488 131.35075378]
[93.15908813 146.10409546]
[90.45011139 160.85745239]
[87.74113464 175.61080933]
[85.03215790 190.36416626]
[98.72623444 196.68263245]
[110.41823578 206.20880127]
[119.37318420 218.34385681]
[125.02816010 232.32499695]
[127.02770233 247.27333069]
[125.24610138 262.24920654]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 166]
[18 165]
[19 164]
[20 163]
[21 162]
[23 112]
[24 111]
[25 110]
[26 109]
[27 108]
[30 72]
[31 71]
[32 70]
[33 69]
[34 68]
[35 67]
[37 66]
[38 65]
[39 64]
[40 63]
[42 62]
[43 61]
[44 60]
[45 59]
[74 103]
[75 102]
[76 101]
[77 100]
[78 99]
[79 98]
[81 96]
[82 95]
[83 94]
[85 93]
[86 92]
[113 136]
[114 135]
[115 134]
[117 132]
[118 131]
[119 130]
[138 158]
[139 157]
[140 156]
[141 155]
[143 153]
[144 152]
[145 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
