%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:28:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACCGCUAUUGUGCGGGGGAAGAUGUAGCAGCUUCUUCUCCGAACCAACCCUUUGCCUUCGGACUUCUCCGGGGCCAGCAGCCGCCCGACCAGGGGCCCGGGGCCACGGGCUCAGCCGACGACCAUGGGCUCCGUGUCCAACCAGCAGUUUGCAGGUGGCUGCGCCAAGGCGGCAGAAGAGGCGCCCGAGGAGGCGCCGGAGGACGCGGCCCGGGCGGCGGACG\
) } def
/len { sequence length } bind def

/coor [
[120.10926819 157.67327881]
[106.53307343 162.03929138]
[92.01843262 163.18397522]
[77.33502960 160.90963745]
[73.40219116 175.38488770]
[69.46935272 189.86012268]
[77.54017639 203.44825745]
[73.55793762 218.74261475]
[59.88523483 226.66932678]
[44.63383865 222.52561951]
[36.85212708 208.76986694]
[41.15685654 193.56312561]
[54.99410629 185.92729187]
[58.92694092 171.45204163]
[62.85977936 156.97679138]
[49.92207336 149.38629150]
[39.20498276 159.88124084]
[28.48789406 170.37619019]
[17.77080345 180.87113953]
[7.05371380 191.36608887]
[-3.66337609 201.86103821]
[-14.38046646 212.35598755]
[-25.09755707 222.85093689]
[-29.54389763 238.03450012]
[-44.05068970 241.41122437]
[-54.76778030 251.90617371]
[-58.65428162 267.83813477]
[-74.46876526 272.17794800]
[-85.94264984 260.46121216]
[-81.27258301 244.74107361]
[-65.26273346 241.18908691]
[-54.54563904 230.69412231]
[-50.86585999 216.26123047]
[-35.59250641 212.13385010]
[-24.87541580 201.63890076]
[-14.15832615 191.14395142]
[-3.44123602 180.64900208]
[7.27585411 170.15405273]
[17.99294472 159.65910339]
[28.71003532 149.16415405]
[39.42712402 138.66920471]
[37.46070480 131.43157959]
[23.02402687 135.50370789]
[8.58734894 139.57585144]
[-5.84932995 143.64799500]
[-20.28600883 147.72012329]
[-33.10561752 155.50843811]
[-44.68983841 145.97923279]
[-39.51982498 131.89836121]
[-24.52202034 132.12901306]
[-10.00954819 128.33584595]
[4.50292397 124.54267120]
[19.01539612 120.74949646]
[33.52786636 116.95632935]
[31.56144905 109.71870422]
[17.00701332 106.08987427]
[2.45257759 102.46104431]
[-12.10185814 98.83222198]
[-21.17525291 99.79254913]
[-26.83346367 95.04978180]
[-41.33581543 91.21810150]
[-55.83816528 87.38641357]
[-70.34051514 83.55472565]
[-86.01548004 88.37422180]
[-97.84091187 77.01239014]
[-93.65181732 61.15731049]
[-77.75758362 57.11932755]
[-66.50882721 69.05237579]
[-52.00647736 72.88406372]
[-37.50412750 76.71575165]
[-23.00177765 80.54743195]
[-8.47303009 84.27778625]
[6.08140612 87.90660858]
[20.63584137 91.53543854]
[35.19027710 95.16426849]
[44.11585999 71.31325531]
[61.08206558 53.49101639]
[82.88850403 44.08885193]
[105.77604675 43.99902725]
[126.07014465 52.56715393]
[140.77058411 67.80084229]
[153.76095581 60.30083847]
[166.75134277 52.80083847]
[179.74172974 45.30083847]
[192.73210144 37.80083847]
[205.72248840 30.30084038]
[218.71286011 22.80084038]
[231.70324707 15.30084038]
[228.72825623 7.79392672]
[227.80603027 -0.70425588]
[229.24101257 -9.61199570]
[233.16902161 -18.25996017]
[239.53346252 -25.94059372]
[248.07601929 -31.96360779]
[244.34567261 -46.49235535]
[240.61532593 -61.02110291]
[236.88496399 -75.54985046]
[233.15461731 -90.07859802]
[229.42427063 -104.60734558]
[225.69392395 -119.13609314]
[211.96464539 -126.96438599]
[207.87265015 -142.22975159]
[215.84565735 -155.87550354]
[231.15342712 -159.80586243]
[244.71412659 -151.68902588]
[248.48243713 -136.34056091]
[240.22267151 -122.86643982]
[243.95301819 -108.33769226]
[247.68336487 -93.80894470]
[251.41371155 -79.28019714]
[255.14407349 -64.75144958]
[258.87442017 -50.22270584]
[262.60476685 -35.69395828]
[277.60330200 -35.48452377]
[281.73785400 -49.90345001]
[285.87243652 -64.32237244]
[290.00698853 -78.74130249]
[279.28021240 -89.73367310]
[275.50231934 -104.62068176]
[279.68951416 -119.39779663]
[290.71545410 -130.09004211]
[305.61422729 -133.82125854]
[320.37814331 -129.58778381]
[331.03576660 -118.52837372]
[334.72027588 -103.61797333]
[330.44055176 -88.86740112]
[319.34777832 -78.24448395]
[304.42590332 -74.60674286]
[300.29135132 -60.18781662]
[296.15679932 -45.76889038]
[292.02221680 -31.34996414]
[300.75405884 -19.15345192]
[315.73617554 -18.42070580]
[330.71826172 -17.68795967]
[345.70034790 -16.95521355]
[360.68243408 -16.22246552]
[375.66452026 -15.48971939]
[390.64663696 -14.75697327]
[405.62872314 -14.02422714]
[414.86160278 -42.82780075]
[454.27066040 -54.77003098]
[467.04656982 -62.62981796]
[479.82247925 -70.48960876]
[487.52221680 -84.31076813]
[502.41659546 -84.38961792]
[515.19250488 -92.24940491]
[527.96838379 -100.10919189]
[538.29083252 -113.55850220]
[554.07208252 -107.36263275]
[552.48699951 -90.48294067]
[535.82818604 -87.33329010]
[523.05230713 -79.47350311]
[510.27639771 -71.61370850]
[503.49047852 -58.35473251]
[487.68225098 -57.71370316]
[474.90634155 -49.85391617]
[462.13043213 -41.99412537]
[466.66619873 -27.69563293]
[471.20153809 -13.39840698]
[486.17193604 -14.34026432]
[501.14233398 -15.28212261]
[516.11273193 -16.22397995]
[531.08312988 -17.16583824]
[541.34539795 -29.18506622]
[557.10711670 -30.34413338]
[569.01715088 -19.95538521]
[570.00952148 -4.18228197]
[559.49542236 7.61727333]
[543.71270752 8.44281483]
[532.02502441 -2.19543719]
[517.05462646 -1.25357938]
[502.08419800 -0.31172162]
[487.11380005 0.63013619]
[472.14340210 1.57199395]
[470.22756958 8.82316971]
[484.72991943 12.65485573]
[499.23220825 16.48678207]
[495.40002441 30.98900604]
[480.89822388 27.15720749]
[466.39587402 23.32551956]
[464.48004150 30.57669640]
[477.03149414 38.79014587]
[489.58294678 47.00359344]
[502.13442993 55.21704102]
[514.68591309 63.43048859]
[527.23736572 71.64393616]
[542.65447998 68.16709137]
[555.96966553 76.68064117]
[559.28332520 92.13364410]
[550.62945557 105.35810852]
[535.14233398 108.50819397]
[522.01007080 99.71501160]
[519.02392578 84.19540405]
[506.47244263 75.98195648]
[493.92095947 67.76850891]
[481.36950684 59.55505753]
[468.81805420 51.34160995]
[456.26657104 43.12815857]
[432.04476929 42.42226410]
[413.79934692 31.75237083]
[404.70657349 16.10543251]
[404.89596558 0.95786536]
[389.91387939 0.22511882]
[374.93179321 -0.50762773]
[359.94970703 -1.24037433]
[344.96759033 -1.97312081]
[329.98550415 -2.70586729]
[315.00341797 -3.43861389]
[300.02133179 -4.17136049]
[291.35253906 28.46293449]
[263.44638062 40.85266495]
[239.20324707 28.29122162]
[226.21286011 35.79122162]
[213.22248840 43.29122162]
[200.23210144 50.79122162]
[187.24172974 58.29122162]
[174.25134277 65.79122162]
[161.26095581 73.29122162]
[148.27058411 80.79122162]
[152.67253113 92.13880157]
[154.37448120 104.49186707]
[153.14932251 117.20108032]
[148.92747498 129.56680298]
[141.80767822 140.87759399]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 15]
[5 14]
[6 13]
[16 41]
[17 40]
[18 39]
[19 38]
[20 37]
[21 36]
[22 35]
[23 34]
[25 32]
[26 31]
[55 75]
[56 74]
[57 73]
[58 72]
[60 71]
[61 70]
[62 69]
[63 68]
[81 219]
[82 218]
[83 217]
[84 216]
[85 215]
[86 214]
[87 213]
[88 212]
[94 113]
[95 112]
[96 111]
[97 110]
[98 109]
[99 108]
[100 107]
[114 131]
[115 130]
[116 129]
[117 128]
[132 209]
[133 208]
[134 207]
[135 206]
[136 205]
[137 204]
[138 203]
[139 202]
[141 157]
[142 156]
[143 155]
[145 153]
[146 152]
[147 151]
[159 174]
[160 173]
[161 172]
[162 171]
[163 170]
[181 198]
[182 197]
[183 196]
[184 195]
[185 194]
[186 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
