%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:12:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUUAAAUAAGGAAGUCCUCUCCUCUGUGUGCAUGGCUGCUCUUGCUACAUAAGACCUGGAACACAGGACUGCUGUCUGCCCUCUCUGCUCGCCCUGCCUAGCUUGAGGAUCUGUCACCCCAGCCAUGAGGAUUAUCGCCCUCCUCGCUGCUAUUCUCUUGGUAGCCCUCCAGGUCCGGGCAGGCCCACUCCAGGCAAGAGGUGAUGAGGCUCCAGGCCAGGAGC\
) } def
/len { sequence length } bind def

/coor [
[79.01498413 746.79388428]
[76.31905365 761.54962158]
[73.62311554 776.30535889]
[70.92717743 791.06109619]
[76.94728851 806.31530762]
[66.53635406 818.98590088]
[50.40424347 816.03851318]
[45.14629745 800.50512695]
[56.17143631 788.36517334]
[58.86737061 773.60943604]
[61.56330872 758.85369873]
[64.25924683 744.09796143]
[61.68690109 728.74090576]
[65.96875763 715.40814209]
[74.84608459 706.68231201]
[85.31734467 703.62255859]
[84.90036774 688.62835693]
[76.81226349 676.12109375]
[84.16295624 662.11120605]
[83.74598694 647.11700439]
[75.65788269 634.60974121]
[83.00857544 620.59979248]
[82.59159851 605.60559082]
[82.17462921 590.61138916]
[81.75765991 575.61718750]
[81.34068298 560.62298584]
[79.05423737 557.95220947]
[77.94220734 554.04504395]
[78.56999207 549.46289062]
[81.23207855 544.99786377]
[81.44058990 529.99932861]
[81.64909363 515.00079346]
[74.08945465 502.16717529]
[82.01783752 488.47589111]
[82.22634125 473.47732544]
[82.43484497 458.47879028]
[73.06130981 443.63745117]
[82.63463593 427.90164185]
[82.63463593 412.90164185]
[71.95375824 402.58395386]
[71.74008179 387.37182617]
[82.63463593 376.23867798]
[82.63463593 361.23867798]
[82.63463593 346.23867798]
[82.63463593 331.23867798]
[82.63463593 316.23867798]
[82.63463593 301.23867798]
[74.32608795 296.99243164]
[68.09194183 289.97238159]
[64.81715393 281.11175537]
[64.98951721 271.60903931]
[68.62749481 262.76602173]
[75.27190399 255.80932617]
[84.04351044 251.72042847]
[84.87713623 236.74362183]
[85.71075439 221.76679993]
[86.54438019 206.78997803]
[87.37799835 191.81315613]
[88.21161652 176.83634949]
[89.04524231 161.85952759]
[89.87886047 146.88270569]
[77.55664062 142.38775635]
[66.91288757 134.72274780]
[58.74361801 124.46092224]
[53.65979004 112.36975098]
[52.04160309 99.35347748]
[54.01007843 86.38555908]
[40.46980286 79.93103027]
[26.92952919 73.47649384]
[13.38925362 67.02196503]
[-2.90756273 68.85112000]
[-12.42096424 55.49345779]
[-5.36437845 40.69019318]
[11.00298405 39.66965866]
[19.84378433 53.48169327]
[33.38405991 59.93622208]
[46.92433167 66.39075470]
[60.46460724 72.84528351]
[63.49211121 68.89373016]
[66.91288757 65.27725983]
[70.69007874 62.03482819]
[63.49302673 48.87418747]
[56.29597473 35.71354675]
[49.09892273 22.55290604]
[35.82930756 20.28184128]
[26.42534256 10.92203426]
[24.15940857 -1.95359981]
[29.63758087 -13.60939693]
[22.62416267 -26.86880684]
[15.61074352 -40.12821960]
[-0.20916083 -49.56196213]
[1.13745141 -67.06380463]
[-6.05960035 -80.22444153]
[-18.96418381 -91.22026825]
[-11.97042942 -106.66447449]
[4.80628204 -104.21942902]
[7.10103941 -87.42149353]
[14.29809093 -74.26085663]
[25.80888367 -70.56430054]
[31.91482162 -59.66803741]
[28.87015343 -47.14163589]
[35.88357162 -33.88222504]
[42.89699173 -20.62281609]
[59.17005920 -16.35791969]
[67.48265076 -1.34501135]
[62.25956345 15.35585499]
[69.45661163 28.51649475]
[76.65366364 41.67713547]
[83.85071564 54.83777618]
[86.18476105 48.58087921]
[89.43373108 42.43909836]
[93.59158325 36.52001572]
[95.46331024 21.63725090]
[97.33502960 6.75448751]
[87.44479370 -5.57266808]
[89.25098419 -21.27340698]
[101.68201447 -31.03276253]
[117.36277771 -29.06067848]
[126.99015808 -16.52715874]
[124.85240173 -0.86811882]
[112.21779633 8.62621117]
[110.34606934 23.50897408]
[108.47434998 38.39173889]
[115.39343262 41.28592682]
[121.18203735 27.44786263]
[135.02000427 33.23669815]
[129.23158264 47.07430267]
[136.15066528 49.96849060]
[145.43298340 38.18551254]
[154.71530151 26.40253067]
[163.99761963 14.61955070]
[173.27993774 2.83657002]
[168.14932251 -11.71267319]
[171.72134399 -26.72081375]
[182.85615540 -37.39880753]
[198.00068665 -40.33934784]
[212.32237244 -34.60411453]
[221.25120544 -22.02320671]
[221.93804932 -6.61113977]
[214.16371155 6.71414900]
[200.40898132 13.70060825]
[185.06291199 12.11888504]
[175.78059387 23.90186501]
[166.49827576 35.68484497]
[157.21597290 47.46782684]
[147.93365479 59.25080872]
[156.80096436 71.34918976]
[170.83187866 66.04511261]
[184.86280823 60.74104309]
[198.89372253 55.43696976]
[212.92465210 50.13289642]
[226.95558167 44.82882309]
[240.98649597 39.52474976]
[247.25892639 25.01846886]
[261.98226929 19.27400970]
[276.42141724 25.69945908]
[282.00988770 40.48270798]
[275.43215942 54.85312271]
[260.59063721 60.28498840]
[246.29057312 53.55567169]
[232.25964355 58.85974503]
[218.22872925 64.16381836]
[204.19779968 69.46789551]
[190.16688538 74.77196503]
[176.13595581 80.07604218]
[162.10502625 85.38011169]
[155.25663757 119.27713013]
[132.99084473 141.78984070]
[104.85568237 147.71632385]
[104.02205658 162.69314575]
[103.18843842 177.66996765]
[102.35481262 192.64678955]
[101.52119446 207.62359619]
[100.68757629 222.60041809]
[99.85395050 237.57723999]
[99.02033234 252.55406189]
[114.02232361 267.30322266]
[113.24689484 288.03216553]
[97.63463593 301.23867798]
[97.63463593 316.23867798]
[97.63463593 331.23867798]
[97.63463593 346.23867798]
[97.63463593 361.23867798]
[97.63463593 376.23867798]
[108.52919006 387.37182617]
[108.31550598 402.58395386]
[97.63463593 412.90164185]
[97.63463593 427.90164185]
[106.18286133 437.55090332]
[105.88011932 450.03768921]
[97.43339539 458.68728638]
[97.22489166 473.68585205]
[97.01638794 488.68438721]
[104.56111145 502.59078979]
[96.64764404 515.20928955]
[96.43914032 530.20782471]
[96.23062897 545.20635986]
[96.33488464 560.20599365]
[96.75186157 575.20019531]
[97.16883087 590.19439697]
[97.58580017 605.18859863]
[98.00277710 620.18280029]
[106.12070465 633.76257324]
[98.74018860 646.70001221]
[99.15715790 661.69421387]
[107.27509308 675.27398682]
[99.89457703 688.21142578]
[100.31154633 703.20562744]
[120.28520203 713.89764404]
[123.58650208 742.44812012]
[127.09832001 757.03125000]
[130.61013794 771.61431885]
[134.12196350 786.19744873]
[137.63377380 800.78057861]
[151.24398804 808.81408691]
[155.10635376 824.13916016]
[146.92938232 837.66369629]
[131.56433105 841.36383057]
[118.12702179 833.04431152]
[114.58956146 817.64099121]
[123.05066681 804.29235840]
[119.53884888 789.70928955]
[116.02703094 775.12615967]
[112.51521301 760.54302979]
[109.00339508 745.95996094]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 12]
[2 11]
[3 10]
[4 9]
[16 208]
[17 207]
[19 205]
[20 204]
[22 202]
[23 201]
[24 200]
[25 199]
[26 198]
[30 197]
[31 196]
[32 195]
[34 193]
[35 192]
[36 191]
[38 188]
[39 187]
[42 184]
[43 183]
[44 182]
[45 181]
[46 180]
[47 179]
[54 176]
[55 175]
[56 174]
[57 173]
[58 172]
[59 171]
[60 170]
[61 169]
[67 78]
[68 77]
[69 76]
[70 75]
[81 109]
[82 108]
[83 107]
[84 106]
[88 103]
[89 102]
[90 101]
[92 98]
[93 97]
[112 123]
[113 122]
[114 121]
[128 146]
[129 145]
[130 144]
[131 143]
[132 142]
[147 166]
[148 165]
[149 164]
[150 163]
[151 162]
[152 161]
[153 160]
[210 225]
[211 224]
[212 223]
[213 222]
[214 221]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
