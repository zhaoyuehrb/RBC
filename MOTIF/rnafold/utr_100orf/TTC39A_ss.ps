%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:08:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGUCCAGGCCUGGGGGAGGGAGGAGGCCUUGGAGAAGGAGGAGGGAAAAAGGGGCUGUGGGAUUUAGUGGCUGGGCUGCACCCCCUGGGGGGGCAGCAGAGCCCAAUGGGCCAGAAGGGCCACAAAGACUCCCUUUACCCUUGUGGAGGGACUCCUGAGAGCAGCCUCCAUGAGGCCCUGGACCAGUGCAUGACCGCCCUGGACC\
) } def
/len { sequence length } bind def

/coor [
[201.36598206 519.97082520]
[213.05618286 510.57196045]
[228.03211975 509.72262573]
[240.71090698 517.74047852]
[236.46516418 503.35391235]
[232.21942139 488.96734619]
[227.97367859 474.58074951]
[223.72793579 460.19418335]
[219.48217773 445.80761719]
[215.23643494 431.42102051]
[210.88217163 417.06692505]
[206.41961670 402.74609375]
[201.95707703 388.42529297]
[187.81257629 383.83496094]
[178.97875977 371.65188599]
[179.01307678 356.42517090]
[188.11193848 343.99468994]
[183.64939880 329.67388916]
[179.18684387 315.35305786]
[174.72430420 301.03225708]
[170.26176453 286.71145630]
[150.98233032 272.93115234]
[156.24325562 249.09727478]
[150.29435730 235.32736206]
[144.34544373 221.55744934]
[138.39654541 207.78752136]
[132.44764709 194.01760864]
[120.29730225 185.40260315]
[121.92704010 169.66557312]
[115.97814178 155.89564514]
[110.02924347 142.12573242]
[104.08033752 128.35581970]
[89.38861847 126.61015320]
[77.52711487 117.76713562]
[71.65949249 104.18534088]
[73.35072327 89.48725891]
[82.14974213 77.59307861]
[76.20084381 63.82316589]
[70.25194550 50.05324936]
[64.30304718 36.28333282]
[49.27575302 25.64274406]
[51.97903824 8.30422783]
[45.82284546 -5.37426996]
[39.66665268 -19.05276680]
[33.51045990 -32.73126602]
[27.35426903 -46.40976334]
[21.19807816 -60.08826065]
[15.04188538 -73.76676178]
[-1.81018817 -72.99826050]
[-17.63060379 -78.74789429]
[-30.00275993 -90.10736084]
[-37.04833221 -105.31373596]
[-37.71241760 -122.02307129]
[-31.92138863 -137.67167664]
[-20.58984947 -149.86943054]
[-27.15636635 -163.35575867]
[-33.72288132 -176.84207153]
[-40.28939819 -190.32839966]
[-58.22803879 -192.95378113]
[-70.88996887 -205.70864868]
[-73.34078979 -223.35453796]
[-64.78639984 -238.80215454]
[-71.75724792 -252.08399963]
[-78.51789856 -258.23016357]
[-78.73136139 -265.61950684]
[-85.50081635 -279.00509644]
[-92.27027130 -292.39071655]
[-99.03971863 -305.77633667]
[-115.75678253 -310.92608643]
[-123.42721558 -326.27020264]
[-117.74206543 -342.09683228]
[-124.71291351 -355.37869263]
[-131.68376160 -368.66052246]
[-138.65460205 -381.94235229]
[-153.47508240 -386.73730469]
[-160.35530090 -400.30627441]
[-155.69271851 -414.40579224]
[-162.66357422 -427.68762207]
[-169.63441467 -440.96945190]
[-176.60527039 -454.25131226]
[-183.57611084 -467.53314209]
[-190.33676147 -473.67929077]
[-190.55023193 -481.06863403]
[-197.31968689 -494.45425415]
[-204.08914185 -507.83984375]
[-210.85859680 -521.22546387]
[-224.87362671 -529.74078369]
[-224.23617554 -546.12756348]
[-209.60200500 -553.52844238]
[-196.02549744 -544.33007812]
[-197.47297668 -527.99493408]
[-190.70352173 -514.60931396]
[-183.93408203 -501.22369385]
[-177.16462708 -487.83810425]
[-170.29428101 -474.50399780]
[-163.32342529 -461.22213745]
[-156.35258484 -447.94030762]
[-149.38172913 -434.65847778]
[-142.41088867 -421.37661743]
[-128.15856934 -417.20443726]
[-120.89994049 -403.83404541]
[-125.37276459 -388.91320801]
[-118.40191650 -375.63137817]
[-111.43106842 -362.34951782]
[-104.46022797 -349.06768799]
[-91.74178314 -346.99264526]
[-82.40181732 -337.83386230]
[-80.00773621 -324.77569580]
[-85.65411377 -312.54577637]
[-78.88465881 -299.16015625]
[-72.11520386 -285.77456665]
[-65.34575653 -272.38894653]
[-58.47540665 -259.05484009]
[-51.50455856 -245.77301025]
[-39.36219025 -245.81889343]
[-28.28740311 -240.66656494]
[-20.40851402 -231.23844910]
[-17.26834106 -219.28500366]
[-19.52237129 -207.05986023]
[-26.80307579 -196.89491272]
[-20.23655891 -183.40858459]
[-13.67004395 -169.92227173]
[-7.10352802 -156.43594360]
[6.05518866 -158.08111572]
[19.10282135 -155.58663940]
[30.76659966 -149.18154907]
[39.90434265 -139.47703552]
[45.61631012 -127.40819550]
[47.33377075 -114.14384460]
[44.87561035 -100.97342682]
[38.46731949 -89.18160248]
[28.72038269 -79.92295074]
[34.87657547 -66.24445343]
[41.03276825 -52.56595612]
[47.18895721 -38.88745880]
[53.34514999 -25.20895958]
[59.50134277 -11.53046227]
[65.65753174 2.14803553]
[76.85421753 6.73021555]
[82.09434509 18.07756615]
[78.07295990 30.33443451]
[84.02185822 44.10435104]
[89.97075653 57.87426758]
[95.91966248 71.64418030]
[110.61138153 73.38984680]
[122.47288513 82.23286438]
[128.34051514 95.81465912]
[126.64927673 110.51274109]
[117.85025787 122.40692139]
[123.79915619 136.17683411]
[129.74806213 149.94674683]
[135.69696045 163.71665955]
[148.27281189 173.31658936]
[146.21755981 188.06871033]
[152.16645813 201.83862305]
[158.11537170 215.60853577]
[164.06427002 229.37846375]
[170.01316833 243.14837646]
[176.29849243 243.75579834]
[182.12686157 246.07884216]
[187.04315186 249.91183472]
[190.67027283 254.93223572]
[192.73803711 260.72763062]
[193.10321045 266.82962036]
[191.75923157 272.75155640]
[188.83493042 278.02755737]
[184.58256531 282.24890137]
[189.04512024 296.56970215]
[193.50765991 310.89053345]
[197.97021484 325.21133423]
[202.43275452 339.53216553]
[216.98228455 344.59350586]
[225.66027832 357.10531616]
[225.31098938 372.14999390]
[216.27789307 383.96273804]
[220.74043274 398.28356934]
[225.20297241 412.60437012]
[230.74501038 419.86849976]
[229.62301636 427.17529297]
[233.86875916 441.56185913]
[238.11450195 455.94842529]
[242.36026001 470.33502197]
[246.60600281 484.72158813]
[250.85174561 499.10818481]
[255.09748840 513.49475098]
[260.20413208 527.59875488]
[266.15304565 541.36865234]
[272.10192871 555.13854980]
[284.67779541 564.73846436]
[282.62252808 579.49060059]
[288.57144165 593.26049805]
[303.35293579 598.85363770]
[309.77386475 613.29479980]
[304.02478027 628.01635742]
[289.51651001 634.28424072]
[274.85659790 628.37982178]
[268.74246216 613.80609131]
[274.80151367 599.20941162]
[268.85263062 585.43951416]
[256.70227051 576.82452393]
[258.33203125 561.08746338]
[252.38311768 547.31756592]
[246.43421936 533.54760742]
[241.82833862 547.82299805]
[229.78057861 556.75897217]
[214.78291321 557.02380371]
[202.42716980 548.51873779]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 185]
[5 184]
[6 183]
[7 182]
[8 181]
[9 180]
[10 179]
[11 177]
[12 176]
[13 175]
[17 171]
[18 170]
[19 169]
[20 168]
[21 167]
[23 158]
[24 157]
[25 156]
[26 155]
[27 154]
[29 152]
[30 151]
[31 150]
[32 149]
[37 144]
[38 143]
[39 142]
[40 141]
[42 138]
[43 137]
[44 136]
[45 135]
[46 134]
[47 133]
[48 132]
[55 123]
[56 122]
[57 121]
[58 120]
[62 114]
[63 113]
[65 112]
[66 111]
[67 110]
[68 109]
[71 105]
[72 104]
[73 103]
[74 102]
[77 99]
[78 98]
[79 97]
[80 96]
[81 95]
[83 94]
[84 93]
[85 92]
[86 91]
[186 203]
[187 202]
[188 201]
[190 199]
[191 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
