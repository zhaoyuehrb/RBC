%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:24:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGCCACUGAGGCCUGAGCGAGAGCCGACGGCGGGCGGGCGCAGCUGCUGCCGGAGCGCCGGCGCGUGCUGGUGGGCCACACACCUUUCCUCCUCUUCACUCGCGAGCCCUCGGACAUGGUGGCCCCCGGCUCCGUGACCAGCCGGCUGGGCUCGGUAUUCCCCUUCCUGCUAGUCCUGGUGGAUCUGCAGUACGAAGGUGCUGAAUGUGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[245.23811340 283.62176514]
[230.95913696 279.02713013]
[230.91618347 264.02783203]
[223.78997803 266.36599731]
[219.94250488 280.86416626]
[216.09501648 295.36233521]
[222.87397766 309.90283203]
[215.60365295 324.20394897]
[199.86122131 327.29510498]
[187.72291565 316.80505371]
[188.50022888 300.78082275]
[201.59684753 291.51486206]
[205.44432068 277.01669312]
[209.29180908 262.51852417]
[206.28598022 247.82278442]
[197.05485535 235.99966431]
[187.82371521 224.17654419]
[178.59257507 212.35342407]
[169.36143494 200.53030396]
[160.13031006 188.70718384]
[147.25016785 188.93823242]
[136.42620850 181.60038757]
[131.73423767 169.18612671]
[135.09599304 156.14662170]
[126.03620148 144.19169617]
[116.97639465 132.23678589]
[107.91659546 120.28187561]
[98.85679626 108.32695770]
[93.52345276 116.74712372]
[84.43264008 122.67751312]
[70.39563751 127.96547699]
[56.35863876 133.25344849]
[42.32163620 138.54141235]
[28.28463364 143.82937622]
[14.24763107 149.11734009]
[7.32455206 155.06806946]
[-0.02993733 154.37876892]
[-14.14168358 159.46391296]
[-28.25342941 164.54904175]
[-34.75078964 178.95597839]
[-49.56172180 184.47067261]
[-63.89916229 177.82136536]
[-69.25695801 162.95295715]
[-62.45642853 148.68661499]
[-47.53220749 143.48631287]
[-33.33856583 150.43730164]
[-19.22681999 145.35215759]
[-5.11507368 140.26702881]
[8.95966625 135.08033752]
[22.99666786 129.79237366]
[37.03366852 124.50440979]
[51.07067108 119.21643829]
[65.10767365 113.92847443]
[79.14467621 108.64051056]
[64.34051514 106.22456360]
[57.73610306 92.75675964]
[64.89028168 79.57276917]
[79.78147888 77.76937103]
[89.87599945 88.86454773]
[86.65872192 74.21363831]
[76.14155579 62.39416885]
[80.96897888 48.30356216]
[77.75170135 33.65265274]
[74.42894745 19.02530479]
[71.00087738 4.42228031]
[67.57280731 -10.18074512]
[64.14473724 -24.78376961]
[51.22863770 -37.91178131]
[56.95554733 -54.50235748]
[53.31739807 -69.05446625]
[49.67924881 -83.60657501]
[46.04109955 -98.15868378]
[42.40295029 -112.71079254]
[37.28810120 -120.27244568]
[38.81883240 -127.49881744]
[35.39076233 -142.10183716]
[31.96269417 -156.70486450]
[28.53462410 -171.30789185]
[25.10655594 -185.91091919]
[21.67848587 -200.51394653]
[18.25041771 -215.11697388]
[13.24506760 -222.75154114]
[14.87977409 -229.95510864]
[11.66249752 -244.60601807]
[0.59850979 -248.93922424]
[-6.92483091 -257.98104858]
[-9.12890625 -269.41311646]
[-5.58011103 -280.37582397]
[2.73064613 -288.18341064]
[-0.06308480 -302.92095947]
[-2.85681581 -317.65847778]
[-17.54184532 -321.67236328]
[-28.98125648 -331.62359619]
[-34.94126892 -345.49798584]
[-34.28895569 -360.52249146]
[-27.20721817 -373.71939087]
[-15.14787388 -382.49649048]
[-17.94160461 -397.23403931]
[-20.73533630 -411.97158813]
[-33.93597794 -420.66171265]
[-37.04351425 -436.15750122]
[-28.21429062 -449.26550293]
[-12.68653584 -452.20904541]
[0.32741162 -443.24172974]
[3.10660720 -427.68371582]
[-5.99779701 -414.76531982]
[-3.20406580 -400.02777100]
[-0.41033489 -385.29022217]
[14.02461147 -381.53552246]
[25.44483948 -371.84594727]
[31.55055618 -358.10253906]
[31.08177757 -343.00949097]
[24.07794571 -329.56207275]
[11.88072395 -320.45220947]
[14.67445469 -305.71469116]
[17.46818542 -290.97714233]
[33.19136429 -281.59445190]
[37.12541199 -263.38507080]
[26.31340599 -247.82328796]
[29.53068352 -233.17237854]
[32.85344315 -218.54504395]
[36.28151321 -203.94201660]
[39.70957947 -189.33898926]
[43.13764954 -174.73596191]
[46.56571960 -160.13293457]
[49.99378586 -145.52990723]
[53.42185593 -130.92689514]
[56.95505905 -116.34894562]
[60.59320831 -101.79683685]
[64.23135376 -87.24472809]
[67.86950684 -72.69261932]
[71.50765991 -58.14050674]
[81.71333313 -51.65270615]
[84.86560822 -39.56290436]
[78.74776459 -28.21183968]
[82.17583466 -13.60881329]
[85.60389709 0.99421138]
[89.03196716 15.59723663]
[93.61839294 21.38760757]
[92.40261078 30.43537521]
[95.61988831 45.08628464]
[105.90692902 55.85782242]
[101.30963135 70.99636078]
[104.52690887 85.64727020]
[110.81171417 99.26715851]
[119.87151337 111.22206879]
[128.93130493 123.17698669]
[137.99111938 135.13189697]
[147.05091858 147.08682251]
[164.42375183 149.15827942]
[174.71853638 162.88473511]
[171.95343018 179.47605896]
[181.18455505 191.29917908]
[190.41569519 203.12228394]
[199.64683533 214.94540405]
[208.87797546 226.76852417]
[218.10910034 238.59164429]
[261.69537354 245.32443237]
[273.38424683 254.72499084]
[285.07312012 264.12554932]
[296.76199341 273.52609253]
[308.45083618 282.92666626]
[320.13970947 292.32720947]
[332.47500610 300.86184692]
[345.39273071 308.48632812]
[358.31048584 316.11077881]
[371.22821045 323.73522949]
[384.14593506 331.35968018]
[397.22543335 338.70312500]
[410.46063232 345.76217651]
[423.69580078 352.82119751]
[436.93099976 359.88024902]
[451.88125610 355.50674438]
[465.20303345 362.85415649]
[469.28036499 377.13391113]
[482.51553345 384.19293213]
[495.75073242 391.25195312]
[508.98590088 398.31100464]
[525.34869385 397.21917725]
[534.24957275 410.99258423]
[526.53204346 425.46231079]
[510.13531494 425.74313354]
[501.92687988 411.54617310]
[488.69168091 404.48715210]
[475.45651245 397.42810059]
[462.22134399 390.36907959]
[448.09112549 394.93777466]
[434.56820679 387.96743774]
[429.87194824 373.11541748]
[416.63677979 366.05639648]
[403.40158081 358.99734497]
[390.16641235 351.93832397]
[386.70935059 352.60647583]
[382.75714111 351.63662720]
[379.08166504 348.81436157]
[376.52148438 344.27740479]
[363.60375977 336.65295410]
[350.68600464 329.02850342]
[337.76828003 321.40405273]
[324.85055542 313.77957153]
[330.83020020 327.53619385]
[329.22567749 342.45013428]
[320.45672607 354.61999512]
[306.81729126 360.86221313]
[291.87533569 359.54388428]
[279.53961182 351.00982666]
[273.03704834 337.49255371]
[274.06872559 322.52807617]
[282.36474609 310.03103638]
[295.75488281 303.27056885]
[310.73916626 304.01608276]
[299.05029297 294.61550903]
[287.36141968 285.21496582]
[275.67254639 275.81442261]
[263.98370361 266.41384888]
[252.29483032 257.01330566]
[245.16860962 259.35147095]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 14]
[5 13]
[6 12]
[15 157]
[16 156]
[17 155]
[18 154]
[19 153]
[20 152]
[24 149]
[25 148]
[26 147]
[27 146]
[28 145]
[30 54]
[31 53]
[32 52]
[33 51]
[34 50]
[35 49]
[37 48]
[38 47]
[39 46]
[59 144]
[60 143]
[62 141]
[63 140]
[64 138]
[65 137]
[66 136]
[67 135]
[69 132]
[70 131]
[71 130]
[72 129]
[73 128]
[75 127]
[76 126]
[77 125]
[78 124]
[79 123]
[80 122]
[81 121]
[83 120]
[84 119]
[89 116]
[90 115]
[91 114]
[97 108]
[98 107]
[99 106]
[158 216]
[159 215]
[160 214]
[161 213]
[162 212]
[163 211]
[164 200]
[165 199]
[166 198]
[167 197]
[168 196]
[169 192]
[170 191]
[171 190]
[172 189]
[175 186]
[176 185]
[177 184]
[178 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
