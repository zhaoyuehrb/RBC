%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:37:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGUCUGCCCCGCCAGCGCGUCGAGGGAGGGGCCAGCGACACAUGGCCUAGUAACUGUCCGGCCGCGGCGCUGGCUUAAGCCAUGGCUGAGGGUAGCCGGAUUCCUCAGGCCCGGGCGCUCCUACAGCAGUGCCUGCACGCCCGGCUGCAAAUUCGCCCAGCCGAUGGGGACGUCGCGGCCC\
) } def
/len { sequence length } bind def

/coor [
[183.72966003 161.82789612]
[170.04476929 155.68589783]
[163.37882996 142.24844360]
[166.76823425 127.63639069]
[178.66999817 118.50536346]
[163.81278992 116.44055939]
[148.95558167 114.37575531]
[134.09837341 112.31095886]
[119.24117279 110.24615479]
[99.62373352 121.79597473]
[80.41664124 109.57592010]
[65.49701691 111.12667847]
[50.57739258 112.67743683]
[35.65776825 114.22819519]
[20.73814583 115.77895355]
[5.81852388 117.32971191]
[-9.10109901 118.88047028]
[-24.02072144 120.43122864]
[-38.87792969 122.49603271]
[-53.65501404 125.07241821]
[-68.43209839 127.64880371]
[-83.20918274 130.22518921]
[-91.15015411 134.79293823]
[-98.26339722 132.71621704]
[-113.08275604 135.03715515]
[-125.51953888 144.81655884]
[-139.29072571 139.14172363]
[-154.11007690 141.46266174]
[-168.81550598 144.42076111]
[-183.37963867 148.01049805]
[-197.94375610 151.60023499]
[-212.50788879 155.18995667]
[-227.07202148 158.77969360]
[-241.63613892 162.36943054]
[-247.36260986 176.79119873]
[-260.49029541 185.06425476]
[-275.97134399 184.00744629]
[-287.85296631 174.02713013]
[-291.56643677 158.96095276]
[-285.68386841 144.60215759]
[-272.46722412 136.47200012]
[-256.99853516 137.69668579]
[-245.22587585 147.80531311]
[-230.66175842 144.21557617]
[-216.09762573 140.62583923]
[-201.53349304 137.03610229]
[-186.96937561 133.44636536]
[-172.40524292 129.85662842]
[-183.59655762 119.86891937]
[-182.94236755 104.88319397]
[-170.92326355 95.90872192]
[-156.36909485 99.53860474]
[-149.97207642 113.10614777]
[-156.43101501 126.64331055]
[-141.61166382 124.32237244]
[-130.23484802 114.70896912]
[-115.40369415 120.21779633]
[-100.58434296 117.89685822]
[-85.78556824 115.44810486]
[-71.00848389 112.87171936]
[-56.23139954 110.29533386]
[-41.45431519 107.71894836]
[-39.73014450 105.47751617]
[-37.00276947 103.79323578]
[-33.48329544 103.05596924]
[-29.52141380 103.57072449]
[-25.57148170 105.51160431]
[-10.65185833 103.96084595]
[4.26776457 102.41008759]
[19.18738747 100.85932922]
[34.10700989 99.30857086]
[49.02663422 97.75781250]
[63.94625473 96.20705414]
[78.86588287 94.65629578]
[80.07121277 91.16543579]
[81.84851837 87.92813873]
[84.14678955 85.03731537]
[86.90007019 82.57593536]
[82.56128693 68.21714020]
[78.22250366 53.85834503]
[65.90165710 43.03573990]
[69.37879181 27.00946045]
[85.07692719 22.26597214]
[96.84716797 33.68496704]
[92.58129883 49.51956558]
[96.92008209 63.87835693]
[101.25886536 78.23715210]
[110.27993774 80.77686310]
[117.40102386 86.86948395]
[121.30596924 95.38894653]
[136.16317749 97.45375061]
[151.02038574 99.51855469]
[165.87759399 101.58335114]
[180.73480225 103.64815521]
[195.68957520 104.81213379]
[210.68733215 105.07104492]
[225.68510437 105.32995605]
[240.68286133 105.58886719]
[255.68231201 105.71832275]
[270.68231201 105.71832275]
[285.68231201 105.71832275]
[300.68176270 105.58886719]
[315.67950439 105.32995605]
[330.67727661 105.07104492]
[345.67504883 104.81213379]
[360.67282104 104.55323029]
[375.67056274 104.29431915]
[390.32275391 101.08283997]
[404.05386353 95.04493713]
[417.78500366 89.00702667]
[428.93194580 72.23130798]
[448.03771973 75.10800171]
[461.55227661 68.59974670]
[475.06680298 62.09149170]
[488.58132935 55.58323288]
[502.09585571 49.07497787]
[515.61041260 42.56672287]
[529.12493896 36.05846405]
[542.63946533 29.55020905]
[545.27752686 14.25902939]
[556.42315674 3.46298337]
[571.79064941 1.31337142]
[585.47082520 8.63676262]
[592.20343018 22.61716461]
[589.39959717 37.87882614]
[578.13751221 48.55332947]
[562.74768066 50.53610611]
[549.14770508 43.06474304]
[535.63317871 49.57299805]
[522.11865234 56.08125305]
[508.60412598 62.58951187]
[495.08959961 69.09776306]
[481.57504272 75.60602570]
[468.06051636 82.11428070]
[454.54598999 88.62253571]
[452.04034424 98.56147766]
[444.30606079 105.61824799]
[433.74523926 107.27322388]
[423.82290649 102.73814392]
[410.09179688 108.77605438]
[396.36065674 114.81396484]
[395.32580566 129.77822876]
[408.09506226 137.64878845]
[420.86431885 145.51936340]
[433.63360596 153.38992310]
[446.40286255 161.26049805]
[459.17211914 169.13105774]
[472.65042114 161.76689148]
[488.00466919 162.14451599]
[501.10467529 170.16238403]
[508.42654419 183.66369629]
[508.00079346 199.01667786]
[499.94189453 212.09147644]
[486.41769409 219.37100220]
[471.06613159 218.89712524]
[458.01666260 210.79730225]
[450.77957153 197.25035095]
[451.30157471 181.90032959]
[438.53228760 174.02975464]
[425.76303101 166.15919495]
[412.99377441 158.28862000]
[400.22448730 150.41806030]
[387.45523071 142.54748535]
[377.20104980 131.34158325]
[375.92947388 119.29208374]
[360.93173218 119.55099487]
[345.93395996 119.80990601]
[330.93618774 120.06880951]
[315.93841553 120.32772064]
[300.94064331 120.58663177]
[294.28982544 123.85425568]
[285.68231201 120.71832275]
[270.68231201 120.71832275]
[255.68231201 120.71832275]
[248.97605896 123.87066650]
[240.42395020 120.58663177]
[225.42619324 120.32772064]
[210.42842102 120.06880951]
[195.43066406 119.80990601]
[205.77586365 130.67161560]
[206.86418152 145.63208008]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 94]
[6 93]
[7 92]
[8 91]
[9 90]
[11 74]
[12 73]
[13 72]
[14 71]
[15 70]
[16 69]
[17 68]
[18 67]
[19 62]
[20 61]
[21 60]
[22 59]
[24 58]
[25 57]
[27 55]
[28 54]
[29 48]
[30 47]
[31 46]
[32 45]
[33 44]
[34 43]
[78 87]
[79 86]
[80 85]
[95 179]
[96 178]
[97 177]
[98 176]
[99 174]
[100 173]
[101 172]
[102 170]
[103 169]
[104 168]
[105 167]
[106 166]
[107 165]
[108 141]
[109 140]
[110 139]
[112 135]
[113 134]
[114 133]
[115 132]
[116 131]
[117 130]
[118 129]
[119 128]
[142 163]
[143 162]
[144 161]
[145 160]
[146 159]
[147 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
