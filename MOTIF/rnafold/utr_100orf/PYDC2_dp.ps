%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:43:47 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PYDC2)
} def

/sequence { (\
AUGGCAUCUUCUGCAGAGCUGGACUUCAACCUGCAGGCUCUUCUGGAGCAGCUCAGCCAGGAUGAGUUGAGCAAGUUCAAGUCUCUGAUCAGAACAAUCU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.014813883 ubox
1 98 0.024783595 ubox
2 6 0.015433419 ubox
2 13 0.004042361 ubox
2 21 0.005956197 ubox
2 91 0.004321437 ubox
2 96 0.125612153 ubox
2 97 0.027234126 ubox
3 9 0.034132323 ubox
3 10 0.004208499 ubox
3 11 0.005856647 ubox
3 12 0.007253276 ubox
3 20 0.021705846 ubox
3 83 0.005921907 ubox
3 90 0.004885699 ubox
3 95 0.139584854 ubox
3 99 0.238682042 ubox
3 100 0.288072256 ubox
4 8 0.041924858 ubox
4 9 0.007804038 ubox
4 10 0.005326796 ubox
4 11 0.007440690 ubox
4 14 0.024416162 ubox
4 19 0.022769002 ubox
4 82 0.005968785 ubox
4 89 0.003525571 ubox
4 98 0.221809996 ubox
4 99 0.323981681 ubox
5 13 0.025874518 ubox
5 18 0.022740831 ubox
5 81 0.005977221 ubox
6 12 0.024217023 ubox
6 98 0.166294285 ubox
7 17 0.022542933 ubox
7 93 0.098006407 ubox
7 97 0.163605280 ubox
8 16 0.022641065 ubox
8 92 0.103816692 ubox
9 15 0.021685534 ubox
9 91 0.100313949 ubox
9 92 0.008492344 ubox
9 93 0.024281203 ubox
9 94 0.851215012 ubox
9 97 0.014678036 ubox
10 88 0.004718218 ubox
10 91 0.012086714 ubox
10 92 0.008681688 ubox
10 93 0.979903556 ubox
10 96 0.007044873 ubox
11 36 0.031100623 ubox
11 87 0.004086210 ubox
11 92 0.992132260 ubox
12 35 0.031198594 ubox
12 91 0.991020718 ubox
13 34 0.031226513 ubox
13 90 0.979924541 ubox
14 33 0.031226612 ubox
14 87 0.983441834 ubox
15 32 0.031203398 ubox
15 84 0.010779436 ubox
15 86 0.994595766 ubox
16 31 0.030922622 ubox
16 83 0.012001618 ubox
16 85 0.995075348 ubox
16 90 0.013038922 ubox
16 99 0.003498152 ubox
17 25 0.005234477 ubox
17 82 0.012313854 ubox
17 84 0.990170449 ubox
17 86 0.084566624 ubox
17 89 0.013580754 ubox
17 98 0.003302535 ubox
18 24 0.005268446 ubox
18 34 0.004564998 ubox
18 72 0.017217766 ubox
18 82 0.132737258 ubox
18 83 0.973865722 ubox
18 85 0.084491314 ubox
19 33 0.004714638 ubox
19 36 0.005125182 ubox
19 71 0.018088621 ubox
19 81 0.926918940 ubox
20 28 0.023760938 ubox
20 35 0.005276143 ubox
20 70 0.018064744 ubox
20 79 0.718864763 ubox
20 80 0.657909837 ubox
21 27 0.024840921 ubox
21 31 0.009753326 ubox
21 32 0.003456946 ubox
21 34 0.005336628 ubox
21 78 0.972183909 ubox
21 83 0.009646388 ubox
21 84 0.126141817 ubox
21 85 0.010614066 ubox
22 26 0.016103695 ubox
22 30 0.009818408 ubox
22 31 0.003754703 ubox
22 68 0.018048243 ubox
22 77 0.975883370 ubox
22 78 0.054806089 ubox
22 82 0.009131123 ubox
22 83 0.178027163 ubox
23 67 0.018163999 ubox
23 76 0.977304528 ubox
23 77 0.041365523 ubox
23 82 0.201392164 ubox
24 36 0.014622735 ubox
24 66 0.018071646 ubox
24 75 0.978074330 ubox
24 81 0.201993717 ubox
25 35 0.016693954 ubox
25 36 0.014381296 ubox
25 65 0.013126652 ubox
25 66 0.011035709 ubox
25 71 0.011408246 ubox
25 74 0.965104072 ubox
25 75 0.006542546 ubox
25 80 0.201705235 ubox
26 35 0.029413556 ubox
26 36 0.008923903 ubox
26 37 0.006168092 ubox
26 50 0.005296530 ubox
26 64 0.004196776 ubox
26 65 0.030006706 ubox
26 70 0.028257369 ubox
26 73 0.837319382 ubox
26 74 0.024488122 ubox
26 79 0.191340591 ubox
27 33 0.140184388 ubox
27 36 0.212198014 ubox
27 64 0.034477930 ubox
27 69 0.030588396 ubox
28 32 0.114936630 ubox
28 63 0.034299066 ubox
28 68 0.030058888 ubox
28 77 0.191365938 ubox
29 67 0.028198493 ubox
29 76 0.202372119 ubox
30 37 0.070143613 ubox
30 46 0.009341651 ubox
30 61 0.037551111 ubox
30 66 0.023783351 ubox
30 75 0.202024551 ubox
31 36 0.147975705 ubox
31 37 0.007399744 ubox
31 45 0.008986988 ubox
31 46 0.005977301 ubox
31 48 0.444669125 ubox
31 51 0.010484846 ubox
31 56 0.011607511 ubox
31 60 0.038539389 ubox
31 61 0.004245036 ubox
31 66 0.003368050 ubox
31 71 0.041695771 ubox
31 75 0.011311880 ubox
32 36 0.021260184 ubox
32 47 0.448509037 ubox
32 50 0.036430531 ubox
32 55 0.011618654 ubox
32 59 0.038416075 ubox
32 60 0.004095579 ubox
32 65 0.004595275 ubox
32 70 0.041421338 ubox
32 73 0.285338553 ubox
32 74 0.011611406 ubox
33 49 0.036112340 ubox
33 52 0.030057264 ubox
33 54 0.011202675 ubox
33 57 0.024415293 ubox
33 58 0.028501668 ubox
33 72 0.309920393 ubox
34 45 0.452431658 ubox
34 48 0.033758935 ubox
34 51 0.032533513 ubox
34 56 0.034271065 ubox
34 64 0.005637404 ubox
34 69 0.041237090 ubox
34 71 0.309507683 ubox
35 41 0.004229196 ubox
35 44 0.452851542 ubox
35 53 0.015724780 ubox
35 63 0.005582047 ubox
35 68 0.038982027 ubox
36 40 0.004343414 ubox
36 43 0.452299748 ubox
36 44 0.009067535 ubox
36 52 0.016487641 ubox
36 53 0.023982082 ubox
36 54 0.017365932 ubox
36 58 0.009490173 ubox
36 67 0.027702344 ubox
36 68 0.302572121 ubox
37 41 0.009883705 ubox
37 42 0.319771519 ubox
37 43 0.010428586 ubox
37 49 0.829628246 ubox
37 52 0.028815166 ubox
37 57 0.009989019 ubox
37 67 0.310783428 ubox
38 46 0.012956293 ubox
38 48 0.833681360 ubox
38 51 0.028869357 ubox
38 56 0.009984990 ubox
38 66 0.312549385 ubox
39 45 0.010180147 ubox
39 46 0.022610476 ubox
39 47 0.833458299 ubox
39 50 0.028686924 ubox
39 55 0.009677767 ubox
39 65 0.312529265 ubox
40 45 0.050191703 ubox
40 46 0.832160152 ubox
40 48 0.028589952 ubox
40 64 0.312410258 ubox
41 45 0.749683910 ubox
41 47 0.028414702 ubox
41 48 0.003285209 ubox
41 62 0.299867729 ubox
42 46 0.025624788 ubox
42 61 0.307609074 ubox
42 62 0.049810998 ubox
43 51 0.009625906 ubox
43 60 0.309092023 ubox
43 61 0.046499847 ubox
44 50 0.009812230 ubox
44 59 0.309764548 ubox
44 60 0.040994725 ubox
45 49 0.009692527 ubox
45 58 0.309764512 ubox
46 54 0.047229292 ubox
46 57 0.292436001 ubox
46 78 0.007802046 ubox
47 53 0.080215023 ubox
47 77 0.007830995 ubox
48 52 0.079164451 ubox
48 57 0.097108789 ubox
48 72 0.003692555 ubox
48 76 0.007859958 ubox
49 56 0.126602959 ubox
49 69 0.061918301 ubox
49 71 0.003505509 ubox
49 75 0.007929000 ubox
50 68 0.065500943 ubox
51 57 0.010864601 ubox
51 67 0.066875396 ubox
51 72 0.944966150 ubox
52 56 0.014084155 ubox
52 66 0.067045862 ubox
52 71 0.946084047 ubox
53 62 0.004251741 ubox
53 65 0.068398611 ubox
53 70 0.946258450 ubox
54 61 0.004539337 ubox
54 64 0.068555554 ubox
54 69 0.946416478 ubox
55 63 0.067611713 ubox
55 68 0.945569973 ubox
56 67 0.945889478 ubox
56 72 0.007192020 ubox
57 66 0.946121658 ubox
57 71 0.007205028 ubox
58 64 0.779134710 ubox
58 69 0.007262207 ubox
59 63 0.631611756 ubox
59 68 0.007267971 ubox
60 67 0.006978117 ubox
64 83 0.003384190 ubox
65 82 0.003412109 ubox
66 72 0.006155787 ubox
67 71 0.005764730 ubox
67 80 0.003495117 ubox
68 79 0.003700467 ubox
69 78 0.003839063 ubox
70 77 0.003754328 ubox
75 95 0.032407407 ubox
76 94 0.032454296 ubox
77 88 0.004032892 ubox
77 93 0.032474788 ubox
78 87 0.004351061 ubox
78 92 0.032452883 ubox
79 86 0.004040531 ubox
81 89 0.031085673 ubox
81 95 0.003448920 ubox
82 88 0.031582507 ubox
83 87 0.031337959 ubox
84 93 0.008352939 ubox
85 92 0.009768975 ubox
86 91 0.009149257 ubox
87 95 0.003392169 ubox
87 99 0.009940577 ubox
88 98 0.009970111 ubox
89 97 0.009631390 ubox
91 100 0.023580450 ubox
92 99 0.026360237 ubox
93 98 0.024225108 ubox
9 94 0.9500000 lbox
10 93 0.9500000 lbox
11 92 0.9500000 lbox
12 91 0.9500000 lbox
13 90 0.9500000 lbox
14 87 0.9500000 lbox
15 86 0.9500000 lbox
16 85 0.9500000 lbox
17 84 0.9500000 lbox
18 83 0.9500000 lbox
19 81 0.9500000 lbox
20 80 0.9500000 lbox
21 78 0.9500000 lbox
22 77 0.9500000 lbox
23 76 0.9500000 lbox
24 75 0.9500000 lbox
25 74 0.9500000 lbox
26 73 0.9500000 lbox
37 49 0.9500000 lbox
38 48 0.9500000 lbox
39 47 0.9500000 lbox
40 46 0.9500000 lbox
41 45 0.9500000 lbox
51 72 0.9500000 lbox
52 71 0.9500000 lbox
53 70 0.9500000 lbox
54 69 0.9500000 lbox
55 68 0.9500000 lbox
56 67 0.9500000 lbox
57 66 0.9500000 lbox
58 64 0.9500000 lbox
59 63 0.9500000 lbox
showpage
end
%%EOF
