%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:46:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAUUACUGGGACAUGCGCGUUCCGGCCGAAGGGGGGUAAAUUUCCCAACUCCAGGAAUUUGUGGCGGAGAGGGCAAAUAACUGCGGCUCUCCCGGCGCCCCGAUGCUCGCACCAUGUCGAGGCGCAAGCAGGCGAAACCCCAGCACAUCAACUCGGAGGAGGACCAGGGCGAGCAGCAGCCGCAGCAGCAGACCCCGGAGUUUGCAGAUGCGG\
) } def
/len { sequence length } bind def

/coor [
[96.55056763 185.79589844]
[96.68637848 200.79527283]
[96.41471863 215.79281616]
[81.41471863 215.79275513]
[81.14312744 200.79527283]
[81.27893829 185.79589844]
[81.41474915 170.79650879]
[73.91474915 170.79650879]
[66.60447693 183.89459229]
[59.29420090 196.99267578]
[51.98392487 210.09077454]
[44.67364883 223.18885803]
[37.36337280 236.28694153]
[30.05309486 249.38502502]
[34.60572052 264.51940918]
[27.04980850 278.40045166]
[11.86815071 282.79281616]
[-1.93224537 275.09057617]
[-6.16384983 259.86331177]
[1.68387353 246.14512634]
[16.95500946 242.07475281]
[24.26528549 228.97666931]
[31.57556152 215.87858582]
[38.88583755 202.78048706]
[46.19611359 189.68240356]
[53.50638962 176.58432007]
[60.81666565 163.48623657]
[51.17485046 151.99555969]
[37.00633621 156.92031860]
[29.67138863 172.80366516]
[13.43753529 178.35676575]
[-1.48898435 170.60467529]
[-15.58437347 175.73498535]
[-22.31993294 189.78025818]
[-36.68774414 194.78231812]
[-50.03626633 188.27444458]
[-64.13165283 193.40473938]
[-78.22704315 198.53504944]
[-83.40503693 213.29046631]
[-96.88249969 221.22091675]
[-112.29579163 218.58187866]
[-122.36721802 206.61943054]
[-122.34136963 190.98185730]
[-112.23045349 179.05276489]
[-96.80851746 176.46469116]
[-83.35734558 184.43965149]
[-69.26195526 179.30935669]
[-55.16656876 174.17904663]
[-49.12419510 160.61346436]
[-34.90254593 155.20980835]
[-20.71467590 161.63958740]
[-6.61928654 156.50929260]
[-2.86234713 144.18620300]
[7.45965862 136.15621948]
[20.71692848 135.52696228]
[32.08158112 142.75181580]
[46.25009155 137.82705688]
[41.30455399 124.88438416]
[39.31811905 111.59040833]
[40.21137238 98.59302521]
[43.76864243 86.49014282]
[49.65556717 75.80221558]
[57.44192886 66.94989777]
[46.99071121 56.19015884]
[36.53949356 45.43041611]
[21.37416077 40.92227936]
[18.05655098 26.40185356]
[7.60533237 15.64211273]
[-2.84588623 4.88237190]
[-11.06660748 0.90906256]
[-13.36944580 -6.11068153]
[-23.66307068 -17.02128601]
[-33.95669556 -27.93189049]
[-44.25032043 -38.84249496]
[-54.54394531 -49.75310135]
[-64.83757019 -60.66370392]
[-79.55898285 -56.47581100]
[-94.53798676 -59.62034988]
[-106.33250427 -69.37473297]
[-112.23224640 -83.49746704]
[-110.88150024 -98.74325562]
[-102.59064484 -111.60872650]
[-89.26486969 -119.13748932]
[-73.96633911 -119.59948730]
[-60.21053696 -112.88856506]
[-51.15845108 -100.54683685]
[-48.89018250 -85.41033936]
[-53.92696381 -70.95732880]
[-43.63333893 -60.04672623]
[-33.33971405 -49.13611984]
[-23.04608917 -38.22551727]
[-12.75246525 -27.31491089]
[-2.45884085 -16.40430641]
[7.91385508 -5.56884670]
[18.36507416 5.19089413]
[28.81629181 15.95063591]
[43.23408127 19.68916512]
[47.29923248 34.97919846]
[57.75045013 45.73893738]
[68.20166779 56.49868011]
[79.66989899 50.09824371]
[92.34585571 46.66227722]
[105.47651672 46.39490509]
[118.28183746 49.31200409]
[130.00111389 55.24028778]
[139.93812561 63.82757187]
[152.34924316 55.40354156]
[164.76034546 46.97950745]
[177.17146301 38.55547714]
[189.58258057 30.13144493]
[201.99368286 21.70741272]
[214.40480042 13.28338242]
[219.74525452 5.87751007]
[227.05824280 4.82862282]
[239.59056091 -3.41401172]
[242.90548706 -18.63402939]
[255.73246765 -26.81470680]
[270.22198486 -23.56062698]
[282.75430298 -31.80326080]
[295.28662109 -40.04589462]
[291.70709229 -51.20743942]
[293.01080322 -63.78937912]
[299.69677734 -75.60894012]
[311.28344727 -84.34624481]
[326.29522705 -87.98125458]
[335.42663574 -99.88155365]
[344.55807495 -111.78185272]
[342.24697876 -127.41624451]
[351.73489380 -140.05564880]
[367.39285278 -142.20132446]
[379.93124390 -132.58029175]
[381.91125488 -116.90052032]
[372.15820312 -104.46455383]
[356.45837402 -102.65042877]
[347.32693481 -90.75012970]
[338.19552612 -78.84983063]
[342.58624268 -72.76940155]
[357.50857544 -74.29396057]
[351.36767578 -60.60855484]
[355.75842285 -54.52812958]
[369.92691040 -59.45288467]
[384.05923462 -64.48054504]
[398.15463257 -69.61084747]
[412.21234131 -74.84352112]
[426.23162842 -80.17828369]
[430.16119385 -95.18955231]
[442.18499756 -104.99810791]
[457.67962646 -105.83237457]
[470.68710327 -97.37155151]
[476.20574951 -82.86900330]
[472.11355591 -67.90124512]
[459.98406982 -58.22369766]
[444.48129272 -57.55756760]
[431.56637573 -66.15899658]
[417.54711914 -60.82423782]
[412.41552734 -55.50947952]
[403.28494263 -55.51546097]
[389.18954468 -50.38515854]
[383.98120117 -45.14559937]
[374.85168457 -45.28437424]
[360.68316650 -40.35961533]
[344.02185059 -20.48557091]
[321.06823730 -16.71540260]
[303.52926636 -27.51357841]
[290.99694824 -19.27094460]
[278.46463013 -11.02830887]
[275.71356201 3.56508851]
[263.12142944 12.10281944]
[247.83319092 9.11830521]
[235.30087280 17.36094093]
[222.82882690 25.69449425]
[210.41772461 34.11852646]
[198.00660706 42.54255676]
[185.59548950 50.96658707]
[173.18438721 59.39062119]
[160.77326965 67.81465149]
[148.36215210 76.23868561]
[155.95123291 94.18547058]
[156.80465698 114.47923279]
[150.24317932 134.57353210]
[136.55252075 151.75061035]
[117.01284027 163.48623657]
[124.32311249 176.58432007]
[131.63339233 189.68240356]
[138.94366455 202.78048706]
[146.25393677 215.87858582]
[161.53306580 217.84191895]
[172.59706116 228.30334473]
[175.34695435 243.09867859]
[168.93421936 256.51565552]
[176.24449158 269.61373901]
[183.55476379 282.71182251]
[190.86503601 295.80990601]
[198.17532349 308.90798950]
[205.48559570 322.00607300]
[220.75672913 326.07644653]
[228.60444641 339.79464722]
[224.37284851 355.02188110]
[210.57244873 362.72415161]
[195.39079285 358.33178711]
[187.83488464 344.45071411]
[192.38751221 329.31634521]
[185.07722473 316.21826172]
[177.76695251 303.12017822]
[170.45668030 290.02209473]
[163.14640808 276.92401123]
[155.83612061 263.82592773]
[141.05018616 262.24032593]
[129.90126038 252.13262939]
[126.80570984 237.22387695]
[133.15585327 223.18885803]
[125.84558105 210.09077454]
[118.53530121 196.99267578]
[111.22502899 183.89459229]
[103.91474915 170.79650879]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 27]
[9 26]
[10 25]
[11 24]
[12 23]
[13 22]
[14 21]
[28 57]
[29 56]
[32 52]
[33 51]
[36 48]
[37 47]
[38 46]
[63 100]
[64 99]
[65 98]
[67 96]
[68 95]
[69 94]
[71 93]
[72 92]
[73 91]
[74 90]
[75 89]
[76 88]
[106 177]
[107 176]
[108 175]
[109 174]
[110 173]
[111 172]
[112 171]
[114 170]
[115 169]
[118 166]
[119 165]
[120 164]
[125 136]
[126 135]
[127 134]
[140 161]
[141 160]
[142 158]
[143 157]
[144 155]
[145 154]
[182 215]
[183 214]
[184 213]
[185 212]
[186 211]
[190 207]
[191 206]
[192 205]
[193 204]
[194 203]
[195 202]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
