%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:15:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGGUGCCGGGCGUCACAGGUCCUGACAGGGAAGAAGUUGGCAGGUCCUGGCAGGGGACGAGCUGCGGCGGUGGCACCUCCGGGUGUGGAAGGCUCCAGUGAGAUGGAGUCGCGAGUCGCGGACGCUGGGACCGGCGAGACCGCGCGAGCAGCGGGCGGGAGUCCGGCAGUUGGCUGCACCACUCGGGGGCCCGUAGUCUCGG\
) } def
/len { sequence length } bind def

/coor [
[115.39262390 293.57540894]
[114.93294525 278.58242798]
[114.47327423 263.58947754]
[114.01360321 248.59652710]
[105.88990784 236.11235046]
[113.20066833 222.08154297]
[112.74099731 207.08859253]
[112.28132629 192.09564209]
[108.93260193 185.50314331]
[111.93125916 176.86979675]
[111.70140076 161.87155151]
[111.47153473 146.87330627]
[111.24166870 131.87507629]
[104.73692322 128.14167786]
[97.26991272 141.15104675]
[84.26066589 133.68382263]
[91.72743225 120.67488098]
[85.22267914 116.94148254]
[72.15635681 124.30838013]
[59.09003067 131.67527771]
[46.02370453 139.04216003]
[37.80252457 152.55966187]
[22.91595459 152.07049561]
[9.84962940 159.43737793]
[-3.21669674 166.80427551]
[-16.28302193 174.17117310]
[-24.50420189 187.68867493]
[-39.39076996 187.19949341]
[-52.45709610 194.56639099]
[-65.52342224 201.93328857]
[-67.16912842 217.36283875]
[-77.59476471 228.85569763]
[-92.79145050 231.99261475]
[-106.91576385 225.56739807]
[-114.53660583 212.05064392]
[-112.72360992 196.63984680]
[-102.17391968 185.26077271]
[-86.94409180 182.28887939]
[-72.89031982 188.86695862]
[-59.82398987 181.50006104]
[-46.75766373 174.13316345]
[-39.47107697 161.14259338]
[-23.64991760 161.10484314]
[-10.58359051 153.73794556]
[2.48273540 146.37106323]
[15.54906082 139.00416565]
[22.83564949 126.01359558]
[38.65681076 125.97583771]
[51.72313690 118.60894775]
[64.78945923 111.24205017]
[77.85578918 103.87516022]
[75.90739441 89.00223541]
[61.38437653 85.24962616]
[46.86136627 81.49701691]
[32.33835220 77.74440765]
[20.45322609 87.72055054]
[4.97181034 88.77193451]
[-8.15297508 80.49427795]
[-13.87438297 66.07050323]
[-9.99241543 51.04685974]
[2.00023222 41.20023346]
[17.49214172 40.31686020]
[30.52635956 48.73640823]
[36.09096146 63.22139740]
[50.61397171 66.97400665]
[65.13698578 70.72661591]
[79.66000366 74.47922516]
[82.93630219 67.73268127]
[92.76520538 47.49304581]
[80.83580780 38.39966583]
[64.51015472 36.84888458]
[57.93733978 21.82456398]
[67.87892151 8.78243923]
[84.10784912 11.13912868]
[89.92919159 26.47027397]
[101.85858154 35.56365585]
[129.93664551 58.10575867]
[136.06677246 86.47590637]
[124.85742950 105.89521027]
[137.32148743 97.54971313]
[149.78555298 89.20421600]
[162.24960327 80.85871887]
[174.71365356 72.51322937]
[187.17771912 64.16773224]
[199.64176941 55.82223511]
[212.10583496 47.47674179]
[224.56988525 39.13124466]
[220.57772827 26.15367889]
[220.96908569 12.34362316]
[225.85479736 -0.83327013]
[234.86076355 -11.92996407]
[247.15260315 -19.67667770]
[261.51150513 -23.12524033]
[261.51150513 -38.12524033]
[261.51150513 -53.12524033]
[261.51150513 -68.12524414]
[261.51150513 -83.12524414]
[261.51150513 -98.12524414]
[261.51150513 -113.12524414]
[250.16036987 -124.12193298]
[249.99328613 -139.92533875]
[261.10937500 -151.15957642]
[276.91366577 -151.15957642]
[288.02975464 -139.92533875]
[287.86264038 -124.12193298]
[276.51150513 -113.12524414]
[276.51150513 -98.12524414]
[276.51150513 -83.12524414]
[276.51150513 -68.12524414]
[276.51150513 -53.12524033]
[276.51150513 -38.12524033]
[276.51150513 -23.12524033]
[290.00460815 -16.57263947]
[301.79324341 -25.84776115]
[303.80630493 -41.29396820]
[315.89379883 -50.53232574]
[330.60699463 -48.51797867]
[342.39562988 -57.79310226]
[347.20797729 -65.56279755]
[354.43673706 -67.11837006]
[366.36614990 -76.21175385]
[378.29553223 -85.30513763]
[390.22491455 -94.39851379]
[397.14572144 -113.32839203]
[416.40951538 -114.96743774]
[428.05465698 -124.42211914]
[439.69976807 -133.87680054]
[451.34487915 -143.33149719]
[462.99002075 -152.78617859]
[468.33880615 -168.28851318]
[484.48788452 -171.14143372]
[494.82446289 -158.41009521]
[488.71517944 -143.19140625]
[472.44470215 -141.14105225]
[460.79959106 -131.68637085]
[449.15444946 -122.23168182]
[437.50933838 -112.77699280]
[425.86419678 -103.32231140]
[425.72668457 -93.09915161]
[419.85943604 -84.45932770]
[410.00155640 -80.39373779]
[399.31829834 -82.46912384]
[387.38891602 -73.37574005]
[375.45953369 -64.28235626]
[363.53012085 -55.18898010]
[351.67077637 -46.00445938]
[339.88211060 -36.72933578]
[338.37777710 -21.95528603]
[326.55456543 -12.38105869]
[311.06835938 -14.05911827]
[299.27972412 -4.78399658]
[303.84451294 2.28124118]
[307.05700684 10.09263706]
[308.79772949 18.39283943]
[323.47784424 21.47402954]
[338.15798950 24.55521965]
[352.83813477 27.63640976]
[367.51824951 30.71759987]
[382.92477417 25.09877396]
[395.31857300 35.83774948]
[391.94998169 51.88719177]
[376.28430176 56.73681259]
[364.43707275 45.39773178]
[349.75692749 42.31653976]
[335.07681274 39.23535156]
[320.39666748 36.15415955]
[305.71652222 33.07297134]
[299.79098511 46.85294724]
[312.12567139 55.38846588]
[324.46038818 63.92398453]
[336.79510498 72.45950317]
[353.17477417 73.25834656]
[360.43112183 87.96471405]
[351.09945679 101.44995880]
[334.77935791 99.84161377]
[328.25958252 84.79420471]
[315.92486572 76.25868988]
[303.59017944 67.72316742]
[291.25546265 59.18765259]
[270.50051880 66.73436737]
[249.42976379 63.71884155]
[232.91537476 51.59530258]
[220.45132446 59.94079590]
[207.98727417 68.28629303]
[195.52320862 76.63179016]
[183.05915833 84.97727966]
[170.59509277 93.32277679]
[158.13104248 101.66827393]
[145.66697693 110.01377106]
[133.20292664 118.35926819]
[126.23990631 131.64521790]
[126.46977234 146.64344788]
[126.69963837 161.64169312]
[126.92950439 176.63992310]
[127.27427673 191.63597107]
[127.73395538 206.62892151]
[128.19361877 221.62187195]
[136.35020447 235.17845154]
[129.00656128 248.13685608]
[129.46623230 263.12982178]
[129.92590332 278.12277222]
[130.38557434 293.11572266]
[136.91445923 308.76211548]
[123.68690491 319.36721802]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 202]
[2 201]
[3 200]
[4 199]
[6 197]
[7 196]
[8 195]
[10 194]
[11 193]
[12 192]
[13 191]
[18 51]
[19 50]
[20 49]
[21 48]
[23 46]
[24 45]
[25 44]
[26 43]
[28 41]
[29 40]
[30 39]
[52 67]
[53 66]
[54 65]
[55 64]
[69 76]
[70 75]
[79 190]
[80 189]
[81 188]
[82 187]
[83 186]
[84 185]
[85 184]
[86 183]
[87 182]
[93 112]
[94 111]
[95 110]
[96 109]
[97 108]
[98 107]
[99 106]
[113 151]
[114 150]
[117 147]
[118 146]
[120 145]
[121 144]
[122 143]
[123 142]
[125 138]
[126 137]
[127 136]
[128 135]
[129 134]
[154 167]
[155 166]
[156 165]
[157 164]
[158 163]
[168 179]
[169 178]
[170 177]
[171 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
