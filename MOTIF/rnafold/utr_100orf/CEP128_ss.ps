%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:38:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGGUUUGGGGAAAGUGUAGGGGCAACCAAAGAUCAUCGGCUUGACUAGGCCCUUUGCCCUGAACCUCAUGAAGAAAUGAUAGGAGGCAGACAUAUGUGCCUAAAAAGAGCGUUGAGCUCAGAGAAGAGCAACUCGGAGUUUUGGGGGUGUGCUUUGAUUUGUGUACAUCAAUGGCAGAAUCAUCCAGCGAAUCAGAUCACUUCCGCUGUCGUGACCGAUUGAGUCCAUGGGCUGCCAGAUCAACGCACAGGGGA\
ACUCGAAGUCUUCCUA\
) } def
/len { sequence length } bind def

/coor [
[135.33372498 143.85330200]
[110.04580688 159.48202515]
[78.32772064 160.57150269]
[67.59931946 171.05490112]
[56.87092590 181.53828430]
[46.14252853 192.02168274]
[35.41413116 202.50506592]
[24.68573189 212.98846436]
[13.95733547 223.47184753]
[3.22893786 233.95524597]
[-7.49945974 244.43862915]
[-4.77514505 252.82707214]
[-4.90039539 261.60260010]
[-7.83391714 269.82830811]
[-13.23607349 276.63491821]
[-20.50796700 281.31274414]
[-28.85774422 283.38562012]
[-37.38679123 282.65917969]
[-45.18643951 279.23889160]
[-56.50202942 289.08560181]
[-67.81761932 298.93228149]
[-79.13320923 308.77899170]
[-90.44879913 318.62567139]
[-101.76438904 328.47238159]
[-97.34086609 344.14794922]
[-100.19474792 360.12454224]
[-109.70323944 373.20495605]
[-123.91703796 380.79412842]
[-139.95976257 381.41394043]
[-154.61000061 374.99084473]
[-165.81111145 384.96759033]
[-177.01222229 394.94430542]
[-175.33950806 410.37097168]
[-183.08300781 423.81784058]
[-197.26518250 430.11428833]
[-212.43269348 426.83926392]
[-222.75334167 415.25201416]
[-224.25862122 399.80813599]
[-216.36970520 386.44607544]
[-202.12005615 380.30383301]
[-186.98895264 383.74322510]
[-175.78784180 373.76647949]
[-164.58673096 363.78976440]
[-169.05357361 350.67529297]
[-168.18855286 336.80465698]
[-162.08909607 324.26898193]
[-151.64419556 314.97064209]
[-138.40505981 310.33465576]
[-124.35473633 311.09033203]
[-111.61108398 317.15676880]
[-100.29549408 307.31008911]
[-88.97990417 297.46337891]
[-77.66431427 287.61669922]
[-66.34872437 277.76998901]
[-55.03313446 267.92330933]
[-55.46332550 246.65888977]
[-39.75091171 231.90161133]
[-17.98285103 233.71023560]
[-7.25445318 223.22683716]
[3.47394443 212.74345398]
[14.20234203 202.26005554]
[24.93073845 191.77667236]
[35.65913773 181.29327393]
[46.38753510 170.80989075]
[57.11593246 160.32649231]
[67.84432983 149.84310913]
[63.07745743 135.62069702]
[48.19835663 133.72007751]
[33.31925583 131.81944275]
[18.44015694 129.91882324]
[6.09381676 139.78511047]
[-9.60338593 137.94842529]
[-19.33857918 125.49846649]
[-17.33604622 109.82156372]
[-4.78385496 100.21854401]
[10.87100410 102.38670349]
[20.34077835 115.03972626]
[35.21987915 116.94034576]
[50.09897995 118.84097290]
[64.97808075 120.74159241]
[67.60643768 113.71722412]
[53.55779266 108.46028137]
[58.81497574 94.41172028]
[72.86315918 99.66849518]
[75.49151611 92.64412689]
[63.01947021 84.31056976]
[50.54742432 75.97702026]
[38.07538223 67.64346313]
[25.60333824 59.30991364]
[11.09251022 64.80677795]
[-3.86907935 60.69211197]
[-13.52839470 48.54809189]
[-14.17123127 33.04433441]
[-5.55040598 20.14235878]
[9.01919746 14.80323410]
[23.93527031 19.07996178]
[33.46227646 31.32805252]
[33.93688965 46.83786774]
[46.40893555 55.17142105]
[58.88097763 63.50497437]
[71.35301971 71.83853149]
[83.82506561 80.17208099]
[89.33836365 75.08744049]
[79.16908264 64.06085205]
[75.87521362 49.42697144]
[90.19567108 53.89156723]
[100.36495209 64.91815948]
[105.87825012 59.83351898]
[98.57917786 46.72918320]
[91.28011322 33.62484741]
[83.98104858 20.52050972]
[69.00601959 14.76480865]
[64.30680847 -0.57458460]
[73.48825073 -13.73059940]
[89.50712585 -14.61106682]
[100.07511902 -2.54056859]
[97.08538055 13.22144318]
[104.38445282 26.32577896]
[111.68351746 39.43011475]
[118.98258209 52.53445053]
[132.59747314 58.83007431]
[147.30924988 55.90372086]
[155.08161926 51.17635345]
[162.20779419 53.02955627]
[176.95239258 50.27331543]
[191.69699097 47.51707077]
[206.44158936 44.76082993]
[221.18618774 42.00458527]
[224.32498169 39.12405777]
[227.85778809 37.53036880]
[231.33847046 37.19110107]
[234.37596130 37.93432617]
[236.67440796 39.47808838]
[251.53056335 37.40574265]
[261.05175781 25.07755280]
[276.14755249 23.18753052]
[287.84191895 32.34052658]
[302.69808960 30.26817894]
[317.55422974 28.19583511]
[332.41040039 26.12348938]
[347.26654053 24.05114365]
[362.12271118 21.97879791]
[376.97885132 19.90645218]
[381.05514526 10.11594677]
[388.75521851 2.94123363]
[398.65621948 -0.38284817]
[408.96557617 0.67526442]
[417.84576416 5.86003828]
[423.74163818 14.18639374]
[438.66067505 12.62995434]
[453.57968140 11.07351398]
[468.49871826 9.51707458]
[483.41775513 7.96063471]
[496.34057617 -1.16684306]
[509.80200195 5.20807648]
[524.72100830 3.65163684]
[539.64007568 2.09519696]
[554.55908203 0.53875721]
[569.47814941 -1.01768255]
[584.39715576 -2.57412243]
[599.31622314 -4.13056231]
[614.23522949 -5.68700218]
[622.41064453 -9.67706013]
[629.33538818 -7.17424059]
[644.27142334 -8.55826569]
[659.20745850 -9.94229126]
[669.28784180 -21.81760597]
[684.45477295 -23.00843430]
[695.71398926 -13.32512093]
[710.64996338 -14.70914555]
[725.58599854 -16.09317207]
[735.66644287 -27.96848488]
[750.83337402 -29.15931511]
[762.09252930 -19.47599983]
[777.02856445 -20.86002541]
[791.96459961 -22.24405098]
[802.04498291 -34.11936569]
[817.21191406 -35.31019592]
[828.47113037 -25.62688065]
[843.40710449 -27.01090622]
[858.34313965 -28.39493179]
[873.27917480 -29.77895737]
[888.08062744 -40.76155472]
[903.71990967 -32.76647186]
[918.63897705 -34.32291031]
[933.51806641 -36.22353363]
[948.34930420 -38.46732330]
[963.18054199 -40.71111679]
[978.01177979 -42.95490646]
[992.84295654 -45.19869995]
[996.45996094 -59.96305084]
[1005.45568848 -72.21642303]
[1018.45837402 -80.09027863]
[1033.48535156 -82.38389587]
[1048.24487305 -78.74752045]
[1060.48645020 -69.73567200]
[1068.34313965 -56.72260284]
[1070.61694336 -41.69269562]
[1066.96118164 -26.93791199]
[1057.93322754 -14.70824528]
[1044.90991211 -6.86863184]
[1029.87695312 -4.61455679]
[1015.12701416 -8.28974915]
[1002.90924072 -17.33376884]
[995.08679199 -30.36746788]
[980.25555420 -28.12367630]
[965.42431641 -25.87988472]
[950.59307861 -23.63609314]
[935.76184082 -21.39230156]
[933.99816895 -19.25796509]
[931.29803467 -17.68056679]
[927.86486816 -17.01465607]
[924.02447510 -17.53638458]
[920.19537354 -19.40387917]
[905.27636719 -17.84743881]
[897.43530273 -8.66643047]
[885.04443359 -7.22867155]
[874.66314697 -14.84294415]
[859.72717285 -13.45891857]
[844.79113770 -12.07489300]
[829.85516357 -10.69086838]
[820.56695557 0.89643735]
[805.43945312 2.51280499]
[793.34857178 -7.30803871]
[778.41259766 -5.92401314]
[763.47656250 -4.53998804]
[754.18841553 7.04731750]
[739.06091309 8.66368484]
[726.97003174 -1.15715861]
[712.03399658 0.22686680]
[697.09802246 1.61089218]
[687.80981445 13.19819736]
[672.68231201 14.81456470]
[660.59143066 4.99372149]
[645.65545654 6.37774706]
[630.71942139 7.76177216]
[615.79168701 9.23202896]
[600.87261963 10.78846931]
[585.95361328 12.34490871]
[571.03454590 13.90134907]
[556.11553955 15.45778847]
[541.19653320 17.01422882]
[526.27746582 18.57066727]
[511.35845947 20.12710762]
[499.50271606 29.14325905]
[484.97418213 22.87966537]
[470.05517578 24.43610573]
[455.13613892 25.99254608]
[440.21710205 27.54898453]
[425.29806519 29.10542488]
[414.11920166 45.09686661]
[394.47186279 47.69416428]
[379.05120850 34.76261139]
[364.19503784 36.83495331]
[349.33889771 38.90729904]
[334.48272705 40.97964478]
[319.62658691 43.05199051]
[304.77041626 45.12433624]
[289.91427612 47.19668198]
[281.17114258 59.20058060]
[266.13442993 61.51386642]
[253.60290527 52.26189804]
[238.74674988 54.33424377]
[223.94242859 56.74918365]
[209.19783020 59.50542450]
[194.45323181 62.26166916]
[179.70863342 65.01791382]
[164.96403503 67.77415466]
[150.23561096 70.61550140]
[135.52381897 73.54185486]
[147.89883423 93.77427673]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 66]
[4 65]
[5 64]
[6 63]
[7 62]
[8 61]
[9 60]
[10 59]
[11 58]
[19 55]
[20 54]
[21 53]
[22 52]
[23 51]
[24 50]
[30 43]
[31 42]
[32 41]
[67 80]
[68 79]
[69 78]
[70 77]
[85 102]
[86 101]
[87 100]
[88 99]
[89 98]
[108 120]
[109 119]
[110 118]
[111 117]
[121 270]
[122 269]
[124 268]
[125 267]
[126 266]
[127 265]
[128 264]
[133 263]
[134 262]
[137 259]
[138 258]
[139 257]
[140 256]
[141 255]
[142 254]
[143 253]
[149 250]
[150 249]
[151 248]
[152 247]
[153 246]
[155 244]
[156 243]
[157 242]
[158 241]
[159 240]
[160 239]
[161 238]
[162 237]
[164 236]
[165 235]
[166 234]
[169 231]
[170 230]
[171 229]
[174 226]
[175 225]
[176 224]
[179 221]
[180 220]
[181 219]
[182 218]
[184 215]
[185 214]
[186 209]
[187 208]
[188 207]
[189 206]
[190 205]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
