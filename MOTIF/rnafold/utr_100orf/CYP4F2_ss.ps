%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:31:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCACAGCCUUUGCUAUAUCAAGGGCCAGGGUCAAAGGCCUCCCAGCAGACAGAGAGAGGAGGUUGUCUGGGACAGACUGCUCCUGACAGAAGGAUGUCCCAGCUGAGCCUGUCCUGGCUGGGCCUCUGGCCAGUGGCAGCAUCCCCUUGGCUGCUCCUCCUGCUGGUCGGGGCCUCCUGGCUCCUGGCCCAUG\
) } def
/len { sequence length } bind def

/coor [
[-5.77629471 615.41046143]
[-8.82715511 627.44244385]
[-14.67434406 638.37915039]
[-22.97059631 647.58233643]
[-33.22590256 654.51641846]
[-44.83644867 658.77947998]
[-57.12016296 660.12677002]
[-69.35679626 658.48468018]
[-75.17981720 672.30834961]
[-81.00283813 686.13195801]
[-78.42383575 702.32702637]
[-91.32840729 712.44653320]
[-106.44144440 706.08032227]
[-108.21595001 689.77746582]
[-94.82645416 680.30889893]
[-89.00343323 666.48529053]
[-83.18041229 652.66168213]
[-96.50254822 641.05950928]
[-105.08077240 625.58874512]
[-107.87239838 608.09655762]
[-104.52670288 590.67761230]
[-95.42893982 575.42358398]
[-81.65601349 564.17163086]
[-64.84903717 558.28350830]
[-47.01781845 558.48034668]
[-42.08782959 544.31365967]
[-37.15784073 530.14697266]
[-32.22785568 515.98028564]
[-27.29786682 501.81359863]
[-22.36787796 487.64691162]
[-17.43789101 473.48019409]
[-12.50790405 459.31350708]
[-7.69103098 445.10797119]
[-2.98757935 430.86444092]
[1.71587217 416.62094116]
[6.41932392 402.37744141]
[1.92811406 385.41796875]
[15.75919342 373.26947021]
[20.23491287 358.95275879]
[24.71063232 344.63604736]
[29.18635178 330.31936646]
[33.66207123 316.00265503]
[38.13779068 301.68594360]
[42.61351013 287.36926270]
[46.86035919 272.98300171]
[50.87725830 258.53085327]
[54.89415741 244.07870483]
[58.91105652 229.62655640]
[62.92795563 215.17442322]
[66.94485474 200.72227478]
[70.96175385 186.27012634]
[57.90269852 193.64990234]
[43.13126755 191.04127502]
[33.38981247 179.63496399]
[33.12477112 164.63731384]
[42.45711899 152.89392090]
[57.12715530 149.76499939]
[70.43881226 156.67874146]
[76.31605530 170.47962952]
[81.91790009 156.56491089]
[87.51974487 142.65019226]
[93.12158966 128.73547363]
[78.28606415 85.84839630]
[73.35607147 71.68170166]
[68.42608643 57.51500702]
[63.49609756 43.34831619]
[58.56611252 29.18161964]
[42.68489838 21.85951233]
[37.11695480 5.63826561]
[44.84346771 -9.29373646]
[39.68819809 -23.38001251]
[34.53292847 -37.46628952]
[29.37765694 -51.55256653]
[24.22238731 -65.63883972]
[19.06711769 -79.72512054]
[13.91184807 -93.81139374]
[8.75657845 -107.89767456]
[-5.30061865 -114.60833740]
[-10.32813072 -128.96725464]
[-3.84391141 -142.32730103]
[-8.99918079 -156.41357422]
[-21.00807190 -166.71391296]
[-18.11625671 -181.32510376]
[-23.27152634 -195.41137695]
[-37.71060562 -201.83699036]
[-43.29890823 -216.62031555]
[-36.72099304 -230.99064636]
[-21.87941933 -236.42233276]
[-7.57943201 -229.69285583]
[-2.30495787 -214.79469299]
[-9.18524933 -200.56665039]
[-4.02997971 -186.48036194]
[7.61017179 -177.18757629]
[5.08709574 -161.56884766]
[10.24236584 -147.48255920]
[23.81864357 -141.46423340]
[29.24748421 -127.25218964]
[22.84285545 -113.05294037]
[27.99812508 -98.96666718]
[33.15339661 -84.88038635]
[38.30866623 -70.79411316]
[43.46393585 -56.70783615]
[48.61920547 -42.62155914]
[53.77447510 -28.53528214]
[58.92974472 -14.44900608]
[71.26737213 -10.70930767]
[79.31565857 -0.39017001]
[79.95689392 12.87562084]
[72.73280334 24.25163269]
[77.66279602 38.41832733]
[82.59278107 52.58502197]
[87.52276611 66.75171661]
[92.45275879 80.91841125]
[106.83901215 85.16526031]
[118.67224884 75.94709778]
[130.50549316 66.72894287]
[142.26484680 57.41672516]
[153.94958496 48.01104355]
[165.63432312 38.60535812]
[177.31906128 29.19967461]
[189.00379944 19.79399109]
[200.68853760 10.38830662]
[212.37327576 0.98262250]
[224.05801392 -8.42306137]
[229.47187805 -23.90279388]
[245.63281250 -26.68784714]
[255.91581726 -13.91319847]
[249.74264526 1.27969038]
[233.46369934 3.26167679]
[221.77896118 12.66736031]
[210.09422302 22.07304382]
[198.40948486 31.47872925]
[186.72474670 40.88441467]
[175.04000854 50.29009628]
[163.35527039 59.69578171]
[151.67053223 69.10146332]
[148.42759705 75.75233459]
[139.72364807 78.56218719]
[127.89040375 87.78034210]
[116.05716705 96.99849701]
[120.53288269 111.31520081]
[135.50952148 112.15199280]
[150.48616028 112.98878479]
[165.46281433 113.82557678]
[179.67312622 106.87018585]
[191.94894409 115.30543518]
[206.92558289 116.14222717]
[221.31101990 108.26877594]
[235.17984009 117.02021790]
[234.26499939 133.39382935]
[219.50759888 140.54583740]
[206.08879089 131.11886597]
[191.11215210 130.28207397]
[177.97306824 137.29733276]
[164.62602234 128.80221558]
[149.64938354 127.96542358]
[134.67272949 127.12863159]
[119.69609070 126.29183960]
[107.03630066 134.33732605]
[101.43446350 148.25202942]
[95.83261871 162.16674805]
[90.23077393 176.08146667]
[85.41390228 190.28701782]
[81.39700317 204.73916626]
[77.38010406 219.19131470]
[73.36320496 233.64346313]
[69.34630585 248.09561157]
[65.32940674 262.54776001]
[61.31250381 276.99990845]
[62.59540939 283.50473022]
[60.68044281 288.87088013]
[56.93021011 291.84497070]
[52.45449066 306.16168213]
[47.97877121 320.47836304]
[43.50305176 334.79507446]
[39.02733231 349.11178589]
[34.55161285 363.42846680]
[30.07589531 377.74517822]
[35.35880661 389.52011108]
[31.32786560 401.35733032]
[20.66283226 407.08087158]
[15.95938110 421.32440186]
[11.25592899 435.56790161]
[6.55247784 449.81140137]
[6.83231926 458.95339966]
[1.65879047 464.24349976]
[-3.27119708 478.41018677]
[-8.20118427 492.57687378]
[-13.13117218 506.74359131]
[-18.06115913 520.91027832]
[-22.99114799 535.07696533]
[-27.92113495 549.24365234]
[-32.85112381 563.41033936]
[-22.60254860 570.51098633]
[-14.36758518 579.85778809]
[-8.62470722 590.89953613]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 17]
[9 16]
[10 15]
[25 193]
[26 192]
[27 191]
[28 190]
[29 189]
[30 188]
[31 187]
[32 186]
[33 184]
[34 183]
[35 182]
[36 181]
[38 178]
[39 177]
[40 176]
[41 175]
[42 174]
[43 173]
[44 172]
[45 169]
[46 168]
[47 167]
[48 166]
[49 165]
[50 164]
[51 163]
[59 162]
[60 161]
[61 160]
[62 159]
[63 113]
[64 112]
[65 111]
[66 110]
[67 109]
[70 105]
[71 104]
[72 103]
[73 102]
[74 101]
[75 100]
[76 99]
[77 98]
[80 95]
[81 94]
[83 92]
[84 91]
[114 140]
[115 139]
[116 138]
[117 136]
[118 135]
[119 134]
[120 133]
[121 132]
[122 131]
[123 130]
[124 129]
[141 158]
[142 157]
[143 156]
[144 155]
[146 153]
[147 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
