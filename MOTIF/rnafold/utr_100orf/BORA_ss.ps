%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:10:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGCGGAAGCGGGGAGUUAAAGAGUCUAUGCCUGUCGUGGAAGCUGGCCUGGCCCCCGGAGCUCCCUGGAGUCGGUACUGGGGGCUUCGUUUUGUACGCACCGGUAGGUACGCUCUUUGUGGUCCCUGGCCUUUCCUCCUGUCUGAAUGGAGAGGUUUCUUUUCCCAGCUCCUGACUUGCCUGCCCGCUCGCCCCUGGUGAAUGGGAGCAGUCAGGGAGUAGGUGUGGAAGAGAGGGGCACCAGAA\
) } def
/len { sequence length } bind def

/coor [
[75.10784149 138.56848145]
[74.91783142 123.56967926]
[67.41843414 123.66468811]
[64.58531952 138.39469910]
[61.75220108 153.12472534]
[67.63011932 168.43426514]
[57.10174179 181.00746155]
[40.99775696 177.91007996]
[35.88456726 162.32844543]
[47.02218246 150.29161072]
[49.85529709 135.56158447]
[52.68841171 120.83157349]
[44.35485840 108.35952759]
[29.66190910 105.34004974]
[14.96896076 102.32057190]
[0.27601117 99.30109406]
[-14.16516876 109.19435883]
[-30.96010399 105.64036560]
[-39.80028534 91.32055664]
[-54.53030777 88.48744202]
[-69.26032257 85.65432739]
[-83.99034119 82.82121277]
[-98.72035980 79.98809814]
[-113.45038605 77.15498352]
[-128.18040466 74.32186890]
[-142.91041565 71.48875427]
[-151.52247620 78.08247375]
[-162.12214661 78.84604645]
[-171.20739746 73.76844788]
[-175.90846252 64.72920227]
[-190.56198120 61.52384186]
[-205.21549988 58.31848526]
[-219.86903381 55.11312866]
[-234.52255249 51.90777206]
[-249.17607117 48.70241547]
[-263.82958984 45.49705887]
[-278.48312378 42.29170227]
[-293.13662720 39.08634567]
[-307.81015015 35.97386551]
[-322.50311279 32.95438766]
[-333.96939087 43.24180984]
[-349.11752319 44.78688812]
[-362.11706543 37.20560074]
[-368.08825684 23.58640099]
[-382.78121948 20.56692314]
[-400.12982178 26.77332687]
[-412.77395630 14.58915424]
[-427.50399780 11.75603962]
[-442.23400879 8.92292500]
[-455.22445679 17.51862907]
[-470.12243652 14.43561363]
[-478.23706055 1.99823833]
[-492.96707153 -0.83487612]
[-507.69708252 -3.66799045]
[-522.42712402 -6.50110483]
[-537.15710449 -9.33421993]
[-551.88714600 -12.16733360]
[-566.61718750 -15.00044823]
[-581.34716797 -17.83356285]
[-596.07720947 -20.66667747]
[-616.69012451 -11.84864998]
[-632.40441895 -26.74253082]
[-647.25903320 -28.82594490]
[-662.11364746 -30.90936089]
[-676.96826172 -32.99277496]
[-691.96044922 -26.34698486]
[-705.05072021 -36.22502899]
[-702.77301025 -52.46522522]
[-687.47033691 -58.36104584]
[-674.88482666 -47.84738159]
[-660.03021240 -45.76396942]
[-645.17559814 -43.68055344]
[-630.32098389 -41.59713745]
[-625.22119141 -47.53230286]
[-618.11285400 -51.02246475]
[-610.11096191 -51.43803787]
[-602.50341797 -48.63831329]
[-596.54357910 -43.00602341]
[-593.24407959 -35.39669800]
[-578.51409912 -32.56358337]
[-563.78405762 -29.73046684]
[-549.05401611 -26.89735222]
[-534.32403564 -24.06423950]
[-519.59399414 -21.23112488]
[-504.86398315 -18.39801025]
[-490.13397217 -15.56489563]
[-475.40393066 -12.73178101]
[-463.25463867 -21.27166557]
[-448.27593994 -18.60832024]
[-439.40087891 -5.80709362]
[-424.67086792 -2.97397923]
[-409.94085693 -0.14086488]
[-399.76831055 -6.65840816]
[-387.48602295 -4.43568325]
[-379.76174927 5.87397432]
[-365.06878662 8.89345169]
[-354.21069336 -1.26723516]
[-339.27493286 -3.10767388]
[-325.96374512 4.28594732]
[-319.48364258 18.26144028]
[-304.79067993 21.28091812]
[-297.62365723 19.55302620]
[-289.93127441 24.43282509]
[-275.27777100 27.63818169]
[-260.62423706 30.84353828]
[-245.97071838 34.04889297]
[-231.31719971 37.25424957]
[-216.66366577 40.45960617]
[-202.01014709 43.66496277]
[-187.35662842 46.87031937]
[-172.70310974 50.07567596]
[-154.73425293 42.89614105]
[-140.07730103 56.75873184]
[-125.34729004 59.59184647]
[-110.61727142 62.42496109]
[-95.88724518 65.25807953]
[-81.15722656 68.09119415]
[-66.42720795 70.92430878]
[-51.69719315 73.75742340]
[-36.96717072 76.59053802]
[-27.42772675 67.94961548]
[-14.46049404 66.34944916]
[-2.76350069 72.59516144]
[3.29548907 84.60814667]
[17.98843765 87.62762451]
[32.68138885 90.64710236]
[47.37433624 93.66658020]
[78.40194702 66.45078278]
[108.09884644 74.45825195]
[115.21165466 61.25189590]
[122.32447052 48.04553604]
[129.43727112 34.83917618]
[136.55009460 21.63281631]
[143.66290283 8.42645645]
[150.77571106 -4.77990341]
[157.88851929 -17.98626328]
[165.00132751 -31.19262314]
[155.99272156 -43.51365280]
[153.23059082 -58.52476120]
[157.26335144 -73.24548340]
[167.29029846 -84.75300598]
[181.32057190 -90.76249695]
[196.56846619 -90.08078003]
[210.00646973 -82.84320068]
[218.96649170 -70.48679352]
[221.66949463 -55.46492386]
[217.57879639 -40.76020050]
[207.50660706 -29.29225349]
[193.45277405 -23.33805275]
[178.20768738 -24.07981110]
[171.09487915 -10.87345219]
[163.98207092 2.33290696]
[156.86926270 15.53926659]
[149.75645447 28.74562645]
[142.64363098 41.95198441]
[135.53082275 55.15834427]
[128.41801453 68.36470795]
[121.30520630 81.57106018]
[127.13311768 95.39262390]
[141.55436707 99.51906586]
[155.97561646 103.64550781]
[170.39686584 107.77194977]
[184.81811523 111.89838409]
[199.23937988 116.02482605]
[213.66062927 120.15126801]
[228.08187866 124.27770996]
[242.52897644 128.31272888]
[257.00134277 132.25616455]
[272.35018921 128.41902161]
[282.59567261 139.23010254]
[297.06802368 143.17353821]
[311.63565063 146.74908447]
[326.28915405 149.95443726]
[340.94268799 153.15979004]
[355.59622192 156.36514282]
[370.24972534 159.57051086]
[384.90325928 162.77586365]
[399.55676270 165.98121643]
[408.58398438 164.75871277]
[414.37506104 169.32110596]
[428.98681641 172.71182251]
[437.84317017 166.45007324]
[448.46420288 166.08976746]
[457.34997559 171.50888062]
[461.70419312 180.72021484]
[476.22534180 184.48001099]
[490.74652100 188.23979187]
[505.26766968 191.99958801]
[520.56665039 187.96833801]
[530.94830322 198.64875793]
[545.46942139 202.40853882]
[559.99060059 206.16833496]
[574.51177979 209.92811584]
[589.03289795 213.68791199]
[605.88195801 211.80470276]
[612.35583496 227.47395325]
[599.09106445 238.03250122]
[585.27313232 228.20906067]
[570.75195312 224.44927979]
[556.23083496 220.68948364]
[541.70965576 216.92970276]
[527.18847656 213.16990662]
[512.92816162 217.47009277]
[501.50787354 206.52073669]
[486.98672485 202.76095581]
[472.46557617 199.00115967]
[457.94439697 195.24137878]
[439.71575928 201.73303223]
[425.59606934 187.32356262]
[410.98434448 183.93284607]
[396.35140991 180.63473511]
[381.69790649 177.42938232]
[367.04437256 174.22402954]
[352.39083862 171.01866150]
[337.73733521 167.81330872]
[323.08380127 164.60795593]
[308.43029785 161.40260315]
[306.01351929 162.77705383]
[302.91311646 163.28883362]
[299.45074463 162.67520142]
[296.03631592 160.79306030]
[293.12460327 157.64590454]
[278.65222168 153.70246887]
[264.33856201 157.82167053]
[253.05790710 146.72853088]
[238.58554077 142.78509521]
[231.32350159 144.05587769]
[223.95542908 138.69895935]
[209.53417969 134.57252502]
[195.11293030 130.44607544]
[180.69168091 126.31964111]
[166.27043152 122.19319916]
[151.84918213 118.06675720]
[137.42793274 113.94031525]
[123.00667572 109.81387329]
[112.06954193 120.07930756]
[115.27490234 134.73283386]
[126.71386719 146.48365784]
[121.99704742 162.18981934]
[105.97669220 165.69416809]
[95.13317871 153.39172363]
[100.62138367 137.93818665]
[97.41602325 123.28466797]
[89.91662598 123.37966919]
[90.10663605 138.37846375]
[90.29664612 153.37725830]
[82.96207428 166.46176147]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 12]
[4 11]
[5 10]
[13 127]
[14 126]
[15 125]
[16 124]
[19 120]
[20 119]
[21 118]
[22 117]
[23 116]
[24 115]
[25 114]
[26 113]
[30 111]
[31 110]
[32 109]
[33 108]
[34 107]
[35 106]
[36 105]
[37 104]
[38 103]
[39 101]
[40 100]
[44 96]
[45 95]
[47 92]
[48 91]
[49 90]
[52 87]
[53 86]
[54 85]
[55 84]
[56 83]
[57 82]
[58 81]
[59 80]
[60 79]
[62 73]
[63 72]
[64 71]
[65 70]
[129 158]
[130 157]
[131 156]
[132 155]
[133 154]
[134 153]
[135 152]
[136 151]
[137 150]
[159 235]
[160 234]
[161 233]
[162 232]
[163 231]
[164 230]
[165 229]
[166 228]
[167 226]
[168 225]
[170 223]
[171 222]
[172 217]
[173 216]
[174 215]
[175 214]
[176 213]
[177 212]
[178 211]
[180 210]
[181 209]
[185 207]
[186 206]
[187 205]
[188 204]
[190 202]
[191 201]
[192 200]
[193 199]
[194 198]
[236 243]
[237 242]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
