%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:19:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCGGGGCCAAGAUGGCGGCGCAGCGCGCGGCGGGGGCGACGGGCGGCGGGGGCCGGGGGGCGGUGGGACGUUGACCCCGCCCCCUGCUGCUGCUAGUCUGCGCCGGGCGGCGGUGGCGGCGGAGACCCGAACAUGGCGACCGCGCGCACCUUCGGGCCCGAGCGGGAAGCCGAGCCGGCCAAGGAAGCGCGCGUCGUGGGCUCGGAGCUUGUGGACACUUAUACGGUUUACA\
) } def
/len { sequence length } bind def

/coor [
[179.46717834 380.62380981]
[175.11889648 366.26788330]
[170.77062988 351.91195679]
[166.42234802 337.55603027]
[151.38932800 325.37963867]
[156.32209778 305.82293701]
[151.59158325 291.58837891]
[146.86108398 277.35382080]
[142.13056946 263.11929321]
[137.40007019 248.88473511]
[130.49728394 247.39944458]
[124.47482300 243.58515930]
[120.09893799 237.87165833]
[117.94537354 230.93354797]
[118.32395172 223.61068726]
[121.23494720 216.80665588]
[126.36328888 211.37713623]
[122.59410858 196.85841370]
[118.82492828 182.33969116]
[115.05574799 167.82096863]
[111.28656769 153.30224609]
[107.51738739 138.78352356]
[103.74819946 124.26480865]
[90.61768341 120.31871796]
[82.79715729 110.60310364]
[81.97439575 99.39614868]
[67.48119354 95.53000641]
[52.98798752 91.66386414]
[37.65983963 95.58285522]
[27.35680962 84.82660675]
[12.86360645 80.96046448]
[-1.62959671 77.09432220]
[-16.12280083 73.22817993]
[-30.61600304 69.36203766]
[-45.94414902 73.28102875]
[-56.24718094 62.52478027]
[-70.74038696 58.65863800]
[-85.23358917 54.79249573]
[-99.72679138 50.92635345]
[-110.60260773 61.68106461]
[-125.30427551 65.52265167]
[-139.85815430 61.51629639]
[-150.38220215 50.83450699]
[-154.12133789 36.41630936]
[-168.61453247 32.55016708]
[-183.10774231 28.68402481]
[-197.60095215 24.81788254]
[-212.09414673 20.95174026]
[-226.58735657 17.08559799]
[-241.08055115 13.21945667]
[-255.57376099 9.35331440]
[-270.06695557 5.48717260]
[-284.56018066 1.62103057]
[-299.05337524 -2.24511147]
[-314.38153076 1.67387784]
[-324.68453979 -9.08236980]
[-339.17776489 -12.94851112]
[-353.67095947 -16.81465340]
[-368.16415405 -20.68079567]
[-382.65734863 -24.54693794]
[-397.20095825 -28.21898842]
[-411.79232788 -31.69629097]
[-426.38369751 -35.17359161]
[-440.97509766 -38.65089417]
[-454.30364990 -30.15822983]
[-469.71527100 -33.65923691]
[-478.06655884 -47.07683182]
[-474.40280151 -62.45058823]
[-460.89764404 -70.65953827]
[-445.56350708 -66.83345032]
[-437.49780273 -53.24227524]
[-422.90640259 -49.76497269]
[-408.31503296 -46.28767014]
[-393.72366333 -42.81036758]
[-389.27120972 -44.49591446]
[-383.71334839 -43.41402817]
[-378.79122925 -39.04014206]
[-364.29800415 -35.17399979]
[-349.80480957 -31.30785751]
[-335.31161499 -27.44171524]
[-320.81838989 -23.57557297]
[-306.52691650 -27.77109528]
[-295.18722534 -16.73831558]
[-280.69403076 -12.87217331]
[-266.20083618 -9.00603104]
[-251.70761108 -5.13988876]
[-237.21441650 -1.27374661]
[-222.72120667 2.59239531]
[-208.22801208 6.45853758]
[-193.73480225 10.32467937]
[-179.24160767 14.19082165]
[-164.74839783 18.05696297]
[-150.25518799 21.92310524]
[-139.83158875 11.28289890]
[-125.38552856 7.26201820]
[-110.76987457 11.03679943]
[-99.93489075 21.69043159]
[-95.86064911 36.43315125]
[-81.36744690 40.29929352]
[-66.87424469 44.16543579]
[-52.38103867 48.03157806]
[-38.08954239 43.83605576]
[-26.74986076 54.86883545]
[-12.25665760 58.73497772]
[2.23654532 62.60112000]
[16.72974968 66.46726227]
[31.22295189 70.33340454]
[45.51445007 66.13787842]
[56.85412979 77.17066193]
[71.34733582 81.03680420]
[85.84053802 84.90294647]
[98.94630432 77.60645294]
[103.29457855 63.25053024]
[107.64285278 48.89460754]
[111.99112701 34.53868484]
[116.33940125 20.18276405]
[112.93478394 4.73222303]
[124.02930450 -5.20563269]
[128.37757874 -19.56155586]
[117.28971100 -37.44690704]
[122.96284485 -57.40477753]
[141.27272034 -66.52056885]
[144.84747314 -81.08837891]
[148.42224121 -95.65618896]
[143.32643127 -111.24352264]
[154.47747803 -123.26792908]
[170.40412903 -119.35973358]
[174.72241211 -103.53935242]
[162.99005127 -92.08143616]
[159.41529846 -77.51362610]
[155.84053040 -62.94581223]
[162.88830566 -56.85066223]
[167.26710510 -48.56037140]
[168.34138489 -39.18827057]
[165.92260742 -30.01036072]
[160.30070496 -22.29157066]
[152.21000671 -17.11145592]
[142.73350525 -15.21328259]
[138.38522339 -0.85735953]
[142.10086060 13.56634903]
[130.69532776 24.53103638]
[126.34704590 38.88695908]
[121.99877167 53.24288177]
[117.65050507 67.59880829]
[113.30223083 81.95472717]
[123.36399841 93.07950592]
[138.08306885 90.19004059]
[152.80213928 87.30056763]
[167.52120972 84.41110229]
[181.12187195 71.98590088]
[197.49076843 78.33202362]
[212.16989136 75.24604797]
[226.84902954 72.16007233]
[241.52815247 69.07409668]
[246.67701721 64.96953583]
[252.28475952 64.18625641]
[256.64074707 66.10736847]
[271.39712524 63.41492462]
[286.15350342 60.72248077]
[300.90988159 58.03003693]
[306.15228271 43.66116333]
[317.80606079 33.90993881]
[332.67718506 31.31837082]
[346.75460815 36.48381042]
[356.29217529 47.92499924]
[371.04855347 45.23255539]
[385.80493164 42.54010773]
[397.94747925 31.51784325]
[413.47961426 36.77946472]
[416.42321777 52.91226959]
[403.75012207 63.32020950]
[388.49737549 57.29648972]
[373.74099731 59.98893356]
[358.98461914 62.68137741]
[354.10223389 76.75362396]
[342.75616455 86.55783081]
[327.92807007 89.38517761]
[313.58148193 84.37796783]
[303.60232544 72.78641510]
[288.84594727 75.47885895]
[274.08956909 78.17130280]
[259.33319092 80.86375427]
[244.61412048 83.75321960]
[229.93499756 86.83919525]
[215.25587463 89.92517090]
[200.57675171 93.01115417]
[193.71385193 102.95978546]
[181.52221680 105.65828705]
[170.41067505 99.13017273]
[155.69160461 102.01963806]
[140.97253418 104.90911102]
[126.25347137 107.79857635]
[118.26692200 120.49562836]
[122.03610229 135.01434326]
[125.80528259 149.53306580]
[129.57446289 164.05178833]
[133.34364319 178.57051086]
[137.11282349 193.08923340]
[140.88200378 207.60795593]
[158.44744873 222.76164246]
[151.63461304 244.15423584]
[156.36512756 258.38879395]
[161.09562683 272.62332153]
[165.82614136 286.85787964]
[170.55664062 301.09240723]
[180.52772522 305.38558960]
[186.37733459 314.26934814]
[186.38096619 324.68667603]
[180.77827454 333.20776367]
[185.12654114 347.56369019]
[189.47482300 361.91958618]
[193.82308960 376.27551270]
[198.36288452 390.57202148]
[203.09339905 404.80657959]
[207.82389832 419.04113770]
[212.55441284 433.27566528]
[217.28491211 447.51022339]
[222.01542664 461.74475098]
[236.98696899 465.46716309]
[247.55273438 476.70852661]
[250.34120178 491.88180542]
[244.46258545 506.14523315]
[231.79272461 514.94738770]
[216.37454224 515.47961426]
[203.12791443 507.57199097]
[196.27980042 493.74783325]
[198.01539612 478.41842651]
[207.78088379 466.47528076]
[203.05036926 452.24072266]
[198.31987000 438.00616455]
[193.58935547 423.77163696]
[188.85885620 409.53707886]
[184.12834167 395.30255127]
[180.35021973 392.40579224]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 212]
[2 211]
[3 210]
[4 209]
[6 205]
[7 204]
[8 203]
[9 202]
[10 201]
[17 199]
[18 198]
[19 197]
[20 196]
[21 195]
[22 194]
[23 193]
[26 111]
[27 110]
[28 109]
[30 107]
[31 106]
[32 105]
[33 104]
[34 103]
[36 101]
[37 100]
[38 99]
[39 98]
[44 93]
[45 92]
[46 91]
[47 90]
[48 89]
[49 88]
[50 87]
[51 86]
[52 85]
[53 84]
[54 83]
[56 81]
[57 80]
[58 79]
[59 78]
[60 77]
[61 74]
[62 73]
[63 72]
[64 71]
[112 145]
[113 144]
[114 143]
[115 142]
[116 141]
[118 139]
[119 138]
[122 131]
[123 130]
[124 129]
[146 192]
[147 191]
[148 190]
[149 189]
[151 186]
[152 185]
[153 184]
[154 183]
[157 182]
[158 181]
[159 180]
[160 179]
[165 174]
[166 173]
[167 172]
[213 233]
[214 232]
[215 231]
[216 230]
[217 229]
[218 228]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
