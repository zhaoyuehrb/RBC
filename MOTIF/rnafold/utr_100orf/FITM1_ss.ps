%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:10:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCACACCUGUCACUGCCUAUCCUUGUCCAGGGGGGGCCCCAUCAGCCCCUCCUCAGCUGCCCAGCAAAGCAAGCAGUUAGUGGGGAGGGGAGGGAACAUGGAGCGGGGGCCGGUGGUGGGGGCAGGACUGGGGGCCGGGGCCCGAAUCCAGGCACUGCUGGGCUGCCUGCUCAAGGUGCUGCUCUGGGUGGCCUCUG\
) } def
/len { sequence length } bind def

/coor [
[93.33917999 210.27117920]
[92.15639496 195.31788635]
[90.97360992 180.36459351]
[89.79081726 165.41130066]
[88.60803223 150.45799255]
[84.94303131 144.03157043]
[87.52650452 135.25962830]
[86.57991791 120.28952789]
[86.40159607 114.91236115]
[87.49466705 110.03987885]
[89.68852234 105.92449188]
[92.76696777 102.77651978]
[79.58377075 95.62087250]
[66.40056610 88.46522522]
[53.21737289 81.30957794]
[40.03417206 74.15393066]
[26.85097504 66.99828339]
[13.66777706 59.84263992]
[-1.31407440 64.10665894]
[-14.58177757 56.66201782]
[-18.55454254 42.35283661]
[-31.73774147 35.19718933]
[-44.92094040 28.04154015]
[-58.10413742 20.88589287]
[-71.28733826 13.73024654]
[-84.47053528 6.57459927]
[-97.70980072 -0.47676492]
[-111.00431824 -7.42340708]
[-124.29883575 -14.37004948]
[-137.59335327 -21.31669235]
[-152.58914185 -21.67186356]
[-166.19763184 -15.36241341]
[-179.80610657 -9.05296230]
[-193.41459656 -2.74351144]
[-205.24110413 9.40433788]
[-220.18811035 1.40288210]
[-216.63710022 -15.17501450]
[-199.72404480 -16.35199547]
[-186.11557007 -22.66144562]
[-172.50708008 -28.97089767]
[-158.89859009 -35.28034592]
[-164.95803833 -47.06015396]
[-163.58697510 -58.96804810]
[-175.90060425 -67.53393555]
[-191.26132202 -64.94817352]
[-203.62707520 -73.81061554]
[-205.99754333 -88.47064972]
[-218.31117249 -97.03653717]
[-230.62480164 -105.60242462]
[-242.93843079 -114.16831207]
[-255.25207520 -122.73419952]
[-267.56570435 -131.30009460]
[-279.87933350 -139.86598206]
[-292.19296265 -148.43186951]
[-304.50659180 -156.99775696]
[-316.82022095 -165.56364441]
[-329.33325195 -173.83555603]
[-342.03860474 -181.80888367]
[-354.74395752 -189.78219604]
[-367.44931030 -197.75552368]
[-380.15469360 -205.72883606]
[-392.85708618 -201.23197937]
[-405.64270020 -204.82267761]
[-413.90093994 -214.97323608]
[-414.78851318 -227.83358765]
[-427.36642456 -236.00648499]
[-443.94238281 -239.56655884]
[-445.11010742 -256.48025513]
[-429.18066406 -262.28451538]
[-419.19354248 -248.58439636]
[-406.61563110 -240.41149902]
[-390.33364868 -244.60527039]
[-375.76705933 -235.55139160]
[-372.18136597 -218.43420410]
[-359.47601318 -210.46087646]
[-346.77062988 -202.48756409]
[-334.06527710 -194.51423645]
[-321.35992432 -186.54092407]
[-317.85110474 -186.97210693]
[-313.95913696 -185.71902466]
[-310.48068237 -182.62017822]
[-308.25433350 -177.87727356]
[-295.94070435 -169.31138611]
[-283.62707520 -160.74549866]
[-271.31344604 -152.17961121]
[-258.99981689 -143.61372375]
[-246.68618774 -135.04783630]
[-234.37254333 -126.48194122]
[-222.05891418 -117.91605377]
[-209.74528503 -109.35016632]
[-197.43164062 -100.78427887]
[-182.86236572 -103.66029358]
[-170.25256348 -95.14868164]
[-167.33471680 -79.84757233]
[-155.02108765 -71.28168488]
[-143.27127075 -75.32247162]
[-130.85287476 -71.54489899]
[-122.66994476 -60.76314545]
[-122.34391022 -46.67630768]
[-130.64671326 -34.61120987]
[-117.35219574 -27.66456604]
[-104.05767822 -20.71792412]
[-90.76316071 -13.77128124]
[-83.37168121 -13.45962620]
[-77.31488800 -6.60859871]
[-64.13169098 0.54704839]
[-50.94849014 7.70269537]
[-37.76529312 14.85834217]
[-24.58209419 22.01399040]
[-11.39889622 29.16963768]
[2.76434398 24.70441246]
[16.23591614 31.77345657]
[20.82342339 46.65943909]
[34.00662231 53.81508636]
[47.18981934 60.97073364]
[60.37302017 68.12638092]
[73.55621338 75.28202820]
[86.73941803 82.43767548]
[99.92261505 89.59332275]
[114.21744537 94.13840485]
[129.11242676 95.91027832]
[144.00740051 97.68215942]
[158.90238953 99.45404053]
[173.79736328 101.22592163]
[188.69235229 102.99779510]
[203.58732605 104.76967621]
[218.20484924 98.71669769]
[229.92904663 107.90323639]
[244.82402039 109.67511749]
[259.71899414 111.44699860]
[272.06109619 101.94382477]
[287.14151001 103.95294189]
[296.12527466 115.77781677]
[311.02023315 117.54969788]
[325.91522217 119.32157898]
[340.81021118 121.09345245]
[355.42773438 115.04047394]
[367.15191650 124.22701263]
[382.04690552 125.99889374]
[396.95541382 127.65314484]
[411.87649536 129.18966675]
[426.79760742 130.72619629]
[441.71868896 132.26271057]
[456.63977051 133.79924011]
[471.56088257 135.33575439]
[478.03134155 128.45321655]
[486.81506348 125.37084198]
[495.89486694 126.66219330]
[503.24673462 131.91139221]
[507.29095459 139.83479309]
[522.12255859 142.07600403]
[536.95416260 144.31721497]
[553.51892090 140.70533752]
[561.57525635 155.62284851]
[549.47088623 167.49389648]
[534.71295166 159.14883423]
[519.88134766 156.90762329]
[505.04974365 154.66642761]
[486.57614136 163.85762024]
[470.02435303 150.25685120]
[455.10327148 148.72033691]
[440.18215942 147.18380737]
[425.26107788 145.64729309]
[410.33996582 144.11076355]
[395.41888428 142.57424927]
[388.43634033 145.01869202]
[380.27502441 140.89387512]
[365.38003540 139.12199402]
[351.82791138 145.30171204]
[339.03833008 135.98843384]
[324.14334106 134.21655273]
[309.24835205 132.44467163]
[294.35339355 130.67279053]
[282.84625244 140.06010437]
[267.71539307 138.47535706]
[257.94714355 126.34197998]
[243.05215454 124.57009888]
[228.15716553 122.79821777]
[214.60502625 128.97793579]
[201.81544495 119.66465759]
[186.92047119 117.89277649]
[172.02548218 116.12089539]
[157.13050842 114.34902191]
[142.23553467 112.57714081]
[127.34054565 110.80525970]
[112.44556427 109.03337860]
[101.55001831 119.34294128]
[102.49660492 134.31304932]
[103.56132507 149.27520752]
[104.74411011 164.22850037]
[105.92690277 179.18179321]
[107.10968781 194.13510132]
[108.29248047 209.08839417]
[120.47538757 219.15577698]
[121.88809967 234.89678955]
[111.69247437 246.97257996]
[95.93739319 248.21879578]
[83.97006989 237.89607239]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 193]
[2 192]
[3 191]
[4 190]
[5 189]
[7 188]
[8 187]
[12 119]
[13 118]
[14 117]
[15 116]
[16 115]
[17 114]
[18 113]
[21 110]
[22 109]
[23 108]
[24 107]
[25 106]
[26 105]
[27 103]
[28 102]
[29 101]
[30 100]
[31 41]
[32 40]
[33 39]
[34 38]
[43 95]
[44 94]
[47 91]
[48 90]
[49 89]
[50 88]
[51 87]
[52 86]
[53 85]
[54 84]
[55 83]
[56 82]
[57 78]
[58 77]
[59 76]
[60 75]
[61 74]
[65 71]
[66 70]
[120 186]
[121 185]
[122 184]
[123 183]
[124 182]
[125 181]
[126 180]
[128 178]
[129 177]
[130 176]
[133 173]
[134 172]
[135 171]
[136 170]
[138 168]
[139 167]
[140 165]
[141 164]
[142 163]
[143 162]
[144 161]
[145 160]
[150 158]
[151 157]
[152 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
