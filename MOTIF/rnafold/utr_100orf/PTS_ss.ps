%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:14:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCAGCCGCGGUGGGAGGAGGCACCGGCCGCGCGGCGGGAGGAGGUGCCGGCCGAGCACCGCAGACAGCGCCGGGAAGAUGAGCACGGAAGGUGGUGGCCGUCGCUGCCAGGCACAAGUGUCCCGCCGCAUCUCCUUCAGCGCGAGCCACCGAUUGUACAGUAAAUUUCUAAGUGAUG\
) } def
/len { sequence length } bind def

/coor [
[144.78152466 341.27798462]
[141.05690002 326.74774170]
[145.66061401 312.47171021]
[157.17216492 302.85482788]
[172.03953552 300.86450195]
[185.67729187 307.11663818]
[179.10171509 293.63473511]
[172.40875244 280.21072388]
[165.59889221 266.84561157]
[158.78903198 253.48051453]
[151.97918701 240.11541748]
[139.30712891 232.28799438]
[139.93597412 216.47929382]
[133.12611389 203.11419678]
[126.31626129 189.74909973]
[120.46164703 185.20397949]
[119.50647736 176.09078979]
[112.93090820 162.60888672]
[106.35534668 149.12696838]
[99.77977753 135.64506531]
[85.13533783 132.39846802]
[73.47814941 141.83827209]
[61.82095718 151.27807617]
[56.45237350 166.77357483]
[40.29965973 169.60586548]
[29.97934341 156.86132812]
[36.10808182 141.65046692]
[52.38115311 139.62089539]
[64.03833771 130.18107605]
[75.69553375 120.74127960]
[70.51154327 104.32855988]
[74.69001007 88.84972382]
[85.69891357 78.87553406]
[81.31333923 64.53096771]
[76.92776489 50.18639374]
[72.54219055 35.84182358]
[68.15661621 21.49725151]
[63.77103806 7.15268087]
[59.38546371 -7.19189072]
[54.99988556 -21.53646278]
[50.61431122 -35.88103485]
[34.47804260 -39.42700958]
[22.39545822 -50.55686569]
[17.59420395 -66.16896057]
[21.29195976 -81.98226929]
[32.38930130 -93.71024323]
[27.75404549 -107.97609711]
[23.11878967 -122.24194336]
[18.48353577 -136.50779724]
[13.84827995 -150.77363586]
[9.08871078 -164.99848938]
[4.20518827 -179.18127441]
[-0.67833412 -193.36404419]
[-5.44176292 -198.01402283]
[-6.90103531 -203.54301453]
[-5.47538185 -208.12783813]
[-9.86095715 -222.47241211]
[-14.24653244 -236.81698608]
[-18.75712013 -251.12274170]
[-23.39237404 -265.38858032]
[-35.01547241 -276.12237549]
[-31.58980560 -290.61767578]
[-36.22505951 -304.88354492]
[-40.14896011 -308.41030884]
[-42.11223984 -312.66790771]
[-42.16696167 -316.77969360]
[-40.70833206 -320.01879883]
[-44.59061813 -334.50769043]
[-55.63602066 -345.83508301]
[-51.45642471 -360.13122559]
[-55.33871078 -374.62011719]
[-59.22099686 -389.10900879]
[-63.10328293 -403.59790039]
[-78.21145630 -404.37139893]
[-92.34042358 -409.77764893]
[-104.10598755 -419.28692627]
[-112.35546112 -431.96768188]
[-116.28065491 -446.57754517]
[-115.49701691 -461.68521118]
[-110.08132172 -475.81054688]
[-100.56414032 -487.56973267]
[-87.87786865 -495.81069946]
[-73.26538086 -499.72610474]
[-58.15825653 -498.93234253]
[-44.03654480 -493.50720215]
[-32.28373718 -483.98211670]
[-24.05126381 -471.29034424]
[-20.14565086 -456.67523193]
[-20.94953537 -441.56863403]
[-26.38415718 -427.45056152]
[-35.91709137 -415.70416260]
[-48.61439514 -407.48019409]
[-44.73210907 -392.99130249]
[-40.84982300 -378.50241089]
[-36.96753693 -364.01351929]
[-26.19981766 -353.72247314]
[-30.10172844 -338.38998413]
[-26.21944237 -323.90109253]
[-21.95921326 -309.51879883]
[-17.32395744 -295.25292969]
[-6.03240490 -285.53955078]
[-9.12652683 -270.02383423]
[-4.49127197 -255.75799561]
[0.58024621 -250.35298157]
[0.09803848 -241.20256042]
[4.48361397 -226.85798645]
[8.86918926 -212.51341248]
[13.50444412 -198.24757385]
[18.38796616 -184.06478882]
[23.27149010 -169.88201904]
[28.43656540 -164.56632996]
[28.11412811 -155.40888977]
[32.74938202 -141.14305115]
[37.38463974 -126.87719727]
[42.01989365 -112.61135101]
[46.65514755 -98.34550476]
[60.18635559 -96.38795471]
[71.60554504 -88.74971008]
[78.64816284 -76.87679291]
[79.88805389 -63.06158829]
[75.02590179 -50.00026321]
[64.95888519 -40.26660919]
[69.34445953 -25.92203712]
[73.73003387 -11.57746601]
[78.11560822 2.76710534]
[82.50118256 17.11167717]
[86.88675690 31.45624733]
[91.27233887 45.80081940]
[95.65791321 60.14538956]
[100.04348755 74.48995972]
[117.04632568 78.90634155]
[128.08067322 93.92230225]
[127.12208557 113.60088348]
[113.26168823 129.06948853]
[119.83725739 142.55140686]
[126.41281891 156.03330994]
[132.98838806 169.51522827]
[139.68135071 182.93923950]
[146.49121094 196.30433655]
[153.30107117 209.66943359]
[166.46020508 218.45281982]
[165.34428406 233.30555725]
[172.15412903 246.67065430]
[178.96398926 260.03576660]
[185.77384949 273.40084839]
[192.47712708 279.64813232]
[192.58363342 287.05917358]
[199.15919495 300.54107666]
[206.77227783 313.46551514]
[215.37591553 325.75277710]
[223.97956848 338.04006958]
[242.60896301 345.69311523]
[243.52464294 364.99133301]
[252.55186462 376.97085571]
[267.25982666 373.13098145]
[282.31695557 375.21682739]
[295.42721558 382.91033936]
[304.59130859 395.03829956]
[308.41183472 409.75131226]
[306.30618286 424.80569458]
[298.59542847 437.90579224]
[286.45541382 447.05395508]
[271.73742676 450.85510254]
[256.68582153 448.72964478]
[243.59587097 441.00167847]
[234.46369934 428.84963989]
[230.68188477 414.12664795]
[232.82714844 399.07785034]
[240.57234192 385.99807739]
[231.54510498 374.01855469]
[221.30545044 373.50592041]
[212.87034607 367.29949951]
[209.18225098 357.26336670]
[211.69229126 346.64370728]
[203.08863831 334.35644531]
[194.48500061 322.06915283]
[193.34245300 337.02557373]
[184.39505005 349.06484985]
[170.40356445 354.47210693]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 148]
[7 147]
[8 145]
[9 144]
[10 143]
[11 142]
[13 140]
[14 139]
[15 138]
[17 137]
[18 136]
[19 135]
[20 134]
[21 30]
[22 29]
[23 28]
[33 130]
[34 129]
[35 128]
[36 127]
[37 126]
[38 125]
[39 124]
[40 123]
[41 122]
[46 116]
[47 115]
[48 114]
[49 113]
[50 112]
[51 110]
[52 109]
[53 108]
[56 107]
[57 106]
[58 105]
[59 103]
[60 102]
[62 100]
[63 99]
[67 98]
[68 97]
[70 95]
[71 94]
[72 93]
[73 92]
[149 176]
[150 175]
[151 174]
[153 170]
[154 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
