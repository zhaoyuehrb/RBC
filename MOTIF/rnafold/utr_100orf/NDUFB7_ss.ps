%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:08:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGACUGAGGGGUCAGUGGUUCCGGGUAGGAGCUAGGUGACCCUCGGCUGCUGCAGGGAUCUGCAGCGACUGCAGCCAUGGGGGCCCACCUGGUCCGGCGCUACCUGGGCGAUGCCUCGGUGGAGCCCGACCCCCUGCAGAUGCCAACCUUCCCGCCAGACUACGGCUUCCCCGAAC\
) } def
/len { sequence length } bind def

/coor [
[18.08135605 401.23822021]
[14.58545113 386.65127563]
[18.03346443 372.05294800]
[27.68695641 360.57131958]
[34.01379776 346.97091675]
[40.34064102 333.37051392]
[46.66748428 319.77011108]
[52.99432373 306.16970825]
[45.59950256 304.91806030]
[33.52679443 313.82028198]
[21.45408440 322.72253418]
[9.38137627 331.62475586]
[-2.69133258 340.52697754]
[-14.76404095 349.42922974]
[-26.83675003 358.33145142]
[-33.79669189 375.36456299]
[-51.28392792 376.67343140]
[-63.19764709 385.78735352]
[-75.11136627 394.90124512]
[-87.02507782 404.01516724]
[-98.93879700 413.12905884]
[-110.85251617 422.24298096]
[-122.76623535 431.35687256]
[-126.30043793 447.00582886]
[-140.80102539 453.86965942]
[-155.14440918 446.68304443]
[-158.32754517 430.95895386]
[-147.90863037 418.75955200]
[-131.88014221 419.44317627]
[-119.96642303 410.32925415]
[-108.05271149 401.21536255]
[-96.13899231 392.10144043]
[-84.22527313 382.98751831]
[-72.31155396 373.87362671]
[-60.39783859 364.75970459]
[-58.48278427 352.79656982]
[-48.60554886 345.10848999]
[-35.73897934 346.25872803]
[-23.66627121 337.35650635]
[-11.59356308 328.45428467]
[0.47914574 319.55206299]
[12.55185413 310.64981079]
[24.62456322 301.74758911]
[36.69727325 292.84536743]
[51.58344650 277.00250244]
[68.80541229 275.92773438]
[72.21692657 261.32083130]
[75.62844086 246.71392822]
[67.57407379 234.23744202]
[70.82575226 219.37536621]
[83.96685028 211.01179504]
[87.37836456 196.40489197]
[90.78987885 181.79798889]
[94.20139313 167.19108582]
[97.61291504 152.58418274]
[101.02442932 137.97729492]
[104.43594360 123.37038422]
[107.84745789 108.76348877]
[100.40863037 123.95317841]
[76.81713867 127.73735046]
[52.28507614 107.76654053]
[42.15664673 96.70241547]
[32.02821732 85.63829041]
[21.89978790 74.57416534]
[11.77135754 63.51003647]
[1.64292741 52.44590759]
[-13.51194000 44.84549332]
[-10.40383625 28.17887878]
[6.47184944 26.55173874]
[12.70705414 42.31747818]
[22.83548355 53.38160706]
[32.96391296 64.44573212]
[43.09234619 75.50985718]
[53.22077560 86.57398987]
[63.34920502 97.63811493]
[70.15888977 94.49516296]
[63.87321091 80.87567902]
[77.49279785 74.59022522]
[83.77826691 88.20925140]
[90.58795166 85.06629944]
[88.73947906 70.18063354]
[86.89100647 55.29496384]
[74.27124023 45.78091049]
[72.15794373 30.11855125]
[81.80488586 17.60008430]
[97.48871613 15.65249538]
[109.90448761 25.43125343]
[111.68614960 41.13479614]
[101.77667236 53.44648743]
[103.62514496 68.33215332]
[105.47362518 83.21782684]
[119.59399414 88.27896118]
[130.47764587 77.95684814]
[141.36129761 67.63472748]
[152.24494934 57.31261063]
[156.93368530 42.20213699]
[171.49264526 39.05798340]
[182.37629700 28.73586464]
[193.25994873 18.41374779]
[197.94868469 3.30327535]
[212.50765991 0.15912119]
[223.39131165 -10.16299629]
[234.27496338 -20.48511314]
[245.15861511 -30.80723190]
[256.04226685 -41.12934875]
[260.73098755 -56.23982239]
[275.28997803 -59.38397598]
[286.17361450 -69.70609283]
[297.05728149 -80.02821350]
[307.94091797 -90.35032654]
[315.27270508 -105.63697052]
[331.99157715 -102.82349396]
[333.91629028 -85.97914886]
[318.26303101 -79.46667480]
[307.37939453 -69.14456177]
[296.49572754 -58.82244110]
[285.61209106 -48.50032425]
[281.70181274 -34.12815857]
[266.36437988 -30.24569702]
[255.48072815 -19.92357826]
[244.59707642 -9.60146141]
[233.71342468 0.72065598]
[222.82977295 11.04277325]
[218.91950989 25.41493988]
[203.58207703 29.29739952]
[192.69842529 39.61951828]
[181.81477356 49.94163513]
[177.90451050 64.31380463]
[162.56707764 68.19625854]
[151.68341064 78.51837921]
[140.79975891 88.84049988]
[129.91610718 99.16261292]
[122.45436096 112.17500305]
[119.04283905 126.78190613]
[115.63132477 141.38880920]
[112.21981049 155.99571228]
[108.80829620 170.60260010]
[105.39678192 185.20950317]
[101.98526764 199.81640625]
[98.57375336 214.42330933]
[106.65074158 227.74246216]
[102.98290253 242.50733948]
[90.23534393 250.12544250]
[86.82382965 264.73233032]
[83.41230774 279.33923340]
[90.64299011 266.19705200]
[103.64067841 258.70971680]
[118.63685608 259.04809570]
[131.28359985 267.11407471]
[137.91413879 280.56903076]
[136.60603333 295.51187134]
[127.73856354 307.61013794]
[113.88272858 313.35607910]
[99.05584717 311.08374023]
[87.55815887 301.45397949]
[96.02877808 313.83334351]
[104.49939728 326.21270752]
[120.07853699 327.56338501]
[131.10806274 338.64868164]
[132.38017273 354.23443604]
[123.29421997 366.96154785]
[108.14029694 370.82064819]
[94.07363892 363.98962402]
[87.73608398 349.69381714]
[92.12003326 334.68331909]
[83.64941406 322.30395508]
[75.17879486 309.92462158]
[67.78397369 308.67297363]
[69.28266144 323.59793091]
[70.78134918 338.52285767]
[72.28003693 353.44781494]
[73.77872467 368.37274170]
[79.11595154 382.39108276]
[77.56803894 397.31100464]
[69.46669006 409.93511963]
[56.54806137 417.55804443]
[41.58064270 418.54617310]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 44]
[10 43]
[11 42]
[12 41]
[13 40]
[14 39]
[15 38]
[17 35]
[18 34]
[19 33]
[20 32]
[21 31]
[22 30]
[23 29]
[46 145]
[47 144]
[48 143]
[51 140]
[52 139]
[53 138]
[54 137]
[55 136]
[56 135]
[57 134]
[58 133]
[61 75]
[62 74]
[63 73]
[64 72]
[65 71]
[66 70]
[80 91]
[81 90]
[82 89]
[92 132]
[93 131]
[94 130]
[95 129]
[97 127]
[98 126]
[99 125]
[101 123]
[102 122]
[103 121]
[104 120]
[105 119]
[107 117]
[108 116]
[109 115]
[110 114]
[155 167]
[156 166]
[157 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
