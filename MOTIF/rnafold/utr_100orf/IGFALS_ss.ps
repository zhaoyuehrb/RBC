%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:42:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAAUCCAGAGGGCAGGGGUGGCCGGCACAGCAGACGUACCCUCCCUCGCUGCCUGCCUGCAGCCUGCCCUGCAUGCAGGAUGGCCCUGAGGAAAGCGGGUGACCUCGAGCCUCAGUUCACACCUGAGCGCCGCUUCCGGCUGUGCUGGUAUCAGGCUCACUCGGGCAGAGCCCUCCUCG\
) } def
/len { sequence length } bind def

/coor [
[86.75984955 263.26443481]
[84.43891144 278.08377075]
[90.84385681 293.18041992]
[80.75752258 306.11093140]
[64.55587769 303.57351685]
[58.90577316 288.17843628]
[69.61956024 275.76284790]
[71.94049835 260.94348145]
[62.15003586 241.65083313]
[76.33512115 224.32014465]
[77.62812042 209.37597656]
[78.92112732 194.43180847]
[80.21413422 179.48765564]
[81.50714111 164.54348755]
[82.80014801 149.59931946]
[69.06364441 112.73889160]
[87.05541992 93.65483093]
[74.56542206 85.34820557]
[62.07542419 77.04158020]
[49.58542633 68.73495483]
[37.09543228 60.42833328]
[21.31976891 59.22873688]
[15.00691891 45.73810196]
[2.51692271 37.43147659]
[-9.97307396 29.12485504]
[-25.74873734 27.92525673]
[-32.06158447 14.43462276]
[-44.55158234 6.12799931]
[-56.45859909 12.87092400]
[-70.00019836 13.99463081]
[-82.67619324 9.37201881]
[-92.17984772 -0.07044800]
[-106.29480743 5.00574827]
[-116.46516418 17.87026978]
[-132.64994812 15.22734070]
[-138.19963074 -0.20421818]
[-127.40518188 -12.54974365]
[-111.37100983 -9.10921669]
[-97.25604248 -14.18541241]
[-97.24837494 -20.58136940]
[-95.93298340 -26.84060860]
[-93.36545563 -32.69860458]
[-104.24309540 -43.02705383]
[-115.12074280 -53.35550308]
[-125.99839020 -63.68394852]
[-139.34266663 -60.17322540]
[-152.57244873 -63.69319916]
[-162.25323486 -73.21923065]
[-165.92684937 -86.18212891]
[-162.73498535 -99.16044617]
[-173.43273926 -109.67510986]
[-184.13047791 -120.18977356]
[-194.82823181 -130.70443726]
[-205.61633301 -141.12638855]
[-216.49397278 -151.45483398]
[-227.37162781 -161.78327942]
[-238.24926758 -172.11172485]
[-249.12690735 -182.44017029]
[-264.46209717 -186.33155823]
[-268.36398315 -200.70599365]
[-279.24163818 -211.03445435]
[-290.11926270 -221.36289978]
[-300.99691772 -231.69134521]
[-311.87457275 -242.01979065]
[-327.66506958 -241.36013794]
[-339.24038696 -252.12060547]
[-339.73306274 -267.91720581]
[-328.85079956 -279.37811279]
[-313.04986572 -279.70373535]
[-301.70468140 -268.70092773]
[-301.54611206 -252.89743042]
[-290.66845703 -242.56898499]
[-279.79083252 -232.24053955]
[-268.91317749 -221.91209412]
[-258.03552246 -211.58364868]
[-243.47839355 -208.43101501]
[-238.79846191 -193.31782532]
[-227.92082214 -182.98936462]
[-217.04316711 -172.66091919]
[-206.16552734 -162.33247375]
[-195.28788757 -152.00402832]
[-188.25407410 -149.67234802]
[-184.31356812 -141.40219116]
[-173.61581421 -130.88752747]
[-162.91807556 -120.37285614]
[-152.22032166 -109.85819244]
[-136.13719177 -113.08636475]
[-121.14490509 -106.02987671]
[-113.22593689 -91.28597260]
[-115.66993713 -74.56159210]
[-104.79229736 -64.23314667]
[-93.91464996 -53.90469742]
[-83.03700256 -43.57624817]
[-64.60041809 -48.63518143]
[-46.54329681 -41.95124435]
[-35.69125366 -25.88142395]
[-36.24495697 -6.36199713]
[-23.75496292 1.94462609]
[-8.87266827 2.55007958]
[-1.66645038 16.63485909]
[10.82354641 24.94148254]
[23.31354141 33.24810410]
[38.19583511 33.85355759]
[45.40205383 47.93833923]
[57.89205170 56.24496078]
[70.38204956 64.55158234]
[82.87203979 72.85820770]
[95.36203766 81.16483307]
[110.30620575 79.87182617]
[121.18385315 69.54338074]
[132.06149292 59.21492767]
[142.93914795 48.88647842]
[147.07084656 33.01634979]
[162.95036316 28.92089462]
[174.24221802 40.81316757]
[169.33030701 56.45941925]
[153.26759338 59.76412582]
[142.38993835 70.09257507]
[131.51229858 80.42102051]
[120.63465881 90.74947357]
[122.30356598 98.06143188]
[136.63716125 102.48272705]
[125.64138031 112.68534851]
[127.31027985 119.99730682]
[141.59204102 124.58328247]
[155.87380981 129.16926575]
[170.15557861 133.75523376]
[184.43734741 138.34121704]
[198.71910095 142.92720032]
[218.18707275 137.76219177]
[230.58036804 152.58489990]
[245.01191711 156.67520142]
[259.44345093 160.76548767]
[271.17108154 149.12724304]
[287.07464600 145.00755310]
[302.79718018 149.43737793]
[314.08041382 161.11874390]
[317.91796875 176.80314636]
[332.41796875 180.64373779]
[346.91796875 184.48431396]
[361.41796875 188.32490540]
[375.91796875 192.16549683]
[392.77722168 190.37612915]
[399.16375732 206.08117676]
[385.84045410 216.56571960]
[372.07739258 206.66548157]
[357.57739258 202.82490540]
[343.07739258 198.98431396]
[328.57739258 195.14372253]
[314.07739258 191.30314636]
[305.09655762 201.61038208]
[292.48815918 207.06369019]
[278.69454956 206.54450989]
[266.41452026 200.09729004]
[258.07534790 188.93190002]
[255.35316467 175.19703674]
[240.92161560 171.10673523]
[226.49006653 167.01644897]
[218.02383423 172.79429626]
[207.55513000 172.94760132]
[198.55279541 167.18324280]
[194.13313293 157.20895386]
[179.85136414 152.62298584]
[165.56959534 148.03700256]
[151.28784180 143.45103455]
[137.00607300 138.86505127]
[122.72430420 134.27906799]
[116.47930908 138.43238831]
[124.78572083 150.92251587]
[112.29544830 159.22872925]
[103.98931122 146.73901367]
[97.74431610 150.89231873]
[96.45130920 165.83648682]
[95.15830231 180.78065491]
[93.86529541 195.72482300]
[92.57228851 210.66899109]
[91.27928162 225.61315918]
[97.78791046 230.93182373]
[101.60729218 238.31349182]
[102.17614746 246.51087952]
[99.47550964 254.17176819]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 8]
[2 7]
[10 177]
[11 176]
[12 175]
[13 174]
[14 173]
[15 172]
[17 108]
[18 107]
[19 106]
[20 105]
[21 104]
[23 102]
[24 101]
[25 100]
[27 98]
[28 97]
[32 39]
[33 38]
[42 93]
[43 92]
[44 91]
[45 90]
[50 86]
[51 85]
[52 84]
[53 83]
[54 81]
[55 80]
[56 79]
[57 78]
[58 77]
[60 75]
[61 74]
[62 73]
[63 72]
[64 71]
[109 120]
[110 119]
[111 118]
[112 117]
[124 167]
[125 166]
[126 165]
[127 164]
[128 163]
[129 162]
[131 158]
[132 157]
[133 156]
[138 150]
[139 149]
[140 148]
[141 147]
[142 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
