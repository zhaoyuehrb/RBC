%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:21:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGUCCCGCGCCUGCGCCCUGGGCAGUUGCCGGUGAGCUUGGGAGAACCGUGGGCGCUGAGGCGCUGUAGGUGGCUCCCUCCCACCCCAACGAUUUCAGAGAGAAACAAGUCGGAAUCUGAGAAGUGAGGCUCCAGAUAAACUGUAAACUGCUGGAAGGGGGCGAUGGCUGUGGCCCUGGGUUGUGCAAUCCAGGCAUCCUUGAAUCAAGGCUCUGUGUUUCAAGAAUAUGAUACUGACUGUGAAGUUUUCCGU\
CAGCGCUUCA\
) } def
/len { sequence length } bind def

/coor [
[95.49813080 209.06643677]
[91.64437103 194.56993103]
[87.79061890 180.07342529]
[83.93685913 165.57691956]
[80.08309937 151.08042908]
[76.22933960 136.58392334]
[67.44125366 124.42787933]
[54.88375473 116.22365570]
[42.32625580 108.01943207]
[29.76876068 99.81520844]
[17.16303444 91.68528748]
[4.50951958 83.62994385]
[-8.14399529 75.57460022]
[-20.89176369 67.66925812]
[-33.73200607 59.91502380]
[-46.57225037 52.16078949]
[-62.38520813 51.65005493]
[-69.28017426 38.44745255]
[-82.12041473 30.69321632]
[-94.96065521 22.93898010]
[-107.80089569 15.18474483]
[-127.97541046 15.66471291]
[-136.50186157 -1.71147037]
[-149.52166748 -9.16027164]
[-162.54147339 -16.60907173]
[-175.56127930 -24.05787277]
[-188.58108521 -31.50667381]
[-201.60089111 -38.95547485]
[-214.62069702 -46.40427780]
[-229.69419861 -42.47650909]
[-242.79202271 -50.21612167]
[-246.44366455 -64.61060333]
[-259.46347046 -72.05941010]
[-272.48327637 -79.50820923]
[-285.50308228 -86.95700836]
[-298.81958008 -93.86140442]
[-312.41003418 -100.20959473]
[-326.00048828 -106.55779266]
[-339.59094238 -112.90598297]
[-353.18139648 -119.25417328]
[-366.77185059 -125.60236359]
[-381.59539795 -127.89637756]
[-396.46899414 -125.95311737]
[-411.34259033 -124.00986481]
[-426.21618652 -122.06661224]
[-441.08978271 -120.12335205]
[-455.46710205 -108.59319305]
[-471.39556885 -115.99263000]
[-486.24517822 -113.87384796]
[-501.09478760 -111.75507355]
[-508.41424561 -98.20030212]
[-522.15112305 -91.63132477]
[-536.94702148 -94.37822723]
[-547.16595459 -105.18151855]
[-562.01556396 -103.06273651]
[-576.86517334 -100.94395447]
[-591.71478271 -98.82517242]
[-606.56439209 -96.70639801]
[-619.12481689 -86.16279602]
[-634.44146729 -92.02216339]
[-636.75787354 -108.25688934]
[-623.69110107 -118.16606903]
[-608.68316650 -111.55599976]
[-593.83355713 -113.67478180]
[-578.98394775 -115.79356384]
[-564.13433838 -117.91233826]
[-549.28472900 -120.03112030]
[-542.49493408 -133.26126099]
[-529.05767822 -140.03654480]
[-514.03179932 -137.57150269]
[-503.21356201 -126.60467529]
[-488.36395264 -128.72344971]
[-473.51434326 -130.84223938]
[-466.02410889 -140.31391907]
[-453.69433594 -142.21722412]
[-443.03302002 -134.99694824]
[-428.15945435 -136.94020081]
[-413.28585815 -138.88345337]
[-398.41226196 -140.82672119]
[-383.53866577 -142.76997375]
[-380.36456299 -149.56520081]
[-394.34902954 -154.99061584]
[-408.33346558 -160.41601562]
[-423.33178711 -160.64035034]
[-431.29238892 -173.35369873]
[-424.94436646 -186.94424438]
[-410.08578491 -188.99899292]
[-400.28765869 -177.64077759]
[-387.15200806 -170.39822388]
[-374.01635742 -163.15565491]
[-370.84228516 -169.95088196]
[-378.89761353 -182.60438538]
[-391.27697754 -186.14656067]
[-397.73037720 -196.82360840]
[-395.27377319 -208.64654541]
[-403.17910767 -221.39431763]
[-411.08447266 -234.14208984]
[-418.98980713 -246.88984680]
[-426.89514160 -259.63763428]
[-434.80047607 -272.38537598]
[-442.70581055 -285.13314819]
[-461.32351685 -288.77767944]
[-471.16589355 -304.61984253]
[-466.35330200 -322.30709839]
[-474.55752563 -334.86459351]
[-490.07492065 -337.86215210]
[-498.85845947 -351.00085449]
[-495.69699097 -366.48571777]
[-482.46615601 -375.12982178]
[-467.01559448 -371.80484009]
[-458.51184082 -358.48336792]
[-462.00000000 -343.06881714]
[-453.79577637 -330.51132202]
[-442.42684937 -330.65069580]
[-432.29013062 -325.24200439]
[-425.94506836 -315.52032471]
[-425.05618286 -303.82534790]
[-429.95806885 -293.03848267]
[-422.05270386 -280.29074097]
[-414.14736938 -267.54296875]
[-406.24203491 -254.79519653]
[-398.33670044 -242.04742432]
[-390.43136597 -229.29965210]
[-382.52600098 -216.55189514]
[-366.62887573 -209.08537292]
[-366.24411011 -190.65972900]
[-358.18875122 -178.00622559]
[-351.84484863 -155.13215637]
[-360.42367554 -139.19282532]
[-346.83322144 -132.84463501]
[-333.24276733 -126.49643707]
[-319.65231323 -120.14824677]
[-306.06185913 -113.80004883]
[-292.47140503 -107.45185852]
[-297.91027832 -121.43107605]
[-293.18554688 -135.66754150]
[-280.46777344 -143.62101746]
[-265.59945679 -141.63766479]
[-255.41117859 -130.62863159]
[-254.58338928 -115.65149689]
[-263.49639893 -103.58674622]
[-278.05429077 -99.97681427]
[-265.03448486 -92.52801514]
[-252.01466370 -85.07921600]
[-238.99485779 -77.63040924]
[-224.73526001 -81.77764893]
[-211.42521667 -74.40897369]
[-207.17190552 -59.42408371]
[-194.15209961 -51.97528076]
[-181.13229370 -44.52648163]
[-168.11248779 -37.07767868]
[-155.09268188 -29.62887955]
[-142.07287598 -22.18007851]
[-129.05307007 -14.73127651]
[-119.51529694 -18.28175926]
[-109.38040161 -15.96501637]
[-102.02874756 -8.30726147]
[-100.04666138 2.34450245]
[-87.20642090 10.09873772]
[-74.36618042 17.85297394]
[-61.52593613 25.60720825]
[-46.63139343 25.56330490]
[-38.81801224 39.32054520]
[-25.97777176 47.07477951]
[-13.13752842 54.82901382]
[-8.39845467 54.58391571]
[-3.44929957 57.29041290]
[-0.08865225 62.92108536]
[12.56486320 70.97642517]
[25.21837807 79.03176880]
[32.52377319 79.96958923]
[37.97298431 87.25771332]
[50.53047943 95.46193695]
[63.08797836 103.66616058]
[75.64547729 111.87037659]
[71.23270416 75.79601288]
[113.36794281 53.79823303]
[127.66627502 49.26418686]
[141.96461487 44.73013687]
[156.26295471 40.19609070]
[170.56127930 35.66204453]
[184.85961914 31.12799644]
[199.15795898 26.59394836]
[213.45629883 22.05990219]
[224.11000061 9.59272099]
[240.18217468 12.85113716]
[245.13914490 28.48317146]
[233.88159180 40.40792847]
[217.99034119 36.35823822]
[203.69200134 40.89228439]
[189.39367676 45.42633057]
[175.09533691 49.96038055]
[160.79699707 54.49442673]
[146.49865723 59.02847290]
[132.20033264 63.56252289]
[117.90199280 68.09656525]
[117.81341553 75.59604645]
[132.81236267 75.77342987]
[132.63475037 90.77237701]
[117.63626099 90.59500122]
[117.54768372 98.09447479]
[131.73493958 102.96496582]
[145.92219543 107.83546448]
[160.10945129 112.70595551]
[174.29672241 117.57644653]
[188.48397827 122.44693756]
[204.04872131 119.60977173]
[213.57409668 131.06037903]
[227.76135254 135.93087769]
[240.38618469 126.90907288]
[255.90248108 127.06463623]
[268.34390259 136.33775330]
[272.92645264 151.16273499]
[267.88806152 165.83905029]
[255.16610718 174.72337341]
[239.65240479 174.39949036]
[227.31231689 164.99194336]
[222.89085388 150.11813354]
[208.70359802 145.24765015]
[194.15362549 148.43318176]
[183.61347961 136.63420105]
[169.42622375 131.76370239]
[155.23896790 126.89321136]
[141.05171204 122.02272034]
[126.86444855 117.15222931]
[112.67719269 112.28173828]
[107.18935394 117.39384460]
[117.41356659 128.36952209]
[127.63778687 139.34518433]
[137.86199951 150.32086182]
[150.97738647 157.60005188]
[148.10716248 172.32289124]
[133.21794128 174.14256287]
[126.88632965 160.54507446]
[116.66210938 149.56941223]
[106.43789673 138.59373474]
[96.21367645 127.61805725]
[90.72584534 132.73016357]
[94.57959747 147.22666931]
[98.43335724 161.72317505]
[102.28711700 176.21966553]
[106.14087677 190.71617126]
[109.99463654 205.21267700]
[114.01932526 219.66264343]
[118.21440125 234.06408691]
[122.40947723 248.46551514]
[126.60454559 262.86694336]
[130.79962158 277.26840210]
[145.81297302 280.24462891]
[157.71620178 289.86605835]
[163.77406311 303.92169189]
[162.59448242 319.18167114]
[154.44853210 332.13937378]
[141.20808411 339.81719971]
[125.91569519 340.45086670]
[112.08545685 333.89471436]
[102.89543915 321.65536499]
[100.45745087 306.54525757]
[105.33172607 292.03665161]
[116.39818573 281.46347046]
[112.20310974 267.06204224]
[108.00804138 252.66059875]
[103.81296539 238.25915527]
[99.61788940 223.85772705]
[95.96524048 220.82835388]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 243]
[2 242]
[3 241]
[4 240]
[5 239]
[6 238]
[7 175]
[8 174]
[9 173]
[10 172]
[11 170]
[12 169]
[13 168]
[14 165]
[15 164]
[16 163]
[18 161]
[19 160]
[20 159]
[21 158]
[23 154]
[24 153]
[25 152]
[26 151]
[27 150]
[28 149]
[29 148]
[32 145]
[33 144]
[34 143]
[35 142]
[36 134]
[37 133]
[38 132]
[39 131]
[40 130]
[41 129]
[42 80]
[43 79]
[44 78]
[45 77]
[46 76]
[48 73]
[49 72]
[50 71]
[54 67]
[55 66]
[56 65]
[57 64]
[58 63]
[91 127]
[92 126]
[95 124]
[96 123]
[97 122]
[98 121]
[99 120]
[100 119]
[101 118]
[104 113]
[105 112]
[177 196]
[178 195]
[179 194]
[180 193]
[181 192]
[182 191]
[183 190]
[184 189]
[201 226]
[202 225]
[203 224]
[204 223]
[205 222]
[206 221]
[208 219]
[209 218]
[244 264]
[245 263]
[246 262]
[247 261]
[248 260]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
