%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:01:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCCCCGCCCCUGAGCCGGCCGCCCAGCCCCCAGUGGGGUUCCCGGCGCGGGGAAUGUCCCGGGUGGAGCUGGCUGAGUCGCGCGCUCUGCUCCACCCGACGGGGCUGUGUGUGCUGGGCCUGGCUCGCGGCGAACCGAGAUGGCAGAGCAGUCGGACGAGGCCGUGAAGUACUACACCCUAGAGGAGAUUCAGAAGCACAACCACAGCAAGAGCACCUGGCUGAUCCUGCACCACAAGG\
) } def
/len { sequence length } bind def

/coor [
[188.32907104 121.37764740]
[185.38162231 106.67008209]
[193.59652710 94.11997223]
[178.74920654 96.25469971]
[163.90188599 98.38941956]
[149.05456543 100.52414703]
[134.20722961 102.65886688]
[119.35991669 104.79358673]
[110.39115143 124.68477631]
[82.96881104 128.98799133]
[71.89139557 139.10188293]
[60.81398392 149.21577454]
[49.73656845 159.32968140]
[38.65915680 169.44357300]
[33.68475723 184.46241760]
[19.06879044 187.32995605]
[7.99137688 197.44386292]
[-3.08603668 207.55775452]
[-14.16345024 217.67164612]
[-25.24086380 227.78555298]
[-26.11685371 243.33773804]
[-37.49500275 253.43685913]
[-52.31623459 252.50588989]
[-63.39364624 262.61978149]
[-74.47106171 272.73367310]
[-85.54847717 282.84759521]
[-90.52287292 297.86642456]
[-105.13883972 300.73397827]
[-116.21625519 310.84786987]
[-118.37839508 326.74456787]
[-132.22827148 334.84149170]
[-147.14146423 328.92739868]
[-151.67782593 313.53906250]
[-142.35745239 300.48107910]
[-126.33014679 299.77044678]
[-115.25273895 289.65655518]
[-111.07067108 275.36111450]
[-95.66236877 271.77017212]
[-84.58496094 261.65628052]
[-73.50754547 251.54237366]
[-62.43013000 241.42848206]
[-62.01226425 226.58392334]
[-50.92226791 216.16918945]
[-35.35475922 216.70812988]
[-24.27734756 206.59423828]
[-13.19993305 196.48034668]
[-2.12251973 186.36643982]
[8.95489407 176.25254822]
[13.13696098 161.95710754]
[28.54525948 158.36616516]
[39.62267303 148.25225830]
[50.70008469 138.13836670]
[61.77750015 128.02447510]
[72.85491180 117.91056824]
[72.07740784 110.45098114]
[57.50719833 114.01596832]
[43.18075180 118.46038055]
[33.59658813 106.92158508]
[40.59445190 93.65395355]
[55.53018951 95.04808807]
[70.52239227 95.53179932]
[69.74488068 88.07221222]
[56.81989670 80.46006775]
[43.89490891 72.84792328]
[30.96992302 65.23577881]
[18.04493713 57.62363815]
[5.11994982 50.01149368]
[-7.80503654 42.39935303]
[-20.73002243 34.78720856]
[-33.65501022 27.17506599]
[-46.57999420 19.56292152]
[-65.00194550 19.82212067]
[-73.02516174 4.20465422]
[-86.04787445 -3.23906302]
[-99.07058716 -10.68278027]
[-112.14134216 -18.04181290]
[-125.25959015 -25.31584930]
[-141.01586914 -22.29602242]
[-153.10652161 -32.84096146]
[-152.25663757 -48.86148453]
[-139.11816406 -58.06802368]
[-123.76983643 -53.39810562]
[-117.98555756 -38.43409348]
[-104.86730957 -31.16005898]
[-97.50889587 -30.66614342]
[-91.62686920 -23.70549393]
[-78.60415649 -16.26177597]
[-65.58144379 -8.81805992]
[-53.84574509 -11.69625568]
[-42.94097519 -5.61872292]
[-38.96785355 6.63793564]
[-26.04286575 14.25007915]
[-13.11787987 21.86222267]
[-0.19289325 29.47436523]
[12.73209286 37.08650970]
[25.65707970 44.69865036]
[38.58206558 52.31079483]
[51.50705338 59.92293930]
[64.43203735 67.53507996]
[77.35702515 75.14722443]
[104.04961395 73.52520752]
[117.22518921 89.94626617]
[132.07250977 87.81154633]
[146.91983032 85.67681885]
[161.76715088 83.54209900]
[176.61448669 81.40737915]
[191.46180725 79.27265167]
[206.21475220 76.56146240]
[220.85095215 73.27791595]
[235.48715210 69.99436188]
[250.12333679 66.71081543]
[257.79269409 61.78842163]
[264.97082520 63.48094177]
[279.64840698 60.38766861]
[294.32598877 57.29439163]
[309.00360107 54.20111847]
[308.14242554 37.30064392]
[322.65151978 20.61893463]
[332.76541138 9.54152012]
[342.87930298 -1.53589356]
[337.17510986 -18.17668915]
[340.67950439 -35.32434845]
[352.33578491 -48.26029968]
[368.85696411 -53.47180939]
[385.65213013 -49.60558701]
[395.47503662 -60.94182968]
[405.29797363 -72.27807617]
[415.04708862 -83.67783356]
[424.72201538 -95.14064026]
[434.39691162 -106.60344696]
[444.07183838 -118.06624603]
[453.74676514 -129.52905273]
[463.42169189 -140.99185181]
[458.56796265 -158.47959900]
[465.14086914 -175.22724915]
[480.32525635 -184.58013916]
[497.92562866 -182.94445801]
[507.29971313 -194.65455627]
[516.67382812 -206.36466980]
[526.04791260 -218.07478333]
[525.40368652 -230.94320679]
[533.43518066 -240.50070190]
[545.42736816 -241.98306274]
[554.95269775 -253.57049561]
[553.16711426 -269.27359009]
[563.07348633 -281.58773804]
[578.79461670 -283.20721436]
[591.00335693 -273.17117310]
[592.45648193 -257.43383789]
[582.29193115 -245.33187866]
[566.54010010 -244.04518127]
[557.01483154 -232.45774841]
[555.06842041 -215.00814819]
[537.75799561 -208.70069885]
[528.38391113 -196.99058533]
[519.00982666 -185.28048706]
[509.63574219 -173.57037354]
[514.53735352 -162.48970032]
[514.26922607 -150.30413818]
[508.82092285 -139.32060242]
[499.16839600 -131.64437866]
[487.09985352 -128.77571106]
[474.88449097 -131.31692505]
[465.20956421 -119.85412598]
[455.53466797 -108.39132690]
[445.85974121 -96.92852020]
[436.18481445 -85.46572113]
[426.50988770 -74.00291443]
[424.60147095 -66.87914276]
[416.63421631 -62.45516205]
[406.81127930 -51.11891937]
[396.98837280 -39.78267288]
[402.37423706 -28.37929535]
[403.05688477 -15.73976326]
[398.89996338 -3.73445201]
[390.48599243 5.84677935]
[379.03475952 11.56142235]
[366.22683716 12.53144169]
[353.95672607 8.57800293]
[343.84283447 19.65541649]
[333.72891235 30.73283005]
[334.31253052 38.21009064]
[347.84722900 44.67626190]
[335.47970581 53.16461182]
[336.06329346 60.64187241]
[347.77340698 70.01595306]
[359.48348999 79.39002991]
[371.19360352 88.76411438]
[387.45516968 84.07435608]
[403.14920044 89.95028687]
[412.15164185 103.88720703]
[411.07632446 120.27725983]
[422.90713501 129.49853516]
[434.73794556 138.71980286]
[446.56875610 147.94108582]
[462.04711914 146.19242859]
[473.91387939 155.71266174]
[475.48556519 170.47969055]
[487.31637573 179.70097351]
[500.32620239 171.88375854]
[515.28210449 169.29797363]
[530.16131592 172.29331970]
[542.95166016 180.46469116]
[551.92333984 192.70700073]
[555.86291504 207.36454773]
[554.23767090 222.45504761]
[547.26739502 235.93762207]
[535.89477539 245.98884583]
[521.65783691 251.24940491]
[506.48196411 251.00782776]
[492.41967773 245.29679871]
[481.37268066 234.88868713]
[474.83508301 221.19110107]
[473.69097900 206.05651855]
[478.09509277 191.53178406]
[466.26428223 182.31050110]
[451.56045532 184.39192200]
[439.43096924 175.20877075]
[437.34747314 159.77189636]
[425.51666260 150.55061340]
[413.68585205 141.32934570]
[401.85504150 132.10806274]
[389.43554688 136.97534180]
[376.12524414 135.06010437]
[365.41085815 126.75615692]
[360.15225220 114.14484406]
[361.81951904 100.47422028]
[350.10943604 91.10014343]
[338.39932251 81.72605896]
[326.68920898 72.35198212]
[312.09686279 68.87870789]
[297.41928101 71.97198486]
[282.74169922 75.06525421]
[268.06408691 78.15853119]
[253.40689087 81.34700775]
[238.77069092 84.63056183]
[224.13449097 87.91410828]
[209.49829102 91.19766235]
[221.63868713 100.00736237]
[224.11264038 114.80194092]
[215.49891663 127.08214569]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 107]
[4 106]
[5 105]
[6 104]
[7 103]
[8 102]
[10 54]
[11 53]
[12 52]
[13 51]
[14 50]
[16 48]
[17 47]
[18 46]
[19 45]
[20 44]
[23 41]
[24 40]
[25 39]
[26 38]
[28 36]
[29 35]
[62 100]
[63 99]
[64 98]
[65 97]
[66 96]
[67 95]
[68 94]
[69 93]
[70 92]
[71 91]
[73 88]
[74 87]
[75 86]
[76 84]
[77 83]
[108 238]
[109 237]
[110 236]
[111 235]
[113 234]
[114 233]
[115 232]
[116 231]
[118 181]
[119 180]
[120 179]
[125 172]
[126 171]
[127 170]
[128 168]
[129 167]
[130 166]
[131 165]
[132 164]
[133 163]
[137 157]
[138 156]
[139 155]
[140 154]
[143 152]
[144 151]
[185 230]
[186 229]
[187 228]
[188 227]
[192 222]
[193 221]
[194 220]
[195 219]
[198 216]
[199 215]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
