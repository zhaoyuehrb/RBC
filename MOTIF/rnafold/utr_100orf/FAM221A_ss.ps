%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:00:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUCAGGAGGCGGGCGGGAGGGGGCGCGGUACCGGGAGGGAACGGGGCGGGUCGGGCUUCGAGGUCAGCUGGUCCGCAGGGAAGCCUUUGGCUUCCCCACCGGCAAUGGAGCGGUUGACGUUGCCUCUCGGCGGCGCGGCGGCGGUGGACGAGUACCUGGAGUACCGGAGAAUUGUUGGUGAGGAUGAUGGAGGGAAACUUUUUA\
) } def
/len { sequence length } bind def

/coor [
[92.64976501 704.31896973]
[94.06224060 700.20355225]
[90.66073608 685.59429932]
[87.25923157 670.98504639]
[83.85772705 656.37585449]
[68.28745270 652.06072998]
[56.95183182 640.41595459]
[53.01181412 624.55303955]
[57.63437653 608.77752686]
[69.64902496 597.42065430]
[66.02513123 582.86499023]
[55.44220734 572.38403320]
[59.61628723 557.12335205]
[55.99238968 542.56768799]
[52.36849594 528.01202393]
[48.74459839 513.45635986]
[45.12070465 498.90069580]
[27.42077827 492.91247559]
[16.81782913 477.34472656]
[17.74262810 458.38165283]
[30.00238419 443.68899536]
[25.71657181 429.31430054]
[12.11123276 422.99807739]
[-1.63502192 429.00143433]
[-15.38127708 435.00482178]
[-24.93132973 447.61859131]
[-39.69147873 445.62176514]
[-53.43773270 451.62512207]
[-56.87882996 464.64959717]
[-67.04541779 473.18853760]
[-80.08067322 474.29522705]
[-91.20522308 467.78884888]
[-105.04142761 473.58187866]
[-118.87763214 479.37493896]
[-122.31127167 494.50735474]
[-134.00590515 504.70611572]
[-149.46470642 506.04965210]
[-162.74345398 498.02130127]
[-168.73620605 483.70812988]
[-165.13861084 468.61386108]
[-153.33401489 458.54254150]
[-137.86155701 457.36679077]
[-124.67068481 465.53872681]
[-110.83447266 459.74569702]
[-96.99826813 453.95263672]
[-91.29413605 438.13360596]
[-75.60575867 431.19625854]
[-59.44110489 437.87887573]
[-45.69485092 431.87548828]
[-37.12802124 419.69113159]
[-21.38464928 421.25854492]
[-7.63839388 415.25518799]
[6.10786057 409.25180054]
[6.55683184 393.29852295]
[15.39523888 381.44317627]
[28.33757782 377.21105957]
[31.29197121 362.50488281]
[34.24636459 347.79870605]
[37.20075989 333.09252930]
[40.15515518 318.38635254]
[38.38986206 311.20654297]
[43.26836395 303.47921753]
[46.44668198 288.81979370]
[49.62500000 274.16040039]
[52.80331802 259.50097656]
[51.01539230 255.06852722]
[51.99570084 249.46563721]
[56.30856705 244.44616699]
[59.93246460 229.89050293]
[63.55635834 215.33483887]
[59.12307739 201.11529541]
[69.96520233 189.59320068]
[73.58910370 175.03753662]
[77.21299744 160.48187256]
[80.83689117 145.92620850]
[84.46078491 131.37054443]
[88.08468628 116.81487274]
[64.26098633 108.31179810]
[53.61553192 74.82269287]
[46.98974991 61.36538696]
[40.36397171 47.90808105]
[33.73818970 34.45077896]
[27.11240959 20.99347496]
[20.48662949 7.53617048]
[13.86084938 -5.92113352]
[7.23506880 -19.37843704]
[-5.18586779 -30.91779137]
[2.46406603 -46.04772186]
[19.12042809 -42.88513565]
[20.69237328 -26.00421715]
[27.31815338 -12.54691410]
[33.94393539 0.91039020]
[40.56971359 14.36769390]
[47.19549561 27.82499886]
[53.82127380 41.28230286]
[60.44705582 54.73960495]
[67.07283783 68.19690704]
[74.41444397 66.66368866]
[89.09766388 63.59724045]
[96.43927002 62.06401825]
[97.12530518 47.07971573]
[97.81133270 32.09541321]
[89.79351044 17.78994179]
[98.40493774 3.83374953]
[114.78692627 4.58377123]
[122.08708954 19.26844788]
[112.79563904 32.78144455]
[112.10961151 47.76574707]
[111.42357635 62.75004959]
[118.36356354 65.59373474]
[139.18353271 74.12480164]
[149.20915222 62.96742630]
[152.67764282 47.53110123]
[166.93942261 43.23565674]
[176.96504211 32.07828522]
[186.99066162 20.92091560]
[197.01628113 9.76354408]
[200.42620850 1.28509355]
[207.28088379 -1.48603809]
[217.47547913 -12.48922253]
[227.67008972 -23.49240685]
[237.86468506 -34.49559021]
[248.05929565 -45.49877548]
[258.25390625 -56.50196075]
[268.44848633 -67.50514221]
[271.55645752 -83.60709381]
[287.14144897 -88.71004486]
[299.17095947 -77.56452179]
[295.27008057 -61.63608551]
[279.45169067 -57.31054306]
[269.25708008 -46.30735779]
[259.06246948 -35.30417252]
[248.86787415 -24.30098915]
[238.67326355 -13.29780388]
[228.47866821 -2.29461932]
[218.28405762 8.70856476]
[208.17366028 19.78916550]
[198.14804077 30.94653702]
[188.12242126 42.10390854]
[178.09680176 53.26128006]
[175.34541321 67.89955139]
[160.36653137 72.99304962]
[150.34089661 84.15042114]
[130.91838074 119.75897217]
[102.64035034 120.43876648]
[99.01644897 134.99443054]
[95.39255524 149.55009460]
[91.76866150 164.10575867]
[88.14476776 178.66142273]
[84.52086639 193.21710205]
[88.69494629 208.47775269]
[78.11202240 218.95874023]
[74.48812866 233.51440430]
[70.86423492 248.07006836]
[67.46273041 262.67929077]
[64.28440857 277.33871460]
[61.10609436 291.99810791]
[57.92777634 306.65753174]
[54.86132812 321.34075928]
[51.90693665 336.04693604]
[48.95254135 350.75308228]
[45.99814606 365.45925903]
[43.04375076 380.16543579]
[56.19020462 401.64389038]
[40.09126663 425.02847290]
[44.37707901 439.40316772]
[55.69397354 441.27294922]
[65.45082092 447.20568848]
[72.25675964 456.31079102]
[75.15837860 467.24880981]
[73.77316284 478.42834473]
[68.33942413 488.23760986]
[59.67636871 495.27679443]
[63.30026245 509.83245850]
[66.92415619 524.38812256]
[70.54805756 538.94378662]
[74.17195129 553.49945068]
[85.01408386 565.02154541]
[80.58079529 579.24108887]
[84.20469666 593.79675293]
[97.83368683 596.95483398]
[108.71989441 605.63623047]
[114.77382660 618.10162354]
[114.86501312 631.89294434]
[109.03269196 644.31750488]
[98.46696472 652.97430420]
[101.86846924 667.58355713]
[105.26997375 682.19281006]
[108.67147064 696.80206299]
[112.51692200 711.30072021]
[116.80273438 725.67541504]
[121.08854675 740.05010986]
[125.37435913 754.42480469]
[129.66017151 768.79949951]
[141.94102478 779.66748047]
[138.40483093 795.68084717]
[122.68931580 800.36639404]
[110.96125793 788.90411377]
[115.28547668 773.08532715]
[110.99966431 758.71063232]
[106.71385193 744.33593750]
[102.42803955 729.96124268]
[98.14222717 715.58654785]
[95.73896027 714.13623047]
[93.76657867 711.64465332]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 189]
[3 188]
[4 187]
[5 186]
[10 180]
[11 179]
[13 177]
[14 176]
[15 175]
[16 174]
[17 173]
[21 166]
[22 165]
[23 53]
[24 52]
[25 51]
[27 49]
[28 48]
[32 45]
[33 44]
[34 43]
[56 163]
[57 162]
[58 161]
[59 160]
[60 159]
[62 158]
[63 157]
[64 156]
[65 155]
[68 154]
[69 153]
[70 152]
[72 150]
[73 149]
[74 148]
[75 147]
[76 146]
[77 145]
[79 97]
[80 96]
[81 95]
[82 94]
[83 93]
[84 92]
[85 91]
[86 90]
[100 109]
[101 108]
[102 107]
[111 143]
[112 142]
[114 140]
[115 139]
[116 138]
[117 137]
[119 136]
[120 135]
[121 134]
[122 133]
[123 132]
[124 131]
[125 130]
[190 203]
[191 202]
[192 201]
[193 200]
[194 199]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
