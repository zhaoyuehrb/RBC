%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:09:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGGGCCAGGGCAGCGCGGACUCGCGUCCCGUGGAGCGUUCCAGGCGGGCGCGCGGCUUUCUCCCCAGACCCACCGAGUGGCGGCGGAGGCGAGAUGCGCGGGGGCGUGCUCCUGGUCUUGCUGCUGUGUGUCGCCGCGCAGUGCCGGCAGAGAGGCCUGUUUCCUGCCAUUCUCAAUCUUGCCAGCAAUGCUC\
) } def
/len { sequence length } bind def

/coor [
[338.95745850 290.28311157]
[327.03878784 281.17568970]
[315.12011719 272.06823730]
[303.12847900 263.05709839]
[291.06463623 254.14286804]
[279.00079346 245.22862244]
[266.86553955 236.41183472]
[254.65965271 227.69309998]
[239.80584717 226.59141541]
[233.07360840 212.27404785]
[220.86772156 203.55529785]
[208.66183472 194.83656311]
[196.45594788 186.11781311]
[184.25007629 177.39907837]
[172.04418945 168.68034363]
[159.83830261 159.96159363]
[152.55833435 158.63017273]
[147.50753784 151.00277710]
[135.44371033 142.08853149]
[123.37986755 133.17428589]
[111.31602478 124.26004028]
[99.25218201 115.34579468]
[84.44643402 112.93962860]
[70.18058014 117.57488251]
[55.91473770 122.21013641]
[41.64888763 126.84539032]
[27.38303947 131.48065186]
[13.15499401 136.23066711]
[-1.03432846 141.09513855]
[-15.22365093 145.95962524]
[-29.41297340 150.82409668]
[-43.60229492 155.68856812]
[-57.71141052 160.78100586]
[-71.73665619 166.10008240]
[-85.76189423 171.41915894]
[-95.70868683 184.45730591]
[-111.93666840 182.09413147]
[-117.75189209 166.76066589]
[-107.17214203 154.23065186]
[-91.08097076 157.39390564]
[-77.05572510 152.07484436]
[-63.03048325 146.75576782]
[-60.28407288 142.83374023]
[-55.03894806 140.60284424]
[-48.46677017 141.49925232]
[-34.27745056 136.63478088]
[-20.08812714 131.77029419]
[-5.89880514 126.90582275]
[8.29051685 122.04134369]
[13.60541439 116.89134979]
[22.74778557 117.21479797]
[37.01363373 112.57954407]
[51.27947998 107.94429016]
[65.54532623 103.30903625]
[79.81118011 98.67378235]
[83.40090942 84.10964966]
[72.92324066 73.37567139]
[62.44557190 62.64168549]
[51.96789932 51.90769958]
[41.49023056 41.17371368]
[31.01255989 30.43972969]
[15.83617783 25.96893311]
[12.48283768 11.45671844]
[2.00516725 0.72273445]
[-8.55862808 -9.92650127]
[-19.20786476 -20.49029732]
[-29.85709953 -31.05409241]
[-44.43178177 -26.38106346]
[-59.50668716 -29.02791595]
[-71.61771393 -38.38642502]
[-77.98182678 -52.30607224]
[-77.13661194 -67.58822632]
[-69.27629089 -80.72116089]
[-56.20709991 -88.68701935]
[-40.93225479 -89.65530396]
[-26.96179199 -83.40351868]
[-17.50602913 -71.36827850]
[-14.73782921 -56.31518173]
[-19.29330444 -41.70332718]
[-8.64406872 -31.13953209]
[2.00516725 -20.57573700]
[8.97728062 -18.09375572]
[12.73915195 -9.75493622]
[23.21682167 0.97904837]
[37.64377213 4.68207884]
[41.74654388 19.96205902]
[52.22421265 30.69604492]
[62.70188522 41.43002701]
[73.17955780 52.16401291]
[83.65722656 62.89799881]
[94.13489532 73.63198090]
[108.40074158 68.99672699]
[110.56807709 54.15413284]
[112.73541260 39.31153488]
[110.87739563 30.35411644]
[115.05908203 24.24804497]
[117.46525574 9.44229221]
[119.87142181 -5.36346197]
[122.27758789 -20.16921616]
[124.68376160 -34.97497177]
[118.36578369 -50.10821915]
[128.52635193 -62.98047638]
[144.71313477 -60.34986877]
[150.27456665 -44.92253876]
[139.48951721 -32.56880188]
[137.08334351 -17.76304626]
[134.67716980 -2.95729303]
[132.27101135 11.84846115]
[129.86483765 26.65421486]
[127.57801056 41.47887039]
[125.41067505 56.32146835]
[123.24333954 71.16406250]
[124.66054535 87.54950714]
[118.19666290 99.22243500]
[108.16642761 103.28195953]
[120.23027039 112.19620514]
[132.29411316 121.11045074]
[144.35795593 130.02468872]
[156.42178345 138.93893433]
[168.55703735 147.75572205]
[180.76292419 156.47445679]
[192.96881104 165.19319153]
[205.17469788 173.91194153]
[217.38056946 182.63067627]
[229.58645630 191.34941101]
[241.79234314 200.06816101]
[257.51919556 201.79345703]
[263.37838745 215.48721313]
[275.58428955 224.20596313]
[284.39913940 226.65255737]
[287.91503906 233.16477966]
[299.97888184 242.07902527]
[312.04272461 250.99327087]
[320.81701660 253.58155823]
[324.22756958 260.14956665]
[336.14620972 269.25701904]
[348.06488037 278.36444092]
[368.14511108 280.03637695]
[374.82693481 298.17315674]
[387.03283691 306.89187622]
[399.23870850 315.61062622]
[414.96557617 317.33593750]
[420.82476807 331.02969360]
[433.03067017 339.74841309]
[445.23654175 348.46716309]
[460.96337891 350.19247437]
[466.82260132 363.88623047]
[479.02847290 372.60494995]
[491.23437500 381.32369995]
[503.44024658 390.04244995]
[515.98730469 398.26263428]
[528.85516357 405.97091675]
[541.72302246 413.67922974]
[554.59088135 421.38754272]
[567.58129883 428.88754272]
[580.69079590 436.17727661]
[593.80035400 443.46704102]
[607.34814453 436.08734131]
[622.73339844 437.22647095]
[635.04669189 446.52090454]
[640.35888672 461.00482178]
[636.97491455 476.05648804]
[625.97454834 486.87292480]
[610.86798096 490.00268555]
[596.47570801 484.44705200]
[587.39013672 471.97882080]
[586.51055908 456.57656860]
[573.40106201 449.28680420]
[560.29156494 441.99703979]
[555.52288818 442.42700195]
[550.43548584 439.85665894]
[546.88262939 434.25540161]
[534.01470947 426.54708862]
[521.14685059 418.83880615]
[508.27899170 411.13049316]
[509.26290894 426.09820557]
[498.28625488 436.32135010]
[483.42617798 434.27722168]
[475.61749268 421.47003174]
[480.60623169 407.32391357]
[494.72149658 402.24832153]
[482.51562500 393.52957153]
[470.30975342 384.81085205]
[458.10385132 376.09210205]
[443.25006104 374.99041748]
[436.51779175 360.67303467]
[424.31192017 351.95431519]
[412.10601807 343.23556519]
[397.25222778 342.13388062]
[390.51998901 327.81649780]
[378.31408691 319.09777832]
[366.10821533 310.37902832]
[356.20455933 312.96047974]
[346.30950928 309.58700562]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 137]
[2 136]
[3 135]
[4 133]
[5 132]
[6 131]
[7 129]
[8 128]
[10 126]
[11 125]
[12 124]
[13 123]
[14 122]
[15 121]
[16 120]
[18 119]
[19 118]
[20 117]
[21 116]
[22 115]
[23 55]
[24 54]
[25 53]
[26 52]
[27 51]
[28 49]
[29 48]
[30 47]
[31 46]
[32 45]
[33 42]
[34 41]
[35 40]
[56 91]
[57 90]
[58 89]
[59 88]
[60 87]
[61 86]
[63 84]
[64 83]
[65 81]
[66 80]
[67 79]
[92 112]
[93 111]
[94 110]
[96 109]
[97 108]
[98 107]
[99 106]
[100 105]
[139 192]
[140 191]
[141 190]
[143 188]
[144 187]
[145 186]
[147 184]
[148 183]
[149 182]
[150 181]
[151 175]
[152 174]
[153 173]
[154 172]
[155 169]
[156 168]
[157 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
