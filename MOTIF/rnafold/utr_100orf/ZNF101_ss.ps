%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:11:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGGGGCAACUUCCAAAGCCCGAAGCGGUCUCAUUUCCCGCCGGCCCCCCAUUCGGGUCCGGGUUUUAGUUCCUCGGGGAGCCCCUGGUGCCCCGGAUACGGCUGAUUUUGUCGUGUGGGACCUGUUCUGGCUGCUCCAGCCCCAGGAAGGACCCAGGACACCCGGAAGCCGGAAAUGGACUCAGUGGCCUUUGAGGAUGUGGCUGUGAACUUCACCCAGGAGGAGUGGGCUUUGCUGAGUCCUUCCCAGAAGA\
AUCUCUACAGAGAUGUGACGC\
) } def
/len { sequence length } bind def

/coor [
[486.27719116 861.16210938]
[481.59341431 846.91217041]
[476.90966797 832.66217041]
[472.22589111 818.41217041]
[467.54211426 804.16217041]
[462.85836792 789.91217041]
[458.17459106 775.66217041]
[453.49081421 761.41217041]
[440.95928955 760.18267822]
[429.77609253 754.29504395]
[421.61013794 744.58807373]
[417.69485474 732.47344971]
[418.64227295 719.73040771]
[424.34747314 708.24444580]
[433.99893188 699.72839355]
[429.63958740 685.37579346]
[425.28021240 671.02325439]
[420.92086792 656.67071533]
[416.56152344 642.31811523]
[412.20214844 627.96557617]
[407.84280396 613.61303711]
[403.48342896 599.26043701]
[383.78442383 594.26934814]
[371.43426514 579.32348633]
[370.36114502 560.89929199]
[379.88519287 546.19073486]
[372.85647583 532.93945312]
[365.82775879 519.68817139]
[358.79904175 506.43682861]
[351.77032471 493.18551636]
[344.74160767 479.93423462]
[331.94256592 472.31625366]
[332.31134033 456.49932861]
[325.28262329 443.24801636]
[318.25390625 429.99673462]
[311.22518921 416.74542236]
[297.04684448 387.49871826]
[287.74206543 375.73345947]
[278.43731689 363.96820068]
[260.13363647 362.91528320]
[248.23823547 348.54556274]
[250.70524597 329.73162842]
[241.13601685 318.18045044]
[231.56680298 306.62927246]
[221.99757385 295.07806396]
[212.42835999 283.52688599]
[203.03840637 286.64093018]
[192.13331604 284.69680786]
[182.49827576 277.10195923]
[168.44537354 282.34756470]
[154.39248657 287.59313965]
[144.37757874 300.57904053]
[128.16218567 298.13095093]
[122.42731476 282.76724243]
[133.07250977 270.29281616]
[149.14689636 273.54025269]
[163.19979858 268.29464722]
[177.25268555 263.04907227]
[182.01718140 248.82586670]
[173.95968628 236.17372131]
[165.90219116 223.52159119]
[157.84468079 210.86944580]
[149.78718567 198.21730042]
[141.72967529 185.56517029]
[133.67218018 172.91302490]
[131.00886536 172.16410828]
[128.47560120 170.33554077]
[126.47769928 167.46958923]
[125.39852142 163.75172424]
[125.55132294 159.49931335]
[118.07588959 146.49478149]
[110.60045624 133.49024963]
[103.12503052 120.48571014]
[81.35824585 124.04417419]
[60.07622147 104.02210999]
[46.14591599 98.45913696]
[32.21561050 92.89616394]
[18.28530884 87.33319855]
[4.35500431 81.77022552]
[-9.57529926 76.20726013]
[-25.26082993 78.27478790]
[-34.21099091 66.36916351]
[-48.14129257 60.80619431]
[-62.07159805 55.24322510]
[-79.02356720 54.98420715]
[-83.46744537 38.62302399]
[-68.97585297 29.82359123]
[-56.50862885 41.31292343]
[-42.57832336 46.87589264]
[-28.64801979 52.43886185]
[-13.95887756 49.97342682]
[-4.01232958 62.27695465]
[9.91797447 67.83992004]
[23.84827805 73.40289307]
[37.77858353 78.96586609]
[51.70888519 84.52883148]
[65.63919067 90.09180450]
[74.46972656 77.96655273]
[64.90050507 66.41536713]
[55.33127975 54.86417770]
[45.76205826 43.31298828]
[36.19283676 31.76179695]
[26.62361336 20.21060753]
[17.05438995 8.65941811]
[1.41702449 8.74182320]
[-10.58177567 -1.28627729]
[-13.27654457 -16.68992043]
[-5.39489317 -30.19597816]
[9.34170341 -35.42730331]
[23.97507477 -29.91382217]
[31.59578896 -16.25883293]
[28.60558128 -0.90980470]
[38.17480469 10.64138508]
[47.74402618 22.19257355]
[57.31324768 33.74376297]
[66.88246918 45.29495239]
[76.45169067 56.84614182]
[86.02091217 68.39733124]
[100.07380676 63.15174866]
[99.73359680 48.15560532]
[99.39337921 33.15946579]
[91.34506989 19.53833199]
[98.79170990 6.63884497]
[98.45149231 -8.35729599]
[98.11127472 -23.35343742]
[94.79866791 -31.82349968]
[97.85321045 -38.52136230]
[97.68309021 -53.52040100]
[97.51297760 -68.51943207]
[97.34285736 -83.51847076]
[97.00263977 -98.51461029]
[96.49237061 -113.50592804]
[95.98210144 -128.49725342]
[95.47183228 -143.48857117]
[94.96156311 -158.47988892]
[88.37991333 -174.10417175]
[101.57160950 -184.75384521]
[115.45690918 -175.02580261]
[109.95288849 -158.99015808]
[110.46315002 -143.99884033]
[110.97341919 -129.00752258]
[111.48368835 -114.01619720]
[111.99395752 -99.02487946]
[114.78203583 -95.19061279]
[115.21673584 -89.57295990]
[112.34188843 -83.68859100]
[112.51200867 -68.68955231]
[112.68212891 -53.69051743]
[112.85224915 -38.69148254]
[113.10742188 -23.69365311]
[113.44763184 -8.69751167]
[113.78784943 6.29862928]
[121.81182861 18.84713745]
[114.38951874 32.81924820]
[114.72973633 47.81539154]
[115.06995392 62.81153107]
[129.45182800 92.36935425]
[116.12956238 113.01027679]
[123.60499573 126.01481628]
[131.08042908 139.01934814]
[138.55586243 152.02388000]
[146.32432556 164.85551453]
[154.38182068 177.50765991]
[162.43933105 190.15980530]
[170.49682617 202.81195068]
[178.55432129 215.46408081]
[186.61183167 228.11622620]
[194.66932678 240.76837158]
[223.41423035 248.74757385]
[223.97953796 273.95767212]
[233.54876709 285.50885010]
[243.11798096 297.06002808]
[252.68721008 308.61123657]
[262.25643921 320.16241455]
[274.03628540 318.94824219]
[284.83596802 323.50759888]
[292.03335571 332.60855103]
[293.94146729 343.93234253]
[290.20257568 354.66345215]
[299.50732422 366.42871094]
[308.81210327 378.19393921]
[323.36837769 381.81546021]
[337.10137939 375.78182983]
[350.83438110 369.74819946]
[364.56738281 363.71456909]
[378.30035400 357.68093872]
[383.80230713 342.86523438]
[398.20364380 336.35546875]
[412.96032715 342.01373291]
[419.31747437 356.48309326]
[413.50350952 371.17913818]
[398.96774292 377.38293457]
[384.33398438 371.41394043]
[370.60101318 377.44757080]
[356.86801147 383.48120117]
[343.13500977 389.51480103]
[329.40200806 395.54843140]
[324.47650146 409.71670532]
[331.50521851 422.96801758]
[338.53393555 436.21929932]
[345.56265259 449.47061157]
[358.86444092 458.03640747]
[357.99291992 472.90551758]
[365.02163696 486.15679932]
[372.05035400 499.40811157]
[379.07907104 512.65942383]
[386.10778809 525.91070557]
[393.13650513 539.16204834]
[410.90365601 539.08483887]
[426.23120117 550.33148193]
[432.24188232 569.67480469]
[446.71224976 573.62554932]
[461.18264771 577.57623291]
[475.65301514 581.52697754]
[490.12341309 585.47766113]
[502.14373779 575.66485596]
[517.63806152 574.82513428]
[530.64849854 583.28137207]
[536.17230225 597.78198242]
[532.08538818 612.75115967]
[519.95935059 622.43298340]
[504.45678711 623.10461426]
[491.53884888 614.50769043]
[486.17269897 599.94805908]
[471.70230103 595.99731445]
[457.23193359 592.04663086]
[442.76156616 588.09588623]
[428.29116821 584.14520264]
[417.83599854 594.90112305]
[422.19537354 609.25366211]
[426.55471802 623.60620117]
[430.91406250 637.95880127]
[435.27343750 652.31134033]
[439.63278198 666.66387939]
[443.99215698 681.01647949]
[448.35150146 695.36901855]
[465.58532715 698.97204590]
[478.53826904 710.76483154]
[483.68515015 727.41522217]
[479.68765259 744.28643799]
[467.74081421 756.72839355]
[472.42459106 770.97839355]
[477.10836792 785.22839355]
[481.79211426 799.47839355]
[486.47589111 813.72839355]
[491.15966797 827.97839355]
[495.84341431 842.22839355]
[500.52719116 856.47839355]
[516.47192383 856.90045166]
[531.28063965 862.75347900]
[543.16522217 873.31091309]
[550.69738770 887.27923584]
[552.98034668 902.95672607]
[549.75567627 918.44049072]
[541.43225098 931.85748291]
[529.03460693 941.59124756]
[533.87969971 955.78723145]
[538.72479248 969.98315430]
[543.56982422 984.17913818]
[548.41491699 998.37506104]
[561.11169434 1008.75408936]
[558.20489502 1024.89355469]
[542.68475342 1030.19055176]
[530.51715088 1019.19604492]
[534.21899414 1003.22015381]
[529.37390137 989.02423096]
[524.52880859 974.82824707]
[519.68371582 960.63226318]
[514.83868408 946.43634033]
[500.70211792 946.58264160]
[487.18933105 942.35491943]
[475.62203979 934.15289307]
[467.13598633 922.76556396]
[462.56930542 909.29565430]
[462.37994385 895.05249023]
[466.59951782 881.42492676]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 248]
[2 247]
[3 246]
[4 245]
[5 244]
[6 243]
[7 242]
[8 241]
[15 236]
[16 235]
[17 234]
[18 233]
[19 232]
[20 231]
[21 230]
[22 229]
[26 208]
[27 207]
[28 206]
[29 205]
[30 204]
[31 203]
[33 201]
[34 200]
[35 199]
[36 198]
[37 181]
[38 180]
[39 179]
[42 174]
[43 173]
[44 172]
[45 171]
[46 170]
[49 58]
[50 57]
[51 56]
[59 168]
[60 167]
[61 166]
[62 165]
[63 164]
[64 163]
[65 162]
[70 161]
[71 160]
[72 159]
[73 158]
[75 97]
[76 96]
[77 95]
[78 94]
[79 93]
[80 92]
[82 90]
[83 89]
[84 88]
[98 118]
[99 117]
[100 116]
[101 115]
[102 114]
[103 113]
[104 112]
[119 156]
[120 155]
[121 154]
[123 152]
[124 151]
[125 150]
[127 149]
[128 148]
[129 147]
[130 146]
[131 143]
[132 142]
[133 141]
[134 140]
[135 139]
[182 197]
[183 196]
[184 195]
[185 194]
[186 193]
[211 228]
[212 227]
[213 226]
[214 225]
[215 224]
[256 269]
[257 268]
[258 267]
[259 266]
[260 265]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
