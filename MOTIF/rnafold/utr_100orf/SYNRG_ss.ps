%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:25:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUUUGACCCGGAAGUGGCUGUGUUCAGCUGACAGCUGCUGAUAAGGUGGCGGCGGCGAAGGCAGCGGCAGGUCGGGAGCAAGAUGGCGCUGCGGCCAGGAGCUGGUUCUGGUGGCGGCGGGGCCGCGGGAGCUGGCGCGGGGUCCGCCGGGGGAGGCGGCUUCAUGUUUCCUGUUGCAGGUG\
) } def
/len { sequence length } bind def

/coor [
[-129.66825867 129.43319702]
[-144.45014954 131.98184204]
[-159.23204041 134.53050232]
[-174.01393127 137.07916260]
[-178.05921936 140.45303345]
[-182.54656982 141.78776550]
[-186.61921692 141.25914001]
[-189.61640930 139.35954285]
[-204.50941467 141.14804077]
[-219.40240479 142.93652344]
[-234.29539490 144.72502136]
[-249.18840027 146.51351929]
[-259.72903442 160.46037292]
[-276.75869751 162.44177246]
[-289.69992065 151.71791077]
[-304.56021118 153.76040649]
[-317.17828369 163.30476379]
[-330.84057617 157.37255859]
[-345.70086670 159.41505432]
[-360.56115723 161.45755005]
[-375.42144775 163.50006104]
[-390.28173828 165.54255676]
[-402.89981079 175.08691406]
[-416.56210327 169.15470886]
[-431.42239380 171.19720459]
[-446.28268433 173.23971558]
[-454.38107300 177.51770020]
[-461.41387939 175.18798828]
[-476.30688477 176.97647095]
[-491.19985962 178.76496887]
[-506.09286499 180.55345154]
[-513.14868164 192.04325867]
[-525.35852051 197.28782654]
[-538.16827393 194.57521057]
[-546.93927002 185.11709595]
[-561.86065674 186.65106201]
[-576.78198242 188.18501282]
[-591.70336914 189.71897888]
[-606.62475586 191.25294495]
[-621.54608154 192.78691101]
[-632.74530029 204.27416992]
[-648.69403076 202.53717041]
[-657.15777588 188.90837097]
[-651.64392090 173.84263611]
[-636.38214111 168.89709473]
[-623.08007812 177.86553955]
[-608.15869141 176.33158875]
[-593.23730469 174.79762268]
[-578.31597900 173.26365662]
[-563.39459229 171.72969055]
[-548.47326660 170.19573975]
[-538.43896484 156.71275330]
[-521.42443848 154.60578918]
[-507.88134766 165.66046143]
[-492.98837280 163.87196350]
[-478.09536743 162.08348083]
[-463.20236206 160.29498291]
[-448.32519531 158.37942505]
[-433.46490479 156.33691406]
[-418.60461426 154.29441833]
[-407.04943848 144.89616394]
[-392.32424927 150.68226624]
[-377.46395874 148.63977051]
[-362.60366821 146.59727478]
[-347.74337769 144.55476379]
[-332.88308716 142.51226807]
[-321.32791138 133.11399841]
[-306.60272217 138.90011597]
[-291.74243164 136.85762024]
[-285.46014404 125.59175873]
[-273.65686035 119.92337036]
[-260.55242920 122.12796021]
[-250.97688293 131.62051392]
[-236.08389282 129.83203125]
[-221.19090271 128.04353333]
[-206.29789734 126.25504303]
[-191.40490723 124.46655273]
[-176.56259155 122.29726410]
[-161.78070068 119.74861145]
[-146.99880981 117.19995117]
[-132.21691895 114.65129852]
[-128.75836182 104.94296265]
[-121.51657867 97.49688721]
[-111.75737000 93.71112061]
[-101.22718811 94.33533478]
[-91.84071350 99.32346344]
[-85.33267212 107.82987976]
[-70.43968201 106.04138184]
[-64.15841675 102.11278534]
[-55.27742767 104.35173035]
[-40.35607147 102.81777191]
[-25.43471146 101.28380585]
[-10.51335239 99.74984741]
[4.40800714 98.21588135]
[19.32936668 96.68192291]
[34.25072479 95.14795685]
[40.59814453 91.32717133]
[49.43961334 93.71742249]
[64.38498688 92.43843079]
[79.33036041 91.15944672]
[94.27573395 89.88046265]
[108.32182312 84.61669159]
[120.42690277 75.75852203]
[132.53198242 66.90036011]
[144.63705444 58.04219437]
[156.74214172 49.18402481]
[168.84721375 40.32585907]
[180.95228577 31.46769333]
[193.05735779 22.60952759]
[205.16244507 13.75136089]
[211.73002625 -0.64229542]
[226.57022095 -1.91427398]
[238.67530823 -10.77243996]
[250.78038025 -19.63060760]
[262.88546753 -28.48877335]
[274.99053955 -37.34693909]
[277.16156006 -53.00139999]
[289.81631470 -62.46886063]
[305.44696045 -60.13243866]
[314.78009033 -47.37829590]
[312.27853394 -31.77323914]
[299.42642212 -22.57546997]
[283.84869385 -25.24186325]
[271.74362183 -16.38369560]
[259.63854980 -7.52552986]
[247.53346252 1.33263648]
[235.42839050 10.19080257]
[229.72663879 23.95086288]
[214.02061462 25.85643768]
[201.91552734 34.71460342]
[189.81045532 43.57276917]
[177.70538330 52.43093491]
[165.60029602 61.28910446]
[153.49522400 70.14727020]
[141.39015198 79.00543976]
[129.28506470 87.86360168]
[117.17999268 96.72177124]
[117.75566864 104.19964600]
[118.90702057 119.15538788]
[119.48269653 126.63326263]
[132.80097961 133.53424072]
[146.11926270 140.43521118]
[159.43753052 147.33619690]
[168.52069092 148.51136780]
[172.92279053 154.47036743]
[186.12130737 161.59773254]
[199.31982422 168.72508240]
[212.51834106 175.85243225]
[225.71685791 182.97978210]
[240.78642273 178.21705627]
[254.77125549 185.57913208]
[259.37438965 200.69821167]
[251.86488342 214.60443115]
[236.69796753 219.04745483]
[222.87193298 211.39134216]
[218.58950806 196.17829895]
[205.39099121 189.05094910]
[192.19247437 181.92359924]
[178.99395752 174.79624939]
[165.79544067 167.66888428]
[152.53656006 160.65446472]
[139.21827698 153.75349426]
[125.90000153 146.85252380]
[112.58172607 139.95153809]
[104.67309570 135.69381714]
[98.65359497 130.08085632]
[94.72220612 123.64157867]
[92.95171356 116.92729950]
[93.28794861 110.48412323]
[95.55471802 104.82583618]
[80.60934448 106.10482025]
[65.66397095 107.38381195]
[50.71859741 108.66279602]
[35.78468704 110.06932068]
[20.86332893 111.60327911]
[5.94196939 113.13724518]
[-8.97939014 114.67120361]
[-23.90074921 116.20516968]
[-38.82210922 117.73912811]
[-53.74346542 119.27309418]
[-68.65118408 120.93437958]
[-83.54418182 122.72286987]
[-95.06685638 139.15505981]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 81]
[2 80]
[3 79]
[4 78]
[8 77]
[9 76]
[10 75]
[11 74]
[12 73]
[15 69]
[16 68]
[18 66]
[19 65]
[20 64]
[21 63]
[22 62]
[24 60]
[25 59]
[26 58]
[28 57]
[29 56]
[30 55]
[31 54]
[35 51]
[36 50]
[37 49]
[38 48]
[39 47]
[40 46]
[87 182]
[88 181]
[90 180]
[91 179]
[92 178]
[93 177]
[94 176]
[95 175]
[96 174]
[98 173]
[99 172]
[100 171]
[101 170]
[102 137]
[103 136]
[104 135]
[105 134]
[106 133]
[107 132]
[108 131]
[109 130]
[110 129]
[112 127]
[113 126]
[114 125]
[115 124]
[116 123]
[140 164]
[141 163]
[142 162]
[143 161]
[145 160]
[146 159]
[147 158]
[148 157]
[149 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
