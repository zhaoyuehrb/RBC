%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:02:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAAGAGGAGCCGGAAGUGUGGCGCGCGAGGUCUAAGGGCGCGAGGGAAGUGGCGGGCGGGGACUAAGGCGGGGCGUGCAGGUAGCCGGCCGGCCGGGGGUCGCGGGUAUGGCCGAGGCCAGGAAGCGGCGGGAGCUACUUCCCCUGAUCUACCACCAUCUGCUGCGGGCUGGCUAUGUGCGUGCGGCGCGGGAAGUGAAGGAGCAGA\
) } def
/len { sequence length } bind def

/coor [
[122.57064056 138.97077942]
[127.39328766 153.17437744]
[122.49407196 167.35173035]
[109.93099976 175.54742432]
[94.98141479 174.31869507]
[83.92514038 164.18168640]
[81.40657043 149.39463806]
[88.48342896 136.16931152]
[88.42404938 121.16943359]
[81.15354156 123.01057434]
[74.01433563 136.20268250]
[66.87512207 149.39479065]
[59.73591232 162.58689880]
[64.48509216 177.66073608]
[57.11045837 191.63894653]
[41.98724365 196.22850037]
[28.08778763 188.70648193]
[23.65838814 173.53559875]
[31.32693100 159.71644592]
[46.54380798 155.44767761]
[53.68301773 142.25558472]
[60.82222748 129.06347656]
[67.96144104 115.87136841]
[56.92557907 105.71214294]
[44.36808395 113.91636658]
[31.81058502 122.12059021]
[19.25308800 130.32481384]
[20.77438545 145.55451965]
[15.03307247 159.74240112]
[3.34846234 169.62817383]
[-11.59440613 172.94015503]
[-26.36177254 168.91729736]
[-37.56020355 158.48399353]
[-42.61638260 144.03776550]
[-40.36843491 128.89823914]
[-31.33292389 116.54436493]
[-17.58614349 109.81497955]
[-2.28700352 110.25643921]
[11.04886627 117.76731110]
[23.60636330 109.56308746]
[36.16386032 101.35886383]
[48.72135925 93.15464783]
[65.32003784 87.99397278]
[81.34942627 88.97555542]
[95.07830048 95.55610657]
[90.63645935 81.22885895]
[86.19461823 66.90161133]
[81.75276947 52.57435989]
[77.31092834 38.24711227]
[72.86908722 23.91986465]
[68.42724609 9.59261608]
[63.98540115 -4.73463154]
[59.54356003 -19.06188011]
[55.10171509 -33.38912582]
[38.01549149 -41.57016373]
[32.42921829 -59.33707428]
[41.44493103 -75.26790619]
[36.57444000 -89.45516968]
[22.87108803 -91.50487518]
[11.71340466 -101.20646667]
[7.23827219 -116.27202606]
[11.78879738 -132.28533936]
[2.39872456 -143.98262024]
[-6.99134874 -155.67990112]
[-16.38142204 -167.37719727]
[-33.80227661 -168.96057129]
[-44.47844696 -182.38850403]
[-42.18642807 -199.04869080]
[-51.75126266 -210.60351562]
[-61.31609344 -222.15834045]
[-76.07606506 -227.85517883]
[-78.23146820 -242.59300232]
[-87.79630280 -254.14782715]
[-102.55626678 -259.84466553]
[-104.71167755 -274.58248901]
[-114.27651215 -286.13732910]
[-122.16058350 -290.75341797]
[-123.89669800 -297.93847656]
[-133.28677368 -309.63574219]
[-149.01408386 -312.80294800]
[-156.21520996 -327.13903809]
[-149.36605835 -341.64657593]
[-133.72071838 -345.19665527]
[-121.28095245 -335.06591797]
[-121.58947754 -319.02581787]
[-112.19940948 -307.32852173]
[-102.72168732 -295.70214844]
[-93.15685272 -284.14733887]
[-79.08102417 -279.27697754]
[-76.24147797 -263.71267700]
[-66.67664337 -252.15783691]
[-52.60081863 -247.28747559]
[-49.76127243 -231.72317505]
[-40.19643784 -220.16835022]
[-30.63160324 -208.61352539]
[-17.75933075 -209.21136475]
[-6.72865486 -202.18069458]
[-1.68763554 -189.89970398]
[-4.68413448 -176.76727295]
[4.70593834 -165.06997681]
[14.09601116 -153.37269592]
[23.48608398 -141.67539978]
[38.24272156 -144.36643982]
[42.89941788 -158.62530518]
[33.02720261 -168.53619385]
[28.41063499 -181.67114258]
[29.89695358 -195.44766235]
[37.13938522 -207.18305969]
[48.67587662 -214.61683655]
[62.22392654 -216.34602356]
[67.09441376 -230.53329468]
[71.96491241 -244.72055054]
[76.83540344 -258.90780640]
[73.16217041 -274.89028931]
[85.34949493 -285.86303711]
[100.86009216 -280.53823853]
[103.73799133 -264.39358521]
[91.02265930 -254.03730774]
[86.15216827 -239.85005188]
[81.28167725 -225.66279602]
[76.41118622 -211.47554016]
[87.31803894 -199.55371094]
[90.74456024 -183.66688538]
[85.66305542 -168.13075256]
[73.37032318 -157.21469116]
[57.15827942 -153.96861267]
[52.50158691 -139.70974731]
[63.66173553 -114.77783966]
[50.76169968 -94.32566071]
[55.63219070 -80.13839722]
[66.72608948 -77.46760559]
[75.24075317 -69.69211578]
[78.98233032 -58.65865326]
[76.91151428 -47.07176208]
[69.42896271 -37.83097076]
[73.87080383 -23.50372314]
[78.31265259 -9.17647457]
[82.75449371 5.15077353]
[87.19633484 19.47802162]
[91.63817596 33.80527115]
[96.08001709 48.13251877]
[100.52186584 62.45976639]
[104.96370697 76.78701019]
[109.40554810 91.11425781]
[118.43977356 103.08851624]
[130.99726868 111.29273987]
[143.55476379 119.49696350]
[159.33970642 120.56752777]
[165.76264954 134.00610352]
[178.32015991 142.21031189]
[190.87765503 150.41453552]
[206.15669250 147.38322449]
[218.77490234 155.88237000]
[221.57063293 170.46726990]
[234.12812805 178.67149353]
[246.68562317 186.87571716]
[263.73730469 182.97262573]
[278.05462646 192.42271423]
[281.04794312 208.97129822]
[293.72732544 216.98583984]
[306.46661377 224.90486145]
[319.26504517 232.72792053]
[332.06347656 240.55096436]
[344.86187744 248.37402344]
[357.66030884 256.19708252]
[370.45874023 264.02014160]
[383.25717163 271.84320068]
[399.06716919 272.43881226]
[405.89114380 285.67822266]
[418.68957520 293.50128174]
[432.52963257 286.68536377]
[447.85498047 288.45666504]
[459.77536011 298.24993896]
[464.48703003 312.94018555]
[460.48648071 327.83984375]
[449.05032349 338.19442749]
[433.82775879 340.69989014]
[419.67626953 334.55670166]
[411.11154175 321.72512817]
[410.86654663 306.29971313]
[398.06811523 298.47665405]
[383.17355347 298.44061279]
[375.43411255 284.64163208]
[362.63571167 276.81857300]
[349.83728027 268.99551392]
[337.03884888 261.17245483]
[324.24041748 253.34939575]
[311.44198608 245.52633667]
[298.64355469 237.70329285]
[291.29583740 236.89685059]
[285.71279907 229.66523743]
[273.03338623 221.65068054]
[260.98272705 226.21511841]
[248.31440735 222.95628357]
[239.70986938 212.84703064]
[238.48139954 199.43321228]
[225.92390442 191.22898865]
[213.36640930 183.02476501]
[198.88691711 186.32319641]
[186.03495789 178.18183899]
[182.67343140 162.97204590]
[170.11593628 154.76782227]
[157.55844116 146.56359863]
[142.67169189 146.07984924]
[135.35054016 132.05445862]
[122.79305267 123.85023499]
[110.23554993 115.64601135]
[102.96504974 117.48715210]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 23]
[11 22]
[12 21]
[13 20]
[24 42]
[25 41]
[26 40]
[27 39]
[45 144]
[46 143]
[47 142]
[48 141]
[49 140]
[50 139]
[51 138]
[52 137]
[53 136]
[54 135]
[57 130]
[58 129]
[62 102]
[63 101]
[64 100]
[65 99]
[68 95]
[69 94]
[70 93]
[72 91]
[73 90]
[75 88]
[76 87]
[78 86]
[79 85]
[103 127]
[104 126]
[110 121]
[111 120]
[112 119]
[113 118]
[145 207]
[146 206]
[147 205]
[149 203]
[150 202]
[151 201]
[154 198]
[155 197]
[156 196]
[159 192]
[160 191]
[161 189]
[162 188]
[163 187]
[164 186]
[165 185]
[166 184]
[167 183]
[169 181]
[170 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
