%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:56:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCUCUGCCCAUCCGCGCACCCGGGCUUCGGCUGGAGAGGGCCAGCUCGCUUCAGGAGGCCGAACCCCGUUCCCACCAACCCUCUCAGCUCAGACGCGGGGUGCUGAGUCACGGGGGGGGGGUGGUUCUGUGGAUAGUUGGAAUGCAUACACAGAGGAAAGGGGGAUGCGGCACCAGCAGACAGAGAGACAAGACCCCAGCCAGCCCCUGUCCAGGCAGCAUGGCACAUACCGCCAGAUCUUCCAUCCAGAGCAG\
CUCAUCACAG\
) } def
/len { sequence length } bind def

/coor [
[382.62094116 983.63739014]
[392.88876343 972.48626709]
[406.35269165 965.52221680]
[404.40942383 950.64862061]
[402.46618652 935.77502441]
[400.52291870 920.90142822]
[398.57968140 906.02783203]
[390.08782959 900.04968262]
[383.79071045 892.29351807]
[380.00045776 883.47729492]
[378.81121826 874.35174561]
[380.10540771 865.63787842]
[383.57690430 857.97052002]
[388.76858521 851.85192871]
[395.12036133 847.61926270]
[389.75036621 833.61340332]
[377.38052368 830.07598877]
[369.17608643 819.91461182]
[368.29864502 806.68920898]
[375.29077148 795.20086670]
[370.08657837 781.13262939]
[358.41418457 771.88031006]
[360.88293457 756.25292969]
[355.67871094 742.18469238]
[350.47448730 728.11639404]
[345.27026367 714.04815674]
[330.90536499 710.20263672]
[321.44747925 698.49743652]
[320.68667603 683.28967285]
[329.12408447 670.40106201]
[323.91986084 656.33282471]
[318.71563721 642.26452637]
[313.51141357 628.19628906]
[308.30718994 614.12799072]
[303.10296631 600.05975342]
[288.73809814 596.21423340]
[279.28018188 584.50903320]
[278.51940918 569.30126953]
[286.95678711 556.41265869]
[281.75256348 542.34442139]
[276.54833984 528.27612305]
[259.45739746 525.97723389]
[245.82730103 515.26770020]
[239.48532104 499.03942871]
[242.27058411 481.74954224]
[253.50196838 468.19631958]
[247.96693420 454.25488281]
[242.43188477 440.31347656]
[230.54421997 431.33947754]
[232.64318848 415.65811157]
[227.10813904 401.71667480]
[221.49085999 387.80819702]
[215.79154968 373.93310547]
[198.43522644 362.73309326]
[201.78187561 341.54525757]
[195.59463501 327.88079834]
[184.40609741 323.33837891]
[179.13046265 312.03292847]
[183.08096313 299.77774048]
[177.05552673 286.04116821]
[171.03009033 272.30456543]
[165.00466919 258.56796265]
[147.56526184 252.92289734]
[139.68597412 236.01832581]
[146.81782532 218.43887329]
[140.46963501 204.84841919]
[134.12144470 191.25796509]
[127.77324677 177.66751099]
[115.37667847 169.41073608]
[116.54649353 153.63284302]
[110.19830322 140.04238892]
[103.85011292 126.45193481]
[97.50191498 112.86148071]
[55.49028778 108.67172241]
[44.69745636 98.25467682]
[33.90462494 87.83763885]
[23.11179352 77.42059326]
[7.53532887 77.52784729]
[-3.26174212 66.80973816]
[-3.26800132 51.95929718]
[-14.06083298 41.54225540]
[-24.85366440 31.12521172]
[-35.64649582 20.70816803]
[-46.43932724 10.29112530]
[-57.23215866 -0.12591770]
[-74.73057556 0.49532586]
[-87.01058197 -11.50679302]
[-86.79817963 -28.33837700]
[-97.71328735 -38.62722778]
[-108.62839508 -48.91607666]
[-119.54350281 -59.20492935]
[-130.45860291 -69.49378204]
[-141.37371826 -79.78263092]
[-149.73468018 -83.37496185]
[-152.35606384 -90.25803375]
[-163.14889526 -100.67507935]
[-173.94172668 -111.09211731]
[-189.53733826 -117.74143982]
[-187.46516418 -134.56828308]
[-170.72229004 -137.23522949]
[-163.52468872 -121.88494873]
[-152.73185730 -111.46791077]
[-141.93902588 -101.05086517]
[-131.08486938 -90.69773865]
[-120.16975403 -80.40888977]
[-109.25465393 -70.12003326]
[-98.33954620 -59.83118439]
[-87.42443848 -49.54233551]
[-76.50933075 -39.25348282]
[-63.82965469 -41.43341827]
[-52.02885818 -35.83813477]
[-45.50001907 -24.30316544]
[-46.81511307 -10.91874886]
[-36.02228546 -0.50170583]
[-25.22945213 9.91533756]
[-14.43662071 20.33238029]
[-3.64378929 30.74942398]
[7.14904213 41.16646576]
[21.99038315 40.64665985]
[33.08424377 51.05727386]
[33.52883530 66.62776184]
[44.32166672 77.04480743]
[55.11449814 87.46184540]
[65.90733337 97.87889099]
[73.05649567 95.61186981]
[87.35483551 91.07781982]
[94.50400543 88.81079865]
[97.32168579 74.07781982]
[100.13936615 59.34484100]
[102.95704651 44.61185837]
[105.77472687 29.87888145]
[108.59240723 15.14590168]
[98.45149231 5.83847666]
[94.25870514 -7.15850401]
[97.00498199 -20.42564964]
[105.87022400 -30.52754402]
[118.46417236 -34.90228653]
[121.45565796 -49.60095978]
[112.52563477 -62.64052963]
[115.51361084 -78.15979004]
[128.64686584 -86.95144653]
[144.13366699 -83.79956818]
[152.78598022 -70.57409668]
[149.47053528 -55.12147903]
[136.15432739 -46.60947800]
[133.16284180 -31.91080284]
[144.63990784 -20.15245056]
[146.85697937 -3.70364857]
[138.74154663 10.96503735]
[123.32538605 17.96358109]
[120.50770569 32.69655991]
[117.69002533 47.42953873]
[114.87234497 62.16251755]
[112.05466461 76.89550018]
[109.23698425 91.62847900]
[111.09236908 106.51328278]
[117.44056702 120.10374451]
[123.78875732 133.69419861]
[130.13694763 147.28465271]
[142.98759460 156.51350403]
[141.36370850 171.31932068]
[147.71189880 184.90977478]
[154.06008911 198.50022888]
[160.40827942 212.09068298]
[172.11972046 213.88684082]
[181.42422485 221.02754211]
[186.09243774 231.65667725]
[185.07615662 243.10107422]
[178.74125671 252.54252625]
[184.76669312 266.27911377]
[190.79212952 280.01571655]
[196.81755066 293.75231934]
[211.90855408 304.33126831]
[209.25910950 321.69354248]
[215.44636536 335.35803223]
[224.57601929 337.46331787]
[231.62170410 343.42895508]
[235.09848022 351.83297729]
[234.34956360 360.75921631]
[229.66664124 368.23379517]
[235.36595154 382.10888672]
[241.50071716 388.83013916]
[241.04956055 396.18164062]
[246.58460999 410.12307739]
[258.86816406 420.09423828]
[256.37332153 434.77841187]
[261.90835571 448.71984863]
[267.44338989 462.66128540]
[280.30429077 463.30761719]
[291.92819214 468.73956299]
[300.61126709 478.12207031]
[305.09539795 490.04385376]
[304.75048828 502.72976685]
[299.66271973 514.30493164]
[290.61660767 523.07189941]
[295.82083130 537.14019775]
[301.02505493 551.20843506]
[315.81903076 555.50317383]
[325.13848877 567.54486084]
[325.57522583 582.58721924]
[317.17123413 594.85552979]
[322.37545776 608.92376709]
[327.57968140 622.99206543]
[332.78390503 637.06030273]
[337.98812866 651.12860107]
[343.19235229 665.19683838]
[357.98629761 669.49157715]
[367.30575562 681.53320312]
[367.74249268 696.57562256]
[359.33853149 708.84393311]
[364.54275513 722.91217041]
[369.74697876 736.98046875]
[374.95120239 751.04870605]
[386.99581909 761.30725098]
[384.15484619 775.92840576]
[389.35903931 789.99664307]
[405.39413452 797.02923584]
[411.25051880 813.17083740]
[403.75619507 828.24340820]
[409.12619019 842.24926758]
[436.43075562 847.64422607]
[449.37942505 878.14727783]
[460.88272095 887.77398682]
[472.38604736 897.40075684]
[483.88934326 907.02746582]
[499.25311279 904.11389160]
[512.86993408 911.80261230]
[518.31030273 926.46331787]
[513.00555420 941.17358398]
[499.46035767 948.98779297]
[484.07034302 946.21618652]
[474.10220337 934.16754150]
[474.26263428 918.53076172]
[462.75930786 908.90405273]
[451.25601196 899.27734375]
[439.75268555 889.65057373]
[433.17782593 893.25909424]
[440.39483643 906.40881348]
[447.61181641 919.55853271]
[454.82879639 932.70825195]
[465.75592041 942.98431396]
[459.35928345 956.55206299]
[444.47897339 954.66094971]
[441.67907715 939.92523193]
[434.46209717 926.77551270]
[427.24511719 913.62579346]
[420.02810669 900.47607422]
[413.45324707 904.08459473]
[415.39651489 918.95819092]
[417.33978271 933.83178711]
[419.28302002 948.70532227]
[421.22628784 963.57891846]
[436.02746582 966.85015869]
[448.81555176 974.98895264]
[458.04632568 987.01263428]
[462.60510254 1001.46923828]
[461.94140625 1016.61309814]
[456.13537598 1030.61547852]
[445.88809204 1041.78540039]
[432.43701172 1048.77429199]
[417.40640259 1050.73803711]
[402.61126709 1047.43957520]
[389.83822632 1039.27722168]
[380.62963867 1027.23657227]
[376.09750366 1012.77160645]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 252]
[4 251]
[5 250]
[6 249]
[7 248]
[15 220]
[16 219]
[20 216]
[21 215]
[23 213]
[24 212]
[25 211]
[26 210]
[30 206]
[31 205]
[32 204]
[33 203]
[34 202]
[35 201]
[39 197]
[40 196]
[41 195]
[46 188]
[47 187]
[48 186]
[50 184]
[51 183]
[52 181]
[53 180]
[55 175]
[56 174]
[59 172]
[60 171]
[61 170]
[62 169]
[65 164]
[66 163]
[67 162]
[68 161]
[70 159]
[71 158]
[72 157]
[73 156]
[74 124]
[75 123]
[76 122]
[77 121]
[80 118]
[81 117]
[82 116]
[83 115]
[84 114]
[85 113]
[88 109]
[89 108]
[90 107]
[91 106]
[92 105]
[93 104]
[95 103]
[96 102]
[97 101]
[127 155]
[128 154]
[129 153]
[130 152]
[131 151]
[132 150]
[137 146]
[138 145]
[222 236]
[223 235]
[224 234]
[225 233]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
