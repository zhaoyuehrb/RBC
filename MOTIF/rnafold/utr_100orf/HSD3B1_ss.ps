%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:02:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAAAUGAGGUGAGAAGUACGUCCACUCUUCUGUCCAGCUUUUAACAAUCUAACUAAUGCCCUCUCCAGGGUCACCCUAGAAUCAGAUCUGCUCCCCAGCAUCUUCUGUUUCCUGGUGAGUGAUUCCUGCUACUUUGGAUGGCCAUGACGGGCUGGAGCUGCCUUGUGACAGGAGCAGGAGGGUUUCUGGGACAGAGGAUCAUCCGCCUCUUGGUGAAGGAGAAGGAGCUGAAGGAGAUCAGGG\
) } def
/len { sequence length } bind def

/coor [
[114.35247040 130.23403931]
[89.72639465 135.99844360]
[82.56060028 149.17613220]
[75.39479828 162.35380554]
[81.89890289 176.31814575]
[78.96748352 191.26004028]
[67.93038177 201.48973083]
[53.16277695 203.23782349]
[45.99697876 216.41551208]
[38.83118057 229.59320068]
[31.74967384 242.81636047]
[24.75274467 256.08447266]
[17.75581551 269.35260010]
[16.52650452 278.38003540]
[10.58387375 282.74462891]
[3.41807604 295.92233276]
[8.13685322 311.00570679]
[0.73404634 324.96902466]
[-14.39839172 329.52807617]
[-28.28265190 321.97805786]
[-32.68145370 306.79824829]
[-24.98505974 292.99459839]
[-9.75960732 288.75653076]
[-2.59381032 275.57885742]
[4.48769712 262.35568237]
[11.48462677 249.08755493]
[18.48155594 235.81944275]
[18.82079697 228.45401001]
[25.65349770 222.42739868]
[32.81929398 209.24971008]
[39.98509216 196.07203674]
[33.42520142 182.72639465]
[36.01222610 167.90171814]
[46.96051025 157.31925964]
[62.21711731 155.18801880]
[69.38291168 142.01033020]
[76.54871368 128.83264160]
[73.13525391 122.15444946]
[60.52895355 130.28349304]
[47.92265701 138.41253662]
[35.31636047 146.54156494]
[22.71006393 154.67060852]
[10.10376644 162.79965210]
[-2.50253010 170.92868042]
[-15.10882664 179.05772400]
[-25.03369713 190.30480957]
[-39.73744202 193.27127075]
[-53.24665070 186.75196838]
[-60.07319260 173.39538574]
[-57.44377899 158.62763977]
[-46.42660904 148.44815063]
[-31.49872017 146.99205017]
[-17.52628326 141.53576660]
[-3.55384779 136.07948303]
[10.41858768 130.62319946]
[24.39102364 125.16691589]
[38.36346054 119.71063232]
[52.33589554 114.25434875]
[66.30833435 108.79805756]
[62.89487076 102.11986542]
[48.01702118 100.20946503]
[33.13917542 98.29905701]
[18.26132774 96.38865662]
[3.38347888 94.47825623]
[-11.53034687 101.29806519]
[-24.73472786 91.57302856]
[-22.64612961 75.30742645]
[-7.41312313 69.23391724]
[5.29388142 79.60041046]
[20.17173004 81.51081085]
[35.04957581 83.42121124]
[49.92742538 85.33161163]
[64.80527496 87.24201965]
[81.22799683 72.29254913]
[100.94653320 70.51541901]
[115.64698029 79.82466888]
[127.91591644 71.19488525]
[140.18486023 62.56510544]
[152.45379639 53.93532562]
[137.63363647 51.61957932]
[127.68827820 40.39060593]
[127.17974091 25.39922905]
[136.34130859 13.52211571]
[150.97047424 10.20739841]
[164.35673523 16.97556496]
[170.35969543 30.72200012]
[166.22586060 45.14093399]
[179.21624756 37.64093399]
[192.20663452 30.14093208]
[205.19700623 22.64093208]
[218.18739319 15.14093208]
[226.27003479 1.54014742]
[241.16082764 1.87721002]
[254.15121460 -5.62278986]
[256.34628296 -16.24620819]
[263.86132812 -23.76217651]
[274.05508423 -25.86942291]
[283.52648926 -22.11063576]
[296.70416260 -29.27643394]
[309.88183594 -36.44223022]
[323.05953979 -43.60802841]
[331.48687744 -56.99795914]
[346.36422729 -56.28071594]
[359.54190063 -63.44651031]
[372.71957397 -70.61231232]
[385.89727783 -77.77810669]
[399.07495117 -84.94390106]
[412.25262451 -92.10970306]
[420.67999268 -105.49962616]
[435.55731201 -104.78238678]
[448.73501587 -111.94818115]
[461.91268921 -119.11398315]
[475.09036255 -126.27977753]
[488.22204590 -133.52957153]
[501.30712891 -140.86306763]
[514.20068359 -148.52835083]
[526.89422607 -156.52041626]
[539.58782959 -164.51248169]
[552.28143311 -172.50454712]
[559.83715820 -186.40493774]
[574.72998047 -186.63847351]
[587.42352295 -194.63053894]
[600.11712646 -202.62260437]
[612.81066895 -210.61466980]
[625.50427246 -218.60673523]
[638.19787598 -226.59878540]
[650.89141846 -234.59085083]
[663.53369141 -242.66380310]
[676.12420654 -250.81732178]
[688.71466064 -258.97082520]
[701.25280762 -267.20458984]
[713.73815918 -275.51821899]
[711.43023682 -282.49221802]
[710.74493408 -289.94149780]
[711.77783203 -297.48669434]
[714.53558350 -304.72979736]
[718.93237305 -311.27539062]
[724.79150391 -316.75183105]
[731.85205078 -320.83239746]
[739.78009033 -323.25424194]
[748.18475342 -323.83456421]
[756.63690186 -322.48306274]
[765.73028564 -334.41244507]
[774.82366943 -346.34185791]
[783.91705322 -358.27124023]
[781.55603027 -373.89816284]
[791.00354004 -386.56781006]
[806.65460205 -388.76345825]
[819.22363281 -379.18249512]
[821.25366211 -363.50912476]
[811.54034424 -351.04208374]
[795.84643555 -349.17785645]
[786.75305176 -337.24847412]
[777.65966797 -325.31906128]
[768.56628418 -313.38967896]
[777.27423096 -301.17608643]
[791.51623535 -305.88415527]
[805.75817871 -310.59222412]
[820.00018311 -315.30029297]
[834.24212646 -320.00836182]
[848.48413086 -324.71643066]
[855.63519287 -338.55480957]
[870.14562988 -343.12655640]
[883.29431152 -336.22387695]
[897.53631592 -340.93194580]
[911.77832031 -345.64001465]
[926.02026367 -350.34808350]
[940.26226807 -355.05615234]
[945.87756348 -369.65072632]
[959.58532715 -377.17611694]
[974.91314697 -374.07904053]
[984.62371826 -361.82180786]
[984.13195801 -346.19198608]
[973.67010498 -334.56942749]
[958.17791748 -332.44198608]
[944.97033691 -340.81414795]
[930.72833252 -336.10607910]
[916.48638916 -331.39801025]
[902.24438477 -326.68994141]
[888.00238037 -321.98187256]
[881.55853271 -308.60235596]
[867.18218994 -303.62481689]
[853.19219971 -310.47445679]
[838.95019531 -305.76638794]
[824.70825195 -301.05831909]
[810.46624756 -296.35025024]
[796.22424316 -291.64218140]
[781.98229980 -286.93411255]
[769.88861084 -261.53604126]
[744.84930420 -252.48707581]
[722.05181885 -263.03286743]
[709.56646729 -254.71923828]
[705.74981689 -248.41069031]
[696.86816406 -246.38035583]
[684.27770996 -238.22683716]
[671.68719482 -230.07333374]
[667.79034424 -223.81402588]
[658.88348389 -221.89727783]
[646.18988037 -213.90521240]
[633.49633789 -205.91314697]
[620.80273438 -197.92108154]
[608.10919189 -189.92903137]
[595.41558838 -181.93696594]
[582.72204590 -173.94490051]
[576.07415771 -160.61614990]
[560.27349854 -159.81095886]
[547.57989502 -151.81889343]
[534.88629150 -143.82682800]
[522.19274902 -135.83477783]
[521.43420410 -133.15885925]
[519.58233643 -130.61843872]
[516.68212891 -128.62698364]
[512.92584229 -127.57456207]
[508.64062500 -127.77796936]
[495.55554199 -120.44447327]
[491.26718140 -114.44658661]
[482.25616455 -113.10209656]
[469.07849121 -105.93629456]
[455.90081787 -98.77050018]
[442.72311401 -91.60470581]
[435.23831177 -78.72731781]
[419.41842651 -78.93201447]
[406.24075317 -71.76622009]
[393.06307983 -64.60042572]
[379.88537598 -57.43462372]
[366.70770264 -50.26882935]
[353.53002930 -43.10303116]
[346.04522705 -30.22564697]
[330.22534180 -30.43034363]
[317.04763794 -23.26454735]
[303.86996460 -16.09874916]
[290.69229126 -8.93295288]
[281.80514526 8.25482082]
[261.65121460 7.36759090]
[248.66082764 14.86759090]
[241.50733948 27.93192482]
[225.68739319 28.13131332]
[212.69700623 35.63131332]
[199.70663452 43.13131332]
[186.71624756 50.63131332]
[173.72586060 58.13131332]
[161.08357239 66.20426941]
[148.81463623 74.83404541]
[136.54570007 83.46382904]
[124.27675629 92.09360504]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 37]
[3 36]
[4 35]
[8 31]
[9 30]
[10 29]
[11 27]
[12 26]
[13 25]
[15 24]
[16 23]
[60 73]
[61 72]
[62 71]
[63 70]
[64 69]
[76 245]
[77 244]
[78 243]
[79 242]
[87 241]
[88 240]
[89 239]
[90 238]
[91 237]
[93 235]
[94 234]
[98 232]
[99 231]
[100 230]
[101 229]
[103 227]
[104 226]
[105 225]
[106 224]
[107 223]
[108 222]
[110 220]
[111 219]
[112 218]
[113 217]
[114 215]
[115 214]
[116 209]
[117 208]
[118 207]
[119 206]
[121 204]
[122 203]
[123 202]
[124 201]
[125 200]
[126 199]
[127 198]
[128 196]
[129 195]
[130 194]
[131 192]
[132 191]
[142 155]
[143 154]
[144 153]
[145 152]
[156 188]
[157 187]
[158 186]
[159 185]
[160 184]
[161 183]
[164 180]
[165 179]
[166 178]
[167 177]
[168 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
