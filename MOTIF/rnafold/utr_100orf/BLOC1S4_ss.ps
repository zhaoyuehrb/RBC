%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:59:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGGCGUGAGCGCGCGUGCGUGCGUGUGCGGGUGCGUGAGCGUGAGCGCGCGGAGGCCGGAAGCGAGCGCUGCGCAGUCGGGUGGUCGCGGGCCAUGGAGGGUAGCUUUUCGGAUGGCGGAGCGCUGCCGGAGGGGCUCGCGGAAGAGGCCGAGCCGCAGGGCGCCGCCUGGAGCGGGGACAGUGGCACUGUUU\
) } def
/len { sequence length } bind def

/coor [
[92.41104889 144.93457031]
[85.98730469 143.36302185]
[79.85865021 140.87828064]
[74.15416718 137.53265381]
[68.99398041 133.39662170]
[57.11811829 142.55979919]
[45.24225616 151.72297668]
[33.36639023 160.88615417]
[21.49052811 170.04933167]
[19.33141327 185.47581482]
[7.15706491 194.59939575]
[-7.53641081 192.44593811]
[-19.41227531 201.60913086]
[-31.28813744 210.77230835]
[-43.16400146 219.93548584]
[-55.03986740 229.09866333]
[-61.23924637 243.65469360]
[-76.04228973 245.30371094]
[-87.91815186 254.46688843]
[-99.79401398 263.63006592]
[-111.66987610 272.79324341]
[-123.54574585 281.95642090]
[-135.42160034 291.11959839]
[-147.29747009 300.28277588]
[-146.71525574 315.78894043]
[-155.38644409 328.65710449]
[-169.97682190 333.93923950]
[-184.87605286 329.60421753]
[-194.35510254 317.31896973]
[-194.76907349 301.80743408]
[-185.95878601 289.03408813]
[-171.31198120 283.91055298]
[-156.46064758 288.40692139]
[-144.58477783 279.24374390]
[-132.70892334 270.08056641]
[-120.83306122 260.91738892]
[-108.95719147 251.75421143]
[-97.08132935 242.59103394]
[-85.20546722 233.42784119]
[-79.85552979 219.52722168]
[-64.20304871 217.22279358]
[-52.32718277 208.05961609]
[-40.45131683 198.89643860]
[-28.57545471 189.73326111]
[-16.69959068 180.57008362]
[-15.05554867 165.81092834]
[-3.14226651 156.34898376]
[12.32734776 158.17347717]
[24.20321274 149.01029968]
[36.07907486 139.84712219]
[47.95494080 130.68392944]
[59.83080292 121.52075195]
[54.58267593 103.73815918]
[56.85261154 85.33677673]
[66.26486206 69.36264038]
[81.26139069 58.45999527]
[99.35977936 54.43359375]
[117.56414032 57.94993210]
[125.54462433 45.24906921]
[133.52510071 32.54820633]
[141.50558472 19.84734344]
[142.13577271 13.24577999]
[145.50588989 8.65039158]
[149.95092773 6.87303925]
[158.33438110 -5.56551123]
[166.71784973 -18.00406075]
[167.56356812 -36.39303970]
[183.61154175 -43.48131561]
[191.79457092 -56.05263519]
[192.83850098 -71.83936310]
[206.26622009 -78.28497314]
[214.44923401 -90.85629272]
[222.63226318 -103.42761230]
[230.81529236 -115.99893951]
[238.99830627 -128.57025146]
[234.71260071 -141.34712219]
[238.51649475 -154.07255554]
[248.80509949 -162.16067505]
[261.68008423 -162.83209229]
[270.06353760 -175.27064514]
[278.44702148 -187.70919800]
[286.83047485 -200.14773560]
[278.75399780 -215.74363708]
[279.67654419 -233.19335938]
[289.25445557 -247.70217896]
[304.77819824 -255.32910156]
[321.93829346 -254.05718994]
[329.91876221 -266.75805664]
[337.89926147 -279.45892334]
[345.87973022 -292.15975952]
[353.86019897 -304.86062622]
[361.84069824 -317.56149292]
[369.82116699 -330.26235962]
[377.80166626 -342.96322632]
[385.78213501 -355.66409302]
[377.80847168 -367.34112549]
[374.89874268 -381.13397217]
[377.46032715 -394.95162964]
[385.07360840 -406.71218872]
[396.56048584 -414.65655518]
[410.16641235 -417.61145020]
[423.82846069 -415.16265869]
[432.01147461 -427.73397827]
[440.19448853 -440.30529785]
[448.37750244 -452.87661743]
[456.56054688 -465.44793701]
[464.74356079 -478.01925659]
[465.78750610 -493.80596924]
[479.21520996 -500.25158691]
[487.39822388 -512.82293701]
[495.58126831 -525.39422607]
[503.76428223 -537.96557617]
[511.94729614 -550.53686523]
[510.04867554 -566.46716309]
[521.42175293 -577.78228760]
[537.34216309 -575.80224609]
[545.59704590 -562.04589844]
[539.85406494 -547.06604004]
[524.51861572 -542.35382080]
[516.33563232 -529.78253174]
[508.15258789 -517.21118164]
[499.96954346 -504.63989258]
[491.78652954 -492.06857300]
[491.32791138 -477.18103027]
[477.31488037 -469.83624268]
[469.13186646 -457.26489258]
[460.94885254 -444.69357300]
[452.76580811 -432.12225342]
[444.58279419 -419.55093384]
[436.39978027 -406.97961426]
[444.94207764 -393.48159790]
[446.75234985 -377.55200195]
[441.41806030 -362.37164307]
[429.95846558 -350.99401855]
[414.63015747 -345.73107910]
[398.48300171 -347.68359375]
[390.50253296 -334.98275757]
[382.52203369 -322.28189087]
[374.54156494 -309.58102417]
[366.56106567 -296.88015747]
[358.58059692 -284.17929077]
[350.60009766 -271.47842407]
[342.61962891 -258.77755737]
[334.63916016 -246.07670593]
[341.71661377 -235.59478760]
[344.30938721 -223.16807556]
[341.99700928 -210.63859558]
[335.08877563 -199.87736511]
[324.58291626 -192.50488281]
[312.02258301 -189.64727783]
[299.26901245 -191.76428223]
[290.88555908 -179.32572937]
[282.50210571 -166.88717651]
[274.11862183 -154.44862366]
[278.03820801 -138.09971619]
[268.74285889 -123.68746185]
[251.56962585 -120.38723755]
[243.38661194 -107.81591034]
[235.20358276 -95.24459076]
[227.02056885 -82.67327118]
[218.83753967 -70.10195160]
[218.37890625 -55.21440506]
[204.36589050 -47.86961365]
[196.18286133 -35.29829025]
[198.37687683 -23.39443970]
[191.65179443 -12.85137367]
[179.15640259 -9.62059784]
[170.77293396 2.81795263]
[162.38946533 15.25650311]
[154.20645142 27.82782555]
[146.22596741 40.52868652]
[138.24548340 53.22954941]
[130.26499939 65.93041229]
[139.60235596 77.45314026]
[144.74513245 91.36396790]
[145.14862061 106.18950653]
[140.77008057 120.35946655]
[132.07328796 132.37300110]
[119.97937775 140.95768738]
[124.24729156 155.33769226]
[128.51521301 169.71771240]
[132.78312683 184.09773254]
[137.05104065 198.47775269]
[141.31895447 212.85777283]
[145.58686829 227.23779297]
[155.88996887 240.70190430]
[145.80421448 254.32958984]
[129.91708374 248.41052246]
[131.20684814 231.50570679]
[126.93893433 217.12568665]
[122.67102051 202.74566650]
[118.40310669 188.36564636]
[114.13519287 173.98562622]
[109.86727905 159.60560608]
[105.59936523 145.22560120]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 52]
[6 51]
[7 50]
[8 49]
[9 48]
[12 45]
[13 44]
[14 43]
[15 42]
[16 41]
[18 39]
[19 38]
[20 37]
[21 36]
[22 35]
[23 34]
[24 33]
[58 173]
[59 172]
[60 171]
[61 170]
[64 169]
[65 168]
[66 167]
[68 164]
[69 163]
[71 161]
[72 160]
[73 159]
[74 158]
[75 157]
[79 154]
[80 153]
[81 152]
[82 151]
[87 144]
[88 143]
[89 142]
[90 141]
[91 140]
[92 139]
[93 138]
[94 137]
[95 136]
[102 130]
[103 129]
[104 128]
[105 127]
[106 126]
[107 125]
[109 123]
[110 122]
[111 121]
[112 120]
[113 119]
[179 195]
[180 194]
[181 193]
[182 192]
[183 191]
[184 190]
[185 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
