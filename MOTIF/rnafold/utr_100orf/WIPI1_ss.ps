%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:44:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCGGGGCAGGACCGGCGACCCGGCCCGUGGAGCCGGCGCGGGCGGGCUGCUGAGGUGGCUGUCGCCGGCUCCGAGCUGCGGCUUCCCGGGCCGAGCCCCCGAUGGAGGCCGAGGCCGCGGACGCUCCCCCGGGCGGGGUUGAGUCGGCGCUCAGCUGCUUCUCUUUCAACCAGGACUGCACAUCCCUAGCAACUGGAACUA\
) } def
/len { sequence length } bind def

/coor [
[146.21220398 291.45181274]
[142.77793884 276.85025024]
[139.34368896 262.24865723]
[125.04282379 258.08322144]
[114.67810822 247.24678040]
[111.10549927 232.58038330]
[115.38175964 217.99922180]
[126.45454407 207.44740295]
[123.02028656 192.84584045]
[119.58602905 178.24426270]
[116.15177155 163.64270020]
[106.03321075 157.00749207]
[103.05496216 144.86651611]
[109.34428406 133.60147095]
[106.13529205 118.94874573]
[92.46044159 112.78445435]
[79.35610199 120.08351898]
[66.25177002 127.38258362]
[53.14743423 134.68165588]
[44.85630035 148.15635681]
[29.97246361 147.59002686]
[16.86812782 154.88909912]
[3.76379228 162.18815613]
[-9.34054375 169.48722839]
[-15.31905556 176.40095520]
[-22.70335770 176.79602051]
[-35.91854095 183.89242554]
[-49.13372421 190.98883057]
[-62.34890747 198.08523560]
[-75.56408691 205.18164062]
[-88.77927399 212.27804565]
[-91.79032135 227.62300110]
[-103.99285889 237.40216064]
[-119.62522125 236.99810791]
[-131.30628967 226.60162354]
[-133.52061462 211.12161255]
[-125.22265625 197.86726379]
[-110.33045959 193.09686279]
[-95.87567139 199.06285095]
[-82.66049194 191.96646118]
[-69.44531250 184.87005615]
[-56.23012543 177.77365112]
[-43.01494217 170.67724609]
[-29.79976082 163.58084106]
[-16.63961029 156.38288879]
[-3.53527474 149.08383179]
[9.56906128 141.78475952]
[22.67339706 134.48568726]
[30.02722168 121.53306580]
[45.84836578 121.57731628]
[58.95270157 114.27825165]
[72.05703735 106.97917938]
[85.16137695 99.68011475]
[94.01548767 87.57207489]
[96.99845886 72.87167358]
[99.98143005 58.17126465]
[102.96440887 43.47086334]
[105.94738007 28.77045822]
[108.93035126 14.07005501]
[111.91333008 -0.63034856]
[114.89630127 -15.33075237]
[117.87927246 -30.03115654]
[120.86224365 -44.73155975]
[114.60540009 -62.04740524]
[126.72489166 -74.73604584]
[129.48114014 -89.48064423]
[132.23738098 -104.22524261]
[134.99362183 -118.96983337]
[137.74986267 -133.71443176]
[140.50610352 -148.45903015]
[143.26234436 -163.20362854]
[146.01858521 -177.94822693]
[148.77484131 -192.69282532]
[134.96305847 -213.91491699]
[151.12693787 -238.32974243]
[150.89595032 -253.32797241]
[150.66496277 -268.32617188]
[150.43397522 -283.32440186]
[149.85661316 -298.31329346]
[148.93319702 -313.28485107]
[148.00978088 -328.25637817]
[147.08638000 -343.22793579]
[146.16296387 -358.19949341]
[145.23954773 -373.17105103]
[144.31613159 -388.14257812]
[143.39271545 -403.11413574]
[142.46929932 -418.08569336]
[139.57792664 -422.44497681]
[138.73588562 -427.01980591]
[139.68132019 -430.99215698]
[141.86528015 -433.76699829]
[141.63429260 -448.76522827]
[141.40328979 -463.76342773]
[141.17230225 -478.76165771]
[132.93408203 -485.87454224]
[130.03320312 -496.13677979]
[133.19586182 -506.09118652]
[141.14646912 -512.52081299]
[141.37745667 -527.51904297]
[130.19700623 -538.68920898]
[130.27330017 -554.49334717]
[141.56106567 -565.55505371]
[157.36347961 -565.31164551]
[168.30525208 -553.90759277]
[167.89482117 -538.10864258]
[156.37568665 -527.28802490]
[156.14469910 -512.28979492]
[166.76742554 -496.13677979]
[156.17053223 -478.99264526]
[156.40151978 -463.99444580]
[156.63250732 -448.99621582]
[156.86349487 -433.99798584]
[157.44085693 -419.00909424]
[158.36427307 -404.03756714]
[159.28768921 -389.06600952]
[160.21109009 -374.09445190]
[161.13450623 -359.12289429]
[162.05792236 -344.15136719]
[162.98133850 -329.17980957]
[163.90475464 -314.20825195]
[164.82817078 -299.23669434]
[167.21910095 -296.63806152]
[168.46730042 -292.75021362]
[167.97966003 -288.12417603]
[165.43218994 -283.55538940]
[165.66317749 -268.55718994]
[165.89416504 -253.55895996]
[166.12516785 -238.56072998]
[179.34034729 -231.46432495]
[191.97048950 -239.55627441]
[204.60063171 -247.64820862]
[217.23077393 -255.74014282]
[224.28100586 -270.54644775]
[240.64793396 -271.57400513]
[249.49465942 -257.76574707]
[241.72042847 -243.32644653]
[225.32270813 -243.11000061]
[212.69256592 -235.01806641]
[200.06242371 -226.92613220]
[187.43228149 -218.83418274]
[185.05238342 -203.69746399]
[175.73477173 -193.26254272]
[163.51942444 -189.93656921]
[160.76318359 -175.19198608]
[158.00694275 -160.44738770]
[155.25070190 -145.70278931]
[152.49446106 -130.95819092]
[149.73822021 -116.21359253]
[146.98197937 -101.46899414]
[144.22573853 -86.72440338]
[141.46948242 -71.97980499]
[148.04577637 -61.82285690]
[145.86627197 -49.51339722]
[135.56265259 -41.74858475]
[132.57968140 -27.04818344]
[129.59671021 -12.34777927]
[126.61373138 2.35262465]
[123.63076019 17.05302811]
[120.64778137 31.75343132]
[117.66481018 46.45383453]
[114.68183899 61.15423965]
[111.69886780 75.85464478]
[108.71588898 90.55504608]
[111.83150482 75.88217926]
[121.04153442 64.04261780]
[134.49703979 57.41318130]
[149.49678040 57.32475662]
[163.02951050 63.79509735]
[172.37847900 75.52526093]
[175.66685486 90.16036987]
[172.23449707 104.76239014]
[162.77044678 116.39990234]
[149.17465210 122.73664856]
[134.17651367 122.50050354]
[120.78801727 115.73974609]
[123.99700928 130.39247131]
[136.71496582 143.70562744]
[130.75334167 160.20843506]
[134.18759155 174.81001282]
[137.62185669 189.41157532]
[141.05612183 204.01315308]
[155.67141724 208.52317810]
[165.99874878 219.66961670]
[169.33805847 234.39086914]
[164.89016724 248.71121216]
[153.94525146 258.81442261]
[157.37951660 273.41598511]
[160.81376648 288.01754761]
[175.86950684 289.77844238]
[189.41362000 296.58526611]
[199.81059265 307.61605835]
[205.80494690 321.53881836]
[206.67282104 336.67233276]
[202.30943298 351.18908691]
[193.24166870 363.33618164]
[180.56451416 371.64672852]
[165.80879211 375.11724854]
[150.75633240 373.32864380]
[137.22477722 366.49685669]
[126.84815216 355.44689941]
[120.87947083 341.51312256]
[120.03948212 326.37805176]
[124.42961884 311.86935425]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 188]
[2 187]
[3 186]
[8 181]
[9 180]
[10 179]
[11 178]
[14 176]
[15 175]
[16 53]
[17 52]
[18 51]
[19 50]
[21 48]
[22 47]
[23 46]
[24 45]
[26 44]
[27 43]
[28 42]
[29 41]
[30 40]
[31 39]
[54 163]
[55 162]
[56 161]
[57 160]
[58 159]
[59 158]
[60 157]
[61 156]
[62 155]
[63 154]
[65 151]
[66 150]
[67 149]
[68 148]
[69 147]
[70 146]
[71 145]
[72 144]
[73 143]
[75 128]
[76 127]
[77 126]
[78 125]
[79 121]
[80 120]
[81 119]
[82 118]
[83 117]
[84 116]
[85 115]
[86 114]
[87 113]
[91 112]
[92 111]
[93 110]
[94 109]
[98 107]
[99 106]
[129 140]
[130 139]
[131 138]
[132 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
