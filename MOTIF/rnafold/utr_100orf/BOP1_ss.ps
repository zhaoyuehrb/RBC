%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:20:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUGCGCACGCGGCCCGGUCGCUGUCGGAAGCGGCUGUGCGGGUGGCGGCCGGCGCGCGGUGGGGCAUGGCGGGUUCGCGGGGUGCGGGGCGCACGGCGGCGCCGAGCGUGCGGCCGGAGAAGCGGCGGUCUGAGCCCGAACUGGAGCCUGAGCCCGAGCCGGAGC\
) } def
/len { sequence length } bind def

/coor [
[94.28884888 196.28881836]
[94.01003265 181.29141235]
[93.73120880 166.29400635]
[93.45238495 151.29658508]
[85.47984314 138.71534729]
[92.95928192 124.77372742]
[92.68045807 109.77632141]
[88.15140533 95.47640228]
[79.74554443 83.05297852]
[72.31356812 77.67139435]
[71.30140686 70.31958008]
[63.12792587 57.74205780]
[54.95444489 45.16452789]
[38.07153702 44.52344131]
[25.01754570 34.06126022]
[20.79961205 18.04413033]
[26.88452148 2.81771445]
[18.47865677 -9.60570908]
[10.07279301 -22.02913094]
[1.66692841 -34.45255661]
[-6.73893642 -46.87597656]
[-15.14480114 -59.29940033]
[-23.55066490 -71.72282410]
[-31.95652962 -84.14624786]
[-40.47750092 -96.49100494]
[-49.11284256 -108.75603485]
[-57.86180878 -120.94026947]
[-66.72364044 -133.04266357]
[-75.58547974 -145.14505005]
[-84.44731140 -157.24743652]
[-97.07618713 -159.99636841]
[-104.20465088 -170.29278564]
[-102.44786072 -182.28668213]
[-111.08319855 -194.55169678]
[-125.35436249 -201.38139343]
[-126.35476685 -216.24235535]
[-134.99011230 -228.50738525]
[-143.62545776 -240.77241516]
[-152.26078796 -253.03742981]
[-160.89613342 -265.30245972]
[-169.53147888 -277.56747437]
[-178.16682434 -289.83251953]
[-186.80216980 -302.09753418]
[-202.04467773 -300.82742310]
[-215.78565979 -307.31448364]
[-224.37757874 -319.72598267]
[-225.59527588 -334.67166138]
[-219.21153259 -348.12948608]
[-227.84686279 -360.39453125]
[-236.48220825 -372.65954590]
[-250.75337219 -379.48922729]
[-251.75378418 -394.35021973]
[-260.38912964 -406.61523438]
[-274.66027832 -413.44491577]
[-275.66067505 -428.30587769]
[-284.29602051 -440.57092285]
[-292.93136597 -452.83593750]
[-302.01663208 -464.77151489]
[-311.53927612 -476.36114502]
[-321.06192017 -487.95077515]
[-335.80099487 -493.70138550]
[-337.90264893 -508.44699097]
[-347.42529297 -520.03662109]
[-356.94790649 -531.62622070]
[-371.67492676 -540.02575684]
[-367.68051147 -556.50244141]
[-350.74197388 -557.22534180]
[-345.35827637 -541.14886475]
[-335.83566284 -529.55926514]
[-326.31301880 -517.96960449]
[-312.25503540 -513.04797363]
[-309.47229004 -497.47338867]
[-299.94964600 -485.88378906]
[-290.42700195 -474.29415894]
[-287.61215210 -473.90451050]
[-284.78579712 -472.35357666]
[-282.39953613 -469.63259888]
[-280.89926147 -465.89941406]
[-280.66635132 -461.47128296]
[-272.03100586 -449.20626831]
[-263.39566040 -436.94122314]
[-249.74215698 -430.98883057]
[-248.12409973 -415.25057983]
[-239.48875427 -402.98553467]
[-225.83525085 -397.03314209]
[-224.21717834 -381.29489136]
[-215.58184814 -369.02987671]
[-206.94650269 -356.76483154]
[-192.12429810 -358.23730469]
[-178.46432495 -352.05178833]
[-169.67643738 -339.77825928]
[-168.20217896 -324.65466309]
[-174.53713989 -310.73287964]
[-165.90179443 -298.46786499]
[-157.26644897 -286.20281982]
[-148.63110352 -273.93780518]
[-139.99577332 -261.67279053]
[-131.36042786 -249.40774536]
[-122.72508240 -237.14273071]
[-114.08974457 -224.87770081]
[-100.43624115 -218.92529297]
[-98.81817627 -203.18704224]
[-90.18283081 -190.92201233]
[-73.89360046 -184.43943787]
[-72.34492493 -166.10928345]
[-63.48308563 -154.00688171]
[-54.62125397 -141.90449524]
[-45.75941849 -129.80210876]
[-39.24427032 -126.24873352]
[-36.84781647 -117.39137268]
[-28.21247482 -105.12635040]
[-21.76450539 -101.45248413]
[-19.53310585 -92.55210876]
[-11.12724209 -80.12868500]
[-2.72137761 -67.70526886]
[5.68448687 -55.28184128]
[14.09035110 -42.85841751]
[22.49621582 -30.43499565]
[30.90208054 -18.01157379]
[39.30794525 -5.58815002]
[52.65764236 -6.37827826]
[64.74691010 -0.41181663]
[72.36139679 10.84441185]
[73.41761780 24.50182533]
[67.53196716 36.99104691]
[75.70545197 49.56857300]
[83.87893677 62.14609909]
[92.16896820 74.64711761]
[100.57482910 87.07054138]
[143.34391785 83.78379822]
[155.36341858 92.75773621]
[171.05044556 94.81396484]
[176.61987305 108.62811279]
[188.63937378 117.60205078]
[204.32638550 119.65827942]
[209.89581299 133.47242737]
[221.91531372 142.44636536]
[241.99713135 143.86584473]
[248.93768311 161.88827515]
[261.28244019 170.40925598]
[277.25839233 168.94337463]
[288.26086426 180.61918640]
[285.84973145 196.48002625]
[271.87460327 204.35879517]
[257.05599976 198.21159363]
[252.76147461 182.75401306]
[240.41670227 174.23304749]
[230.52284241 176.97813416]
[220.54898071 173.73559570]
[213.88674927 165.35278320]
[212.94137573 154.46586609]
[200.92187500 145.49192810]
[186.09457397 144.07757568]
[179.66543579 129.62155151]
[167.64593506 120.64761353]
[152.81863403 119.23326874]
[146.38948059 104.77723694]
[134.36997986 95.80329895]
[127.69695282 99.22685242]
[114.35089874 106.07395172]
[107.67787170 109.49749756]
[107.95669556 124.49490356]
[115.94917297 138.14888000]
[108.44979095 151.01776123]
[108.72861481 166.01518250]
[109.00743866 181.01258850]
[109.28626251 196.00999451]
[111.83469391 215.22341919]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 167]
[2 166]
[3 165]
[4 164]
[6 162]
[7 161]
[8 129]
[9 128]
[11 127]
[12 126]
[13 125]
[17 120]
[18 119]
[19 118]
[20 117]
[21 116]
[22 115]
[23 114]
[24 113]
[25 111]
[26 110]
[27 108]
[28 107]
[29 106]
[30 105]
[33 103]
[34 102]
[36 100]
[37 99]
[38 98]
[39 97]
[40 96]
[41 95]
[42 94]
[43 93]
[48 88]
[49 87]
[50 86]
[52 84]
[53 83]
[55 81]
[56 80]
[57 79]
[58 74]
[59 73]
[60 72]
[62 70]
[63 69]
[64 68]
[130 158]
[131 157]
[133 155]
[134 154]
[136 152]
[137 151]
[139 147]
[140 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
