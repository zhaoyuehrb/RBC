%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:57:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGGCGGGUGUGGCCAGGGGUGUGGGUCUGUGAGGGACCGGUCGGAAGGGCGUCGCGCGGCCUCGGGUGACAUGCGGGGGGCGGCGAGCGCGAGUGUCCGCGAGCCGACGCCGCUCCCGGGUAGAGGCGCCCCCCGCACAAAGCCCCGGGCGGGCCGAGGCCCGACUGUAG\
) } def
/len { sequence length } bind def

/coor [
[255.58830261 512.72906494]
[270.40136719 515.08831787]
[264.03451538 501.50659180]
[257.66766357 487.92486572]
[251.30082703 474.34313965]
[235.26823425 469.31964111]
[227.66377258 453.96063232]
[233.61801147 437.53048706]
[227.00416565 424.06732178]
[220.39031982 410.60415649]
[213.77647400 397.14099121]
[207.16262817 383.67779541]
[200.54878235 370.21463013]
[197.30944824 368.73617554]
[194.63754272 365.59530640]
[193.31559753 361.08187866]
[193.96421814 355.82806396]
[188.09764099 342.02285767]
[182.23107910 328.21768188]
[176.36450195 314.41247559]
[170.49794006 300.60726929]
[164.63136292 286.80209351]
[158.76478577 272.99688721]
[148.94218445 270.02169800]
[142.25376892 261.94918823]
[141.10913086 251.30718994]
[146.12986755 241.60598755]
[140.77139282 227.59574890]
[135.41293335 213.58551025]
[130.05447388 199.57527161]
[115.64820099 195.88781738]
[106.06227875 184.28720093]
[105.13445282 169.08876038]
[113.42973328 156.10821533]
[108.07127380 142.09797668]
[102.71280670 128.08773804]
[97.35434723 114.07749939]
[86.62120819 105.11695862]
[88.63541412 91.28096771]
[83.27694702 77.27072144]
[77.91848755 63.26048279]
[71.90811920 56.33194351]
[72.59265900 48.94511414]
[67.49097443 34.83934021]
[55.90861893 31.97010803]
[47.24983597 23.93535995]
[43.59893417 12.82772255]
[45.75768280 1.45871496]
[53.07254028 -7.35276365]
[48.48942947 -21.63544846]
[43.90631866 -35.91813278]
[38.28443146 -43.16545105]
[39.37250900 -50.50370407]
[35.05102158 -64.86771393]
[30.72953606 -79.23171997]
[26.40804863 -93.59573364]
[22.08656311 -107.95973969]
[16.59798050 -115.30852509]
[17.81990242 -122.62567902]
[13.76148224 -137.06622314]
[9.70306206 -151.50675964]
[5.51293325 -165.90963745]
[1.19144690 -180.27365112]
[-3.13003969 -194.63764954]
[-7.45152617 -209.00166321]
[-18.83658600 -219.98760986]
[-15.09405899 -234.40435791]
[-19.41554451 -248.76837158]
[-34.27947235 -252.37544250]
[-45.26964951 -262.86889648]
[-49.50368500 -277.35818481]
[-45.94058609 -291.92391968]
[-35.63454819 -302.67803955]
[-39.95603561 -317.04205322]
[-44.27751923 -331.40606689]
[-57.67135239 -340.23693848]
[-58.97443771 -356.22698975]
[-47.18716049 -367.10998535]
[-31.35170937 -364.53744507]
[-23.61568832 -350.48278809]
[-29.91351128 -335.72753906]
[-25.59202385 -321.36352539]
[-21.27053833 -306.99951172]
[-6.74154663 -303.71713257]
[4.26696539 -293.53536987]
[8.73050880 -279.11514282]
[5.35467958 -264.29959106]
[-5.05153656 -253.08985901]
[-0.73004991 -238.72584534]
[10.34590912 -228.76731873]
[6.91248274 -213.32315063]
[11.23396969 -198.95913696]
[15.55545616 -184.59513855]
[19.87694168 -170.23112488]
[24.83340645 -164.71141052]
[24.14360237 -155.56518555]
[28.20202255 -141.12464905]
[32.26044464 -126.68409729]
[36.45057297 -112.28122711]
[40.77205658 -97.91721344]
[45.09354401 -83.55320740]
[49.41503143 -69.18920135]
[53.73651886 -54.82518768]
[58.18900299 -40.50124359]
[62.77211380 -26.21855927]
[67.35522461 -11.93587494]
[84.09558868 -4.59430456]
[90.29498291 12.93987751]
[81.59674835 29.73765564]
[86.69843292 43.84342575]
[91.92872620 57.90201950]
[97.28719330 71.91226196]
[102.64565277 85.92250061]
[113.37879181 94.88304138]
[111.36458588 108.71903229]
[116.72305298 122.72927856]
[122.08151245 136.73951721]
[127.43997955 150.74975586]
[142.28022766 154.88171387]
[151.73141479 166.82023621]
[152.33338928 181.85691833]
[144.06471252 194.21679688]
[149.42317200 208.22705078]
[154.78164673 222.23728943]
[160.14010620 236.24752808]
[176.35072327 248.18922424]
[172.56997681 267.13034058]
[178.43655396 280.93551636]
[184.30313110 294.74072266]
[190.16969299 308.54589844]
[196.03627014 322.35110474]
[201.90283203 336.15628052]
[207.76940918 349.96148682]
[214.01196289 363.60076904]
[220.62580872 377.06396484]
[227.23965454 390.52713013]
[233.85350037 403.99029541]
[240.46734619 417.45349121]
[247.08119202 430.91665649]
[260.26535034 433.77804565]
[269.25430298 443.57546997]
[270.92272949 456.57025146]
[264.88253784 467.97628784]
[271.24938965 481.55801392]
[277.61624146 495.13973999]
[283.98309326 508.72146606]
[290.96328735 521.99841309]
[298.54223633 534.94287109]
[306.12118530 547.88732910]
[319.77093506 555.88702393]
[319.52453613 570.77960205]
[327.10348511 583.72412109]
[334.68243408 596.66857910]
[342.26138306 609.61303711]
[349.84033203 622.55755615]
[364.35198975 630.19586182]
[364.72238159 646.59082031]
[350.57049561 654.87670898]
[336.45455933 646.52966309]
[336.89584351 630.13647461]
[329.31689453 617.19201660]
[321.73794556 604.24749756]
[314.15899658 591.30303955]
[306.58004761 578.35858154]
[293.47241211 571.28472900]
[293.17669678 555.46630859]
[285.59774780 542.52185059]
[278.01879883 529.57733154]
[271.56448364 543.11773682]
[256.99755859 546.69604492]
[245.00407410 537.68737793]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 146]
[3 145]
[4 144]
[5 143]
[8 139]
[9 138]
[10 137]
[11 136]
[12 135]
[13 134]
[17 133]
[18 132]
[19 131]
[20 130]
[21 129]
[22 128]
[23 127]
[27 125]
[28 124]
[29 123]
[30 122]
[34 118]
[35 117]
[36 116]
[37 115]
[39 113]
[40 112]
[41 111]
[43 110]
[44 109]
[49 106]
[50 105]
[51 104]
[53 103]
[54 102]
[55 101]
[56 100]
[57 99]
[59 98]
[60 97]
[61 96]
[62 94]
[63 93]
[64 92]
[65 91]
[67 89]
[68 88]
[73 83]
[74 82]
[75 81]
[147 168]
[148 167]
[149 166]
[151 164]
[152 163]
[153 162]
[154 161]
[155 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
