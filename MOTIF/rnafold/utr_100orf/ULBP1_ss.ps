%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:02:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUUUAUAAACAGCCGUGGUGUGAGCCUCGAAGGGAACCAUCAGCGCCUCCUGUCCACGGAGCUCCAGGUCUACAAUGGCAGCGGCCGCCAGCCCCGCGUUCCUUCUGUGCCUCCCGCUUCUGCACCUGCUGUCUGGCUGGUCCCGGGCAGGAUGGGUCGACACACACUGUCUUU\
) } def
/len { sequence length } bind def

/coor [
[76.74795532 346.36175537]
[70.12306976 332.90661621]
[65.66541290 347.22897339]
[61.20775604 361.55130005]
[70.59133148 373.90963745]
[70.88510895 389.42391968]
[61.97611237 402.12863159]
[47.29004669 407.13851929]
[32.47399521 402.52719116]
[23.22503662 390.06781006]
[23.09958076 374.55123901]
[32.14587021 361.94393921]
[46.88542175 357.09365845]
[51.34307861 342.77130127]
[55.80073547 328.44897461]
[53.28533554 318.14227295]
[60.45971680 308.61697388]
[62.84566879 293.80795288]
[65.23162079 278.99893188]
[67.48606110 264.16931152]
[69.60880280 249.32026672]
[71.73154449 234.47123718]
[73.85428619 219.62219238]
[75.84516907 204.75489807]
[77.70404053 189.87052917]
[71.60359955 176.28251648]
[80.99143219 163.54756165]
[82.85029602 148.66319275]
[84.57700348 133.76290894]
[86.17140198 118.84788513]
[81.84102631 104.48654938]
[72.26736450 92.93904114]
[62.69369888 81.39153290]
[53.12003708 69.84402466]
[43.54637527 58.29651260]
[33.97270966 46.74900436]
[33.31769180 61.73469543]
[24.08719063 73.55831146]
[9.70829296 77.82999420]
[-4.48042917 72.96376801]
[-13.21100998 60.76634979]
[-13.24197483 45.76638412]
[-4.56182671 33.53302383]
[9.60668278 28.60825920]
[24.00369644 32.82094955]
[16.16054344 20.03482437]
[8.31739044 7.24870157]
[0.47423726 -5.53742170]
[-16.39050674 -6.62013292]
[-29.16751480 -17.42554092]
[-32.95952606 -33.55320358]
[-26.46762848 -48.61518478]
[-34.53647614 -61.26009369]
[-42.60532379 -73.90499878]
[-52.05651474 -74.70099640]
[-59.95485687 -79.69881439]
[-64.58221436 -87.66065979]
[-65.00210571 -96.72193146]
[-61.24669647 -104.82732391]
[-68.63111877 -117.88375092]
[-76.01554108 -130.94018555]
[-92.08692169 -139.89900208]
[-91.28272247 -157.41624451]
[-98.89771271 -170.33955383]
[-106.51269531 -183.26286316]
[-114.24207306 -196.11808777]
[-122.08522797 -208.90420532]
[-129.92837524 -221.69033813]
[-145.35415649 -221.91110229]
[-158.19915771 -230.45567322]
[-164.36457825 -244.59750366]
[-161.88304138 -259.82397461]
[-151.54641724 -271.27639771]
[-136.65309143 -275.30032349]
[-121.95543671 -270.61172485]
[-112.14345551 -258.70675659]
[-110.34809113 -243.38421631]
[-117.14225769 -229.53347778]
[-109.29910278 -216.74736023]
[-101.45594788 -203.96124268]
[-95.25889587 -199.89094543]
[-93.58938599 -190.87785339]
[-85.97440338 -177.95454407]
[-78.35941315 -165.03121948]
[-66.71281433 -161.69097900]
[-60.26858139 -150.95991516]
[-62.95911407 -138.32460022]
[-55.57469177 -125.26817322]
[-48.19026947 -112.21174622]
[-29.55531883 -103.37903595]
[-29.96041679 -81.97384644]
[-21.89156914 -69.32894135]
[-13.82272148 -56.68403244]
[-0.46170536 -57.11588287]
[11.45987797 -50.83196259]
[18.77113342 -39.38253784]
[19.46775627 -25.70723343]
[13.26036072 -13.38057423]
[21.10351372 -0.59445107]
[28.94666672 12.19167233]
[36.78981781 24.97779655]
[45.52022171 37.17533875]
[55.09388351 48.72285080]
[64.66754913 60.27035904]
[74.24121094 71.81787109]
[83.81487274 83.36537933]
[93.38853455 94.91288757]
[90.16885376 74.95271301]
[107.55500793 55.15890121]
[120.54538727 47.65890121]
[133.53576660 40.15890121]
[146.52615356 32.65890121]
[145.84613037 17.36850739]
[152.36030579 3.51844740]
[164.57176208 -5.70863390]
[179.67439270 -8.19242191]
[194.19772339 -3.36216021]
[204.80439758 7.67219257]
[209.05709839 22.37502289]
[205.97856140 37.36772919]
[196.27621460 49.20509338]
[182.17961121 55.16698074]
[166.92800903 53.88338852]
[154.02615356 45.64928055]
[141.03576660 53.14928055]
[128.04539490 60.64928055]
[115.05500793 68.14928436]
[115.85221100 75.60679626]
[129.56632996 81.68322754]
[117.44660950 90.52181244]
[118.24381256 97.97932434]
[132.52603149 102.56391144]
[146.80824280 107.14849854]
[161.09045410 111.73307800]
[175.37266541 116.31766510]
[189.65487671 120.90225220]
[203.93708801 125.48683167]
[218.21929932 130.07141113]
[232.15911865 122.62447357]
[247.25737000 127.29551697]
[254.55650330 141.31329346]
[249.72610474 156.36131287]
[235.63194275 163.51184082]
[220.63583374 158.52259827]
[213.63471985 144.35363770]
[199.35250854 139.76904297]
[185.07029724 135.18446350]
[170.78807068 130.59988403]
[156.50585938 126.01528931]
[142.22364807 121.43070984]
[127.94144440 116.84612274]
[113.65922546 112.26153564]
[101.08642578 120.44228363]
[99.49201965 135.35729980]
[101.69603729 144.25480652]
[97.73467255 150.52204895]
[95.87580872 165.40643311]
[101.84329224 180.05906677]
[92.58840942 191.72938538]
[90.72954559 206.61376953]
[92.77529907 215.54899597]
[88.70333099 221.74493408]
[86.58058167 236.59397888]
[84.45783997 251.44300842]
[82.33509827 266.29205322]
[84.22193909 275.26217651]
[80.04064941 281.38488770]
[77.65469360 296.19390869]
[75.26874542 311.00292969]
[87.19408417 301.90423584]
[102.10898590 300.30874634]
[115.68907928 306.67907715]
[123.99699402 319.16821289]
[124.62396240 334.15509033]
[117.38819885 347.29449463]
[104.38761902 354.77679443]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 15]
[3 14]
[4 13]
[17 169]
[18 168]
[19 167]
[20 165]
[21 164]
[22 163]
[23 162]
[24 160]
[25 159]
[27 157]
[28 156]
[29 154]
[30 153]
[31 107]
[32 106]
[33 105]
[34 104]
[35 103]
[36 102]
[45 101]
[46 100]
[47 99]
[48 98]
[52 93]
[53 92]
[54 91]
[59 89]
[60 88]
[61 87]
[63 84]
[64 83]
[65 82]
[66 80]
[67 79]
[68 78]
[109 127]
[110 126]
[111 125]
[112 124]
[131 152]
[132 151]
[133 150]
[134 149]
[135 148]
[136 147]
[137 146]
[138 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
