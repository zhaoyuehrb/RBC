%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:33:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCGUCAGGGGCCGACCCGCCGCGCCCCAGCGUUCUCCGCGUACAGGUGGUCUCUUGGGUUCCGGUAAGGCGGCGGCUGCGGAACUCCCGUGGAGGGGCCGGUGGGCCCUCGGGCCUGACGAUGGCAGUGGCCACUGCGGCGGCAGUACUGGCCGCUCUGGGCGGGGCGCUGUGGCUGGCGGCCCGCCGGUUCGUGGGGCCCAGGGUCCAGCGGCUGCGCA\
) } def
/len { sequence length } bind def

/coor [
[125.54921722 159.56808472]
[130.90193176 173.58053589]
[128.21214294 188.33740234]
[118.25974274 199.56013489]
[103.93029022 203.99484253]
[89.37841034 200.35575867]
[78.82324219 189.69796753]
[75.32501984 175.11401367]
[68.00959778 188.20922852]
[60.69417191 201.30444336]
[53.37874603 214.39965820]
[46.06332397 227.49485779]
[38.84073639 240.64151001]
[31.71135521 253.83892822]
[36.47176361 268.90924072]
[29.10754013 282.89294434]
[13.98774815 287.49374390]
[0.08269214 279.98208618]
[-4.35800505 264.81448364]
[3.30024338 250.98963928]
[18.51393509 246.70954895]
[25.64331818 233.51213074]
[26.05656052 226.13911438]
[32.96810913 220.17944336]
[40.28353500 207.08422852]
[47.59895706 193.98901367]
[54.91438293 180.89379883]
[62.22980881 167.79859924]
[61.92631149 156.90579224]
[71.33148956 149.09260559]
[77.12073517 135.25480652]
[82.90997314 121.41701508]
[88.69921875 107.57921600]
[82.13637543 94.09111023]
[67.67531586 90.10639954]
[53.21426392 86.12169647]
[38.75320816 82.13699341]
[24.29215240 78.15228271]
[9.83109760 74.16757965]
[-4.62995768 70.18287659]
[-19.09101295 66.19816589]
[-30.50594902 78.04931641]
[-48.38095093 80.53662109]
[-65.37277985 70.68249512]
[-80.22283173 72.79811096]
[-95.07289124 74.91373444]
[-109.92294312 77.02935028]
[-119.20873260 89.81800842]
[-134.83059692 92.21236420]
[-147.52035522 82.79189301]
[-149.74942017 67.14558411]
[-140.19531250 54.55612946]
[-124.52630615 52.49261856]
[-112.03856659 62.17929840]
[-97.18850708 60.06367874]
[-82.33845520 57.94805908]
[-67.48839569 55.83243942]
[-65.05805969 41.03063202]
[-78.45194244 34.27757645]
[-91.84583282 27.52452087]
[-105.23972321 20.77146530]
[-118.63360596 14.01840878]
[-132.02749634 7.26535225]
[-145.42138672 0.51229614]
[-153.89097595 4.62363768]
[-163.16514587 4.38543797]
[-171.17158508 -0.02275536]
[-176.17921448 -7.50370264]
[-177.17211914 -16.31271362]
[-190.26733398 -23.62813759]
[-203.36254883 -30.94356155]
[-219.74346924 -30.17059708]
[-228.37443542 -44.11471176]
[-220.37666321 -58.43140030]
[-203.97755432 -58.39287567]
[-196.04711914 -44.03877258]
[-182.95190430 -36.72335052]
[-169.85670471 -29.40792656]
[-149.31813049 -31.48306847]
[-138.66833496 -12.88159180]
[-125.27443695 -6.12853575]
[-111.88055420 0.62452066]
[-98.48666382 7.37757683]
[-85.09277344 14.13063335]
[-71.69889069 20.88368988]
[-58.30500031 27.63674545]
[-36.99441147 23.81716919]
[-20.10434723 34.31476593]
[-15.10630703 51.73711014]
[-0.64525175 55.72181702]
[13.81580353 59.70652390]
[28.27685928 63.69123077]
[42.73791504 67.67593384]
[57.19897079 71.66064453]
[71.66002655 75.64534760]
[86.12107849 79.63005066]
[109.53775787 88.97569275]
[123.94097900 84.78675079]
[138.34419250 80.59780884]
[152.74742126 76.40886688]
[167.15063477 72.21992493]
[178.24102783 60.93657684]
[192.62268066 64.81179047]
[207.02589417 60.62284851]
[221.42912292 56.43390656]
[235.83233643 52.24496078]
[250.23556519 48.05601883]
[264.63879395 43.86707687]
[279.04199219 39.67813110]
[293.44522095 35.48918915]
[300.80435181 30.09194374]
[308.08197021 31.34442711]
[322.54299927 27.35972214]
[337.00405884 23.37501526]
[351.46511841 19.39031029]
[365.92617798 15.40560341]
[380.38723755 11.42089748]
[391.63616943 0.29562023]
[405.96154785 4.37395954]
[420.42260742 0.38925344]
[434.88366699 -3.59545255]
[449.34472656 -7.58015871]
[462.01022339 -26.64712143]
[484.29107666 -25.82343674]
[495.69027710 -35.57322693]
[500.17300415 -43.52259064]
[507.32046509 -45.37894058]
[518.85650635 -54.96644592]
[530.39251709 -64.55394745]
[541.92852783 -74.14145660]
[553.46453857 -83.72895813]
[565.00054932 -93.31645966]
[576.53656006 -102.90396881]
[587.86651611 -112.73416901]
[598.98522949 -122.80263519]
[610.10394287 -132.87110901]
[621.22265625 -142.93957520]
[632.34136963 -153.00804138]
[636.84704590 -168.77609253]
[652.81890869 -172.49508667]
[663.82653809 -160.33924866]
[658.54620361 -144.81346130]
[642.40985107 -141.88932800]
[631.29113770 -131.82084656]
[620.17242432 -121.75238800]
[609.05371094 -111.68391418]
[597.93499756 -101.61544800]
[597.39398193 -98.13892365]
[595.14709473 -94.75034332]
[591.25323486 -92.24647522]
[586.12408447 -91.36795044]
[574.58807373 -81.78044128]
[563.05206299 -72.19293976]
[551.51605225 -62.60543442]
[539.97998047 -53.01792908]
[528.44396973 -43.43042755]
[516.90795898 -33.84292221]
[505.44006348 -24.17403221]
[494.04089355 -14.42424393]
[494.89865112 -11.69218731]
[495.40264893 -8.87333488]
[510.01977539 -5.50596333]
[524.63690186 -2.13859224]
[539.25408936 1.22877884]
[553.87121582 4.59614992]
[568.48834229 7.96352100]
[583.67327881 3.52172732]
[594.33868408 13.91870403]
[608.95587158 17.28607559]
[623.57299805 20.65344620]
[638.19012451 24.02081871]
[651.45440674 15.42806721]
[666.89190674 18.81296921]
[675.34399414 32.16732025]
[671.79602051 47.56822205]
[658.35308838 55.87858963]
[642.99053955 52.16803360]
[634.82275391 38.63795853]
[620.20562744 35.27058792]
[605.58850098 31.90321732]
[590.97131348 28.53584480]
[576.83197021 33.21849442]
[565.12097168 22.58066177]
[550.50384521 19.21329117]
[535.88671875 15.84591961]
[521.26953125 12.47854900]
[506.65240479 9.11117744]
[492.03527832 5.74380636]
[484.14352417 13.59849930]
[473.31951904 16.78671265]
[462.13787842 14.40183544]
[453.32943726 6.88089657]
[438.86837769 10.86560249]
[424.40731812 14.85030842]
[409.94625854 18.83501434]
[399.73165894 29.67527962]
[384.37194824 25.88195229]
[369.91088867 29.86665916]
[355.44982910 33.85136414]
[340.98876953 37.83607101]
[326.52770996 41.82077789]
[312.06665039 45.80548477]
[297.63415527 49.89241028]
[283.23095703 54.08135223]
[268.82772827 58.27029800]
[254.42449951 62.45923996]
[240.02128601 66.64818573]
[225.61805725 70.83712769]
[211.21484375 75.02606964]
[196.81161499 79.21501160]
[186.75144958 90.19873810]
[171.33958435 86.62314606]
[156.93635559 90.81208801]
[142.53314209 95.00102997]
[128.12991333 99.18997192]
[113.72669983 103.37891388]
[102.53701782 113.36846161]
[96.74777222 127.20626068]
[90.95852661 141.04405212]
[85.16928864 154.88185120]
[98.80597687 148.63359070]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 28]
[9 27]
[10 26]
[11 25]
[12 24]
[13 22]
[14 21]
[30 220]
[31 219]
[32 218]
[33 217]
[34 96]
[35 95]
[36 94]
[37 93]
[38 92]
[39 91]
[40 90]
[41 89]
[44 57]
[45 56]
[46 55]
[47 54]
[58 86]
[59 85]
[60 84]
[61 83]
[62 82]
[63 81]
[64 80]
[69 78]
[70 77]
[71 76]
[97 216]
[98 215]
[99 214]
[100 213]
[101 212]
[103 210]
[104 209]
[105 208]
[106 207]
[107 206]
[108 205]
[109 204]
[110 203]
[112 202]
[113 201]
[114 200]
[115 199]
[116 198]
[117 197]
[119 195]
[120 194]
[121 193]
[122 192]
[124 159]
[125 158]
[127 157]
[128 156]
[129 155]
[130 154]
[131 153]
[132 152]
[133 151]
[134 147]
[135 146]
[136 145]
[137 144]
[138 143]
[161 188]
[162 187]
[163 186]
[164 185]
[165 184]
[166 183]
[168 181]
[169 180]
[170 179]
[171 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
