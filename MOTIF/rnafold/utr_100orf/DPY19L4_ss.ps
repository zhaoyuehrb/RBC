%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:44:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCAGGAAGUGGGGGCGCGGCGGCCAGGAGCGGGCCCCCGGAGGCCGAGGGGUUCGGCGACGCGGAGGGAGGGAGAGUCUGGGCCGCGCGGGAGCCGCAGGGCGCCCUAGCCUUCGCAGAAACGAUGGCGGAGGAAGAAGGACCACCUGUAGAGCUGCGCCAAAGAAAAAAGCCAAAGUCUUCAGAAAAUAAGGAAUCUGCCAAAGAAGAGAAAAUCAGUGACA\
) } def
/len { sequence length } bind def

/coor [
[112.29978943 243.47450256]
[112.09036255 228.47596741]
[111.88092804 213.47743225]
[111.67149353 198.47889709]
[101.88801575 183.90490723]
[111.01833344 167.90830994]
[110.59950256 152.91416931]
[71.49909973 135.36201477]
[63.13474655 100.60282135]
[48.40044022 97.79209900]
[33.66613007 94.98137665]
[18.93182182 92.17066193]
[4.19751215 89.35993958]
[-10.53679657 86.54921722]
[-25.27110481 83.73850250]
[-40.00541306 80.92778015]
[-54.98750687 80.19503021]
[-69.92577362 81.55451965]
[-84.86403656 82.91400909]
[-93.11692047 86.80486298]
[-100.02013397 84.18670654]
[-114.97592926 85.33748627]
[-129.93171692 86.48827362]
[-144.88751221 87.63906097]
[-159.84329224 88.78984833]
[-173.00920105 97.56307983]
[-186.29255676 90.82500458]
[-201.24835205 91.97579193]
[-216.20414734 93.12657928]
[-222.27560425 110.04193115]
[-235.10336304 122.55335236]
[-252.06427002 128.16728210]
[-269.71823120 125.79401398]
[-284.50604248 115.95893860]
[-293.46679688 100.68706512]
[-308.36129761 102.46312714]
[-323.25576782 104.23918152]
[-338.13748169 106.11917877]
[-353.00573730 108.10302734]
[-367.87396240 110.08687592]
[-375.71975708 125.07695770]
[-390.80624390 132.36111450]
[-407.09759521 129.24523926]
[-418.20629883 117.15283203]
[-433.04537964 119.34407806]
[-447.88446045 121.53532410]
[-462.72354126 123.72657013]
[-477.56262207 125.91781616]
[-488.24374390 137.88833618]
[-504.25363159 136.85716248]
[-513.31085205 123.61532593]
[-508.46749878 108.32083130]
[-493.43896484 102.70630646]
[-479.75387573 111.07873535]
[-464.91479492 108.88748932]
[-450.07571411 106.69624329]
[-435.23663330 104.50499725]
[-420.39752197 102.31375122]
[-415.33990479 89.96412659]
[-404.75717163 81.65759277]
[-391.34558105 79.64635468]
[-378.58987427 84.56105042]
[-369.85781860 95.21864319]
[-354.98956299 93.23479462]
[-340.12133789 91.25094604]
[-333.91333008 87.25474548]
[-325.03182983 89.34470367]
[-310.13735962 87.56864166]
[-295.24285889 85.79257965]
[-292.54693604 73.87655640]
[-286.31628418 63.33917618]
[-277.13775635 55.20222855]
[-265.88473511 50.26004410]
[-253.63429260 49.00197983]
[-241.56390381 51.56401443]
[-230.83837891 57.71420288]
[-222.49745178 66.87361145]
[-217.35493469 78.17078400]
[-202.39913940 77.01999664]
[-187.44334412 75.86921692]
[-175.34718323 67.17829132]
[-160.99407959 73.83405304]
[-146.03829956 72.68326569]
[-131.08250427 71.53248596]
[-116.12670898 70.38169861]
[-101.17092133 69.23091125]
[-86.22352600 67.97574615]
[-71.28526306 66.61625671]
[-56.34699631 65.25676727]
[-48.57659149 52.42630386]
[-54.29264450 38.55811310]
[-60.00870132 24.68992233]
[-72.42102814 14.87948418]
[-70.11752319 0.16407919]
[-75.83358002 -13.70411110]
[-81.54963684 -27.57230186]
[-94.86557770 -37.14402008]
[-92.96517944 -53.43268204]
[-77.80341339 -59.68191147]
[-64.97740173 -49.46303558]
[-67.68144226 -33.28835678]
[-61.96538925 -19.42016602]
[-56.24933243 -5.55197668]
[-44.24585724 3.26651645]
[-46.14051056 18.97386742]
[-40.42445374 32.84205627]
[-34.70840073 46.71024704]
[-33.52932739 54.10152054]
[-34.48511505 60.77320099]
[-37.19469452 66.19347382]
[-22.46038628 69.00418854]
[-7.72607708 71.81491089]
[7.00823164 74.62563324]
[21.74254036 77.43634796]
[36.47684860 80.24707031]
[51.21115875 83.05779266]
[65.94546509 85.86850739]
[69.59588623 75.94432831]
[76.19022369 67.02924347]
[85.42622375 60.00389862]
[96.73815918 55.65176392]
[109.32949829 54.58078766]
[122.22870636 57.15628815]
[134.36418152 63.45178223]
[144.65258789 73.22309113]
[152.09327698 85.90924835]
[163.65097046 76.34788513]
[175.20866394 66.78652191]
[186.76637268 57.22516632]
[198.32406616 47.66380692]
[204.02534485 32.90555191]
[218.76380920 30.75457573]
[230.32150269 21.19321632]
[226.29010010 5.42500973]
[229.52951050 -10.46534634]
[239.34101868 -23.30461121]
[253.71868896 -30.55147552]
[269.75933838 -30.79948997]
[284.24862671 -24.04974747]
[295.67172241 -33.77154541]
[307.09478760 -43.49334335]
[312.08319092 -59.11537933]
[328.16186523 -62.34147263]
[338.79049683 -49.85289383]
[333.03521729 -34.49682236]
[316.81658936 -32.07027054]
[305.39352417 -22.34847069]
[293.97042847 -12.62667274]
[298.14260864 0.59887379]
[296.95700073 14.45958519]
[290.55957031 26.86139107]
[279.88629150 35.91802216]
[266.52609253 40.23788834]
[252.48457336 39.13782501]
[239.88287354 32.75091553]
[228.32516479 42.31227493]
[223.45057678 56.38663483]
[207.88542175 59.22150421]
[196.32772827 68.78286743]
[184.77001953 78.34422302]
[173.21232605 87.90558624]
[161.65463257 97.46694183]
[161.70698547 104.96675873]
[176.43377686 102.11693573]
[191.16058350 99.26710510]
[205.88737488 96.41728210]
[217.56823730 87.00679016]
[232.46452332 85.24588013]
[246.01762390 91.67343140]
[254.07998657 104.32247162]
[254.18435669 119.32211304]
[246.29878235 132.08212280]
[232.83644104 138.69764709]
[217.91709900 137.14419556]
[206.10716248 127.89818573]
[191.34201050 125.25425720]
[176.57685852 122.61032867]
[161.81170654 119.96639252]
[161.86407471 127.46620941]
[173.55413818 136.86526489]
[185.24420166 146.26432800]
[196.93428040 155.66339111]
[208.81861877 164.81556702]
[220.89202881 173.71684265]
[232.96543884 182.61813354]
[245.03883362 191.51940918]
[259.08084106 185.29705811]
[274.35104370 186.94528198]
[286.74182129 196.02075195]
[292.92013550 210.08218384]
[291.22406006 225.34713745]
[282.10980225 237.70941162]
[268.02905273 243.84362793]
[252.76950073 242.09970093]
[240.43585205 232.94673157]
[234.34580994 218.84684753]
[236.13755798 203.59281921]
[224.06414795 194.69152832]
[211.99073792 185.79025269]
[199.91734314 176.88896179]
[196.40446472 177.04716492]
[192.63996887 175.51805115]
[189.41490173 172.20155334]
[187.53521729 167.35345459]
[175.84515381 157.95439148]
[164.15507507 148.55534363]
[152.46501160 139.15628052]
[145.74717712 142.49104309]
[152.41670227 155.92672729]
[159.08622742 169.36239624]
[165.75555420 182.79817200]
[152.31967163 189.46728516]
[145.65054321 176.03192139]
[138.98101807 162.59625244]
[132.31149292 149.16056824]
[125.59365845 152.49533081]
[126.01248169 167.48948669]
[134.82704163 176.89671326]
[134.87269592 189.38749695]
[126.67002869 198.26947021]
[126.87946320 213.26800537]
[127.08889771 228.26654053]
[127.29833221 243.26507568]
[129.75784302 262.49008179]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 223]
[2 222]
[3 221]
[4 220]
[6 217]
[7 216]
[9 117]
[10 116]
[11 115]
[12 114]
[13 113]
[14 112]
[15 111]
[16 110]
[17 89]
[18 88]
[19 87]
[21 86]
[22 85]
[23 84]
[24 83]
[25 82]
[27 80]
[28 79]
[29 78]
[35 69]
[36 68]
[37 67]
[38 65]
[39 64]
[40 63]
[44 58]
[45 57]
[46 56]
[47 55]
[48 54]
[90 107]
[91 106]
[92 105]
[94 103]
[95 102]
[96 101]
[126 162]
[127 161]
[128 160]
[129 159]
[130 158]
[132 156]
[133 155]
[139 148]
[140 147]
[141 146]
[179 207]
[180 206]
[181 205]
[182 204]
[183 200]
[184 199]
[185 198]
[186 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
