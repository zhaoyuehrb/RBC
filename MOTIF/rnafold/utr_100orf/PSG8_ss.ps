%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:40:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGAAGGAGGCAGGACAGCACUGCUGAGAGCUGUGCUCAGGAAGCUUCUGGAUCCUAGGCUCAUCUCCACAGAGGAGAACACACAGACAGCAGAGACCAUGGGGCUCCUCUCAGCCCCUCCCUGCACACAGCGCAUCACCUGGAAGGGGCUCCUGCUCACAGCAUCACUUUUAAACUUCUGGAACCCACCCACGACUG\
) } def
/len { sequence length } bind def

/coor [
[121.96012878 208.13562012]
[117.98262024 193.67257690]
[114.00511932 179.20954895]
[110.02761078 164.74650574]
[106.05010223 150.28346252]
[102.07259369 135.82043457]
[97.48349762 135.79199219]
[92.93556213 135.17800903]
[88.50319672 133.98857117]
[80.83295441 146.87915039]
[73.16271210 159.76974487]
[65.49246216 172.66033936]
[57.82221985 185.55093384]
[63.14728928 200.25390625]
[57.72711182 214.92210388]
[44.12093353 222.62962341]
[28.75317192 219.73722839]
[18.88001823 207.61061096]
[19.16327095 191.97558594]
[29.46918678 180.21455383]
[44.93162918 177.88069153]
[52.60187149 164.99009705]
[60.27211761 152.09950256]
[67.94235992 139.20890808]
[75.61260223 126.31832123]
[64.38582611 104.36228943]
[69.98154449 80.34571075]
[89.75659943 65.61291504]
[88.57380676 50.65961838]
[87.27302551 35.71612549]
[85.85432434 20.78336716]
[84.43563080 5.85060835]
[83.01692963 -9.08215046]
[81.59823608 -24.01490974]
[80.17954254 -38.94766998]
[68.28085327 -49.00048447]
[67.05481720 -64.16463470]
[76.71196747 -75.44625854]
[75.29326630 -90.37902069]
[73.87457275 -105.31177521]
[72.45587158 -120.24453735]
[71.03717804 -135.17729187]
[67.10675812 -143.43400574]
[69.71585846 -150.35670471]
[68.53307343 -165.30999756]
[67.35028076 -180.26329041]
[66.16749573 -195.21658325]
[64.98470306 -210.16987610]
[63.80191803 -225.12316895]
[60.83026886 -229.43838501]
[59.90984344 -234.00514221]
[60.79165649 -237.99765015]
[62.93429565 -240.80953979]
[62.46076965 -255.80206299]
[61.98723984 -270.79458618]
[58.58570480 -279.28286743]
[61.62646103 -286.02709961]
[61.38966751 -301.02523804]
[61.15287399 -316.02337646]
[40.10813904 -322.38046265]
[23.30429268 -337.42105103]
[14.21453953 -358.67913818]
[14.98475170 -382.35458374]
[25.94924736 -403.99102783]
[14.20071316 -413.31689453]
[2.45217872 -422.64276123]
[-9.29635525 -431.96862793]
[-21.04488945 -441.29452515]
[-37.08304596 -440.89816284]
[-47.28174973 -453.28225708]
[-43.81742859 -468.94680786]
[-29.34761238 -475.87530518]
[-14.97230625 -468.75277710]
[-11.71901512 -453.04306030]
[0.02951893 -443.71716309]
[11.77805328 -434.39129639]
[23.52658844 -425.06542969]
[35.27512360 -415.73956299]
[42.38577271 -418.12463379]
[36.54652786 -431.94140625]
[30.70728111 -445.75817871]
[19.01548576 -455.15509033]
[18.45429039 -470.14459229]
[29.41071320 -480.38943481]
[44.32884979 -478.82443237]
[52.92066956 -466.52890015]
[49.26027679 -451.98132324]
[52.93367767 -437.43804932]
[56.60707474 -422.89480591]
[63.71772766 -425.27990723]
[67.46642303 -439.80392456]
[71.21511841 -454.32794189]
[74.96381378 -468.85195923]
[70.92086792 -484.14788818]
[81.59336090 -494.53765869]
[85.34205627 -509.06167603]
[84.02304077 -513.22192383]
[84.09522247 -517.18530273]
[85.32464600 -520.53717041]
[87.36630249 -522.98193359]
[89.81289673 -524.36920166]
[94.47066498 -538.62768555]
[99.12844086 -552.88623047]
[103.78620911 -567.14471436]
[108.44397736 -581.40325928]
[113.10175323 -595.66174316]
[105.72639465 -609.63958740]
[110.47480774 -624.71368408]
[124.52983093 -631.94085693]
[139.55287170 -627.03332520]
[146.63102722 -612.90264893]
[141.56495667 -597.93237305]
[127.36026001 -591.00396729]
[122.70249176 -576.74548340]
[118.04472351 -562.48693848]
[113.38695526 -548.22845459]
[108.72917938 -533.96997070]
[104.07141113 -519.71142578]
[99.86608124 -505.31298828]
[96.11738586 -490.78897095]
[100.42845917 -476.53189087]
[89.48783875 -465.10327148]
[85.73914337 -450.57925415]
[81.99044800 -436.05523682]
[78.24175262 -421.53118896]
[88.91352081 -417.93411255]
[98.57822418 -412.33767700]
[106.87001038 -404.99664307]
[113.48361206 -396.23074341]
[118.18552399 -386.41110229]
[120.82214355 -375.94433594]
[121.32450867 -365.25601196]
[119.70967865 -354.77310181]
[116.07855988 -344.90713501]
[110.61044312 -336.03790283]
[103.55452728 -328.49896240]
[95.21869659 -322.56497192]
[85.95626068 -318.44195557]
[76.15100861 -316.26016235]
[76.38780212 -301.26202393]
[76.62459564 -286.26391602]
[76.97976685 -271.26812744]
[77.45329285 -256.27560425]
[77.92681885 -241.28306580]
[78.75521088 -226.30595398]
[79.93800354 -211.35266113]
[81.12078857 -196.39936829]
[82.30357361 -181.44607544]
[83.48636627 -166.49278259]
[84.66915131 -151.53948975]
[85.96993256 -136.59599304]
[87.38863373 -121.66323090]
[88.80732727 -106.73047638]
[90.22602844 -91.79771423]
[91.64472198 -76.86495972]
[103.25356293 -67.60372162]
[104.90504456 -52.47998810]
[95.11229706 -40.36636734]
[96.53099823 -25.43360710]
[97.94969177 -10.50084782]
[99.36839294 4.43191147]
[100.78708649 19.36466980]
[102.20578003 34.29742813]
[105.97177124 40.66519547]
[103.52709961 49.47682953]
[104.70989227 64.43012238]
[113.46672058 66.74272156]
[121.36547852 71.17440033]
[127.90288544 77.44277954]
[132.66236877 85.14845276]
[135.34069824 93.80043793]
[135.76718140 102.84744263]
[133.91465759 111.71301270]
[129.90118408 119.83226013]
[123.98246002 126.68783569]
[116.53562927 131.84292603]
[120.51313782 146.30596924]
[124.49064636 160.76899719]
[128.46815491 175.23204041]
[132.44566345 189.69506836]
[136.42317200 204.15811157]
[151.53610229 204.83222961]
[165.70033264 210.14540100]
[177.52818298 219.57710266]
[185.86090088 232.20332336]
[189.88211060 246.78704834]
[189.19786072 261.89950562]
[183.87519836 276.06018066]
[174.43556213 287.88171387]
[161.80377197 296.20596313]
[147.21736145 300.21740723]
[132.10534668 299.52304077]
[117.94824982 294.19088745]
[106.13304901 284.74331665]
[97.81726074 272.10595703]
[93.81559753 257.51687622]
[94.52009583 242.40531921]
[99.86174011 228.25180054]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 181]
[2 180]
[3 179]
[4 178]
[5 177]
[6 176]
[9 25]
[10 24]
[11 23]
[12 22]
[13 21]
[28 166]
[29 165]
[30 163]
[31 162]
[32 161]
[33 160]
[34 159]
[35 158]
[38 155]
[39 154]
[40 153]
[41 152]
[42 151]
[44 150]
[45 149]
[46 148]
[47 147]
[48 146]
[49 145]
[53 144]
[54 143]
[55 142]
[57 141]
[58 140]
[59 139]
[64 78]
[65 77]
[66 76]
[67 75]
[68 74]
[90 125]
[91 124]
[92 123]
[93 122]
[95 120]
[96 119]
[101 118]
[102 117]
[103 116]
[104 115]
[105 114]
[106 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
