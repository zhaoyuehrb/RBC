%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:25:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUGACGGCGAGGCCCCGCCCCGGAUGUCGCGUGUCGCUGAAAGGGCGGCGGCGAUUGGCCGGCGCCGCGGGGGCGGGCGGGGCGGAAGGUUCUGGAGGGGGCUGGCGGGCUCUGGAAGCUUCCGCCGGACGGGUAUAUAGAGUCCGGGACUGGUCGGCGGCGGAGCCGGGGGACGGCGACAGCGGGUCGGCGGGCCGCAGGAGGGGGUCAUGGGUAAAGACUACUACCAGACGUUGGGCCUGGCCCGCGGCGCG\
UCGGACGAGGAGAUCAAGCGGGCCUACCGCCGCCAGGCGCUGCGCUACCACCCGG\
) } def
/len { sequence length } bind def

/coor [
[262.52368164 123.60282135]
[247.56671143 122.46747589]
[232.60974121 121.33213806]
[217.65277100 120.19679260]
[204.37637329 126.94857788]
[191.20143127 118.18894958]
[176.24446106 117.05360413]
[161.28747559 115.91826630]
[146.33050537 114.78292084]
[133.05412292 121.53470612]
[119.87916565 112.77507782]
[104.92218781 111.63973236]
[90.41709137 115.46099854]
[77.96085358 123.81816101]
[65.50461578 132.17532349]
[53.04837799 140.53248596]
[40.59214020 148.88964844]
[28.13590240 157.24681091]
[15.67966461 165.60397339]
[3.22342682 173.96113586]
[-0.46165186 206.62780762]
[-11.71632385 216.54408264]
[-22.97099495 226.46035767]
[-34.22566605 236.37661743]
[-35.02532959 253.87667847]
[-47.99596786 265.14202881]
[-64.76156616 263.54708862]
[-75.91548920 273.57653809]
[-87.06941986 283.60598755]
[-98.22335052 293.63543701]
[-109.37728119 303.66488647]
[-113.63619232 311.68521118]
[-120.69490814 313.73861694]
[-131.94956970 323.65487671]
[-143.20425415 333.57116699]
[-154.45892334 343.48742676]
[-165.71359253 353.40368652]
[-176.96826172 363.31994629]
[-188.22293091 373.23623657]
[-190.66607666 389.09216309]
[-204.65708923 396.94271851]
[-219.46325684 390.76559448]
[-223.72657776 375.29940796]
[-214.17657471 362.40841675]
[-198.13920593 361.98153687]
[-186.88453674 352.06527710]
[-175.62985229 342.14901733]
[-164.37518311 332.23275757]
[-153.12051392 322.31646729]
[-141.86584473 312.40020752]
[-130.61117554 302.48394775]
[-119.40673065 292.51095581]
[-108.25279999 282.48150635]
[-97.09886932 272.45205688]
[-85.94493866 262.42260742]
[-74.79101562 252.39315796]
[-75.91948700 239.58793640]
[-69.38292694 228.29400635]
[-57.36501694 222.73007202]
[-44.14193344 225.12194824]
[-32.88726425 215.20567322]
[-21.63259125 205.28941345]
[-10.37791920 195.37313843]
[-16.75912476 181.79815674]
[-31.57563210 184.13719177]
[-46.39213943 186.47622681]
[-61.20864868 188.81526184]
[-71.76993561 200.89163208]
[-87.78929138 200.02008057]
[-96.97805023 186.86917114]
[-92.28737640 171.52717590]
[-77.31555176 165.76313782]
[-63.54768372 173.99874878]
[-48.73117447 171.65971375]
[-33.91466522 169.32067871]
[-19.09815788 166.98164368]
[-5.13373423 161.50489807]
[7.32250357 153.14773560]
[19.77874184 144.79057312]
[32.23497772 136.43341064]
[44.69121552 128.07624817]
[57.14745331 119.71908569]
[69.60369110 111.36192322]
[82.05992889 103.00476074]
[81.68115997 88.00954437]
[68.81888580 80.29191589]
[55.95660782 72.57427979]
[43.09433365 64.85665131]
[30.23205566 57.13901901]
[14.41770458 56.67332840]
[7.48516798 43.49041367]
[-5.37710810 35.77278137]
[-18.23938370 28.05514908]
[-31.10165977 20.33751488]
[-35.32614899 20.40783501]
[-39.00025558 19.27173996]
[-41.81789398 17.24221039]
[-43.60275650 14.69853210]
[-44.31867981 12.03936195]
[-56.85869980 3.80845308]
[-69.39871979 -4.42245579]
[-81.93874359 -12.65336514]
[-94.47876740 -20.88427353]
[-107.01878357 -29.11518288]
[-123.41311646 -29.51268578]
[-131.02742004 -44.03695297]
[-122.02876282 -57.74666595]
[-105.67418671 -56.53844452]
[-98.78787231 -41.65520477]
[-86.24785614 -33.42429733]
[-73.70783234 -25.19338608]
[-61.16781235 -16.96247673]
[-48.62779236 -8.73156834]
[-36.08776855 -0.50065893]
[-23.38402748 7.47523975]
[-10.52175236 15.19287205]
[2.34052420 22.91050529]
[15.20280075 30.62813759]
[30.09715462 30.54181099]
[37.94968796 44.27674103]
[50.81196594 51.99437332]
[63.67424011 59.71200562]
[76.53651428 67.42964172]
[89.39879608 75.14727020]
[95.12514496 70.30383301]
[112.30419159 55.77351379]
[106.82743835 41.80908966]
[101.35068512 27.84466362]
[95.87392426 13.88024044]
[90.39717102 -0.08418325]
[84.92041016 -14.04860687]
[69.69983673 -15.65876293]
[56.97740173 -24.16748238]
[49.67663574 -37.61952209]
[49.47520065 -52.92370605]
[56.41938400 -66.56324005]
[68.91345978 -75.40386200]
[84.08638763 -77.41406250]
[98.45153809 -72.13191223]
[108.70789337 -60.77120209]
[112.49863434 -45.94255066]
[108.95266724 -31.05347252]
[98.88483429 -19.52536392]
[104.36159515 -5.56094027]
[109.83834839 8.40348339]
[115.31510162 22.36790848]
[120.79186249 36.33233261]
[126.26861572 50.29675674]
[125.03619385 69.08568573]
[117.92095184 85.04137421]
[106.05753326 96.68276215]
[121.01450348 97.81810760]
[135.36071777 91.14752197]
[147.46585083 99.82595062]
[162.42282104 100.96129608]
[177.37979126 102.09663391]
[192.33676147 103.23197174]
[206.68298340 96.56139374]
[218.78811646 105.23982239]
[233.74508667 106.37516022]
[248.70205688 107.51050568]
[263.65902710 108.64584351]
[269.86779785 101.67349243]
[278.44918823 98.35954285]
[287.46014404 99.32019806]
[294.92086792 104.21852875]
[299.24969482 111.86638641]
[314.16540527 113.45440674]
[329.08108521 115.04242706]
[343.99679565 116.63044739]
[358.91250610 118.21846008]
[373.83602905 119.73112488]
[388.76702881 121.16838837]
[399.16574097 113.59556580]
[411.54232788 115.06773376]
[419.35540771 124.25954437]
[434.27111816 125.84756470]
[449.18682861 127.43558502]
[464.10253906 129.02360535]
[472.91403198 126.82788849]
[479.16061401 130.70373535]
[494.05950928 132.44233704]
[508.95840454 134.18095398]
[523.85729980 135.91955566]
[538.75622559 137.65815735]
[553.67974854 139.17082214]
[568.62451172 140.45719910]
[583.56921387 141.74356079]
[598.54608154 140.91061401]
[613.25604248 137.97497559]
[627.96594238 135.03932190]
[642.67584229 132.10368347]
[657.38580322 129.16804504]
[669.40484619 118.87953949]
[683.40026855 123.97637177]
[698.11016846 121.04072571]
[712.82012939 118.10508728]
[727.53002930 115.16944122]
[742.23999023 112.23380280]
[754.25903320 101.94529724]
[768.25439453 107.04212952]
[782.96435547 104.10648346]
[791.75000000 91.24375153]
[806.70977783 88.47614288]
[818.91827393 96.93119812]
[833.62823486 93.99555969]
[848.33813477 91.05991364]
[860.35717773 80.77141571]
[874.35260010 85.86824036]
[889.06256104 82.93260193]
[903.77246094 79.99695587]
[914.38085938 61.78524399]
[934.71362305 57.50135803]
[951.28729248 69.53588104]
[965.86663818 66.00842285]
[980.44598389 62.48096085]
[995.02532959 58.95350266]
[1000.81335449 44.55634689]
[1013.97631836 36.33946991]
[1029.45263672 37.46243286]
[1041.29150391 47.49343109]
[1044.94055176 62.57534027]
[1038.99670410 76.90885925]
[1025.74548340 84.98246002]
[1010.28210449 83.69167328]
[998.55279541 73.53283691]
[983.97344971 77.06029510]
[969.39410400 80.58776093]
[954.81475830 84.11521912]
[952.66638184 93.10060883]
[947.38360596 100.75005341]
[939.64605713 106.00620270]
[930.47589111 108.12433624]
[921.10284424 106.77764893]
[912.79943848 102.10688782]
[906.70812988 94.70688629]
[891.99816895 97.64252472]
[877.28826904 100.57817078]
[866.32135010 110.65669250]
[851.27380371 105.76984406]
[836.56384277 108.70548248]
[821.85394287 111.64112854]
[813.82611084 124.13471985]
[798.95001221 127.32142639]
[785.89996338 118.81641388]
[771.19006348 121.75205231]
[760.22320557 131.83058167]
[745.17559814 126.94372559]
[730.46569824 129.87936401]
[715.75573730 132.81501770]
[701.04583740 135.75065613]
[686.33587646 138.68629456]
[675.36901855 148.76481628]
[660.32141113 143.87797546]
[645.61151123 146.81361389]
[630.90161133 149.74925232]
[616.19165039 152.68490601]
[601.48175049 155.62054443]
[599.75482178 162.91902161]
[610.66949463 173.20834351]
[596.30108643 177.51599121]
[594.57415771 184.81446838]
[606.40881348 194.03080750]
[622.44262695 193.48547363]
[632.75592041 205.77430725]
[629.43725586 221.47036743]
[615.03240967 228.53297424]
[600.59155273 221.54429626]
[597.19250488 205.86546326]
[585.35784912 196.64913940]
[580.01452637 201.91210938]
[569.32788086 212.43804932]
[563.98449707 217.70101929]
[573.02050781 229.67395020]
[582.05645752 241.64689636]
[591.09240723 253.61984253]
[606.71795654 257.25610352]
[613.48699951 271.80117798]
[606.20697021 286.09735107]
[590.46240234 289.17779541]
[578.33123779 278.67947388]
[579.11944580 262.65579224]
[570.08349609 250.68286133]
[561.04754639 238.70991516]
[552.01159668 226.73696899]
[557.63061523 184.81858826]
[582.28283691 156.68830872]
[567.33813477 155.40193176]
[552.39337158 154.11557007]
[549.50317383 156.04827881]
[545.54791260 156.70573425]
[541.12420654 155.60879517]
[537.01757812 152.55706787]
[522.11871338 150.81845093]
[507.21981812 149.07984924]
[492.32089233 147.34124756]
[477.42199707 145.60263062]
[462.51452637 143.93930054]
[447.59881592 142.35128784]
[432.68310547 140.76327515]
[417.76739502 139.17524719]
[402.10183716 147.13357544]
[387.32974243 136.09938049]
[372.39877319 134.66210938]
[365.47616577 137.13587952]
[357.32449341 133.13417053]
[342.40878296 131.54614258]
[327.49307251 129.95812988]
[312.57736206 128.37011719]
[297.66168213 126.78208923]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 162]
[2 161]
[3 160]
[4 159]
[6 157]
[7 156]
[8 155]
[9 154]
[11 152]
[12 151]
[13 84]
[14 83]
[15 82]
[16 81]
[17 80]
[18 79]
[19 78]
[20 77]
[21 63]
[22 62]
[23 61]
[24 60]
[27 56]
[28 55]
[29 54]
[30 53]
[31 52]
[33 51]
[34 50]
[35 49]
[36 48]
[37 47]
[38 46]
[39 45]
[64 76]
[65 75]
[66 74]
[67 73]
[85 124]
[86 123]
[87 122]
[88 121]
[89 120]
[91 118]
[92 117]
[93 116]
[94 115]
[99 114]
[100 113]
[101 112]
[102 111]
[103 110]
[104 109]
[126 148]
[127 147]
[128 146]
[129 145]
[130 144]
[131 143]
[167 310]
[168 309]
[169 308]
[170 307]
[171 306]
[172 304]
[173 303]
[176 301]
[177 300]
[178 299]
[179 298]
[181 297]
[182 296]
[183 295]
[184 294]
[185 293]
[186 289]
[187 288]
[188 287]
[189 258]
[190 257]
[191 256]
[192 255]
[193 254]
[195 252]
[196 251]
[197 250]
[198 249]
[199 248]
[201 246]
[202 245]
[205 242]
[206 241]
[207 240]
[209 238]
[210 237]
[211 236]
[214 229]
[215 228]
[216 227]
[217 226]
[262 270]
[263 269]
[273 285]
[274 284]
[275 283]
[276 282]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
