%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:14:05 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NLRP6)
} def

/sequence { (\
AUGGACCAGCCAGAGGCCCCCUGCUCCAGCACGGGGCCGCGCCUCGCGGUGGCCCGCGAGCUGCUCCUGGCUGCGCUGGAGGAACUGAGCCAAGAGCAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 8 0.043245819 ubox
2 12 0.600435340 ubox
2 28 0.011513088 ubox
2 41 0.003287194 ubox
2 56 0.144229445 ubox
2 58 0.004121285 ubox
2 75 0.008964142 ubox
2 78 0.058641200 ubox
2 92 0.025484358 ubox
2 98 0.009909472 ubox
3 7 0.047448926 ubox
3 11 0.666528655 ubox
3 27 0.012796036 ubox
3 40 0.003307837 ubox
3 43 0.111537335 ubox
3 44 0.017707876 ubox
3 45 0.004129282 ubox
3 54 0.088422680 ubox
3 55 0.203731777 ubox
3 57 0.004240246 ubox
3 67 0.030215884 ubox
3 74 0.067079879 ubox
3 77 0.109108336 ubox
3 91 0.028276532 ubox
3 97 0.010531218 ubox
4 10 0.665332410 ubox
4 26 0.012798326 ubox
4 42 0.110382084 ubox
4 43 0.029376617 ubox
4 44 0.004441129 ubox
4 45 0.018473603 ubox
4 53 0.089275575 ubox
4 54 0.203346782 ubox
4 66 0.030265648 ubox
4 71 0.003359635 ubox
4 76 0.115168803 ubox
4 90 0.026826442 ubox
5 25 0.012430055 ubox
5 44 0.019177377 ubox
5 50 0.006523953 ubox
5 65 0.029278657 ubox
6 49 0.006694902 ubox
6 52 0.221438920 ubox
6 70 0.015278471 ubox
6 79 0.026726530 ubox
7 23 0.012219931 ubox
7 48 0.006672157 ubox
7 51 0.221286155 ubox
7 63 0.025747694 ubox
7 69 0.017885505 ubox
7 73 0.490084880 ubox
7 78 0.026785991 ubox
7 87 0.021275925 ubox
8 22 0.012148704 ubox
8 44 0.024800701 ubox
8 50 0.180768370 ubox
8 62 0.025769711 ubox
8 68 0.017861376 ubox
8 72 0.501238660 ubox
8 77 0.026582915 ubox
8 86 0.021165407 ubox
9 17 0.017161576 ubox
9 21 0.006850322 ubox
9 24 0.003405542 ubox
9 30 0.003385582 ubox
9 40 0.195541010 ubox
9 42 0.396782016 ubox
9 43 0.034705419 ubox
9 47 0.016637952 ubox
9 50 0.127147123 ubox
9 53 0.015778060 ubox
9 61 0.025531082 ubox
9 67 0.017689941 ubox
9 71 0.504269255 ubox
9 76 0.026391303 ubox
9 85 0.020900999 ubox
9 100 0.013941774 ubox
10 16 0.018060055 ubox
10 29 0.003387582 ubox
10 39 0.195828462 ubox
10 41 0.397853479 ubox
10 46 0.016628908 ubox
10 49 0.216240771 ubox
10 52 0.015796023 ubox
10 60 0.023450356 ubox
10 70 0.504931449 ubox
10 75 0.026334172 ubox
10 79 0.003164913 ubox
10 82 0.014438117 ubox
10 89 0.003173121 ubox
10 99 0.013514944 ubox
11 15 0.017942895 ubox
11 48 0.216155159 ubox
11 51 0.015729584 ubox
11 63 0.003950267 ubox
11 69 0.505185802 ubox
11 73 0.026227766 ubox
11 78 0.003166393 ubox
11 81 0.014487130 ubox
11 87 0.003273221 ubox
12 44 0.012471099 ubox
12 50 0.013844000 ubox
12 62 0.004364960 ubox
12 68 0.504743398 ubox
12 72 0.026206955 ubox
12 86 0.003271370 ubox
13 26 0.003550028 ubox
13 43 0.021794591 ubox
13 45 0.206249389 ubox
13 61 0.004582442 ubox
13 66 0.074795116 ubox
13 67 0.497836020 ubox
13 71 0.026081948 ubox
13 85 0.003252003 ubox
14 25 0.003537710 ubox
14 44 0.206654259 ubox
14 65 0.100136614 ubox
15 24 0.003472221 ubox
15 38 0.977232558 ubox
15 43 0.205447156 ubox
15 54 0.004351180 ubox
15 64 0.004672084 ubox
15 65 0.004263881 ubox
15 66 0.016425299 ubox
16 37 0.978544162 ubox
16 40 0.005951480 ubox
16 42 0.204874737 ubox
16 53 0.004371387 ubox
17 36 0.978202633 ubox
17 39 0.006451323 ubox
17 41 0.204269723 ubox
17 52 0.004379825 ubox
18 35 0.977876039 ubox
18 36 0.205101911 ubox
18 51 0.004289574 ubox
19 34 0.977420796 ubox
19 35 0.207450065 ubox
19 36 0.011969215 ubox
20 33 0.975939346 ubox
20 34 0.209580560 ubox
20 35 0.012007951 ubox
21 29 0.035363423 ubox
21 33 0.211627916 ubox
21 34 0.012014289 ubox
22 28 0.035404751 ubox
22 31 0.992689381 ubox
22 33 0.011509812 ubox
23 27 0.034848621 ubox
23 30 0.998862752 ubox
23 32 0.012150625 ubox
23 37 0.019167765 ubox
24 29 0.995640221 ubox
24 36 0.019244328 ubox
25 35 0.019215452 ubox
26 34 0.019227850 ubox
27 33 0.019216378 ubox
29 57 0.003707587 ubox
30 56 0.003693490 ubox
32 58 0.012057171 ubox
33 57 0.012237958 ubox
34 55 0.013392848 ubox
35 54 0.013438601 ubox
36 50 0.006816131 ubox
36 53 0.013482646 ubox
37 49 0.014562405 ubox
37 52 0.013514514 ubox
38 48 0.015297322 ubox
38 51 0.013506505 ubox
38 58 0.003983758 ubox
39 47 0.087404856 ubox
39 50 0.013243514 ubox
39 53 0.005639390 ubox
39 55 0.004054193 ubox
39 57 0.012058197 ubox
39 61 0.015572290 ubox
39 62 0.005114677 ubox
39 64 0.504574060 ubox
39 100 0.032593811 ubox
40 46 0.087485772 ubox
40 48 0.013492130 ubox
40 49 0.011273823 ubox
40 51 0.008053878 ubox
40 52 0.004134120 ubox
40 56 0.012027744 ubox
40 58 0.008278714 ubox
40 60 0.014860368 ubox
40 63 0.505164328 ubox
40 99 0.032150205 ubox
41 45 0.081852556 ubox
41 47 0.019113209 ubox
41 50 0.010678998 ubox
41 53 0.011900814 ubox
41 55 0.006395929 ubox
41 57 0.008360246 ubox
41 61 0.168763167 ubox
41 62 0.472900028 ubox
41 64 0.042049012 ubox
41 100 0.013402452 ubox
42 46 0.018990050 ubox
42 49 0.011353598 ubox
42 52 0.012756620 ubox
42 56 0.008334915 ubox
42 60 0.124542057 ubox
42 63 0.041918421 ubox
42 99 0.011708762 ubox
43 48 0.011349632 ubox
43 51 0.012762121 ubox
43 60 0.717781866 ubox
44 59 0.952531505 ubox
45 58 0.973401072 ubox
46 53 0.009143706 ubox
46 57 0.974573291 ubox
47 52 0.009156908 ubox
47 56 0.974575554 ubox
48 54 0.023564223 ubox
48 55 0.974167076 ubox
49 53 0.032774543 ubox
49 54 0.966823169 ubox
60 100 0.678085588 ubox
61 99 0.852289012 ubox
62 98 0.859517762 ubox
63 97 0.860987936 ubox
64 81 0.005347127 ubox
64 96 0.860992228 ubox
65 80 0.014271899 ubox
65 82 0.003555122 ubox
65 83 0.011141003 ubox
65 95 0.860848187 ubox
66 79 0.014836485 ubox
66 81 0.004290804 ubox
66 82 0.011696633 ubox
66 94 0.858475683 ubox
67 78 0.014771235 ubox
67 79 0.010095746 ubox
67 81 0.011636019 ubox
67 94 0.037023222 ubox
68 78 0.010382355 ubox
68 80 0.010895536 ubox
68 92 0.851577374 ubox
68 93 0.036893660 ubox
69 77 0.020008345 ubox
69 91 0.860968794 ubox
70 76 0.020963695 ubox
70 90 0.860986447 ubox
70 100 0.047472462 ubox
71 75 0.020814299 ubox
71 89 0.860954117 ubox
71 99 0.056302606 ubox
72 80 0.004034500 ubox
72 81 0.004008082 ubox
72 87 0.021878003 ubox
72 88 0.855895123 ubox
72 92 0.007481521 ubox
72 98 0.069936655 ubox
73 77 0.003805794 ubox
73 86 0.034616709 ubox
73 91 0.011812644 ubox
73 97 0.089125771 ubox
73 100 0.069724509 ubox
74 87 0.427864769 ubox
74 89 0.004349671 ubox
74 96 0.090886461 ubox
74 99 0.104283472 ubox
75 86 0.337765808 ubox
75 90 0.075435975 ubox
75 97 0.351866633 ubox
75 100 0.319602563 ubox
76 82 0.391390013 ubox
76 89 0.075961541 ubox
76 94 0.084840379 ubox
76 96 0.352294922 ubox
76 99 0.321988802 ubox
77 81 0.352993416 ubox
77 87 0.127204543 ubox
77 88 0.074135049 ubox
77 92 0.086199907 ubox
77 93 0.064000156 ubox
77 95 0.347050203 ubox
77 98 0.321879103 ubox
78 86 0.181827941 ubox
78 91 0.117340056 ubox
78 97 0.321649309 ubox
79 85 0.195835234 ubox
79 90 0.117195550 ubox
80 86 0.053047344 ubox
81 85 0.055833998 ubox
81 91 0.431905743 ubox
82 90 0.431797362 ubox
85 94 0.102935728 ubox
85 96 0.056532283 ubox
85 99 0.059245034 ubox
86 92 0.023161737 ubox
86 93 0.102417206 ubox
86 95 0.056566867 ubox
86 98 0.059256143 ubox
87 91 0.024823884 ubox
87 97 0.057137584 ubox
89 97 0.060185024 ubox
89 100 0.023506952 ubox
90 96 0.060800102 ubox
90 99 0.023700282 ubox
2 12 0.9500000 lbox
3 11 0.9500000 lbox
4 10 0.9500000 lbox
15 38 0.9500000 lbox
16 37 0.9500000 lbox
17 36 0.9500000 lbox
18 35 0.9500000 lbox
19 34 0.9500000 lbox
20 33 0.9500000 lbox
22 31 0.9500000 lbox
23 30 0.9500000 lbox
24 29 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
60 100 0.9500000 lbox
61 99 0.9500000 lbox
62 98 0.9500000 lbox
63 97 0.9500000 lbox
64 96 0.9500000 lbox
65 95 0.9500000 lbox
66 94 0.9500000 lbox
68 92 0.9500000 lbox
69 91 0.9500000 lbox
70 90 0.9500000 lbox
71 89 0.9500000 lbox
72 88 0.9500000 lbox
showpage
end
%%EOF
