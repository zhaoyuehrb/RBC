%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:36:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGACUGAGCAUGGAUUUCGGACUGGCCCUCCUGCUGGCGGGGCUUCUGGGGCUCCUCCUCGGCCAGUCCCUCCAGGUGAAGCCCCUGCAGGUGGAGCCCCCGGAGCCGG\
) } def
/len { sequence length } bind def

/coor [
[59.07057190 354.06588745]
[51.01705170 366.93078613]
[38.85769653 376.01452637]
[24.23695374 380.08865356]
[9.13216400 378.60211182]
[-4.41387653 371.75601196]
[-14.56917667 360.47619629]
[-19.96031570 346.28817749]
[-19.85818481 331.11074829]
[-14.27659893 316.99655151]
[-3.97042036 305.85443115]
[9.66652584 299.19122314]
[24.78995323 297.90811157]
[28.97889519 283.50491333]
[27.80786133 276.09521484]
[33.49554825 268.75646973]
[38.09040833 254.47756958]
[42.68526840 240.19866943]
[47.28012848 225.91975403]
[51.87498856 211.64083862]
[56.46984863 197.36193848]
[50.93205643 188.56239319]
[51.23797607 177.94830322]
[57.53020096 169.12153625]
[67.87845612 165.21421814]
[73.27378845 151.21813965]
[78.66911316 137.22204590]
[83.86585236 123.15101624]
[88.86294556 109.00785828]
[86.49427795 95.22812653]
[96.99388885 85.99504852]
[101.99098969 71.85188293]
[106.98808289 57.70872498]
[111.98518372 43.56556320]
[116.98227692 29.42240143]
[111.68171692 21.31054115]
[110.81188965 11.79918289]
[114.44588470 3.11703300]
[121.61656189 -2.76248741]
[130.56990051 -4.56954575]
[136.74842834 -18.23797226]
[142.92694092 -31.90640068]
[149.10545349 -45.57482910]
[155.28398132 -59.24325562]
[161.46249390 -72.91168213]
[167.64102173 -86.58010864]
[173.81953430 -100.24853516]
[168.70648193 -123.54769135]
[187.13314819 -137.58096313]
[190.91282654 -152.09695435]
[194.69248962 -166.61294556]
[198.47216797 -181.12893677]
[202.25183105 -195.64492798]
[206.03150940 -210.16093445]
[209.39888000 -224.77807617]
[212.35124207 -239.48464966]
[204.69454956 -253.58268738]
[211.07542419 -268.30218506]
[226.59899902 -272.35162354]
[239.35693359 -262.62463379]
[239.56242371 -246.58288574]
[227.05783081 -236.53227234]
[224.10545349 -221.82569885]
[226.04623413 -217.31524658]
[225.06788635 -211.52824402]
[220.54750061 -206.38125610]
[216.76782227 -191.86526489]
[212.98815918 -177.34927368]
[209.20848083 -162.83326721]
[205.42881775 -148.31727600]
[201.64913940 -133.80128479]
[206.68148804 -129.05366516]
[209.95008850 -122.89687347]
[211.08015442 -115.96551514]
[209.91926575 -108.98628998]
[206.55700684 -102.70183563]
[201.31896973 -97.79170227]
[194.73545837 -94.79890442]
[187.48796082 -94.07001495]
[181.30944824 -80.40158844]
[175.13092041 -66.73316193]
[168.95240784 -53.06473541]
[162.77388000 -39.39630890]
[156.59536743 -25.72788239]
[150.41685486 -12.05945396]
[144.23832703 1.60897303]
[148.29394531 21.76160240]
[131.12544250 34.41949844]
[126.12834167 48.56266022]
[121.13124847 62.70582199]
[116.13414764 76.84898376]
[111.13705444 90.99214172]
[113.50572205 104.77187347]
[103.00611115 114.00495148]
[98.00901031 128.14811707]
[98.08666992 137.43255615]
[92.66519928 142.61738586]
[87.26987457 156.61346436]
[81.87454224 170.60955811]
[86.01927185 190.23731995]
[70.74875641 201.95680237]
[66.15390015 216.23570251]
[61.55904007 230.51461792]
[56.96417999 244.79351807]
[52.36931992 259.07244873]
[47.77445984 273.35134888]
[43.38211823 287.69384766]
[39.19317245 302.09707642]
[51.26957703 311.29080200]
[59.20598984 324.22827148]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 108]
[14 107]
[16 106]
[17 105]
[18 104]
[19 103]
[20 102]
[21 101]
[25 99]
[26 98]
[27 97]
[28 95]
[29 94]
[31 92]
[32 91]
[33 90]
[34 89]
[35 88]
[40 86]
[41 85]
[42 84]
[43 83]
[44 82]
[45 81]
[46 80]
[47 79]
[49 71]
[50 70]
[51 69]
[52 68]
[53 67]
[54 66]
[55 63]
[56 62]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
