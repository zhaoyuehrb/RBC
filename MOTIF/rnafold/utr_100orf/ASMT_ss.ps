%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:41:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUCCGUCUUUGUUUGAGUACUGGGCAGGCAGCAGGGAGAGUCAGGCAGCAGCUGUGAGCGGGUGGCUCUUCCCCACCUUGCCAGCAGGCUCUGUGCUCCUUGAAGCAAGCGCUCCAGAGGCUCCGGAAGCCACGGCUGGAUUGGAGACAAGAUGGGAUCCUCAGAGGACCAGGCCUAUCGCCUCCUUAAUGACUACGCCAACGGCUUCAUGGUGUCCCAGGUUCUCUUCGCCGCCUGCGAGCUGGGCGUGU\
) } def
/len { sequence length } bind def

/coor [
[25.34502220 836.90148926]
[12.92581940 827.59863281]
[8.37872982 812.76275635]
[13.45220184 798.09851074]
[26.19538307 789.24462891]
[26.38163757 774.24578857]
[26.56789398 759.24694824]
[26.75414848 744.24810791]
[26.94040489 729.24926758]
[18.72904968 720.38977051]
[18.74531174 707.90972900]
[27.52487564 698.48492432]
[27.89735794 683.48956299]
[28.26984024 668.49420166]
[28.64232254 653.49884033]
[19.22698593 665.17578125]
[5.02156687 669.99304199]
[-9.55445385 666.45190430]
[-19.96630096 655.65405273]
[-22.97472191 640.95886230]
[-17.64375877 626.93811035]
[-5.63194275 617.95391846]
[9.32370758 616.80126953]
[22.57030678 623.83886719]
[29.98678780 636.87762451]
[32.02928543 622.01733398]
[34.07178497 607.15704346]
[36.11428452 592.29675293]
[38.15678787 577.43646240]
[40.19928741 562.57617188]
[34.26708221 548.91387939]
[43.81143951 536.29583740]
[45.85393906 521.43554688]
[39.92173386 507.77325439]
[49.46609116 495.15515137]
[51.50859070 480.29489136]
[53.55109024 465.43460083]
[55.59358978 450.57431030]
[57.63608932 435.71401978]
[59.67858887 420.85372925]
[61.72108841 405.99343872]
[63.76359177 391.13314819]
[65.80609131 376.27285767]
[57.23696899 358.92187500]
[69.91022491 343.22293091]
[71.58308411 328.31649780]
[73.25594330 313.41006470]
[74.92879486 298.50363159]
[68.65915680 284.99285889]
[77.88723755 272.14169312]
[79.56009674 257.23526001]
[80.86227417 242.29188538]
[81.79298401 227.32078552]
[82.72368622 212.34968567]
[83.65438843 197.37858582]
[84.58509064 182.40748596]
[74.56497955 171.44697571]
[75.29557800 156.25090027]
[86.85991669 145.81520081]
[87.79061890 130.84410095]
[88.72132111 115.87299347]
[79.40021515 104.12068176]
[64.61048126 101.61792755]
[49.82074738 99.11517334]
[35.03101349 96.61241150]
[20.24128151 94.10965729]
[8.44987392 104.38082123]
[-7.18591213 104.61792755]
[-19.28333664 94.70902252]
[-22.13036728 79.33279419]
[-14.38272095 65.74942017]
[0.30139902 60.37256241]
[14.98860073 65.74099731]
[22.74403572 79.31992340]
[37.53376770 81.82267761]
[52.32350159 84.32543945]
[67.11323547 86.82819366]
[81.90296936 89.33094788]
[86.59991455 83.48384094]
[81.16934967 69.50138855]
[95.99381256 71.78961945]
[100.69075775 65.94251251]
[95.05823517 52.04018784]
[89.42570496 38.13786316]
[83.79317474 24.23553848]
[78.16064453 10.33321381]
[61.72182083 -1.36438191]
[65.29193878 -20.38385201]
[59.31592178 -34.14202118]
[53.33990479 -47.90019226]
[47.36388779 -61.65835953]
[41.30256653 -75.37916565]
[35.15617752 -89.06206512]
[29.00978470 -102.74497223]
[13.82694626 -113.18629456]
[16.31524086 -130.56954956]
[9.99942207 -144.17507935]
[3.68360305 -157.78060913]
[-9.14502716 -167.04002380]
[-7.48589897 -181.84193420]
[-13.80171776 -195.44746399]
[-26.63034821 -204.70687866]
[-24.97122002 -219.50878906]
[-31.28703880 -233.11431885]
[-37.72135925 -239.55897522]
[-37.59563828 -246.92823792]
[-43.74203110 -260.61114502]
[-57.35041428 -269.76229858]
[-55.95966721 -286.10238647]
[-41.00046921 -292.82208252]
[-27.86156082 -283.00875854]
[-30.05912590 -266.75753784]
[-23.91273499 -253.07463074]
[-17.68150902 -239.43014526]
[-11.36569023 -225.82461548]
[1.01119030 -217.53836060]
[-0.19618833 -201.76329041]
[6.11963034 -188.15776062]
[18.49651146 -179.87149048]
[17.28913307 -164.09642029]
[23.60495186 -150.49089050]
[29.92077065 -136.88537598]
[41.15508270 -132.44606018]
[46.53535461 -121.18531799]
[42.69268799 -108.89136505]
[48.83908081 -95.20845795]
[54.98547363 -81.52555084]
[60.57793808 -76.72491455]
[61.12205887 -67.63437653]
[67.09807587 -53.87620926]
[73.07408905 -40.11803818]
[79.05010986 -26.35986900]
[88.82421875 -23.49513626]
[95.56072998 -15.56588078]
[96.86247253 -5.02220583]
[92.06297302 4.70068550]
[97.69549561 18.60301018]
[103.32802582 32.50533295]
[108.96055603 46.40765762]
[114.59308624 60.30998230]
[121.78928375 62.42297745]
[132.64508057 52.07156754]
[136.18167114 66.64896393]
[143.37786865 68.76196289]
[155.63241577 60.11175537]
[167.88696289 51.46155167]
[180.14152527 42.81134415]
[179.84013367 30.95888138]
[185.23100281 20.53361130]
[194.87811279 14.06167126]
[206.33059692 13.04843712]
[216.74499512 17.62974358]
[229.21055603 9.28651333]
[241.67613220 0.94328266]
[254.14170837 -7.39994764]
[266.60726929 -15.74317837]
[279.07284546 -24.08640862]
[287.53518677 -44.84926605]
[309.18246460 -45.29413986]
[321.21841431 -54.24598694]
[333.25439453 -63.19783020]
[345.29034424 -72.14967346]
[354.39123535 -86.45387268]
[370.65582275 -81.66844177]
[370.55987549 -64.71476746]
[354.24218750 -60.11370850]
[342.20623779 -51.16186523]
[330.17025757 -42.21001816]
[318.13430786 -33.25817490]
[318.67352295 -25.45752716]
[316.06958008 -17.98527718]
[310.67282104 -12.07071590]
[303.29916382 -8.71730995]
[295.10714722 -8.53288555]
[287.41607666 -11.62083530]
[274.95050049 -3.27760506]
[262.48492432 5.06562519]
[250.01936340 13.40885544]
[237.55378723 21.75208664]
[225.08822632 30.09531593]
[222.59730530 48.25078583]
[207.34901428 58.98173904]
[188.79171753 55.06589508]
[176.53717041 63.71609879]
[164.28262329 72.36630249]
[152.02807617 81.01651001]
[165.24276733 88.11384583]
[174.62371826 99.81844330]
[178.67314148 114.26151276]
[176.74449158 129.13700867]
[169.14572144 142.06985474]
[157.09004211 150.99513245]
[142.50233459 154.48782349]
[127.71173096 151.99024963]
[115.07974243 143.90119934]
[106.62324524 131.51219177]
[103.69242096 116.80370331]
[102.76171875 131.77479553]
[101.83101654 146.74589539]
[112.01380157 158.53353882]
[110.85666656 173.70310974]
[99.55619049 183.33819580]
[98.62548828 198.30929565]
[97.69478607 213.28039551]
[96.76407623 228.25149536]
[95.83337402 243.22259521]
[97.87099457 246.98800659]
[98.55255127 250.82150269]
[98.02066803 254.29302979]
[96.54169464 257.06170654]
[94.46652222 258.90811157]
[92.79366302 273.81454468]
[98.94364929 288.39151001]
[89.83522034 300.17651367]
[88.16236877 315.08291626]
[86.48950958 329.98934937]
[84.81665039 344.89578247]
[92.06137848 352.96322632]
[93.65255737 363.46713257]
[89.30514526 372.91983032]
[80.66638184 378.31533813]
[78.62387848 393.17562866]
[76.58138275 408.03591919]
[74.53887939 422.89620972]
[72.49638367 437.75650024]
[70.45388031 452.61679077]
[68.41137695 467.47708130]
[66.36888123 482.33737183]
[64.32637787 497.19766235]
[70.11249542 511.92285156]
[60.71422958 523.47802734]
[58.67172623 538.33831787]
[64.45783997 553.06353760]
[55.05957413 564.61871338]
[53.01707458 579.47900391]
[50.97457504 594.33929443]
[48.93207550 609.19958496]
[46.88957596 624.05981445]
[44.84707642 638.92010498]
[43.63769913 653.87127686]
[43.26521683 668.86669922]
[42.89273071 683.86206055]
[42.52024841 698.85742188]
[51.69755173 714.83605957]
[41.93924713 729.43554688]
[41.75299454 744.43438721]
[41.56673813 759.43322754]
[41.38048172 774.43206787]
[41.19422531 789.43090820]
[53.71361542 798.59851074]
[58.42137909 813.38415527]
[53.50728607 828.10260010]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 249]
[6 248]
[7 247]
[8 246]
[9 245]
[12 243]
[13 242]
[14 241]
[15 240]
[25 239]
[26 238]
[27 237]
[28 236]
[29 235]
[30 234]
[32 232]
[33 231]
[35 229]
[36 228]
[37 227]
[38 226]
[39 225]
[40 224]
[41 223]
[42 222]
[43 221]
[45 217]
[46 216]
[47 215]
[48 214]
[50 212]
[51 211]
[52 206]
[53 205]
[54 204]
[55 203]
[56 202]
[59 199]
[60 198]
[61 197]
[62 78]
[63 77]
[64 76]
[65 75]
[66 74]
[82 140]
[83 139]
[84 138]
[85 137]
[86 136]
[88 132]
[89 131]
[90 130]
[91 129]
[92 127]
[93 126]
[94 125]
[96 122]
[97 121]
[98 120]
[100 118]
[101 117]
[103 115]
[104 114]
[106 113]
[107 112]
[144 186]
[145 185]
[146 184]
[147 183]
[152 180]
[153 179]
[154 178]
[155 177]
[156 176]
[157 175]
[159 169]
[160 168]
[161 167]
[162 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
