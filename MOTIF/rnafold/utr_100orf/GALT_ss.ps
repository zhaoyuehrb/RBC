%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:37:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGUGCUGGCGGCUGGCCAAUCAUCGGGGGCGGCGCGGGGAGGGGUGGUGUGGACGGAGAAAGUGAAAGGUGAGGCACGGCCCUGCAGAUUUUCCAGCGGAUCCCCCGGUGGCCUCAUGUCGCGCAGUGGAACCGAUCCUCAGCAACGCCAGCAGGCGUCAGAGGCGGACGCCGCAGCAGCAACCUUCCGGGCAAACGACCAUCAGCAUAUCCGCU\
) } def
/len { sequence length } bind def

/coor [
[44.84186554 224.23554993]
[51.59691620 210.44189453]
[64.35273743 201.88708496]
[63.26787949 186.92636108]
[62.18302155 171.96565247]
[61.09816742 157.00492859]
[60.01330948 142.04421997]
[58.92845535 127.08349609]
[49.83296967 115.15570831]
[35.69274139 110.15031433]
[21.55251503 105.14491272]
[7.41228914 100.13951874]
[-6.72793722 95.13411713]
[-27.52580070 100.30953979]
[-40.23940659 84.04834747]
[-54.58362579 79.66162109]
[-68.92784119 75.27488708]
[-83.27206421 70.88816071]
[-97.61627960 66.50142670]
[-101.80013275 67.62446594]
[-105.72937775 67.38455200]
[-109.00747681 66.02848816]
[-111.35850525 63.90635300]
[-112.65033722 61.42332840]
[-126.71662140 56.21374893]
[-140.78289795 51.00416946]
[-154.84918213 45.79459000]
[-168.91546631 40.58501053]
[-182.98175049 35.37543488]
[-197.04803467 30.16585350]
[-209.93986511 38.59833145]
[-225.14729309 37.83174515]
[-236.84890747 28.36939240]
[-240.68893433 14.00303650]
[-254.75521851 8.79345703]
[-268.82150269 3.58387852]
[-284.44985962 6.04667616]
[-293.69766235 -5.62924194]
[-307.76394653 -10.83882046]
[-321.83023071 -16.04839897]
[-335.89651489 -21.25797844]
[-350.20861816 -25.74842453]
[-364.72976685 -29.50821304]
[-379.25091553 -33.26800156]
[-393.77206421 -37.02779007]
[-408.29324341 -40.78757858]
[-423.59222412 -36.75632095]
[-433.97384644 -47.43674850]
[-448.49499512 -51.19653702]
[-463.01614380 -54.95632553]
[-477.53732300 -58.71611404]
[-492.45010376 -49.56716537]
[-509.03851318 -53.95016861]
[-517.15930176 -68.67972565]
[-531.73333740 -72.22890472]
[-540.67999268 -59.93962860]
[-553.65112305 -52.01381302]
[-568.66870117 -49.66008377]
[-583.44274902 -53.23736954]
[-595.72021484 -62.20015717]
[-603.62896729 -75.18168640]
[-605.96295166 -90.20237732]
[-602.36621094 -104.97167206]
[-593.38726807 -117.23736572]
[-580.39538574 -125.12902832]
[-565.37164307 -127.44323730]
[-550.60705566 -123.82709503]
[-538.35321045 -114.83203888]
[-530.47863770 -101.82974243]
[-528.18420410 -86.80297089]
[-513.61010742 -83.25379181]
[-503.64941406 -91.42365265]
[-490.60726929 -92.38046265]
[-479.22717285 -85.55162811]
[-473.77752686 -73.23726654]
[-459.25637817 -69.47747803]
[-444.73519897 -65.71768951]
[-430.21405029 -61.95790482]
[-415.95370483 -66.25808716]
[-404.53344727 -55.30873489]
[-390.01229858 -51.54894638]
[-375.49111938 -47.78915787]
[-360.96997070 -44.02936935]
[-346.44882202 -40.26958084]
[-354.16244507 -53.13426590]
[-351.92272949 -67.96611786]
[-340.75442505 -77.97953033]
[-325.76696777 -78.59333801]
[-313.81723022 -69.52672577]
[-310.37219238 -54.92769623]
[-317.00799561 -41.47533035]
[-330.68695068 -35.32426071]
[-316.62066650 -30.11468124]
[-302.55438232 -24.90510368]
[-288.48809814 -19.69552422]
[-273.86587524 -22.53094482]
[-263.61193848 -10.48240376]
[-249.54563904 -5.27282476]
[-235.47935486 -0.06324580]
[-223.20785522 -8.46254444]
[-208.16564941 -8.02007198]
[-196.12754822 1.30397248]
[-191.83845520 16.09957314]
[-177.77217102 21.30915070]
[-163.70588684 26.51873016]
[-149.63960266 31.72830963]
[-135.57331848 36.93788910]
[-121.50704193 42.14746475]
[-107.44075775 47.35704422]
[-93.22955322 52.15721130]
[-78.88533020 56.54394150]
[-64.54111481 60.93066788]
[-50.19689560 65.31739807]
[-35.85267639 69.70413208]
[-28.80286407 64.31948090]
[-19.93102264 62.75630951]
[-11.20288086 65.48928070]
[-4.61153793 72.02673340]
[-1.72254026 80.99389648]
[12.41768646 85.99929047]
[26.55791283 91.00468445]
[40.69813919 96.01008606]
[54.83836365 101.01548004]
[118.25802612 64.27263641]
[132.39825439 59.26723862]
[142.82554626 47.36840439]
[157.40519714 50.41521072]
[171.54541016 45.40981674]
[185.68563843 40.40441895]
[199.82586670 35.39902115]
[207.07054138 19.47391129]
[223.27299500 13.82884979]
[238.24331665 21.49672699]
[252.30960083 16.28714752]
[266.37588501 11.07756996]
[270.87896729 6.24662828]
[276.32754517 4.65108442]
[280.92553711 5.92724752]
[295.13671875 1.12708151]
[309.34793091 -3.67308450]
[323.55914307 -8.47325039]
[326.65673828 -19.94556427]
[334.82250977 -28.41289711]
[345.94604492 -31.85346603]
[357.23168945 -29.52357483]
[365.90103149 -22.11486626]
[380.24523926 -26.50159454]
[394.58944702 -30.88832474]
[408.93368530 -35.27505493]
[423.27789307 -39.66178131]
[434.05926514 -52.01871490]
[450.09707642 -48.59514618]
[454.89300537 -32.91294861]
[443.51339722 -21.10462570]
[427.66461182 -25.31756401]
[413.32040405 -20.93083572]
[398.97619629 -16.54410553]
[384.63195801 -12.15737629]
[370.28775024 -7.77064705]
[362.67922974 8.88302040]
[345.00939941 14.78347206]
[328.35931396 5.73795652]
[314.14810181 10.53812218]
[299.93688965 15.33828831]
[285.72567749 20.13845444]
[271.58547974 25.14385223]
[257.51919556 30.35342979]
[243.45289612 35.56300735]
[239.76562500 47.90667725]
[229.48953247 55.99463654]
[216.23648071 56.69908142]
[204.83126831 49.53924942]
[190.69104004 54.54464340]
[176.55081177 59.55004120]
[162.41058350 64.55543518]
[152.99470520 76.09625244]
[137.40365601 73.40746307]
[123.26342010 78.41286469]
[121.01819611 85.56890869]
[135.82713318 87.95544434]
[150.63606262 90.34197998]
[165.40165710 87.70053101]
[177.39985657 96.70292664]
[178.99249268 111.61813354]
[169.16566467 122.95098114]
[154.17524719 123.48685455]
[143.56372070 112.88317108]
[130.04573059 106.38208771]
[116.52775574 99.88099670]
[114.28253174 107.03704071]
[123.02888489 119.22314453]
[138.54589844 119.17833710]
[151.10601807 128.29003906]
[155.87963867 143.05459595]
[151.03118896 157.79475403]
[138.42500305 166.84260559]
[122.90841675 166.71908569]
[110.44787598 157.47167969]
[105.83470917 142.65618896]
[110.84278107 127.96950531]
[102.09642029 115.78339386]
[95.04460907 118.33720398]
[80.94098663 123.44483185]
[73.88917542 125.99864197]
[74.97402954 140.95935059]
[76.05888367 155.92007446]
[77.14373779 170.88079834]
[78.22859955 185.84150696]
[79.31345367 200.80223083]
[93.17001343 207.42727661]
[101.84439087 220.10208130]
[103.00321198 235.41719055]
[96.33477020 249.25292969]
[83.63283539 257.88754272]
[68.31416321 258.99835205]
[54.49940109 252.28656006]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 209]
[4 208]
[5 207]
[6 206]
[7 205]
[8 204]
[9 123]
[10 122]
[11 121]
[12 120]
[13 119]
[15 114]
[16 113]
[17 112]
[18 111]
[19 110]
[24 109]
[25 108]
[26 107]
[27 106]
[28 105]
[29 104]
[30 103]
[34 99]
[35 98]
[36 97]
[38 95]
[39 94]
[40 93]
[41 92]
[42 84]
[43 83]
[44 82]
[45 81]
[46 80]
[48 78]
[49 77]
[50 76]
[51 75]
[54 71]
[55 70]
[124 178]
[125 177]
[127 175]
[128 174]
[129 173]
[130 172]
[133 168]
[134 167]
[135 166]
[138 165]
[139 164]
[140 163]
[141 162]
[146 159]
[147 158]
[148 157]
[149 156]
[150 155]
[190 201]
[191 200]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
