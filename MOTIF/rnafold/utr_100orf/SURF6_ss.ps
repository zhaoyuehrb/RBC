%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:26:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGGUUUCCGGCGGAGGUGGUGAGAGUCGCACGCGCAGCGGGGAAGGUGUGAGUCGUGAACGGCCCGGGUCUCCGCCAUGGCCUCUCUACUCGCCAAGGACGCCUACCUGCAGAGCCUGGCCAAGAAGAUCUGCUCCCAUUCGGCCCCGGAACAGCAGGCGCGCACGCGGGCUGGCA\
) } def
/len { sequence length } bind def

/coor [
[75.58468628 98.82889557]
[61.54513168 93.54771423]
[47.50557709 88.26652527]
[33.42021942 83.10874939]
[19.29014397 78.07476807]
[5.16006660 73.04079437]
[-10.43639278 75.69805145]
[-19.82892227 64.13822174]
[-33.95899963 59.10424423]
[-48.08907318 54.07026672]
[-62.30532074 49.28504562]
[-76.60335541 44.75005341]
[-90.90139771 40.21506500]
[-105.19943237 35.68007278]
[-111.77424622 36.73234558]
[-117.08414459 34.60640335]
[-119.91466522 30.72689056]
[-134.04473877 25.69291306]
[-148.17481995 20.65893555]
[-162.30490112 15.62495708]
[-176.43496704 10.59097862]
[-192.03143311 13.24823761]
[-201.42396545 1.68840754]
[-215.55403137 -3.34557056]
[-229.68411255 -8.37954807]
[-238.84808350 -8.31446171]
[-244.01667786 -13.62785053]
[-258.05624390 -18.90903473]
[-272.09579468 -24.19021797]
[-287.09347534 -23.92696953]
[-300.93905640 -18.15633011]
[-310.45822144 -4.80278730]
[-326.75424194 -6.63900328]
[-333.06317139 -21.77603531]
[-322.89489746 -34.64220428]
[-306.70968628 -32.00189590]
[-292.86410522 -37.77253723]
[-297.86929321 -46.81397247]
[-297.80789185 -56.13312149]
[-311.21456909 -62.86075211]
[-324.62124634 -69.58837891]
[-338.02792358 -76.31600952]
[-351.43460083 -83.04364014]
[-364.84127808 -89.77127075]
[-378.24795532 -96.49890137]
[-387.26055908 -90.69537354]
[-397.79122925 -89.18363953]
[-407.91726685 -92.17164612]
[-415.81817627 -99.05194092]
[-420.10281372 -108.52376556]
[-420.05419922 -118.83857727]
[-433.08822632 -126.26245117]
[-448.90908813 -126.36928558]
[-456.13888550 -139.39155579]
[-469.17291260 -146.81542969]
[-482.20693970 -154.23930359]
[-495.24096680 -161.66317749]
[-511.62774658 -161.02621460]
[-520.14270020 -175.04148865]
[-512.02630615 -189.29129028]
[-495.62811279 -189.11665344]
[-487.81710815 -174.69720459]
[-474.78308105 -167.27333069]
[-461.74902344 -159.84945679]
[-448.71499634 -152.42558289]
[-433.82644653 -152.84976196]
[-425.66436768 -139.29649353]
[-412.63031006 -131.87261963]
[-394.30560303 -138.41194153]
[-376.78872681 -129.26629639]
[-371.52032471 -109.90557861]
[-358.11364746 -103.17794800]
[-344.70697021 -96.45031738]
[-331.30029297 -89.72268677]
[-317.89361572 -82.99505615]
[-304.48693848 -76.26742554]
[-291.08026123 -69.53979492]
[-277.87393188 -74.26024628]
[-264.50332642 -67.80839539]
[-259.44485474 -52.98012924]
[-266.81460571 -38.22977448]
[-252.77505493 -32.94858932]
[-238.73548889 -27.66740417]
[-224.65013123 -22.50962448]
[-210.52006531 -17.47564697]
[-196.38998413 -12.44166946]
[-181.80419922 -15.45899200]
[-171.40100098 -3.53909779]
[-157.27091980 1.49488020]
[-143.14083862 6.52885818]
[-129.01075745 11.56283665]
[-114.88068390 16.59681511]
[-100.66444397 21.38203621]
[-86.36640167 25.91702652]
[-72.06836700 30.45201683]
[-57.77032852 34.98700714]
[-53.17002869 33.60872650]
[-47.65536499 35.12635803]
[-43.05509567 39.94018936]
[-28.92502022 44.97416687]
[-14.79494381 50.00814438]
[-0.20916174 46.99082184]
[10.19404411 58.91071701]
[24.32412148 63.94469452]
[38.45419693 68.97867584]
[45.83181000 68.25945282]
[52.78676224 74.22697449]
[66.82631683 79.50815582]
[80.86586761 84.78934479]
[101.09088898 69.54874420]
[130.12252808 79.39048767]
[143.96809387 73.61985016]
[157.81365967 67.84920502]
[171.65922546 62.07856750]
[185.50479126 56.30792618]
[191.13903809 44.68429947]
[202.81294250 40.17106247]
[214.05580139 44.68390274]
[228.00051880 39.15713882]
[231.72358704 24.09333038]
[243.61157227 14.12058926]
[259.09329224 13.07363796]
[272.21569824 21.35505104]
[277.93298340 35.78045654]
[274.04672241 50.80299377]
[262.05123901 60.64618683]
[246.55908203 61.52512741]
[233.52728271 53.10184860]
[219.58256531 58.62861252]
[209.46234131 72.95040131]
[191.27542114 70.15349579]
[177.42985535 75.92413330]
[163.58428955 81.69477081]
[149.73872375 87.46541595]
[135.89315796 93.23605347]
[134.13272095 100.52651978]
[148.52058411 96.28513336]
[159.38772583 106.62463379]
[155.86712646 121.20562744]
[141.47933960 125.44727325]
[130.61184692 115.10744476]
[128.85140991 122.39791107]
[138.53796387 133.85087585]
[148.22451782 145.30386353]
[157.91107178 156.75683594]
[167.59764099 168.20980835]
[177.28419495 179.66278076]
[186.97074890 191.11575317]
[196.75743103 202.48329163]
[206.64349365 213.76449585]
[218.86650085 210.99014282]
[231.03616333 213.67179871]
[240.84655762 221.23829651]
[246.46568298 232.19889832]
[246.87751770 244.43673706]
[242.06510925 255.61750793]
[251.54917908 267.23870850]
[267.06497192 272.54833984]
[269.95864868 288.69015503]
[257.25347900 299.05886841]
[242.01940918 292.98800659]
[239.92796326 276.72277832]
[230.44389343 265.10156250]
[212.90126038 266.92330933]
[197.63117981 257.78845215]
[190.82141113 241.17956543]
[195.36228943 223.65055847]
[185.47622681 212.36935425]
[178.68328857 209.40243530]
[175.51777649 200.80230713]
[165.83122253 189.34933472]
[156.14465332 177.89636230]
[146.45809937 166.44338989]
[136.77154541 154.99041748]
[127.08499146 143.53744507]
[117.39843750 132.08445740]
[98.92818451 133.46733093]
[83.79063416 125.80165863]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 109]
[2 108]
[3 107]
[4 105]
[5 104]
[6 103]
[8 101]
[9 100]
[10 99]
[11 96]
[12 95]
[13 94]
[14 93]
[17 92]
[18 91]
[19 90]
[20 89]
[21 88]
[23 86]
[24 85]
[25 84]
[27 83]
[28 82]
[29 81]
[30 37]
[31 36]
[39 77]
[40 76]
[41 75]
[42 74]
[43 73]
[44 72]
[45 71]
[51 68]
[52 67]
[54 65]
[55 64]
[56 63]
[57 62]
[111 135]
[112 134]
[113 133]
[114 132]
[115 131]
[118 129]
[119 128]
[142 176]
[143 175]
[144 174]
[145 173]
[146 172]
[147 171]
[148 170]
[149 168]
[150 167]
[156 163]
[157 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
