%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:37:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUACGCCGCUGAUGUGGAGUAGGGCCGAGCGCGGAACGCGAGGGGCUGCUGGGGUGUUUGUCGCAGCGGGUUUUCCUCGGCGGUUUGCGGAGCUGCUAGGAUGGAGCAGGUUGCGGAGGGAGCAAGGGUGACCGCAGUCCCUGUGUCAGCUGCCGACAGCACUGAGGAGUUGGCCGAAGUCGAAGAAGGAGUUGGAGUAG\
) } def
/len { sequence length } bind def

/coor [
[114.35927582 221.66619873]
[106.87038422 222.07424927]
[101.18405914 235.95465088]
[95.49773407 249.83505249]
[89.81140137 263.71545410]
[91.73970795 279.41873169]
[79.75515747 288.26290894]
[74.06883240 302.14331055]
[68.38250732 316.02371216]
[62.69617844 329.90414429]
[65.43487549 346.07296753]
[52.63078690 356.31930542]
[37.45566559 350.10260010]
[35.52037430 333.81802368]
[48.81577301 324.21780396]
[54.50209808 310.33740234]
[60.18842697 296.45700073]
[65.87474823 282.57659912]
[63.53972244 267.86614990]
[75.93099976 258.02914429]
[81.61732483 244.14872742]
[87.30364990 230.26832581]
[92.98997498 216.38790894]
[95.65849304 201.62719727]
[95.19199371 186.63444519]
[94.72549438 171.64170837]
[94.25899506 156.64895630]
[93.79250336 141.65621948]
[93.32600403 126.66346741]
[77.64013672 119.88260651]
[67.90869904 104.13393402]
[54.40866089 110.67220306]
[40.90862274 117.21047211]
[27.40858269 123.74873352]
[15.78882694 136.09448242]
[0.70888251 128.34648132]
[3.97955036 111.71100616]
[20.87031746 110.24869537]
[34.37035751 103.71042633]
[47.87039566 97.17216492]
[61.37043762 90.63389587]
[67.59201050 76.98501587]
[63.67218399 62.50623703]
[59.75235748 48.02746201]
[55.83252716 33.54868698]
[51.91269684 19.06991196]
[47.99287033 4.59113646]
[44.07304001 -9.88763905]
[40.15321350 -24.36641502]
[36.23338318 -38.84519196]
[30.96649361 -46.31735611]
[32.36705399 -53.57965469]
[28.67286873 -68.11763763]
[9.14287949 -77.81755829]
[3.22458124 -98.51008606]
[14.37396908 -116.58652496]
[9.56158257 -130.79359436]
[4.74919605 -145.00067139]
[-0.06319051 -159.20774841]
[-4.87557697 -173.41482544]
[-20.60863876 -186.01016235]
[-16.02263832 -204.79031372]
[-21.27453613 -218.84085083]
[-26.52643204 -232.89138794]
[-31.77832794 -246.94192505]
[-37.03022385 -260.99246216]
[-42.28212357 -275.04299927]
[-47.53401947 -289.09353638]
[-61.63697433 -295.70748901]
[-66.76299286 -310.03155518]
[-60.37068558 -323.43579102]
[-65.62258148 -337.48632812]
[-70.87447357 -351.53686523]
[-76.12637329 -365.58740234]
[-81.59614563 -379.55456543]
[-87.28247070 -393.43496704]
[-92.96879578 -407.31536865]
[-98.65512848 -421.19580078]
[-104.80858612 -427.95657349]
[-104.32009888 -435.33654785]
[-109.78987122 -449.30371094]
[-115.25964355 -463.27087402]
[-120.72941589 -477.23803711]
[-126.19918823 -491.20520020]
[-131.66896057 -505.17236328]
[-137.13873291 -519.13952637]
[-142.60850525 -533.10668945]
[-154.01428223 -545.65039062]
[-145.11822510 -560.08288574]
[-128.78709412 -555.52978516]
[-128.64134216 -538.57641602]
[-123.17157745 -524.60931396]
[-117.70179749 -510.64212036]
[-112.23202515 -496.67495728]
[-106.76225281 -482.70779419]
[-101.29248047 -468.74063110]
[-95.82270813 -454.77346802]
[-90.35293579 -440.80630493]
[-84.77471924 -426.88211060]
[-79.08839417 -413.00170898]
[-73.40206909 -399.12130737]
[-67.71573639 -385.24090576]
[-63.72826767 -382.60043335]
[-61.36115646 -377.42379761]
[-62.07583618 -370.83929443]
[-56.82394028 -356.78875732]
[-51.57204437 -342.73822021]
[-46.32014847 -328.68768311]
[-32.70285416 -322.76275635]
[-27.17652893 -308.58831787]
[-33.48348236 -294.34542847]
[-28.23158646 -280.29489136]
[-22.97968864 -266.24435425]
[-17.72779274 -252.19381714]
[-12.47589493 -238.14328003]
[-7.22399855 -224.09274292]
[-1.97210193 -210.04220581]
[7.67723799 -206.65338135]
[13.99798775 -198.33572388]
[14.70802784 -187.69294739]
[9.33149624 -178.22720337]
[14.14388275 -164.02014160]
[18.95627022 -149.81306458]
[23.76865578 -135.60598755]
[28.58104324 -121.39891815]
[37.15770721 -120.40805054]
[44.98540878 -116.66365051]
[51.20133209 -110.54713440]
[55.11019135 -102.70300293]
[56.26193237 -93.97106934]
[54.50338745 -85.29649353]
[49.99795532 -77.62752533]
[43.21085358 -71.81182098]
[46.90503693 -57.27383804]
[50.71215820 -42.76501846]
[54.63198853 -28.28624344]
[58.55181503 -13.80746746]
[62.47164536 0.67130780]
[66.39147186 15.15008354]
[70.31130219 29.62885857]
[74.23113251 44.10763550]
[78.15096283 58.58641052]
[82.07079315 73.06518555]
[97.57402802 68.95578766]
[112.50933075 72.81915283]
[123.19065857 83.08571625]
[127.28559113 96.68649292]
[142.10455322 99.00997162]
[156.92350769 101.33344269]
[171.74246216 103.65691376]
[180.71269226 101.89387512]
[186.77308655 106.13347626]
[201.55410767 108.68713379]
[216.33514404 111.24078369]
[230.22099304 103.20569611]
[245.10765076 109.18624115]
[249.57534790 124.59465790]
[240.19685364 137.61091614]
[224.16653442 138.25007629]
[213.78149414 126.02181244]
[199.00045776 123.46816254]
[184.21943665 120.91450500]
[169.41899109 118.47586823]
[154.60003662 116.15239716]
[139.78108215 113.82892609]
[124.96212006 111.50545502]
[122.71341705 115.47847748]
[119.83812714 119.02449799]
[116.41555023 122.04569244]
[112.54012299 124.45870209]
[108.31874847 126.19696808]
[108.78524780 141.18971252]
[109.25173950 156.18246460]
[109.71823883 171.17520142]
[110.18473816 186.16795349]
[110.65123749 201.16069031]
[129.69812012 198.38250732]
[150.00634766 213.28125000]
[157.16714478 226.46163940]
[170.55387878 234.89408875]
[169.83099365 249.77113342]
[176.99179077 262.95153809]
[192.35125732 265.88766479]
[202.18983459 278.04235840]
[201.86207581 293.67651367]
[191.52270508 305.40814209]
[176.05368042 307.69796753]
[162.75900269 299.46478271]
[157.91598511 284.59606934]
[163.81138611 270.11233521]
[156.65058899 256.93194580]
[143.77604675 249.44224548]
[143.98674011 233.62243652]
[136.82594299 220.44204712]
[129.33705139 220.85009766]
[130.15315247 235.82788086]
[130.96925354 250.80566406]
[136.37362671 264.79824829]
[124.73580170 274.26193237]
[112.13913727 266.11798096]
[115.99147797 251.62176514]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 23]
[3 22]
[4 21]
[5 20]
[7 18]
[8 17]
[9 16]
[10 15]
[24 176]
[25 175]
[26 174]
[27 173]
[28 172]
[29 171]
[31 41]
[32 40]
[33 39]
[34 38]
[42 143]
[43 142]
[44 141]
[45 140]
[46 139]
[47 138]
[48 137]
[49 136]
[50 135]
[52 134]
[53 133]
[56 125]
[57 124]
[58 123]
[59 122]
[60 121]
[62 117]
[63 116]
[64 115]
[65 114]
[66 113]
[67 112]
[68 111]
[71 108]
[72 107]
[73 106]
[74 105]
[75 102]
[76 101]
[77 100]
[78 99]
[80 98]
[81 97]
[82 96]
[83 95]
[84 94]
[85 93]
[86 92]
[87 91]
[147 166]
[148 165]
[149 164]
[150 163]
[152 162]
[153 161]
[154 160]
[178 194]
[179 193]
[181 191]
[182 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
