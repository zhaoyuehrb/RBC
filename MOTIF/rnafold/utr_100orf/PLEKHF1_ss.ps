%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:50:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUGGCCGGGACCCGGGCGGAGCGGGCGGGGACCCGGGCUACUGCGGUGUGGACUCGAGGGCUGGGCGCGGGGCCGGCGCAGAAGCCGCCAGCUGGAGACGAUGGUGGACCACUUGGCCAACACGGAGAUCAACAGCCAGCGCAUCGCGGCAGUGGAGAGCUGCUUCGGGGCCUCGGGGCAGCCGCUGGCGCUGCCAGGCC\
) } def
/len { sequence length } bind def

/coor [
[39.54060745 137.45234680]
[28.39166260 134.48751831]
[20.14738083 126.59013367]
[5.57686710 130.15385437]
[-8.99364758 133.71757507]
[-23.53614998 137.39393616]
[-38.04977036 141.18270874]
[-52.56338882 144.97149658]
[-67.07701111 148.76026917]
[-81.59062958 152.54904175]
[-88.77605438 163.26541138]
[-100.94727325 166.11982727]
[-111.45135498 160.11250305]
[-126.02187347 163.67622375]
[-140.59239197 167.23994446]
[-155.16290283 170.80366516]
[-166.72970581 181.59809875]
[-180.93080139 177.10609436]
[-195.50131226 180.66981506]
[-203.72732544 193.89746094]
[-218.55467224 197.30401611]
[-231.11450195 189.38024902]
[-245.68501282 192.94398499]
[-260.25552368 196.50770569]
[-266.21151733 210.71447754]
[-279.23855591 218.59794617]
[-294.23242188 217.31413269]
[-305.46084595 207.56422424]
[-320.03134155 211.12794495]
[-334.60186768 214.69166565]
[-349.17236328 218.25538635]
[-354.27359009 227.87109375]
[-363.63381958 232.98353577]
[-374.04336548 232.11494446]
[-382.08139038 225.79327393]
[-396.75518799 228.90438843]
[-411.42901611 232.01548767]
[-423.32434082 242.44679260]
[-437.37960815 237.51747131]
[-452.05343628 240.62857056]
[-466.72726440 243.73968506]
[-476.64218140 256.35214233]
[-492.68521118 256.31997681]
[-502.54949951 243.66790771]
[-498.66799927 228.10147095]
[-484.01831055 221.56193542]
[-469.83837891 229.06585693]
[-455.16455078 225.95475769]
[-440.49072266 222.84364319]
[-429.64498901 212.63487244]
[-414.54013062 217.34167480]
[-399.86630249 214.23056030]
[-385.19247437 211.11946106]
[-371.80813599 197.16941833]
[-352.73608398 203.68487549]
[-338.16558838 200.12115479]
[-323.59506226 196.55741882]
[-309.02456665 192.99369812]
[-303.56387329 179.16189575]
[-290.85522461 171.10247803]
[-275.66009521 172.08323669]
[-263.81924438 181.93717957]
[-249.24874878 178.37345886]
[-234.67822266 174.80973816]
[-227.19354248 161.98339844]
[-212.46774292 158.16171265]
[-199.06503296 166.09930420]
[-184.49452209 162.53558350]
[-173.96989441 151.99604797]
[-158.72662354 156.23315430]
[-144.15611267 152.66943359]
[-129.58558655 149.10571289]
[-115.01507568 145.54199219]
[-103.01335907 132.74237061]
[-85.37940979 138.03543091]
[-70.86578369 134.24664307]
[-56.35216522 130.45787048]
[-41.83854675 126.66909027]
[-27.32492638 122.88031769]
[-21.64338493 118.14604950]
[-12.55736923 119.14706421]
[2.01314449 115.58334351]
[16.58365822 112.01961517]
[25.11690903 95.82918549]
[43.08092117 90.92732239]
[59.19845200 100.87471771]
[73.65170288 96.86179352]
[88.10494995 92.84886932]
[99.53738403 83.13807678]
[105.83571625 69.52444458]
[100.62276459 54.84579086]
[107.20410919 41.12935257]
[121.23008728 36.25006104]
[127.52841949 22.63643074]
[133.82675171 9.02279949]
[140.12509155 -4.59083223]
[134.91213989 -19.26948738]
[141.49348450 -32.98592377]
[155.51947021 -37.86521530]
[161.81779480 -51.47884750]
[167.69181824 -65.28086853]
[173.13591003 -79.25806427]
[173.33531189 -88.39688110]
[178.77389526 -93.40836334]
[184.43362427 -107.29963684]
[182.47525024 -122.99916840]
[194.44284058 -131.86630249]
[200.10256958 -145.75756836]
[205.76229858 -159.64884949]
[206.10310364 -168.78347778]
[211.61860657 -173.71020508]
[217.49263000 -187.51222229]
[214.97343445 -203.71672058]
[227.91528320 -213.78848267]
[243.00471497 -207.36656189]
[244.71900940 -191.05726624]
[231.29464722 -181.63819885]
[225.42062378 -167.83618164]
[219.65357971 -153.98912048]
[213.99385071 -140.09783936]
[208.33412170 -126.20657349]
[210.69731140 -111.50063324]
[198.32490540 -101.63990784]
[192.66517639 -87.74863434]
[187.11309814 -73.81398010]
[181.66902161 -59.83678818]
[182.67739868 -57.21468353]
[182.70449829 -54.03393173]
[181.53184509 -50.66753006]
[179.08036804 -47.56073761]
[175.43142700 -45.18051147]
[169.13310242 -31.56687927]
[174.49450684 -17.71802139]
[168.30104065 -3.82214212]
[153.73872375 1.70750427]
[147.44038391 15.32113552]
[141.14205933 28.93476677]
[134.84371948 42.54839706]
[140.20513916 56.39725494]
[134.01165771 70.29313660]
[119.44934845 75.82278442]
[113.15100861 89.43640900]
[117.60929871 103.75855255]
[130.52160645 111.39217377]
[143.43391418 119.02579498]
[150.04039001 119.47635651]
[154.72135925 122.71321869]
[156.62249756 127.10074615]
[169.29238892 135.13031006]
[181.96228027 143.15986633]
[197.76052856 144.01177979]
[204.36892700 157.36012268]
[217.03881836 165.38967896]
[229.70870972 173.41923523]
[242.37860107 181.44879150]
[255.04849243 189.47836304]
[259.40505981 189.50184631]
[263.14883423 190.78480530]
[265.95843506 192.97886658]
[267.65908813 195.66694641]
[268.23226929 198.41717529]
[280.38113403 207.21516418]
[292.53002930 216.01315308]
[304.67892456 224.81114197]
[316.82778931 233.60911560]
[328.97668457 242.40710449]
[341.12557983 251.20509338]
[353.27444458 260.00308228]
[365.42333984 268.80108643]
[377.57223511 277.59906006]
[393.93103027 278.74887085]
[400.87042236 293.60742188]
[391.25180054 306.88952637]
[374.96994019 304.93167114]
[368.77423096 289.74795532]
[356.62536621 280.94995117]
[344.47647095 272.15197754]
[332.32757568 263.35397339]
[320.17871094 254.55599976]
[308.02981567 245.75801086]
[295.88092041 236.96002197]
[283.73205566 228.16203308]
[271.58316040 219.36404419]
[259.43426514 210.56605530]
[247.01893616 202.14825439]
[234.34904480 194.11868286]
[221.67915344 186.08912659]
[209.00926208 178.05957031]
[196.33937073 170.03001404]
[181.44735718 169.75242615]
[173.93270874 155.82975769]
[161.26281738 147.80020142]
[148.59292603 139.77064514]
[135.80029297 131.93811035]
[122.88798523 124.30448914]
[109.97566986 116.67086792]
[101.40304565 116.47366333]
[95.07673645 112.71943665]
[92.11787415 107.30211639]
[77.66462708 111.31504822]
[63.21137619 115.32797241]
[59.48346710 126.62492371]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 83]
[4 82]
[5 81]
[6 79]
[7 78]
[8 77]
[9 76]
[10 75]
[13 73]
[14 72]
[15 71]
[16 70]
[18 68]
[19 67]
[22 64]
[23 63]
[24 62]
[28 58]
[29 57]
[30 56]
[31 55]
[35 53]
[36 52]
[37 51]
[39 49]
[40 48]
[41 47]
[86 201]
[87 200]
[88 199]
[89 142]
[90 141]
[93 138]
[94 137]
[95 136]
[96 135]
[99 132]
[100 131]
[101 126]
[102 125]
[104 124]
[105 123]
[107 121]
[108 120]
[109 119]
[111 118]
[112 117]
[143 196]
[144 195]
[145 194]
[148 193]
[149 192]
[150 191]
[152 189]
[153 188]
[154 187]
[155 186]
[156 185]
[161 184]
[162 183]
[163 182]
[164 181]
[165 180]
[166 179]
[167 178]
[168 177]
[169 176]
[170 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
