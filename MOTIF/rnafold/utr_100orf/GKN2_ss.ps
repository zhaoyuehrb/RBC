%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:44:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAAAGUGAUCAUUUGAAAAAGAGAUAUCCACAUCUUCAAGCCCAUAUAAAGGAUAGAAGCUGCACAGGGCAGCUUUACUUACUCCAGCACCUUCCUCUCCCAGGCAAAAUGAAAAUACUUGUGGCAUUUCUGGUGGUGCUGACCAUCUUUGGGAUACAAUCUCAUGGAUACGAGGUUUUUAACAUCAUCAGCCCAAGCAACAAUGGUG\
) } def
/len { sequence length } bind def

/coor [
[64.33352661 96.29722595]
[50.06768036 91.66197205]
[35.80183411 87.02671814]
[21.50171280 82.49829865]
[7.16812038 78.07697296]
[-7.16547203 73.65564728]
[-21.49906349 69.23431396]
[-35.83265686 64.81298828]
[-55.26250076 70.18172455]
[-67.78770447 55.45117950]
[-82.24714661 51.46062469]
[-96.70658875 47.47007370]
[-111.16603088 43.47952271]
[-125.62547302 39.48896790]
[-140.08491516 35.49841690]
[-143.88656616 40.00740051]
[-148.57725525 43.52344894]
[-153.90655518 45.87884521]
[-159.59439087 46.96729279]
[-165.34570312 46.74862671]
[-170.86579895 45.25007248]
[-175.87545776 42.56401443]
[-187.46171570 52.09075165]
[-199.04797363 61.61748886]
[-210.63423157 71.14422607]
[-222.22047424 80.67095947]
[-223.50521851 96.42294312]
[-235.60592651 106.58900452]
[-251.34344482 105.13779449]
[-261.38098145 92.93029022]
[-259.76348877 77.20899200]
[-247.45053101 67.30106354]
[-231.74722290 69.08470917]
[-220.16096497 59.55797195]
[-208.57470703 50.03123474]
[-196.98844910 40.50449753]
[-185.40220642 30.97776031]
[-186.68798828 26.74990845]
[-187.20979309 22.36178017]
[-186.95133972 17.95029831]
[-185.92070007 13.65311813]
[-198.05596924 4.83633947]
[-210.19122314 -3.98043919]
[-222.11265564 3.81326294]
[-235.94934082 7.06264782]
[-250.03446960 5.39722776]
[-262.67843628 -0.96268684]
[-272.37149048 -11.23488331]
[-277.96408081 -24.17139816]
[-278.80313110 -38.21011734]
[-274.80816650 -51.66339493]
[-286.81018066 -60.66072464]
[-298.81216431 -69.65805054]
[-310.81417847 -78.65538025]
[-318.78002930 -78.87165070]
[-324.77301025 -82.80211639]
[-327.43731689 -88.58723450]
[-341.04766846 -94.89259338]
[-354.65805054 -101.19795227]
[-368.26843262 -107.50331116]
[-381.87881470 -113.80867004]
[-395.48919678 -120.11402893]
[-409.09957886 -126.41938782]
[-422.70996094 -132.72474670]
[-438.20629883 -128.57229614]
[-451.02856445 -138.21435547]
[-451.34057617 -154.25436401]
[-438.90304565 -164.38781738]
[-423.25692749 -160.84117126]
[-416.40460205 -146.33512878]
[-402.79421997 -140.02976990]
[-389.18383789 -133.72441101]
[-375.57345581 -127.41905212]
[-361.96307373 -121.11369324]
[-348.35269165 -114.80833435]
[-334.74230957 -108.50297546]
[-321.13195801 -102.19761658]
[-329.67993164 -114.52368927]
[-333.63583374 -128.99264526]
[-332.54815674 -143.95315552]
[-326.54107666 -157.69778442]
[-316.30010986 -168.65785217]
[-302.99414062 -175.58248901]
[-288.14169312 -177.68138123]
[-273.43792725 -174.71498108]
[-260.56097412 -167.02186584]
[-250.98048401 -155.48002625]
[-245.78987122 -141.40673828]
[-245.58151245 -126.40818787]
[-250.37922668 -112.19615173]
[-259.63543701 -100.39264679]
[-272.29373169 -92.34481812]
[-286.90942383 -88.97114563]
[-301.81683350 -90.65738678]
[-289.81484985 -81.66005707]
[-277.81283569 -72.66272736]
[-265.81082153 -63.66540146]
[-252.30287170 -71.95091248]
[-236.61151123 -74.42455292]
[-221.13476562 -70.67835999]
[-208.24935913 -61.25717926]
[-199.94572449 -47.57969284]
[-197.52055359 -31.72480202]
[-201.37443542 -16.11569405]
[-189.23918152 -7.29891539]
[-177.10392761 1.51786351]
[-150.95977783 -1.34742165]
[-136.09436035 21.03897285]
[-121.63492584 25.02952576]
[-107.17548370 29.02007866]
[-92.71604156 33.01063156]
[-78.25659180 37.00118256]
[-63.79715347 40.99173737]
[-55.39866638 35.16955566]
[-44.96270752 34.92655563]
[-35.92999268 40.58436966]
[-31.41132927 50.47939682]
[-17.07773590 54.90072632]
[-2.74414420 59.32205200]
[11.58944798 63.74338150]
[25.92304039 68.16471100]
[33.24182510 67.13232422]
[40.43708801 72.76087189]
[54.70293427 77.39612579]
[68.96878052 82.03137970]
[79.02017975 70.91985321]
[92.73457336 64.88559723]
[107.71747589 64.98217010]
[121.35294342 71.19271851]
[131.26026917 82.43289185]
[135.70968628 96.74021149]
[150.60238647 98.53112793]
[165.49508667 100.32203674]
[180.38780212 102.11295319]
[195.28050232 103.90386963]
[210.17320251 105.69477844]
[225.06590271 107.48569489]
[239.95861816 109.27660370]
[254.85131836 111.06752014]
[269.97192383 97.83808136]
[289.64358521 99.95995331]
[301.23187256 115.61883545]
[316.18994141 116.73978424]
[331.14797974 117.86073303]
[346.10604858 118.98168945]
[361.09094238 119.65465546]
[376.08926392 119.87905121]
[391.08758545 120.10343933]
[406.08590698 120.32783508]
[420.00027466 112.79784393]
[432.61038208 120.72467041]
[447.60870361 120.94905853]
[462.60702515 121.17344666]
[477.60534668 121.39784241]
[492.60366821 121.62223053]
[507.60198975 121.84662628]
[523.52978516 116.03790283]
[533.52075195 129.73522949]
[523.12451172 143.12754822]
[507.37759399 136.84494019]
[492.37927246 136.62055969]
[477.38095093 136.39616394]
[462.38262939 136.17176819]
[447.38430786 135.94737244]
[432.38598633 135.72299194]
[419.54440308 143.26902771]
[405.86151123 135.32615662]
[390.86318970 135.10176086]
[375.86486816 134.87736511]
[360.86654663 134.65298462]
[358.76306152 136.50706482]
[355.79812622 137.63931274]
[352.24313354 137.71734619]
[348.48468018 136.51307678]
[344.98507690 133.93974304]
[330.02703857 132.81878662]
[315.06896973 131.69784546]
[300.11093140 130.57688904]
[294.42071533 139.12205505]
[285.62802124 144.57653809]
[275.28430176 145.89894104]
[265.24789429 142.78411865]
[257.34991455 135.73020935]
[253.06040955 125.96022034]
[238.16769409 124.16931152]
[223.27499390 122.37839508]
[208.38229370 120.58748627]
[193.48959351 118.79656982]
[178.59687805 117.00565338]
[163.70417786 115.21474457]
[148.81147766 113.42382812]
[133.91877747 111.63291931]
[127.35366821 123.18587494]
[117.03226471 131.55487061]
[121.23867798 145.95300293]
[125.44508362 160.35112000]
[140.09753418 165.45852661]
[148.92187500 178.22216797]
[148.52497864 193.73417664]
[139.05946350 206.02984619]
[124.16500854 210.38125610]
[109.56883240 205.11520386]
[100.88346863 192.25659180]
[101.44861603 176.74980164]
[111.04695892 164.55754089]
[106.84054565 150.15940857]
[102.63414001 135.76127625]
[87.25352478 133.51618958]
[74.26798248 124.97341156]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 125]
[2 124]
[3 123]
[4 121]
[5 120]
[6 119]
[7 118]
[8 117]
[10 113]
[11 112]
[12 111]
[13 110]
[14 109]
[15 108]
[22 37]
[23 36]
[24 35]
[25 34]
[26 33]
[41 106]
[42 105]
[43 104]
[51 97]
[52 96]
[53 95]
[54 94]
[57 77]
[58 76]
[59 75]
[60 74]
[61 73]
[62 72]
[63 71]
[64 70]
[131 192]
[132 191]
[133 190]
[134 189]
[135 188]
[136 187]
[137 186]
[138 185]
[139 184]
[142 178]
[143 177]
[144 176]
[145 175]
[146 170]
[147 169]
[148 168]
[149 167]
[151 165]
[152 164]
[153 163]
[154 162]
[155 161]
[156 160]
[194 207]
[195 206]
[196 205]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
