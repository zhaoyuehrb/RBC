%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:22:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGGUCUACAGCAGUUACACACAGGCAGUGGUAUCUGUGAGCAGCUCUGUGGACUCAAAGGUUUUCUCCCUGAGAGGCAUGACCCAGGCCAGCUGAUUCAUCAGAAUCAGGAUGGACGUGGUAGAGGUCGCGGGCAGUUGGUGGGCACAAGAGCGAGAGGACAUCAUUAUGAAAUACGAAAAGGGACACCGAGCUGGGCUGCCAGAGGACA\
) } def
/len { sequence length } bind def

/coor [
[-130.58049011 301.52221680]
[-144.08839417 308.13262939]
[-159.06509399 308.22225952]
[-172.53970337 301.82690430]
[-184.14801025 311.32675171]
[-195.75631714 320.82662964]
[-207.36460876 330.32647705]
[-218.97291565 339.82632446]
[-230.58122253 349.32620239]
[-242.18952942 358.82604980]
[-253.79783630 368.32589722]
[-265.40612793 377.82577515]
[-270.06448364 385.68127441]
[-277.25640869 387.37860107]
[-289.00357056 396.70620728]
[-300.75073242 406.03384399]
[-312.49786377 415.36145020]
[-311.97052002 430.75717163]
[-320.50997925 443.36395264]
[-334.66787720 448.46475220]
[-348.94363403 444.30056763]
[-360.69079590 453.62817383]
[-372.43795776 462.95578003]
[-384.18508911 472.28341675]
[-395.93225098 481.61102295]
[-407.67941284 490.93862915]
[-406.88137817 506.43518066]
[-415.37258911 519.42279053]
[-429.88800049 524.90753174]
[-444.84616089 520.78039551]
[-454.49530029 508.62826538]
[-455.12518311 493.12399292]
[-446.49356079 480.22921753]
[-431.91949463 474.90228271]
[-417.00701904 479.19149780]
[-405.25985718 469.86386108]
[-393.51272583 460.53625488]
[-381.76556396 451.20864868]
[-370.01840210 441.88101196]
[-358.27124023 432.55340576]
[-359.09182739 417.70535278]
[-350.91519165 405.07180786]
[-336.70111084 399.61160278]
[-321.82550049 403.61428833]
[-310.07833862 394.28668213]
[-298.33117676 384.95907593]
[-286.58404541 375.63143921]
[-274.90597534 366.21746826]
[-263.29769897 356.71759033]
[-251.68937683 347.21774292]
[-240.08108521 337.71789551]
[-228.47277832 328.21801758]
[-216.86447144 318.71817017]
[-205.25616455 309.21832275]
[-193.64785767 299.71844482]
[-182.03956604 290.21859741]
[-185.64324951 275.74520874]
[-182.59295654 261.08215332]
[-173.44128418 249.14868164]
[-159.96090698 242.34431458]
[-144.80142212 242.06648254]
[-130.96865845 248.42384338]
[-119.36035919 238.92399597]
[-107.75205994 229.42413330]
[-96.14375305 219.92427063]
[-84.53545380 210.42442322]
[-72.92714691 200.92456055]
[-61.31884384 191.42471313]
[-76.31119537 190.94589233]
[-88.22850800 181.83668518]
[-92.62482452 167.49539185]
[-87.86003876 153.27229309]
[-75.71173096 144.47351074]
[-60.71201324 144.38157654]
[-48.45676422 153.03079224]
[-43.51800537 167.19442749]
[-47.73800659 181.58822632]
[-35.09209061 173.52095032]
[-22.44617462 165.45368958]
[-9.80025768 157.38642883]
[-8.50163364 147.25288391]
[-1.69730294 139.34024048]
[8.54961109 136.41784668]
[18.92310143 139.68241882]
[31.80145454 131.99165344]
[44.67980576 124.30087280]
[57.55815887 116.61009979]
[70.43651581 108.91931915]
[72.39356995 86.16384888]
[89.45272827 70.97743988]
[87.90680695 56.05731201]
[86.36087799 41.13718796]
[75.21620178 26.47759819]
[82.99908447 10.74811840]
[81.23327637 -4.14758301]
[79.46746826 -19.04328537]
[77.70166016 -33.93898773]
[75.93585205 -48.83468628]
[74.17004395 -63.73038864]
[72.40423584 -78.62609100]
[62.16165924 -91.43318176]
[68.38283539 -106.60648346]
[84.66796112 -108.53699493]
[94.26428223 -95.23878479]
[87.29994202 -80.39189911]
[89.06575012 -65.49619293]
[90.83155060 -50.60049438]
[92.59735870 -35.70479202]
[94.36316681 -20.80909157]
[96.12897491 -5.91339016]
[97.89478302 8.98231125]
[107.19795227 16.71240997]
[108.79176331 29.10672760]
[101.28100586 39.59126663]
[102.82692719 54.51139069]
[104.37284851 69.43151855]
[120.07941437 70.12215424]
[135.48735046 79.23394012]
[149.08975220 72.91137695]
[162.69215393 66.58882141]
[176.29454041 60.26625824]
[189.89694214 53.94369888]
[203.49934387 47.62113953]
[209.96112061 41.16710281]
[217.34930420 41.30729294]
[231.04347229 35.18603897]
[240.48480225 22.49068832]
[255.26155090 24.36062241]
[268.95571899 18.23936844]
[282.64990234 12.11811447]
[284.18466187 -4.34579134]
[293.75833130 -17.71231461]
[308.68063354 -24.38802528]
[324.83963013 -22.63713837]
[337.83468628 -13.03173828]
[351.43710327 -19.35429764]
[356.94079590 -33.92642593]
[370.82565308 -40.14462662]
[384.68402100 -34.80787277]
[398.28640747 -41.13043213]
[411.88882446 -47.45299530]
[415.77969360 -62.59878540]
[428.52584839 -71.65803528]
[444.10888672 -70.35324097]
[455.17102051 -59.30048752]
[456.48901367 -43.71854401]
[447.44058228 -30.96473312]
[432.29809570 -27.06101036]
[418.21136475 -33.85059357]
[404.60897827 -27.52803612]
[391.00659180 -21.20547485]
[386.15225220 -7.17083263]
[372.44757080 -0.56508666]
[357.75964355 -5.75190020]
[344.15725708 0.57065988]
[343.84979248 14.22350883]
[337.66043091 26.47088242]
[326.74606323 34.89720917]
[313.20156860 37.81312180]
[299.65795898 34.59391022]
[288.77114868 25.81228256]
[275.07696533 31.93353653]
[261.38281250 38.05479050]
[252.92097473 50.31230927]
[237.16471863 48.88020706]
[223.47055054 55.00146103]
[209.82189941 61.22353745]
[196.21949768 67.54609680]
[182.61711121 73.86865997]
[169.01470947 80.19121552]
[155.41230774 86.51377869]
[141.80990601 92.83633423]
[140.38064575 100.19889069]
[155.34907532 101.17166138]
[170.31750488 102.14443207]
[184.59396362 97.54195404]
[197.62701416 104.96755981]
[200.94686890 119.59557343]
[192.39604187 131.91967773]
[177.53147888 133.93081665]
[166.01252747 124.32066345]
[151.76733398 119.62233734]
[137.52214050 114.92400360]
[136.09288025 122.28656006]
[146.34172058 133.23924255]
[162.18128967 137.48658752]
[166.16081238 153.39555359]
[154.18650818 164.60037231]
[138.57649231 159.57447815]
[135.38903809 143.48808289]
[125.14019012 132.53540039]
[111.27014923 136.87355042]
[97.67536163 135.92303467]
[86.18596649 130.45216370]
[78.12728882 121.79767609]
[65.24893188 129.48844910]
[52.37058258 137.17922974]
[39.49222946 144.86999512]
[26.61387825 152.56077576]
[17.59598351 170.59075928]
[-1.73299086 170.03233337]
[-14.37890720 178.09960938]
[-27.02482414 186.16687012]
[-39.67073822 194.23414612]
[-51.81898499 203.03300476]
[-63.42728806 212.53286743]
[-75.03559113 222.03273010]
[-86.64389801 231.53257751]
[-98.25219727 241.03244019]
[-109.86050415 250.53230286]
[-121.46881104 260.03216553]
[-117.97319794 274.84909058]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 56]
[5 55]
[6 54]
[7 53]
[8 52]
[9 51]
[10 50]
[11 49]
[12 48]
[14 47]
[15 46]
[16 45]
[17 44]
[21 40]
[22 39]
[23 38]
[24 37]
[25 36]
[26 35]
[62 211]
[63 210]
[64 209]
[65 208]
[66 207]
[67 206]
[68 205]
[77 204]
[78 203]
[79 202]
[80 201]
[84 199]
[85 198]
[86 197]
[87 196]
[88 195]
[90 116]
[91 115]
[92 114]
[94 111]
[95 110]
[96 109]
[97 108]
[98 107]
[99 106]
[100 105]
[118 172]
[119 171]
[120 170]
[121 169]
[122 168]
[123 167]
[125 166]
[126 165]
[128 163]
[129 162]
[130 161]
[135 155]
[136 154]
[139 151]
[140 150]
[141 149]
[184 191]
[185 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
