%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:31:14 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RESP18)
} def

/sequence { (\
AUGGCAGUGGAUGUGGAAUUCGGAGUCGCGGGCUGGUGGGAAGCUGCAGCCCCGCUCAGCCCCUCGGCCGUGGCCGCUACCUUCACUGAGACUUGGCCGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 71 0.017440831 ubox
2 28 0.022364667 ubox
2 70 0.019155596 ubox
2 95 0.013319001 ubox
2 99 0.536018179 ubox
3 27 0.032093739 ubox
3 69 0.020750195 ubox
3 81 0.003406413 ubox
3 93 0.091424165 ubox
3 94 0.020199782 ubox
3 98 0.758004980 ubox
4 26 0.032180766 ubox
4 68 0.020742695 ubox
4 80 0.003411058 ubox
4 92 0.098859333 ubox
4 93 0.020756382 ubox
4 97 0.758303100 ubox
5 25 0.032172839 ubox
5 67 0.020709207 ubox
5 88 0.732425822 ubox
5 95 0.055786239 ubox
5 96 0.674837567 ubox
6 78 0.004697741 ubox
6 87 0.982844631 ubox
6 93 0.127345784 ubox
6 94 0.056190575 ubox
7 29 0.011835310 ubox
7 77 0.004855360 ubox
7 86 0.988731945 ubox
7 92 0.140002216 ubox
7 93 0.012964492 ubox
8 22 0.034574396 ubox
8 28 0.011823874 ubox
8 76 0.004852567 ubox
8 85 0.988738787 ubox
8 91 0.138831249 ubox
9 21 0.036882128 ubox
9 27 0.011695972 ubox
9 63 0.004365333 ubox
9 75 0.004846646 ubox
9 81 0.035372722 ubox
9 82 0.005845029 ubox
9 84 0.988598558 ubox
9 87 0.005377259 ubox
9 93 0.008996274 ubox
10 20 0.036886952 ubox
10 21 0.004362525 ubox
10 26 0.011223961 ubox
10 27 0.003597035 ubox
10 62 0.003741609 ubox
10 74 0.004793789 ubox
10 80 0.037290234 ubox
10 81 0.011255472 ubox
10 82 0.006481354 ubox
10 83 0.985948818 ubox
10 84 0.015633425 ubox
10 86 0.005344894 ubox
10 92 0.009369325 ubox
11 19 0.036887947 ubox
11 20 0.004353207 ubox
11 26 0.004013614 ubox
11 82 0.976155524 ubox
11 83 0.021244586 ubox
12 18 0.036718297 ubox
12 25 0.003959320 ubox
12 79 0.058944493 ubox
12 85 0.005836956 ubox
12 88 0.004941471 ubox
13 29 0.006309909 ubox
13 77 0.156662337 ubox
13 80 0.974162823 ubox
13 84 0.005910671 ubox
13 86 0.138402933 ubox
14 22 0.011634595 ubox
14 28 0.006300850 ubox
14 70 0.003731042 ubox
14 76 0.157310842 ubox
14 79 0.975980112 ubox
14 85 0.138522733 ubox
15 21 0.012065853 ubox
15 27 0.006219506 ubox
15 69 0.004030080 ubox
15 75 0.159060756 ubox
15 78 0.975575887 ubox
15 81 0.028064074 ubox
15 82 0.005075773 ubox
15 84 0.138144626 ubox
16 20 0.007830108 ubox
16 26 0.005069101 ubox
16 27 0.004280566 ubox
16 68 0.003977754 ubox
16 74 0.158983537 ubox
16 77 0.974975884 ubox
16 80 0.028106777 ubox
16 81 0.006621263 ubox
16 83 0.136466093 ubox
16 84 0.010732808 ubox
17 26 0.004583954 ubox
17 82 0.130913496 ubox
17 83 0.014489024 ubox
18 26 0.006327026 ubox
18 71 0.007669970 ubox
18 82 0.014926454 ubox
19 25 0.006596316 ubox
19 70 0.004619548 ubox
19 73 0.024538313 ubox
20 24 0.005785594 ubox
20 72 0.026393515 ubox
20 73 0.748173237 ubox
21 28 0.035353607 ubox
21 30 0.010729170 ubox
21 66 0.003499097 ubox
21 70 0.206229032 ubox
21 72 0.807901648 ubox
21 76 0.494821886 ubox
22 27 0.036647128 ubox
22 29 0.025668424 ubox
22 62 0.003452186 ubox
22 63 0.005391954 ubox
22 65 0.003443377 ubox
22 69 0.205865312 ubox
22 71 0.802439280 ubox
22 75 0.493088926 ubox
22 78 0.051844378 ubox
22 81 0.045912484 ubox
22 82 0.003873968 ubox
23 57 0.010722582 ubox
23 61 0.003443233 ubox
23 62 0.005207578 ubox
23 63 0.003315376 ubox
23 65 0.045185572 ubox
23 68 0.176125698 ubox
23 74 0.417394029 ubox
23 77 0.053388421 ubox
23 80 0.045866491 ubox
23 81 0.004896170 ubox
23 94 0.003841022 ubox
24 56 0.010814983 ubox
24 64 0.046252768 ubox
24 78 0.038937908 ubox
24 93 0.004092316 ubox
25 55 0.010819971 ubox
25 60 0.006012778 ubox
25 63 0.046282493 ubox
25 68 0.830986836 ubox
25 71 0.006409412 ubox
25 74 0.322501830 ubox
25 77 0.036595320 ubox
25 80 0.004902685 ubox
25 92 0.004122215 ubox
26 59 0.005978163 ubox
26 67 0.842384823 ubox
26 73 0.464340081 ubox
26 76 0.033315192 ubox
26 79 0.004953607 ubox
26 91 0.004115719 ubox
27 54 0.010456478 ubox
27 66 0.847395369 ubox
27 70 0.031214312 ubox
27 72 0.515057946 ubox
27 76 0.005774772 ubox
27 90 0.004055929 ubox
28 53 0.010690908 ubox
28 55 0.006596802 ubox
28 65 0.843312892 ubox
28 68 0.027715044 ubox
28 69 0.022874214 ubox
28 71 0.516232595 ubox
28 74 0.023066123 ubox
28 75 0.004280912 ubox
28 77 0.005838759 ubox
29 54 0.006603314 ubox
29 66 0.005719076 ubox
29 67 0.034508176 ubox
29 70 0.515821593 ubox
29 72 0.007680211 ubox
29 73 0.022532970 ubox
29 76 0.005817227 ubox
30 52 0.011418596 ubox
30 53 0.005731444 ubox
30 61 0.003416060 ubox
30 62 0.763373783 ubox
30 63 0.384843770 ubox
30 64 0.004648063 ubox
30 69 0.420866981 ubox
30 71 0.008538708 ubox
31 51 0.011888293 ubox
31 52 0.004699310 ubox
31 61 0.796279909 ubox
31 62 0.314363443 ubox
31 68 0.297873462 ubox
31 69 0.299665189 ubox
32 50 0.012333205 ubox
32 51 0.003363702 ubox
32 60 0.826833978 ubox
32 61 0.222321686 ubox
32 68 0.422077378 ubox
33 49 0.012762084 ubox
33 59 0.856186692 ubox
33 67 0.516148706 ubox
34 48 0.012559190 ubox
34 58 0.855750364 ubox
34 66 0.515965956 ubox
35 47 0.009997088 ubox
35 56 0.132382764 ubox
35 57 0.845662775 ubox
35 65 0.515996683 ubox
36 47 0.007977383 ubox
36 55 0.855797273 ubox
36 56 0.021293718 ubox
36 63 0.017749639 ubox
36 64 0.486634583 ubox
37 46 0.010981503 ubox
37 54 0.855626967 ubox
38 45 0.012426444 ubox
38 52 0.016113054 ubox
38 53 0.855971863 ubox
38 62 0.055102825 ubox
38 63 0.512551860 ubox
38 64 0.022642238 ubox
38 65 0.003962254 ubox
39 44 0.012492193 ubox
39 51 0.021854535 ubox
39 52 0.855858074 ubox
39 53 0.010313721 ubox
39 61 0.055067213 ubox
39 62 0.512699498 ubox
39 63 0.027893025 ubox
39 64 0.004856141 ubox
40 50 0.026117013 ubox
40 51 0.851746356 ubox
40 52 0.010976392 ubox
40 60 0.038231188 ubox
40 61 0.510023994 ubox
40 62 0.027970820 ubox
40 63 0.005235377 ubox
42 56 0.006705230 ubox
43 50 0.780084389 ubox
43 55 0.006996462 ubox
43 60 0.512735042 ubox
44 49 0.781027075 ubox
44 54 0.006967062 ubox
44 59 0.516301290 ubox
45 58 0.516152834 ubox
46 55 0.016205058 ubox
46 57 0.515917060 ubox
47 54 0.017434858 ubox
48 56 0.513998182 ubox
49 55 0.515950360 ubox
50 54 0.512204209 ubox
59 68 0.005526583 ubox
60 67 0.005647326 ubox
61 66 0.005816409 ubox
61 67 0.005352908 ubox
62 66 0.005417048 ubox
63 90 0.005799191 ubox
63 100 0.006140706 ubox
64 89 0.005882968 ubox
64 100 0.017464054 ubox
65 76 0.062981635 ubox
65 88 0.005889790 ubox
65 99 0.030415034 ubox
66 75 0.079328189 ubox
66 87 0.005872622 ubox
66 98 0.030638899 ubox
67 74 0.079381266 ubox
67 86 0.005841009 ubox
67 97 0.030639849 ubox
68 73 0.079126234 ubox
68 96 0.030639680 ubox
69 76 0.006710690 ubox
69 95 0.030613585 ubox
70 75 0.006811169 ubox
70 80 0.020093372 ubox
70 86 0.012219699 ubox
70 92 0.004841683 ubox
70 94 0.017462141 ubox
71 79 0.020266454 ubox
71 85 0.012556490 ubox
71 91 0.004958612 ubox
71 99 0.011727974 ubox
72 78 0.020259024 ubox
72 81 0.011948154 ubox
72 84 0.012420198 ubox
72 93 0.010745515 ubox
72 98 0.023714425 ubox
73 77 0.019825556 ubox
73 80 0.011993737 ubox
73 83 0.009988285 ubox
73 92 0.011368916 ubox
73 97 0.023751263 ubox
74 96 0.023751506 ubox
75 88 0.005306959 ubox
75 95 0.023745180 ubox
76 87 0.004212849 ubox
76 94 0.021340840 ubox
77 90 0.009139744 ubox
78 89 0.008836888 ubox
81 90 0.027241868 ubox
82 89 0.026978653 ubox
82 90 0.012173741 ubox
83 88 0.024162523 ubox
83 89 0.014556032 ubox
83 91 0.011638176 ubox
84 88 0.014965302 ubox
84 90 0.013020777 ubox
84 95 0.006499273 ubox
85 94 0.006364894 ubox
87 95 0.009901557 ubox
88 94 0.032766581 ubox
88 98 0.004107534 ubox
89 93 0.030312413 ubox
92 100 0.058593879 ubox
93 99 0.057018671 ubox
93 100 0.011636437 ubox
94 99 0.016534389 ubox
5 88 0.9500000 lbox
6 87 0.9500000 lbox
7 86 0.9500000 lbox
8 85 0.9500000 lbox
9 84 0.9500000 lbox
10 83 0.9500000 lbox
11 82 0.9500000 lbox
13 80 0.9500000 lbox
14 79 0.9500000 lbox
15 78 0.9500000 lbox
16 77 0.9500000 lbox
20 73 0.9500000 lbox
21 72 0.9500000 lbox
22 71 0.9500000 lbox
25 68 0.9500000 lbox
26 67 0.9500000 lbox
27 66 0.9500000 lbox
28 65 0.9500000 lbox
30 62 0.9500000 lbox
31 61 0.9500000 lbox
32 60 0.9500000 lbox
33 59 0.9500000 lbox
34 58 0.9500000 lbox
35 57 0.9500000 lbox
36 55 0.9500000 lbox
37 54 0.9500000 lbox
38 53 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
43 50 0.9500000 lbox
44 49 0.9500000 lbox
showpage
end
%%EOF
