%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:41:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUGCCGCGGCCCUGCUGCUCAGGGCACAUGCCUCCCCUCCCCAGGCCGCGGCCCAGCUGACCCUCGGGGCUCCCCCGGCAGCGGACAGGGAAGGGUUAAAGGCCCCCGGCUCCCUGCCCCCUGCCCUGGGGAACCCCUGGCCCUGUGGGGACAUGAACUGUGUUUGCCGCCUGGUCCUGGUCGUGCUGAGCCUGUGGCCAGAUACAGCUGUCGCCCCUGGGCCACCACCUGGCCCCCCUCGAGUUUCCCCAG\
) } def
/len { sequence length } bind def

/coor [
[54.36834717 259.74230957]
[51.45111847 245.02871704]
[52.09885788 230.04270935]
[56.27353287 215.63862610]
[46.55298996 227.06275940]
[36.83244705 238.48690796]
[27.11190605 249.91105652]
[17.39136314 261.33520508]
[7.67082024 272.75933838]
[-2.04972219 284.18347168]
[-11.77026463 295.60763550]
[-21.49080658 307.03176880]
[-24.65612793 315.57019043]
[-31.40291214 318.53613281]
[-41.26400757 329.83917236]
[-33.48741913 343.75936890]
[-30.95669556 359.47518921]
[-33.96018600 375.08016968]
[-42.11602020 388.68774414]
[-54.42057419 398.65924072]
[-69.37191772 403.80114746]
[-85.15316010 403.50811768]
[-99.85320282 397.83407593]
[-109.57374573 409.25820923]
[-119.29428864 420.68237305]
[-129.01483154 432.10650635]
[-131.43959045 448.32540894]
[-146.79502869 454.08236694]
[-159.28477478 443.45510864]
[-156.06045532 427.37606812]
[-140.43896484 422.38595581]
[-130.71842957 410.96182251]
[-120.99788666 399.53768921]
[-111.27734375 388.11352539]
[-118.63571167 376.03558350]
[-121.91313171 362.25564575]
[-120.77686310 348.11541748]
[-115.32462311 334.99603271]
[-106.07630157 324.18295288]
[-93.92443848 316.74002075]
[-80.04807281 313.40493774]
[-65.79837036 314.51605225]
[-52.56705093 319.97808838]
[-42.70595551 308.67504883]
[-32.91495132 297.31121826]
[-23.19440842 285.88708496]
[-13.47386551 274.46295166]
[-3.75332284 263.03878784]
[5.96721983 251.61465454]
[15.68776226 240.19050598]
[25.40830421 228.76637268]
[35.12884903 217.34222412]
[44.84938812 205.91807556]
[52.77368927 193.18208313]
[58.72750092 179.41429138]
[64.68131256 165.64649963]
[70.63513184 151.87870789]
[68.58514404 137.12585449]
[81.16442108 127.53041840]
[87.11824036 113.76262665]
[75.97187805 123.80049133]
[60.97190475 123.77268982]
[49.86283493 113.69357300]
[48.38030624 98.76702118]
[57.28974915 86.69963074]
[71.99120331 83.72183990]
[84.89554596 91.37268066]
[76.35109711 79.04416656]
[67.80664825 66.71564484]
[59.26220322 54.38711929]
[45.04191971 47.45213318]
[44.15138245 32.58417511]
[35.60693741 20.25565338]
[27.06249237 7.92713165]
[18.51804543 -4.40138960]
[9.97360039 -16.72991180]
[-6.86244917 -24.21966362]
[-7.59369278 -41.76509857]
[-16.28996658 -53.98699570]
[-24.98624039 -66.20890045]
[-33.68251419 -78.43079376]
[-42.37878799 -90.65269470]
[-56.68375778 -97.41127014]
[-57.75811386 -112.26708221]
[-66.45438385 -124.48897552]
[-80.75936127 -131.24755859]
[-81.83371735 -146.10336304]
[-90.52999115 -158.32525635]
[-99.22626495 -170.54716492]
[-107.92253876 -182.76905823]
[-116.61880493 -194.99096680]
[-125.31507874 -207.21286011]
[-146.31120300 -215.07931519]
[-147.37200928 -236.70530701]
[-156.66204834 -248.48217773]
[-165.95210266 -260.25906372]
[-175.24215698 -272.03594971]
[-184.53221130 -283.81283569]
[-199.08909607 -292.50381470]
[-194.76751709 -308.89773560]
[-177.81794739 -309.28329468]
[-172.75532532 -293.10287476]
[-163.46527100 -281.32598877]
[-154.17521667 -269.54910278]
[-144.88517761 -257.77224731]
[-135.59512329 -245.99534607]
[-127.81409454 -246.75579834]
[-120.27191925 -244.36578369]
[-114.20693970 -239.14044189]
[-110.64511108 -231.86648560]
[-110.22686005 -223.68424988]
[-113.09318542 -215.90913391]
[-104.39691162 -203.68724060]
[-95.70063782 -191.46533203]
[-87.00436401 -179.24343872]
[-78.30809021 -167.02153015]
[-69.61181641 -154.79963684]
[-55.92885971 -148.91525269]
[-54.23248672 -133.18525696]
[-45.53621292 -120.96335602]
[-31.85325813 -115.07897186]
[-30.15688705 -99.34896851]
[-21.46061325 -87.12706757]
[-12.76434040 -74.90516663]
[-4.06806660 -62.68326950]
[4.62820673 -50.46137238]
[16.48437691 -48.15044785]
[23.83233261 -38.06329346]
[22.30212212 -25.27435684]
[30.84656715 -12.94583607]
[39.39101410 -0.61731404]
[47.93545914 11.71120739]
[56.47990417 24.03973007]
[70.08903503 30.09289551]
[71.59072876 45.84267426]
[80.13516998 58.17119598]
[88.67961884 70.49971771]
[97.22406769 82.82823944]
[111.16934204 88.35355377]
[125.83898163 85.22278595]
[140.50862122 82.09201050]
[155.17825317 78.96124268]
[169.84790039 75.83046722]
[184.51753235 72.69969177]
[190.89151001 58.67547989]
[204.14627075 51.18116379]
[219.09555054 52.90832901]
[230.03036499 62.98641205]
[244.69999695 59.85564041]
[256.58132935 49.40840149]
[270.64318848 54.31888199]
[285.31283569 51.18810654]
[299.98248291 48.05733490]
[314.65209961 44.92656326]
[318.66076660 36.44618607]
[326.00259399 30.83130264]
[334.96661377 29.23211670]
[343.53475952 31.88086700]
[349.83639526 38.06758499]
[364.61209106 35.48316574]
[379.38775635 32.89874649]
[394.16345215 30.31432724]
[408.93911743 27.72990799]
[423.71481323 25.14548874]
[438.49047852 22.56106949]
[453.26617432 19.97665024]
[468.04183960 17.39223099]
[482.80126953 14.71648598]
[497.54385376 11.94951630]
[512.28643799 9.18254662]
[527.02905273 6.41557693]
[534.92736816 -3.75862813]
[547.24365234 -5.77173996]
[557.30285645 0.91568965]
[572.07855225 -1.66872966]
[586.85418701 -4.25314903]
[594.87780762 -14.32888794]
[607.21801758 -16.18951607]
[617.19372559 -9.37818432]
[632.00024414 -11.77965736]
[646.80676270 -14.18113136]
[661.61328125 -16.58260536]
[676.28009033 -25.08677101]
[688.51208496 -13.34732628]
[680.61761475 1.65644252]
[664.01477051 -1.77608871]
[649.20825195 0.62538487]
[634.40173340 3.02685857]
[619.59521484 5.42833185]
[606.59838867 17.23761177]
[589.43865967 10.52253342]
[574.66296387 13.10695267]
[559.88726807 15.69137192]
[547.03747559 27.66049385]
[529.79602051 21.15816498]
[515.05340576 23.92513466]
[500.31082153 26.69210434]
[485.56823730 29.45907402]
[479.59051514 33.76985168]
[470.62628174 32.16791153]
[455.85058594 34.75233078]
[441.07492065 37.33675003]
[426.29922485 39.92117310]
[411.52352905 42.50559235]
[396.74786377 45.09001160]
[381.97216797 47.67443085]
[367.19650269 50.25885010]
[352.42080688 52.84326935]
[337.76229858 67.39257050]
[317.78289795 59.59619904]
[303.11325073 62.72697449]
[288.44360352 65.85774231]
[273.77398682 68.98851776]
[262.94192505 79.21182251]
[247.83078003 74.52527618]
[233.16113281 77.65605164]
[227.29333496 91.32012177]
[214.35163879 98.99974060]
[199.19223022 97.56953430]
[187.64830017 87.36933136]
[172.97866821 90.50010681]
[158.30903625 93.63087463]
[143.63938904 96.76165009]
[128.96975708 99.89241791]
[114.30011749 103.02319336]
[111.11354065 113.09631348]
[100.88603210 119.71643829]
[94.93221283 133.48423767]
[96.55634308 149.22186279]
[84.40292358 157.83251953]
[78.44910431 171.60031128]
[72.49529266 185.36810303]
[66.54148102 199.13591003]
[77.62149048 189.02485657]
[90.77962494 181.82321167]
[105.26830292 177.94013977]
[120.26435852 177.59625244]
[134.91580200 180.81108093]
[148.39022827 187.40197754]
[159.92207336 196.99449158]
[168.85618591 209.04362488]
[174.68498230 222.86480713]
[177.07727051 237.67282104]
[175.89717102 252.62632751]
[171.21170044 266.87576294]
[163.28707886 279.61154175]
[152.57353210 290.11010742]
[139.67974854 297.77499390]
[125.33828735 302.17071533]
[110.36392975 303.04751587]
[95.60746002 300.35559082]
[81.90723419 294.24789429]
[70.04164124 285.07144165]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 53]
[5 52]
[6 51]
[7 50]
[8 49]
[9 48]
[10 47]
[11 46]
[12 45]
[14 44]
[15 43]
[23 34]
[24 33]
[25 32]
[26 31]
[54 233]
[55 232]
[56 231]
[57 230]
[59 228]
[60 227]
[67 138]
[68 137]
[69 136]
[70 135]
[72 133]
[73 132]
[74 131]
[75 130]
[76 129]
[78 126]
[79 125]
[80 124]
[81 123]
[82 122]
[84 120]
[85 119]
[87 117]
[88 116]
[89 115]
[90 114]
[91 113]
[92 112]
[94 106]
[95 105]
[96 104]
[97 103]
[98 102]
[139 225]
[140 224]
[141 223]
[142 222]
[143 221]
[144 220]
[148 216]
[149 215]
[151 213]
[152 212]
[153 211]
[154 210]
[159 208]
[160 207]
[161 206]
[162 205]
[163 204]
[164 203]
[165 202]
[166 201]
[167 200]
[168 198]
[169 197]
[170 196]
[171 195]
[174 193]
[175 192]
[176 191]
[179 189]
[180 188]
[181 187]
[182 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
