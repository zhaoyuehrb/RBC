%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:15:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCACUUCCCCCGGCUCCAGCCGGCGCAGGCAGCGGCGGCAGCAGCAGGCGAGCCUCGGCCCCGCAAGGCCAUGAAGGUGAAGAAGGGCGGCGGUGGGGCCGGGACGGCGACGGAGUCCGCUCCGGGGCCCUCGGGCCAGAGCGUGGCCCCCAUACCACAGCCGCCUGCGG\
) } def
/len { sequence length } bind def

/coor [
[61.07852173 219.54901123]
[67.65349579 233.03121948]
[69.36401367 247.93336487]
[66.01485443 262.55468750]
[57.98825455 275.22647095]
[46.20029068 284.50244141]
[31.99631882 289.32397461]
[16.99743652 289.14077759]
[2.91546702 283.97375488]
[-8.64241791 274.41262817]
[-16.35711861 261.54858398]
[-19.34815598 246.84980774]
[-17.27416420 231.99388123]
[-10.37032318 218.67428589]
[-23.31480217 226.25323486]
[-36.25927734 233.83218384]
[-38.87325668 238.43550110]
[-42.62694550 241.26896667]
[-46.64510345 242.19548035]
[-50.12683487 241.44934082]
[-63.46696472 248.30798340]
[-76.80709839 255.16661072]
[-90.14723206 262.02523804]
[-98.88248444 275.21636963]
[-113.73920441 274.15472412]
[-127.07933807 281.01336670]
[-140.41946411 287.87197876]
[-146.67065430 302.64703369]
[-162.15803528 306.83282471]
[-175.00100708 297.21838379]
[-175.34753418 281.17907715]
[-162.93180847 271.01889038]
[-147.27810669 274.53186035]
[-133.93797302 267.67321777]
[-120.59783936 260.81457520]
[-112.81676483 248.11402893]
[-97.00586700 248.68511963]
[-83.66573334 241.82649231]
[-70.32559967 234.96784973]
[-56.98546982 228.10922241]
[-43.83823013 220.88771057]
[-30.89375114 213.30876160]
[-17.94927406 205.72981262]
[-13.58870983 197.43203735]
[-3.48653078 194.34970093]
[6.92458248 183.55114746]
[17.33569527 172.75259399]
[27.74680901 161.95405579]
[38.15792084 151.15550232]
[48.56903458 140.35694885]
[58.98014832 129.55839539]
[61.36783218 122.53466034]
[69.68139648 118.65988159]
[80.28799438 108.05327606]
[84.34641266 93.61273956]
[80.81809998 79.03360748]
[77.28978729 64.45448303]
[73.76146698 49.87535095]
[70.23315430 35.29622269]
[66.70484161 20.71709442]
[63.17652512 6.13796568]
[59.64820862 -8.44116306]
[56.11989212 -23.02029228]
[52.59157944 -37.59941864]
[49.06326294 -52.17855072]
[33.35197830 -58.39597321]
[24.51837730 -72.60467529]
[25.86739731 -89.11449432]
[36.67176437 -101.45098114]
[32.87776566 -115.96323395]
[29.08376312 -130.47549438]
[14.00102139 -132.17117310]
[0.55114788 -139.20433044]
[-9.44687366 -150.62379456]
[-14.64089203 -164.88516235]
[-14.32845879 -180.05970764]
[-8.55182838 -194.09519958]
[1.90775704 -205.09344482]
[15.63572502 -211.56703186]
[30.77548027 -212.64045715]
[45.27949524 -208.16854858]
[57.18622208 -198.75608826]
[64.88537598 -185.67605591]
[67.33570099 -170.69738770]
[64.20581818 -155.84584045]
[55.91901779 -143.12997437]
[43.59601974 -134.26950073]
[47.39001846 -119.75724030]
[51.18402100 -105.24497986]
[64.03440094 -101.54981995]
[73.44967651 -91.90364838]
[76.88734436 -78.75785828]
[73.34339142 -65.52810669]
[63.64239120 -55.70686340]
[67.17070770 -41.12773514]
[70.69902039 -26.54860687]
[74.22734070 -11.96947861]
[77.75565338 2.60965037]
[81.28396606 17.18877983]
[84.81228638 31.76790810]
[88.34059906 46.34703445]
[91.86891174 60.92616653]
[95.39723206 75.50529480]
[98.92554474 90.08441925]
[101.02512360 78.41265106]
[106.69830322 67.43196106]
[115.73856354 57.96180344]
[129.64860535 52.34835052]
[143.55863953 46.73489380]
[149.80570984 32.46563339]
[163.99243164 26.97094727]
[177.55749512 33.01451492]
[191.46752930 27.40106201]
[205.37756348 21.78760910]
[219.28761292 16.17415428]
[233.19764709 10.56070137]
[242.86746216 -2.68416858]
[259.14163208 -0.66349936]
[265.27871704 14.54401779]
[254.96536255 27.29419327]
[238.81109619 24.47073936]
[224.90106201 30.08419228]
[210.99102783 35.69764709]
[197.08097839 41.31110001]
[183.17094421 46.92455292]
[177.60009766 60.69049835]
[163.57330322 66.58148956]
[149.17208862 60.64493179]
[135.26205444 66.25838470]
[121.35201263 71.87184143]
[121.00966644 79.36402130]
[133.64416504 87.44915009]
[120.32495880 94.34838867]
[119.98261261 101.84056854]
[133.32273865 108.69920349]
[146.66287231 115.55783844]
[160.00300598 122.41647339]
[173.34313965 129.27510071]
[186.68327332 136.13374329]
[202.33697510 132.62077332]
[214.75270081 142.78096008]
[214.40617371 158.82026672]
[201.56320190 168.43472290]
[186.07582092 164.24893188]
[179.82463074 149.47387695]
[166.48451233 142.61523438]
[153.14437866 135.75660706]
[139.80424500 128.89796448]
[126.46411133 122.03933716]
[113.12397766 115.18070221]
[126.44771576 122.07112885]
[134.81434631 134.52101135]
[136.16082764 149.46044922]
[130.15513611 163.20570374]
[118.27817535 172.36744690]
[103.45854187 174.68659973]
[89.35046387 169.59130859]
[79.43270111 158.33795166]
[76.15077209 143.70138550]
[80.31394196 129.29069519]
[90.89459991 118.65988159]
[80.28799438 129.26647949]
[69.77870178 139.96949768]
[59.36758423 150.76805115]
[48.95647430 161.56660461]
[38.54536057 172.36515808]
[28.13424683 183.16371155]
[17.72313499 193.96226501]
[7.31202126 204.76081848]
[21.87930489 201.18391418]
[36.80633545 202.66169739]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 43]
[15 42]
[16 41]
[20 40]
[21 39]
[22 38]
[23 37]
[25 35]
[26 34]
[27 33]
[45 169]
[46 168]
[47 167]
[48 166]
[49 165]
[50 164]
[51 163]
[53 162]
[54 161]
[55 104]
[56 103]
[57 102]
[58 101]
[59 100]
[60 99]
[61 98]
[62 97]
[63 96]
[64 95]
[65 94]
[69 89]
[70 88]
[71 87]
[107 130]
[108 129]
[109 128]
[112 125]
[113 124]
[114 123]
[115 122]
[116 121]
[134 150]
[135 149]
[136 148]
[137 147]
[138 146]
[139 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
