%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:57:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUAAGAAUCAGCAGCGCGGGCAAGGAGUACGGACGGGAGUCAGAGGCAGAGCGAGGGUGUGUGGAGGGCCGGCGGGGACCGCCGGGAGCGCGCGGAUGUCGGUGUUCCUGGGGCCAGGGAUGCCCUCUGCAUCUUUAUUAGUAAAUCUUCUUUCAGCUUUACUCAUCCUAUUUGUGUUUGGAGAAACAGAAAUAA\
) } def
/len { sequence length } bind def

/coor [
[89.95925140 143.44190979]
[89.39640808 158.43133545]
[88.83355713 173.42077637]
[88.27070618 188.41021729]
[93.55596161 202.44824219]
[84.63130188 214.50437927]
[69.66178131 213.54861450]
[62.34281540 200.45538330]
[69.37118530 187.20300293]
[70.72003937 172.26376343]
[72.06889343 157.32453918]
[73.41774750 142.38531494]
[74.76660156 127.44607544]
[76.11545563 112.50685120]
[68.63071442 112.02875519]
[60.28473282 124.49249268]
[59.73635101 140.88246155]
[45.14261627 148.36276245]
[31.51630974 139.23831177]
[32.87501144 122.89553833]
[47.82099915 116.14650726]
[56.16698074 103.68277740]
[42.86726379 110.61945343]
[32.07993698 100.19670868]
[27.58743858 85.88526917]
[30.48288345 71.16737366]
[40.06175232 59.62418365]
[53.99332047 54.06437683]
[68.88776398 55.84076691]
[81.12097168 64.52111816]
[87.71655273 77.99421692]
[94.05418396 91.58960724]
[95.01036835 76.62010956]
[95.96654510 61.65061951]
[88.31195068 53.90254211]
[86.23438263 43.43490982]
[90.18395996 33.75776291]
[98.63005829 27.98150253]
[100.06311798 13.05011559]
[101.49617004 -1.88127267]
[102.92922974 -16.81266022]
[100.53078461 -22.99377823]
[101.47985840 -28.61176682]
[104.65349579 -32.19471359]
[106.56197357 -47.07281113]
[108.47044373 -61.95090485]
[110.37892151 -76.82900238]
[112.28739166 -91.70709991]
[106.36878967 -106.37954712]
[115.66252136 -118.01895142]
[117.57099152 -132.89704895]
[119.47946930 -147.77514648]
[113.56086731 -162.44758606]
[122.85459900 -174.08700562]
[124.76306915 -188.96510315]
[126.67154694 -203.84320068]
[128.58001709 -218.72128296]
[130.48849487 -233.59938049]
[132.39695740 -248.47747803]
[132.87530518 -263.46984863]
[131.91911316 -278.43933105]
[130.96293640 -293.40884399]
[130.00675964 -308.37832642]
[129.05056763 -323.34780884]
[128.09439087 -338.31732178]
[127.13820648 -353.28680420]
[126.18202972 -368.25628662]
[125.22584534 -383.22579956]
[124.26966095 -398.19528198]
[123.31348419 -413.16479492]
[108.97356415 -418.12890625]
[97.65718079 -428.17788696]
[91.06809998 -441.75720215]
[90.18237305 -456.78396606]
[95.10388947 -470.96646118]
[105.05326080 -482.15374756]
[118.49108887 -488.66174316]
[117.53490448 -503.63122559]
[113.86118317 -512.00726318]
[116.68476868 -518.84674072]
[115.96742249 -533.82952881]
[112.42773438 -542.26312256]
[115.36003113 -549.05664062]
[114.88169098 -564.04901123]
[114.40335846 -579.04138184]
[113.92502594 -594.03375244]
[113.44669342 -609.02612305]
[112.96836090 -624.01849365]
[112.49002075 -639.01086426]
[112.01168823 -654.00323486]
[111.53335571 -668.99560547]
[111.05502319 -683.98797607]
[107.65026855 -692.47692871]
[110.69052124 -699.22283936]
[110.45132446 -714.22094727]
[99.97447968 -726.37060547]
[103.08277130 -742.10968018]
[117.39179230 -749.36444092]
[131.92488098 -742.56970215]
[135.53349304 -726.93774414]
[125.44941711 -714.46014404]
[125.68861389 -699.46203613]
[126.04739380 -684.46630859]
[126.52572632 -669.47393799]
[127.00405884 -654.48156738]
[127.48239136 -639.48919678]
[127.96073151 -624.49682617]
[128.43905640 -609.50445557]
[128.91740417 -594.51208496]
[129.39573669 -579.51971436]
[129.87406921 -564.52734375]
[130.35240173 -549.53497314]
[130.95025635 -534.54687500]
[131.66760254 -519.56408691]
[132.50439453 -504.58743286]
[133.46058655 -489.61791992]
[147.61721802 -484.87252808]
[158.90911865 -475.04205322]
[165.59509277 -461.60098267]
[166.62844849 -446.58364868]
[161.82063293 -432.27636719]
[151.87477112 -420.86923218]
[138.28297424 -414.12097168]
[139.23915100 -399.15145874]
[140.19534302 -384.18197632]
[141.15151978 -369.21249390]
[142.10769653 -354.24298096]
[143.06388855 -339.27349854]
[144.02006531 -324.30401611]
[144.97624207 -309.33450317]
[145.93243408 -294.36502075]
[146.88861084 -279.39553833]
[147.84478760 -264.42602539]
[155.26841736 -277.46020508]
[167.55929565 -286.05871582]
[182.34854126 -288.56430054]
[196.78576660 -284.49407959]
[208.08837891 -274.63247681]
[214.07798767 -260.88024902]
[213.60017395 -245.88784790]
[206.74703979 -232.54489136]
[194.83941650 -223.42301941]
[180.17233276 -220.28034973]
[165.57263184 -223.72256470]
[153.85420227 -233.08624268]
[147.27505493 -246.56900024]
[145.36659241 -231.69091797]
[143.45811462 -216.81282043]
[141.54963684 -201.93472290]
[139.64115906 -187.05662537]
[137.73269653 -172.17852783]
[143.78779602 -158.57026672]
[134.35755920 -145.86666870]
[132.44909668 -130.98857117]
[130.54061890 -116.11048126]
[136.59571838 -102.50221252]
[127.16548920 -89.79862213]
[125.25701141 -74.92053223]
[123.34854126 -60.04243469]
[121.44006348 -45.16433716]
[119.53159332 -30.28624153]
[117.86061859 -15.37960434]
[116.42755890 -0.44821632]
[114.99449921 14.48317146]
[113.56144714 29.41456032]
[122.85846710 46.36136627]
[110.93604279 62.60680008]
[109.97985840 77.57629395]
[109.02368164 92.54578400]
[111.99401093 107.24874878]
[118.68637848 120.67305756]
[125.37875366 134.09736633]
[132.07112122 147.52168274]
[138.76350403 160.94599915]
[151.84509277 169.84445190]
[150.59893799 184.68684387]
[157.29130554 198.11116028]
[163.98368835 211.53546143]
[170.67605591 224.95977783]
[177.36842346 238.38409424]
[191.33425903 246.97987366]
[190.60260010 263.36270142]
[175.92611694 270.67929077]
[162.40270996 261.40301514]
[163.94410706 245.07646179]
[157.25173950 231.65214539]
[150.55937195 218.22784424]
[143.86698914 204.80352783]
[137.17462158 191.37921143]
[124.57171631 183.44094849]
[125.33918762 167.63836670]
[118.64681244 154.21405029]
[111.95444489 140.78974915]
[105.26206970 127.36543274]
[98.56969452 113.94112396]
[91.08495331 113.46302795]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 22]
[16 21]
[32 169]
[33 168]
[34 167]
[38 165]
[39 164]
[40 163]
[41 162]
[44 161]
[45 160]
[46 159]
[47 158]
[48 157]
[50 155]
[51 154]
[52 153]
[54 151]
[55 150]
[56 149]
[57 148]
[58 147]
[59 146]
[60 133]
[61 132]
[62 131]
[63 130]
[64 129]
[65 128]
[66 127]
[67 126]
[68 125]
[69 124]
[70 123]
[77 116]
[78 115]
[80 114]
[81 113]
[83 112]
[84 111]
[85 110]
[86 109]
[87 108]
[88 107]
[89 106]
[90 105]
[91 104]
[92 103]
[94 102]
[95 101]
[170 195]
[171 194]
[172 193]
[173 192]
[174 191]
[176 189]
[177 188]
[178 187]
[179 186]
[180 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
