%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:55:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCACCGAACCCCGCCCGCGCCGGGAGCAUCUCGCGUCCCCAACGGGCCCCCGGGUCGGUUUCCGCGGUGGCCAUGACUGCGGCCGUGUUCUUCGGCUGCGCCUUCAUUGCCUUCGGGCCUGCGCUCGCCCUUUAUGUCUUCACCAUCGCCACCGAGCCGUUGCGUAUCAUCU\
) } def
/len { sequence length } bind def

/coor [
[-59.96451187 495.37026978]
[-73.53408051 501.76300049]
[-88.12429810 505.24514771]
[-103.11829376 505.66955566]
[-117.88211823 503.01828003]
[-131.79156494 497.40335083]
[-144.25854492 489.06222534]
[-154.75595093 478.34753418]
[-162.83995056 465.71231079]
[-168.16876221 451.69076538]
[-170.51707458 436.87573242]
[-169.78561401 421.89355469]
[-166.00529480 407.37774658]
[-159.33595276 393.94195557]
[-150.06147766 382.15628052]
[-163.74635315 388.29830933]
[-177.43121338 394.44033813]
[-191.11608887 400.58236694]
[-204.80094910 406.72436523]
[-206.62055969 420.40655518]
[-214.90441895 431.31118774]
[-227.39823914 436.64801025]
[-240.78871155 435.11822510]
[-251.58197021 427.22891235]
[-265.37487793 433.12429810]
[-279.16781616 439.01965332]
[-292.96072388 444.91503906]
[-306.70016479 450.93399048]
[-320.38504028 457.07598877]
[-327.41046143 471.49899292]
[-343.09790039 474.85815430]
[-355.41329956 464.57656860]
[-354.90933228 448.54144287]
[-341.97259521 439.05352783]
[-326.52706909 443.39114380]
[-312.84219360 437.24911499]
[-308.01110840 431.62271118]
[-298.85610962 431.12213135]
[-285.06317139 425.22674561]
[-271.27026367 419.33135986]
[-257.47735596 413.43600464]
[-254.34898376 397.33666992]
[-242.12680054 386.15344238]
[-225.48342896 384.42956543]
[-210.94297791 393.03952026]
[-197.25810242 386.89749146]
[-183.57324219 380.75546265]
[-169.88836670 374.61343384]
[-156.20350647 368.47143555]
[-154.74478149 365.00393677]
[-152.02664185 361.96646118]
[-148.19833374 359.81375122]
[-143.57035828 358.94177246]
[-133.90563965 347.47036743]
[-124.24092102 335.99896240]
[-121.95774078 321.28036499]
[-107.14891052 315.71179199]
[-97.48419189 304.24038696]
[-87.81948090 292.76898193]
[-78.15476227 281.29757690]
[-68.49005127 269.82614136]
[-70.68763733 261.16360474]
[-68.60216522 252.33160400]
[-62.58166122 245.35816956]
[-53.89214325 241.90452576]
[-44.45284653 242.87051392]
[-34.18463898 231.93597412]
[-23.91643143 221.00144958]
[-13.64822483 210.06692505]
[-3.38001847 199.13238525]
[6.88818836 188.19786072]
[17.15639496 177.26333618]
[12.72066498 163.04397583]
[16.01984215 148.41621399]
[26.26556396 137.33058167]
[40.77974701 132.83221436]
[55.69407272 136.22486877]
[65.96228027 125.29033661]
[76.23048401 114.35581207]
[64.36944580 84.59651947]
[89.53760529 51.24305725]
[91.41760254 36.36133575]
[93.29760742 21.47961617]
[95.17760468 6.59789610]
[97.05760193 -8.28382492]
[98.93759918 -23.16554451]
[100.81759644 -38.04726410]
[90.06073761 -49.39732742]
[89.16778564 -65.00939178]
[98.56037140 -77.51192474]
[113.80360413 -81.00160980]
[127.70009613 -73.83072662]
[133.68833923 -59.38513947]
[128.94088745 -44.48562241]
[115.69931793 -36.16726685]
[113.81932068 -21.28554726]
[111.93932343 -6.40382624]
[110.05932617 8.47789478]
[108.17932129 23.35961533]
[106.29932404 38.24133682]
[104.41932678 53.12305450]
[118.15877533 59.14199829]
[127.82348633 47.67058563]
[124.96070862 32.29727936]
[132.69442749 18.70597839]
[147.37303162 13.31407738]
[162.06573486 18.66746712]
[169.83506775 32.23844147]
[167.01261902 47.61920166]
[154.93104553 57.54742050]
[139.29490662 57.33530045]
[129.63018799 68.80670929]
[133.59188843 75.17498779]
[146.32856750 67.25180054]
[154.25154114 79.98861694]
[141.51528931 87.91153717]
[145.47698975 94.27981567]
[160.03863525 90.68002319]
[174.60028076 87.08023834]
[189.16192627 83.48044586]
[194.87841797 69.05473328]
[208.00039673 60.77261353]
[223.48216248 61.81873322]
[235.37068176 71.79084015]
[239.09455872 86.85444641]
[233.22190857 101.21730042]
[220.01086426 109.35658264]
[204.54135132 108.14257050]
[192.76170349 98.04209137]
[178.20005798 101.64187622]
[163.63841248 105.24166870]
[149.07676697 108.84146118]
[140.74034119 121.75230408]
[129.53135681 130.56477356]
[117.09474945 134.85073853]
[105.03686523 134.77157593]
[94.73108673 131.00691223]
[87.16501617 124.62401581]
[76.89681244 135.55854797]
[66.62860107 146.49307251]
[70.95104218 161.16494751]
[67.37290955 175.93293762]
[56.95247650 186.85452271]
[42.56073761 191.06567383]
[28.09092331 187.53153992]
[17.82271767 198.46606445]
[7.55451107 209.40058899]
[-2.71369553 220.33512878]
[-12.98190212 231.26965332]
[-23.25010872 242.20417786]
[-33.51831436 253.13871765]
[-37.07499313 274.24874878]
[-57.01863861 279.49087524]
[-66.68334961 290.96228027]
[-76.34806824 302.43368530]
[-86.01277924 313.90512085]
[-95.67749786 325.37652588]
[-98.65196228 340.91558838]
[-112.76950836 345.66366577]
[-122.43422699 357.13507080]
[-132.09893799 368.60647583]
[-118.21645355 362.92526245]
[-103.46544647 360.20352173]
[-88.46959686 360.55633545]
[-73.86292267 363.96884155]
[-60.26300049 370.29672241]
[-48.24482346 379.27243042]
[-38.31652069 390.51647949]
[-30.89786530 403.55349731]
[-26.30251122 417.83224487]
[-24.72475433 432.74905396]
[-26.23129654 447.67318726]
[-30.75844574 461.97372437]
[-38.11479187 475.04598999]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 49]
[16 48]
[17 47]
[18 46]
[19 45]
[24 41]
[25 40]
[26 39]
[27 38]
[28 36]
[29 35]
[53 161]
[54 160]
[55 159]
[57 157]
[58 156]
[59 155]
[60 154]
[61 153]
[66 151]
[67 150]
[68 149]
[69 148]
[70 147]
[71 146]
[72 145]
[77 140]
[78 139]
[79 138]
[81 101]
[82 100]
[83 99]
[84 98]
[85 97]
[86 96]
[87 95]
[102 112]
[103 111]
[117 132]
[118 131]
[119 130]
[120 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
