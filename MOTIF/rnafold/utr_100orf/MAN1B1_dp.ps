%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:39:34 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MAN1B1)
} def

/sequence { (\
ACUGGCCGCAUAGAGACGCAGCGCACGCGCAGUCGCGUAUCCGUGUGAUGGGCGGGCUGUUGACGGCGCUGCGAUGGCUGCCUGCGAGGGCAGGAGAAGCGGAGCUCUCGGUUCCUCUCAGUCGGACUUCCUGACGCCGCCAGUGGGCGGGGCCCCUUGGGCCGUCGCCACCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 144 0.936463610 ubox
2 143 0.994992803 ubox
3 142 0.997843473 ubox
3 170 0.046235742 ubox
3 173 0.005292694 ubox
4 138 0.003544078 ubox
4 141 0.998589385 ubox
4 169 0.052167887 ubox
4 172 0.006936343 ubox
5 137 0.003565411 ubox
5 140 0.998596428 ubox
5 168 0.052179644 ubox
5 171 0.006926873 ubox
6 136 0.003564810 ubox
6 139 0.997403141 ubox
6 167 0.051553011 ubox
7 86 0.006593234 ubox
7 136 0.012175345 ubox
7 139 0.035578183 ubox
7 167 0.007641266 ubox
8 78 0.007800648 ubox
8 81 0.008761978 ubox
8 85 0.006978230 ubox
8 135 0.006507824 ubox
8 137 0.993489470 ubox
8 138 0.038872259 ubox
8 165 0.046518800 ubox
8 166 0.010464932 ubox
8 168 0.006599805 ubox
9 76 0.027461592 ubox
9 77 0.007723754 ubox
9 80 0.009045420 ubox
9 84 0.006979055 ubox
9 133 0.005008473 ubox
9 136 0.993373252 ubox
9 164 0.047909534 ubox
9 167 0.006598382 ubox
10 75 0.036011397 ubox
10 79 0.008599684 ubox
10 83 0.006656020 ubox
10 122 0.004561021 ubox
10 132 0.004790280 ubox
10 165 0.005354460 ubox
11 74 0.036553307 ubox
11 76 0.020289915 ubox
11 80 0.113593702 ubox
11 121 0.004856622 ubox
11 133 0.023587309 ubox
11 164 0.005195057 ubox
12 75 0.021280584 ubox
12 79 0.128908995 ubox
12 118 0.053652923 ubox
12 132 0.024941835 ubox
13 78 0.130862421 ubox
13 117 0.057978708 ubox
13 119 0.691482863 ubox
13 129 0.003876624 ubox
13 130 0.004729090 ubox
13 131 0.024734232 ubox
14 79 0.018890394 ubox
14 116 0.056746544 ubox
14 118 0.692186702 ubox
14 128 0.004810372 ubox
14 129 0.005402847 ubox
14 132 0.008510245 ubox
15 78 0.019469405 ubox
15 114 0.003946564 ubox
15 115 0.042635817 ubox
15 117 0.692036358 ubox
15 119 0.018961789 ubox
15 127 0.005001152 ubox
15 128 0.004240696 ubox
15 129 0.004186564 ubox
15 130 0.021007679 ubox
15 131 0.008382005 ubox
15 166 0.003523791 ubox
16 112 0.003196770 ubox
16 113 0.004889531 ubox
16 116 0.640362709 ubox
16 118 0.017210275 ubox
16 128 0.003920877 ubox
16 129 0.019443485 ubox
16 165 0.003505232 ubox
17 73 0.981003756 ubox
17 76 0.015925706 ubox
17 111 0.003452016 ubox
17 164 0.003378699 ubox
18 72 0.999935327 ubox
19 71 0.999987572 ubox
20 70 0.999754786 ubox
21 69 0.999989599 ubox
22 68 0.999981046 ubox
23 67 0.999971300 ubox
24 66 0.999254038 ubox
26 62 0.044118335 ubox
26 65 0.972152089 ubox
27 61 0.041465809 ubox
27 64 0.974912913 ubox
28 62 0.854228859 ubox
28 65 0.005682328 ubox
29 57 0.003332376 ubox
29 60 0.791757984 ubox
29 61 0.601580236 ubox
29 64 0.004699189 ubox
30 56 0.003362842 ubox
30 59 0.999797383 ubox
31 58 0.999699339 ubox
32 57 0.999288216 ubox
33 55 0.564931568 ubox
33 56 0.821573251 ubox
34 54 0.801457004 ubox
34 55 0.595895630 ubox
35 53 0.981052726 ubox
36 52 0.982067825 ubox
36 54 0.186624579 ubox
37 53 0.186834505 ubox
38 50 0.977184342 ubox
38 52 0.164279040 ubox
39 49 0.981161686 ubox
40 48 0.981661614 ubox
40 51 0.010256979 ubox
40 52 0.073394905 ubox
41 47 0.979613064 ubox
41 50 0.013146189 ubox
41 51 0.185094573 ubox
41 52 0.020651696 ubox
41 55 0.004137835 ubox
42 50 0.185635535 ubox
42 51 0.021863803 ubox
42 54 0.004305060 ubox
43 49 0.177875484 ubox
43 53 0.004307764 ubox
44 48 0.164726837 ubox
44 52 0.004288889 ubox
73 100 0.013213708 ubox
73 117 0.003612667 ubox
73 119 0.004806756 ubox
74 116 0.003645600 ubox
74 118 0.004672848 ubox
74 129 0.003296512 ubox
75 101 0.003402648 ubox
75 120 0.017971938 ubox
75 124 0.010616110 ubox
76 82 0.005677465 ubox
76 100 0.049104891 ubox
76 115 0.006636699 ubox
76 117 0.006196571 ubox
76 119 0.019739147 ubox
76 123 0.019753989 ubox
76 128 0.012264992 ubox
76 138 0.045772809 ubox
77 81 0.005849969 ubox
77 85 0.010939710 ubox
77 100 0.712116773 ubox
77 114 0.006497934 ubox
77 118 0.007010749 ubox
77 122 0.019876376 ubox
77 127 0.013320548 ubox
77 137 0.045818897 ubox
78 84 0.010957525 ubox
78 93 0.652073970 ubox
78 94 0.010275432 ubox
78 96 0.160536982 ubox
78 99 0.713201210 ubox
78 121 0.019905648 ubox
78 125 0.016568309 ubox
78 136 0.044126582 ubox
79 92 0.655126882 ubox
79 93 0.005319450 ubox
79 95 0.162800225 ubox
79 98 0.683608682 ubox
79 120 0.019923527 ubox
79 124 0.016580898 ubox
80 91 0.656045496 ubox
80 100 0.004981094 ubox
80 119 0.019379821 ubox
80 123 0.016546967 ubox
81 89 0.012377784 ubox
81 90 0.655933485 ubox
81 94 0.750837653 ubox
81 99 0.003672865 ubox
82 88 0.017431762 ubox
82 89 0.655743472 ubox
82 93 0.754276047 ubox
82 94 0.004858907 ubox
82 121 0.017101197 ubox
83 87 0.019207765 ubox
83 88 0.638670172 ubox
83 92 0.754140155 ubox
83 120 0.019190931 ubox
84 91 0.754323379 ubox
84 119 0.019514918 ubox
85 90 0.754076607 ubox
86 117 0.022549167 ubox
87 116 0.022588993 ubox
88 115 0.022578382 ubox
89 114 0.022548542 ubox
89 138 0.006477756 ubox
90 112 0.009764151 ubox
90 113 0.019182376 ubox
90 137 0.006488485 ubox
91 111 0.013766760 ubox
91 136 0.006485085 ubox
93 118 0.013841594 ubox
93 119 0.006182313 ubox
94 107 0.003714373 ubox
94 109 0.061664811 ubox
94 114 0.003305656 ubox
94 115 0.019309524 ubox
94 116 0.003600988 ubox
94 117 0.048312902 ubox
94 119 0.618077228 ubox
94 123 0.004838854 ubox
95 106 0.003719717 ubox
95 108 0.061762663 ubox
95 116 0.048667091 ubox
95 118 0.619580567 ubox
95 122 0.004785517 ubox
96 105 0.003713389 ubox
96 107 0.061774242 ubox
96 114 0.048310627 ubox
96 115 0.044322065 ubox
96 117 0.619608368 ubox
96 119 0.172431489 ubox
97 106 0.044793051 ubox
97 113 0.052120039 ubox
97 116 0.612510440 ubox
97 118 0.123975669 ubox
98 106 0.042491296 ubox
98 112 0.052427074 ubox
98 113 0.056726196 ubox
98 116 0.046593199 ubox
98 118 0.199717878 ubox
99 105 0.060095266 ubox
99 112 0.064742048 ubox
99 115 0.035956257 ubox
99 117 0.240020727 ubox
100 104 0.059665719 ubox
100 110 0.053053798 ubox
100 111 0.064917675 ubox
101 108 0.004392411 ubox
101 109 0.052806507 ubox
101 114 0.018908137 ubox
101 115 0.992584840 ubox
101 116 0.003728207 ubox
102 107 0.021160623 ubox
102 108 0.042897058 ubox
102 109 0.064672973 ubox
102 113 0.015907286 ubox
102 114 0.994311695 ubox
102 115 0.003519464 ubox
102 117 0.003515541 ubox
103 108 0.060725125 ubox
103 112 0.015373416 ubox
103 113 0.993820589 ubox
103 116 0.003505862 ubox
104 112 0.993830484 ubox
104 115 0.003388337 ubox
105 111 0.994091670 ubox
106 110 0.895564886 ubox
110 116 0.003726783 ubox
110 117 0.006817723 ubox
110 118 0.007405610 ubox
110 119 0.008218166 ubox
110 128 0.005709251 ubox
110 131 0.003292341 ubox
111 115 0.004636916 ubox
111 116 0.005029962 ubox
111 117 0.008387240 ubox
111 118 0.006298794 ubox
111 127 0.006132556 ubox
111 130 0.003300908 ubox
112 126 0.004882614 ubox
113 125 0.003173016 ubox
113 126 0.005718252 ubox
114 125 0.006939652 ubox
115 124 0.006947798 ubox
116 120 0.006980364 ubox
116 126 0.005347478 ubox
117 125 0.005770047 ubox
118 124 0.005152227 ubox
118 134 0.012925079 ubox
119 124 0.003163938 ubox
119 133 0.014375764 ubox
120 128 0.008728092 ubox
120 132 0.014398622 ubox
121 127 0.009366191 ubox
121 131 0.013526293 ubox
121 135 0.997048343 ubox
122 126 0.008447178 ubox
122 134 0.998634240 ubox
123 133 0.998997901 ubox
124 130 0.009183222 ubox
124 131 0.284741727 ubox
124 132 0.956716026 ubox
125 129 0.006482214 ubox
125 130 0.287918301 ubox
125 131 0.954351980 ubox
137 150 0.052532100 ubox
138 149 0.052680047 ubox
139 148 0.052685415 ubox
140 147 0.052677826 ubox
141 146 0.052580417 ubox
143 171 0.074266779 ubox
144 170 0.088435924 ubox
144 173 0.065967735 ubox
145 169 0.100171178 ubox
145 172 0.168571660 ubox
146 168 0.071447295 ubox
146 169 0.985024677 ubox
146 171 0.119295215 ubox
146 172 0.012262116 ubox
147 168 0.995899645 ubox
147 171 0.011220222 ubox
148 167 0.998439614 ubox
149 166 0.997836246 ubox
149 169 0.010813758 ubox
150 163 0.008886556 ubox
150 165 0.899260037 ubox
150 166 0.005148959 ubox
150 168 0.010808322 ubox
151 162 0.007386698 ubox
151 163 0.998534470 ubox
152 162 0.999965309 ubox
153 160 0.007329424 ubox
153 161 0.999950080 ubox
154 159 0.008894364 ubox
154 160 0.999897415 ubox
154 161 0.006037159 ubox
155 159 0.992623661 ubox
155 160 0.008485673 ubox
1 144 0.9500000 lbox
2 143 0.9500000 lbox
3 142 0.9500000 lbox
4 141 0.9500000 lbox
5 140 0.9500000 lbox
6 139 0.9500000 lbox
8 137 0.9500000 lbox
9 136 0.9500000 lbox
17 73 0.9500000 lbox
18 72 0.9500000 lbox
19 71 0.9500000 lbox
20 70 0.9500000 lbox
21 69 0.9500000 lbox
22 68 0.9500000 lbox
23 67 0.9500000 lbox
24 66 0.9500000 lbox
26 65 0.9500000 lbox
27 64 0.9500000 lbox
28 62 0.9500000 lbox
29 61 0.9500000 lbox
30 59 0.9500000 lbox
31 58 0.9500000 lbox
32 57 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
35 53 0.9500000 lbox
36 52 0.9500000 lbox
38 50 0.9500000 lbox
39 49 0.9500000 lbox
40 48 0.9500000 lbox
41 47 0.9500000 lbox
78 93 0.9500000 lbox
79 92 0.9500000 lbox
80 91 0.9500000 lbox
81 90 0.9500000 lbox
82 89 0.9500000 lbox
83 88 0.9500000 lbox
94 119 0.9500000 lbox
95 118 0.9500000 lbox
96 117 0.9500000 lbox
97 116 0.9500000 lbox
101 115 0.9500000 lbox
102 114 0.9500000 lbox
103 113 0.9500000 lbox
104 112 0.9500000 lbox
105 111 0.9500000 lbox
106 110 0.9500000 lbox
121 135 0.9500000 lbox
122 134 0.9500000 lbox
123 133 0.9500000 lbox
124 132 0.9500000 lbox
125 131 0.9500000 lbox
146 169 0.9500000 lbox
147 168 0.9500000 lbox
148 167 0.9500000 lbox
149 166 0.9500000 lbox
150 165 0.9500000 lbox
151 163 0.9500000 lbox
152 162 0.9500000 lbox
153 161 0.9500000 lbox
154 160 0.9500000 lbox
155 159 0.9500000 lbox
showpage
end
%%EOF
