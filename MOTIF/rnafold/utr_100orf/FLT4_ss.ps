%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:50:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCCAGCCGGCGCCCGCGCGGACACUUUCAGCCCCGAGCCGCGGCCGCUCGGGUCGGACCCACGCGCAGCGGCCGGAGAUGCAGCGGGGCGCCGCGCUGUGCCUGCGACUGUGGCUCUGCCUGGGACUCCUGGACGGCCUGGUGAGUGGCUACUCCAUGACCCCCCCGACCUUGAACA\
) } def
/len { sequence length } bind def

/coor [
[35.14326096 89.20487213]
[20.72433472 85.07031250]
[6.30540848 80.93575287]
[-8.11351681 76.80119324]
[-22.56797409 72.79261780]
[-37.05686188 68.91033173]
[-51.54574966 65.02804565]
[-66.03463745 61.14575958]
[-80.55685425 57.39006042]
[-95.11128998 53.76123428]
[-109.66572571 50.13240433]
[-124.22016144 46.50357437]
[-138.77459717 42.87474823]
[-153.32902527 39.24591827]
[-167.88346863 35.61709213]
[-182.43789673 31.98826218]
[-191.55053711 32.94870377]
[-197.21357727 28.16701317]
[-211.70245361 24.28472710]
[-226.19134521 20.40244293]
[-237.01847839 28.44233322]
[-250.30560303 28.76465988]
[-261.18612671 21.47590637]
[-265.80422974 9.42924976]
[-280.22314453 5.29468966]
[-294.67761230 1.28611410]
[-309.16650391 -2.59617162]
[-301.77252197 10.45484829]
[-304.35269165 25.23126984]
[-315.73208618 35.00418854]
[-330.72866821 35.32319260]
[-342.51333618 26.04301834]
[-345.71954346 11.38968372]
[-338.88723755 -1.96395564]
[-325.12817383 -7.93687105]
[-339.03591919 -13.55597019]
[-352.94369507 -19.17506790]
[-362.10128784 -19.49220657]
[-367.04373169 -25.01550484]
[-380.85131836 -30.87647247]
[-394.65887451 -36.73743820]
[-408.46646118 -42.59840775]
[-422.27404785 -48.45937347]
[-438.00036621 -46.72930908]
[-446.69268799 -58.82447052]
[-460.50024414 -64.68544006]
[-469.65093994 -65.16235352]
[-474.49621582 -70.77106476]
[-488.19940186 -76.87211609]
[-502.80123901 -71.44769287]
[-516.61132812 -77.83023071]
[-521.69268799 -91.78427887]
[-535.39587402 -97.88532257]
[-549.09906006 -103.98637390]
[-562.80224609 -110.08742523]
[-579.73126221 -111.00617218]
[-583.53485107 -127.52795410]
[-568.71166992 -135.75656128]
[-556.70117188 -123.79060364]
[-542.99798584 -117.68955994]
[-529.29479980 -111.58850861]
[-515.59161377 -105.48745728]
[-501.82165527 -111.04833984]
[-487.83776855 -105.05621338]
[-482.09835815 -90.57529449]
[-468.39517212 -84.47425079]
[-454.63928223 -78.49301147]
[-440.83169556 -72.63204193]
[-426.09298706 -74.78132629]
[-416.41305542 -62.26694489]
[-402.60549927 -56.40597916]
[-388.79791260 -50.54501343]
[-374.99035645 -44.68404388]
[-361.18276978 -38.82307816]
[-347.32458496 -33.08282852]
[-333.41680908 -27.46372795]
[-319.50906372 -21.84462929]
[-305.28421021 -17.08505821]
[-290.79531860 -13.20277309]
[-283.50015259 -14.51232243]
[-276.08859253 -9.12423611]
[-261.66967773 -4.98967552]
[-247.33743286 -13.76470661]
[-230.76351929 -9.38589573]
[-222.30906677 5.91355467]
[-207.82017517 9.79584026]
[-193.33128357 13.67812634]
[-178.80906677 17.43382645]
[-164.25463867 21.06265450]
[-149.70019531 24.69148254]
[-135.14576721 28.32031059]
[-120.59133148 31.94914055]
[-106.03689575 35.57796860]
[-91.48246002 39.20679474]
[-76.92802429 42.83562469]
[-69.65680695 41.39895630]
[-62.15235138 46.65687180]
[-47.66346359 50.53915787]
[-33.17457581 54.42144394]
[-18.68568802 58.30373001]
[-11.39051056 56.99418259]
[-3.97895646 62.38226700]
[10.43996906 66.51683044]
[24.85889435 70.65139008]
[39.27782059 74.78594971]
[46.49864197 61.78303909]
[56.45726776 50.73579407]
[68.64409637 42.20952606]
[82.43548584 36.64055252]
[97.12570190 34.31385422]
[111.96299744 35.34848785]
[126.18811798 39.69150925]
[139.07312012 47.12068176]
[149.95864868 57.25582886]
[162.39422607 48.86793518]
[174.82978821 40.48004150]
[184.57994080 26.61026764]
[200.60679626 32.13985825]
[199.72998047 49.07111740]
[183.21768188 52.91560364]
[170.78210449 61.30349731]
[158.34654236 69.69139099]
[165.25892639 91.98721313]
[163.94572449 115.29300690]
[178.04110718 120.42330933]
[192.13650513 125.55361176]
[206.32437134 119.12383270]
[220.54602051 124.52748108]
[226.58839417 138.09307861]
[240.68379211 143.22337341]
[256.29800415 140.67262268]
[265.61141968 152.29629517]
[279.70681763 157.42660522]
[293.80221558 162.55690002]
[307.89758301 167.68721008]
[325.93786621 164.06040955]
[336.70288086 177.90464783]
[350.88565063 182.78817749]
[365.06845093 187.67169189]
[379.25122070 192.55522156]
[391.88433838 183.54501343]
[407.40048218 183.71484375]
[419.83337402 192.99938965]
[424.40231323 207.82855225]
[419.35046387 222.50024414]
[406.62033081 231.37286377]
[391.10693359 231.03474426]
[378.77548218 221.61585999]
[374.36770630 206.73800659]
[360.18490601 201.85447693]
[346.00213623 196.97096252]
[331.81936646 192.08743286]
[320.79522705 197.10940552]
[308.92767334 193.13536072]
[302.76730347 181.78259277]
[288.67190552 176.65229797]
[274.57650757 171.52198792]
[260.48114014 166.39169312]
[245.87509155 169.30938721]
[235.55348206 157.31877136]
[221.45809937 152.18846130]
[208.10957336 158.69635010]
[193.74176025 153.69429016]
[187.00619507 139.64900208]
[172.91081238 134.51869202]
[158.81541443 129.38839722]
[152.22500610 139.94346619]
[143.76393127 149.06781006]
[133.73529053 156.43458557]
[122.49826813 161.77992249]
[110.45539093 164.91236877]
[98.03800201 165.71972656]
[85.69089508 164.17304993]
[73.85633087 160.32777405]
[62.95820236 154.32160950]
[53.38687897 146.36968994]
[45.48518753 136.75686646]
[39.53616714 125.82743835]
[35.75289917 113.97289276]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 105]
[2 104]
[3 103]
[4 102]
[5 100]
[6 99]
[7 98]
[8 97]
[9 95]
[10 94]
[11 93]
[12 92]
[13 91]
[14 90]
[15 89]
[16 88]
[18 87]
[19 86]
[20 85]
[24 82]
[25 81]
[26 79]
[27 78]
[35 77]
[36 76]
[37 75]
[39 74]
[40 73]
[41 72]
[42 71]
[43 70]
[45 68]
[46 67]
[48 66]
[49 65]
[52 62]
[53 61]
[54 60]
[55 59]
[114 122]
[115 121]
[116 120]
[124 166]
[125 165]
[126 164]
[129 161]
[130 160]
[132 158]
[133 157]
[134 156]
[135 155]
[137 152]
[138 151]
[139 150]
[140 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
