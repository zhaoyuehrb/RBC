%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:35:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUAGUCUCCGGCGAGUUGUUGCCUGGGCUGGACGUGGUUUUGUCUGCUGCGCCCGCUCUUCGCGCUCUCGUUUCAUUUUCUGCAGCGCGCCAGCAGGAUGGCCCACAAGCAGAUCUACUACUCGGACAAGUACUUCGACGAACACUACGAGUACCGGCAUGUUAUGUUACCCAGAGAACUUUCCAAACAAGUACCUA\
) } def
/len { sequence length } bind def

/coor [
[97.26054382 118.73252869]
[89.38775635 131.50042725]
[81.51497650 144.26832581]
[73.74322510 157.09797668]
[66.07297516 169.98857117]
[58.40273285 182.87916565]
[50.73249054 195.76974487]
[43.06224442 208.66033936]
[45.47400665 221.33755493]
[38.81217957 231.91871643]
[27.11291313 235.01748657]
[19.24013138 247.78538513]
[11.36734772 260.55328369]
[3.49456573 273.32119751]
[-4.37821674 286.08908081]
[-4.31166840 302.48809814]
[-18.61466599 310.51034546]
[-32.57351303 301.90322876]
[-31.82854271 285.52099609]
[-17.14611816 278.21630859]
[-9.27333546 265.44842529]
[-1.40055287 252.68051147]
[6.47222948 239.91261292]
[14.34501171 227.14471436]
[13.90235615 209.60546875]
[30.17165375 200.99009705]
[37.84189606 188.09950256]
[45.51214218 175.20892334]
[53.18238449 162.31832886]
[60.85263062 149.42773438]
[61.57201004 142.06474304]
[68.74707794 136.39555359]
[76.61985779 123.62764740]
[84.49263763 110.85974884]
[83.66425323 95.88263702]
[74.43140411 84.06085968]
[65.19855499 72.23907471]
[55.96570587 60.41729736]
[46.73285675 48.59551620]
[33.25829697 48.50034332]
[22.45827675 40.77218628]
[18.14808083 28.41682816]
[21.69078636 16.02225304]
[12.64571095 4.05619335]
[3.60063410 -7.90986633]
[-5.44444275 -19.87592697]
[-14.48951912 -31.84198570]
[-23.53459549 -43.80804443]
[-32.57967377 -55.77410507]
[-42.08985138 -67.37395477]
[-52.05031586 -78.58953094]
[-71.44316101 -84.06877136]
[-74.53081512 -103.15107727]
[-84.84037781 -114.04662323]
[-99.94543457 -118.75276947]
[-103.07279968 -133.31535339]
[-113.38236237 -144.21090698]
[-123.69192505 -155.10644531]
[-137.11508179 -153.92677307]
[-148.59761047 -160.59881592]
[-154.05705261 -172.49113464]
[-151.70251465 -185.16522217]
[-161.83879089 -196.22215271]
[-171.97506714 -207.27909851]
[-182.11134338 -218.33602905]
[-192.24761963 -229.39297485]
[-202.38389587 -240.44990540]
[-207.38201904 -242.02168274]
[-210.91838074 -245.05429077]
[-212.68089294 -248.74363708]
[-212.72300720 -252.27857971]
[-222.32444763 -263.80300903]
[-237.44540405 -261.11001587]
[-251.88157654 -266.35336304]
[-261.74966431 -278.12265015]
[-264.39526367 -293.25198364]
[-259.10668945 -307.67163086]
[-247.30651855 -317.50280762]
[-232.16897583 -320.10095215]
[-217.76597595 -314.76718140]
[-207.97183228 -302.93627930]
[-205.42115784 -287.79067993]
[-210.80003357 -273.40444946]
[-201.19859314 -261.88003540]
[-191.32696533 -250.58618164]
[-181.19068909 -239.52925110]
[-171.05441284 -228.47230530]
[-160.91812134 -217.41537476]
[-150.78184509 -206.35842896]
[-140.64556885 -195.30149841]
[-123.83218384 -195.29312134]
[-111.99047852 -182.88615417]
[-112.79637909 -165.41601562]
[-102.48681641 -154.52046204]
[-92.17725372 -143.62490845]
[-77.80960846 -139.69808960]
[-73.94483185 -124.35618591]
[-63.63526917 -113.46063995]
[-53.42485809 -114.09736633]
[-44.36185455 -108.89514160]
[-39.56427765 -99.36495972]
[-40.83474350 -88.54999542]
[-30.87427711 -77.33442688]
[-27.33954048 -91.91199493]
[-13.80762863 -98.38404083]
[-0.24062148 -91.98589325]
[3.37356377 -77.42781067]
[-5.62580633 -65.42733765]
[-20.61361313 -64.81918335]
[-11.56853580 -52.85312271]
[-2.52345920 -40.88706207]
[6.52161741 -28.92100334]
[15.56669426 -16.95494270]
[24.61177063 -4.98888302]
[33.65684891 6.97717667]
[50.39407730 8.57572269]
[61.00925064 22.04705811]
[58.55463791 39.36266708]
[67.78748322 51.18444824]
[77.02033234 63.00622940]
[86.25318146 74.82801056]
[95.48603058 86.64978790]
[103.65618134 83.96049500]
[113.15154266 86.55298615]
[120.52843475 94.83829498]
[135.28190613 97.54660034]
[150.03538513 100.25490570]
[159.05108643 98.72571564]
[164.99958801 103.12417603]
[179.70848083 106.06504059]
[194.41735840 109.00591278]
[209.12625122 111.94677734]
[224.17555237 107.06527710]
[235.13885498 117.14769745]
[249.84773254 120.08856964]
[264.55661011 123.02943420]
[273.78790283 110.92385864]
[287.30465698 104.05476379]
[302.40164185 103.73683929]
[316.08334351 109.97959137]
[325.65829468 121.49608612]
[329.26855469 135.96783447]
[343.97744751 138.90870667]
[358.68634033 141.84956360]
[373.39523315 144.79043579]
[386.44824219 136.29005432]
[401.32324219 139.48205566]
[409.34661865 151.97850037]
[424.05551147 154.91937256]
[438.76437378 157.86024475]
[453.81369019 152.97872925]
[464.77700806 163.06115723]
[479.48587036 166.00202942]
[494.83804321 160.23632812]
[507.33383179 170.85647583]
[504.11865234 186.93734741]
[488.50000000 191.93634033]
[476.54501343 180.71090698]
[461.83612061 177.77003479]
[447.83889771 182.86189270]
[435.82351685 172.56912231]
[421.11462402 169.62825012]
[406.40576172 166.68737793]
[394.19424438 175.13810730]
[379.23544312 172.36517334]
[370.45434570 159.49932861]
[355.74545288 156.55845642]
[341.03659058 153.61758423]
[326.32769775 150.67671204]
[317.43051147 162.64775085]
[304.16348267 169.59724426]
[289.13320923 170.09938049]
[275.31909180 164.00102234]
[265.48269653 152.46272278]
[261.61575317 137.73832703]
[246.90687561 134.79745483]
[232.19798279 131.85658264]
[218.20075989 136.94844055]
[206.18537903 126.65566254]
[191.47648621 123.71479797]
[176.76760864 120.77392578]
[162.05871582 117.83305359]
[147.32708740 115.00838470]
[132.57360840 112.30007935]
[117.82012939 109.59177399]
[129.46908569 119.04172516]
[143.84095764 123.33702850]
[155.35325623 132.95300293]
[162.13914490 146.33027649]
[163.09819031 161.29959106]
[158.07487488 175.43347168]
[147.88380432 186.43991089]
[134.17756653 192.53411865]
[119.17881775 192.72779846]
[105.31978607 186.98957825]
[94.84788513 176.24996948]
[89.46126556 162.25053406]
[90.03343201 147.26144409]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 34]
[2 33]
[3 32]
[4 30]
[5 29]
[6 28]
[7 27]
[8 26]
[11 24]
[12 23]
[13 22]
[14 21]
[15 20]
[35 122]
[36 121]
[37 120]
[38 119]
[39 118]
[43 115]
[44 114]
[45 113]
[46 112]
[47 111]
[48 110]
[49 109]
[50 103]
[51 102]
[53 98]
[54 97]
[56 95]
[57 94]
[58 93]
[62 90]
[63 89]
[64 88]
[65 87]
[66 86]
[67 85]
[71 84]
[72 83]
[125 185]
[126 184]
[127 183]
[129 182]
[130 181]
[131 180]
[132 179]
[134 177]
[135 176]
[136 175]
[142 169]
[143 168]
[144 167]
[145 166]
[148 163]
[149 162]
[150 161]
[152 159]
[153 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
