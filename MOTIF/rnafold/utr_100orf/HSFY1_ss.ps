%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:20:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAUAAGUGUACAUGCUUAGGCCUUCUGAAGCAGCAUUUGAAGCUGCAGUCCUGAAAACCAUGCAGGCCGGAAGAGUAGAUAAAGAAAUAUUUAUUUGAGAUGGCACAUGUUUCUUCAGAAACUCAAGAUGUUUCCCCCAAAGAUGAAUUAACUGCUUCAGAAGCCUCCACUAGGUCUCCAUUGUGUGAACACACCUUCC\
) } def
/len { sequence length } bind def

/coor [
[109.88240814 587.74548340]
[98.97399902 577.15887451]
[92.95184326 563.20172119]
[92.73425293 548.00238037]
[98.35443115 533.87854004]
[108.95532227 522.98406982]
[122.92038727 516.98028564]
[122.68594360 501.98211670]
[122.45150757 486.98394775]
[122.21707153 471.98577881]
[114.28179932 459.38101196]
[121.80246735 445.46157837]
[121.56803131 430.46340942]
[121.33359528 415.46524048]
[121.09915924 400.46707153]
[120.86471558 385.46890259]
[124.51196289 365.59658813]
[135.82405090 353.37997437]
[148.89775085 350.64755249]
[145.41317749 336.05792236]
[141.92858887 321.46826172]
[138.44401550 306.87863159]
[133.82872009 301.09841919]
[135.02087402 292.03375244]
[131.76473999 277.39141846]
[128.50862122 262.74911499]
[125.25248718 248.10678101]
[121.99635315 233.46446228]
[118.74022675 218.82214355]
[115.48409271 204.17980957]
[112.22795868 189.53749084]
[108.97183228 174.89517212]
[105.71569824 160.25285339]
[102.45957184 145.61051941]
[94.05644989 145.74246216]
[85.68943787 144.32427979]
[77.64477539 141.37411499]
[70.20314789 136.96305847]
[63.62989807 131.21356201]
[58.16561127 124.29631042]
[54.01736832 116.42517090]
[51.35102081 107.85062408]
[50.28471375 98.85182190]
[50.88399887 89.72751617]
[36.04904938 87.50843811]
[21.21409988 85.28936768]
[6.37915087 83.07029724]
[-8.45579815 80.85121918]
[-16.60434151 93.71672058]
[-29.28487587 102.15022278]
[-44.30041885 104.69057465]
[-59.04943466 100.89764404]
[-70.97657013 91.42857361]
[-78.01538086 77.92394257]
[-78.94634247 62.72350693]
[-73.60816956 48.46083832]
[-62.92572403 37.60702515]
[-48.74980545 32.04256058]
[-33.53648376 32.73151779]
[-19.92155075 39.55453491]
[-10.26388168 51.32947922]
[-6.23672485 66.01627350]
[8.59822464 68.23534393]
[23.43317413 70.45442200]
[38.26812363 72.67349243]
[53.10307312 74.89256287]
[61.97665405 62.79878616]
[55.40811157 49.31344986]
[48.83956909 35.82811737]
[42.27102661 22.34278107]
[25.58015823 19.62608528]
[13.91109657 7.61747026]
[11.71813965 -8.81506538]
[19.66883278 -23.17272758]
[12.89032745 -36.55375290]
[6.11182308 -49.93478012]
[-0.66668171 -63.31580734]
[-7.44518661 -76.69683075]
[-14.22369099 -90.07785797]
[-21.00219536 -103.45888519]
[-27.78070068 -116.83991241]
[-34.55920410 -130.22094727]
[-49.65460587 -134.90115356]
[-56.94522858 -148.92337036]
[-52.10567474 -163.96844482]
[-38.00716782 -171.11041260]
[-23.01409912 -166.11206055]
[-16.02159309 -151.93882751]
[-21.17817879 -136.99945068]
[-14.39967346 -123.61841583]
[-7.62116909 -110.23738861]
[-0.84266448 -96.85636902]
[5.93584013 -83.47534180]
[12.71434498 -70.09431458]
[19.49284935 -56.71328735]
[26.27135468 -43.33226013]
[33.04985809 -29.95123291]
[46.37548447 -29.06284523]
[57.61102295 -21.64476204]
[63.76105118 -9.54643345]
[63.12286377 4.11869431]
[55.75636292 15.77423859]
[62.32490540 29.25957298]
[68.89344788 42.74490738]
[75.46199036 56.23024368]
[103.27688599 52.18438721]
[127.56314087 63.57689285]
[138.45585632 53.26433563]
[149.34855652 42.95177841]
[154.05055237 27.84542847]
[168.61227417 24.71405983]
[179.50498962 14.40150261]
[190.39770508 4.08894539]
[186.44601440 -9.33379841]
[188.65432739 -23.08376503]
[196.53515625 -34.48516846]
[208.50273132 -41.34419250]
[222.19189453 -42.37102127]
[234.92541504 -37.42202759]
[245.97798157 -47.56308365]
[257.03054810 -57.70413589]
[268.08309937 -67.84518433]
[279.13565063 -77.98624420]
[278.26266479 -93.59944153]
[287.67123413 -106.08995056]
[302.91891479 -109.56013489]
[316.80621338 -102.37148285]
[322.77600098 -87.91825104]
[318.00949097 -73.02481842]
[304.75729370 -64.72340393]
[289.27670288 -66.93368530]
[278.22415161 -56.79262924]
[267.17160034 -46.65157700]
[256.11901855 -36.51052475]
[245.06646729 -26.36947060]
[248.95915222 -10.69020462]
[244.38945007 4.90312672]
[232.51313782 16.13017273]
[216.50492859 19.85951614]
[200.71026611 14.98165703]
[189.81755066 25.29421425]
[178.92483521 35.60676956]
[175.00196838 49.97549820]
[159.66111755 53.84449005]
[148.76840210 64.15704346]
[137.87570190 74.46960449]
[143.08030701 84.81920624]
[145.51385498 96.14529419]
[145.01979065 107.71932983]
[141.62989807 118.79682922]
[135.56224060 128.66525269]
[127.20709229 136.68983459]
[117.10189056 142.35440063]
[120.35802460 156.99671936]
[123.61415100 171.63903809]
[126.87028503 186.28135681]
[130.12641907 200.92369080]
[133.38255310 215.56600952]
[136.63867188 230.20832825]
[139.89480591 244.85064697]
[143.15093994 259.49298096]
[146.40707397 274.13528442]
[149.66319275 288.77761841]
[153.03366089 303.39404297]
[156.51823425 317.98370361]
[160.00282288 332.57333374]
[163.48739624 347.16299438]
[171.68646240 359.72384644]
[183.64007568 368.78536987]
[199.96980286 370.29257202]
[206.58268738 385.29931641]
[196.67594910 398.36791992]
[180.44079590 396.05453491]
[174.57855225 380.73898315]
[162.62493896 371.67745972]
[155.93443298 375.06671143]
[162.71293640 388.44775391]
[169.49143982 401.82876587]
[176.26971436 415.20989990]
[162.88847351 421.98797607]
[156.11041260 408.60726929]
[149.33190918 395.22625732]
[142.55340576 381.84521484]
[135.86288452 385.23446655]
[136.09732056 400.23263550]
[136.33175659 415.23080444]
[136.56619263 430.22897339]
[136.80064392 445.22714233]
[144.75268555 458.90469360]
[137.21524048 471.75134277]
[137.44967651 486.74951172]
[137.68411255 501.74768066]
[137.91854858 516.74584961]
[152.06443787 522.31024170]
[163.00065613 532.86804199]
[169.05950928 546.80932617]
[169.31709290 562.00805664]
[163.73408508 576.14660645]
[153.16189575 587.06896973]
[139.21267700 593.10943604]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 193]
[8 192]
[9 191]
[10 190]
[12 188]
[13 187]
[14 186]
[15 185]
[16 184]
[19 167]
[20 166]
[21 165]
[22 164]
[24 163]
[25 162]
[26 161]
[27 160]
[28 159]
[29 158]
[30 157]
[31 156]
[32 155]
[33 154]
[34 153]
[44 66]
[45 65]
[46 64]
[47 63]
[48 62]
[67 105]
[68 104]
[69 103]
[70 102]
[74 97]
[75 96]
[76 95]
[77 94]
[78 93]
[79 92]
[80 91]
[81 90]
[82 89]
[107 146]
[108 145]
[109 144]
[111 142]
[112 141]
[113 140]
[119 135]
[120 134]
[121 133]
[122 132]
[123 131]
[168 175]
[169 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
