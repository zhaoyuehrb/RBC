%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:08:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGCUGCCCGCUGCCCGCUGCCCUCGCCCCGCGCGCCGGGCAUGUGAGCGCGGGCGGGCGCCGUCACCAUGGCCUCGCCGCGCGCCUCGCGGUGGCCGCCGCCGCUCCUGCUGCUGUUGCUGCCGCUGCUGCUGCUGCCGCCGGCGGCCCCCGGGACGCGGGACCCGC\
) } def
/len { sequence length } bind def

/coor [
[115.26145172 326.23162842]
[121.30779266 310.39248657]
[121.30779266 295.39248657]
[109.16937256 286.80197144]
[104.36006165 272.54244995]
[108.92281342 258.01541138]
[121.30779266 248.85469055]
[121.30779266 233.85469055]
[121.30779266 218.85469055]
[121.30779266 203.85469055]
[121.30779266 188.85469055]
[110.62692261 178.53701782]
[110.41323853 163.32489014]
[121.30779266 152.19175720]
[121.30779266 137.19175720]
[121.30779266 122.19175720]
[121.30779266 107.19175720]
[105.27098846 120.24085999]
[87.01765442 114.33925629]
[73.42630768 120.68555450]
[59.83496857 127.03184509]
[46.24362946 133.37814331]
[32.65228653 139.72442627]
[22.47593689 155.04876709]
[5.07696247 152.89503479]
[-8.39406395 159.49287415]
[-21.86509132 166.09069824]
[-28.40251160 180.74136353]
[-43.96837997 184.62509155]
[-56.62189102 174.76261902]
[-56.65635681 158.71960449]
[-44.04533768 148.80287170]
[-28.46292686 152.61967468]
[-14.99189949 146.02183533]
[-1.52087283 139.42401123]
[2.70929551 128.06419373]
[13.91219139 122.46720886]
[26.30599403 126.13308716]
[39.89733505 119.78679657]
[53.48867798 113.44050598]
[67.08001709 107.09420776]
[80.67136383 100.74791718]
[92.01193237 80.66954041]
[116.53035736 84.75235748]
[107.44509125 72.81678009]
[98.35982513 60.88120651]
[89.27455902 48.94562912]
[80.18929291 37.01005554]
[70.99348450 25.15944099]
[61.68792725 13.39480686]
[52.38237000 1.63017321]
[43.07681274 -10.13446045]
[33.66230774 -21.81209564]
[24.13967514 -33.40172195]
[14.61704254 -44.99134827]
[5.09440899 -56.58097458]
[-4.42822456 -68.17060089]
[-13.95085812 -79.76023102]
[-21.85023689 -84.42880249]
[-23.54036713 -91.65493774]
[-32.84592438 -103.41957092]
[-42.15148163 -115.18420410]
[-51.45703888 -126.94883728]
[-60.76259613 -138.71347046]
[-76.19553375 -144.25933838]
[-78.84247589 -160.44345093]
[-65.98047638 -170.61700439]
[-50.84086227 -164.31430054]
[-48.99796295 -148.01902771]
[-39.69240570 -136.25439453]
[-30.38684845 -124.48976135]
[-21.08129120 -112.72512817]
[-11.77573299 -100.96049500]
[-2.36123085 -89.28285980]
[7.16140270 -77.69323730]
[16.68403625 -66.10360718]
[26.20666885 -54.51398087]
[35.72930145 -42.92435455]
[45.25193787 -31.33472824]
[51.95501709 -28.15003014]
[54.84144592 -19.44001770]
[64.14700317 -7.67538452]
[73.45256042 4.08924913]
[82.75811768 15.85388279]
[89.40084076 19.16263008]
[92.12487030 27.92478943]
[101.21013641 39.86036301]
[110.29540253 51.79594040]
[119.38066864 63.73151398]
[128.46592712 75.66709137]
[142.54000854 80.85557556]
[157.19856262 77.67328644]
[164.95822144 72.77599335]
[172.15907288 74.57076263]
[186.87425232 71.66149902]
[201.58941650 68.75224304]
[216.30458069 65.84297943]
[231.01976013 62.93371964]
[245.73492432 60.02445984]
[260.45010376 57.11520004]
[275.16525269 54.20594025]
[287.20272827 43.93901062]
[301.18899536 49.06092453]
[315.90414429 46.15166473]
[319.62765503 34.17005920]
[328.05529785 24.97284317]
[339.53286743 20.27395058]
[351.84613037 20.91325760]
[362.64788818 26.70714188]
[369.90533447 36.49529266]
[384.71847534 34.13500595]
[397.12927246 24.32260132]
[410.91546631 29.96084785]
[425.72860718 27.60056114]
[438.13937378 17.78815842]
[451.92556763 23.42640305]
[466.73870850 21.06611824]
[479.14950562 11.25371456]
[492.93569946 16.89196014]
[507.74884033 14.53167343]
[520.13592529 3.78495502]
[535.54595947 9.39415550]
[538.12640381 25.58901024]
[525.22271729 35.70964050]
[510.10913086 29.34481239]
[495.29598999 31.70509720]
[483.94473267 41.34867859]
[469.09899902 35.87925720]
[454.28585815 38.23954010]
[442.93463135 47.88312149]
[428.08889771 42.41370010]
[413.27575684 44.77398682]
[401.92449951 54.41756439]
[387.07876587 48.94814301]
[372.26562500 51.30842972]
[365.03448486 67.38500977]
[349.47851562 76.00521851]
[331.70294189 73.57133484]
[318.81341553 60.86683273]
[304.09823608 63.77609253]
[293.11331177 73.83493805]
[278.07452393 68.92111206]
[263.35934448 71.83036804]
[248.64418030 74.73963165]
[233.92901611 77.64888763]
[219.21383667 80.55815125]
[204.49867249 83.46741486]
[189.78350830 86.37667084]
[175.06832886 89.28593445]
[160.38084412 92.33183289]
[145.72229004 95.51412201]
[136.30778503 107.19175720]
[136.30778503 122.19175720]
[136.30778503 137.19175720]
[136.30778503 152.19175720]
[147.20234680 163.32489014]
[146.98866272 178.53701782]
[136.30778503 188.85469055]
[136.30778503 203.85469055]
[136.30778503 218.85469055]
[136.30778503 233.85469055]
[136.30778503 248.85469055]
[148.69276428 258.01541138]
[153.25552368 272.54244995]
[148.44621277 286.80197144]
[136.30778503 295.39248657]
[136.30778503 310.39248657]
[142.35412598 326.23162842]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 167]
[3 166]
[7 162]
[8 161]
[9 160]
[10 159]
[11 158]
[14 155]
[15 154]
[16 153]
[17 152]
[19 42]
[20 41]
[21 40]
[22 39]
[23 38]
[25 35]
[26 34]
[27 33]
[44 90]
[45 89]
[46 88]
[47 87]
[48 86]
[49 84]
[50 83]
[51 82]
[52 81]
[53 79]
[54 78]
[55 77]
[56 76]
[57 75]
[58 74]
[60 73]
[61 72]
[62 71]
[63 70]
[64 69]
[91 151]
[92 150]
[94 149]
[95 148]
[96 147]
[97 146]
[98 145]
[99 144]
[100 143]
[101 142]
[103 140]
[104 139]
[110 135]
[111 134]
[113 132]
[114 131]
[116 129]
[117 128]
[119 126]
[120 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
