%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:13:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGAGCAGUUGGCUGAGUUGUUGCAACUUUUUUCGAAAGCUGGGUUUCCCGGGAGAUCCCAGGCGGUGACAGAGUGGAGCCAUGGCUAGAGGCAGGAAGAUGUCCAAGCCCCGCGCGGUGGAGGCGGCGGCGGCGGCGGCGGCGGUGGCAGCGACGGCCCCGGGCCCGGAGAUGGUGGAGC\
) } def
/len { sequence length } bind def

/coor [
[131.56401062 458.86972046]
[141.16937256 447.14312744]
[154.20777893 439.41165161]
[151.40711975 424.67541504]
[148.60646057 409.93920898]
[144.25837708 403.94067383]
[145.88604736 394.92761230]
[143.33738708 380.14572144]
[129.31333923 375.12655640]
[119.62005615 363.68557739]
[116.93721008 348.83065796]
[122.08384705 334.53347778]
[133.77200317 324.66769409]
[131.22335815 309.88577271]
[128.67469788 295.10388184]
[126.12603760 280.32199097]
[123.57738495 265.54010010]
[111.63648224 252.69389343]
[118.11169434 235.46754456]
[115.31103516 220.73130798]
[112.51038361 205.99508667]
[109.70972443 191.25886536]
[106.90907288 176.52264404]
[104.10841370 161.78640747]
[101.30775452 147.05018616]
[98.50710297 132.31396484]
[76.73901367 122.47993469]
[67.65390778 100.38879395]
[53.02188873 97.08666229]
[38.38987350 93.78452301]
[23.75785637 90.48239136]
[9.12583923 87.18025970]
[-2.19064808 93.40140533]
[-14.32132816 90.33342743]
[-20.88393211 80.15399170]
[-35.45743942 76.60252380]
[-50.03094482 73.05106354]
[-60.67138290 84.03870392]
[-75.28643799 88.19767761]
[-89.92364502 84.50733948]
[-100.67646790 74.05589294]
[-104.72687531 59.72202682]
[-119.30038452 56.17056274]
[-133.87388611 52.61909485]
[-148.44738770 49.06762695]
[-163.02090454 45.51616287]
[-177.62419128 42.08923721]
[-192.25621033 38.78710175]
[-206.88822937 35.48496628]
[-221.52024841 32.18283463]
[-237.00970459 37.56877899]
[-249.24021912 26.64419174]
[-245.63008118 10.64735126]
[-229.89308167 6.03443575]
[-218.21810913 17.55081558]
[-203.58609009 20.85295105]
[-188.95407104 24.15508461]
[-174.32205200 27.45722008]
[-167.08786011 25.85892105]
[-159.46943665 30.94265556]
[-144.89593506 34.49412155]
[-130.32241821 38.04558945]
[-115.74891663 41.59705353]
[-101.17540741 45.14852142]
[-90.98459625 34.28514099]
[-76.62898254 29.95245552]
[-61.93502808 33.40993118]
[-50.87193680 43.82649612]
[-46.47947693 58.47755432]
[-31.90597153 62.02902222]
[-17.33246422 65.58049011]
[-0.79249609 59.74610519]
[12.42797375 72.54824066]
[27.05998993 75.85037231]
[41.69200516 79.15251160]
[56.32402420 82.45464325]
[70.95603943 85.75677490]
[75.33845520 79.06607056]
[81.22851562 73.65512085]
[88.26614380 69.85472870]
[96.02108765 67.89720917]
[104.01928711 67.90223694]
[109.28305817 53.85614395]
[114.54682922 39.81005096]
[119.81060028 25.76395988]
[117.40807343 10.12623501]
[129.11955261 0.92349756]
[134.38333130 -13.12259483]
[124.74275970 -24.99721527]
[122.35604858 -40.00389481]
[127.76528931 -54.09667587]
[139.42427063 -63.52663803]
[154.13882446 -65.83908844]
[159.40260315 -79.88517761]
[164.66636658 -93.93126678]
[161.21224976 -112.00734711]
[175.16223145 -122.63789368]
[180.18542480 -136.77180481]
[185.20861816 -150.90571594]
[179.64462280 -165.95303345]
[188.06298828 -179.60992432]
[204.00585938 -181.39999390]
[215.24324036 -169.95005798]
[213.15475464 -154.04353333]
[199.34252930 -145.88252258]
[194.31933594 -131.74861145]
[189.29614258 -117.61470032]
[194.20872498 -106.54424286]
[190.12101746 -94.71814728]
[178.71246338 -88.66749573]
[173.44868469 -74.62140656]
[168.18492126 -60.57531357]
[177.75572205 -49.16193390]
[180.34584045 -34.39212418]
[175.16102600 -20.21523666]
[163.49969482 -10.47306061]
[148.42942810 -7.85882378]
[143.16564941 6.18726873]
[145.94467163 20.82032204]
[133.85668945 31.02773094]
[128.59292603 45.07382202]
[123.32914734 59.11991501]
[118.06537628 73.16600800]
[123.47789001 77.74669647]
[127.76235199 83.39659882]
[130.71289062 89.84426117]
[145.65826416 88.56526947]
[158.74845886 79.67946625]
[172.08911133 86.30339050]
[187.03448486 85.02440643]
[200.12466431 76.13860321]
[213.46531677 82.76252747]
[228.41069031 81.48353577]
[241.54507446 71.66416168]
[256.50735474 78.37696838]
[257.90563965 94.71639252]
[244.30148315 103.87384033]
[229.68968201 96.42890930]
[214.74430847 97.70790100]
[202.72311401 106.50222015]
[188.31346130 99.96977997]
[173.36808777 101.24876404]
[161.34689331 110.04309082]
[146.93725586 103.51064301]
[131.99188232 104.78963470]
[125.77539825 119.54609680]
[113.24332428 129.51330566]
[116.04398346 144.24952698]
[118.84463501 158.98576355]
[121.64529419 173.72198486]
[124.44595337 188.45820618]
[127.24660492 203.19442749]
[130.04725647 217.93066406]
[132.84791565 232.66688538]
[143.06253052 240.56797791]
[145.08142090 252.91665649]
[138.35928345 262.99145508]
[140.90792847 277.77334595]
[143.45658875 292.55523682]
[146.00524902 307.33712769]
[148.55389404 322.11901855]
[162.87104797 327.50106812]
[172.50836182 339.24920654]
[174.95503235 354.14486694]
[169.65277100 368.17135620]
[158.11927795 377.59704590]
[160.66793823 392.37893677]
[163.34268188 407.13854980]
[166.14334106 421.87475586]
[168.94400024 436.61099243]
[183.90966797 439.02023315]
[197.14727783 446.40545654]
[207.05831909 457.87484741]
[212.44599915 472.04342651]
[212.65969849 487.20028687]
[207.67364502 501.51513672]
[198.08990479 513.25939941]
[185.06576538 521.01489258]
[170.17396545 523.84515381]
[155.21276855 521.40832520]
[141.98878479 513.99871826]
[132.09889221 502.51107788]
[126.73735046 488.33258057]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 170]
[4 169]
[5 168]
[7 167]
[8 166]
[13 161]
[14 160]
[15 159]
[16 158]
[17 157]
[19 154]
[20 153]
[21 152]
[22 151]
[23 150]
[24 149]
[25 148]
[26 147]
[28 77]
[29 76]
[30 75]
[31 74]
[32 73]
[35 71]
[36 70]
[37 69]
[42 64]
[43 63]
[44 62]
[45 61]
[46 60]
[47 58]
[48 57]
[49 56]
[50 55]
[82 123]
[83 122]
[84 121]
[85 120]
[87 118]
[88 117]
[93 112]
[94 111]
[95 110]
[97 107]
[98 106]
[99 105]
[126 145]
[127 144]
[129 142]
[130 141]
[132 139]
[133 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
