%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:41:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAGCCCCAGCCCCAGCCCCGGCCCCGGCCCCGGCUCGCGGGCGCUGCGUCUCCGCGUACAGGAGGCGGCGGCGGCUCCCAGUCACCGGCCCCCGCCGGCGAGCGCACGAUGCACUGCCUGGGCGCCGAGUACCUGGUUUCUGCAGAAGGAGCCCCUAGGCAAAGGGAGUGGCGACCCCAGAUUUAUAGGAAAUGCACAGAUACGGCAU\
) } def
/len { sequence length } bind def

/coor [
[122.04949951 206.94371033]
[107.53031921 201.13618469]
[100.18657684 187.33027649]
[103.48576355 172.04467773]
[115.87011719 162.49679565]
[116.31671906 147.50344849]
[116.76332855 132.51010132]
[109.92848969 129.42221069]
[97.74546051 138.17286682]
[96.25881958 123.24645233]
[89.42398834 120.15856171]
[78.46807861 130.40396118]
[67.51216888 140.64935303]
[56.55625534 150.89474487]
[51.56604004 170.42575073]
[32.55934143 173.97996521]
[21.91333199 184.54701233]
[11.26732349 195.11405945]
[0.62131470 205.68110657]
[0.39464265 221.25628662]
[-10.55245590 231.82112122]
[-25.39961624 231.50903320]
[-36.04562378 242.07608032]
[-46.69163513 252.64312744]
[-50.47051239 268.60095215]
[-66.25534821 273.04742432]
[-77.80805206 261.40838623]
[-73.24419403 245.65710449]
[-57.25868225 241.99713135]
[-46.61267471 231.43008423]
[-35.96666336 220.86303711]
[-36.16820908 206.01396179]
[-25.52217293 195.14581299]
[-9.94573307 195.03509521]
[0.70027572 184.46804810]
[11.34628487 173.90100098]
[21.99229240 163.33395386]
[21.11106682 153.15374756]
[26.08320236 143.97627258]
[35.47921753 138.94683838]
[46.31086349 139.93882751]
[57.26677322 129.69343567]
[68.22268677 119.44804382]
[79.17859650 109.20265961]
[75.09892273 94.76810455]
[60.40092087 91.77333069]
[45.70291901 88.77855682]
[31.00491333 85.78378296]
[16.30690956 82.78900909]
[1.58701849 79.90373230]
[-13.15394402 77.12812042]
[-27.89490700 74.35250854]
[-42.63586807 71.57689667]
[-57.37683105 68.80129242]
[-72.11779785 66.02568054]
[-84.09697723 76.07720184]
[-99.73447418 76.02535248]
[-111.64673615 65.89460754]
[-114.20915985 50.46839905]
[-106.21184540 37.03050613]
[-91.43088531 31.92589378]
[-76.84539032 37.56480408]
[-69.34218597 51.28471375]
[-54.60122299 54.06032562]
[-39.86026001 56.83593750]
[-25.11929703 59.61154938]
[-10.37833309 62.38715744]
[4.36262941 65.16277313]
[11.51760674 63.31125641]
[19.30168343 68.09100342]
[33.99968719 71.08577728]
[48.69769287 74.08055115]
[63.39569855 77.07532501]
[78.09370422 80.07009888]
[90.93264008 72.31370544]
[95.11965179 57.90992737]
[99.30666351 43.50614166]
[103.49367523 29.10236168]
[107.68068695 14.69857979]
[111.86769867 0.29479733]
[105.80094147 -36.10450745]
[107.36146545 -51.02310944]
[108.92198944 -65.94171906]
[99.24478149 -78.14784241]
[101.03990173 -93.25519562]
[112.73621368 -102.40570831]
[114.29673767 -117.32431030]
[115.74615479 -132.25411987]
[117.08438873 -147.19430542]
[118.42262268 -162.13449097]
[119.76085663 -177.07467651]
[113.28559875 -191.51010132]
[122.12751770 -203.49633789]
[123.46575165 -218.43652344]
[124.80398560 -233.37670898]
[126.14221954 -248.31689453]
[123.71150208 -254.46531677]
[124.61509705 -260.07608032]
[127.74921417 -263.67971802]
[129.53167725 -278.57345581]
[131.31414795 -293.46716309]
[129.22666931 -302.35986328]
[133.23562622 -308.56875610]
[135.23963928 -323.43426514]
[129.41542053 -338.14443970]
[138.78372192 -349.72390747]
[140.78773499 -364.58944702]
[142.79176331 -379.45495605]
[138.91574097 -395.95989990]
[153.70266724 -404.25344849]
[165.76554871 -392.34030151]
[157.65728760 -377.45095825]
[155.65327454 -362.58541870]
[153.64926147 -347.71987915]
[159.61682129 -334.07299805]
[150.10516357 -321.43026733]
[148.10115051 -306.56472778]
[146.20785522 -291.68469238]
[144.42539978 -276.79098511]
[142.64292908 -261.89727783]
[141.08241272 -246.97865295]
[139.74417114 -232.03848267]
[138.40592957 -217.09829712]
[137.06770325 -202.15811157]
[143.63867188 -188.79129028]
[134.70103455 -175.73645020]
[133.36280823 -160.79626465]
[132.02456665 -145.85607910]
[130.68634033 -130.91589355]
[133.22055054 -123.97329712]
[129.21533203 -115.76379395]
[127.65481567 -100.84518433]
[137.20433044 -89.47230530]
[135.83425903 -74.32048798]
[123.84059143 -64.38119507]
[122.28006744 -49.46258926]
[120.71954346 -34.54398346]
[133.19934082 -26.22203827]
[146.37181091 -33.39740372]
[154.45486450 -47.66612625]
[170.85343933 -47.52977371]
[178.69810486 -33.12861252]
[169.91893005 -19.27732849]
[153.54718018 -20.22492981]
[140.37471008 -13.04956341]
[154.50578308 -8.01839638]
[158.58840942 6.41532087]
[149.18627930 18.10292625]
[134.21305847 17.20711899]
[126.27147675 4.48180866]
[122.08446503 18.88559151]
[117.89745331 33.28937149]
[113.71044922 47.69315338]
[109.52343750 62.09693527]
[105.33642578 76.50071716]
[164.01458740 103.96418762]
[177.49432373 110.54421997]
[190.97406006 117.12424469]
[204.45378113 123.70427704]
[216.43040466 112.97724915]
[231.57015991 107.68024445]
[247.54501343 108.59644318]
[261.91052246 115.55603027]
[272.47988892 127.46669006]
[277.65673828 142.48498535]
[276.67639160 158.30158997]
[290.25259399 164.68019104]
[303.82879639 171.05879211]
[312.92663574 171.87568665]
[317.55856323 177.63476562]
[331.03829956 184.21479797]
[347.35140991 182.53709412]
[356.74032593 195.98255920]
[349.54653931 210.71963501]
[333.17041016 211.58808899]
[324.45828247 197.69451904]
[310.97854614 191.11450195]
[297.45019531 184.63499451]
[283.87399292 178.25639343]
[270.29779053 171.87779236]
[260.29113770 181.71681213]
[247.49986267 187.56163025]
[233.45199585 188.69161987]
[219.83334351 184.95071411]
[208.28517151 176.76861572]
[200.20646667 165.11152649]
[196.58439636 151.36810303]
[197.87376404 137.18400574]
[184.39402771 130.60397339]
[170.91429138 124.02395630]
[157.43455505 117.44392395]
[151.01509094 121.32212067]
[159.69003296 133.55917358]
[168.36497498 145.79621887]
[177.03993225 158.03326416]
[185.71487427 170.27030945]
[196.95805359 180.19960022]
[195.61012268 195.13891602]
[182.77120972 202.89537048]
[168.91993713 197.13844299]
[165.36119080 182.56657410]
[158.56492615 169.19456482]
[151.76866150 155.82254028]
[144.97241211 142.45053101]
[138.17614746 129.07850647]
[131.75666809 132.95671082]
[131.31007385 147.95005798]
[130.86346436 162.94340515]
[142.65756226 173.21148682]
[145.04107666 188.66635132]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 208]
[6 207]
[7 206]
[11 44]
[12 43]
[13 42]
[14 41]
[16 37]
[17 36]
[18 35]
[19 34]
[22 31]
[23 30]
[24 29]
[45 74]
[46 73]
[47 72]
[48 71]
[49 70]
[50 68]
[51 67]
[52 66]
[53 65]
[54 64]
[55 63]
[75 155]
[76 154]
[77 153]
[78 152]
[79 151]
[80 150]
[81 137]
[82 136]
[83 135]
[86 132]
[87 131]
[88 129]
[89 128]
[90 127]
[91 126]
[93 124]
[94 123]
[95 122]
[96 121]
[99 120]
[100 119]
[101 118]
[103 117]
[104 116]
[106 114]
[107 113]
[108 112]
[138 145]
[139 144]
[156 191]
[157 190]
[158 189]
[159 188]
[166 180]
[167 179]
[168 178]
[170 177]
[171 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
