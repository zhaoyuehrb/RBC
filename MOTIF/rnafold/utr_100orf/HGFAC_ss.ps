%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:10:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCUUGACCCCACCUGCCUUGGCCGCUCUGCUCCCGCCUCCCACUGCCCCUCAGGCCAGCUCAGGAGCCAUGGGGCGCUGGGCCUGGGUCCCCAGCCCCUGGCCCCCACCGGGGCUGGGCCCCUUCCUCCUCCUCCUCCUGCUGCUGCUGCUGCUGCCACGGGGGUUCC\
) } def
/len { sequence length } bind def

/coor [
[73.02759552 107.99978638]
[58.03015518 108.27696991]
[43.03271866 108.55415344]
[28.03527832 108.83133698]
[13.04552269 109.38561249]
[-1.93143129 110.21678162]
[-10.36503696 113.82893372]
[-17.19232559 110.92233276]
[-32.18208313 111.47660828]
[-47.17183685 112.03088379]
[-62.16159439 112.58515167]
[-77.15135193 113.13942719]
[-92.09951019 114.38538361]
[-106.97418213 116.32037354]
[-121.84885406 118.25536346]
[-136.72352600 120.19035339]
[-146.35824585 132.43003845]
[-161.47084045 134.18049622]
[-173.08013916 124.91983795]
[-187.95480347 126.85482788]
[-202.82946777 128.78981018]
[-217.70414734 130.72480774]
[-232.57881165 132.65979004]
[-247.45349121 134.59478760]
[-252.42817688 150.06687927]
[-263.60522461 161.78530884]
[-278.71609497 167.44493103]
[-294.72552490 165.96301270]
[-308.44122314 157.68585205]
[-317.15051270 144.30966187]
[-331.98690796 146.51918030]
[-335.63793945 161.27514648]
[-344.66195679 173.50770569]
[-357.68286133 181.35150146]
[-372.71499634 183.61039734]
[-387.46615601 179.93994141]
[-399.68682861 170.89984131]
[-407.51348877 157.86865234]
[-409.75262451 142.83354187]
[-406.06274414 128.08723450]
[-397.00659180 115.87845612]
[-383.96511841 108.06894684]
[-368.92706299 105.84960175]
[-354.18563843 109.55886078]
[-341.98876953 118.63108063]
[-334.19644165 131.68281555]
[-319.36004639 129.47328186]
[-315.89584351 116.01840973]
[-307.53292847 104.86930084]
[-295.51074219 97.73354340]
[-281.63229370 95.71979523]
[-267.99374390 99.16564178]
[-256.66772461 107.58155060]
[-249.38847351 119.72010803]
[-234.51380920 117.78512573]
[-219.63912964 115.85013580]
[-204.76446533 113.91514587]
[-189.88978577 111.98015594]
[-175.01512146 110.04517365]
[-166.16146851 98.12256622]
[-151.10400391 95.94831848]
[-138.65850830 105.31568146]
[-123.78384399 103.38069153]
[-108.90917206 101.44570160]
[-94.03450012 99.51071167]
[-103.97895813 88.28094482]
[-101.58663940 73.47294617]
[-88.61190033 65.94592285]
[-74.56955719 71.21968079]
[-69.75731659 85.42680359]
[-77.70561981 98.14966583]
[-62.71586609 97.59539795]
[-47.72610855 97.04112244]
[-32.73635483 96.48685455]
[-17.74659729 95.93257904]
[-2.76260328 95.23983002]
[12.21435070 94.40865326]
[16.03249741 91.48065186]
[21.74004364 90.94636536]
[27.75809479 93.83390045]
[42.75553513 93.55671692]
[57.75297165 93.27953339]
[72.75041199 93.00234985]
[83.52491760 74.34681702]
[105.80380249 67.67475128]
[128.13374329 78.85113525]
[138.03260803 67.58115387]
[147.93147278 56.31117630]
[147.88331604 43.38745499]
[156.39291382 34.20058823]
[168.48202515 33.32023239]
[178.58746338 22.23509789]
[188.69290161 11.14996338]
[198.79832458 0.06482948]
[208.90376282 -11.02030468]
[219.00920105 -22.10543823]
[229.11463928 -33.19057083]
[239.22007751 -44.27570724]
[249.32550049 -55.36083984]
[252.81333923 -63.84661102]
[259.72155762 -66.55524445]
[270.03012085 -77.45174408]
[269.34158325 -93.24102783]
[280.08090210 -104.83598328]
[295.87658691 -105.35753632]
[307.35733032 -94.49624634]
[307.71185303 -78.69593811]
[296.72979736 -67.33064270]
[280.92660522 -67.14319611]
[270.61807251 -56.24669266]
[260.41064453 -45.25540543]
[250.30520630 -34.17026901]
[240.19976807 -23.08513641]
[230.09432983 -12.00000381]
[219.98890686 -0.91486961]
[209.88346863 10.17026424]
[199.77803040 21.25539780]
[189.67259216 32.34053040]
[179.56716919 43.42566681]
[176.76298523 60.73223495]
[159.20144653 66.21004486]
[149.30258179 77.48001862]
[139.40371704 88.75000000]
[153.49391174 83.60543060]
[163.98774719 72.88726044]
[178.21388245 68.13148499]
[193.04379272 70.38394928]
[205.21623230 79.14930725]
[212.05435181 92.49996948]
[212.05436707 107.49996948]
[205.21627808 120.85063934]
[193.04385376 129.61602783]
[178.21394348 131.86851501]
[163.98780823 127.11277008]
[153.49391174 116.39456940]
[139.40371704 111.25000000]
[149.30258179 122.51998138]
[159.20144653 133.78996277]
[169.10032654 145.05993652]
[178.99919128 156.32991028]
[188.89805603 167.59989929]
[204.43051147 168.77497864]
[214.30882263 180.34535217]
[213.09283447 195.14591980]
[222.99169922 206.41590881]
[237.91204834 211.67837524]
[240.49780273 226.34681702]
[250.39668274 237.61680603]
[266.09466553 242.36080933]
[269.57125854 258.38720703]
[257.25006104 269.20941162]
[241.80604553 263.69445801]
[239.12669373 247.51567078]
[229.22782898 236.24568176]
[215.01551819 231.78932190]
[211.72172546 216.31477356]
[201.82284546 205.04479980]
[186.98907471 204.34135437]
[176.78967285 193.05300903]
[177.62808228 177.49876404]
[167.72921753 166.22877502]
[157.83033752 154.95880127]
[147.93147278 143.68882751]
[138.03260803 132.41885376]
[128.13374329 121.14886475]
[118.01520538 128.85758972]
[106.20159912 132.25129700]
[94.38900757 131.16394043]
[84.16194916 126.05130005]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 83]
[2 82]
[3 81]
[4 80]
[5 77]
[6 76]
[8 75]
[9 74]
[10 73]
[11 72]
[12 71]
[13 65]
[14 64]
[15 63]
[16 62]
[19 59]
[20 58]
[21 57]
[22 56]
[23 55]
[24 54]
[30 47]
[31 46]
[86 123]
[87 122]
[88 121]
[91 119]
[92 118]
[93 117]
[94 116]
[95 115]
[96 114]
[97 113]
[98 112]
[99 111]
[101 110]
[102 109]
[136 165]
[137 164]
[138 163]
[139 162]
[140 161]
[141 160]
[144 157]
[145 156]
[147 154]
[148 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
