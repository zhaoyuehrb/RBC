%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:15:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGCAGCCUCAGGCCCGGGUGACUCCAGCGGAGGAGCUCUGGGACACCCUUGUCUAGGGAAGAGGUCUUACUGGCUGCCCUCACCUGACUUUGUGUCCCCAGGCCCCCAGCCAUGGCCCUGUCCCUGCCUCUGGGCCCUAGACUUGGCUCAGAGCCCCUCAACCACCCACCGGGAGCACCUAGAGAGGCGGACAUUGUUGGAUGCACCGUCU\
) } def
/len { sequence length } bind def

/coor [
[76.36612701 129.53480530]
[69.58007812 112.91665649]
[71.85128784 97.37892151]
[57.82002258 92.07576752]
[43.78875351 86.77260590]
[29.75748253 81.46945190]
[16.80976105 89.81587219]
[1.60778129 88.94800568]
[-10.03054810 79.40792084]
[-13.77480030 65.01630402]
[-27.80607033 59.71314621]
[-41.83733749 54.40998840]
[-55.86860657 49.10683060]
[-71.51301575 51.46547318]
[-80.68285370 39.72821808]
[-94.71412659 34.42506027]
[-109.43923950 37.28357315]
[-120.46720886 47.45136261]
[-131.49517822 57.61914825]
[-142.52314758 67.78693390]
[-143.32328796 83.34320831]
[-154.65206909 93.49768829]
[-169.47766113 92.63899994]
[-180.50563049 102.80678558]
[-191.53359985 112.97457886]
[-202.56156921 123.14236450]
[-210.10794067 138.32421875]
[-226.78552246 135.27551270]
[-228.47277832 118.40573120]
[-212.72935486 112.11439514]
[-201.70138550 101.94660950]
[-190.67341614 91.77881622]
[-179.64544678 81.61103058]
[-179.29997253 66.76461029]
[-168.26087952 56.29593277]
[-152.69093323 56.75896835]
[-141.66296387 46.59117889]
[-130.63499451 36.42339325]
[-119.60702515 26.25560570]
[-130.88877869 13.10063267]
[-131.39503479 -2.70291996]
[-144.60096741 -9.81651592]
[-157.80690002 -16.93011093]
[-171.01284790 -24.04370689]
[-184.21878052 -31.15730286]
[-197.42471313 -38.27089691]
[-210.63064575 -45.38449478]
[-222.57202148 -38.50184631]
[-236.24636841 -38.41864777]
[-248.08172607 -45.04968643]
[-255.03929138 -56.56983185]
[-255.39344788 -69.91502380]
[-268.49304199 -77.22261810]
[-281.59262085 -84.53020477]
[-290.61004639 -85.97761536]
[-294.83035278 -92.04341125]
[-307.82073975 -99.54341125]
[-320.81112671 -107.04341125]
[-335.89996338 -103.17501068]
[-348.96722412 -110.96613312]
[-352.56216431 -125.37487793]
[-365.55252075 -132.87487793]
[-385.69149780 -131.96653748]
[-394.62036133 -149.11868286]
[-407.82629395 -156.23228455]
[-421.03225708 -163.34587097]
[-434.23818970 -170.45947266]
[-449.95648193 -167.24781799]
[-462.17477417 -177.64459229]
[-461.52023315 -193.67428589]
[-448.49496460 -203.04028320]
[-433.09082031 -198.55780029]
[-427.12457275 -183.66540527]
[-413.91864014 -176.55181885]
[-400.71270752 -169.43821716]
[-387.50677490 -162.32461548]
[-378.02444458 -166.12730408]
[-367.79940796 -164.03987122]
[-360.25524902 -156.51490784]
[-358.05252075 -145.86526489]
[-345.06216431 -138.36526489]
[-330.78634644 -142.45632935]
[-317.50540161 -135.03530884]
[-313.31112671 -120.03379059]
[-300.32073975 -112.53379059]
[-287.33035278 -105.03379059]
[-274.28500366 -97.62979126]
[-261.18542480 -90.32219696]
[-248.08584595 -83.01460266]
[-233.41720581 -90.38556671]
[-217.08193970 -87.53166962]
[-205.55261230 -75.38260651]
[-203.51705933 -58.59043121]
[-190.31112671 -51.47683334]
[-177.10517883 -44.36323929]
[-163.89924622 -37.24964142]
[-150.69331360 -30.13604736]
[-137.48738098 -23.02245140]
[-124.28144073 -15.90885639]
[-121.77097321 -17.90427399]
[-119.00563049 -19.52815437]
[-116.03998566 -20.74844551]
[-115.81875610 -35.74681473]
[-115.59752655 -50.74518204]
[-125.69654083 -63.21071243]
[-122.10665131 -78.84696198]
[-107.58171844 -85.65913391]
[-93.26402283 -78.42152405]
[-90.13687134 -62.68619537]
[-100.59915924 -50.52395248]
[-100.82038879 -35.52558136]
[-101.04161835 -20.52721405]
[-88.09167480 -11.87537003]
[-83.07891083 3.94785070]
[-89.41096497 20.39378929]
[-75.37969971 25.69694710]
[-60.73890686 22.95898628]
[-50.56545258 35.07556152]
[-36.53417969 40.37871933]
[-22.50291252 45.68187714]
[-8.47164249 50.98503494]
[3.85553455 42.66765976]
[18.89446831 43.21031952]
[30.87018394 52.61434174]
[35.06063843 67.43817902]
[49.09190750 72.74134064]
[63.12318039 78.04449463]
[77.15444946 83.34765625]
[100.44944000 62.17589569]
[138.94293213 73.00735474]
[151.82128906 65.31657410]
[164.69964600 57.62580109]
[177.57798767 49.93502426]
[190.45634460 42.24424744]
[203.33470154 34.55347443]
[216.21305847 26.86269760]
[229.09140015 19.17192078]
[230.35142517 3.70608902]
[240.48690796 -8.04344654]
[255.60055542 -11.55874825]
[269.88085938 -5.48811245]
[277.83676147 7.83417892]
[276.40902710 23.28543282]
[266.14666748 34.92432404]
[250.99578857 38.27546692]
[236.78218079 32.05027390]
[223.90382385 39.74105072]
[211.02548218 47.43182373]
[198.14712524 55.12260056]
[185.26876831 62.81337738]
[172.39041138 70.50415039]
[159.51206970 78.19493103]
[146.63371277 85.88570404]
[149.38356018 100.63149261]
[164.16830444 103.16355896]
[178.97131348 105.58652496]
[193.79179382 107.90026093]
[208.61227417 110.21399689]
[216.84278870 97.40077209]
[229.57690430 89.04839325]
[244.60835266 86.60395813]
[259.33285522 90.49096680]
[271.19931030 100.03598785]
[278.15176392 113.58528137]
[278.98565674 128.79135132]
[273.55654907 143.01965332]
[262.80502319 153.80503845]
[248.59387207 159.27890015]
[233.38525391 158.49282837]
[219.81416321 151.58303833]
[210.23185730 139.74667358]
[206.29853821 125.03447723]
[191.47805786 122.72074127]
[176.65757751 120.40700531]
[169.56503296 122.48078918]
[161.63623047 117.94830322]
[146.85148621 115.41623688]
[142.23112488 121.32405090]
[154.04675293 130.56477356]
[165.86236572 139.80551147]
[177.67782593 149.04644775]
[168.43670654 160.86175537]
[156.62162781 151.62113953]
[144.80601501 142.38040161]
[132.99040222 133.13966370]
[128.37002563 139.04748535]
[134.39012146 152.78642273]
[140.41023254 166.52536011]
[146.43032837 180.26429749]
[152.45042419 194.00323486]
[158.47052002 207.74217224]
[173.55320740 218.30720520]
[170.93511963 235.66046143]
[177.15719604 249.30911255]
[183.37927246 262.95776367]
[189.60134888 276.60641479]
[203.26020813 285.68209839]
[201.95997620 302.02960205]
[187.03822327 308.83206177]
[173.84516907 299.09167480]
[175.95269775 282.82849121]
[169.73062134 269.17984009]
[163.50854492 255.53118896]
[157.28646851 241.88253784]
[146.06980896 237.35594177]
[140.77398682 226.03721619]
[144.73158264 213.76226807]
[138.71148682 200.02333069]
[132.69139099 186.28439331]
[126.67128754 172.54545593]
[120.65119171 158.80651855]
[114.63108826 145.06758118]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 128]
[4 127]
[5 126]
[6 125]
[10 121]
[11 120]
[12 119]
[13 118]
[15 116]
[16 115]
[17 39]
[18 38]
[19 37]
[20 36]
[23 33]
[24 32]
[25 31]
[26 30]
[41 99]
[42 98]
[43 97]
[44 96]
[45 95]
[46 94]
[47 93]
[52 89]
[53 88]
[54 87]
[56 86]
[57 85]
[58 84]
[61 81]
[62 80]
[64 76]
[65 75]
[66 74]
[67 73]
[102 112]
[103 111]
[104 110]
[130 153]
[131 152]
[132 151]
[133 150]
[134 149]
[135 148]
[136 147]
[137 146]
[154 177]
[155 176]
[156 174]
[157 173]
[158 172]
[186 212]
[187 211]
[188 210]
[189 209]
[190 208]
[191 207]
[193 204]
[194 203]
[195 202]
[196 201]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
