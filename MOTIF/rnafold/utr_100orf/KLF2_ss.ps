%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:46:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAGAGCCGUCCCCGCCCGCCCGCGCCCCGACCAGCCCGGCCUCGGGCAGCCACUCACCGGUGUCCCCGUCCGCGUCCUUUCUCCCCGGGUCCCGGCCAUGGCGCUGAGUGAACCCAUCCUGCCGUCCUUCUCCACUUUCGCCAGCCCGUGCCGCGAGCGCGGCCUGCAGGAGCGCUGGCCGCGCGCCGAACCCGAGU\
) } def
/len { sequence length } bind def

/coor [
[97.36388397 145.61425781]
[81.97365570 142.59091187]
[68.33384705 134.46937561]
[58.09955215 122.08636475]
[45.92267609 130.84556580]
[33.74580002 139.60478210]
[31.06986427 154.95004272]
[18.59600258 163.65966797]
[3.98313022 161.01399231]
[-8.19374561 169.77320862]
[-8.46152401 179.21591187]
[-12.98235130 187.35327148]
[-20.62885857 192.41699219]
[-29.61152649 193.37400818]
[-37.89678955 190.13513184]
[-50.47470093 198.30801392]
[-63.05260849 206.48091125]
[-75.63051605 214.65380859]
[-88.20842743 222.82670593]
[-96.52371979 241.18318176]
[-115.85315704 241.38502502]
[-128.16679382 249.95091248]
[-140.48042297 258.51678467]
[-147.39065552 272.74911499]
[-162.25703430 273.66552734]
[-174.57067871 282.23141479]
[-174.75445557 297.74740601]
[-184.05018616 310.17193604]
[-198.88346863 314.72753906]
[-213.55059814 309.66247559]
[-222.41177368 296.92434692]
[-222.05967712 281.41128540]
[-212.62971497 269.08831787]
[-197.74787903 264.69390869]
[-183.13656616 269.91778564]
[-170.82292175 261.35189819]
[-164.79345703 247.73225403]
[-149.04631042 246.20315552]
[-136.73268127 237.63726807]
[-124.41904449 229.07138062]
[-123.52305603 218.88044739]
[-117.02508545 210.69647217]
[-106.88506317 207.37669373]
[-96.38131714 210.24879456]
[-83.80341339 202.07589722]
[-71.22550201 193.90301514]
[-58.64759445 185.73011780]
[-46.06968689 177.55722046]
[-38.36014557 158.41787720]
[-16.95295143 157.59632874]
[-4.77607632 148.83712769]
[-2.63733268 134.14149475]
[9.58697224 125.08495331]
[24.98659325 127.42790222]
[37.16346741 118.66870117]
[49.34034348 109.90949249]
[48.63019943 94.92630768]
[35.67946625 87.35805511]
[22.66939545 79.89225769]
[9.60080147 72.52939606]
[-3.46779323 65.16652679]
[-16.59409904 57.90703964]
[-29.77729607 50.75139236]
[-46.14760590 51.72349167]
[-54.94749832 37.88535690]
[-47.12439728 23.47247696]
[-30.72603989 23.31158638]
[-22.62164879 37.56819534]
[-9.43845177 44.72384262]
[-2.05281138 45.15214157]
[3.89507532 52.09793091]
[16.96367073 59.46079636]
[30.03226471 66.82366943]
[37.41022491 67.36850739]
[43.24772263 74.40731812]
[56.19845581 81.97557831]
[61.26515579 73.45247650]
[67.94523621 66.24077606]
[75.91680145 60.63559723]
[84.80641174 56.85600281]
[94.20647430 55.03659439]
[103.69395447 55.22299957]
[112.84937286 57.37136078]
[121.27536774 61.35186768]
[128.61392212 66.95602417]
[134.56156921 73.90729523]
[138.88189697 81.87458801]
[153.37588501 78.01136780]
[167.86987305 74.14814758]
[182.36384583 70.28492737]
[196.85783386 66.42170715]
[203.98976135 55.66699600]
[216.14872742 52.75144196]
[226.68379211 58.70859146]
[241.23695374 55.07465744]
[255.79011536 51.44072342]
[270.34329224 47.80678940]
[286.52966309 13.69040012]
[297.17803955 3.12574196]
[307.82644653 -7.43891573]
[318.47482300 -18.00357437]
[329.12319946 -28.56823158]
[333.01635742 -36.84255981]
[340.02404785 -39.21395874]
[350.83789062 -49.60920334]
[361.65170288 -60.00444412]
[372.46554565 -70.39968872]
[376.48883057 -78.61152649]
[383.53308105 -80.87200165]
[394.50967407 -91.09524536]
[405.48626709 -101.31848145]
[416.46282959 -111.54171753]
[427.43942261 -121.76496124]
[420.09613037 -134.93080139]
[416.11770630 -149.47161865]
[415.73541260 -164.54203796]
[418.97149658 -179.26586914]
[425.63784790 -192.78707886]
[435.34683228 -204.31959534]
[447.53402710 -213.19290161]
[461.49087524 -218.89112854]
[476.40594482 -221.08299255]
[491.41210938 -219.64105225]
[505.63687134 -214.64913940]
[518.25329590 -206.39749146]
[528.52783203 -195.36582947]
[535.86309814 -182.19554138]
[539.83276367 -167.65231323]
[540.20587158 -152.58166504]
[536.96087646 -137.85980225]
[530.28631592 -124.34262848]
[520.57037354 -112.81600952]
[508.37777710 -103.95008850]
[494.41748047 -98.26032257]
[479.50106812 -96.07750702]
[464.49581909 -97.52854156]
[450.27407837 -102.52907562]
[437.66265869 -110.78837585]
[426.68606567 -100.56513977]
[415.70950317 -90.34189606]
[404.73291016 -80.11865997]
[393.75631714 -69.89542389]
[382.86077881 -59.58585739]
[372.04693604 -49.19061661]
[361.23312378 -38.79537201]
[350.41928101 -28.40012932]
[339.68786621 -17.91985130]
[329.03945923 -7.35519361]
[318.39108276 3.20946455]
[307.74270630 13.77412224]
[297.09432983 24.33877945]
[297.39025879 31.83293915]
[310.07464600 23.82631111]
[323.35073853 30.80810165]
[323.94226074 45.79643250]
[311.25769043 53.80278778]
[297.98211670 46.82125854]
[298.27804565 54.31541824]
[309.72631836 64.00753021]
[321.17459106 73.69963837]
[332.62286377 83.39175415]
[344.07113647 93.08386230]
[355.51940918 102.77597046]
[366.96768188 112.46808624]
[378.41595459 122.16019440]
[393.94790649 125.17179871]
[398.66220093 139.30065918]
[410.11047363 148.99276733]
[425.83776855 147.43478394]
[438.00720215 157.51847839]
[439.39880371 173.26136780]
[429.18701172 185.32350159]
[413.43029785 186.54859924]
[401.47680664 176.20985413]
[400.41836548 160.44104004]
[388.97009277 150.74893188]
[374.25701904 148.43057251]
[368.72384644 133.60847473]
[357.27557373 123.91635895]
[345.82730103 114.22424316]
[334.37902832 104.53213501]
[322.93075562 94.84002686]
[311.48248291 85.14791107]
[300.03421021 75.45580292]
[288.58593750 65.76369476]
[273.97720337 62.35995102]
[259.42404175 65.99388885]
[244.87089539 69.62782288]
[230.31773376 73.26175690]
[218.38002014 86.11911011]
[200.72105408 80.91568756]
[186.22706604 84.77890778]
[171.73309326 88.64212799]
[157.23910522 92.50534821]
[142.74511719 96.36856842]
[142.02008057 111.08395386]
[136.31376648 124.87335968]
[126.17332458 136.08027649]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 56]
[5 55]
[6 54]
[9 51]
[10 50]
[15 48]
[16 47]
[17 46]
[18 45]
[19 44]
[21 40]
[22 39]
[23 38]
[25 36]
[26 35]
[57 76]
[58 75]
[59 73]
[60 72]
[61 71]
[62 69]
[63 68]
[87 195]
[88 194]
[89 193]
[90 192]
[91 191]
[94 189]
[95 188]
[96 187]
[97 186]
[98 151]
[99 150]
[100 149]
[101 148]
[102 147]
[104 146]
[105 145]
[106 144]
[107 143]
[109 142]
[110 141]
[111 140]
[112 139]
[113 138]
[158 185]
[159 184]
[160 183]
[161 182]
[162 181]
[163 180]
[164 179]
[165 178]
[167 176]
[168 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
