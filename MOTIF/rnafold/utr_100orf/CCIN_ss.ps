%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:22:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUCCCUGGUCAACCGCUCUGCAAACAACCAUCAAUCUGAUCCCACAGGCCUGAGAAAGUCUGCUCUCCAGUACCUGCUGCUGAUCUGUUUCAGCCGACAAGAGGCACCAUGAAAUUGGAAUUCACGGAGAAAAACUACAAUAGCUUCGUGCUGCAGAACCUGAACAGACAGAGGAAACGCAAAGAGUACUGGGACAUGGCCCUGAGUG\
) } def
/len { sequence length } bind def

/coor [
[-168.04809570 588.33557129]
[-178.99649048 576.93786621]
[-178.59524536 561.13867188]
[-167.08239746 550.31140137]
[-166.86012268 535.31304932]
[-166.63784790 520.31469727]
[-176.81803894 512.41644287]
[-180.64775085 499.91030884]
[-176.51467896 487.29620361]
[-165.71469116 479.24868774]
[-165.27020264 464.25527954]
[-164.82569885 449.26184082]
[-164.38119507 434.26843262]
[-163.93669128 419.27502441]
[-169.79548645 414.59265137]
[-177.37379456 427.53750610]
[-181.23028564 442.03326416]
[-195.47689819 446.72732544]
[-207.19490051 437.36309814]
[-205.75846863 422.43203735]
[-192.46871948 415.47354126]
[-181.51304626 405.22790527]
[-187.37182617 400.54553223]
[-201.89836121 404.28448486]
[-216.42489624 408.02343750]
[-227.86083984 418.95639038]
[-242.11502075 414.63577271]
[-256.64154053 418.37472534]
[-259.69070435 432.02587891]
[-268.28295898 442.97930908]
[-280.69674683 449.13275146]
[-294.48428345 449.33648682]
[-306.95422363 443.60775757]
[-315.69689941 433.11630249]
[-330.27725220 436.63958740]
[-344.85760498 440.16287231]
[-357.89825439 453.16427612]
[-374.52566528 447.55114746]
[-389.05218506 451.29010010]
[-403.57873535 455.02905273]
[-418.10525513 458.76800537]
[-425.92541504 472.50195312]
[-441.18835449 476.60296631]
[-454.83883667 468.63806152]
[-458.77825928 453.33261108]
[-450.66946411 439.76712036]
[-435.32324219 435.98971558]
[-421.84420776 444.24148560]
[-407.31768799 440.50253296]
[-392.79116821 436.76354980]
[-378.26461792 433.02459717]
[-371.84558105 422.77224731]
[-359.77450562 419.53805542]
[-348.38088989 425.58251953]
[-333.80053711 422.05923462]
[-319.22021484 418.53594971]
[-315.03384399 402.92831421]
[-303.48101807 391.49591064]
[-287.64846802 387.42657471]
[-271.83416748 391.92269897]
[-260.38052368 403.84820557]
[-245.85397339 400.10925293]
[-235.45706177 389.44372559]
[-220.16384888 393.49691772]
[-205.63732910 389.75793457]
[-191.11079407 386.01898193]
[-178.13897705 378.48693848]
[-167.69070435 367.72430420]
[-165.28726196 360.73599243]
[-157.00697327 356.88107300]
[-146.40037537 346.27447510]
[-135.79377747 335.66787720]
[-125.18717194 325.06127930]
[-114.58056641 314.45468140]
[-103.97396851 303.84808350]
[-93.36736298 293.24145508]
[-82.83964539 282.55657959]
[-72.39138031 271.79397583]
[-72.25717926 259.69863892]
[-63.64130783 250.64665222]
[-50.76726532 249.86636353]
[-40.16066360 239.25976562]
[-29.55406189 228.65315247]
[-33.54079437 210.39315796]
[-25.65275574 193.28359985]
[-8.91345501 184.31501770]
[9.99753189 187.27156067]
[20.12227631 176.20405579]
[30.24702263 165.13655090]
[40.37176895 154.06906128]
[50.49651337 143.00155640]
[60.62125778 131.93405151]
[70.74600220 120.86656189]
[51.83596039 100.69802094]
[49.82758331 66.36270905]
[73.38753510 32.40993881]
[71.61344147 17.51522255]
[69.83934021 2.62050533]
[56.65727997 -5.79182673]
[52.01592255 -20.72473717]
[58.10676956 -35.12736130]
[72.05391693 -42.19921875]
[87.27193451 -38.60120010]
[96.57535553 -26.03217506]
[95.57138062 -10.42685318]
[84.73405457 0.84640783]
[86.50815582 15.74112415]
[88.28224945 30.63584137]
[95.75735474 31.24644089]
[118.18266296 33.07824326]
[122.35044861 18.66888618]
[126.51824188 4.25952911]
[118.66952515 -9.45809460]
[122.90002441 -24.68564796]
[136.69985962 -32.38889313]
[151.88183594 -27.99763298]
[159.43875122 -14.11712360]
[154.88722229 1.01757658]
[140.92759705 8.42731667]
[136.75981140 22.83667374]
[132.59202576 37.24602890]
[138.62020874 41.70819092]
[147.54472351 29.65194702]
[159.60083008 38.57664490]
[150.67658997 50.63251877]
[156.70478821 55.09468460]
[169.26867676 46.90025711]
[181.83256531 38.70583344]
[194.39646912 30.51140594]
[206.96035767 22.31698036]
[219.52424622 14.12255383]
[232.08813477 5.92812824]
[229.25407410 -9.00627899]
[232.35578918 -23.88740158]
[240.92028809 -36.44598007]
[253.64154053 -44.76691437]
[268.57968140 -47.58133316]
[283.45669556 -44.46004868]
[296.00399780 -35.87903976]
[304.30819702 -23.14684486]
[307.10296631 -8.20503235]
[303.96209717 6.66787863]
[295.36459351 19.20387840]
[282.62149048 27.49131966]
[267.67602539 30.26642418]
[252.80725098 27.10601234]
[240.28256226 18.49202156]
[227.71867371 26.68644714]
[215.15478516 34.88087082]
[202.59089661 43.07529831]
[190.02699280 51.26972198]
[177.46310425 59.46414948]
[164.89921570 67.65857697]
[166.82246399 74.90779114]
[181.30172729 78.82582092]
[170.66894531 89.40621948]
[172.59219360 96.65544128]
[187.56584167 97.54404449]
[202.53950500 98.43265533]
[218.70901489 93.33525848]
[228.08335876 107.46174622]
[217.10401917 120.38035583]
[201.65089417 113.40631104]
[186.67724609 112.51770782]
[171.70358276 111.62909698]
[150.67736816 138.20271301]
[123.10667419 149.12387085]
[97.94802094 145.06347656]
[81.81349945 130.99130249]
[71.68875885 142.05880737]
[61.56401062 153.12629700]
[51.43926620 164.19380188]
[41.31452179 175.26130676]
[31.18977547 186.32879639]
[21.06503105 197.39630127]
[25.27825737 208.05618286]
[25.20994568 219.46696472]
[20.90824890 229.98066711]
[13.02995872 238.09312439]
[2.74051833 242.65921021]
[-8.45827770 243.05436707]
[-18.94746017 239.25976562]
[-29.55406189 249.86636353]
[-40.16066360 260.47296143]
[-44.51294708 278.36575317]
[-61.62876892 282.24221802]
[-72.07703400 293.00482178]
[-75.80881500 301.34133911]
[-82.76076508 303.84808350]
[-93.36736298 314.45468140]
[-103.97396851 325.06127930]
[-114.58056641 335.66787720]
[-125.18717194 346.27447510]
[-135.79377747 356.88107300]
[-146.40037537 367.48767090]
[-156.92810059 378.17257690]
[-167.37635803 388.93518066]
[-157.92630005 394.24700928]
[-150.97605896 404.94738770]
[-148.94328308 419.71954346]
[-149.38778687 434.71295166]
[-149.83227539 449.70635986]
[-150.27677917 464.69976807]
[-150.72128296 479.69317627]
[-138.49235535 492.20257568]
[-139.08296204 509.34838867]
[-151.63949585 520.53692627]
[-151.86177063 535.53527832]
[-152.08404541 550.53363037]
[-140.89710999 561.69732666]
[-140.96420288 577.50146484]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 209]
[5 208]
[6 207]
[10 204]
[11 203]
[12 202]
[13 201]
[14 200]
[23 66]
[24 65]
[25 64]
[27 62]
[28 61]
[34 56]
[35 55]
[36 54]
[38 51]
[39 50]
[40 49]
[41 48]
[67 197]
[68 196]
[70 195]
[71 194]
[72 193]
[73 192]
[74 191]
[75 190]
[76 189]
[77 187]
[78 186]
[81 184]
[82 183]
[83 182]
[87 175]
[88 174]
[89 173]
[90 172]
[91 171]
[92 170]
[93 169]
[96 108]
[97 107]
[98 106]
[110 121]
[111 120]
[112 119]
[126 153]
[127 152]
[128 151]
[129 150]
[130 149]
[131 148]
[132 147]
[157 165]
[158 164]
[159 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
