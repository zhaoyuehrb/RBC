%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:10:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAGUGUCAUGGAGGCCGCGGCGGUGACGGUCACCCGGUCGGCUACACGGCGGCGGCGGCGGCAGCUGCAGGGGCUGGCGGCCCCGGAGGCGGGGACGCAGGAGGAGC\
) } def
/len { sequence length } bind def

/coor [
[336.91723633 321.02105713]
[351.91610718 321.01315308]
[340.50299072 311.27963257]
[329.08990479 301.54614258]
[317.67678833 291.81265259]
[302.97219849 289.44100952]
[297.49276733 274.59896851]
[286.07965088 264.86547852]
[278.83834839 262.88983154]
[274.48312378 254.68328857]
[263.35525513 244.62492371]
[248.72514343 241.83053589]
[243.67567444 226.83676147]
[232.54780579 216.77839661]
[221.13470459 207.04489136]
[209.44583130 197.64434814]
[197.75697327 188.24378967]
[186.06809998 178.84323120]
[174.37924194 169.44267273]
[159.61242676 167.49580383]
[153.70751953 152.81782532]
[142.01866150 143.41728210]
[127.25183868 141.47039795]
[121.34694672 126.79243469]
[109.65808105 117.39187622]
[97.09771729 122.87027740]
[81.95267487 119.01199341]
[71.09169006 105.20896149]
[56.77335739 100.73847961]
[42.45501709 96.26799774]
[26.58190918 100.38824463]
[15.27150249 88.51361847]
[20.15897751 72.85971069]
[36.21651459 69.52993011]
[46.92550278 81.94966125]
[61.24383926 86.42014313]
[75.56217957 90.89062500]
[84.62197876 78.93570709]
[76.44635010 66.35957336]
[68.27072144 53.78344345]
[60.09509277 41.20730972]
[44.58454132 38.17443466]
[35.83093262 25.01579094]
[39.02762604 9.53817177]
[52.27808380 0.92417276]
[67.72103882 4.28432703]
[76.19446564 17.62511444]
[72.67122650 33.03168106]
[80.84685516 45.60781479]
[89.02248383 58.18394852]
[97.19811249 70.76007843]
[119.03332520 84.36179352]
[119.05863190 105.70301056]
[130.74749756 115.10356903]
[146.35038757 117.72283173]
[151.41921997 131.72840881]
[163.10807800 141.12896729]
[178.71096802 143.74822998]
[183.77980042 157.75381470]
[195.46865845 167.15437317]
[207.15753174 176.55491638]
[218.84638977 185.95547485]
[230.53526306 195.35603333]
[237.24215698 196.79510498]
[241.48037720 200.86564636]
[242.60617065 205.65052795]
[253.73403931 215.70889282]
[269.16009521 219.22271729]
[273.41363525 233.49705505]
[284.54150391 243.55541992]
[295.81314087 253.45237732]
[307.22625732 263.18588257]
[322.74716187 266.25369263]
[327.41027832 280.39953613]
[338.82339478 290.13302612]
[350.23651123 299.86654663]
[361.64959717 309.60003662]
[374.45611572 317.40985107]
[388.33489990 323.10012817]
[402.21368408 328.79040527]
[417.91748047 326.86660767]
[426.75827026 338.85366821]
[440.63705444 344.54394531]
[454.51583862 350.23425293]
[468.39462280 355.92453003]
[482.27340698 361.61480713]
[498.44302368 358.88073730]
[508.68569946 371.68774414]
[502.46466064 386.86108398]
[486.17953491 388.79174805]
[476.58309937 375.49359131]
[462.70431519 369.80331421]
[448.82553101 364.11303711]
[434.94674683 358.42272949]
[421.06796265 352.73245239]
[406.35687256 355.06329346]
[396.52340698 342.66918945]
[382.64462280 336.97891235]
[368.76583862 331.28863525]
[375.62612915 344.62789917]
[375.67834473 359.62780762]
[368.91107178 373.01452637]
[356.80133057 381.86630249]
[341.99212646 384.25115967]
[327.71569824 379.64862061]
[317.08795166 369.06320190]
[312.42849731 354.80523682]
[314.75424194 339.98663330]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 77]
[3 76]
[4 75]
[5 74]
[7 72]
[8 71]
[10 70]
[11 69]
[13 67]
[14 66]
[15 63]
[16 62]
[17 61]
[18 60]
[19 59]
[21 57]
[22 56]
[24 54]
[25 53]
[28 37]
[29 36]
[30 35]
[38 51]
[39 50]
[40 49]
[41 48]
[78 99]
[79 98]
[80 97]
[82 95]
[83 94]
[84 93]
[85 92]
[86 91]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
