%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:50:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUUGCUCAGCUGCCAGAGAAGUGACUGGAAUAGAGGUUGUAGCUUAGGCACCGCUGCUCCCUCCAGUCCCUCCGUGCAGCCGAUGAUGGCCCUAUGGUCCCUGCUCCAUCUCACCUUCCUGGGGUUCAGCAUUACCUUGCUGUUGGUCCACGGGCAGGGCUUCCAAGGGACAGCAGCCAUCU\
) } def
/len { sequence length } bind def

/coor [
[-241.62802124 199.40101624]
[-247.51226807 201.54664612]
[-253.72203064 201.94970703]
[-259.75537109 200.60038757]
[-265.13104248 197.62956238]
[-269.42681885 193.29655457]
[-272.31262207 187.96652222]
[-287.31045532 188.22262573]
[-300.97650146 196.19441223]
[-313.83401489 188.67552185]
[-328.83181763 188.93162537]
[-343.82965088 189.18771362]
[-358.82745361 189.44381714]
[-373.82528687 189.69990540]
[-385.73690796 202.49572754]
[-402.87991333 202.72520447]
[-414.65664673 190.73414612]
[-429.64788818 191.24626160]
[-444.63916016 191.75837708]
[-450.12567139 199.47898865]
[-458.43328857 203.73358154]
[-467.62899780 203.67498779]
[-475.63796997 199.44349670]
[-480.71166992 192.10667419]
[-495.70950317 191.85058594]
[-510.70730591 191.59448242]
[-525.70513916 191.33839417]
[-540.70294189 191.08229065]
[-555.70074463 190.82620239]
[-570.69854736 190.57009888]
[-562.42517090 203.08215332]
[-566.88208008 217.40472412]
[-580.79418945 223.01309204]
[-593.93835449 215.78604126]
[-596.65588379 201.03424072]
[-586.94964600 189.59780884]
[-601.87103271 188.06384277]
[-614.05987549 197.76275635]
[-629.17041016 195.99453735]
[-638.34173584 184.31454468]
[-653.26312256 182.78057861]
[-668.18444824 181.24661255]
[-683.10583496 179.71264648]
[-698.02716064 178.17869568]
[-707.57073975 190.29989624]
[-722.15997314 195.31565857]
[-737.13952637 191.62547302]
[-747.72937012 180.40684509]
[-750.55047607 165.23960876]
[-744.70251465 150.96356201]
[-732.05163574 142.13417053]
[-716.63464355 141.56883240]
[-703.37103271 149.44795227]
[-696.49322510 163.25732422]
[-681.57183838 164.79129028]
[-666.65051270 166.32525635]
[-651.72912598 167.85922241]
[-636.80780029 169.39317322]
[-625.45190430 159.82342529]
[-610.29766846 161.16651917]
[-600.33703613 173.14248657]
[-585.41571045 174.67643738]
[-570.44244385 175.57229614]
[-555.44464111 175.82838440]
[-540.44683838 176.08448792]
[-525.44903564 176.34057617]
[-510.45120239 176.59666443]
[-495.45339966 176.85276794]
[-480.45559692 177.10885620]
[-463.38275146 165.53474426]
[-445.15127563 176.76712036]
[-430.16000366 176.25500488]
[-415.16876221 175.74288940]
[-407.76733398 165.17854309]
[-395.44622803 160.74693298]
[-382.63595581 164.28007507]
[-374.08135986 174.70210266]
[-359.08355713 174.44599915]
[-344.08575439 174.18991089]
[-329.08792114 173.93380737]
[-314.09011841 173.67771912]
[-301.49679565 165.72424316]
[-287.56652832 173.22480774]
[-272.56872559 172.96871948]
[-253.97364807 158.24919128]
[-232.45826721 169.79908752]
[-217.59797668 167.75657654]
[-202.73770142 165.71408081]
[-187.87741089 163.67158508]
[-173.01712036 161.62907410]
[-158.15682983 159.58657837]
[-143.42060852 156.78591919]
[-128.84709167 153.23446655]
[-114.27359009 149.68299866]
[-103.74010468 139.15232849]
[-88.50039673 143.40223694]
[-73.92688751 139.85076904]
[-59.35338593 136.29930115]
[-46.41569138 121.94769287]
[-27.15331078 127.83785248]
[-12.70955181 123.79090118]
[1.73420775 119.74394989]
[16.17796707 115.69699860]
[30.62172699 111.65004730]
[45.06548691 107.60309601]
[59.50924683 103.55614471]
[73.95300293 99.50919342]
[87.81753540 76.97231293]
[114.24954224 78.19088745]
[125.72190094 68.52729034]
[137.19425964 58.86369705]
[148.66661072 49.20010376]
[160.13896179 39.53650665]
[171.61131287 29.87291145]
[172.70899963 14.10678673]
[184.68815613 3.79780936]
[200.44180298 5.06211138]
[210.62355042 17.14960480]
[209.19276428 32.88899612]
[196.99829102 42.94237900]
[181.27491760 41.34526443]
[169.80256653 51.00886154]
[158.33020020 60.67245483]
[146.85784912 70.33605194]
[135.38549805 79.99964905]
[123.91313934 89.66324615]
[124.06855774 90.03047943]
[124.21833801 90.40004730]
[139.16371155 89.12106323]
[154.10908508 87.84207153]
[169.05445862 86.56308746]
[183.99983215 85.28410339]
[193.98861694 73.03665924]
[209.72021484 71.52268982]
[221.86135864 81.64039612]
[223.20892334 97.38713074]
[212.96342468 109.42063141]
[197.20332336 110.60163879]
[185.27880859 100.22947693]
[170.33343506 101.50846100]
[155.38806152 102.78744507]
[140.44268799 104.06643677]
[125.49732208 105.34542084]
[123.52984619 111.18182373]
[120.24719238 116.39323425]
[115.83283997 120.68835449]
[110.53352356 123.82712555]
[104.64544678 125.63409424]
[98.49771118 126.00827026]
[92.43395233 124.92873383]
[86.79309082 122.45583344]
[81.89041138 118.72777557]
[77.99995422 113.95295715]
[63.55619812 117.99990845]
[49.11243820 122.04685974]
[34.66867828 126.09381104]
[20.22491837 130.14076233]
[5.78115940 134.18771362]
[-8.66259956 138.23466492]
[-23.10635948 142.28161621]
[-27.89578629 152.08084106]
[-37.10515976 157.50328064]
[-47.55833054 156.95991516]
[-55.80191803 150.87281799]
[-70.37542725 154.42427063]
[-84.94892883 157.97573853]
[-96.52480316 168.76043701]
[-110.72212219 164.25650024]
[-125.29563141 167.80796814]
[-139.86914062 171.35943604]
[-127.74167633 180.18692017]
[-125.25215912 194.97889709]
[-133.82200623 207.28977966]
[-148.55819702 210.09060669]
[-161.04702759 201.78222656]
[-164.15792847 187.10835266]
[-156.11433411 174.44686890]
[-170.97460938 176.48936462]
[-185.83489990 178.53187561]
[-200.69519043 180.57437134]
[-215.55548096 182.61686707]
[-230.41577148 184.65936279]
[-232.70445251 190.61958313]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 84]
[8 83]
[10 81]
[11 80]
[12 79]
[13 78]
[14 77]
[17 73]
[18 72]
[19 71]
[24 69]
[25 68]
[26 67]
[27 66]
[28 65]
[29 64]
[30 63]
[36 62]
[37 61]
[40 58]
[41 57]
[42 56]
[43 55]
[44 54]
[86 182]
[87 181]
[88 180]
[89 179]
[90 178]
[91 177]
[92 170]
[93 169]
[94 168]
[96 166]
[97 165]
[98 164]
[100 160]
[101 159]
[102 158]
[103 157]
[104 156]
[105 155]
[106 154]
[107 153]
[109 126]
[110 125]
[111 124]
[112 123]
[113 122]
[114 121]
[128 143]
[129 142]
[130 141]
[131 140]
[132 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
