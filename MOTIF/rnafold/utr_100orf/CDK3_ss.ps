%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:18:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCUUCCUGGCCGCCAUGUGUACCCAGAGCCUGGGACUGGCUGGGCUGGGCAGUGACCCAGGCAGCUCUGUGGCCAUGGAUAUGUUCCAGAAGGUAGAGAAGAUCGGAGAGGGCACCUAUGGGGUGGUGUACAAGGCCAAGAACAGGGAGACAGGGCAGCUGGUGGCCCUGAAGA\
) } def
/len { sequence length } bind def

/coor [
[83.48021698 457.59539795]
[69.31576538 450.06228638]
[66.51576233 434.26547241]
[77.22812653 422.32290649]
[77.76049042 407.33236694]
[78.29284668 392.34182739]
[78.82521057 377.35125732]
[68.51725006 366.66101074]
[68.84359741 351.45086670]
[80.12640381 340.71142578]
[80.65876770 325.72088623]
[81.19113159 310.73031616]
[81.72349548 295.73977661]
[82.25585175 280.74923706]
[82.78821564 265.75866699]
[83.32057953 250.76812744]
[83.85293579 235.77757263]
[80.93890381 228.96002197]
[84.53012085 220.52636719]
[85.32845306 205.54762268]
[75.44783020 197.24880981]
[72.11071014 184.58290100]
[76.75543213 172.12782288]
[87.89266205 164.51988220]
[88.95671844 149.55766296]
[90.02076721 134.59545898]
[80.41056824 130.21067810]
[72.48640442 123.22569275]
[66.93030548 114.24169922]
[64.22048187 104.03194427]
[49.29189682 102.56996155]
[34.36331177 101.10798645]
[19.43472862 99.64601135]
[4.50614405 98.18402863]
[-10.42243958 96.72205353]
[-25.35102463 95.26007843]
[-40.30320358 94.06328583]
[-55.27426910 93.13205719]
[-70.24533844 92.20082855]
[-85.21640015 91.26959991]
[-99.47029877 98.13523102]
[-111.69267273 89.62272644]
[-126.66374207 88.69149780]
[-139.59352112 98.18888092]
[-155.04223633 93.86256409]
[-161.15893555 79.03133392]
[-153.25143433 65.07243347]
[-137.38566589 62.69393921]
[-125.73251343 73.72042847]
[-110.76144409 74.65165710]
[-97.57837677 67.71941376]
[-84.28517151 76.29853058]
[-69.31410980 77.22975922]
[-54.34304047 78.16099548]
[-39.37197495 79.09222412]
[-35.24198151 76.63771820]
[-29.52117538 76.77322388]
[-23.88904762 80.33149719]
[-8.96046257 81.79347229]
[5.96812105 83.25544739]
[20.89670563 84.71742249]
[35.82529068 86.17940521]
[50.75387192 87.64138031]
[65.68245697 89.10335541]
[77.31956482 72.03522491]
[96.42234802 64.17220306]
[116.70278168 68.10254669]
[126.27644348 56.55503464]
[135.85009766 45.00752258]
[145.42376709 33.46001434]
[154.99743652 21.91250420]
[164.57109070 10.36499405]
[173.72889709 -1.51501715]
[182.45928955 -13.71256161]
[191.18969727 -25.91010666]
[199.92010498 -38.10765076]
[201.66043091 -53.83284760]
[215.35978699 -59.67896271]
[224.09017944 -71.87651062]
[225.83050537 -87.60170746]
[239.52986145 -93.44782257]
[248.26026917 -105.64536285]
[256.99066162 -117.84291077]
[265.72106934 -130.04045105]
[267.07559204 -148.39024353]
[283.30133057 -155.04051208]
[291.81387329 -167.39108276]
[300.32641602 -179.74165344]
[308.83895874 -192.09222412]
[317.35150146 -204.44279480]
[315.79141235 -217.26684570]
[323.16137695 -227.38453674]
[335.05816650 -229.67941284]
[343.78857422 -241.87695312]
[352.51898193 -254.07449341]
[361.24938965 -266.27203369]
[352.08428955 -278.29254150]
[346.87106323 -292.48104858]
[346.07321167 -307.57592773]
[349.76174927 -322.23492432]
[357.60861206 -335.15457153]
[368.91613770 -345.18609619]
[382.67883301 -351.43750000]
[397.67291260 -353.35287476]
[412.56512451 -350.76196289]
[426.03131104 -343.89508057]
[436.87399292 -333.36288452]
[444.12908936 -320.10183716]
[447.15148926 -305.29113770]
[445.67239380 -290.24777222]
[439.82339478 -276.30929565]
[430.12451172 -264.71520996]
[417.43820190 -256.49636841]
[402.89251709 -252.38363647]
[387.78085327 -252.74270630]
[373.44692993 -257.54165649]
[364.71652222 -245.34410095]
[355.98611450 -233.14656067]
[347.25573730 -220.94900513]
[346.50421143 -203.42942810]
[329.70208740 -195.93025208]
[321.18954468 -183.57968140]
[312.67700195 -171.22911072]
[304.16445923 -158.87854004]
[295.65191650 -146.52796936]
[297.52899170 -134.55812073]
[290.51144409 -124.19288635]
[277.91860962 -121.31005096]
[269.18820190 -109.11251068]
[260.45779419 -96.91496277]
[251.72740173 -84.71741486]
[250.61152649 -69.86466980]
[236.28771973 -63.14610672]
[227.55732727 -50.94856262]
[226.44145203 -36.09581375]
[212.11764526 -29.37724876]
[203.38723755 -17.17970467]
[194.65684509 -4.98216057]
[185.92643738 7.21538401]
[186.27218628 10.02714062]
[185.50729370 13.14702129]
[183.50802612 16.14611053]
[180.31045532 18.55850792]
[176.11860657 19.93865776]
[166.54493713 31.48616600]
[156.97128296 43.03367615]
[147.39761353 54.58118820]
[137.82394409 66.12869263]
[128.25028992 77.67620850]
[134.19364929 88.72060394]
[135.98812866 101.13359070]
[133.41598511 113.40903473]
[126.78932190 124.05748749]
[116.91217041 131.78692627]
[104.98297882 135.65950012]
[103.91893005 150.62171936]
[102.85487366 165.58393860]
[114.55256653 178.57087708]
[113.27924347 195.66461182]
[100.30719757 206.34596252]
[99.50885773 221.32470703]
[98.84349060 236.30993652]
[98.31112671 251.30049133]
[97.77876282 266.29104614]
[97.24640656 281.28158569]
[96.71404266 296.27212524]
[96.18167877 311.26269531]
[95.64932251 326.25323486]
[95.11695862 341.24377441]
[105.60952759 352.75656128]
[104.85608673 367.95150757]
[93.81576538 377.88363647]
[93.28340149 392.87417603]
[92.75103760 407.86471558]
[92.21867371 422.85528564]
[102.05689240 435.52764893]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 175]
[5 174]
[6 173]
[7 172]
[10 169]
[11 168]
[12 167]
[13 166]
[14 165]
[15 164]
[16 163]
[17 162]
[19 161]
[20 160]
[24 157]
[25 156]
[26 155]
[30 64]
[31 63]
[32 62]
[33 61]
[34 60]
[35 59]
[36 58]
[37 55]
[38 54]
[39 53]
[40 52]
[42 50]
[43 49]
[67 149]
[68 148]
[69 147]
[70 146]
[71 145]
[72 144]
[73 139]
[74 138]
[75 137]
[76 136]
[78 134]
[79 133]
[81 131]
[82 130]
[83 129]
[84 128]
[86 125]
[87 124]
[88 123]
[89 122]
[90 121]
[93 119]
[94 118]
[95 117]
[96 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
