%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:45:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAAGCAGUUGAGUGCUGCAGCGGCAGUCGUCGCCCCUGCCGCCGCUGCCACCGAAGGAAGCAUCCCAGACACCGGGAAGAUGGAAGAUGGUACCCCAAAGCAUAUCAUCCAGAUGACAGGAUUUAAGAUGGAAGAAAAAGAAGCGCUAGUCAAAUUACUUUUAAAACUAGAUUGCACUU\
) } def
/len { sequence length } bind def

/coor [
[244.82885742 360.37841797]
[237.27490234 346.14920044]
[233.63671875 330.44436646]
[234.16497803 314.32159424]
[238.82954407 298.86810303]
[247.32122803 285.12744141]
[236.94721985 274.29324341]
[219.86698914 270.31454468]
[215.60691833 252.41275024]
[205.04643250 241.76022339]
[194.48596191 231.10769653]
[183.92547607 220.45516968]
[173.36500549 209.80264282]
[162.80451965 199.15011597]
[148.34933472 195.55892944]
[144.12835693 180.31117249]
[133.56788635 169.65864563]
[123.00740051 159.00611877]
[112.35487366 148.44563293]
[101.61110687 137.97801208]
[86.79374695 135.64434814]
[73.35267639 142.30299377]
[59.91159821 148.96163940]
[46.47052383 155.62026978]
[33.02944946 162.27891541]
[19.58837700 168.93756104]
[6.14730215 175.59620667]
[4.53690386 190.93928528]
[-5.13076448 202.96176147]
[-19.77078438 207.82728577]
[-34.71157837 203.98329163]
[-45.18559265 192.65640259]
[-47.85061264 177.46096802]
[-41.85623169 163.24580383]
[-29.11524200 154.54690552]
[-13.69324303 154.14007568]
[-0.51134050 162.15513611]
[12.92973328 155.49649048]
[26.37080765 148.83784485]
[39.81188202 142.17919922]
[53.25295639 135.52055359]
[66.69403076 128.86192322]
[80.13510132 122.20326996]
[63.29849243 118.70750427]
[47.67660141 105.34821320]
[33.28754807 101.11087036]
[18.89849091 96.87352753]
[3.47468829 100.39729309]
[-6.54850101 89.37980652]
[-20.93755722 85.14246368]
[-34.69293213 92.92482758]
[-49.89987564 88.62081909]
[-57.53637314 74.78392792]
[-53.07182693 59.62334442]
[-39.15497589 52.13356400]
[-24.04243851 56.75814819]
[-16.70021629 70.75341034]
[-2.31115937 74.99075317]
[12.08344173 71.16390991]
[23.13583374 82.48447418]
[37.52488708 86.72181702]
[51.91394424 90.95915985]
[56.08748245 84.72766113]
[68.60810089 66.03316498]
[59.21220016 54.34055710]
[49.81629944 42.64794922]
[40.42039871 30.95534325]
[24.78354263 30.80454636]
[12.93562222 20.59862900]
[10.47086143 5.15651178]
[18.55304527 -8.23050785]
[33.36601639 -13.24148941]
[47.91553879 -7.51040077]
[55.33177567 6.25671387]
[52.11300659 21.55944443]
[61.50890732 33.25204849]
[70.90480804 44.94465637]
[80.30070496 56.63726425]
[87.61059570 54.95929337]
[92.01384735 40.62014008]
[102.23036194 51.60335159]
[109.54024506 49.92538071]
[112.89618683 35.30561066]
[116.25212860 20.68584061]
[119.60807037 6.06607199]
[115.15441132 -9.11534595]
[125.54304504 -19.78893471]
[128.89898682 -34.40870667]
[132.25492859 -49.02847290]
[135.61087036 -63.64824295]
[138.83981323 -78.29658508]
[141.94149780 -92.97239685]
[131.44563293 -104.40115356]
[129.70541382 -119.82033539]
[137.38996887 -133.30096436]
[151.54444885 -139.65943909]
[166.72615051 -136.45083618]
[177.09742737 -124.90888977]
[178.67028809 -109.47173309]
[170.83993530 -96.07526398]
[156.61732483 -89.87070465]
[153.51562500 -75.19489288]
[155.21331787 -67.98097229]
[150.23063660 -60.29230118]
[146.87469482 -45.67253113]
[143.51875305 -31.05276299]
[140.16281128 -16.43299294]
[144.85652161 -2.29727960]
[134.22784424 9.42201424]
[130.87190247 24.04178238]
[127.51596069 38.66155243]
[124.16001892 53.28132248]
[142.35009766 84.80102539]
[134.37767029 114.71284485]
[112.07873535 127.23423767]
[122.82250977 137.70187378]
[131.17697144 141.46296692]
[133.65992737 148.44563293]
[144.22039795 159.09815979]
[154.78088379 169.75068665]
[169.99142456 174.10383606]
[173.45704651 188.58964539]
[184.01753235 199.24217224]
[194.57800293 209.89469910]
[205.13848877 220.54722595]
[215.69895935 231.19975281]
[226.25942993 241.85227966]
[239.14781189 242.69332886]
[247.72546387 251.80592346]
[247.78143311 263.91921997]
[258.15542603 274.75344849]
[270.26022339 267.70046997]
[283.62878418 263.53732300]
[297.58209229 262.47177124]
[311.41223145 264.55432129]
[324.41839600 269.67593384]
[335.94219971 277.57354736]
[345.40127563 287.84375000]
[352.31848145 299.96334839]
[356.34606934 313.31591797]
[357.28314209 327.22332764]
[355.08569336 340.97998047]
[349.86865234 353.88882446]
[341.89981079 365.29650879]
[351.89154053 376.48422241]
[361.88327026 387.67196655]
[372.06768799 398.68457031]
[382.44168091 409.51879883]
[392.81567383 420.35299683]
[403.18966675 431.18722534]
[413.56369019 442.02142334]
[433.14147949 446.75027466]
[436.98205566 465.68524170]
[447.72583008 476.15286255]
[458.46960449 486.62051392]
[474.46545410 487.85025024]
[483.35766602 501.20346069]
[478.32489014 516.43664551]
[463.22787476 521.86425781]
[449.64770508 513.32269287]
[448.00195312 497.36425781]
[437.25817871 486.89663696]
[426.51440430 476.42901611]
[416.31716919 477.47933960]
[407.03723145 472.62893677]
[401.86544800 463.27209473]
[402.72946167 452.39541626]
[392.35546875 441.56121826]
[381.98147583 430.72702026]
[371.60748291 419.89279175]
[361.23345947 409.05859375]
[356.53750610 408.06271362]
[352.42669678 404.08963013]
[350.69555664 397.66369629]
[340.70382690 386.47595215]
[330.71206665 375.28823853]
[316.47680664 382.69253540]
[300.80465698 386.18450928]
[284.75109863 385.52328491]
[269.39874268 380.74795532]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 131]
[7 130]
[9 127]
[10 126]
[11 125]
[12 124]
[13 123]
[14 122]
[16 120]
[17 119]
[18 118]
[19 116]
[20 115]
[21 43]
[22 42]
[23 41]
[24 40]
[25 39]
[26 38]
[27 37]
[45 62]
[46 61]
[47 60]
[49 58]
[50 57]
[64 78]
[65 77]
[66 76]
[67 75]
[82 112]
[83 111]
[84 110]
[85 109]
[87 107]
[88 106]
[89 105]
[90 104]
[91 102]
[92 101]
[144 176]
[145 175]
[146 174]
[147 171]
[148 170]
[149 169]
[150 168]
[151 167]
[153 163]
[154 162]
[155 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
