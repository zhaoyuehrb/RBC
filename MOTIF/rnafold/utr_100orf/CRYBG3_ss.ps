%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:57:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCGCGUCCGCACUUCUCCUGCCCGAGAGAGACUGAGCCGCGCUGGCAGCUCGCGUCGAGUCGGUCUGCCCUAGCCGCAUCCCGCGGCGCCCGGUCGGGCUCCGGGCACCAGGCAACACCUAGGCCGUUCCCUUCAGACAGCCCCGGGCCAGCGGCCCCCUCGGGAAAUGUCCAGCGGCCGCAGAAGGGGCAGCGCCCCCUGGCACAGCUUCUCCCGGUUCUUCGCUCCCCGAAGUCCUUCCCGGGACAAGGAAG\
AGGAAGAGGAGG\
) } def
/len { sequence length } bind def

/coor [
[182.01516724 711.92584229]
[179.56451416 726.72430420]
[181.24685669 735.66644287]
[176.99742126 741.68139648]
[174.37345886 756.45013428]
[180.46786499 771.67480469]
[170.11883545 784.39599609]
[153.97254944 781.52728271]
[148.63893127 766.01971436]
[159.60473633 753.82617188]
[162.22869873 739.05743408]
[164.76605225 724.27362061]
[167.21672058 709.47515869]
[158.36503601 697.55108643]
[160.63954163 682.50848389]
[173.20661926 673.30487061]
[175.65727234 658.50640869]
[178.10794067 643.70794678]
[180.55859375 628.90948486]
[183.00926208 614.11102295]
[171.08921814 597.61303711]
[172.14091492 578.82739258]
[183.78027344 566.05767822]
[179.11158752 551.80273438]
[174.44290161 537.54779053]
[163.12860107 527.86090088]
[166.18634033 512.33801270]
[161.51765442 498.08303833]
[156.84896851 483.82809448]
[152.18028259 469.57315063]
[147.51158142 455.31823730]
[136.19729614 445.63131714]
[139.25503540 430.10839844]
[134.58634949 415.85348511]
[129.91764832 401.59854126]
[118.60336304 391.91162109]
[121.66109467 376.38873291]
[116.99240875 362.13378906]
[112.32372284 347.87884521]
[98.24174500 342.71182251]
[85.46134186 350.56430054]
[78.13330841 365.23507690]
[61.74992752 365.95401001]
[53.16501236 351.98147583]
[61.20998764 337.69125366]
[77.60887146 337.78390503]
[90.38928223 329.93142700]
[87.35750580 323.07150269]
[78.26218414 302.49179077]
[63.85190964 306.65640259]
[49.44163132 310.82098389]
[35.03135300 314.98559570]
[20.62107658 319.15017700]
[7.08336210 329.35638428]
[-6.47159338 319.17309570]
[-0.43864939 303.32885742]
[16.45647621 304.73989868]
[30.86675453 300.57531738]
[45.27703094 296.41070557]
[59.68730927 292.24612427]
[74.09758759 288.08151245]
[91.33082581 272.70886230]
[110.06187439 270.41357422]
[108.65724945 255.47947693]
[107.25263214 240.54539490]
[105.76049805 225.61979675]
[104.18091583 210.70320129]
[102.60133362 195.78659058]
[101.02175140 180.86999512]
[99.44216156 165.95339966]
[97.86257935 151.03680420]
[96.28299713 136.12020874]
[67.20885468 132.84921265]
[43.78865433 105.88504791]
[29.58941841 101.04958344]
[15.39018440 96.21411896]
[1.19094908 91.37865448]
[-13.00828648 86.54319000]
[-27.98054695 92.30608368]
[-41.74779129 84.06941986]
[-43.74896622 68.15167236]
[-32.44894409 56.76356125]
[-16.51613045 58.64107895]
[-8.17282104 72.34395599]
[6.02641392 77.17942047]
[20.22564888 82.01488495]
[34.42488480 86.85034943]
[48.62411880 91.68581390]
[56.17481995 78.72483826]
[44.96511841 68.75776672]
[33.75541306 58.79069138]
[22.54570770 48.82361984]
[11.33600330 38.85654831]
[0.12629919 28.88947487]
[-15.31785583 31.34143448]
[-28.69817162 23.24815559]
[-33.69687271 8.43103600]
[-27.95372391 -6.11373138]
[-14.18046570 -13.51855373]
[1.11959076 -10.28709888]
[10.72222710 2.05483747]
[10.09337139 17.67977142]
[21.30307579 27.64684296]
[32.51277924 37.61391449]
[43.72248459 47.58098602]
[54.93218994 57.54806137]
[66.14189148 67.51512909]
[72.18878174 63.07833862]
[70.55089569 48.16802979]
[84.28256226 54.20475769]
[90.32945251 49.76796341]
[84.18560028 36.08392334]
[78.04174042 22.39987946]
[63.61780167 15.37638664]
[60.25656128 -0.31060183]
[70.53647614 -12.62737274]
[86.57167816 -12.12555218]
[96.06133270 0.80990458]
[91.72578430 16.25602341]
[97.86964417 29.94006729]
[104.01349640 43.62411118]
[106.32302856 54.01794434]
[107.29341888 64.42906952]
[113.27644348 50.67394638]
[119.25947571 36.91882324]
[125.24250031 23.16370201]
[131.22552490 9.40858078]
[137.20855713 -4.34654140]
[143.19158936 -18.10166359]
[139.21458435 -23.55060196]
[137.11289978 -29.90670586]
[137.05853271 -36.54968643]
[139.02525330 -42.84129715]
[142.79420471 -48.18666458]
[147.97770691 -52.09051514]
[154.05900574 -54.20301437]
[160.44371033 -54.35094452]
[167.37860107 -67.65159607]
[174.31349182 -80.95223999]
[181.24838257 -94.25289154]
[175.69819641 -110.85987091]
[183.73307800 -126.03568268]
[199.93678284 -130.59661865]
[206.71528625 -143.97764587]
[213.49378967 -157.35867310]
[219.95674133 -170.89492798]
[226.10060120 -184.57897949]
[232.24446106 -198.26301575]
[238.38830566 -211.94706726]
[244.53216553 -225.63110352]
[245.50382996 -242.55718994]
[262.03741455 -246.30909729]
[270.21966553 -231.46028137]
[258.21621704 -219.48724365]
[252.07235718 -205.80320740]
[245.92849731 -192.11915588]
[239.78463745 -178.43511963]
[233.64079285 -164.75108337]
[234.48178101 -162.11126709]
[234.34606934 -158.98475647]
[233.04519653 -155.73535156]
[230.52340698 -152.78767395]
[226.87481689 -150.58016968]
[220.09631348 -137.19914246]
[213.31781006 -123.81812286]
[218.99749756 -112.27458954]
[216.97183228 -99.37312317]
[207.75755310 -89.84615326]
[194.54904175 -87.31800079]
[187.61415100 -74.01734924]
[180.67924500 -60.71670151]
[173.74435425 -47.41604996]
[177.27453613 -24.57897949]
[156.94670105 -12.11863613]
[150.96368408 1.63648629]
[144.98065186 15.39160824]
[138.99761963 29.14673042]
[133.01460266 42.90185165]
[127.03157043 56.65697479]
[121.04853821 70.41209412]
[129.19424438 78.40877533]
[134.45483398 88.53919983]
[136.31040955 99.80224609]
[134.57762146 111.08483887]
[129.42768860 121.27196503]
[121.36956024 129.35688782]
[111.19959259 134.54061890]
[112.77917480 149.45721436]
[114.35876465 164.37380981]
[115.93834686 179.29042053]
[117.51792908 194.20701599]
[119.09751892 209.12361145]
[120.67710114 224.04020691]
[124.68050385 232.21121216]
[122.18672180 239.14077759]
[123.59134674 254.07485962]
[124.99596405 269.00894165]
[141.65107727 273.23950195]
[154.52375793 287.50262451]
[157.71247864 308.51190186]
[148.00704956 329.68597412]
[126.57866669 343.21014404]
[131.24734497 357.46508789]
[135.91604614 371.72003174]
[147.56427002 382.42654419]
[144.17259216 396.92984009]
[148.84127808 411.18478394]
[153.50997925 425.43972778]
[165.15820312 436.14624023]
[161.76652527 450.64953613]
[166.43521118 464.90447998]
[171.10391235 479.15942383]
[175.77259827 493.41436768]
[180.44128418 507.66931152]
[192.08950806 518.37579346]
[188.69784546 532.87908936]
[193.36653137 547.13403320]
[198.03521729 561.38897705]
[216.11753845 565.74481201]
[227.51161194 582.49468994]
[224.49113464 604.20355225]
[233.36471558 616.29730225]
[242.23829651 628.39111328]
[251.11187744 640.48486328]
[258.68420410 645.52990723]
[260.01760864 652.77282715]
[268.74884033 664.96978760]
[277.48004150 677.16674805]
[294.42999268 684.40332031]
[295.42053223 701.93902588]
[304.29409790 714.03277588]
[317.73333740 714.52655029]
[328.28701782 722.54437256]
[332.24768066 734.98883057]
[328.38613892 747.26080322]
[337.11734009 759.45776367]
[345.84854126 771.65472412]
[354.57977295 783.85168457]
[363.31097412 796.04864502]
[378.46047974 802.32751465]
[380.32897949 818.61987305]
[366.99432373 828.16552734]
[352.17404175 821.14471436]
[351.11401367 804.77984619]
[342.38278198 792.58288574]
[333.65158081 780.38592529]
[324.92037964 768.18896484]
[316.18917847 755.99200439]
[299.48089600 753.94366455]
[289.23541260 740.16339111]
[292.20031738 722.90637207]
[283.32675171 710.81256104]
[271.44226074 708.67681885]
[263.94732666 698.70404053]
[265.28308105 685.89794922]
[256.55184937 673.70098877]
[247.82064819 661.50402832]
[239.01809692 649.35845947]
[230.14451599 637.26464844]
[221.27093506 625.17089844]
[212.39735413 613.07708740]
[197.80770874 616.56170654]
[195.35705566 631.36016846]
[192.90638733 646.15856934]
[190.45573425 660.95703125]
[188.00506592 675.75549316]
[196.93434143 688.51898193]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 13]
[2 12]
[4 11]
[5 10]
[16 266]
[17 265]
[18 264]
[19 263]
[20 262]
[23 218]
[24 217]
[25 216]
[27 214]
[28 213]
[29 212]
[30 211]
[31 210]
[33 208]
[34 207]
[35 206]
[37 204]
[38 203]
[39 202]
[40 47]
[41 46]
[49 61]
[50 60]
[51 59]
[52 58]
[53 57]
[63 197]
[64 196]
[65 195]
[66 193]
[67 192]
[68 191]
[69 190]
[70 189]
[71 188]
[72 187]
[74 88]
[75 87]
[76 86]
[77 85]
[78 84]
[89 107]
[90 106]
[91 105]
[92 104]
[93 103]
[94 102]
[111 121]
[112 120]
[113 119]
[123 180]
[124 179]
[125 178]
[126 177]
[127 176]
[128 175]
[129 174]
[137 172]
[138 171]
[139 170]
[140 169]
[143 165]
[144 164]
[145 163]
[146 158]
[147 157]
[148 156]
[149 155]
[150 154]
[221 261]
[222 260]
[223 259]
[224 258]
[226 257]
[227 256]
[228 255]
[230 252]
[231 251]
[235 248]
[236 247]
[237 246]
[238 245]
[239 244]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
