%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:37:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGCCUGCCGCUCCCCGCGCUCGUAGCGCGGGCCUGGGGACUGGGGAUCCCGCCGCCGGGCCGCAGCAUGGGGCGCUUCCGCGGGGGCCUGCGGUGCAUCAAGUACCUGCUGCUUGGCUUCAACCUGCUCUUCUGGCUGGCUGGAUCGGCCGUCAUUGCUUUUGGAC\
) } def
/len { sequence length } bind def

/coor [
[123.42747498 125.12617493]
[119.03153229 139.46757507]
[114.63558960 153.80897522]
[110.23964691 168.15036011]
[105.84369659 182.49176025]
[112.06488800 197.27946472]
[104.25606537 211.29380798]
[88.40747833 213.78417969]
[76.67681885 202.84017944]
[78.06283569 186.85711670]
[91.50230408 178.09582520]
[95.89824677 163.75442505]
[100.29418945 149.41302490]
[104.69013214 135.07162476]
[109.08608246 120.73023224]
[96.66265869 112.32436371]
[84.98502350 121.73886871]
[73.30738831 131.15336609]
[61.62975311 140.56787109]
[49.95211792 149.98237610]
[38.27448273 159.39688110]
[26.59684753 168.81137085]
[18.06082726 183.45967102]
[1.62198281 179.31230164]
[1.05655444 162.36778259]
[17.18234634 157.13374329]
[28.85998154 147.71923828]
[40.53761673 138.30473328]
[52.21525192 128.89024353]
[63.89288330 119.47573853]
[75.57051849 110.06123352]
[87.24815369 100.64672852]
[96.55371094 88.88209534]
[103.02605438 75.35032654]
[95.65283203 65.19853210]
[93.32503510 52.94312286]
[96.42641449 40.93497467]
[104.30525208 31.45082283]
[115.41017151 26.26164627]
[127.59529877 26.30211449]
[134.56614685 13.02027416]
[141.53698730 -0.26156634]
[142.76387024 -9.35500145]
[148.76286316 -13.72372437]
[155.97938538 -26.87369347]
[155.13648987 -45.24983978]
[170.44682312 -53.79127502]
[177.41767883 -67.07312012]
[184.38851929 -80.35495758]
[191.35937500 -93.63679504]
[198.33021545 -106.91864014]
[197.89244080 -122.73378754]
[210.65814209 -130.40751648]
[217.62898254 -143.68936157]
[224.59983826 -156.97120667]
[231.44692993 -170.31726074]
[238.16969299 -183.72637939]
[244.89244080 -197.13549805]
[251.61520386 -210.54463196]
[258.33795166 -223.95375061]
[265.06072998 -237.36286926]
[259.23947144 -253.83880615]
[266.96499634 -269.13543701]
[283.03497314 -274.03253174]
[289.50732422 -287.56430054]
[295.97967529 -301.09606934]
[302.45202637 -314.62783813]
[297.42767334 -329.37210083]
[304.18429565 -343.00305176]
[318.27169800 -347.70211792]
[324.74401855 -361.23388672]
[331.21636963 -374.76565552]
[337.68872070 -388.29742432]
[344.16107178 -401.82919312]
[350.63339233 -415.36096191]
[323.14868164 -448.24212646]
[324.54086304 -463.17739868]
[316.91088867 -473.60949707]
[318.40295410 -486.04351807]
[327.67135620 -493.85607910]
[329.34091187 -508.76287842]
[331.01049805 -523.66967773]
[332.68005371 -538.57647705]
[334.34963989 -553.48327637]
[336.01919556 -568.39007568]
[328.95910645 -583.19165039]
[338.46936035 -596.55157471]
[354.76660156 -594.72625732]
[361.08566284 -579.59344482]
[350.92599487 -566.72052002]
[349.25643921 -551.81372070]
[347.58685303 -536.90692139]
[345.91729736 -522.00012207]
[344.24771118 -507.09332275]
[342.57815552 -492.18652344]
[350.47207642 -476.53247070]
[339.47613525 -461.78518677]
[338.08392334 -446.84994507]
[344.65890503 -443.24166870]
[357.80889893 -436.02514648]
[364.38388062 -432.41687012]
[376.23449707 -441.61270142]
[388.08511353 -450.80850220]
[399.93572998 -460.00430298]
[411.78634644 -469.20010376]
[423.63696289 -478.39593506]
[427.06320190 -494.06884766]
[441.51614380 -501.03247070]
[455.90872192 -493.94491577]
[459.20016479 -478.24313354]
[448.86557007 -465.97219849]
[432.83276367 -466.54531860]
[420.98214722 -457.34951782]
[409.13153076 -448.15368652]
[397.28091431 -438.95788574]
[385.43029785 -429.76208496]
[373.57968140 -420.56625366]
[364.16516113 -408.88864136]
[357.69284058 -395.35687256]
[351.22048950 -381.82510376]
[344.74813843 -368.29333496]
[338.27578735 -354.76156616]
[331.80346680 -341.22979736]
[336.98687744 -327.31332397]
[330.61578369 -313.49798584]
[315.98379517 -308.15548706]
[309.51144409 -294.62371826]
[303.03909302 -281.09194946]
[296.56674194 -267.56018066]
[302.51849365 -256.10543823]
[300.74713135 -243.12219238]
[291.67874146 -233.39537048]
[278.46984863 -230.64010620]
[271.74707031 -217.23098755]
[265.02432251 -203.82186890]
[258.30157471 -190.41275024]
[251.57881165 -177.00363159]
[244.85604858 -163.59449768]
[244.66847229 -156.17572021]
[237.88166809 -150.00035095]
[230.91082764 -136.71852112]
[223.93997192 -123.43667603]
[224.87635803 -108.57153320]
[211.61206055 -99.94779205]
[204.64122009 -86.66594696]
[197.67036438 -73.38410950]
[190.69952393 -60.10226822]
[183.72866821 -46.82043076]
[187.02691650 -35.15589523]
[181.29475403 -24.02155685]
[169.12934875 -19.65716553]
[161.91282654 -6.50719452]
[154.81883240 6.70928144]
[147.84797668 19.99112129]
[140.87713623 33.27296066]
[149.43318176 48.68529892]
[147.03399658 66.30744171]
[134.44924927 79.09492493]
[116.55782318 81.82266998]
[110.08547974 95.35443878]
[122.25296783 86.58220673]
[136.64067078 82.34025574]
[151.27400208 85.63655853]
[162.45330811 95.63771820]
[167.35217285 109.81520844]
[164.73205566 124.58460236]
[155.25538635 136.21183777]
[141.31808472 141.75727844]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 15]
[2 14]
[3 13]
[4 12]
[5 11]
[16 32]
[17 31]
[18 30]
[19 29]
[20 28]
[21 27]
[22 26]
[33 160]
[34 159]
[40 155]
[41 154]
[42 153]
[44 152]
[45 151]
[47 148]
[48 147]
[49 146]
[50 145]
[51 144]
[53 142]
[54 141]
[55 140]
[56 138]
[57 137]
[58 136]
[59 135]
[60 134]
[61 133]
[64 129]
[65 128]
[66 127]
[67 126]
[70 123]
[71 122]
[72 121]
[73 120]
[74 119]
[75 118]
[76 98]
[77 97]
[80 95]
[81 94]
[82 93]
[83 92]
[84 91]
[85 90]
[101 117]
[102 116]
[103 115]
[104 114]
[105 113]
[106 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
