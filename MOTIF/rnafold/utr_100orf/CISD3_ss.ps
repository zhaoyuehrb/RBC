%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:18:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGCGGCGUCUUCCGGGGCCUGGCGGGCCGGGGACCGAGGGGGCGGGGAGGUGACCCGGCGGGGGCGGAGCCAGCGGGCGGGCGCGGCGCGGGAGGCGACCAUGCGCGGCGCGGGGGCGAUCCUGCGGCCGGCGGCGCGUGGUGCCCGGGACCUGAACCCGCGGCGGGACAUCUCCUCCUGGCUGGCCCAGUGGUUCCCUA\
) } def
/len { sequence length } bind def

/coor [
[-231.04670715 999.22021484]
[-236.92073059 1013.02221680]
[-242.79475403 1026.82421875]
[-248.66876221 1040.62622070]
[-249.15089417 1049.75451660]
[-254.74197388 1054.59533691]
[-260.82888794 1068.30480957]
[-266.91577148 1082.01428223]
[-265.44418335 1097.76684570]
[-277.68045044 1106.25939941]
[-283.76736450 1119.96887207]
[-281.49923706 1136.21044922]
[-294.59539795 1146.08068848]
[-309.58364868 1139.42602539]
[-311.04534912 1123.09216309]
[-297.47683716 1113.88195801]
[-291.38992310 1100.17248535]
[-293.29690552 1085.40051270]
[-280.62524414 1075.92736816]
[-274.53836060 1062.21789551]
[-268.45144653 1048.50842285]
[-262.47079468 1034.75219727]
[-256.59677124 1020.95019531]
[-250.72274780 1007.14819336]
[-244.84872437 993.34619141]
[-252.56982422 983.96881104]
[-255.58668518 972.12786865]
[-253.26675415 960.05737305]
[-245.99037170 950.06170654]
[-235.09005737 944.07562256]
[-222.60670471 943.29010010]
[-216.30838013 929.67645264]
[-210.01004028 916.06280518]
[-203.71170044 902.44915771]
[-197.41336060 888.83557129]
[-191.11502075 875.22192383]
[-184.81669617 861.60827637]
[-178.51835632 847.99468994]
[-181.04254150 830.63092041]
[-165.90968323 820.14428711]
[-159.82276917 806.43481445]
[-153.73585510 792.72534180]
[-147.86183167 778.92333984]
[-142.20210266 765.03204346]
[-136.54237366 751.14080811]
[-138.90557861 736.43487549]
[-126.53316498 726.57415771]
[-120.87343597 712.68286133]
[-115.21370697 698.79156494]
[-109.55397797 684.90032959]
[-103.89424896 671.00903320]
[-98.23451996 657.11773682]
[-100.59771729 642.41180420]
[-88.22530365 632.55108643]
[-82.56557465 618.65985107]
[-77.22980499 604.64093018]
[-72.22087860 590.50195312]
[-67.21195221 576.36297607]
[-62.20302963 562.22399902]
[-57.41350555 548.00921631]
[-52.84453583 533.72198486]
[-48.27556229 519.43475342]
[-43.70658875 505.14755249]
[-39.13761520 490.86035156]
[-46.16819763 477.77957153]
[-41.73813629 463.22521973]
[-27.97015190 455.93960571]
[-23.40118027 441.65237427]
[-18.83220863 427.36517334]
[-25.86278915 414.28439331]
[-21.43272781 399.73004150]
[-7.66474390 392.44439697]
[-3.09577131 378.15719604]
[-4.45178413 373.57180786]
[-2.93713737 368.08593750]
[1.84198940 363.50244141]
[6.85091591 349.36346436]
[11.85984230 335.22448730]
[16.86876869 321.08551025]
[21.87769508 306.94653320]
[26.88662148 292.80755615]
[22.76331711 275.75265503]
[36.85865021 263.90808105]
[41.64817429 249.69328308]
[46.43769455 235.47848511]
[51.22721863 221.26368713]
[56.01674271 207.04888916]
[52.74830246 192.51731873]
[64.48699188 181.91007996]
[69.27651978 167.69528198]
[74.06604004 153.48048401]
[70.79759979 138.94891357]
[82.53629303 128.34165955]
[87.32582092 114.12686157]
[76.54783630 106.51679993]
[71.60200500 91.29409790]
[77.28209686 73.29048157]
[77.74629974 58.29766464]
[78.21049500 43.30484772]
[67.20510864 31.96214485]
[67.52716064 16.16113663]
[78.98558044 5.27628374]
[94.78230286 5.76537418]
[105.54540253 17.33823967]
[104.88932800 33.12890625]
[93.20331573 43.76905060]
[92.73911285 58.76186371]
[92.27490997 73.75467682]
[99.45301819 75.92834473]
[113.80922699 80.27567291]
[120.98732758 82.44933319]
[128.91860962 69.71768951]
[136.84989929 56.98604584]
[144.78117371 44.25440216]
[152.71246338 31.52275848]
[160.64373779 18.79111481]
[168.57502747 6.05947113]
[168.58372498 -10.33967400]
[182.92337036 -18.29619980]
[196.84259033 -9.62511539]
[196.02246094 6.75351191]
[181.30667114 13.99075413]
[173.37538147 26.72239685]
[165.44410706 39.45404053]
[157.51281738 52.18568420]
[149.58154297 64.91732788]
[141.65025330 77.64897156]
[133.71897888 90.38061523]
[122.21279144 115.38702393]
[101.54061890 118.91638947]
[96.75109100 133.13117981]
[99.67695618 148.67948914]
[88.28083801 158.27000427]
[83.49131775 172.48480225]
[78.70178986 186.69960022]
[81.62765503 202.24790955]
[70.23153687 211.83840942]
[65.44201660 226.05320740]
[60.65249252 240.26800537]
[55.86296844 254.48280334]
[51.07344818 268.69760132]
[56.09542465 280.58248901]
[51.80888367 292.32608032]
[41.02559662 297.81649780]
[36.01667023 311.95547485]
[31.00774574 326.09445190]
[25.99881935 340.23342896]
[20.98989296 354.37240601]
[15.98096561 368.51138306]
[11.19144344 382.72616577]
[6.62247038 397.01339722]
[13.60819530 410.93594360]
[8.77108097 425.36010742]
[-4.54499340 431.93414307]
[-9.11396599 446.22134399]
[-13.68293858 460.50857544]
[-6.69721365 474.43112183]
[-11.53432846 488.85528564]
[-24.85040283 495.42932129]
[-29.41937447 509.71652222]
[-33.98834610 524.00372314]
[-38.55731964 538.29095459]
[-43.12629318 552.57818604]
[-42.09547424 559.11926270]
[-44.20957184 564.40313721]
[-48.06405258 567.23291016]
[-53.07297897 581.37188721]
[-58.08190536 595.51086426]
[-63.09083176 609.64984131]
[-62.13553238 614.79455566]
[-63.15158463 619.33532715]
[-65.57740784 622.62127686]
[-68.67430115 624.31958008]
[-74.33403015 638.21081543]
[-72.37565613 653.91033936]
[-84.34324646 662.77746582]
[-90.00297546 676.66876221]
[-95.66270447 690.56005859]
[-101.32243347 704.45129395]
[-106.98216248 718.34259033]
[-112.64189148 732.23388672]
[-110.68351746 747.93341064]
[-122.65110779 756.80053711]
[-128.31083679 770.69177246]
[-133.97056580 784.58306885]
[-133.44847107 791.18426514]
[-135.96469116 796.28894043]
[-140.02639771 798.81225586]
[-146.11329651 812.52172852]
[-152.20021057 826.23120117]
[-148.30184937 838.53051758]
[-153.65881348 849.82611084]
[-164.90472412 854.29296875]
[-171.20306396 867.90661621]
[-177.50140381 881.52026367]
[-183.79972839 895.13391113]
[-190.09806824 908.74749756]
[-196.39640808 922.36114502]
[-202.69474792 935.97479248]
[-208.99307251 949.58843994]
[-199.68696594 965.14355469]
[-201.55981445 983.01489258]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 25]
[2 24]
[3 23]
[4 22]
[6 21]
[7 20]
[8 19]
[10 17]
[11 16]
[31 200]
[32 199]
[33 198]
[34 197]
[35 196]
[36 195]
[37 194]
[38 193]
[40 190]
[41 189]
[42 188]
[43 185]
[44 184]
[45 183]
[47 181]
[48 180]
[49 179]
[50 178]
[51 177]
[52 176]
[54 174]
[55 173]
[56 169]
[57 168]
[58 167]
[59 166]
[60 163]
[61 162]
[62 161]
[63 160]
[64 159]
[67 156]
[68 155]
[69 154]
[72 151]
[73 150]
[76 149]
[77 148]
[78 147]
[79 146]
[80 145]
[81 144]
[83 141]
[84 140]
[85 139]
[86 138]
[87 137]
[89 135]
[90 134]
[91 133]
[93 131]
[94 130]
[97 108]
[98 107]
[99 106]
[111 128]
[112 127]
[113 126]
[114 125]
[115 124]
[116 123]
[117 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
