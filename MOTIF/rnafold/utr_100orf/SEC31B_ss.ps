%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:55:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCAGAGGAGCGGCUCCGGCCGCCGCGCCUGACCCUUGUCCGGGGUCUUCCGCACAGUGGGCUGAGGGCCAUGUCAGUUUUCUGCCACCUACAGGAUAGACCAUGAAGCUGAAGGAACUUGAGCGGCCAGCUGUCCAGGCAUGGAGCCCAGCCAGCCAAUACCCUUUGUAUCUGGCCACAGGAACAUCUGCCCAACAGCUAG\
) } def
/len { sequence length } bind def

/coor [
[137.17720032 111.50863647]
[123.42105103 105.52799225]
[109.66488647 99.54734802]
[126.64084625 112.56738281]
[129.50030518 139.42114258]
[110.64514160 168.19206238]
[102.71385956 180.92370605]
[94.78257751 193.65534973]
[94.05294037 209.45973206]
[80.75613403 216.17121887]
[72.82485199 228.90286255]
[64.89356995 241.63450623]
[56.96228409 254.36614990]
[49.03100204 267.09780884]
[54.05540848 281.90621948]
[48.33751297 296.46093750]
[34.57712555 303.88964844]
[19.27148438 300.68475342]
[9.64744377 288.35949707]
[10.24918175 272.73348999]
[20.79257584 261.18487549]
[36.29935837 259.16650391]
[44.23064041 246.43487549]
[52.16192245 233.70323181]
[60.09320450 220.97158813]
[68.02449036 208.23994446]
[68.18682098 193.34622192]
[82.05093384 185.72407532]
[89.98221588 172.99243164]
[97.91349792 160.26078796]
[88.38078308 148.67944336]
[74.36188507 154.01521301]
[60.34297943 159.35098267]
[46.32407761 164.68675232]
[32.30517578 170.02250671]
[18.28627586 175.35827637]
[10.43395424 189.34829712]
[-5.42228842 191.78942871]
[-17.11890030 180.80903625]
[-15.68324089 164.83035278]
[-2.21662641 156.11083984]
[12.95051003 161.33937073]
[26.96941185 156.00361633]
[40.98831177 150.66784668]
[55.00721359 145.33207703]
[69.02611542 139.99630737]
[83.04502106 134.66055298]
[82.17645264 127.21100616]
[80.43933105 112.31193542]
[79.57077026 104.86239624]
[64.70036316 102.89492035]
[49.82995605 100.92743683]
[34.95954895 98.95995331]
[18.46418762 102.87651062]
[10.13432217 88.11000061]
[22.01781082 76.01789856]
[36.92702866 84.08954620]
[51.79743958 86.05702972]
[66.66784668 88.02451324]
[81.53825378 89.99198914]
[91.33721924 78.63504028]
[87.21257782 64.21327972]
[83.08793640 49.79151154]
[78.85182190 35.40209198]
[74.50449371 21.04588509]
[70.15716553 6.68967533]
[56.50357819 -0.80814284]
[52.29928207 -15.42930984]
[59.53144836 -28.39971352]
[55.18412018 -42.75592041]
[45.30633163 -47.32907104]
[39.69464493 -56.39878082]
[39.99839020 -66.84010315]
[45.87562561 -75.20856476]
[41.97465515 -89.69243622]
[38.07368851 -104.17630768]
[34.17272186 -118.66017151]
[30.27175331 -133.14404297]
[26.37078476 -147.62791443]
[22.46981621 -162.11178589]
[18.01153374 -176.43391418]
[13.00260639 -190.57289124]
[7.99368000 -204.71186829]
[2.98475385 -218.85084534]
[-2.13342762 -232.95063782]
[-7.36055756 -247.01040649]
[-22.15124321 -252.08679199]
[-30.17420387 -265.50939941]
[-27.64124107 -280.94046021]
[-15.74834347 -291.09393311]
[-0.11097319 -291.17565918]
[11.88738155 -281.14700317]
[14.58146381 -265.74325562]
[6.69921160 -252.23754883]
[11.92634201 -238.17778015]
[17.20723724 -233.00038147]
[17.12372971 -223.85977173]
[22.13265610 -209.72079468]
[27.14158249 -195.58181763]
[32.15050888 -181.44284058]
[40.89417267 -193.63088989]
[55.86582184 -194.55267334]
[66.03857422 -183.52928162]
[63.92001724 -168.67964172]
[51.07050323 -160.94078064]
[36.95368576 -166.01274109]
[40.85465240 -151.52888489]
[44.75562286 -137.04501343]
[48.65658951 -122.56114197]
[52.55755615 -108.07727051]
[56.45852661 -93.59340668]
[60.35949326 -79.10953522]
[75.01367950 -66.50006104]
[69.54032898 -47.10324860]
[73.88765717 -32.74703979]
[87.10040283 -25.96773720]
[91.71372223 -11.47042942]
[84.51337433 2.34234786]
[88.86070251 16.69855690]
[93.20803070 31.05476570]
[98.15852356 36.54893494]
[97.50969696 45.66687012]
[101.63434601 60.08863449]
[105.75898743 74.51039886]
[115.64553833 85.79118347]
[129.40168762 91.77183533]
[143.15785217 97.75247955]
[163.05801392 94.56226349]
[173.88557434 110.57813263]
[187.82022095 116.13020325]
[201.75486755 121.68227386]
[215.68952942 127.23434448]
[229.62417603 132.78642273]
[243.55882263 138.33848572]
[255.24040222 131.62591553]
[268.46200562 132.85107422]
[278.41503906 141.34324646]
[281.60955811 153.83006287]
[295.45663452 159.59710693]
[309.30371094 165.36416626]
[323.15075684 171.13121033]
[337.08541870 176.68327332]
[351.10430908 182.01904297]
[362.68060303 175.12651062]
[375.91958618 176.14689636]
[386.00286865 184.48403931]
[389.39022827 196.91992188]
[403.32489014 202.47198486]
[420.42343140 194.32551575]
[437.75216675 201.14089966]
[444.48489380 218.15902710]
[458.58468628 223.27720642]
[472.68447876 228.39538574]
[486.78427124 233.51356506]
[500.88406372 238.63174438]
[520.54876709 234.21655273]
[532.34637451 249.53190613]
[546.59783936 254.21128845]
[560.84924316 258.89068604]
[574.83825684 251.53652954]
[589.90509033 256.30780029]
[597.11096191 270.37377930]
[592.18066406 285.38934326]
[578.03930664 292.44607544]
[563.07666016 287.35729980]
[556.16986084 273.14212036]
[541.91839600 268.46273804]
[527.66699219 263.78332520]
[518.99261475 269.19888306]
[508.55017090 268.93692017]
[499.79754639 262.84243774]
[495.76589966 252.73155212]
[481.66610718 247.61335754]
[467.56631470 242.49517822]
[453.46652222 237.37699890]
[439.36669922 232.25881958]
[430.31689453 239.21855164]
[418.91275024 240.96057129]
[407.97277832 236.93725586]
[400.25744629 228.04042053]
[397.77282715 216.40664673]
[383.83816528 210.85456848]
[368.69061279 218.15478516]
[352.63275146 212.12506104]
[345.76855469 196.03794861]
[331.74963379 190.70217896]
[327.09756470 191.80795288]
[321.70175171 189.99853516]
[317.38369751 184.97827148]
[303.53665161 179.21122742]
[289.68957520 173.44416809]
[275.84252930 167.67712402]
[260.58380127 174.74206543]
[244.62117004 168.46455383]
[238.00674438 152.27314758]
[224.07209778 146.72106934]
[210.13745117 141.16900635]
[196.20280457 135.61692810]
[182.26814270 130.06484985]
[168.33349609 124.51277924]
[159.34071350 129.38133240]
[148.93446350 128.47384644]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 127]
[2 126]
[3 125]
[6 30]
[7 29]
[8 28]
[10 26]
[11 25]
[12 24]
[13 23]
[14 22]
[31 47]
[32 46]
[33 45]
[34 44]
[35 43]
[36 42]
[50 60]
[51 59]
[52 58]
[53 57]
[61 124]
[62 123]
[63 122]
[64 120]
[65 119]
[66 118]
[69 115]
[70 114]
[74 112]
[75 111]
[76 110]
[77 109]
[78 108]
[79 107]
[80 106]
[81 100]
[82 99]
[83 98]
[84 97]
[85 95]
[86 94]
[129 200]
[130 199]
[131 198]
[132 197]
[133 196]
[134 195]
[138 192]
[139 191]
[140 190]
[141 189]
[142 186]
[143 185]
[147 182]
[148 181]
[151 176]
[152 175]
[153 174]
[154 173]
[155 172]
[157 168]
[158 167]
[159 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
