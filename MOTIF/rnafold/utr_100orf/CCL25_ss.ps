%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:27:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAUGGGACAGCUUGGCCUACAGCCCGGCGGGCAUCAGCUCCCUUGACCCAGUGGAUAUCGGUGGCCCCGUUAUUCGUCCAGGUGCCCAGGGAGGAGGACCCGCCUGCAGCAUGAACCUGUGGCUCCUGGCCUGCCUGGUGGCCGGCUUCCUGGGAGCCUGGGCCCCCGCUGUCCACACCCAAGGUGUCUUUGAGGACUGCUGCCUGGCCU\
) } def
/len { sequence length } bind def

/coor [
[-8.19773960 555.37994385]
[-14.24492264 569.10699463]
[-28.17713547 574.66516113]
[-42.01253128 568.87017822]
[-47.82471848 555.04296875]
[-54.47565842 568.48785400]
[-61.12659836 581.93273926]
[-46.29818726 579.67041016]
[-35.18122864 589.74078369]
[-35.97125244 604.71997070]
[-48.08584213 613.56512451]
[-62.59400940 609.75555420]
[-68.80018616 596.09906006]
[-76.42815399 609.01477051]
[-84.05612183 621.93041992]
[-81.46574402 637.76293945]
[-92.33546448 649.56243896]
[-108.32696533 648.27740479]
[-117.17293549 634.89349365]
[-112.08750153 619.67779541]
[-96.97177124 614.30242920]
[-89.34380341 601.38677979]
[-81.71584320 588.47113037]
[-74.57148743 575.28179932]
[-67.92054749 561.83691406]
[-61.26960754 548.39202881]
[-55.22275543 534.66485596]
[-49.79194260 520.68249512]
[-44.36112595 506.70013428]
[-39.03405762 492.67791748]
[-33.81103516 478.61663818]
[-28.58801079 464.55532837]
[-23.36498642 450.49404907]
[-18.14196205 436.43273926]
[-20.96340179 421.80780029]
[-8.90506172 411.56539917]
[-3.68203735 397.50408936]
[1.54098725 383.44281006]
[0.92332882 376.07858276]
[6.94699383 369.21279907]
[12.37780952 355.23043823]
[17.80862427 341.24810791]
[7.56888676 326.85919189]
[8.02096939 309.04714966]
[19.17256927 294.94949341]
[36.70619965 290.32864380]
[41.72028732 276.19149780]
[46.73437119 262.05432129]
[51.64357376 247.88043213]
[56.44762421 233.67053223]
[49.69686127 212.25828552]
[67.26108551 197.10803223]
[71.00004578 182.58149719]
[74.73899841 168.05496216]
[78.47795868 153.52842712]
[82.21691895 139.00189209]
[85.95587921 124.47535706]
[89.69483948 109.94882202]
[86.12818146 96.42955780]
[95.77862549 86.31221771]
[99.51758575 71.78568268]
[103.25654602 57.25915146]
[102.36500549 48.16912079]
[107.16003418 42.54587173]
[111.11383820 28.07633591]
[99.69494629 37.80304718]
[85.08429718 41.19847488]
[70.54640198 37.50396729]
[59.32949448 27.54499817]
[53.93981552 13.54673576]
[55.58159637 -1.36314499]
[63.88800812 -13.85328102]
[77.00312805 -21.13296127]
[91.99658966 -21.57566261]
[105.51836395 -15.08247185]
[114.54724121 -3.10418248]
[117.06600189 11.68093491]
[123.31559753 -1.95513809]
[129.56520081 -15.59121132]
[135.81480408 -29.22728348]
[142.06440735 -42.86335754]
[148.31401062 -56.49943161]
[154.56359863 -70.13550568]
[160.81320190 -83.77157593]
[159.52914429 -99.54058838]
[171.86560059 -107.88691711]
[178.11520386 -121.52299500]
[184.36480713 -135.15907288]
[190.61441040 -148.79513550]
[196.86399841 -162.43121338]
[203.11360168 -176.06729126]
[209.36320496 -189.70335388]
[215.61280823 -203.33943176]
[221.86241150 -216.97550964]
[216.59698486 -231.63542175]
[223.12922668 -245.37530518]
[237.13766479 -250.30473328]
[243.38725281 -263.94082642]
[243.14888000 -270.54675293]
[245.87300110 -275.53323364]
[250.02941895 -277.88412476]
[256.68035889 -291.32901001]
[263.33129883 -304.77389526]
[269.98223877 -318.21878052]
[276.63317871 -331.66366577]
[275.02569580 -350.00790405]
[289.99844360 -359.16186523]
[296.44940186 -372.70382690]
[302.90039062 -386.24578857]
[309.35137939 -399.78775024]
[315.60098267 -413.42382812]
[321.64782715 -427.15103149]
[320.13024902 -442.89926147]
[332.34164429 -451.42749023]
[338.38851929 -465.15466309]
[336.87094116 -480.90292358]
[349.08233643 -489.43115234]
[355.12918091 -503.15832520]
[355.98104858 -520.09088135]
[372.48767090 -523.95971680]
[380.77478027 -509.16915894]
[368.85638428 -497.11148071]
[362.80953979 -483.38430786]
[364.75961304 -468.61788940]
[352.11569214 -459.10781860]
[346.06884766 -445.38064575]
[348.01895142 -430.61425781]
[335.37500000 -421.10415649]
[329.32815552 -407.37698364]
[330.19125366 -402.68045044]
[328.11367798 -397.39178467]
[322.89334106 -393.33679199]
[316.44235229 -379.79479980]
[309.99139404 -366.25283813]
[303.54040527 -352.71087646]
[307.28704834 -341.20968628]
[302.02407837 -329.87509155]
[290.07806396 -325.01272583]
[283.42712402 -311.56784058]
[276.77618408 -298.12295532]
[270.12524414 -284.67807007]
[263.47430420 -271.23318481]
[257.02334595 -257.69122314]
[250.77372742 -244.05514526]
[256.18466187 -230.22555542]
[250.04090881 -216.30760193]
[235.49847412 -210.72590637]
[229.24888611 -197.08982849]
[222.99928284 -183.45376587]
[216.74967957 -169.81768799]
[210.50007629 -156.18161011]
[204.25047302 -142.54553223]
[198.00086975 -128.90946960]
[191.75128174 -115.27339172]
[185.50167847 -101.63732147]
[187.23274231 -86.84365082]
[174.44927979 -77.52197266]
[168.19967651 -63.88590240]
[161.95007324 -50.24982834]
[155.70046997 -36.61375809]
[149.45088196 -22.97768402]
[143.20127869 -9.34160995]
[136.95167542 4.29446268]
[130.70207214 17.93053627]
[125.58337402 32.03014374]
[121.62957001 46.49967957]
[117.78308105 60.99810791]
[114.04412079 75.52464294]
[110.30516052 90.05117798]
[113.87181854 103.57044220]
[104.22137451 113.68778229]
[100.48241425 128.21430969]
[96.74345398 142.74084473]
[93.00449371 157.26737976]
[89.26553345 171.79391479]
[85.52657318 186.32044983]
[81.78761292 200.84698486]
[86.95716858 206.29423523]
[89.89189148 213.13284302]
[90.27141571 220.49670410]
[88.09579468 227.47080994]
[83.67965698 233.20486450]
[77.60768890 237.01696777]
[70.65751648 238.47457886]
[65.85346985 252.68447876]
[66.06966400 261.81555176]
[60.87152100 267.06842041]
[55.85743332 281.20556641]
[50.84334564 295.34271240]
[59.21503448 304.62500000]
[62.82516479 316.51675415]
[61.04742432 328.74368286]
[54.27986526 338.99450684]
[43.85785294 345.35797119]
[31.79097939 346.67892456]
[26.36016464 360.66125488]
[20.92934799 374.64361572]
[15.60228252 388.66583252]
[10.37925720 402.72711182]
[5.15623331 416.78842163]
[7.60408783 432.41909790]
[-4.08066654 441.65576172]
[-9.30369091 455.71707153]
[-14.52671528 469.77835083]
[-19.74974060 483.83966064]
[-24.97276497 497.90093994]
[-25.02725220 507.03442383]
[-30.37877083 512.13092041]
[-35.80958557 526.11328125]
[-41.24040222 540.09564209]
[-27.11413765 535.05096436]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 26]
[6 25]
[7 24]
[13 23]
[14 22]
[15 21]
[27 210]
[28 209]
[29 208]
[30 206]
[31 205]
[32 204]
[33 203]
[34 202]
[36 200]
[37 199]
[38 198]
[40 197]
[41 196]
[42 195]
[46 189]
[47 188]
[48 187]
[49 185]
[50 184]
[52 177]
[53 176]
[54 175]
[55 174]
[56 173]
[57 172]
[58 171]
[60 169]
[61 168]
[62 167]
[64 166]
[65 165]
[77 164]
[78 163]
[79 162]
[80 161]
[81 160]
[82 159]
[83 158]
[84 157]
[86 155]
[87 154]
[88 153]
[89 152]
[90 151]
[91 150]
[92 149]
[93 148]
[94 147]
[97 144]
[98 143]
[101 142]
[102 141]
[103 140]
[104 139]
[105 138]
[107 135]
[108 134]
[109 133]
[110 132]
[111 129]
[112 128]
[114 126]
[115 125]
[117 123]
[118 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
