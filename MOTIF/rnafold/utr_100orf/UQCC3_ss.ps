%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:42:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAGCCUGCGCCAAGGGGUAGUGAGACCGCGCGGCAACAGCUUGCGGCUGCGGGGAGCUCCCGUGGGCGCUCCGCUGGCUGUGCAGGCGGCCAUGGAUUCCUUGCGGAAAAUGCUGAUCUCAGUCGCAAUGCUGGGCGCAGGGGCUGGCGUGGGCUACGCGCUCCUCGUUAUCGUGACCCCGGGAGAGCGGC\
) } def
/len { sequence length } bind def

/coor [
[185.09759521 271.75427246]
[185.12561035 267.37783813]
[177.24133301 254.61703491]
[169.35707092 241.85621643]
[161.47279358 229.09541321]
[153.58853149 216.33459473]
[145.70426941 203.57377625]
[137.81999207 190.81297302]
[129.93572998 178.05215454]
[122.05146027 165.29135132]
[114.16719818 152.53053284]
[106.28292847 139.76972961]
[98.39865875 127.00891113]
[90.92869568 126.33835602]
[82.29754639 138.60632324]
[75.98876953 124.99723816]
[68.51880646 124.32668304]
[58.48789978 135.47929382]
[48.45698929 146.63191223]
[49.54286194 162.39884949]
[39.09892654 174.26054382]
[23.32138824 175.17965698]
[11.57077694 164.61090088]
[10.81852245 148.82452393]
[21.51092529 137.18630981]
[37.30437088 136.60099792]
[47.33528137 125.44838715]
[57.36619186 114.29576874]
[89.53224945 89.76340485]
[83.14997864 76.18891907]
[70.27622223 66.99234009]
[71.86295319 52.18249130]
[65.48068237 38.60800934]
[59.09841537 25.03352356]
[52.71614456 11.45903873]
[46.33387375 -2.11544514]
[38.79413223 10.85191059]
[23.98019600 13.20717239]
[12.79054260 3.21759510]
[13.45730114 -11.76757908]
[25.48994255 -20.72389030]
[40.03520203 -17.06305313]
[34.77764511 -31.11147308]
[29.52008820 -45.15989304]
[24.26252937 -59.20831299]
[19.00497246 -73.25672913]
[13.74741554 -87.30515289]
[8.48985767 -101.35356903]
[3.23230028 -115.40199280]
[-2.02525735 -129.45040894]
[-14.10872650 -139.66316223]
[-11.32322788 -154.29498291]
[-16.58078575 -168.34341431]
[-30.68640518 -174.95167542]
[-35.81819153 -189.27366638]
[-29.43128586 -202.68049622]
[-34.68884277 -216.72891235]
[-39.94639969 -230.77732849]
[-58.64038086 -238.10194397]
[-65.83293152 -256.52041626]
[-57.31616211 -274.02703857]
[-63.25320435 -287.80206299]
[-69.19024658 -301.57708740]
[-75.12729645 -315.35214233]
[-81.06433868 -329.12716675]
[-87.00138092 -342.90219116]
[-92.93843079 -356.67721558]
[-107.93782806 -360.18780518]
[-117.87780762 -371.72256470]
[-119.10520935 -386.72113037]
[-111.35822296 -399.41452026]
[-117.29526520 -413.18957520]
[-123.23230743 -426.96459961]
[-129.16935730 -440.73962402]
[-135.44934082 -447.39422607]
[-135.08889771 -454.78753662]
[-140.80094910 -468.65737915]
[-146.51298523 -482.52722168]
[-152.22503662 -496.39706421]
[-157.93707275 -510.26690674]
[-163.64910889 -524.13671875]
[-169.36116028 -538.00659180]
[-182.67433167 -547.58215332]
[-180.76922607 -563.87030029]
[-165.60565186 -570.11511230]
[-152.78259277 -559.89251709]
[-155.49131775 -543.71862793]
[-149.77926636 -529.84881592]
[-144.06723022 -515.97894287]
[-138.35517883 -502.10910034]
[-132.64314270 -488.23925781]
[-126.93109894 -474.36941528]
[-121.21906281 -460.49957275]
[-115.39432526 -446.67666626]
[-109.45727539 -432.90164185]
[-103.52023315 -419.12661743]
[-97.58319092 -405.35156250]
[-83.03590393 -402.26702881]
[-72.97537231 -391.07553101]
[-71.41566467 -375.92889404]
[-79.16339874 -362.61428833]
[-73.22634888 -348.83923340]
[-67.28930664 -335.06420898]
[-61.35226059 -321.28918457]
[-55.41521835 -307.51416016]
[-49.47817230 -293.73910522]
[-43.54113007 -279.96408081]
[-33.30772781 -278.87615967]
[-24.38368034 -273.59054565]
[-18.41923904 -265.00650024]
[-16.54965401 -254.64015198]
[-19.17960739 -244.35668945]
[-25.89798164 -236.03489685]
[-20.64042473 -221.98648071]
[-15.38286686 -207.93804932]
[-1.76318812 -202.01860046]
[3.76884794 -187.84640503]
[-2.53236604 -173.60096741]
[2.72519135 -159.55255127]
[14.43260479 -150.34463501]
[12.02316189 -134.70796204]
[17.28071976 -120.65954590]
[22.53827667 -106.61112976]
[27.79583549 -92.56270599]
[33.05339050 -78.51428986]
[38.31095123 -64.46586609]
[43.56850815 -50.41744995]
[48.82606506 -36.36903000]
[54.08362198 -22.32061195]
[59.90835953 -8.49771595]
[66.29062653 5.07676840]
[72.67289734 18.65125275]
[79.05516815 32.22573853]
[85.43743896 45.80022049]
[97.85469055 54.02586365]
[96.72446442 69.80664825]
[103.10673523 83.38113403]
[116.17773438 90.73972321]
[131.09385681 89.15560913]
[144.02484131 79.06989288]
[159.12118530 85.47555542]
[160.85305786 101.78299713]
[147.43885803 111.21652222]
[132.67796326 104.07172394]
[117.76184845 105.65583801]
[111.15946960 119.12464142]
[119.04373932 131.88545227]
[126.92800903 144.64627075]
[134.81227112 157.40707397]
[142.69654846 170.16789246]
[150.58081055 182.92871094]
[158.46507263 195.68951416]
[166.34934998 208.45033264]
[174.23361206 221.21113586]
[182.11787415 233.97195435]
[190.00215149 246.73275757]
[197.88641357 259.49359131]
[206.18186951 271.99099731]
[214.87969971 284.21179199]
[223.57754517 296.43255615]
[237.88337708 303.18930054]
[238.95964050 318.04498291]
[247.65748596 330.26577759]
[256.35531616 342.48654175]
[265.05316162 354.70733643]
[273.75100708 366.92813110]
[292.44168091 374.45285034]
[293.47436523 393.75262451]
[302.56539917 405.68383789]
[311.65640259 417.61502075]
[320.74740601 429.54623413]
[335.15634155 438.48040771]
[330.56011963 454.79943848]
[313.60647583 454.90039062]
[308.81622314 438.63723755]
[299.72518921 426.70605469]
[290.63418579 414.77484131]
[281.54318237 402.84365845]
[271.31649780 402.38854980]
[262.85577393 396.24401855]
[259.10418701 386.24853516]
[261.53021240 375.62594604]
[252.83238220 363.40518188]
[244.13453674 351.18438721]
[235.43669128 338.96359253]
[226.73886108 326.74282837]
[213.05514526 320.86019897]
[211.35676575 305.13040161]
[202.65892029 292.90960693]
[193.96107483 280.68884277]
[191.20648193 280.09616089]
[188.52267456 278.36828613]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 157]
[3 156]
[4 155]
[5 154]
[6 153]
[7 152]
[8 151]
[9 150]
[10 149]
[11 148]
[12 147]
[13 146]
[17 28]
[18 27]
[19 26]
[29 137]
[30 136]
[32 134]
[33 133]
[34 132]
[35 131]
[36 130]
[42 129]
[43 128]
[44 127]
[45 126]
[46 125]
[47 124]
[48 123]
[49 122]
[50 121]
[52 119]
[53 118]
[56 115]
[57 114]
[58 113]
[61 107]
[62 106]
[63 105]
[64 104]
[65 103]
[66 102]
[67 101]
[71 97]
[72 96]
[73 95]
[74 94]
[76 93]
[77 92]
[78 91]
[79 90]
[80 89]
[81 88]
[82 87]
[138 145]
[139 144]
[158 190]
[159 189]
[160 188]
[162 186]
[163 185]
[164 184]
[165 183]
[166 182]
[168 178]
[169 177]
[170 176]
[171 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
