%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:42:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCAGCUGCCGGUCUUUCGGGGGCUCCGUAACUUUCUAUCCGUCCGCGUCAGCGCCUUGCCACCCUCAUCUCCAAUAUGCCUGGUCCGACCCCCAGUGGCACUAACGUGGGAUCCUCAGGGCGCUCUCCCAGCAAAGCAGUGGCCGCCCGGGCGGCGGGAUCCACUGUCCGGCAGA\
) } def
/len { sequence length } bind def

/coor [
[110.97700500 279.03201294]
[95.94721985 283.34936523]
[81.67967987 276.94848633]
[74.91106415 262.85168457]
[78.83732605 247.71502686]
[91.60459137 238.68557739]
[92.66864014 223.72337341]
[93.73269653 208.76115417]
[94.79674530 193.79895020]
[95.86080170 178.83673096]
[96.92485046 163.87452698]
[97.98890686 148.91230774]
[90.37626648 147.20391846]
[83.25271606 144.33886719]
[76.78926086 140.42846680]
[71.13414764 135.60853577]
[66.40943146 130.03492737]
[62.70849228 123.87881470]
[48.88881302 129.71118164]
[39.18299866 142.20549011]
[24.44876099 140.02569580]
[10.62908173 145.85804749]
[-3.19059849 151.69041443]
[-17.01027870 157.52278137]
[-20.62011528 170.51846313]
[-30.91187477 178.93167114]
[-43.97727203 179.85746765]
[-55.01910400 173.18101501]
[-68.94012451 178.76718140]
[-82.86113739 184.35336304]
[-88.83952332 198.98327637]
[-103.44392395 205.02371216]
[-118.00981903 198.89099121]
[-123.89551544 184.22354126]
[-117.60913086 169.72329712]
[-102.88027191 163.99301147]
[-88.44731140 170.43234253]
[-74.52629089 164.84617615]
[-60.60527420 159.25999451]
[-54.67795181 143.53639221]
[-38.90811920 136.81854248]
[-22.84263992 143.70309448]
[-9.02296066 137.87074280]
[4.79671860 132.03837585]
[18.61639786 126.20600891]
[27.33373642 114.12887573]
[43.05644989 115.89150238]
[56.87612915 110.05913544]
[57.80464172 86.56847382]
[70.62605286 66.86352539]
[91.72661591 56.49821091]
[91.46039581 41.50057602]
[91.19417572 26.50293732]
[90.92794800 11.50529957]
[90.66172791 -3.49233723]
[90.39550781 -18.48997498]
[90.12928009 -33.48761368]
[89.86306000 -48.48524857]
[89.59683990 -63.48288727]
[75.79995728 -69.91775513]
[66.20424652 -81.65697479]
[62.67148590 -96.33824921]
[65.85029602 -111.03709412]
[75.05783844 -122.84941101]
[88.42559052 -129.46519470]
[88.15936279 -144.46284485]
[87.89314270 -159.46047974]
[87.62692261 -174.45811462]
[87.36069489 -189.45574951]
[75.56663513 -193.53527832]
[65.61982727 -201.03146362]
[58.47656631 -211.20475769]
[54.81776810 -223.05917358]
[54.98413086 -235.43975830]
[58.94443130 -247.14518738]
[66.30004120 -257.04421997]
[76.32498169 -264.18518066]
[88.03757477 -267.88726807]
[88.56993866 -282.87780762]
[89.10230255 -297.86834717]
[89.63465881 -312.85891724]
[89.90088654 -327.85653687]
[89.90088654 -342.85653687]
[89.90088654 -357.85653687]
[77.26862335 -366.86795044]
[72.37763214 -381.59405518]
[77.10858917 -396.37234497]
[89.64234924 -405.52026367]
[105.15942383 -405.52026367]
[117.69318390 -396.37234497]
[122.42414093 -381.59405518]
[117.53314209 -366.86795044]
[104.90088654 -357.85653687]
[104.90088654 -342.85653687]
[104.90088654 -327.85653687]
[107.60704803 -323.88690186]
[107.82696533 -318.16870117]
[104.62521362 -312.32653809]
[104.09284973 -297.33599854]
[103.56048584 -282.34542847]
[103.02812958 -267.35488892]
[118.95772552 -259.73309326]
[129.99905396 -245.88389587]
[133.90365601 -228.55361938]
[129.84420776 -211.20475769]
[118.58928680 -197.32408142]
[102.35833740 -189.72196960]
[102.62455750 -174.72433472]
[102.89077759 -159.72669983]
[103.15700531 -144.72906494]
[103.42322540 -129.73143005]
[117.01735687 -123.59423065]
[126.63832092 -112.11614227]
[130.33680725 -97.53937531]
[127.32731628 -82.74196625]
[118.15428162 -70.66958618]
[104.59447479 -63.74911118]
[104.86069489 -48.75147247]
[105.12692261 -33.75383377]
[105.39314270 -18.75619698]
[105.65936279 -3.75855994]
[105.92559052 11.23907757]
[106.19181061 26.23671532]
[106.45803070 41.23435211]
[106.72425842 56.23199081]
[114.54096222 57.76200867]
[122.02359009 60.68861389]
[128.92259216 64.94081116]
[135.00320435 70.40303040]
[140.05345154 76.91815186]
[143.89143372 84.29198456]
[146.37182617 92.29901886]
[147.39125061 100.68930817]
[146.89236450 109.19625092]
[144.86642456 117.54508972]
[141.35443115 125.46176147]
[136.44656372 132.68190002]
[147.90866089 142.35766602]
[159.37074280 152.03343201]
[170.83283997 161.70919800]
[182.29493713 171.38496399]
[193.75703430 181.06072998]
[205.21913147 190.73648071]
[216.93472290 200.10369873]
[228.89553833 209.15570068]
[240.85635376 218.20771790]
[252.81716919 227.25973511]
[264.77798462 236.31173706]
[280.80270386 235.54502869]
[291.28475952 247.69024658]
[288.18316650 263.43063354]
[273.87725830 270.69152832]
[259.34127808 263.90295410]
[255.72596741 248.27255249]
[243.76516724 239.22055054]
[231.80435181 230.16853333]
[219.84353638 221.11651611]
[207.88272095 212.06451416]
[204.32977295 212.19769287]
[200.53747559 210.59687805]
[197.33059692 207.16943359]
[195.54336548 202.19857788]
[184.08126831 192.52281189]
[172.61917114 182.84706116]
[161.15707397 173.17129517]
[149.69497681 163.49552917]
[138.23289490 153.81976318]
[126.77079773 144.14399719]
[112.95111847 149.97636414]
[111.88706207 164.93856812]
[110.82301331 179.90078735]
[109.75895691 194.86300659]
[108.69490814 209.82521057]
[107.63085175 224.78742981]
[106.56680298 239.74963379]
[117.92776489 250.49497986]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 175]
[7 174]
[8 173]
[9 172]
[10 171]
[11 170]
[12 169]
[18 48]
[19 47]
[21 45]
[22 44]
[23 43]
[24 42]
[28 39]
[29 38]
[30 37]
[51 125]
[52 124]
[53 123]
[54 122]
[55 121]
[56 120]
[57 119]
[58 118]
[59 117]
[65 111]
[66 110]
[67 109]
[68 108]
[69 107]
[78 101]
[79 100]
[80 99]
[81 98]
[82 95]
[83 94]
[84 93]
[137 168]
[138 167]
[139 166]
[140 165]
[141 164]
[142 163]
[143 162]
[144 158]
[145 157]
[146 156]
[147 155]
[148 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
