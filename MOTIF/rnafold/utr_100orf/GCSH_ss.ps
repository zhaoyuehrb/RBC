%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:58:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCCGGCUCCCUCCGGCCGCGAACUGCCCCUCCCCGCCCCGCCUCCCGGCGCGGGUGGCCGAGGCGUAGCGCUGCGACCCCCGCACCCCUGCGAACAUGGCGCUGCGAGUGGUGCGGAGCGUGCGGGCCCUGCUCUGCACCCUGCGCGCGGUCCCGUCACCCGCCGCGCCCUGCCCGCCGAGGCCCUGGCAGCUGG\
) } def
/len { sequence length } bind def

/coor [
[62.77593231 359.83685303]
[46.39535904 359.05654907]
[39.12236023 344.35839844]
[48.43877029 330.86260986]
[49.15250015 315.87960815]
[49.86622620 300.89657593]
[50.57995605 285.91357422]
[51.29368591 270.93057251]
[52.00741196 255.94755554]
[44.88446426 242.86654663]
[53.26964188 229.45016479]
[53.98336792 214.46714783]
[44.06340790 206.23406982]
[40.64891052 193.60128784]
[45.20392609 181.12609863]
[56.27479935 173.44346619]
[57.22615814 158.47366333]
[58.17751694 143.50387573]
[59.12887573 128.53407288]
[48.35532379 118.09709167]
[33.42324448 119.52292633]
[18.49116707 120.94876862]
[12.87856483 124.47560883]
[7.18367147 124.61019897]
[3.06386352 122.17523956]
[-11.90593624 123.12660217]
[-26.87573624 124.07795715]
[-41.84553528 125.02931976]
[-55.12719345 133.62629700]
[-68.31957245 126.71179199]
[-83.28937531 127.66314697]
[-98.25917053 128.61450195]
[-113.22897339 129.56587219]
[-128.31254578 140.11981201]
[-143.72215271 131.73220825]
[-158.67497253 132.92095947]
[-173.62779236 134.10971069]
[-188.58061218 135.29844666]
[-203.53343201 136.48719788]
[-218.48625183 137.67594910]
[-233.42918396 138.98329163]
[-248.36125183 140.40913391]
[-263.29333496 141.83497620]
[-278.22540283 143.26080322]
[-291.26263428 153.20881653]
[-306.29019165 146.64343262]
[-307.84902954 130.31854248]
[-294.33554077 121.02780151]
[-279.65124512 128.32873535]
[-264.71917725 126.90289307]
[-249.78709412 125.47705078]
[-234.85501099 124.05120850]
[-228.48849487 120.28182220]
[-219.67500305 122.72312927]
[-204.72218323 121.53437805]
[-189.76936340 120.34563446]
[-174.81654358 119.15688324]
[-159.86372375 117.96813202]
[-144.91090393 116.77938080]
[-136.82028198 107.77768707]
[-124.36519623 106.67069244]
[-114.18032837 114.59606934]
[-99.21053314 113.64470673]
[-84.24073029 112.69335175]
[-69.27093506 111.74198914]
[-57.06001282 103.21305084]
[-42.79689407 110.05951691]
[-27.82709503 109.10815430]
[-12.85729504 108.15679932]
[2.11250472 107.20543671]
[17.06532669 106.01669312]
[31.99740601 104.59085083]
[46.92948532 103.16500854]
[53.26875687 89.57038879]
[44.76285934 77.21524048]
[36.25696182 64.86009216]
[27.75106430 52.50494766]
[12.29874134 48.19156265]
[6.16962624 33.36545181]
[14.06545067 19.39994240]
[29.92921448 17.00817299]
[41.59159470 28.02490616]
[40.10621262 43.99904633]
[48.61211014 56.35419846]
[57.11800766 68.70934296]
[65.62390900 81.06449127]
[74.57419586 72.02280426]
[85.57193756 66.62174225]
[97.26676178 65.18556976]
[108.32546997 67.57167816]
[117.58358765 73.21796417]
[124.16790771 81.23622894]
[137.90953064 75.22226715]
[151.65116882 69.20831299]
[157.48234558 54.76410675]
[171.50398254 48.86085510]
[185.23838806 54.50901794]
[198.98001099 48.49505997]
[208.52035522 35.87394333]
[223.28202820 37.85939789]
[237.02366638 31.84543991]
[250.76528931 25.83148193]
[264.50692749 19.81752396]
[278.24853516 13.80356503]
[287.78887939 1.18244851]
[302.55056763 3.16790271]
[316.29217529 -2.84605527]
[330.03381348 -8.86001301]
[339.57415771 -21.48113060]
[354.33581543 -19.49567604]
[368.07745361 -25.50963402]
[381.81909180 -31.52359200]
[395.56069946 -37.53754807]
[409.30233765 -43.55150604]
[423.04397583 -49.56546402]
[429.65969849 -55.87972260]
[437.05163574 -55.56390762]
[450.88696289 -61.35908508]
[464.72229004 -67.15425873]
[478.46389771 -73.16822052]
[492.10836792 -79.39944458]
[505.75286865 -85.63066864]
[519.39733887 -91.86189270]
[533.04180908 -98.09311676]
[546.68627930 -104.32434082]
[560.33081055 -110.55557251]
[573.97528076 -116.78679657]
[587.61975098 -123.01802063]
[590.83050537 -133.42439270]
[599.07263184 -140.20162964]
[609.46636963 -141.29478455]
[618.54797363 -136.58265686]
[632.38323975 -142.37782288]
[646.21856689 -148.17300415]
[658.49188232 -159.86924744]
[673.12860107 -151.31341553]
[668.95904541 -134.88018799]
[652.01373291 -134.33769226]
[638.17846680 -128.54251099]
[624.34313965 -122.74733734]
[613.80279541 -106.54394531]
[593.85095215 -109.37354279]
[580.20648193 -103.14231873]
[566.56201172 -96.91108704]
[552.91754150 -90.67986298]
[539.27307129 -84.44863892]
[525.62854004 -78.21741486]
[511.98410034 -71.98619080]
[498.33959961 -65.75496674]
[484.69512939 -59.52373886]
[482.21368408 -55.43177032]
[477.13031006 -52.86087418]
[470.51745605 -53.31894684]
[456.68212891 -47.52376938]
[442.84683228 -41.72859192]
[429.05792236 -35.82383728]
[415.31628418 -29.80988121]
[401.57467651 -23.79592323]
[387.83303833 -17.78196526]
[374.09140015 -11.76800728]
[360.34979248 -5.75404882]
[351.79235840 6.43690920]
[336.04776001 4.88161373]
[322.30615234 10.89557171]
[308.56451416 16.90952873]
[300.00708008 29.10048866]
[284.26251221 27.54519272]
[270.52087402 33.55915070]
[256.77923584 39.57310867]
[243.03761292 45.58706665]
[229.29598999 51.60102463]
[220.73855591 63.79198074]
[204.99397278 62.23668671]
[191.25234985 68.25064087]
[186.08251953 82.17215729]
[172.23222351 88.46691895]
[157.66511536 82.94993591]
[143.92349243 88.96389771]
[130.18186951 94.97785187]
[129.50889587 114.22638702]
[116.97019958 130.52093506]
[96.05201721 136.87315369]
[74.09867859 129.48542786]
[73.14731598 144.45523071]
[72.19596100 159.42503357]
[71.24459839 174.39483643]
[83.04212952 187.30448914]
[81.88109589 204.41580200]
[68.96637726 215.18087769]
[68.25264740 230.16389465]
[75.32454681 244.31658936]
[66.99042511 256.66128540]
[66.27669525 271.64428711]
[65.56296539 286.62731934]
[64.84923553 301.61032104]
[64.13550568 316.59332275]
[63.42177963 331.57632446]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 197]
[5 196]
[6 195]
[7 194]
[8 193]
[9 192]
[11 190]
[12 189]
[16 186]
[17 185]
[18 184]
[19 183]
[20 73]
[21 72]
[22 71]
[25 70]
[26 69]
[27 68]
[28 67]
[30 65]
[31 64]
[32 63]
[33 62]
[35 59]
[36 58]
[37 57]
[38 56]
[39 55]
[40 54]
[41 52]
[42 51]
[43 50]
[44 49]
[74 86]
[75 85]
[76 84]
[77 83]
[92 179]
[93 178]
[94 177]
[97 174]
[98 173]
[100 171]
[101 170]
[102 169]
[103 168]
[104 167]
[106 165]
[107 164]
[108 163]
[110 161]
[111 160]
[112 159]
[113 158]
[114 157]
[115 156]
[117 155]
[118 154]
[119 153]
[120 150]
[121 149]
[122 148]
[123 147]
[124 146]
[125 145]
[126 144]
[127 143]
[128 142]
[132 140]
[133 139]
[134 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
