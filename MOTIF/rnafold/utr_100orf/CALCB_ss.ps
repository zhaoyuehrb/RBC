%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:06:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGGUGUGGUGUUCAUCCCGGGUCGACCGGCCGCUCGCGCUGCCCUGAAACUCUAGUCGCCAGAGAGGCGGCAUGGGUUUCCGGAAGUUCUCCCCCUUCCUGGCUCUCAGUAUCUUGGUCCUGUACCAGGCGGGCAGCCUCCAGGCGGCGCCAUUCAGGUCUGCCCUGGAGA\
) } def
/len { sequence length } bind def

/coor [
[59.22575378 238.69590759]
[49.31014252 249.95115662]
[45.96918488 258.49072266]
[39.11247253 261.31802368]
[28.99526978 272.39239502]
[25.50068474 280.87026978]
[18.59404373 283.57330322]
[8.27855301 294.46322632]
[-2.03693914 305.35317993]
[-12.35243130 316.24310303]
[2.60570288 315.12316895]
[15.43816566 322.89028931]
[21.38281631 336.66204834]
[18.23358727 351.32772827]
[7.15916252 361.44488525]
[-7.73072767 363.25906372]
[-20.91042900 356.09695435]
[-27.48893929 342.61648560]
[-25.02503204 327.82037354]
[-36.80059433 337.11209106]
[-48.57615662 346.40383911]
[-60.35171509 355.69555664]
[-63.65060425 371.39578247]
[-78.04652405 378.47653198]
[-92.49617004 371.50604248]
[-95.91499329 355.83151245]
[-85.68038177 343.47705078]
[-69.64344025 343.91998291]
[-57.86788177 334.62826538]
[-46.09231949 325.33654785]
[-34.31675720 316.04483032]
[-23.24236298 305.92761230]
[-12.92687130 295.03768921]
[-2.61137962 284.14773560]
[7.70411205 273.25781250]
[17.92087555 262.27520752]
[28.03807831 251.20080566]
[38.05489349 240.03553772]
[47.97050858 228.78028870]
[82.06543732 214.93263245]
[83.41773224 199.99371338]
[84.77002716 185.05479431]
[86.12232971 170.11587524]
[87.47462463 155.17695618]
[88.82691956 140.23803711]
[90.17921448 125.29911804]
[74.52628326 109.35858154]
[76.13666534 87.07581329]
[65.43474579 76.56539154]
[54.73283005 66.05497742]
[44.03091049 55.54455566]
[33.32898712 45.03413773]
[22.62706947 34.52371979]
[11.92514896 24.01329994]
[-3.65165973 23.98522186]
[-14.35520363 13.17370892]
[-14.23244095 -1.67622447]
[-24.93436050 -12.18664360]
[-35.63628006 -22.69706345]
[-46.33819962 -33.20748138]
[-57.04011917 -43.71789932]
[-67.74204254 -54.22832108]
[-83.73285675 -55.52188873]
[-92.57173157 -68.91046143]
[-87.47822571 -84.12347412]
[-72.35964966 -89.49080658]
[-58.81367874 -80.89509583]
[-57.23162079 -64.93023682]
[-46.52970123 -54.41981888]
[-35.82778168 -43.90940094]
[-25.12586212 -33.39898300]
[-14.42394161 -22.88856316]
[-3.72202182 -12.37814426]
[11.12327480 -12.76899052]
[22.12626839 -2.26238346]
[22.43556786 13.31137943]
[33.13748932 23.82179832]
[43.83940887 34.33221817]
[54.54132843 44.84263611]
[65.24324799 55.35305405]
[75.94516754 65.86347198]
[86.64708710 76.37389374]
[83.25926208 61.87066269]
[82.71147156 46.58138275]
[85.67102051 31.87624741]
[88.63056946 17.17111015]
[91.59012604 2.46597242]
[94.54967499 -12.23916531]
[83.94371796 -23.56582832]
[82.05437469 -38.96745300]
[89.60813904 -52.52179718]
[103.70043182 -59.01694107]
[118.91247559 -55.95537186]
[129.39494324 -44.51432037]
[131.11709595 -29.09310722]
[123.41673279 -15.62150383]
[109.25480652 -9.27961445]
[106.29525757 5.42552233]
[103.33570862 20.13065910]
[100.37615967 34.83579636]
[97.41661072 49.54093552]
[104.07439423 52.99403381]
[117.38996124 59.90023804]
[124.04774475 63.35334015]
[134.36323547 52.46340561]
[144.67872620 41.57347488]
[151.18167114 25.91627121]
[168.02719116 27.83073616]
[170.85084534 44.54789352]
[155.56866455 51.88896561]
[145.25317383 62.77890015]
[134.93768311 73.66883087]
[138.80433655 80.09526062]
[146.53764343 92.94812012]
[150.40429688 99.37454987]
[164.85754395 95.36161804]
[179.31079102 91.34869385]
[193.76403809 87.33576965]
[208.21730042 83.32284546]
[222.67054749 79.30992126]
[231.78620911 66.10825348]
[247.80049133 65.14785004]
[258.42858887 77.16545868]
[255.51756287 92.94219971]
[241.30047607 100.37549591]
[226.68347168 93.76316833]
[212.23022461 97.77609253]
[197.77696228 101.78902435]
[183.32371521 105.80194855]
[168.87046814 109.81487274]
[154.41722107 113.82779694]
[128.56269836 130.30297852]
[105.11813354 126.65141296]
[103.76583862 141.59033203]
[102.41354370 156.52925110]
[101.06124878 171.46817017]
[99.70894623 186.40708923]
[98.35665131 201.34600830]
[97.00435638 216.28492737]
[101.14759827 230.70135498]
[110.22520447 242.64276123]
[119.30281830 254.58415222]
[128.38043213 266.52554321]
[137.45805359 278.46694946]
[146.53565979 290.40835571]
[155.61328125 302.34973145]
[164.79832458 314.20870972]
[174.09004211 325.98425293]
[183.38177490 337.75982666]
[191.18257141 342.57992554]
[192.73265076 349.83288574]
[201.81025696 361.77429199]
[210.88787842 373.71569824]
[226.52597046 377.29748535]
[233.34565735 391.81890869]
[226.11544800 406.14035034]
[210.38174438 409.27563477]
[198.21409607 398.81964111]
[198.94647217 382.79330444]
[189.86886597 370.85189819]
[180.79124451 358.91052246]
[171.60620117 347.05154419]
[162.31448364 335.27597046]
[153.02275085 323.50042725]
[146.38792419 320.18572998]
[143.67187500 311.42733765]
[134.59426880 299.48596191]
[125.51665497 287.54455566]
[116.43904114 275.60314941]
[107.36142731 263.66177368]
[98.28381348 251.72036743]
[89.20619965 239.77897644]
[81.71109009 239.50820923]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 39]
[2 38]
[4 37]
[5 36]
[7 35]
[8 34]
[9 33]
[10 32]
[19 31]
[20 30]
[21 29]
[22 28]
[40 139]
[41 138]
[42 137]
[43 136]
[44 135]
[45 134]
[46 133]
[48 82]
[49 81]
[50 80]
[51 79]
[52 78]
[53 77]
[54 76]
[57 73]
[58 72]
[59 71]
[60 70]
[61 69]
[62 68]
[84 101]
[85 100]
[86 99]
[87 98]
[88 97]
[104 112]
[105 111]
[106 110]
[115 131]
[116 130]
[117 129]
[118 128]
[119 127]
[120 126]
[140 172]
[141 171]
[142 170]
[143 169]
[144 168]
[145 167]
[146 166]
[147 164]
[148 163]
[149 162]
[151 161]
[152 160]
[153 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
