%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:54:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCAGAACCGGUGGAGCAGCGACCCCUGAGCAGUGUUCUCUGUGCUGAGCGGCGGGACUGAGCUGUUGAGUUAGAGCCAACAUGAGUGAGCGACAAGGUGCUGGGGCAACCAAUGGAAAAGACAAGACAUCUGGUGAAAAUGAUGGACAGAAGAAAGUUCAAGAAGAAUUUGACAUUGACA\
) } def
/len { sequence length } bind def

/coor [
[-60.04655075 78.02635956]
[-62.75592422 62.29011917]
[-77.25592041 58.44953537]
[-91.75592041 54.60894775]
[-106.25591278 50.76836014]
[-121.57712555 54.71436691]
[-131.89910889 43.97629929]
[-146.39909363 40.13571167]
[-160.89909363 36.29512787]
[-172.43907166 42.09419250]
[-184.44903564 38.57859421]
[-190.63000488 28.16152191]
[-205.06153870 24.07122803]
[-218.74354553 31.51706123]
[-233.32092285 27.16333771]
[-240.33506775 14.07374859]
[-254.76661682 9.98345566]
[-272.49606323 14.91365528]
[-284.23944092 1.88779461]
[-298.73944092 -1.95279169]
[-302.61996460 3.43682694]
[-307.55612183 7.85681391]
[-313.31304932 11.10576057]
[-319.61874390 13.03775883]
[-326.17684937 13.56894875]
[-332.68072510 12.68113422]
[-338.82757568 10.42232323]
[-344.33279419 6.90418482]
[-348.94287109 2.29654312]
[-352.44732666 -3.18081212]
[-354.68807983 -9.26860237]
[-355.56677246 -15.68033409]
[-355.04895020 -22.11577797]
[-368.67379761 -28.38979340]
[-382.29867554 -34.66381073]
[-395.92352295 -40.93782806]
[-409.54837036 -47.21184540]
[-423.27951050 -53.24975204]
[-437.11279297 -59.04975510]
[-450.94607544 -64.84975433]
[-464.77938843 -70.64975739]
[-478.61267090 -76.44976044]
[-487.76324463 -76.88597870]
[-492.63330078 -82.47110748]
[-506.36441040 -88.50901794]
[-520.09552002 -94.54692078]
[-535.84277344 -93.01908112]
[-544.37896729 -105.22494507]
[-558.11010742 -111.26284790]
[-571.84118652 -117.30075836]
[-585.57232666 -123.33866882]
[-599.30346680 -129.37657166]
[-613.03454590 -135.41448975]
[-626.36853027 -127.47815704]
[-641.81768799 -128.92855835]
[-653.44146729 -139.20797729]
[-656.77038574 -154.36376953]
[-650.52435303 -168.56822205]
[-637.10510254 -176.35943604]
[-621.67260742 -174.74153137]
[-610.16094971 -164.33662415]
[-606.99664307 -149.14559937]
[-593.26556396 -143.10769653]
[-579.53442383 -137.06979370]
[-565.80328369 -131.03187561]
[-552.07220459 -124.99397278]
[-538.34106445 -118.95606232]
[-523.57592773 -120.91577911]
[-514.05761719 -108.27804565]
[-500.32650757 -102.24013519]
[-486.59539795 -96.20222473]
[-472.81265259 -90.28305054]
[-458.97937012 -84.48304749]
[-445.14608765 -78.68305206]
[-431.31277466 -72.88304901]
[-417.47949219 -67.08304596]
[-412.77670288 -68.04151154]
[-407.42382812 -66.03758240]
[-403.27435303 -60.83670044]
[-389.64950562 -54.56268311]
[-376.02465820 -48.28866577]
[-362.39978027 -42.01465225]
[-348.77493286 -35.74063492]
[-327.54940796 -46.94242477]
[-304.66946411 -38.91456985]
[-294.89886475 -16.45278740]
[-280.39886475 -12.61220169]
[-269.76989746 -18.42124176]
[-257.64602661 -15.32113838]
[-250.67631531 -4.44808960]
[-236.24478149 -0.35779631]
[-223.40557861 -7.82040644]
[-208.71166992 -3.87784982]
[-200.97125244 9.63968277]
[-186.53970337 13.72997570]
[-169.79557800 8.51327324]
[-157.05851746 21.79512978]
[-142.55851746 25.63571739]
[-128.05851746 29.47630310]
[-113.77443695 25.25559425]
[-102.41532898 36.26836395]
[-87.91532898 40.10895157]
[-73.41533661 43.94953918]
[-58.91533661 47.79012299]
[-50.41567230 36.80841446]
[-38.33190155 29.87800598]
[-24.47515297 28.07575607]
[-10.93688297 31.70703697]
[0.22678158 40.25458527]
[7.30732203 52.45191193]
[9.20526409 66.47087097]
[23.63680840 70.56116486]
[38.06835556 74.65145874]
[52.49990082 78.74175262]
[66.93144226 82.83204651]
[70.18422699 76.44142914]
[74.68154144 70.67804718]
[80.30004120 65.78561401]
[86.86851501 61.98310852]
[94.17290497 59.45534897]
[101.96324921 58.34463882]
[109.96214294 58.74378586]
[117.87469482 60.69087601]
[125.39935303 64.16603088]
[132.23934937 69.09029388]
[138.11433411 75.32685852]
[142.77168274 82.68449402]
[145.99707031 90.92327881]
[160.99707031 90.92327881]
[175.99707031 90.92327881]
[190.99707031 90.92327881]
[198.60693359 77.58215332]
[211.87590027 69.84718323]
[227.23472595 69.79904175]
[240.55194092 77.45067596]
[248.24526978 90.74383545]
[248.24526978 106.10272217]
[240.55194092 119.39588165]
[227.23472595 127.04751587]
[211.87590027 126.99937439]
[198.60693359 119.26440430]
[190.99707031 105.92327881]
[175.99707031 105.92327881]
[160.99707031 105.92327881]
[145.99707031 105.92327881]
[142.68475342 112.65220642]
[156.14260864 119.27686310]
[169.60046387 125.90151215]
[184.44676208 128.04341125]
[186.99725342 142.82498169]
[173.72720337 149.81825256]
[162.97581482 139.35937500]
[149.51795959 132.73472595]
[136.06008911 126.11006927]
[132.74777222 132.83898926]
[141.89630127 144.72615051]
[151.04483032 156.61329651]
[160.19335938 168.50045776]
[169.34188843 180.38760376]
[178.49041748 192.27476501]
[194.14956665 195.76341248]
[201.05555725 210.24398804]
[193.91072083 224.60820007]
[178.19595337 227.83708191]
[165.96627808 217.45368958]
[166.60327148 201.42329407]
[157.45474243 189.53613281]
[148.30621338 177.64898682]
[139.15766907 165.76182556]
[130.00914001 153.87467957]
[120.86061859 141.98753357]
[89.58858490 142.41679382]
[67.26042175 123.78556061]
[62.84115219 97.26359558]
[48.40960693 93.17330170]
[33.97806168 89.08300781]
[19.54651642 84.99271393]
[5.11497021 80.90242004]
[-5.56567669 93.16052246]
[-20.46696854 99.51676178]
[-36.59080505 98.74736023]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 104]
[3 103]
[4 102]
[5 101]
[7 99]
[8 98]
[9 97]
[12 95]
[13 94]
[16 91]
[17 90]
[19 87]
[20 86]
[33 83]
[34 82]
[35 81]
[36 80]
[37 79]
[38 76]
[39 75]
[40 74]
[41 73]
[42 72]
[44 71]
[45 70]
[46 69]
[48 67]
[49 66]
[50 65]
[51 64]
[52 63]
[53 62]
[111 178]
[112 177]
[113 176]
[114 175]
[115 174]
[128 145]
[129 144]
[130 143]
[131 142]
[155 171]
[156 170]
[157 169]
[158 168]
[159 167]
[160 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
