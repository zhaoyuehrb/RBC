%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:45:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACCUUCUGCACUGCUCAUCUGGGCAGAGGAAGCUUCAGAAAGCUGCCAAGGCACCAUCUCCAGGAACUCCCAGCACGCAGAAUCCAUCUGAGAAUAUGCUGCCACAAAUACCCUUUUUGCUGCUAGUAUCCUUGAACUUGGUUCAUGGAGUGUUUUACGCUGAACGAUACCAAAUGCCCACAGGCAUAAAAGGCC\
) } def
/len { sequence length } bind def

/coor [
[96.26308441 458.97140503]
[92.90419769 443.28390503]
[103.18596649 430.96868896]
[103.18596649 415.96868896]
[103.18596649 400.96868896]
[103.18596649 385.96868896]
[92.31242371 369.98760986]
[102.62827301 352.67742920]
[102.14994049 337.68505859]
[101.67160797 322.69268799]
[98.31221771 316.09988403]
[101.30710602 307.45785522]
[101.06790924 292.45974731]
[100.82871246 277.46166992]
[89.59082794 287.39694214]
[74.61078644 286.62332153]
[64.45616150 275.58322144]
[64.93470764 260.59088135]
[75.77272034 250.22084045]
[90.77159882 250.40409851]
[101.35279846 261.03533936]
[102.54756927 246.08299255]
[103.74234009 231.13064575]
[104.93711090 216.17829895]
[106.13188171 201.22596741]
[107.32665253 186.27362061]
[95.88365173 173.95610046]
[96.90429688 156.83625793]
[110.24465179 145.52868652]
[111.20083618 130.55920410]
[92.63538361 126.62083435]
[82.34893799 114.26428223]
[68.22200012 119.30706787]
[54.09506607 124.34986115]
[39.96813202 129.39265442]
[25.84119797 134.43544006]
[15.64043713 147.27586365]
[-0.53804117 144.59465027]
[-6.05120373 129.15000916]
[4.77241802 116.83005524]
[20.79841042 120.30850220]
[34.92534256 115.26571655]
[49.05228043 110.22292328]
[63.17921448 105.18013763]
[77.30614471 100.13734436]
[94.71572113 72.88943481]
[130.23811340 87.95924377]
[129.99891663 72.96115112]
[129.75971985 57.96305466]
[121.80333710 44.28802109]
[129.33670044 31.43898392]
[129.09750366 16.44089127]
[125.82855225 7.89875698]
[128.97599792 1.20217109]
[128.97599792 -13.79782867]
[128.97599792 -28.79782867]
[128.97599792 -43.79782867]
[116.38356781 -55.93277740]
[116.45631409 -73.08287048]
[128.66122437 -84.64590454]
[128.42202759 -99.64399719]
[120.46564484 -113.31903076]
[127.99900818 -126.16806793]
[127.75981140 -141.16615295]
[127.52061462 -156.16424561]
[127.28141785 -171.16233826]
[126.92263794 -186.15805054]
[126.44430542 -201.15042114]
[125.96597290 -216.14279175]
[123.19852448 -220.59584045]
[122.49433136 -225.20379639]
[123.56521606 -229.15214539]
[125.84064484 -231.85984802]
[126.07984161 -246.85794067]
[126.31904602 -261.85604858]
[126.55824280 -276.85412598]
[123.56334686 -285.49615479]
[126.92273712 -292.08895874]
[127.40106964 -307.08132935]
[127.87940979 -322.07369995]
[128.35774231 -337.06607056]
[128.83607483 -352.05847168]
[129.31440735 -367.05084229]
[114.62165070 -370.28152466]
[100.77279663 -376.15725708]
[88.23954010 -384.47784424]
[77.44875336 -394.95989990]
[68.76796722 -407.24639893]
[62.49285126 -420.91891479]
[58.83712769 -435.51174927]
[57.92531204 -450.52783203]
[59.78845978 -465.45578003]
[64.36310577 -479.78710938]
[71.49345398 -493.03372192]
[80.93663788 -504.74444580]
[92.37102509 -514.52038574]
[105.40717316 -522.02862549]
[119.60105896 -527.01342773]
[134.46926880 -529.30499268]
[149.50537109 -528.82525635]
[164.19725037 -525.59057617]
[178.04452515 -519.71112061]
[190.57554626 -511.38717651]
[201.36349487 -500.90222168]
[210.04096985 -488.61334229]
[216.31240845 -474.93914795]
[219.96418762 -460.34533691]
[220.87196350 -445.32901001]
[219.00479126 -430.40158081]
[214.42628479 -416.07147217]
[207.29235840 -402.82678223]
[197.84602356 -391.11859131]
[186.40899658 -381.34573364]
[173.37083435 -373.84100342]
[159.17559814 -368.86004639]
[144.30677795 -366.57247925]
[143.82844543 -351.58010864]
[143.35011292 -336.58773804]
[142.87178040 -321.59536743]
[142.39344788 -306.60299683]
[141.91511536 -291.61062622]
[141.55633545 -276.61492920]
[141.31713867 -261.61685181]
[141.07794189 -246.61874390]
[140.83874512 -231.62065125]
[140.95834351 -216.62112427]
[141.43667603 -201.62875366]
[141.91500854 -186.63638306]
[145.27439880 -180.04357910]
[142.27951050 -171.40153503]
[142.51870728 -156.40344238]
[142.75790405 -141.40534973]
[142.99710083 -126.40726471]
[150.93637085 -113.80499268]
[143.42012024 -99.88319397]
[143.65931702 -84.88510132]
[154.08244324 -77.29819489]
[158.29206848 -64.90712738]
[154.53765869 -52.16754913]
[143.97599792 -43.79782867]
[143.97599792 -28.79782867]
[143.97599792 -13.79782867]
[143.97599792 1.20217109]
[144.09559631 16.20169449]
[144.33479309 31.19978714]
[152.27406311 43.80205917]
[144.75781250 57.72385788]
[144.99700928 72.72195435]
[145.23620605 87.72004700]
[154.45436096 99.55328369]
[168.93807983 103.45481873]
[183.42179871 107.35636139]
[197.90550232 111.25789642]
[212.38922119 115.15943146]
[229.25585938 113.44100189]
[235.57627869 129.17276001]
[222.20898438 139.60118103]
[208.48768616 129.64314270]
[194.00396729 125.74160767]
[179.52026367 121.84007263]
[165.03654480 117.93853760]
[150.55282593 114.03700256]
[144.45719910 118.40659332]
[155.29736328 128.77438354]
[167.96673584 136.80474854]
[168.39440918 151.79866028]
[156.20336914 160.53813171]
[142.14068604 155.31883240]
[138.60357666 140.74116516]
[132.26596069 127.14578247]
[126.17032623 131.51538086]
[125.21414948 146.48487854]
[135.22080994 155.51083374]
[138.15548706 168.46382141]
[133.16453552 180.56134033]
[122.27899170 187.46839905]
[121.08422089 202.42073059]
[119.88945007 217.37307739]
[118.69467926 232.32542419]
[117.49990845 247.27775574]
[116.30513763 262.23010254]
[115.82680511 277.22247314]
[116.06600189 292.22055054]
[116.30519867 307.21865845]
[116.66397858 322.21435547]
[117.14231110 337.20672607]
[117.62064362 352.19909668]
[125.98046112 359.18045044]
[129.04856873 369.40170288]
[126.04158020 379.41192627]
[118.18596649 385.96868896]
[118.18596649 400.96868896]
[118.18596649 415.96868896]
[118.18596649 430.96868896]
[128.46774292 443.28390503]
[125.10885620 458.97140503]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 194]
[4 193]
[5 192]
[6 191]
[8 187]
[9 186]
[10 185]
[12 184]
[13 183]
[14 182]
[21 181]
[22 180]
[23 179]
[24 178]
[25 177]
[26 176]
[29 172]
[30 171]
[32 45]
[33 44]
[34 43]
[35 42]
[36 41]
[47 149]
[48 148]
[49 147]
[51 145]
[52 144]
[54 143]
[55 142]
[56 141]
[57 140]
[60 136]
[61 135]
[63 133]
[64 132]
[65 131]
[66 130]
[67 128]
[68 127]
[69 126]
[73 125]
[74 124]
[75 123]
[76 122]
[78 121]
[79 120]
[80 119]
[81 118]
[82 117]
[83 116]
[150 162]
[151 161]
[152 160]
[153 159]
[154 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
