%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:46:17 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR52M1)
} def

/sequence { (\
AUGCUCACUUUUCAUAAUGUCUGCUCAGUACCCAGCUCCUUCUGGCUCACUGGCAUCCCAGGGCUGGAGUCCCUACACGUCUGGCUCUCCAUCCCCUUUG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 15 0.120847976 ubox
1 18 0.031675771 ubox
1 20 0.010890197 ubox
1 56 0.029701970 ubox
2 14 0.129053761 ubox
2 16 0.014735404 ubox
2 17 0.033708504 ubox
2 19 0.011699915 ubox
2 30 0.004659475 ubox
2 55 0.034736327 ubox
2 60 0.018974199 ubox
2 100 0.007335933 ubox
3 13 0.130547337 ubox
3 15 0.014784425 ubox
3 18 0.008364245 ubox
3 20 0.133390257 ubox
3 22 0.009506771 ubox
3 24 0.218261736 ubox
3 29 0.005245921 ubox
3 54 0.036055950 ubox
3 59 0.021638424 ubox
3 64 0.027632264 ubox
3 99 0.008608348 ubox
4 19 0.140049858 ubox
4 23 0.218636100 ubox
4 28 0.005281914 ubox
4 53 0.035765095 ubox
4 63 0.027677840 ubox
5 27 0.005055603 ubox
5 52 0.014119280 ubox
5 62 0.027565518 ubox
6 19 0.072425987 ubox
6 23 0.005850330 ubox
6 52 0.011256342 ubox
6 61 0.027398837 ubox
6 100 0.036583279 ubox
7 18 0.068671793 ubox
7 20 0.311287471 ubox
7 22 0.005838841 ubox
7 29 0.003740461 ubox
7 51 0.010599148 ubox
7 99 0.032339507 ubox
8 19 0.323803521 ubox
8 28 0.003978223 ubox
9 17 0.109520122 ubox
9 27 0.003824050 ubox
9 60 0.003569088 ubox
10 16 0.114411190 ubox
10 17 0.210546458 ubox
11 16 0.217540925 ubox
11 17 0.037841923 ubox
12 16 0.034261362 ubox
12 45 0.004064463 ubox
12 60 0.003348526 ubox
13 19 0.086866577 ubox
13 23 0.008634080 ubox
13 44 0.004468506 ubox
13 100 0.036722058 ubox
14 18 0.071048415 ubox
14 20 0.026466961 ubox
14 22 0.009486009 ubox
14 43 0.004341936 ubox
14 56 0.008580887 ubox
14 99 0.033893465 ubox
15 19 0.025736179 ubox
15 23 0.003486460 ubox
15 55 0.005133970 ubox
15 100 0.025248065 ubox
16 22 0.008084410 ubox
16 98 0.013655814 ubox
16 99 0.029876149 ubox
17 56 0.049563697 ubox
17 92 0.004577305 ubox
17 97 0.012932835 ubox
17 98 0.026809152 ubox
18 27 0.005471255 ubox
18 55 0.049610111 ubox
18 60 0.259289887 ubox
18 91 0.004891154 ubox
18 100 0.005371015 ubox
19 26 0.006380992 ubox
19 31 0.004109279 ubox
19 50 0.012356089 ubox
19 54 0.049027161 ubox
19 56 0.038488563 ubox
19 59 0.297524031 ubox
19 64 0.007127844 ubox
19 90 0.004963442 ubox
19 99 0.006367429 ubox
20 30 0.004051355 ubox
20 49 0.012262925 ubox
20 53 0.045164853 ubox
20 55 0.025783724 ubox
20 63 0.007107891 ubox
21 28 0.004605663 ubox
21 52 0.027911836 ubox
21 53 0.008103220 ubox
21 61 0.006582580 ubox
21 62 0.007088926 ubox
22 27 0.004327859 ubox
22 30 0.004669996 ubox
22 49 0.004559705 ubox
22 52 0.003933464 ubox
22 55 0.880306671 ubox
22 60 0.008402553 ubox
22 61 0.005017337 ubox
23 29 0.005184194 ubox
23 36 0.006308316 ubox
23 46 0.015054860 ubox
23 48 0.004787010 ubox
23 54 0.971593069 ubox
23 59 0.007025809 ubox
24 28 0.005186891 ubox
24 35 0.006314945 ubox
24 45 0.014975598 ubox
24 53 0.965855828 ubox
25 34 0.006228753 ubox
25 45 0.004114601 ubox
25 52 0.154114978 ubox
25 53 0.202625265 ubox
26 44 0.015562824 ubox
26 52 0.986461426 ubox
27 43 0.015719784 ubox
27 47 0.014638066 ubox
27 51 0.997825284 ubox
28 42 0.015684922 ubox
28 46 0.015234665 ubox
28 50 0.998132273 ubox
28 54 0.005016514 ubox
28 56 0.004186850 ubox
29 45 0.005247761 ubox
29 49 0.963133466 ubox
29 53 0.004046378 ubox
29 55 0.004252266 ubox
31 45 0.082623092 ubox
31 53 0.003841509 ubox
32 44 0.060972366 ubox
32 45 0.979521335 ubox
32 52 0.003528879 ubox
32 53 0.021401684 ubox
33 44 0.983039343 ubox
33 52 0.021690300 ubox
34 40 0.014477038 ubox
34 41 0.006210969 ubox
34 43 0.983940513 ubox
34 47 0.163235134 ubox
34 51 0.021585501 ubox
35 39 0.015503889 ubox
35 40 0.007523683 ubox
35 42 0.970593728 ubox
35 46 0.170131505 ubox
35 50 0.021369305 ubox
36 45 0.169638600 ubox
37 44 0.155931978 ubox
37 45 0.003362903 ubox
38 44 0.028579905 ubox
38 45 0.026582644 ubox
39 44 0.029951949 ubox
45 54 0.004505521 ubox
46 53 0.004640764 ubox
47 52 0.004149774 ubox
50 61 0.013623962 ubox
51 60 0.021161404 ubox
52 58 0.004674709 ubox
52 59 0.024350494 ubox
53 57 0.006183231 ubox
53 58 0.024815039 ubox
54 100 0.030924269 ubox
55 99 0.032792325 ubox
59 100 0.138258977 ubox
60 88 0.027561038 ubox
60 97 0.513633059 ubox
60 98 0.066377069 ubox
60 99 0.130324237 ubox
61 87 0.029642697 ubox
61 94 0.072812924 ubox
61 95 0.828439725 ubox
61 96 0.545363517 ubox
61 97 0.069047755 ubox
61 98 0.024162939 ubox
62 86 0.029679076 ubox
62 93 0.073039761 ubox
62 94 0.836779019 ubox
62 95 0.536016872 ubox
62 96 0.072094018 ubox
62 97 0.011268453 ubox
63 85 0.029750305 ubox
63 92 0.071995136 ubox
63 93 0.841920282 ubox
63 94 0.525520507 ubox
63 95 0.071985986 ubox
63 96 0.011014811 ubox
64 84 0.029754833 ubox
65 83 0.029629056 ubox
65 91 0.983796904 ubox
66 82 0.029559591 ubox
66 88 0.008390325 ubox
66 89 0.003330222 ubox
66 90 0.999448893 ubox
67 81 0.029671655 ubox
67 87 0.010496941 ubox
67 89 0.999489415 ubox
68 80 0.028995275 ubox
68 86 0.012498869 ubox
68 88 0.999308138 ubox
69 76 0.004185553 ubox
69 78 0.025958865 ubox
69 85 0.015411308 ubox
69 87 0.999107290 ubox
70 75 0.003796562 ubox
70 77 0.024594096 ubox
70 84 0.014934768 ubox
71 83 0.015116207 ubox
71 84 0.112094841 ubox
72 83 0.110718829 ubox
72 84 0.988681576 ubox
73 83 0.988564311 ubox
73 84 0.080480408 ubox
74 83 0.083328254 ubox
75 82 0.141851172 ubox
76 83 0.029116703 ubox
77 82 0.032301559 ubox
90 100 0.004172485 ubox
91 99 0.004196504 ubox
22 55 0.9500000 lbox
23 54 0.9500000 lbox
24 53 0.9500000 lbox
26 52 0.9500000 lbox
27 51 0.9500000 lbox
28 50 0.9500000 lbox
29 49 0.9500000 lbox
32 45 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
61 95 0.9500000 lbox
62 94 0.9500000 lbox
63 93 0.9500000 lbox
65 91 0.9500000 lbox
66 90 0.9500000 lbox
67 89 0.9500000 lbox
68 88 0.9500000 lbox
69 87 0.9500000 lbox
72 84 0.9500000 lbox
73 83 0.9500000 lbox
showpage
end
%%EOF
