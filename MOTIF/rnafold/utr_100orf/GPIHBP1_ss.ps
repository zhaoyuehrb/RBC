%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:26:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUUCAUCCCACUUACCGCAGCUCCAGAGCCCUGCGGGAGGACUCAGAGUCAGGGACACAGCAGCGUCCGGCGAGAUGAAGGCGCUCGGGGCUGUCCUGCUUGCCCUCUUGCUGUGCGGGCGGCCAGGGAGAGGGCAGACACAGCAGGAGGAAGAGGAAGAGGACGAGGACCACG\
) } def
/len { sequence length } bind def

/coor [
[291.23007202 433.20584106]
[303.88861084 424.78976440]
[300.96224976 410.07800293]
[298.03588867 395.36621094]
[295.10952759 380.65444946]
[285.03793335 369.68118286]
[289.93429565 354.63671875]
[287.00793457 339.92492676]
[284.08157349 325.21316528]
[274.18798828 318.21786499]
[271.64428711 305.96096802]
[278.35314941 294.92013550]
[275.68984985 280.15847778]
[273.02655029 265.39682007]
[268.73065186 259.35293579]
[270.44992065 250.34805298]
[268.05050659 235.54119873]
[259.06134033 223.53308105]
[245.53027344 217.05931091]
[231.99919128 210.58554077]
[218.46809387 204.11175537]
[204.93701172 197.63798523]
[191.40592957 191.16421509]
[177.87484741 184.69044495]
[164.34376526 178.21667480]
[156.92887878 178.16610718]
[150.63050842 171.50468445]
[137.21713257 164.79042053]
[123.80374908 158.07617188]
[110.39036560 151.36190796]
[95.41963196 150.42539978]
[81.27406311 155.41566467]
[71.02566528 168.21810913]
[54.85726166 165.47682190]
[49.40151596 150.01179504]
[60.27082825 137.73213196]
[76.28379059 141.27009583]
[90.42935944 136.27983093]
[89.42829895 128.84693909]
[87.42617035 113.98115540]
[86.42510223 106.54826355]
[71.46332550 105.47817230]
[56.50154114 104.40808868]
[41.53976059 103.33799744]
[25.30964279 108.23898315]
[16.10724831 93.99987030]
[27.24241257 81.21533203]
[42.60984802 88.37622070]
[57.57162857 89.44630432]
[72.53340912 90.51639557]
[87.49519348 91.58647919]
[90.05335236 84.53624725]
[95.16967773 70.43577576]
[97.72783661 63.38554001]
[85.56118011 54.61214066]
[73.39453125 45.83874130]
[61.22787476 37.06534195]
[46.53009796 42.04077911]
[31.72490501 37.39471817]
[22.50519371 24.91367340]
[22.41613007 9.39685345]
[31.49196434 -3.18920541]
[46.24285126 -8.00490570]
[60.99677277 -3.19851422]
[70.08054352 9.38181496]
[70.00127411 24.89868736]
[82.16793060 33.67208862]
[94.33457947 42.44548798]
[106.50123596 51.21888733]
[112.38281250 46.56517792]
[130.02755737 32.60404587]
[124.28730011 18.74585152]
[109.08714294 16.10792923]
[97.74159241 5.65412378]
[93.87097931 -9.27979374]
[98.71039581 -23.92846489]
[110.71561432 -33.61754990]
[126.05580139 -35.25529861]
[139.83596802 -28.31911278]
[147.65890503 -15.02230167]
[147.02833557 0.39217025]
[138.14549255 13.00559998]
[143.88574219 26.86379433]
[117.10462952 137.94853210]
[130.51800537 144.66279602]
[143.93138123 151.37704468]
[157.34475708 158.09130859]
[170.81753540 164.68557739]
[184.34861755 171.15936279]
[197.87969971 177.63313293]
[211.41078186 184.10690308]
[224.94187927 190.58067322]
[238.47296143 197.05444336]
[252.00404358 203.52822876]
[265.53512573 210.00199890]
[280.52020264 210.67114258]
[294.57443237 205.42918396]
[308.62869263 200.18722534]
[322.68292236 194.94525146]
[336.73718262 189.70329285]
[350.79141235 184.46133423]
[364.59783936 178.59762573]
[378.12890625 172.12385559]
[391.66000366 165.65008545]
[405.19110107 159.17631531]
[418.72216797 152.70252991]
[432.25326538 146.22875977]
[445.78433228 139.75498962]
[459.31542969 133.28121948]
[472.84652710 126.80744171]
[481.95596313 113.87189484]
[496.77618408 115.35860443]
[510.30728149 108.88482666]
[523.83837891 102.41105652]
[530.25463867 95.86311340]
[537.66925049 95.94490814]
[551.31372070 89.71368408]
[558.24481201 75.24512482]
[573.91003418 71.78365326]
[586.29223633 81.98461151]
[585.89300537 98.02268982]
[573.01843262 107.59485626]
[557.54492188 103.35816193]
[543.90045166 109.58938599]
[530.31213379 115.94213867]
[516.78106689 122.41591644]
[503.24996948 128.88967896]
[495.10833740 141.36218262]
[479.32028198 140.33853149]
[465.78921509 146.81230164]
[452.25811768 153.28607178]
[438.72702026 159.75984192]
[425.19595337 166.23362732]
[411.66485596 172.70739746]
[398.13378906 179.18116760]
[384.60269165 185.65493774]
[371.07159424 192.12870789]
[384.04022217 199.66625977]
[386.41418457 214.47721863]
[376.45095825 225.69035339]
[361.46356201 225.07521057]
[352.45275879 213.08332825]
[356.03338623 198.51557922]
[341.97915649 203.75753784]
[327.92489624 208.99951172]
[313.87063599 214.24147034]
[299.81640625 219.48342896]
[285.76214600 224.72538757]
[285.27032471 229.04714966]
[282.85736084 233.14179993]
[285.25677490 247.94865417]
[287.78820801 262.73352051]
[290.45150757 277.49517822]
[293.11480713 292.25683594]
[305.33056641 306.01571655]
[298.79336548 322.28680420]
[301.71972656 336.99856567]
[304.64605713 351.71035767]
[314.92697144 363.73590088]
[309.82131958 377.72808838]
[312.74768066 392.43984985]
[315.67401123 407.15164185]
[318.60037231 421.86343384]
[333.51602173 424.79464722]
[346.17178345 433.21487427]
[354.63772583 445.84008789]
[357.62289429 460.74502563]
[354.67205811 475.65679932]
[346.23516846 488.30148315]
[333.59884644 496.75082397]
[318.69000244 499.71636963]
[303.78210449 496.74591064]
[291.14855957 488.29241943]
[282.71585083 475.64495850]
[279.76989746 460.73223877]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 163]
[3 162]
[4 161]
[5 160]
[7 158]
[8 157]
[9 156]
[12 154]
[13 153]
[14 152]
[16 151]
[17 150]
[18 95]
[19 94]
[20 93]
[21 92]
[22 91]
[23 90]
[24 89]
[25 88]
[27 87]
[28 86]
[29 85]
[30 84]
[31 38]
[32 37]
[41 51]
[42 50]
[43 49]
[44 48]
[54 69]
[55 68]
[56 67]
[57 66]
[71 83]
[72 82]
[96 148]
[97 147]
[98 146]
[99 145]
[100 144]
[101 143]
[102 137]
[103 136]
[104 135]
[105 134]
[106 133]
[107 132]
[108 131]
[109 130]
[110 129]
[112 127]
[113 126]
[114 125]
[116 124]
[117 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
