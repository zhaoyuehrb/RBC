%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:45:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGAAGUGACGCGAGGCGUAGCGGAAGUUACUGCAGCCGCGGUGUUGUGCUGUGGGGAAGGGAGAAGGAUUUGUAAACCCCGGAGCGAGGUUCUGCUUACCCGAGGCCGCUGCUGUGCGGAGACCCCCGGGUGAAGCCACCGUCAUCAUGUCUGACCAGGAGGCAAAACCUUCAACUGAGGACUUGGGGGAUAAGAAGGAAGGUGAAUAUAUUAAACUCAAAGUCAUUGGACAGGAUAGCAGUGAGA\
) } def
/len { sequence length } bind def

/coor [
[69.01515198 102.36831665]
[54.84577179 107.29058838]
[40.67639923 112.21286774]
[26.50702286 117.13513947]
[12.33764648 122.05741119]
[-1.83172965 126.97969055]
[-7.36468840 145.27998352]
[-23.08777046 155.75300598]
[-41.65591431 153.85269165]
[-51.39403915 165.26185608]
[-61.13216019 176.67102051]
[-70.87028503 188.08018494]
[-80.60840607 199.48933411]
[-78.91708374 216.91268921]
[-90.13864136 229.90446472]
[-106.94727325 230.73162842]
[-116.54067993 242.26274109]
[-126.13407898 253.79385376]
[-124.51836395 264.51852417]
[-128.96716309 274.16888428]
[-137.79954529 279.67333984]
[-147.98449707 279.42639160]
[-157.86578369 290.71176147]
[-167.74707031 301.99716187]
[-177.62837219 313.28256226]
[-176.33232117 329.03363037]
[-186.61715698 341.03353882]
[-202.38102722 342.16296387]
[-214.27154541 331.75186157]
[-215.23425293 315.97689819]
[-204.69799805 304.19714355]
[-188.91375732 303.40127563]
[-179.03247070 292.11587524]
[-169.15116882 280.83047485]
[-159.26988220 269.54507446]
[-156.88201904 250.34259033]
[-137.66519165 244.20045471]
[-128.07179260 232.66934204]
[-118.47838593 221.13821411]
[-121.43909454 208.61254883]
[-116.57944489 196.48469543]
[-105.46264648 189.25720215]
[-92.01757050 189.75122070]
[-82.27944183 178.34205627]
[-72.54132080 166.93289185]
[-62.80319977 155.52372742]
[-53.06507874 144.11457825]
[-55.97183990 138.39752197]
[-57.47247696 132.16198730]
[-72.28631592 129.80612183]
[-87.10015869 127.45026398]
[-101.91400146 125.09439850]
[-116.75811005 130.56825256]
[-128.11222839 120.92806244]
[-142.92607117 118.57220459]
[-157.73991394 116.21633911]
[-172.55375671 113.86047363]
[-187.36759949 111.50461578]
[-199.83158875 124.70112610]
[-217.56962585 127.72835541]
[-233.42477417 119.55702972]
[-241.11495972 103.63787079]
[-255.98352051 101.65652466]
[-270.85208130 99.67517853]
[-283.25180054 109.47430420]
[-298.93878174 107.55246735]
[-308.60629272 95.04985809]
[-306.51870728 79.38404846]
[-293.91458130 69.84928894]
[-278.27169800 72.10238647]
[-268.87075806 84.80661011]
[-254.00218201 86.78795624]
[-239.13360596 88.76930237]
[-232.17828369 78.85355377]
[-221.60934448 72.79160309]
[-209.39483643 71.78279114]
[-197.83943176 76.07884979]
[-189.14944458 84.92478180]
[-185.01173401 96.69077301]
[-170.19789124 99.04663086]
[-155.38404846 101.40249634]
[-140.57020569 103.75836182]
[-125.75636292 106.11421967]
[-111.97184753 100.47186279]
[-99.55814362 110.28055573]
[-84.74430084 112.63642120]
[-69.93045807 114.99227905]
[-55.11661530 117.34814453]
[-46.08304977 106.19567871]
[-32.54549408 101.04863739]
[-18.12607002 103.42491150]
[-6.75400448 112.81031036]
[7.41537142 107.88803864]
[21.58474731 102.96576691]
[35.75412369 98.04348755]
[49.92350006 93.12121582]
[64.09287262 88.19893646]
[71.51078033 75.16150665]
[68.50325775 60.46610260]
[65.49574280 45.77070236]
[62.48822784 31.07529831]
[59.48070908 16.37989616]
[56.47319412 1.68449438]
[53.46567535 -13.01090813]
[43.11854172 -24.97950935]
[48.14689255 -38.99967194]
[45.13937759 -53.69507217]
[41.76203918 -68.30991364]
[38.01702499 -82.83489227]
[34.27201462 -97.35986328]
[30.52700424 -111.88484192]
[16.78982353 -119.69927216]
[12.68242645 -134.96049500]
[20.64166069 -148.61428833]
[35.94545364 -152.56010437]
[49.51433563 -144.45695496]
[53.29813004 -129.11230469]
[45.05197906 -115.62985229]
[48.79698944 -101.10487366]
[52.54199982 -86.57990265]
[56.28701401 -72.05492401]
[58.60280609 -70.51735687]
[60.45690155 -67.98115540]
[61.47006226 -64.61485291]
[61.32995605 -60.71961594]
[59.83477783 -56.70259094]
[62.84229660 -42.00718689]
[72.97431183 -31.08970070]
[68.16107941 -16.01842499]
[71.16859436 -1.32302260]
[74.17610931 13.37237930]
[77.18363190 28.06778145]
[80.19114685 42.76318359]
[83.19866180 57.45858765]
[86.20617676 72.15398407]
[100.20861816 70.25439453]
[112.97000122 74.71501923]
[121.88993835 84.04315948]
[125.41841125 95.82089233]
[140.28697205 97.80223846]
[155.15554810 99.78357697]
[169.85681152 93.93693542]
[181.45054626 103.28758240]
[196.31912231 105.26892853]
[211.02038574 99.42227936]
[222.61412048 108.77292633]
[237.48268127 110.75427246]
[252.35125732 112.73561859]
[267.05252075 106.88896942]
[278.64627075 116.23961639]
[293.51483154 118.22096252]
[308.38339233 120.20230103]
[323.25195312 122.18364716]
[338.12051392 124.16499329]
[352.98910522 126.14633942]
[367.85766602 128.12768555]
[372.10543823 117.92655945]
[381.46710205 109.84403229]
[394.72259521 106.40026855]
[409.45489502 109.37741089]
[422.63037109 102.20755768]
[435.80584717 95.03770447]
[448.98132324 87.86785126]
[462.15679932 80.69799805]
[468.05947876 65.78029633]
[483.44436646 61.23215485]
[496.50946045 70.54251862]
[497.23236084 86.56927490]
[485.05850220 97.01807404]
[469.32666016 93.87348175]
[456.15118408 101.04332733]
[442.97570801 108.21318054]
[429.80023193 115.38303375]
[416.62475586 122.55288696]
[416.86126709 130.04914856]
[431.85382080 129.57609558]
[445.96646118 124.49343109]
[455.16125488 136.34481812]
[446.73110962 148.75178528]
[432.32687378 144.56864929]
[417.33432007 145.04170227]
[417.57086182 152.53796387]
[431.17211914 158.86294556]
[444.77340698 165.18791199]
[458.37466431 171.51289368]
[471.97595215 177.83787537]
[487.75183105 176.64111328]
[496.02975464 189.02357483]
[509.63104248 195.34854126]
[523.23229980 201.67352295]
[537.92114258 196.48931885]
[551.62463379 203.09750366]
[556.47650146 217.13301086]
[570.07775879 223.45799255]
[583.67901611 229.78295898]
[594.16076660 218.85536194]
[607.62384033 211.92547607]
[622.60797119 209.74501038]
[637.48779297 212.55047607]
[650.64916992 220.03756714]
[660.66455078 231.39411926]
[666.44744873 245.38829041]
[667.37066650 260.50207520]
[663.33398438 275.09603882]
[654.77532959 287.58715820]
[642.62304688 296.62048340]
[628.19531250 301.21612549]
[613.05718994 300.87561035]
[598.85070801 295.63586426]
[587.11694336 286.06527710]
[579.12860107 273.20193481]
[575.75219727 258.44122314]
[577.35406494 243.38423157]
[563.75280762 237.05926514]
[550.15148926 230.73428345]
[536.29217529 236.06857300]
[522.40844727 229.84790039]
[516.90734863 215.27479553]
[503.30606079 208.94982910]
[489.70477295 202.62484741]
[474.90176392 204.27400208]
[465.65097046 191.43914795]
[452.04971313 185.11416626]
[438.44842529 178.78919983]
[424.84716797 172.46421814]
[411.24588013 166.13923645]
[378.62084961 166.19422913]
[365.87631226 142.99624634]
[351.00775146 141.01490784]
[336.13919067 139.03355408]
[321.27059937 137.05221558]
[306.40203857 135.07087708]
[291.53347778 133.08952332]
[276.66491699 131.10818481]
[263.02713013 137.09654236]
[250.36990356 127.60417938]
[235.50134277 125.62283325]
[220.63278198 123.64149475]
[206.99501038 129.62985229]
[194.33776855 120.13748932]
[179.46920776 118.15615082]
[165.83143616 124.14450836]
[153.17419434 114.65214539]
[138.30563354 112.67079926]
[123.43706512 110.68946075]
[115.48457336 121.90181732]
[102.44881439 127.77816010]
[87.68124390 126.19719696]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 97]
[2 96]
[3 95]
[4 94]
[5 93]
[6 92]
[9 47]
[10 46]
[11 45]
[12 44]
[13 43]
[16 39]
[17 38]
[18 37]
[22 35]
[23 34]
[24 33]
[25 32]
[49 88]
[50 87]
[51 86]
[52 85]
[54 83]
[55 82]
[56 81]
[57 80]
[58 79]
[62 73]
[63 72]
[64 71]
[98 135]
[99 134]
[100 133]
[101 132]
[102 131]
[103 130]
[104 129]
[106 127]
[107 126]
[108 121]
[109 120]
[110 119]
[111 118]
[139 245]
[140 244]
[141 243]
[143 241]
[144 240]
[146 238]
[147 237]
[148 236]
[150 234]
[151 233]
[152 232]
[153 231]
[154 230]
[155 229]
[156 228]
[160 174]
[161 173]
[162 172]
[163 171]
[164 170]
[182 226]
[183 225]
[184 224]
[185 223]
[186 222]
[188 220]
[189 219]
[190 218]
[193 215]
[194 214]
[195 213]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
