%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:42:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCGCCGCGCCGGCCGCUCUAGCAACCCCUGGCUGUCACGCUUUGGUUUCCGGGUCGGUUCUGGCAGGUCUGAGCGCUCCGACUUCCAGAGGAGCGCUGUGCACGUGGAGAAGAGCGGGGACUCGGCGACCCUGCCCUCCCGACCCUCAUGUUCGAAGAGCCUGAGUGGGCCGAGGCGGCCCCAGUAGCCGCGGGCCUUGGGCCCGUAAUCUCACGACCUCCGCCUGCGGCCUCCUCGCAAAACAAGG\
) } def
/len { sequence length } bind def

/coor [
[109.50033569 167.21813965]
[107.98888397 152.29447937]
[106.47743225 137.37081909]
[91.50727081 136.42518616]
[88.12992859 151.04002380]
[84.75259399 165.65486145]
[81.37525177 180.26971436]
[83.70006561 197.06350708]
[68.20614624 203.94644165]
[57.30304718 190.96342468]
[66.76040649 176.89236450]
[70.13774872 162.27752686]
[73.51509094 147.66268921]
[76.89242554 133.04785156]
[69.33727264 109.74927521]
[77.38948059 91.87672424]
[65.56156158 82.65174866]
[53.73363495 73.42677307]
[41.90570831 64.20179749]
[30.07778358 54.97681808]
[18.07740211 45.97732544]
[5.90886259 37.20654297]
[-6.25967693 28.43576050]
[-18.42821693 19.66497612]
[-33.42552948 19.94883919]
[-45.25345612 29.17381477]
[-57.08137894 38.39879227]
[-57.18137360 51.85256958]
[-64.89256287 62.63948059]
[-77.22312927 66.95900726]
[-89.60588837 63.44825363]
[-101.54925537 72.52326965]
[-113.49263000 81.59828186]
[-115.38101196 97.28934479]
[-127.86298370 106.98346710]
[-143.53320312 104.92929077]
[-153.09481812 92.34552765]
[-150.87507629 76.69789886]
[-138.19093323 67.26986694]
[-122.56764221 69.65491486]
[-110.62427521 60.57989502]
[-98.68090057 51.50488281]
[-97.11253357 34.74915314]
[-83.63805389 24.11204529]
[-66.30635834 26.57086754]
[-54.47843170 17.34589005]
[-42.65050888 8.12091446]
[-57.34270096 11.14407539]
[-68.31631470 0.91764700]
[-66.33500671 -13.95092487]
[-53.06641769 -20.94696426]
[-39.67848969 -14.18193626]
[-48.67798233 -26.18231773]
[-57.67747498 -38.18269730]
[-66.67696381 -50.18307877]
[-75.67646027 -62.18346024]
[-84.67594910 -74.18384552]
[-93.67543793 -86.18422699]
[-107.38962555 -84.94944000]
[-119.82707214 -90.60155487]
[-127.78907776 -101.56966400]
[-129.28607178 -114.93123627]
[-124.03383636 -127.19050598]
[-132.88121033 -139.30348206]
[-141.72857666 -151.41644287]
[-150.57595825 -163.52941895]
[-159.42332458 -175.64237976]
[-168.27069092 -187.75535583]
[-180.48614502 -183.57385254]
[-194.24954224 -185.02175903]
[-206.93228149 -192.58953857]
[-215.80787659 -205.53993225]
[-218.61915588 -221.93264771]
[-231.11088562 -230.23667908]
[-243.60260010 -238.54071045]
[-256.09432983 -246.84472656]
[-268.58605957 -255.14875793]
[-281.07778931 -263.45278931]
[-293.56948853 -271.75680542]
[-306.06121826 -280.06082153]
[-319.78424072 -273.16342163]
[-335.11648560 -274.06759644]
[-347.93368530 -282.53018188]
[-354.78805542 -296.27474976]
[-353.83581543 -311.60409546]
[-345.33309937 -324.39468384]
[-331.56710815 -331.20596313]
[-316.24084473 -330.20565796]
[-303.47692871 -321.66290283]
[-296.70886230 -307.87564087]
[-297.75720215 -292.55255127]
[-285.26547241 -284.24853516]
[-272.77374268 -275.94451904]
[-260.28201294 -267.64047241]
[-247.79029846 -259.33645630]
[-235.29858398 -251.03242493]
[-222.80685425 -242.72840881]
[-210.31513977 -234.42437744]
[-204.12214661 -238.65486145]
[-215.99647522 -247.82005310]
[-210.94920349 -261.94537354]
[-195.95552063 -261.51010132]
[-191.73619080 -247.11582947]
[-185.54321289 -251.34631348]
[-188.73588562 -266.00259399]
[-191.92857361 -280.65887451]
[-202.42588806 -292.49600220]
[-197.57481384 -306.57849121]
[-200.76750183 -321.23477173]
[-203.96018982 -335.89105225]
[-218.73274231 -339.89480591]
[-229.94467163 -350.31359863]
[-235.01953125 -364.75329590]
[-232.79118347 -379.89572144]
[-223.77166748 -392.26126099]
[-210.03359985 -399.00842285]
[-194.73390198 -398.58676147]
[-181.38832092 -391.09317017]
[-173.06358337 -378.24957275]
[-171.67263794 -363.00741577]
[-177.53514099 -348.86917114]
[-189.30389404 -339.08374023]
[-186.11122131 -324.42745972]
[-182.91853333 -309.77114868]
[-172.64958191 -298.98236084]
[-177.27229309 -283.85156250]
[-174.07960510 -269.19528198]
[-170.88691711 -254.53898621]
[-150.54225159 -238.22831726]
[-145.93389893 -215.08641052]
[-156.15773010 -196.60272217]
[-147.31036377 -184.48976135]
[-138.46298218 -172.37678528]
[-129.61561584 -160.26382446]
[-120.76824188 -148.15084839]
[-111.92086792 -136.03788757]
[-95.50338745 -136.60011292]
[-81.85415649 -127.16391754]
[-76.47415161 -111.29106140]
[-81.67505646 -95.18371582]
[-72.67556763 -83.18333435]
[-63.67607498 -71.18295288]
[-54.67658234 -59.18257141]
[-45.67709351 -47.18218994]
[-36.67760086 -35.18180847]
[-27.67811012 -23.18142700]
[-18.08945274 -19.02679253]
[-11.30565262 -11.45642948]
[-8.39259338 -2.01532340]
[-9.65743351 7.49643707]
[2.51110601 16.26721954]
[14.67964554 25.03800392]
[26.84818649 33.80878830]
[30.34570122 33.61970520]
[34.10954285 35.09989166]
[37.36109161 38.35673904]
[39.30276108 43.14889145]
[51.13068390 52.37387085]
[62.95861053 61.59884644]
[74.78653717 70.82382202]
[86.61445618 80.04879761]
[106.85763550 71.35060120]
[130.45222473 82.96739960]
[138.32966614 112.52824402]
[152.43580627 117.62889862]
[166.54196167 122.72954559]
[182.15078735 120.14597321]
[191.48861694 131.75003052]
[205.59477234 136.85067749]
[219.70091248 141.95133972]
[233.80706787 147.05198669]
[247.91320801 152.15263367]
[262.01934814 157.25328064]
[276.15740967 162.26484680]
[290.32678223 167.18711853]
[304.49615479 172.10939026]
[318.66552734 177.03167725]
[332.83489990 181.95394897]
[347.00427246 186.87622070]
[357.80242920 176.14491272]
[372.13070679 171.18632507]
[387.12963867 172.93336487]
[399.83050537 180.98628235]
[407.74279785 193.70260620]
[409.34265137 208.53184509]
[423.51202393 213.45411682]
[437.71215820 218.28691101]
[451.94250488 223.03001404]
[467.45675659 214.92189026]
[483.71084595 220.44587708]
[490.78726196 235.71475220]
[505.07629395 240.27795410]
[519.36535645 244.84115601]
[533.65441895 249.40435791]
[547.94348145 253.96755981]
[562.23254395 258.53076172]
[576.52160645 263.09396362]
[593.44940186 262.15267944]
[599.03997803 278.15835571]
[585.20745850 287.96127319]
[571.95837402 277.38302612]
[557.66937256 272.81982422]
[543.38031006 268.25662231]
[529.09124756 263.69342041]
[514.80218506 259.13021851]
[500.51312256 254.56701660]
[486.22406006 250.00381470]
[475.72579956 257.44995117]
[462.66064453 257.49835205]
[451.78860474 249.90763855]
[447.19940186 237.26037598]
[432.96905518 232.51725769]
[425.64791870 233.38165283]
[418.58975220 227.62348938]
[404.42037964 222.70121765]
[393.97152710 233.34486389]
[379.87966919 238.41720581]
[364.92166138 236.86178589]
[352.06991577 228.93380737]
[343.90161133 216.16017151]
[342.08200073 201.04559326]
[327.91262817 196.12332153]
[313.74325562 191.20104980]
[299.57388306 186.27877808]
[285.40451050 181.35650635]
[271.23510742 176.43421936]
[263.90368652 177.20619202]
[256.91870117 171.35943604]
[242.81256104 166.25877380]
[228.70640564 161.15812683]
[214.60026550 156.05747986]
[200.49412537 150.95683289]
[186.38796997 145.85617065]
[171.78810120 148.80458069]
[161.44129944 136.83569336]
[147.33515930 131.73504639]
[133.22901917 126.63439178]
[121.40108490 135.85937500]
[122.91253662 150.78302002]
[124.42398834 165.70668030]
[138.22297668 172.60533142]
[146.08209229 185.88079834]
[145.49348450 201.29693604]
[136.64501953 213.93449402]
[122.36016846 219.76089478]
[107.19720459 216.91693115]
[95.99456787 206.31011963]
[92.32697296 191.32505798]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 240]
[2 239]
[3 238]
[4 14]
[5 13]
[6 12]
[7 11]
[16 161]
[17 160]
[18 159]
[19 158]
[20 157]
[21 153]
[22 152]
[23 151]
[24 150]
[25 47]
[26 46]
[27 45]
[31 42]
[32 41]
[33 40]
[52 146]
[53 145]
[54 144]
[55 143]
[56 142]
[57 141]
[58 140]
[63 136]
[64 135]
[65 134]
[66 133]
[67 132]
[68 131]
[73 98]
[74 97]
[75 96]
[76 95]
[77 94]
[78 93]
[79 92]
[80 91]
[104 128]
[105 127]
[106 126]
[108 124]
[109 123]
[110 122]
[164 237]
[165 236]
[166 235]
[168 233]
[169 232]
[170 231]
[171 230]
[172 229]
[173 228]
[174 226]
[175 225]
[176 224]
[177 223]
[178 222]
[179 221]
[185 215]
[186 214]
[187 212]
[188 211]
[191 207]
[192 206]
[193 205]
[194 204]
[195 203]
[196 202]
[197 201]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
