%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:41:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCUCCGCGCUGGGCUCGGGAGGGGGGCGGCUGCGGGUGGAGGUGCGCUUCUGACAAGCCCGAAAGUCAUUUCCAAUCUCAAGUGGACUUUGUUCCAACUAUUGGGGGCGUCGCUCCCCCUCUUCAUGGUCGCGGGCAAACUUCCUCCUCGGCGCCUCUUCUAAUGGAGCCCCACCUGCUCGGGCUGCUCCUCGGCCUCCUGCUCGGUGGCACCAGGGUCCUCGCUGGCUACCCAAUUUGGUGGUCCCUGGCCCU\
GGGCCAGC\
) } def
/len { sequence length } bind def

/coor [
[312.72549438 545.25891113]
[299.53250122 538.12133789]
[290.68685913 526.00714111]
[287.90521240 511.26730347]
[291.72744751 496.76245117]
[301.41174316 485.30755615]
[315.07867432 479.12573242]
[330.07586670 479.41662598]
[343.49282837 486.12393188]
[335.53396606 473.40951538]
[327.57507324 460.69509888]
[319.61621094 447.98068237]
[311.65731812 435.26626587]
[303.69845581 422.55184937]
[295.73956299 409.83746338]
[291.39901733 407.91732788]
[288.20355225 403.26736450]
[287.74676514 396.72439575]
[280.09271240 383.82418823]
[272.43865967 370.92398071]
[264.78460693 358.02377319]
[257.13055420 345.12353516]
[249.47650146 332.22332764]
[241.51762390 319.50891113]
[233.25842285 306.98751831]
[224.99922180 294.46609497]
[216.74003601 281.94470215]
[208.48083496 269.42327881]
[200.22163391 256.90188599]
[191.96243286 244.38047791]
[183.70323181 231.85906982]
[175.44404602 219.33766174]
[166.96266174 206.96566772]
[158.26181030 194.74702454]
[149.56095886 182.52838135]
[140.86010742 170.30975342]
[132.15924072 158.09111023]
[123.45839691 145.87246704]
[114.75753784 133.65382385]
[106.05668640 121.43518829]
[90.13455963 130.85520935]
[66.84912872 126.61620331]
[52.73349762 131.69055176]
[45.74430847 137.51979065]
[38.41959763 136.74020386]
[24.24458313 141.64622498]
[22.01858330 156.78900146]
[13.00098896 169.15596008]
[-0.73602217 175.90525818]
[-16.03578568 175.48596191]
[-29.38252831 167.99443054]
[-37.70926666 155.15216064]
[-39.10257721 139.91020203]
[-33.24228668 125.77105713]
[-21.47504616 115.98378754]
[-6.50488234 112.79743958]
[8.22817039 116.94421387]
[19.33856392 127.47121429]
[33.51357651 122.56519318]
[47.65914536 117.57492065]
[61.77477646 112.50057220]
[61.46249008 105.00707245]
[60.52563858 82.52658844]
[46.03675079 78.64430237]
[31.54786491 74.76201630]
[17.05897713 70.87973022]
[2.57009029 66.99744415]
[-11.91879749 63.11516190]
[-26.43052673 59.31915283]
[-40.96458817 55.60955429]
[-55.49864578 51.89995575]
[-70.03270721 48.19035721]
[-81.88824463 58.20164490]
[-97.36647797 59.29885101]
[-110.51571655 51.06008530]
[-116.27980042 36.65332031]
[-112.44232178 21.61824608]
[-100.47888184 11.73615932]
[-84.98965454 10.80692482]
[-71.93056488 19.18785095]
[-66.32310486 33.65629959]
[-51.78904724 37.36589813]
[-37.25498962 41.07549286]
[-22.72093010 44.78509140]
[-15.48647976 43.39877319]
[-8.03651142 48.62627411]
[6.45237589 52.50856018]
[20.94126320 56.39084244]
[35.43014908 60.27312851]
[49.91903687 64.15541840]
[64.40792847 68.03770447]
[76.19872284 58.76531601]
[75.84175873 43.76956558]
[75.48479462 28.77381325]
[75.12782288 13.77806091]
[74.77085876 -1.21769118]
[74.41389465 -16.21344376]
[61.33991241 -21.53606606]
[51.30817032 -31.40539742]
[45.80682373 -44.31116104]
[45.63432312 -58.29620361]
[50.78370667 -71.25330353]
[60.44861603 -81.24267578]
[73.14936066 -86.78234100]
[72.97086334 -101.78127289]
[72.79236603 -116.78021240]
[72.61387634 -131.77915955]
[72.43537903 -146.77809143]
[72.25688171 -161.77702332]
[72.07838440 -176.77597046]
[71.89989471 -191.77490234]
[71.72139740 -206.77384949]
[71.54290009 -221.77278137]
[66.51479340 -228.77587891]
[66.28237152 -236.49443054]
[69.95587921 -242.24928284]
[67.82115936 -257.09658813]
[65.68643951 -271.94390869]
[63.19898605 -286.73623657]
[60.36021805 -301.46517944]
[46.60827255 -308.90948486]
[40.90689850 -323.47067261]
[45.94810867 -338.27340698]
[59.35160065 -346.32824707]
[74.78865051 -343.83193970]
[84.97035980 -331.96322632]
[85.08924103 -316.32608032]
[75.08914948 -304.30392456]
[77.92791748 -289.57501221]
[80.13562775 -287.89810181]
[81.82327271 -285.25982666]
[82.62657166 -281.85000610]
[82.25516510 -277.98492432]
[80.53376007 -274.07864380]
[82.66847992 -259.23132324]
[84.80320740 -244.38400269]
[91.07834625 -258.00833130]
[102.21422577 -268.05783081]
[116.40898895 -272.90640259]
[131.36584473 -271.76953125]
[144.66468811 -264.83117676]
[154.15367126 -253.21397400]
[158.29743958 -238.79769897]
[156.42550659 -223.91496277]
[148.84074402 -210.97387695]
[136.77043152 -202.06840515]
[122.16760254 -198.63949585]
[107.39508820 -201.24195862]
[94.84316254 -209.45471191]
[86.54183960 -221.95127869]
[86.72033691 -206.95233154]
[86.89883423 -191.95339966]
[87.07732391 -176.95446777]
[87.25582123 -161.95552063]
[87.43431854 -146.95658875]
[87.61281586 -131.95764160]
[87.79130554 -116.95870972]
[87.96980286 -101.95977020]
[88.14830017 -86.96083069]
[102.76570892 -80.46768951]
[113.11983490 -68.20030212]
[117.09448242 -52.58707809]
[113.84291077 -36.74793243]
[103.96766663 -23.87088966]
[89.40964508 -16.57040787]
[89.76660919 -1.57465672]
[90.12358093 13.42109489]
[90.48054504 28.41684723]
[90.83750916 43.41259766]
[91.19447327 58.40835190]
[126.99965668 82.10056305]
[118.27532196 112.73433685]
[126.97618103 124.95298004]
[135.67703247 137.17161560]
[144.37788391 149.39025879]
[153.07873535 161.60890198]
[161.77958679 173.82752991]
[170.48045349 186.04617310]
[179.18130493 198.26481628]
[183.86988831 200.40771484]
[186.97633362 203.78601074]
[188.29528809 207.59878540]
[187.96543884 211.07846069]
[196.22463989 223.59986877]
[204.48384094 236.12127686]
[212.74304199 248.64268494]
[221.00224304 261.16409302]
[229.26142883 273.68551636]
[237.52062988 286.20690918]
[245.77983093 298.72830200]
[254.03903198 311.24972534]
[257.91949463 313.02856445]
[260.76293945 315.67272949]
[262.42562866 318.75619507]
[262.91473389 321.84963989]
[262.37670898 324.56927490]
[270.03076172 337.46948242]
[277.68481445 350.36972046]
[285.33886719 363.26992798]
[292.99291992 376.17013550]
[300.64697266 389.07034302]
[308.45397949 401.87857056]
[316.41287231 414.59298706]
[324.37173462 427.30740356]
[332.33062744 440.02182007]
[340.28948975 452.73620605]
[348.24838257 465.45062256]
[356.20724487 478.16503906]
[365.05288696 490.27926636]
[374.74020386 501.73159790]
[384.42752075 513.18395996]
[392.33169556 517.69537354]
[394.16098022 524.83068848]
[403.71133423 536.39746094]
[413.26168823 547.96423340]
[422.81204224 559.53106689]
[432.36239624 571.09783936]
[441.91275024 582.66467285]
[449.76269531 587.26977539]
[451.50695801 594.42639160]
[460.91897583 606.10601807]
[473.17538452 603.84399414]
[485.16415405 606.97674561]
[494.63638306 614.85333252]
[499.84207153 625.93914795]
[499.85330200 638.11431885]
[494.72906494 649.07916260]
[503.86047363 660.97943115]
[512.99188232 672.87976074]
[522.12329102 684.78002930]
[531.25476074 696.68035889]
[540.38616943 708.58062744]
[549.51757812 720.48095703]
[565.21740723 722.29504395]
[574.97045898 734.73101807]
[572.99047852 750.41082764]
[560.45208740 760.03186035]
[544.79412842 757.88616943]
[535.30615234 745.24676514]
[537.61730957 729.61236572]
[528.48583984 717.71203613]
[519.35443115 705.81176758]
[510.22302246 693.91143799]
[501.09158325 682.01116943]
[491.96017456 670.11083984]
[482.82876587 658.21057129]
[465.18887329 659.47906494]
[450.20010376 649.79846191]
[443.99221802 632.90191650]
[449.23934937 615.51806641]
[439.82733154 603.83843994]
[430.34594727 592.21502686]
[420.79562378 580.64819336]
[411.24526978 569.08142090]
[401.69491577 557.51458740]
[392.14456177 545.94781494]
[382.59420776 534.38104248]
[372.97518921 522.87127686]
[363.28787231 511.41891479]
[353.60055542 499.96658325]
[355.90408325 514.78869629]
[351.61477661 529.16229248]
[341.56509399 540.29803467]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 208]
[10 207]
[11 206]
[12 205]
[13 204]
[14 203]
[15 202]
[18 201]
[19 200]
[20 199]
[21 198]
[22 197]
[23 196]
[24 191]
[25 190]
[26 189]
[27 188]
[28 187]
[29 186]
[30 185]
[31 184]
[32 183]
[33 179]
[34 178]
[35 177]
[36 176]
[37 175]
[38 174]
[39 173]
[40 172]
[42 61]
[43 60]
[45 59]
[46 58]
[63 91]
[64 90]
[65 89]
[66 88]
[67 87]
[68 86]
[69 84]
[70 83]
[71 82]
[72 81]
[92 170]
[93 169]
[94 168]
[95 167]
[96 166]
[97 165]
[104 159]
[105 158]
[106 157]
[107 156]
[108 155]
[109 154]
[110 153]
[111 152]
[112 151]
[113 150]
[116 136]
[117 135]
[118 134]
[119 129]
[120 128]
[209 260]
[210 259]
[211 258]
[213 257]
[214 256]
[215 255]
[216 254]
[217 253]
[218 252]
[220 251]
[221 250]
[227 246]
[228 245]
[229 244]
[230 243]
[231 242]
[232 241]
[233 240]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
