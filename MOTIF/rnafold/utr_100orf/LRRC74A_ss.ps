%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:34:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCACAGGCGGGUGGGGAUCCUUUCAACAGGGCUCCCAGCAAUAGAGCAGUCCCACUCUCCCAGAUGAGCUGGAGAAGUAGCUACCUCUCCCAGACAGAGUUGGGGUCAAAUUCAUGCACAUCCAAUUCCCAUCAAAGCCUACUCUUCCCAGGGCUUGCUGGGAGGGAAGGAUAACUGCAGGCUCCCCUGGGAUGCCCCCAGAUGAGAUUGAAA\
) } def
/len { sequence length } bind def

/coor [
[106.89211273 210.94143677]
[105.32781219 204.19520569]
[105.01306915 197.26869202]
[105.96138763 190.39166260]
[108.14433289 183.79281616]
[111.49234772 177.69213867]
[115.89698029 172.29360962]
[121.21441650 167.77835083]
[115.24713898 154.01638794]
[109.27986908 140.25442505]
[103.31259155 126.49246216]
[97.01741028 130.49641418]
[89.14118195 132.83615112]
[78.96923065 143.86027527]
[68.79728699 154.88441467]
[58.62533951 165.90853882]
[48.45339203 176.93267822]
[44.78155136 192.32189941]
[30.46433830 196.42881775]
[20.29239082 207.45294189]
[10.12044430 218.47708130]
[-0.05150367 229.50120544]
[0.83374244 245.28068542]
[-9.76021481 257.00857544]
[-25.54817009 257.72695923]
[-37.16340637 247.00958252]
[-37.71481323 231.21492004]
[-26.87524986 219.71363831]
[-11.07563591 219.32925415]
[-0.90368789 208.30513000]
[9.26826000 197.28099060]
[19.44020653 186.25686646]
[22.38448143 171.65615845]
[37.42926025 166.76072693]
[47.60120773 155.73660278]
[57.77315521 144.71246338]
[67.94509888 133.68833923]
[78.11705017 122.66419983]
[70.11669159 109.97584534]
[55.78464127 114.40216064]
[48.62721252 128.49282837]
[33.57683563 133.31585693]
[19.56263351 126.00985718]
[14.89898396 110.90933228]
[22.35274696 96.97315979]
[37.50173569 92.46942139]
[51.35832596 100.07010651]
[65.69037628 95.64379120]
[77.88740540 78.78774261]
[95.53968811 73.67644501]
[97.28914642 58.77881622]
[99.03859711 43.88118744]
[100.78805542 28.98355675]
[91.26631165 16.65577507]
[93.25273895 1.57237983]
[105.06407166 -7.42917299]
[106.81352997 -22.32680321]
[108.56298065 -37.22443390]
[110.31243896 -52.12206650]
[112.06189728 -67.01969910]
[113.81135559 -81.91732788]
[115.56080627 -96.81495667]
[117.31026459 -111.71258545]
[119.05972290 -126.61022186]
[116.95295715 -135.49519348]
[120.94512177 -141.71215820]
[122.91207123 -156.58264160]
[124.87902069 -171.45312500]
[126.84596252 -186.32359314]
[128.81291199 -201.19407654]
[130.77986145 -216.06454468]
[132.42042542 -230.97456360]
[133.73382568 -245.91696167]
[135.04722595 -260.85934448]
[136.36062622 -275.80172729]
[129.86138916 -290.22637939]
[138.68338013 -302.22729492]
[139.99678040 -317.16967773]
[141.31018066 -332.11206055]
[142.62358093 -347.05444336]
[143.93698120 -361.99685669]
[145.14117432 -376.94842529]
[146.23611450 -391.90841675]
[128.40029907 -402.85375977]
[118.92861938 -421.40270996]
[120.50555420 -442.07073975]
[132.56575012 -458.80703735]
[125.60984039 -472.09667969]
[118.65392303 -485.38635254]
[105.95195770 -496.61563110]
[113.22612762 -511.92974854]
[129.95547485 -509.17926025]
[131.94358826 -492.34228516]
[138.89950562 -479.05261230]
[145.85542297 -465.76293945]
[149.05793762 -466.54733276]
[152.31639099 -467.05120850]
[155.60624695 -467.27081299]
[158.22296143 -482.04083252]
[160.83967590 -496.81082153]
[163.45637512 -511.58081055]
[166.07308960 -526.35083008]
[168.68980408 -541.12078857]
[171.30651855 -555.89080811]
[173.92323303 -570.66082764]
[176.43197632 -585.44952393]
[178.83259583 -600.25616455]
[181.12496948 -615.07995605]
[183.30899048 -629.92010498]
[173.67994690 -642.45239258]
[175.81562805 -658.11169434]
[188.44897461 -667.60772705]
[204.08483887 -665.30657959]
[213.44674683 -652.57354736]
[210.98045349 -636.96289062]
[198.14913940 -627.73608398]
[195.96511841 -612.89593506]
[198.10050964 -605.82287598]
[193.63925171 -597.85552979]
[191.23863220 -583.04888916]
[193.27043152 -575.94537354]
[188.69323730 -568.04406738]
[186.07652283 -553.27410889]
[183.45980835 -538.50408936]
[180.84309387 -523.73406982]
[178.22637939 -508.96411133]
[175.60966492 -494.19409180]
[172.99295044 -479.42410278]
[170.37623596 -464.65411377]
[181.17352295 -458.29705811]
[189.34069824 -448.75518799]
[193.97753906 -437.05014038]
[194.56318665 -424.44357300]
[191.01457214 -412.30114746]
[183.69760132 -401.94467163]
[173.38945007 -394.50811768]
[161.19609070 -390.81347656]
[160.10116577 -375.85351562]
[162.74714661 -368.95516968]
[158.87936401 -360.68344116]
[157.56596375 -345.74105835]
[156.25256348 -330.79867554]
[154.93916321 -315.85629272]
[153.62576294 -300.91387939]
[160.21894836 -287.55801392]
[151.30302429 -274.48834229]
[149.98962402 -259.54592896]
[148.67622375 -244.60356140]
[147.36282349 -229.66116333]
[149.33312988 -226.74052429]
[149.98837280 -222.72131348]
[148.82800293 -218.23121643]
[145.65034485 -214.09761047]
[143.68339539 -199.22712708]
[141.71644592 -184.35664368]
[139.74949646 -169.48617554]
[137.78254700 -154.61569214]
[135.81559753 -139.74520874]
[133.95735168 -124.86076355]
[132.20790100 -109.96313477]
[130.45843506 -95.06549835]
[128.70898438 -80.16786957]
[126.95952606 -65.27024078]
[125.21006775 -50.37260818]
[123.46061707 -35.47497940]
[121.71115875 -20.57734680]
[119.96170044 -5.67971659]
[129.36631775 5.81326580]
[127.80435181 20.94650269]
[115.68568420 30.73301315]
[113.93623352 45.63064194]
[112.18677521 60.52827454]
[110.43731689 75.42590332]
[123.59313202 87.50247955]
[126.19332123 105.17047119]
[117.07455444 120.52518463]
[123.04183197 134.28715515]
[129.00910950 148.04911804]
[134.97637939 161.81108093]
[158.93495178 164.60794067]
[176.36206055 181.11561584]
[180.41249084 204.65707397]
[169.61090088 225.83157349]
[177.88742065 238.34153748]
[186.16394043 250.85150146]
[201.39286804 254.12524414]
[209.60821533 266.93002319]
[206.39335632 281.42831421]
[214.66987610 293.93829346]
[222.94639587 306.44824219]
[231.22291565 318.95822144]
[239.49942017 331.46817017]
[254.86953735 336.06591797]
[260.72409058 351.00256348]
[252.57197571 364.82003784]
[236.66677856 366.91873169]
[225.20962524 355.68872070]
[226.98945618 339.74468994]
[218.71293640 327.23474121]
[210.43643188 314.72476196]
[202.15991211 302.21478271]
[193.88339233 289.70483398]
[179.28260803 286.99325562]
[170.71083069 274.42428589]
[173.65396118 259.12802124]
[165.37745667 246.61805725]
[157.10093689 234.10807800]
[150.55563354 236.12585449]
[143.74449158 236.92359924]
[136.89321899 236.47178650]
[130.22946167 234.78236389]
[123.97514343 231.90843201]
[118.33913422 227.94262695]
[113.51029205 223.01403809]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 179]
[9 178]
[10 177]
[11 176]
[13 38]
[14 37]
[15 36]
[16 35]
[17 34]
[19 32]
[20 31]
[21 30]
[22 29]
[39 48]
[40 47]
[50 173]
[51 172]
[52 171]
[53 170]
[56 167]
[57 166]
[58 165]
[59 164]
[60 163]
[61 162]
[62 161]
[63 160]
[64 159]
[66 158]
[67 157]
[68 156]
[69 155]
[70 154]
[71 153]
[72 149]
[73 148]
[74 147]
[75 146]
[77 144]
[78 143]
[79 142]
[80 141]
[81 140]
[82 138]
[83 137]
[87 95]
[88 94]
[89 93]
[98 129]
[99 128]
[100 127]
[101 126]
[102 125]
[103 124]
[104 123]
[105 122]
[106 120]
[107 119]
[108 117]
[109 116]
[183 207]
[184 206]
[185 205]
[188 202]
[189 201]
[190 200]
[191 199]
[192 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
