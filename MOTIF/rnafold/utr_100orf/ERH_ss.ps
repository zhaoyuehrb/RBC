%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:50:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCGUUGUAGUUAAGCUCGUGUAACGGCGGCGGUGUCGGCAGCUGCUGUAGCGAAGAGAGUUUGGCGCGAUGUCUCACACCAUUUUGCUGGUACAGCCUACCAAGAGGCCAGAAGGCAGAACUUAUGCUGACUACGAAUCUGUGAAUGAAUGCAUGGAAGGUGUUUGUA\
) } def
/len { sequence length } bind def

/coor [
[-18.80592728 148.33818054]
[-24.90013885 142.92747498]
[-29.10481834 135.98590088]
[-43.98238373 137.89851379]
[-58.85994720 139.81112671]
[-73.73751068 141.72372437]
[-88.61507416 143.63633728]
[-103.49263763 145.54895020]
[-118.37020111 147.46156311]
[-133.24777222 149.37417603]
[-141.39567566 153.58616638]
[-148.41421509 151.18328857]
[-163.32423401 152.82386780]
[-178.23425293 154.46443176]
[-193.14427185 156.10499573]
[-208.05427551 157.74555969]
[-222.96429443 159.38613892]
[-237.87431335 161.02670288]
[-252.78431702 162.66726685]
[-267.69433594 164.30784607]
[-279.36087036 180.62321472]
[-298.95611572 183.11988831]
[-313.87500000 170.64083862]
[-328.67279053 173.09553528]
[-341.02075195 182.98687744]
[-354.84262085 177.43666077]
[-369.64041138 179.89134216]
[-384.43820190 182.34603882]
[-399.23596191 184.80073547]
[-414.03375244 187.25543213]
[-428.83154297 189.71012878]
[-443.62933350 192.16482544]
[-458.42712402 194.61952209]
[-470.77508545 204.51086426]
[-484.59695435 198.96063232]
[-499.39474487 201.41532898]
[-511.71304321 212.24081421]
[-527.15850830 206.72999573]
[-529.84216309 190.55192566]
[-517.00329590 180.34921265]
[-501.84942627 186.61753845]
[-487.05163574 184.16284180]
[-475.76211548 174.44708252]
[-460.88180542 179.82173157]
[-446.08401489 177.36703491]
[-431.28625488 174.91233826]
[-416.48846436 172.45764160]
[-401.69067383 170.00296021]
[-386.89288330 167.54826355]
[-372.09509277 165.09356689]
[-357.29730225 162.63887024]
[-346.00778198 152.92311096]
[-331.12747192 158.29774475]
[-316.32968140 155.84306335]
[-312.80026245 146.13650513]
[-305.48944092 138.72669983]
[-295.67984009 135.00964355]
[-285.13284302 135.72492981]
[-275.77264404 140.80970764]
[-269.33489990 149.39782715]
[-254.42489624 147.75726318]
[-239.51487732 146.11668396]
[-224.60485840 144.47612000]
[-209.69485474 142.83555603]
[-194.78483582 141.19497681]
[-179.87481689 139.55441284]
[-164.96479797 137.91384888]
[-150.05479431 136.27328491]
[-135.16038513 134.49661255]
[-120.28281403 132.58399963]
[-105.40525055 130.67138672]
[-90.52768707 128.75877380]
[-75.65012360 126.84616852]
[-60.77256012 124.93355560]
[-45.89499664 123.02094269]
[-31.01743126 121.10832977]
[-19.52639771 102.45143890]
[2.25296187 98.22991943]
[20.32184029 111.56651306]
[34.90097046 108.03820038]
[49.48009872 104.50988007]
[64.05922699 100.98156738]
[78.63835144 97.45325470]
[85.45446014 80.99166107]
[103.82917786 73.92232513]
[123.32167053 83.13703918]
[135.83163452 74.86051941]
[148.34161377 66.58400726]
[160.85157776 58.30749130]
[166.30752563 50.93444061]
[173.66647339 49.99649048]
[186.32551575 41.94983673]
[198.98455811 33.90318298]
[211.64360046 25.85653114]
[217.23329163 18.58436012]
[224.60813904 17.78096771]
[237.41204834 9.96686268]
[250.21594238 2.15275741]
[263.01983643 -5.66134787]
[259.05358887 -19.58021545]
[258.83419800 -34.03934860]
[262.37039185 -48.04858398]
[269.41394043 -60.65021515]
[279.47702026 -70.98443604]
[291.86608887 -78.34803009]
[305.72961426 -82.24220276]
[320.11660767 -82.40638733]
[334.04183960 -78.83562469]
[346.55340576 -71.78054047]
[356.79766846 -61.72969437]
[369.74215698 -69.30864716]
[382.68664551 -76.88759613]
[390.32495117 -91.39925385]
[406.71990967 -91.76966095]
[415.00579834 -77.61776733]
[406.65878296 -63.50183105]
[390.26559448 -63.94311905]
[377.32110596 -56.36416626]
[364.37661743 -48.78521729]
[368.27914429 -33.70244598]
[367.78292847 -18.11637878]
[362.91979980 -3.28483868]
[354.07446289 9.59293747]
[341.95382690 19.47328186]
[327.53073120 25.55266953]
[311.96572876 27.33306503]
[296.51379395 24.66271591]
[282.42300415 17.74903870]
[270.83395386 7.14254856]
[258.03002930 14.95665359]
[245.22615051 22.77075958]
[232.42225647 30.58486366]
[219.69024658 38.51557541]
[207.03120422 46.56222534]
[194.37216187 54.60887909]
[181.71311951 62.65553284]
[169.12808228 70.81745911]
[156.61811829 79.09397125]
[144.10815430 87.37049103]
[131.59819031 95.64700317]
[130.09385681 110.57138062]
[140.70045471 121.17797852]
[151.30705261 131.78457642]
[161.91365051 142.39118958]
[172.52026367 152.99778748]
[183.12686157 163.60438538]
[198.43125916 161.04406738]
[212.30262756 167.99853516]
[219.40716553 181.79365540]
[217.01301575 197.12490845]
[206.04078674 208.09713745]
[190.70951843 210.49128723]
[176.91439819 203.38674927]
[169.95994568 189.51538086]
[172.52026367 174.21098328]
[161.91365051 163.60438538]
[151.30705261 152.99778748]
[140.70045471 142.39118958]
[130.09385681 131.78457642]
[119.48725128 121.17797852]
[97.07211304 124.97518158]
[82.16667175 112.03237915]
[67.58753967 115.56069183]
[53.00841141 119.08901215]
[38.42928314 122.61732483]
[23.85015488 126.14563751]
[22.21664810 134.37149048]
[18.24044991 141.71697998]
[12.29461002 147.53498840]
[4.92465830 151.31968689]
[-3.20141864 152.75054932]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 76]
[4 75]
[5 74]
[6 73]
[7 72]
[8 71]
[9 70]
[10 69]
[12 68]
[13 67]
[14 66]
[15 65]
[16 64]
[17 63]
[18 62]
[19 61]
[20 60]
[23 54]
[24 53]
[26 51]
[27 50]
[28 49]
[29 48]
[30 47]
[31 46]
[32 45]
[33 44]
[35 42]
[36 41]
[79 166]
[80 165]
[81 164]
[82 163]
[83 162]
[86 140]
[87 139]
[88 138]
[89 137]
[91 136]
[92 135]
[93 134]
[94 133]
[96 132]
[97 131]
[98 130]
[99 129]
[110 119]
[111 118]
[112 117]
[141 160]
[142 159]
[143 158]
[144 157]
[145 156]
[146 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
