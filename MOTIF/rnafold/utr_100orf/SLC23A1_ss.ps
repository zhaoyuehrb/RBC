%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:17:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACAAUGCCUGAUAUGUGGAGUAAAGUCCUCCUCCUUGGCCUUUGUCAAGUCAUCCCCUCUUCUCCUCAGGAACUGCUCAAACCUGUGCCCCAAAGAUGAGGGCCCAGGAGGACCUCGAGGGCCGGACACAGCAUGAAACCACCAGGGACCCCUCGACCCCGCUACCCACAGAGCCUAAGUUUGACAUGUUGUACA\
) } def
/len { sequence length } bind def

/coor [
[109.11862183 301.70278931]
[95.17838287 307.61450195]
[80.07376099 308.67706299]
[65.44317627 304.77514648]
[52.87366104 296.33203125]
[43.72865677 284.26358032]
[39.00014114 269.87887573]
[39.20103455 254.73825073]
[44.30953979 240.48406982]
[53.77152634 228.66249084]
[66.56063080 220.55586243]
[81.28958130 217.04350281]
[82.71542358 202.11143494]
[84.14126587 187.17935181]
[85.56710815 172.24726868]
[86.99295044 157.31520081]
[88.41878510 142.38311768]
[89.84462738 127.45103455]
[76.25001526 121.11176300]
[65.72789001 131.80216980]
[55.20576477 142.49258423]
[55.58175278 158.29240417]
[44.61514664 169.67260742]
[28.81223869 169.88153076]
[17.54861450 158.79521179]
[17.50678253 142.99098206]
[28.71156120 131.84519958]
[44.51535416 131.97045898]
[55.03747559 121.28005219]
[65.55960083 110.58963776]
[65.08367920 95.59719086]
[53.90471268 85.59565735]
[42.72574615 75.59412384]
[31.54677963 65.59258270]
[20.36781311 55.59104919]
[9.18884659 45.58951569]
[-1.99012005 35.58798218]
[-17.43388939 32.15278625]
[-21.76008034 17.90030289]
[-32.93904877 7.89876795]
[-44.11801529 -2.10276699]
[-55.29698181 -12.10430241]
[-66.47594452 -22.10583687]
[-77.65491486 -32.10737228]
[-88.83388519 -42.10890579]
[-100.01284790 -52.11044312]
[-111.19181824 -62.11197662]
[-122.37078094 -72.11351013]
[-149.13032532 -68.83142090]
[-166.98085022 -93.71412659]
[-180.62532043 -99.94535065]
[-194.26980591 -106.17657471]
[-200.89387512 -105.92854309]
[-205.89309692 -108.65943146]
[-208.24348450 -112.82807159]
[-221.68338013 -119.48906708]
[-235.12329102 -126.15007019]
[-246.82424927 -116.40288544]
[-261.47988892 -112.26384735]
[-276.55108643 -114.45005798]
[-289.42660522 -122.58275604]
[-297.87570190 -135.25289917]
[-300.43453979 -150.26530457]
[-296.65979004 -165.01898193]
[-287.20541382 -176.95776367]
[-273.70944214 -184.01319885]
[-258.51016235 -184.96287537]
[-244.24093628 -179.64225769]
[-233.37397766 -168.97319031]
[-227.79206848 -154.80413818]
[-228.46229553 -139.58998108]
[-215.02238464 -132.92897034]
[-201.58247375 -126.26797485]
[-188.03857422 -119.82105255]
[-174.39410400 -113.58982849]
[-160.74961853 -107.35860443]
[-150.48487854 -118.29639435]
[-157.56895447 -131.51818848]
[-170.90644836 -140.02828979]
[-170.09709167 -154.90089417]
[-177.18116760 -168.12269592]
[-191.39361572 -176.30426025]
[-191.14382935 -192.70150757]
[-176.68873596 -200.44635010]
[-162.89851379 -191.57156372]
[-163.95936584 -175.20675659]
[-156.87528992 -161.98497009]
[-144.04450989 -154.42056274]
[-144.34715271 -138.60226440]
[-137.26307678 -125.38045502]
[-128.09899902 -123.65724182]
[-120.11830902 -119.45478821]
[-113.94612122 -113.30278778]
[-110.00564575 -105.87344360]
[-108.49111176 -97.91123962]
[-109.36363220 -90.15972137]
[-112.36924744 -83.29248047]
[-101.19027710 -73.29094696]
[-90.01131439 -63.28940964]
[-78.83234406 -53.28787231]
[-67.65338135 -43.28633881]
[-56.47441483 -33.28480530]
[-45.29544449 -23.28326797]
[-34.11647797 -13.28173351]
[-22.93751335 -3.28019881]
[-11.75854588 6.72133636]
[2.88562918 9.44115162]
[8.01141453 24.40901375]
[19.19038200 34.41054916]
[30.36934853 44.41208267]
[41.54831696 54.41362000]
[52.72728348 64.41515350]
[63.90625000 74.41668701]
[75.08521271 84.41822052]
[85.01354218 64.66397858]
[109.86136627 53.65831757]
[141.23664856 61.55801773]
[155.33203125 56.42771530]
[169.42741394 51.29741287]
[183.52281189 46.16711044]
[197.61819458 41.03680801]
[211.71359253 35.90650558]
[225.80897522 30.77620506]
[239.77828979 25.31191826]
[253.61360168 19.51674080]
[267.40249634 13.61198711]
[281.14413452 7.59802961]
[280.15795898 -7.52821445]
[284.40771484 -22.07865906]
[293.38021851 -34.29626465]
[305.99200439 -42.70569992]
[320.72012329 -46.29148483]
[335.78613281 -44.62061310]
[349.37066650 -37.89485550]
[359.83337402 -26.92637825]
[365.91082764 -13.03967762]
[366.86914062 2.08835745]
[362.59255981 16.63094521]
[353.59756470 28.83199692]
[340.97030640 37.21817398]
[326.23559570 40.77680969]
[311.17269897 39.07817841]
[297.60055542 32.32739639]
[287.15808105 21.33965683]
[273.41647339 27.35361481]
[268.54397583 32.92136765]
[259.40878296 33.35205460]
[245.57345581 39.14723206]
[243.90521240 42.26498032]
[240.63847351 44.72573471]
[236.10034180 45.78454590]
[230.93928528 44.87159348]
[216.84388733 50.00189590]
[202.74850464 55.13219833]
[188.65310669 60.26250076]
[174.55772400 65.39279938]
[160.46232605 70.52310181]
[146.36694336 75.65340424]
[145.18193054 83.05919647]
[159.99348450 85.42946625]
[157.62297058 100.24096680]
[142.81190491 97.87078094]
[141.62690735 105.27657318]
[153.41769409 114.54895782]
[165.20849609 123.82134247]
[180.10069275 119.46220398]
[194.69960022 124.72068787]
[203.39163208 137.57479858]
[202.83451843 153.08187866]
[193.24250793 165.27911377]
[178.30389404 169.47645569]
[163.76289368 164.05990601]
[155.21081543 151.11225891]
[155.93611145 135.61213684]
[144.14530945 126.33975220]
[132.35452271 117.06736755]
[125.46006775 120.01974487]
[131.36482239 133.80865479]
[137.26957703 147.59754944]
[147.14619446 158.88703918]
[139.46113586 171.76879883]
[124.83507538 168.44038391]
[123.48066711 153.50230408]
[117.57591248 139.71340942]
[111.67115784 125.92449951]
[104.77671051 128.87687683]
[103.35086823 143.80895996]
[101.92502594 158.74102783]
[100.49918365 173.67311096]
[99.07334137 188.60519409]
[97.64750671 203.53727722]
[96.22166443 218.46934509]
[110.01972961 224.70570374]
[121.04352570 235.08619690]
[128.09727478 248.48483276]
[130.41584778 263.44821167]
[127.74772644 278.35324097]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 192]
[13 191]
[14 190]
[15 189]
[16 188]
[17 187]
[18 186]
[19 30]
[20 29]
[21 28]
[31 114]
[32 113]
[33 112]
[34 111]
[35 110]
[36 109]
[37 108]
[39 106]
[40 105]
[41 104]
[42 103]
[43 102]
[44 101]
[45 100]
[46 99]
[47 98]
[48 97]
[50 76]
[51 75]
[52 74]
[55 73]
[56 72]
[57 71]
[77 90]
[78 89]
[80 87]
[81 86]
[117 158]
[118 157]
[119 156]
[120 155]
[121 154]
[122 153]
[123 152]
[124 148]
[125 147]
[126 145]
[127 144]
[163 176]
[164 175]
[165 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
