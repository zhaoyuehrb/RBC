%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:19:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAAAAACAGACCGACAGGCCUCUAGGCGGGAAGCGCGGAGUGCGCCGGCGCGUAGUCGGGGACGCCGGGCCGAGGCUUUGCUAGGGAACACUGUUAUCGCCCCGCCCCCUCGGAGCUUUUUCUCCAGUUAACUGUCGGAGUAGCGGGGGCUCCGGCGCCGGGCGACAUGCCGGUGCGCUUCAAGGGGCUGAGUGAAUACCAGAGGAACUUCCUGUGGAAAAAGUCUUAUUUGUCCGAGUCUUGUAAUUCCUC\
CGUGGGGCGAAAGU\
) } def
/len { sequence length } bind def

/coor [
[432.41583252 882.85937500]
[429.98315430 868.05792236]
[427.55047607 853.25653076]
[425.11782837 838.45507812]
[422.68515015 823.65368652]
[420.25247192 808.85223389]
[408.03970337 800.40338135]
[405.36178589 785.42724609]
[414.30654907 772.67468262]
[411.87390137 757.87322998]
[409.44122314 743.07183838]
[406.92248535 728.28479004]
[404.31774902 713.51269531]
[401.71304321 698.74053955]
[399.02243042 683.98382568]
[396.24600220 669.24304199]
[393.38385010 654.51861572]
[390.43609619 639.81115723]
[387.48837280 625.10363770]
[384.54061890 610.39611816]
[399.22439575 573.18389893]
[389.85256958 561.47198486]
[380.48074341 549.76007080]
[371.10891724 538.04815674]
[361.73709106 526.33624268]
[352.36526489 514.62432861]
[345.07272339 517.10339355]
[336.57376099 516.29321289]
[328.40103149 511.69326782]
[317.73287964 522.23797607]
[307.06475830 532.78271484]
[305.53396606 548.75256348]
[292.01565552 557.39166260]
[276.87991333 552.07293701]
[271.73760986 536.87634277]
[280.53347778 523.45947266]
[296.52005005 522.11456299]
[307.18817139 511.56985474]
[317.85629272 501.02514648]
[319.77093506 486.14782715]
[312.12030029 473.24557495]
[304.46966553 460.34335327]
[296.81900024 447.44110107]
[289.16836548 434.53887939]
[281.51773071 421.63662720]
[273.86709595 408.73440552]
[266.21646118 395.83215332]
[258.56582642 382.92993164]
[250.91517639 370.02767944]
[243.26454163 357.12545776]
[235.61390686 344.22320557]
[227.96327209 331.32098389]
[220.31262207 318.41873169]
[207.16593933 311.41775513]
[206.78250122 295.60119629]
[199.13186646 282.69894409]
[185.98518372 275.69793701]
[185.60173035 259.88137817]
[177.95109558 246.97915649]
[170.30046082 234.07691956]
[157.15377808 227.07591248]
[156.77032471 211.25935364]
[149.11968994 198.35711670]
[144.82926941 196.33357239]
[141.74766541 191.61170959]
[141.44515991 185.06443787]
[134.09681702 171.98768616]
[126.74847412 158.91091919]
[119.40012360 145.83415222]
[112.05178070 132.75738525]
[104.70343781 119.68061066]
[97.35508728 106.60385132]
[92.38538361 112.52924347]
[85.50209045 116.82477570]
[77.13329315 119.04242706]
[67.79863739 118.83482361]
[58.08726883 115.97245789]
[45.18503189 108.32181549]
[32.28279495 100.67118073]
[17.14995956 104.36375427]
[4.17424297 96.42111969]
[0.74719787 81.97151947]
[-12.15503979 74.32087708]
[-27.97159767 73.93743896]
[-34.97259903 60.79075241]
[-47.87483597 53.14011383]
[-60.77707291 45.48947525]
[-76.02542877 49.64436722]
[-89.70394135 41.72768021]
[-93.69738770 26.43624687]
[-85.63652802 12.84220219]
[-70.30372620 9.01065063]
[-56.79566193 17.21478462]
[-53.12643433 32.58723831]
[-40.22419739 40.23787689]
[-27.32195854 47.88851547]
[-12.42825413 47.72473526]
[-4.50440025 61.41864014]
[8.39783669 69.06928253]
[22.72028160 65.14459229]
[35.91397095 72.71963501]
[39.93343353 87.76894379]
[52.83567047 95.41957855]
[65.73790741 103.07022095]
[72.02793884 98.98542786]
[84.60799408 90.81584167]
[90.89802551 86.73104858]
[89.15663147 71.83247375]
[87.41523743 56.93389511]
[85.67384338 42.03532028]
[83.93244934 27.13674545]
[82.19105530 12.23817062]
[71.11924744 22.35820198]
[56.28569794 20.12977600]
[48.67614365 7.20326519]
[53.92622375 -6.84795141]
[68.14772034 -11.61753750]
[80.80767059 -3.57397079]
[79.93550110 -18.54859352]
[79.06332397 -33.52321625]
[70.53671265 -46.85015488]
[77.52089691 -60.00577927]
[76.64871979 -74.98040009]
[75.77655029 -89.95502472]
[74.90437317 -104.92964935]
[63.38092041 -115.41047668]
[62.70973587 -130.60929871]
[72.77261353 -141.53056335]
[71.90044403 -156.50518799]
[71.02827454 -171.47979736]
[61.56962967 -184.87629700]
[68.68675232 -199.65055847]
[85.05815887 -200.60408020]
[93.84233856 -186.75596619]
[86.00289154 -172.35197449]
[86.87506866 -157.37734985]
[87.74723816 -142.40272522]
[99.00996399 -132.72354126]
[100.10778809 -117.54956818]
[89.87899780 -105.80181885]
[90.75117493 -90.82719421]
[91.62334442 -75.85257721]
[92.49551392 -60.87795258]
[100.95975494 -48.62209702]
[94.03794861 -34.39538956]
[94.91012573 -19.42076492]
[95.78229523 -4.44614315]
[97.08963013 10.49677753]
[98.83102417 25.39535332]
[100.57241821 40.29392624]
[102.31381226 55.19250488]
[104.05520630 70.09107971]
[105.79660034 84.98965454]
[110.43185425 99.25550079]
[117.78019714 112.33226776]
[125.12854767 125.40903473]
[132.47689819 138.48579407]
[139.82524109 151.56256104]
[147.17358398 164.63932800]
[154.52192688 177.71609497]
[162.02192688 190.70648193]
[169.67256165 203.60871887]
[183.36647034 211.53257751]
[183.20269775 226.42626953]
[190.85333252 239.32850647]
[198.50396729 252.23074341]
[212.19787598 260.15460205]
[212.03410339 275.04830933]
[219.68473816 287.95053101]
[233.37864685 295.87438965]
[233.21485901 310.76809692]
[240.86550903 323.67034912]
[248.51614380 336.57257080]
[256.16677856 349.47482300]
[263.81741333 362.37704468]
[271.46804810 375.27929688]
[279.11868286 388.18151855]
[286.76934814 401.08377075]
[294.41998291 413.98599243]
[302.07061768 426.88824463]
[309.72125244 439.79046631]
[317.37188721 452.69271851]
[325.02252197 465.59494019]
[332.67315674 478.49719238]
[361.28298950 480.85839844]
[364.07717896 505.25253296]
[373.44900513 516.96441650]
[382.82083130 528.67633057]
[392.19265747 540.38824463]
[401.56448364 552.10015869]
[410.93630981 563.81207275]
[423.70306396 571.68670654]
[438.37527466 574.80541992]
[453.04748535 577.92407227]
[467.71969604 581.04272461]
[476.75360107 567.72247314]
[490.17929077 558.91607666]
[505.91995239 555.95043945]
[521.55426025 559.25146484]
[534.68884277 568.28363037]
[543.32464600 581.63616943]
[546.16119385 597.24377441]
[560.86871338 600.19152832]
[575.57617188 603.13928223]
[590.62780762 598.26483154]
[601.58636475 608.35235596]
[616.29388428 611.30010986]
[631.00140381 614.24786377]
[645.70886230 617.19561768]
[662.42736816 614.37982178]
[669.76123047 629.66546631]
[657.10321045 640.94421387]
[642.76116943 631.90313721]
[628.05364990 628.95538330]
[613.34613037 626.00762939]
[598.63861084 623.05987549]
[584.63903809 628.14520264]
[572.62841797 617.84680176]
[557.92095947 614.89904785]
[543.21343994 611.95129395]
[535.86114502 623.88336182]
[524.85778809 632.61224365]
[511.50927734 637.07592773]
[497.40887451 636.72015381]
[484.24688721 631.56726074]
[473.60806274 622.21582031]
[466.78076172 609.77117920]
[464.60101318 595.71496582]
[449.92880249 592.59631348]
[435.25659180 589.47760010]
[420.58438110 586.35894775]
[409.91577148 596.90411377]
[399.24810791 607.44836426]
[402.19586182 622.15588379]
[405.14361572 636.86340332]
[408.09136963 651.57086182]
[412.83044434 659.33721924]
[410.98681641 666.46661377]
[413.76321411 681.20745850]
[418.41162109 689.02838135]
[416.48516846 696.13586426]
[419.08987427 710.90795898]
[421.69461060 725.68005371]
[426.25167847 733.55456543]
[424.24264526 740.63916016]
[426.67532349 755.44055176]
[429.10797119 770.24200439]
[441.66384888 779.46087646]
[443.92007446 794.50628662]
[435.05389404 806.41955566]
[437.48657227 821.22100830]
[439.91925049 836.02239990]
[442.35189819 850.82385254]
[444.78457642 865.62524414]
[447.21725464 880.42669678]
[450.16500854 895.13421631]
[453.62423706 909.72985840]
[457.08346558 924.32556152]
[466.61959839 938.34332275]
[455.78945923 951.38732910]
[440.25720215 944.59136963]
[442.48779297 927.78479004]
[439.02856445 913.18908691]
[435.56933594 898.59344482]
[426.98638916 910.89520264]
[412.23800659 913.63110352]
[399.81384277 905.22631836]
[396.86572266 890.51892090]
[405.09060669 877.97491455]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 255]
[2 254]
[3 253]
[4 252]
[5 251]
[6 250]
[9 247]
[10 246]
[11 245]
[12 243]
[13 242]
[14 241]
[15 239]
[16 238]
[17 236]
[18 235]
[19 234]
[20 233]
[21 191]
[22 190]
[23 189]
[24 188]
[25 187]
[26 186]
[29 39]
[30 38]
[31 37]
[40 184]
[41 183]
[42 182]
[43 181]
[44 180]
[45 179]
[46 178]
[47 177]
[48 176]
[49 175]
[50 174]
[51 173]
[52 172]
[53 171]
[55 169]
[56 168]
[58 166]
[59 165]
[60 164]
[62 162]
[63 161]
[66 160]
[67 159]
[68 158]
[69 157]
[70 156]
[71 155]
[72 154]
[77 104]
[78 103]
[79 102]
[82 99]
[83 98]
[85 96]
[86 95]
[87 94]
[107 153]
[108 152]
[109 151]
[110 150]
[111 149]
[112 148]
[118 147]
[119 146]
[120 145]
[122 143]
[123 142]
[124 141]
[125 140]
[128 137]
[129 136]
[130 135]
[192 231]
[193 230]
[194 229]
[195 228]
[202 220]
[203 219]
[204 218]
[206 216]
[207 215]
[208 214]
[209 213]
[256 264]
[257 263]
[258 262]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
