%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:42:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCCGUCCCAGCUCCGGUGAGUGGCCCCUGCUGGACCGUGGAUCCCGGGCGGGCGUGCGGGCGGCAGCGUACGAGGCCUUCUACUCGCCCGGGUGUCCGGUGCCUCGCUUCUCCCUGGGACCCUGUCGUCAACAUCGAGGCCUGCCAGUGAGCUUCUACCAUCAUGGACCUAUUGUUCGGGCGCCGGAAGACGCCAGAGGAGCUACUGCGGCAGAACCAGAGGGCCCUGAACCGUGCCAUGCGGGAGCUGGACCG\
CGAGCGAC\
) } def
/len { sequence length } bind def

/coor [
[124.40235901 561.60302734]
[123.86697388 546.61260986]
[115.68033600 534.16961670]
[122.92014313 520.10205078]
[122.38475800 505.11163330]
[121.84937286 490.12118530]
[110.43545532 474.49002075]
[120.24469757 456.85498047]
[119.35272980 441.88153076]
[118.46075439 426.90805054]
[117.56878662 411.93460083]
[116.67681122 396.96115112]
[115.78484344 381.98770142]
[114.89286804 367.01425171]
[114.00090027 352.04077148]
[105.52046204 339.79614258]
[112.42344666 325.56027222]
[111.53147888 310.58682251]
[108.64208984 306.82135010]
[108.06598663 301.20877075]
[110.80076599 295.24722290]
[110.26538086 280.25677490]
[109.72999573 265.26635742]
[109.19461060 250.27590942]
[108.65922546 235.28546143]
[107.14456177 220.36213684]
[104.65711212 205.56980896]
[102.16966248 190.77749634]
[99.68221283 175.98518372]
[95.48763275 169.93005371]
[97.25426483 161.00213623]
[94.94301605 146.18125916]
[92.63176727 131.36039734]
[90.32051849 116.53952789]
[79.16140747 106.51583862]
[64.17839813 105.80210876]
[49.19538879 105.08837891]
[34.21237946 104.37465668]
[25.52445793 107.08551788]
[19.05563736 103.56223297]
[4.08218193 102.67026520]
[-7.67908382 112.88350677]
[-22.85159111 111.76562500]
[-32.51588058 100.49011230]
[-47.48933411 99.59813690]
[-62.46279144 98.70616913]
[-77.43624878 97.81419373]
[-92.40970612 96.92222595]
[-107.38315582 96.03025818]
[-122.35661316 95.13828278]
[-137.33007812 94.24631500]
[-152.30352783 93.35433960]
[-167.27697754 92.46237183]
[-182.27697754 92.46237183]
[-197.25044250 93.35433960]
[-212.22389221 94.24631500]
[-227.19735718 95.13828278]
[-242.17080688 96.03025818]
[-257.14425659 96.92222595]
[-265.38854980 110.06799316]
[-279.79776001 115.82601929]
[-294.83120728 111.98221588]
[-304.70825195 100.01461792]
[-305.63098145 84.52500153]
[-297.24456787 71.46944427]
[-282.77374268 65.86807251]
[-267.78286743 69.87472534]
[-258.03622437 81.94876862]
[-243.06277466 81.05680084]
[-228.08932495 80.16482544]
[-213.11585999 79.27285767]
[-198.14241028 78.38088226]
[-183.16896057 77.48891449]
[-195.95690918 69.64874268]
[-203.18099976 56.50292587]
[-202.94351196 41.50480652]
[-195.30680847 28.59430885]
[-182.27703857 21.16295624]
[-167.27703857 21.16292572]
[-154.24723816 28.59422493]
[-146.61048889 41.50469208]
[-146.37294006 56.50281143]
[-153.59698486 69.64865112]
[-166.38500977 77.48891449]
[-151.41156006 78.38088226]
[-136.43809509 79.27285767]
[-121.46464539 80.16482544]
[-106.49118805 81.05680084]
[-91.51773071 81.94876862]
[-76.54427338 82.84074402]
[-61.57081985 83.73271179]
[-46.59736252 84.62468719]
[-31.62390709 85.51665497]
[-20.68934822 75.46822357]
[-5.49142838 76.15950775]
[4.97415352 87.69680786]
[19.94760895 88.58878326]
[34.92610931 89.39164734]
[49.90911865 90.10536957]
[64.89212799 90.81909943]
[79.87513733 91.53282928]
[89.35649872 79.90941620]
[85.64690399 65.37535858]
[81.93730164 50.84129715]
[78.22770691 36.30723572]
[74.51811218 21.77317619]
[70.80850983 7.23911715]
[59.69763947 5.91652822]
[49.53430176 1.29975510]
[41.26784515 -6.16230345]
[35.66505814 -15.75581646]
[33.23907471 -26.57028770]
[34.20240784 -37.58496475]
[38.44842911 -47.76517487]
[45.56291580 -56.15952682]
[54.86439514 -61.98881912]
[51.85055542 -76.68292236]
[48.83671951 -91.37702942]
[45.73550415 -106.05294800]
[42.54702759 -120.71015167]
[39.35854721 -135.36735535]
[30.08353615 -149.55926514]
[41.15324783 -162.40052795]
[56.55706406 -155.31823730]
[54.01575089 -138.55583191]
[57.20423126 -123.89862823]
[60.39270782 -109.24142456]
[64.87065125 -103.39273834]
[63.53082657 -94.39086914]
[66.54466248 -79.69676208]
[69.55850220 -65.00265503]
[87.82471466 -59.97240829]
[101.02829742 -46.27026749]
[105.41619873 -27.67002678]
[99.67953491 -9.35429764]
[85.34257507 3.52951980]
[89.05216980 18.06357956]
[92.76176453 32.59763718]
[96.47136688 47.13169861]
[100.18096161 61.66575623]
[103.89055634 76.19981384]
[117.57187653 82.34974670]
[130.90440369 75.47634888]
[144.23693848 68.60295105]
[157.56947327 61.72955322]
[170.90199280 54.85615540]
[184.15179443 47.82459259]
[197.31698608 40.63585663]
[210.48216248 33.44712448]
[216.48970032 26.61058235]
[223.84706116 26.25223541]
[237.09686279 19.22067261]
[250.34664917 12.18910789]
[263.59643555 5.15754366]
[276.84625244 -1.87402046]
[290.09603882 -8.90558434]
[303.34582520 -15.93714905]
[301.18002319 -23.31260109]
[300.87283325 -31.29220390]
[302.58544922 -39.39767456]
[306.35406494 -47.10972977]
[312.07992554 -53.90103149]
[319.52835083 -59.27138901]
[328.33654785 -62.78288651]
[338.03079224 -64.09256744]
[348.05166626 -62.98033905]
[360.27032471 -71.68119049]
[372.48895264 -80.38204193]
[384.70758057 -89.08290100]
[388.77526855 -104.60171509]
[403.50225830 -110.96528625]
[417.59130859 -103.29203033]
[420.23446655 -87.46821594]
[409.40414429 -75.63250732]
[393.40844727 -76.86425781]
[381.18981934 -68.16340637]
[368.97116089 -59.46255112]
[356.75253296 -50.76169968]
[363.06512451 -37.15393448]
[369.37713623 -23.54737282]
[383.91119385 -27.25696945]
[398.44525146 -30.96656799]
[412.97930908 -34.67616653]
[418.58676147 -49.14461517]
[431.64584351 -57.52553940]
[447.13507080 -56.59630585]
[459.09851074 -46.71421814]
[462.93600464 -31.67914581]
[457.17190552 -17.27237892]
[444.02267456 -9.03361225]
[428.54443359 -10.13082123]
[416.68890381 -20.14210510]
[402.15484619 -16.43250847]
[387.62078857 -12.72291088]
[373.08673096 -9.01331329]
[353.02658081 9.68765450]
[328.15240479 10.92820930]
[310.37741089 -2.68735242]
[297.12759399 4.34421206]
[283.87780762 11.37577629]
[270.62802124 18.40734100]
[257.37820435 25.43890381]
[244.12841797 32.47047043]
[230.87863159 39.50203323]
[217.67089844 46.61230850]
[204.50572205 53.80104446]
[191.34053040 60.98977661]
[189.16569519 65.20846558]
[184.33393860 68.12176514]
[177.77539062 68.18869019]
[164.44287109 75.06208801]
[151.11033630 81.93548584]
[137.77780151 88.80888367]
[124.44527435 95.68228149]
[120.68133545 106.20459747]
[113.33660126 112.61894226]
[105.14138794 114.22827911]
[107.45263672 129.04914856]
[109.76388550 143.87001038]
[112.07513428 158.69088745]
[114.47452545 173.49774170]
[116.96197510 188.29005432]
[119.44942474 203.08236694]
[121.93687439 217.87467957]
[127.90598297 204.11351013]
[139.53994751 194.64509583]
[154.22665405 191.59535217]
[168.66851807 195.64901733]
[179.62300110 205.89595032]
[184.63049316 220.03543091]
[182.56671143 234.89277649]
[173.89500427 247.13212585]
[160.56242371 254.00541687]
[145.56246948 253.96942139]
[132.26303101 247.03221130]
[123.64966583 234.75007629]
[124.18505096 249.74052429]
[124.72043610 264.73095703]
[125.25582123 279.72140503]
[125.79120636 294.71185303]
[126.50493622 309.69485474]
[127.39690399 324.66830444]
[135.94113159 337.98397827]
[128.97434998 351.14880371]
[129.86633301 366.12228394]
[130.75830078 381.09573364]
[131.65026855 396.06918335]
[132.54223633 411.04263306]
[133.43420410 426.01608276]
[134.32618713 440.98956299]
[135.21815491 455.96301270]
[143.72651672 462.67294312]
[147.08576965 472.74414062]
[144.42115784 482.79443359]
[136.83981323 489.58578491]
[137.37519836 504.57623291]
[137.91058350 519.56665039]
[146.13551331 533.08190918]
[138.85740662 546.07720947]
[139.39279175 561.06768799]
[148.54795837 574.67333984]
[141.10057068 589.28393555]
[124.71186829 589.86926270]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 260]
[2 259]
[4 257]
[5 256]
[6 255]
[8 251]
[9 250]
[10 249]
[11 248]
[12 247]
[13 246]
[14 245]
[15 244]
[17 242]
[18 241]
[21 240]
[22 239]
[23 238]
[24 237]
[25 236]
[26 224]
[27 223]
[28 222]
[29 221]
[31 220]
[32 219]
[33 218]
[34 217]
[35 101]
[36 100]
[37 99]
[38 98]
[40 97]
[41 96]
[44 93]
[45 92]
[46 91]
[47 90]
[48 89]
[49 88]
[50 87]
[51 86]
[52 85]
[53 84]
[54 73]
[55 72]
[56 71]
[57 70]
[58 69]
[59 68]
[102 141]
[103 140]
[104 139]
[105 138]
[106 137]
[107 136]
[116 131]
[117 130]
[118 129]
[119 127]
[120 126]
[121 125]
[142 214]
[143 213]
[144 212]
[145 211]
[146 210]
[147 207]
[148 206]
[149 205]
[151 204]
[152 203]
[153 202]
[154 201]
[155 200]
[156 199]
[157 198]
[166 178]
[167 177]
[168 176]
[169 175]
[180 195]
[181 194]
[182 193]
[183 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
