%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:57:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCAUGUAAGUCAACAACAUCCUGGGAUUGGGACACACUUUCUGGGCACUGCUGGCCAGUCCCAAAAUGGAACAUAAGGAAGUGGUUCUUCUACUUCUUUUAUUUCUGAAAUCAGGUCAAGGAGAGCCCCUGGAUGACUAUGUGAAUACCCAGGGGCCUUCACUGU\
) } def
/len { sequence length } bind def

/coor [
[142.67762756 294.17834473]
[130.05575562 302.28317261]
[116.00601196 307.53720093]
[101.16319275 309.70303345]
[86.19792938 308.68280029]
[71.78637695 304.52261353]
[58.57968140 297.41043091]
[47.17454529 287.66757202]
[38.08627319 275.73428345]
[31.72549820 262.14971924]
[28.37960625 247.52764893]
[28.19977379 232.52873230]
[31.19412613 217.83064270]
[37.22737122 204.09747314]
[46.02691650 191.94972229]
[57.19518280 181.93623352]
[70.22756195 174.50944519]
[84.53522491 170.00492859]
[99.47172546 168.62617493]
[114.36220551 170.43551636]
[128.53387451 175.35118103]
[141.34762573 183.15196228]
[133.60601807 170.30409241]
[125.86443329 157.45622253]
[118.12283325 144.60835266]
[110.38124084 131.76049805]
[89.93110657 131.86088562]
[73.25257874 120.02684021]
[66.59309387 100.69114685]
[51.90932083 97.62736511]
[37.22554398 94.56358337]
[22.54177094 91.49980164]
[7.85799503 88.43602753]
[-6.82578039 85.37224579]
[-21.50955582 82.30846405]
[-12.75204468 94.48656464]
[-12.68083572 109.48638916]
[-21.32232857 121.74708557]
[-35.47286987 126.72325134]
[-49.88644409 122.57006836]
[-59.21952057 110.82725525]
[-60.01205826 95.84821320]
[-51.97024155 83.18609619]
[-38.07759857 77.53529358]
[-52.14073563 72.31723022]
[-66.20387268 67.09916687]
[-81.83370209 69.55253601]
[-91.07447815 57.87104416]
[-105.13761139 52.65298080]
[-121.20561981 55.93188477]
[-131.87521362 43.47829437]
[-126.17042542 28.10339928]
[-109.95986176 25.62356949]
[-99.91954803 38.58984375]
[-85.85641479 43.80790710]
[-71.23247528 40.98130798]
[-60.98580933 53.03603363]
[-46.92267227 58.25409317]
[-32.85953522 63.47215652]
[-18.44577599 67.62468719]
[-3.76200056 70.68846893]
[10.92177486 73.75225067]
[25.60554886 76.81603241]
[40.28932571 79.87980652]
[54.97309875 82.94358826]
[69.65687561 86.00737000]
[74.59300995 78.29783630]
[81.43614960 72.21723175]
[89.67265320 68.22194672]
[98.68430328 66.61186218]
[101.47297668 51.87336349]
[104.26165009 37.13486481]
[107.05033112 22.39636803]
[96.58434296 11.09285545]
[94.80188751 -4.02918863]
[102.17836761 -17.14603043]
[115.70223999 -23.33010101]
[118.49091339 -38.06859970]
[121.27959442 -52.80709457]
[124.06826782 -67.54559326]
[126.85694122 -82.28408813]
[129.64561462 -97.02258301]
[132.43428040 -111.76108551]
[135.22296143 -126.49958038]
[138.01164246 -141.23808289]
[140.80030823 -155.97657776]
[132.98733521 -169.98860168]
[139.20414734 -184.77815247]
[154.68174744 -188.99995422]
[167.54702759 -179.41539001]
[167.93087769 -163.37692261]
[155.53880310 -153.18789673]
[152.75013733 -138.44940186]
[149.96145630 -123.71090698]
[147.17279053 -108.97241211]
[144.38410950 -94.23390961]
[141.59544373 -79.49541473]
[138.80676270 -64.75691986]
[136.01808167 -50.01842117]
[133.22941589 -35.27992249]
[130.44073486 -20.54142761]
[140.77046204 -9.84401035]
[142.84492493 5.06104422]
[135.66096497 18.48655128]
[121.78882599 25.18504333]
[119.00015259 39.92353821]
[116.21147919 54.66203690]
[113.42280579 69.40053558]
[124.09257507 76.84732056]
[131.10911560 87.80483246]
[133.40846252 100.61153412]
[130.64195251 113.32551575]
[123.22911072 124.01889801]
[130.97070312 136.86676025]
[138.71229553 149.71463013]
[146.45388794 162.56250000]
[154.19548035 175.41036987]
[157.90577698 176.62832642]
[160.98292542 178.64866638]
[163.27381897 181.23904419]
[164.69921875 184.14434814]
[165.25485229 187.10824585]
[177.64843750 195.55804443]
[190.04200745 204.00784302]
[202.43559265 212.45764160]
[211.32917786 214.72097778]
[214.97990417 221.18312073]
[227.21331787 229.86318970]
[239.44673157 238.54325867]
[251.68014526 247.22332764]
[263.91354370 255.90339661]
[276.14697266 264.58346558]
[288.38037109 273.26354980]
[300.61380005 281.94360352]
[313.07061768 273.30627441]
[327.73110962 269.45333862]
[342.82501221 270.85003662]
[356.52957153 277.32769775]
[367.18997192 288.10415649]
[373.51885986 301.87808228]
[374.75204468 316.98620605]
[370.74057007 331.60412598]
[361.96887207 343.96667480]
[349.49615479 352.58105469]
[334.82855225 356.40695190]
[319.73727417 354.98245239]
[306.04467773 348.47952271]
[295.40414429 337.68344116]
[289.10064697 323.89788818]
[287.89532471 308.78753662]
[291.93371582 294.17703247]
[279.70031738 285.49694824]
[267.46688843 276.81689453]
[255.23347473 268.13681030]
[243.00006104 259.45675659]
[230.76666260 250.77667236]
[218.53324890 242.09660339]
[206.29983521 233.41653442]
[193.98579407 224.85122681]
[181.59220886 216.40142822]
[169.19862366 207.95162964]
[156.80505371 199.50181580]
[163.87454224 212.73141479]
[167.98815918 227.15634155]
[168.96003723 242.12481689]
[166.74627686 256.96057129]
[161.44689941 270.99325562]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 117]
[23 116]
[24 115]
[25 114]
[26 113]
[29 66]
[30 65]
[31 64]
[32 63]
[33 62]
[34 61]
[35 60]
[44 59]
[45 58]
[46 57]
[48 55]
[49 54]
[70 108]
[71 107]
[72 106]
[73 105]
[77 101]
[78 100]
[79 99]
[80 98]
[81 97]
[82 96]
[83 95]
[84 94]
[85 93]
[86 92]
[122 162]
[123 161]
[124 160]
[125 159]
[127 158]
[128 157]
[129 156]
[130 155]
[131 154]
[132 153]
[133 152]
[134 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
