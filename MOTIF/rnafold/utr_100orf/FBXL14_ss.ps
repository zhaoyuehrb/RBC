%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:12:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGCGGCUGGGGAGAAGCGCUCUCGUCGCCUGCCCGAGGCCGGAGCGGCGGGGCCCGCGCCUCCUCCCCCCAGCGCCGCGGAGGGGGGAGGAGGAAGAUGGAGACCCACAUCUCAUGCCUGUUCCCGGAGCUGCUGGCCAUGAUCUUCGGCUACCUGGACGUCCGGGACAAGGGGCGCGCGGCGCAGGUGUGCACCG\
) } def
/len { sequence length } bind def

/coor [
[92.25989532 99.41502380]
[79.85368347 90.98377228]
[67.44747925 82.55252075]
[55.04126740 74.12126923]
[42.63505936 65.69001770]
[30.22884941 57.25876999]
[17.43016243 58.90416336]
[7.26876879 51.61903763]
[4.87817669 39.75534058]
[-7.39406919 31.13026237]
[-19.66631508 22.50518227]
[-31.93856049 13.88010406]
[-44.21080780 5.25502539]
[-56.48305130 -3.37005329]
[-68.75529480 -11.99513245]
[-83.37155151 -7.12982035]
[-97.88044739 -11.74992752]
[-106.78150940 -23.88397408]
[-106.83017731 -38.75460434]
[-119.10242462 -47.37968445]
[-133.98414612 -49.25968170]
[-148.01580811 -43.95755768]
[-162.04747009 -38.65543747]
[-176.07911682 -33.35331345]
[-183.00816345 -27.38726997]
[-190.37304688 -28.08000755]
[-204.48625183 -22.99893761]
[-218.59947205 -17.91786957]
[-232.71267700 -12.83680058]
[-246.82589722 -7.75573158]
[-260.93911743 -2.67466283]
[-275.01196289 2.51709318]
[-289.04364014 7.81921577]
[-303.07528687 13.12133884]
[-317.06488037 18.53350067]
[-331.01153564 24.05536842]
[-343.51257324 35.50788879]
[-357.97814941 26.66575813]
[-353.48605347 10.31775093]
[-336.53338623 10.10872173]
[-322.58676147 4.58685350]
[-317.52038574 -0.80326581]
[-308.37741089 -0.91032207]
[-294.34576416 -6.21244478]
[-280.31408691 -11.51456738]
[-275.16369629 -16.82444191]
[-266.02017212 -16.78787422]
[-251.90696716 -21.86894226]
[-237.79374695 -26.95001221]
[-223.68054199 -32.03108215]
[-209.56732178 -37.11214828]
[-195.45411682 -42.19321823]
[-181.38124084 -47.38497543]
[-167.34957886 -52.68709564]
[-153.31793213 -57.98921967]
[-139.28627014 -63.29134369]
[-137.25045776 -70.50975800]
[-152.23889160 -69.92088318]
[-157.43060303 -83.99376678]
[-145.65080261 -93.28012085]
[-133.17884827 -84.94658661]
[-131.14305115 -92.16500092]
[-140.33665466 -104.01732635]
[-149.53025818 -115.86965179]
[-158.72386169 -127.72197723]
[-167.91748047 -139.57429504]
[-177.11108398 -151.42662048]
[-186.30468750 -163.27894592]
[-195.49829102 -175.13127136]
[-204.69189453 -186.98359680]
[-213.88549805 -198.83592224]
[-223.07910156 -210.68824768]
[-232.27272034 -222.54057312]
[-247.70466614 -224.66012573]
[-256.85946655 -236.81103516]
[-254.74368286 -251.50997925]
[-263.93728638 -263.36230469]
[-278.42276001 -272.17184448]
[-273.96749878 -288.52990723]
[-257.01535034 -288.77713013]
[-252.08497620 -272.55590820]
[-242.89135742 -260.70358276]
[-228.12803650 -259.09741211]
[-218.63557434 -247.20841980]
[-220.42039490 -231.73417664]
[-211.22679138 -219.88185120]
[-202.03317261 -208.02952576]
[-192.83956909 -196.17720032]
[-183.64596558 -184.32487488]
[-174.45236206 -172.47254944]
[-165.25875854 -160.62022400]
[-156.06515503 -148.76789856]
[-146.87153625 -136.91557312]
[-137.67793274 -125.06325531]
[-128.48432922 -113.21092987]
[-119.29072571 -101.35860443]
[-107.75290680 -107.02095032]
[-96.63678741 -106.69400024]
[-93.59497833 -121.38234711]
[-90.55316925 -136.07069397]
[-87.51136017 -150.75903320]
[-84.46955109 -165.44737244]
[-95.01194763 -176.83322144]
[-96.81505585 -192.24517822]
[-89.18554688 -205.75703430]
[-75.05712128 -212.17320251]
[-59.86244965 -209.02653503]
[-49.44418716 -197.52699280]
[-47.80837631 -182.09637451]
[-55.58401489 -168.66809082]
[-69.78121185 -162.40556335]
[-72.82302094 -147.71722412]
[-75.86483002 -133.02888489]
[-78.90663910 -118.34053802]
[-81.94844818 -103.65219116]
[-69.99729919 -90.33772278]
[-71.41680908 -70.83174896]
[-87.71181488 -57.23104858]
[-110.47734070 -59.65192795]
[-98.20509338 -51.02685165]
[-84.19712067 -56.01830673]
[-69.76530457 -51.75373077]
[-60.50362015 -39.66759872]
[-60.13021851 -24.26737785]
[-47.85797501 -15.64229870]
[-35.58572769 -7.01722002]
[-23.31348228 1.60785854]
[-11.04123592 10.23293686]
[1.23100984 18.85801697]
[13.50325584 27.48309517]
[31.03777885 28.09458923]
[38.66009903 44.85256195]
[51.06630707 53.28381348]
[63.47251892 61.71506119]
[75.87872314 70.14631653]
[88.28493500 78.57756042]
[100.69114685 87.00881195]
[115.27669525 90.51049805]
[130.15841675 88.63049316]
[145.04013062 86.75049591]
[159.92185974 84.87049866]
[166.47718811 70.90515137]
[179.55427551 62.72019196]
[194.98023987 62.92742157]
[207.83273315 71.46070862]
[214.01055908 85.59711456]
[211.54240417 100.82576752]
[201.21583557 112.28724670]
[186.32604980 116.32424927]
[171.62428284 111.64857483]
[161.80184937 99.75222015]
[146.92013550 101.63221741]
[132.03840637 103.51221466]
[117.15669250 105.39221191]
[116.15827942 112.82546234]
[113.16304779 135.12521362]
[127.02124023 140.86546326]
[140.87944031 146.60571289]
[154.73762512 152.34596252]
[168.59582520 158.08621216]
[184.77519226 155.41040039]
[194.97166443 168.25424194]
[188.69598389 183.40507507]
[172.40403748 185.27703857]
[162.85557556 171.94441223]
[148.99737549 166.20416260]
[135.13919067 160.46389771]
[121.28099060 154.72364807]
[107.42279816 148.98339844]
[102.20345306 154.36935425]
[115.67385864 160.96846008]
[113.56028748 175.81880188]
[98.78363800 178.39767456]
[91.76476288 165.14123535]
[86.54541779 170.52719116]
[92.71813202 184.19824219]
[98.99802399 197.82038879]
[105.38471222 211.39279175]
[111.77140808 224.96519470]
[118.15809631 238.53759766]
[124.54478455 252.11001587]
[130.93147278 265.68240356]
[146.09545898 269.50177002]
[155.21476746 282.20501709]
[153.98353577 297.79403687]
[142.98310852 308.90823364]
[127.40756989 310.29974365]
[114.61119080 301.31161499]
[110.63604736 286.18771362]
[117.35906982 272.06909180]
[110.97238159 258.49670410]
[104.58568573 244.92430115]
[98.19899750 231.35188293]
[91.81230927 217.77947998]
[85.42562103 204.20707703]
[79.72801971 199.48915100]
[79.04708099 190.37095642]
[72.87436676 176.69990540]
[60.22439957 140.58193970]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 137]
[2 136]
[3 135]
[4 134]
[5 133]
[6 132]
[9 130]
[10 129]
[11 128]
[12 127]
[13 126]
[14 125]
[15 124]
[19 120]
[20 119]
[21 56]
[22 55]
[23 54]
[24 53]
[26 52]
[27 51]
[28 50]
[29 49]
[30 48]
[31 47]
[32 45]
[33 44]
[34 43]
[35 41]
[36 40]
[62 96]
[63 95]
[64 94]
[65 93]
[66 92]
[67 91]
[68 90]
[69 89]
[70 88]
[71 87]
[72 86]
[73 85]
[76 82]
[77 81]
[98 115]
[99 114]
[100 113]
[101 112]
[102 111]
[138 154]
[139 153]
[140 152]
[141 151]
[156 169]
[157 168]
[158 167]
[159 166]
[160 165]
[175 198]
[176 197]
[177 195]
[178 194]
[179 193]
[180 192]
[181 191]
[182 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
