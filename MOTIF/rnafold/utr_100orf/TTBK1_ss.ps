%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:55:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCCGCAGCCGCAGCGGGCACAGAGCAGGUAGAUGGCCCCCUCAGGGCAGGCCCGGCGGACACCCCUCCCUCUGGCUGGCGGAUGCAGUGCCUAGCGGCCGCCCUUAAGGACGAAACCAACAUGAGUGGGGGAGGGGAGCAGGCCGACAUCCUGCCGGCCAACUACGUGGUCAAGGAUCGCU\
) } def
/len { sequence length } bind def

/coor [
[-79.08219147 850.57385254]
[-71.86863708 863.72540283]
[-75.91542053 878.16925049]
[-88.91201019 885.65844727]
[-103.43792725 881.91711426]
[-111.19958496 869.08087158]
[-115.98073578 883.29846191]
[-112.20704651 899.25750732]
[-124.32510376 910.30670166]
[-139.86888123 905.07958984]
[-142.84828186 888.95336914]
[-130.19834900 878.51733398]
[-125.41719818 864.29968262]
[-121.37024689 849.85595703]
[-118.06811523 835.22393799]
[-114.76597595 820.59191895]
[-111.46384430 805.95989990]
[-108.16171265 791.32788086]
[-119.91004944 782.13867188]
[-126.53078461 768.70452881]
[-126.66269684 753.66644287]
[-120.22605896 740.00665283]
[-108.44908142 730.45733643]
[-93.63392639 726.95410156]
[-90.33178711 712.32208252]
[-95.07746124 698.20373535]
[-84.49197388 686.44543457]
[-81.18984222 671.81341553]
[-85.93551636 657.69506836]
[-75.35002899 645.93676758]
[-72.04789734 631.30474854]
[-68.74575806 616.67272949]
[-65.44362640 602.04071045]
[-70.18930054 587.92236328]
[-59.60381317 576.16406250]
[-56.30167770 561.53204346]
[-52.99954224 546.90002441]
[-49.69741058 532.26800537]
[-46.39527512 517.63598633]
[-59.12509918 525.57019043]
[-73.99621582 523.60803223]
[-84.23251343 512.64361572]
[-85.16976166 497.67294312]
[-76.38091278 485.51745605]
[-61.87063980 481.71588135]
[-48.25063324 488.00042725]
[-41.72706223 501.50622559]
[-36.70386887 487.37231445]
[-31.68067551 473.23840332]
[-26.65748024 459.10449219]
[-21.63428688 444.97058105]
[-16.61109352 430.83666992]
[-25.45995522 414.83099365]
[-19.72423935 397.12936401]
[-2.59309387 389.08361816]
[1.94462442 374.78646851]
[6.48234272 360.48928833]
[11.02006054 346.19210815]
[0.09803527 336.03460693]
[-5.35312510 322.08489990]
[-4.20232344 307.09036255]
[3.37559009 294.02914429]
[15.92390919 285.51873779]
[30.98381615 283.29150391]
[35.52153397 268.99432373]
[40.05925369 254.69715881]
[44.59696960 240.39999390]
[49.13468933 226.10282898]
[53.67240524 211.80564880]
[58.21012497 197.50848389]
[62.74784470 183.21130371]
[67.28556061 168.91413879]
[71.82328033 154.61695862]
[70.44849396 150.02056885]
[71.96348572 144.51199341]
[76.76769257 139.91387939]
[81.79088593 125.77996063]
[86.81407928 111.64604187]
[59.11001205 76.37180328]
[58.85391617 61.37399292]
[58.59782028 46.37617874]
[58.34172440 31.37836456]
[58.08562851 16.38055038]
[50.11384583 2.71448851]
[57.63272476 -10.14302731]
[57.37662888 -25.14084053]
[57.12053299 -40.13865662]
[44.33626175 -48.93309021]
[39.19456100 -63.57352829]
[43.67251968 -78.43043518]
[56.04826736 -87.79100800]
[71.56307983 -88.05593872]
[84.25119781 -79.12333679]
[89.23377228 -64.42797852]
[84.59490967 -49.62052536]
[72.11834717 -40.39475250]
[72.37444305 -25.39693642]
[72.63053894 -10.39912319]
[80.58400726 2.19419432]
[73.08344269 16.12445450]
[73.33953857 31.12226868]
[73.59563446 46.12008286]
[73.85173035 61.11789703]
[74.10782623 76.11570740]
[81.08491516 78.86711884]
[82.00650787 63.89545441]
[96.53024292 60.14562607]
[104.58446503 72.79985809]
[95.03909302 84.36992645]
[102.01618195 87.12133789]
[112.44014740 76.33518982]
[111.91976166 60.53947449]
[122.78188324 49.05950546]
[138.58222961 48.70614624]
[149.94671631 59.68903732]
[150.13299561 75.49223328]
[139.03056335 86.73996735]
[123.22628784 86.75916290]
[112.80232239 97.54530334]
[127.75521851 96.35749054]
[139.64451599 105.50322723]
[142.33175659 120.26055908]
[134.42948914 133.01023865]
[120.01769257 137.16957092]
[106.53720093 130.59109497]
[100.94799042 116.66924286]
[95.92479706 130.80314636]
[90.90160370 144.93707275]
[86.12045288 159.15467834]
[81.58273315 173.45185852]
[77.04501343 187.74902344]
[72.50729370 202.04620361]
[67.96958160 216.34336853]
[63.43186188 230.64053345]
[58.89414215 244.93771362]
[54.35642242 259.23489380]
[49.81870651 273.53204346]
[45.28098679 287.82922363]
[56.30007172 298.33355713]
[61.64389801 312.52267456]
[60.30267715 327.56332397]
[52.59578323 340.47705078]
[40.09782791 348.72998047]
[25.31723213 350.72982788]
[20.77951431 365.02700806]
[16.24179649 379.32418823]
[11.70407772 393.62133789]
[19.13908005 402.93447876]
[21.12380219 414.56326294]
[17.27773666 425.58859253]
[8.66943932 433.29959106]
[-2.47717881 435.85986328]
[-7.50037289 449.99377441]
[-12.52356720 464.12768555]
[-17.54676056 478.26159668]
[-22.56995583 492.39550781]
[-27.59314919 506.52941895]
[-31.76325798 520.93811035]
[-35.06539154 535.57012939]
[-38.36752701 550.20214844]
[-41.66966248 564.83416748]
[-44.97179413 579.46618652]
[-40.46231079 594.63110352]
[-50.81160736 605.34283447]
[-54.11374283 619.97485352]
[-57.41587830 634.60687256]
[-60.71801376 649.23889160]
[-56.20852661 664.40380859]
[-66.55782318 675.11553955]
[-69.85996246 689.74755859]
[-65.35047150 704.91247559]
[-75.69977570 715.62426758]
[-79.00190735 730.25628662]
[-67.12728882 739.78277588]
[-60.59308243 753.46459961]
[-60.64696503 768.56481934]
[-67.22469330 782.08868408]
[-78.97344208 791.37719727]
[-93.52969360 794.63000488]
[-96.83182526 809.26202393]
[-100.13396454 823.89404297]
[-103.43609619 838.52606201]
[-106.73823547 853.15808105]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 13]
[7 12]
[14 183]
[15 182]
[16 181]
[17 180]
[18 179]
[24 173]
[25 172]
[27 170]
[28 169]
[30 167]
[31 166]
[32 165]
[33 164]
[35 162]
[36 161]
[37 160]
[38 159]
[39 158]
[47 157]
[48 156]
[49 155]
[50 154]
[51 153]
[52 152]
[55 147]
[56 146]
[57 145]
[58 144]
[64 138]
[65 137]
[66 136]
[67 135]
[68 134]
[69 133]
[70 132]
[71 131]
[72 130]
[73 129]
[76 128]
[77 127]
[78 126]
[79 104]
[80 103]
[81 102]
[82 101]
[83 100]
[85 98]
[86 97]
[87 96]
[110 119]
[111 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
