%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:18:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCAGGCUUGGCGGUCCUCAGAGGGGCUGAUAAAUCGGCGCUCGACUGGCCUAGGAGCUGUCCGCAGGGAGAUUUAUGACAAAGUCCAGUUUUCAACAAUGCUGAAAUCAAAUGAUUGCCUGUUUUCUUUGGAAAAUUUGUUUUUUGAAAAACCAGAUGAAGUUGAAAACCAUCCAGACAAUGAAAAGUCAUUGGAUU\
) } def
/len { sequence length } bind def

/coor [
[84.63047791 130.87007141]
[77.92469788 126.49272919]
[72.40936279 120.68672180]
[58.73831177 126.85943604]
[53.07481003 141.37020874]
[39.12248993 147.43547058]
[25.32358932 141.94676208]
[11.65254116 148.11947632]
[6.36817312 159.89186096]
[-5.15273094 164.74940491]
[-16.51727676 160.58895874]
[-30.28359604 166.54617310]
[-44.04991531 172.50340271]
[-57.81623459 178.46061707]
[-71.58255768 184.41783142]
[-85.30165863 190.48298645]
[-98.97270966 196.65570068]
[-112.64376068 202.82841492]
[-126.31481171 209.00112915]
[-139.78521729 215.60021973]
[-153.04170227 222.61917114]
[-166.29818726 229.63812256]
[-175.71340942 245.45845032]
[-193.20913696 244.14212036]
[-206.35374451 251.36842346]
[-219.49833679 258.59472656]
[-232.58578491 265.92404175]
[-245.61524963 273.35592651]
[-258.64471436 280.78781128]
[-271.67419434 288.21969604]
[-284.70367432 295.65158081]
[-292.50582886 310.07580566]
[-308.90393066 310.26052856]
[-317.02902222 296.01571655]
[-308.52270508 281.99520874]
[-292.13555908 282.62210083]
[-279.10607910 275.19021606]
[-266.07659912 267.75833130]
[-253.04713440 260.32644653]
[-240.01765442 252.89457703]
[-235.76130676 246.84437561]
[-226.72463989 245.45013428]
[-213.58004761 238.22383118]
[-200.43544006 230.99751282]
[-196.75743103 219.46780396]
[-185.85797119 213.34172058]
[-173.31713867 216.38163757]
[-160.06065369 209.36268616]
[-146.80416870 202.34373474]
[-145.85382080 199.69749451]
[-143.79328918 197.27005005]
[-140.70127869 195.48789978]
[-136.80993652 194.74093628]
[-132.48751831 195.33007812]
[-118.81647491 189.15736389]
[-105.14542389 182.98464966]
[-91.47437286 176.81193542]
[-86.66754150 171.18914795]
[-77.53977203 170.65151978]
[-63.77345276 164.69429016]
[-50.00713348 158.73707581]
[-36.24081421 152.77986145]
[-22.47449493 146.82264709]
[-12.79134655 132.19151306]
[5.47982550 134.44842529]
[19.15087509 128.27571106]
[24.15911102 114.29525757]
[37.93556595 107.84049225]
[52.56559753 113.18838501]
[66.23664856 107.01567078]
[66.59885406 91.42404175]
[73.79277039 77.58650208]
[64.78646851 65.59123230]
[55.78016663 53.59596252]
[46.77386093 41.60069275]
[37.76755905 29.60542297]
[22.08759308 27.62699127]
[12.46528721 15.08957577]
[14.60938549 -0.56859714]
[27.24783325 -10.05781174]
[42.88246155 -7.74828529]
[52.23752594 4.98978138]
[49.76282883 20.59911919]
[58.76913071 32.59439087]
[67.77543640 44.58966064]
[76.78173828 56.58493042]
[85.78804016 68.58020020]
[98.72865295 65.53890228]
[111.85818481 67.61841583]
[123.22562408 74.50972748]
[135.49787903 65.88465118]
[147.77011108 57.25957108]
[160.04235840 48.63449478]
[172.31460571 40.00941467]
[184.58685303 31.38433647]
[196.85910034 22.75925636]
[209.13134766 14.13417816]
[221.40359497 5.50909948]
[219.76309204 -10.93962479]
[226.60000610 -25.88666153]
[239.96333313 -35.29419708]
[256.15341187 -36.67346573]
[270.74594116 -29.74253273]
[282.88119507 -38.55931091]
[295.01644897 -47.37609100]
[294.47180176 -65.49219513]
[304.81451416 -80.18391418]
[321.75396729 -85.68399811]
[338.45718384 -79.97204590]
[350.30950928 -89.16564941]
[362.16183472 -98.35925293]
[374.01416016 -107.55286407]
[385.86645508 -116.74646759]
[392.02850342 -131.31835938]
[406.82727051 -133.00532532]
[418.67959595 -142.19892883]
[430.53192139 -151.39253235]
[429.18624878 -161.99188232]
[432.34222412 -172.11494446]
[439.36508179 -179.95130920]
[448.93502808 -184.12882996]
[459.29473877 -183.95364380]
[468.57211304 -179.52455139]
[480.84436035 -188.14962769]
[493.11660767 -196.77470398]
[505.38885498 -205.39978027]
[517.66113281 -214.02485657]
[529.93334961 -222.64993286]
[536.34344482 -237.74440002]
[552.65136719 -239.47151184]
[562.08099365 -226.05455017]
[554.93188477 -211.29574585]
[538.55841064 -210.37768555]
[526.28619385 -201.75260925]
[514.01391602 -193.12753296]
[501.74169922 -184.50245667]
[489.46945190 -175.87738037]
[477.19720459 -167.25230408]
[475.27593994 -147.87368774]
[459.48748779 -135.96084595]
[439.72552490 -139.54020691]
[427.87319946 -130.34660339]
[416.02087402 -121.15299988]
[410.70660400 -107.23870087]
[395.06008911 -104.89414215]
[383.20776367 -95.70053864]
[371.35543823 -86.50693512]
[359.50311279 -77.31332397]
[347.65078735 -68.11972046]
[349.82730103 -56.16639328]
[346.69317627 -44.35298538]
[338.78457642 -34.94004059]
[327.55722046 -29.75571251]
[315.11880493 -29.84089470]
[303.83325195 -35.24083328]
[291.69796753 -26.42405701]
[279.56271362 -17.60727692]
[281.88247681 -4.14375973]
[278.15530396 9.06867695]
[269.05413818 19.43450737]
[256.31329346 24.89193344]
[242.39830017 24.32283401]
[230.02867126 17.78134537]
[217.75642395 26.40642357]
[205.48417664 35.03150177]
[193.21192932 43.65658188]
[180.93968201 52.28166199]
[168.66744995 60.90673828]
[156.39520264 69.53181458]
[144.12295532 78.15689850]
[131.85070801 86.78197479]
[133.40115356 108.57595825]
[121.54315186 126.92723846]
[128.14224243 140.39764404]
[134.74133301 153.86807251]
[141.34042358 167.33848572]
[147.93949890 180.80889893]
[154.74935913 194.17399597]
[161.76831055 207.43048096]
[168.78726196 220.68696594]
[184.16792297 222.73992920]
[195.38119507 233.46569824]
[198.11534119 248.73999023]
[191.31901550 262.68954468]
[177.60556030 269.95043945]
[162.24806213 267.73074341]
[151.15180969 256.88394165]
[148.58352661 241.58090210]
[155.53077698 227.70590210]
[148.51182556 214.44941711]
[141.49287415 201.19293213]
[137.26431274 198.95552063]
[134.40089417 194.03353882]
[134.46908569 187.40797424]
[127.87000275 173.93756104]
[121.27091217 160.46714783]
[114.67182922 146.99673462]
[108.07273865 133.52632141]
[100.12220764 134.48432922]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 70]
[4 69]
[7 66]
[8 65]
[11 63]
[12 62]
[13 61]
[14 60]
[15 59]
[16 57]
[17 56]
[18 55]
[19 54]
[20 49]
[21 48]
[22 47]
[24 44]
[25 43]
[26 42]
[27 40]
[28 39]
[29 38]
[30 37]
[31 36]
[72 87]
[73 86]
[74 85]
[75 84]
[76 83]
[90 171]
[91 170]
[92 169]
[93 168]
[94 167]
[95 166]
[96 165]
[97 164]
[98 163]
[103 157]
[104 156]
[105 155]
[109 149]
[110 148]
[111 147]
[112 146]
[113 145]
[115 143]
[116 142]
[117 141]
[123 138]
[124 137]
[125 136]
[126 135]
[127 134]
[128 133]
[173 198]
[174 197]
[175 196]
[176 195]
[177 194]
[178 191]
[179 190]
[180 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
