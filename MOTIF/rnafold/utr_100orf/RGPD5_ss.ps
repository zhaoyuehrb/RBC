%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:10:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUCCUCUUGGAAGUGGCGACUGCUGCGGGGCUGAGCGGUGCUCGCACGCGUCUCGGGAGCCAGGUUGGCGGCGCGAUGAGGCGCAGCAAGGCCGAUGUGGAGCGGUACGUCGCCUCGGUGCUGGGUCUCACCCCGUCGCCUCGACAGAAGUCAAUGAAAGGAUUCUAUUUUGCAA\
) } def
/len { sequence length } bind def

/coor [
[108.88627625 218.32225037]
[104.96138763 203.84484863]
[101.03649902 189.36744690]
[97.11161041 174.89002991]
[93.18672180 160.41262817]
[79.73851013 153.76841736]
[65.85512543 159.44746399]
[51.97174072 165.12651062]
[38.08835602 170.80555725]
[24.20496750 176.48460388]
[10.32158279 182.16365051]
[-3.51114774 187.96499634]
[-17.29214478 193.88818359]
[-26.91552353 206.44609070]
[-41.66378784 204.36331177]
[-55.44478607 210.28649902]
[-69.22578430 216.20968628]
[-82.95397186 222.25424194]
[-96.62828827 228.41972351]
[-110.30260468 234.58520508]
[-123.97692108 240.75067139]
[-133.37716675 253.47647095]
[-148.15989685 251.65429688]
[-161.83421326 257.81976318]
[-175.50852966 263.98526001]
[-189.18284607 270.15072632]
[-202.85716248 276.31619263]
[-216.53147888 282.48168945]
[-219.55421448 297.70147705]
[-230.96847534 308.21310425]
[-246.38523865 309.97460938]
[-259.87646484 302.30865479]
[-266.25445557 288.16296387]
[-263.06680298 272.97683716]
[-251.53916931 262.58966064]
[-236.10420227 260.99551392]
[-222.69694519 268.80737305]
[-209.02262878 262.64187622]
[-195.34831238 256.47640991]
[-181.67399597 250.31092834]
[-167.99967957 244.14546204]
[-154.32537842 237.97998047]
[-145.90319824 225.69517517]
[-130.14239502 227.07635498]
[-116.46807861 220.91088867]
[-102.79376221 214.74540710]
[-89.11944580 208.57992554]
[-84.29959106 202.94721985]
[-75.14896393 202.42868042]
[-61.36796951 196.50549316]
[-47.58697128 190.58232117]
[-38.94930267 178.44807434]
[-23.21533012 180.10717773]
[-9.43433285 174.18400574]
[-4.51581812 168.63722229]
[4.64253378 168.28027344]
[18.52591896 162.60121155]
[32.40930557 156.92216492]
[46.29269028 151.24311829]
[60.17607880 145.56407166]
[74.05946350 139.88502502]
[62.92738724 126.96244812]
[57.41938400 111.48526001]
[57.85544586 95.69113922]
[63.72824860 81.70130920]
[73.82950592 71.23576355]
[86.46661377 65.40288544]
[99.73348999 64.58926392]
[111.79360962 68.45919037]
[120.04444122 55.93226242]
[128.29525757 43.40533447]
[136.54608154 30.87840843]
[144.79692078 18.35148239]
[153.04774475 5.82455540]
[161.29856873 -6.70237112]
[155.99441528 -21.16515541]
[160.17459106 -35.80685806]
[172.03451538 -45.07002258]
[186.89691162 -45.56740189]
[195.14773560 -58.09432602]
[203.39855957 -70.62125397]
[211.64938354 -83.14817810]
[219.90020752 -95.67510986]
[228.15103149 -108.20203400]
[229.28024292 -123.98288727]
[242.74258423 -130.35585022]
[250.99340820 -142.88278198]
[259.24423218 -155.40971375]
[267.49505615 -167.93663025]
[275.74588013 -180.46356201]
[283.66223145 -193.20451355]
[291.23852539 -206.15054321]
[298.81481934 -219.09657288]
[306.39111328 -232.04260254]
[308.03332520 -241.05958557]
[314.21707153 -245.14857483]
[322.02066040 -257.95889282]
[329.82424927 -270.76919556]
[337.62783813 -283.57949829]
[345.43142700 -296.38980103]
[353.23501587 -309.20010376]
[349.26184082 -324.49682617]
[357.34069824 -338.08016968]
[372.67855835 -341.89141846]
[386.17575073 -333.66940308]
[389.82461548 -318.29211426]
[381.46035767 -304.88259888]
[366.04534912 -301.39651489]
[358.24172974 -288.58621216]
[350.43814087 -275.77590942]
[342.63455200 -262.96560669]
[334.83096313 -250.15528870]
[327.02737427 -237.34498596]
[319.33712769 -224.46630859]
[311.76083374 -211.52027893]
[304.18453979 -198.57424927]
[296.60824585 -185.62821960]
[297.15942383 -182.11679077]
[296.01812744 -178.16331482]
[292.99511719 -174.57498169]
[288.27282715 -172.21273804]
[280.02197266 -159.68580627]
[271.77114868 -147.15888977]
[263.52032471 -134.63195801]
[255.26951599 -122.10503387]
[254.73045349 -107.22018433]
[240.67796326 -99.95121002]
[232.42713928 -87.42427826]
[224.17631531 -74.89735413]
[215.92547607 -62.37042999]
[207.67465210 -49.84350204]
[199.42382812 -37.31657410]
[204.83572388 -23.46560097]
[201.00857544 -8.91166782]
[189.20742798 0.71050674]
[173.82548523 1.54845381]
[165.57466125 14.07538033]
[157.32383728 26.60230637]
[149.07301331 39.12923431]
[140.82218933 51.65615845]
[132.57136536 64.18308258]
[124.32054138 76.71001434]
[136.40760803 88.08210754]
[142.57539368 105.61170959]
[139.83799744 126.01269531]
[152.50859070 134.04115295]
[165.17918396 142.06961060]
[181.57777405 142.20378113]
[189.42436218 156.60388184]
[180.64703369 170.45634460]
[164.27516174 169.51092529]
[157.15072632 154.74020386]
[144.48013306 146.71174622]
[131.80953979 138.68328857]
[125.77318573 143.13439941]
[127.44670105 158.04075623]
[113.70047760 152.03662109]
[107.66412354 156.48774719]
[111.58901215 170.96514893]
[115.51390076 185.44255066]
[119.43878937 199.91995239]
[123.36367798 214.39736938]
[138.47024536 215.64933777]
[152.23628235 221.99536133]
[162.99946594 232.66915894]
[169.46008301 246.38177490]
[170.83799744 261.47738647]
[166.96682739 276.13308716]
[158.31401062 288.57916260]
[145.92442322 297.31265259]
[131.29417419 301.27899170]
[116.18994141 299.99917603]
[102.43563080 293.62777710]
[91.69213104 282.93417358]
[85.25679016 269.20965576]
[83.90669250 254.11155701]
[87.80487823 239.46299744]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 162]
[2 161]
[3 160]
[4 159]
[5 158]
[6 61]
[7 60]
[8 59]
[9 58]
[10 57]
[11 56]
[12 54]
[13 53]
[15 51]
[16 50]
[17 49]
[18 47]
[19 46]
[20 45]
[21 44]
[23 42]
[24 41]
[25 40]
[26 39]
[27 38]
[28 37]
[69 142]
[70 141]
[71 140]
[72 139]
[73 138]
[74 137]
[75 136]
[79 132]
[80 131]
[81 130]
[82 129]
[83 128]
[84 127]
[86 125]
[87 124]
[88 123]
[89 122]
[90 121]
[91 117]
[92 116]
[93 115]
[94 114]
[96 113]
[97 112]
[98 111]
[99 110]
[100 109]
[101 108]
[145 154]
[146 153]
[147 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
