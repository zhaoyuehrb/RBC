%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:47:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAGGAUGGUGCGCCUGGCGGCCGAGCUGCUGCUGCUGCUGGGGCUGCUGCUGCUCACGCUGCACAUCACCGUGCUGCGCGGCUCGGGAGCCGCCGACGGGCCCG\
) } def
/len { sequence length } bind def

/coor [
[54.44158936 539.26110840]
[41.39291000 547.26055908]
[26.12059975 548.26806641]
[12.13412285 542.05218506]
[2.64746881 530.04132080]
[-0.15939869 514.99536133]
[4.35851812 500.37185669]
[15.16303539 489.53115845]
[29.77135277 484.96435547]
[32.40016937 470.19650269]
[35.02898407 455.42864990]
[29.64194107 441.54235840]
[39.67803192 429.31176758]
[42.30684662 414.54391479]
[35.61314774 404.34970093]
[37.79294205 391.94134521]
[48.20513153 384.15542603]
[51.26634598 369.47109985]
[54.32756042 354.78680420]
[57.38877106 340.10247803]
[60.44998550 325.41818237]
[63.51119995 310.73385620]
[66.57241058 296.04956055]
[68.98415375 281.24472046]
[70.74174500 266.34805298]
[72.49934387 251.45137024]
[74.25693512 236.55468750]
[76.01453400 221.65802002]
[77.77212524 206.76135254]
[79.52971649 191.86466980]
[81.28731537 176.96800232]
[78.90793610 169.84440613]
[83.32141113 161.66217041]
[85.51556396 146.82351685]
[79.72319031 133.10136414]
[89.39591217 120.58141327]
[91.59005737 105.74275970]
[89.53865814 97.80476379]
[94.07260895 90.50325012]
[96.70142365 75.73539734]
[95.11302948 66.57544708]
[99.63027954 60.57533264]
[102.69149780 45.89102173]
[105.53681946 31.16335678]
[108.16563416 16.39550972]
[106.57723236 7.23556042]
[111.09449005 1.23544466]
[114.15570068 -13.44886589]
[112.83689880 -22.65149689]
[117.52834320 -28.51641655]
[121.01931763 -43.10453033]
[124.51029205 -57.69264603]
[120.19718933 -72.91459656]
[130.68406677 -83.49167633]
[134.17503357 -98.07978821]
[128.98974609 -113.63757324]
[140.07148743 -125.72586823]
[156.02033997 -121.90927124]
[160.42947388 -106.11396790]
[148.76315308 -94.58881378]
[145.27218628 -80.00070190]
[149.83499146 -65.82218933]
[139.09840393 -54.20167160]
[135.60743713 -39.61355591]
[132.11645508 -25.02544212]
[128.84001160 -10.38765240]
[125.77880096 4.29665804]
[122.93347931 19.02432442]
[120.30466461 33.79217148]
[122.26187134 41.04312515]
[117.37580872 48.95223618]
[114.31459045 63.63654709]
[111.46926880 78.36421204]
[108.84045410 93.13206482]
[106.42871857 107.93691254]
[104.23456573 122.77556610]
[109.86999512 137.55908203]
[100.35421753 149.01766968]
[98.16007233 163.85632324]
[96.18398285 178.72560120]
[94.42639160 193.62226868]
[92.66880035 208.51893616]
[90.91120148 223.41561890]
[89.15361023 238.31228638]
[87.39601898 253.20895386]
[85.63842010 268.10562134]
[83.88082886 283.00231934]
[86.08818054 288.08505249]
[86.01833344 292.99029541]
[84.15190125 296.84432983]
[81.25672150 299.11077881]
[78.19551086 313.79507446]
[75.13429260 328.47940063]
[72.07308197 343.16369629]
[69.01187134 357.84802246]
[65.95065308 372.53231812]
[62.88944244 387.21664429]
[69.09143066 404.47674561]
[57.07469559 417.17272949]
[54.44588089 431.94058228]
[59.64489365 446.88317871]
[49.79682922 458.05746460]
[47.16801453 472.82531738]
[44.53919983 487.59317017]
[56.67422867 496.92053223]
[63.07409286 510.82376099]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 104]
[10 103]
[11 102]
[13 100]
[14 99]
[17 97]
[18 96]
[19 95]
[20 94]
[21 93]
[22 92]
[23 91]
[24 87]
[25 86]
[26 85]
[27 84]
[28 83]
[29 82]
[30 81]
[31 80]
[33 79]
[34 78]
[36 76]
[37 75]
[39 74]
[40 73]
[42 72]
[43 71]
[44 69]
[45 68]
[47 67]
[48 66]
[50 65]
[51 64]
[52 63]
[54 61]
[55 60]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
