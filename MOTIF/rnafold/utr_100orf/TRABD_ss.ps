%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:24:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCAGCCUCCCGCCCGGCUGCACAGGAGUUUCUUUAAGGAGUUUCCCCGGUGUGCCUCGGCAGCCUUGCGCUGCUCUAAUGGUCCGGACUUCCGUGUGCUCCCCACAGGUGCAGGAAGCCGCCGCCCAGCCAUGGACGGGGAGGAGCAGCAGCCACCGCACGAGGCCAACGUGGAACCUGUUGUGCCGUCAGAGGCUUCAGAGCCGGUGCCCAGGGUGCUUUCUGGAGACC\
) } def
/len { sequence length } bind def

/coor [
[182.74234009 1151.41894531]
[188.70103455 1137.48095703]
[199.06974792 1126.42358398]
[212.59638977 1119.58203125]
[210.78834534 1104.69140625]
[208.98030090 1089.80078125]
[199.76530457 1078.09899902]
[205.78276062 1063.46679688]
[203.97471619 1048.57617188]
[202.16667175 1033.68554688]
[191.01849365 1027.24279785]
[185.53016663 1015.38043213]
[187.90609741 1002.33001709]
[197.50016785 992.89019775]
[195.89218140 977.97662354]
[194.18412781 963.07415771]
[192.37608337 948.18353271]
[190.56802368 933.29290771]
[188.75997925 918.40228271]
[186.95193481 903.51165771]
[185.14387512 888.62103271]
[175.68136597 884.71343994]
[168.63339233 877.17736816]
[165.31579590 867.32183838]
[166.38829041 856.89721680]
[171.72456360 847.78442383]
[180.42301941 841.65527344]
[179.21603394 826.70391846]
[178.00903320 811.75256348]
[176.80203247 796.80120850]
[175.59503174 781.84985352]
[174.38803101 766.89849854]
[173.18103027 751.94714355]
[171.97402954 736.99578857]
[170.76704407 722.04443359]
[158.78079224 716.18469238]
[151.19096375 705.08068848]
[150.06593323 691.56915283]
[155.80572510 679.16644287]
[167.00978088 671.15325928]
[166.00361633 656.18707275]
[164.39564514 641.27349854]
[162.18846130 626.43676758]
[152.66261292 614.98657227]
[158.28506470 600.19805908]
[156.07788086 585.36138916]
[153.87069702 570.52465820]
[151.66351318 555.68792725]
[142.13768005 544.23767090]
[147.76013184 529.44921875]
[145.55294800 514.61248779]
[136.02709961 503.16229248]
[141.64955139 488.37380981]
[139.44236755 473.53707886]
[135.35581970 467.39346313]
[137.30653381 458.48651123]
[135.29873657 443.62149048]
[133.29093933 428.75646973]
[131.28314209 413.89144897]
[129.27534485 399.02642822]
[127.26754761 384.16140747]
[125.16001129 369.31021118]
[122.95283508 354.47348022]
[110.78637695 351.13354492]
[100.74645996 343.41613770]
[94.34278870 332.43728638]
[92.55502319 319.80654907]
[95.68308258 307.39126587]
[103.29750061 297.04031372]
[114.29801178 290.30886841]
[112.48995972 275.41824341]
[110.58199310 260.54010010]
[108.57419586 245.67506409]
[106.56640625 230.81005859]
[104.55860901 215.94503784]
[102.55081177 201.08001709]
[100.54301453 186.21499634]
[98.53521729 171.34997559]
[96.52742004 156.48497009]
[85.56130981 166.71943665]
[70.70286560 164.66355896]
[62.92771912 151.83596802]
[67.97922516 137.71214294]
[82.12592316 132.72508240]
[94.91838837 140.55931091]
[93.91222382 125.59309387]
[92.90605927 110.62687683]
[52.56254959 92.12521362]
[47.81253052 77.89716339]
[42.13550949 70.76199341]
[43.09563828 63.44610977]
[38.53706360 49.15557480]
[33.97848511 34.86503983]
[29.41990852 20.57450676]
[24.86133003 6.28397226]
[19.28061104 -0.92677182]
[20.33887291 -8.22910500]
[15.97255993 -22.57955170]
[11.60624599 -36.92999649]
[7.23993349 -51.28044510]
[2.87362003 -65.63088989]
[-1.49269307 -79.98133850]
[-15.94890404 -85.94388580]
[-23.14449501 -99.82759857]
[-19.68192673 -115.07701111]
[-7.19611883 -124.49182129]
[8.41751194 -123.62664032]
[19.78668785 -112.88997650]
[21.54323006 -97.35136414]
[12.85775280 -84.34764862]
[17.22406578 -69.99720001]
[21.59037971 -55.64675522]
[25.95669365 -41.29631042]
[30.32300568 -26.94586372]
[34.68931961 -12.59541798]
[39.15186310 1.72539496]
[43.71044159 16.01593018]
[48.26902008 30.30646324]
[52.82759857 44.59699631]
[57.38617325 58.88753128]
[62.04057693 73.14714050]
[66.79059601 87.37519073]
[74.28231812 87.72748566]
[96.75748444 88.78436279]
[102.82171631 75.06484985]
[108.88594818 61.34533310]
[107.38831329 45.59516907]
[119.61051941 37.08242035]
[125.67475891 23.36290741]
[131.73898315 9.64339256]
[129.44401550 -6.59437609]
[142.52383423 -16.48630142]
[157.52307129 -9.85641766]
[159.01176453 6.47501850]
[145.45849609 15.70762539]
[139.39427185 29.42713928]
[133.33003235 43.14665604]
[135.26142883 57.91550827]
[122.60546112 67.40956879]
[116.54122925 81.12908173]
[110.47699738 94.84859467]
[107.87227631 109.62071228]
[108.87844086 124.58692932]
[109.88460541 139.55314636]
[111.39243317 154.47717285]
[113.40023041 169.34217834]
[115.40802765 184.20719910]
[117.41582489 199.07221985]
[119.42362213 213.93724060]
[121.43141937 228.80226135]
[123.43921661 243.66726685]
[125.44701385 258.53228760]
[129.69081116 266.60256958]
[127.38059998 273.61019897]
[129.18864441 288.50082397]
[145.52340698 295.01892090]
[156.24446106 308.84783936]
[158.46368408 326.11465454]
[151.65808105 342.04116821]
[137.78955078 352.26629639]
[139.99673462 367.10302734]
[144.34849548 375.11560059]
[142.13256836 382.15362549]
[144.14036560 397.01864624]
[146.14816284 411.88366699]
[148.15596008 426.74865723]
[150.16375732 441.61367798]
[152.17155457 456.47869873]
[154.27909851 471.32992554]
[156.48626709 486.16662598]
[166.16998291 498.67807007]
[160.38966370 512.40533447]
[162.59684753 527.24206543]
[172.28056335 539.75347900]
[166.50024414 553.48071289]
[168.70742798 568.31744385]
[170.91461182 583.15417480]
[173.12178040 597.99090576]
[182.80549622 610.50238037]
[177.02517700 624.22961426]
[179.23236084 639.06634521]
[188.92881775 627.62170410]
[203.86701965 626.26165771]
[215.47091675 635.76690674]
[217.07864380 650.68048096]
[207.76721191 662.44042969]
[192.88235474 664.29541016]
[180.96983337 655.18090820]
[181.97599792 670.14709473]
[196.42201233 678.95996094]
[202.70074463 694.49475098]
[198.51896667 710.54846191]
[185.71839905 720.83740234]
[186.92539978 735.78875732]
[188.13240051 750.74011230]
[189.33938599 765.69146729]
[190.54638672 780.64282227]
[191.75338745 795.59417725]
[192.96038818 810.54559326]
[194.16738892 825.49694824]
[195.37438965 840.44830322]
[211.34803772 852.65948486]
[213.13763428 872.37890625]
[200.03451538 886.81298828]
[201.84255981 901.70361328]
[203.65061951 916.59423828]
[205.45866394 931.48486328]
[207.26670837 946.37548828]
[209.07476807 961.26611328]
[213.20983887 969.39263916]
[210.80574036 976.36865234]
[212.41372681 991.28222656]
[226.24008179 1002.01153564]
[227.98640442 1019.08544922]
[217.05729675 1031.87744141]
[218.86535645 1046.76806641]
[220.67340088 1061.65869141]
[230.01771545 1074.42565918]
[223.87092590 1087.99279785]
[225.67898560 1102.88342285]
[227.48703003 1117.77404785]
[242.25788879 1121.17956543]
[254.97151184 1129.43420410]
[264.09265137 1141.54125977]
[268.51989746 1156.03869629]
[267.71865845 1171.17590332]
[261.78564453 1185.12487793]
[251.43733215 1196.20129395]
[237.92332458 1203.06774902]
[222.87548828 1204.89489746]
[208.11093140 1201.46215820]
[195.41255188 1193.18408203]
[186.31372070 1181.06018066]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 221]
[5 220]
[6 219]
[8 217]
[9 216]
[10 215]
[14 212]
[15 211]
[16 209]
[17 208]
[18 207]
[19 206]
[20 205]
[21 204]
[27 201]
[28 200]
[29 199]
[30 198]
[31 197]
[32 196]
[33 195]
[34 194]
[35 193]
[40 189]
[41 188]
[42 181]
[43 180]
[45 178]
[46 177]
[47 176]
[48 175]
[50 173]
[51 172]
[53 170]
[54 169]
[56 168]
[57 167]
[58 166]
[59 165]
[60 164]
[61 163]
[62 161]
[63 160]
[70 155]
[71 154]
[72 152]
[73 151]
[74 150]
[75 149]
[76 148]
[77 147]
[78 146]
[79 145]
[85 144]
[86 143]
[87 142]
[88 122]
[89 121]
[91 120]
[92 119]
[93 118]
[94 117]
[95 116]
[97 115]
[98 114]
[99 113]
[100 112]
[101 111]
[102 110]
[124 141]
[125 140]
[126 139]
[128 137]
[129 136]
[130 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
