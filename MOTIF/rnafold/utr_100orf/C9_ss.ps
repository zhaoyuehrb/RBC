%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:26:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACAAUGCUUGUUCCCUGUCCUCUGGCCCUUUGCAAAUAAAUGCCUUACCAGACCUGCCCUGCCACCCCACUCGCAGCCACCCAGCAAGAGCAGCAUGUCAGCCUGCCGGAGCUUUGCAGUUGCAAUCUGCAUUUUAGAAAUAAGCAUCCUCACAGCACAGUACACGACCAGUUAUGACCCAGAGCUAACAGAAA\
) } def
/len { sequence length } bind def

/coor [
[-61.53956223 179.37992859]
[-72.86434174 169.54379272]
[-78.41265869 155.60765076]
[-76.94716644 140.67941284]
[-68.79468536 128.08825684]
[-55.77629089 120.64304352]
[-70.71862793 119.32908630]
[-85.66097260 118.01512909]
[-100.60330963 116.70117950]
[-115.54564667 115.38722229]
[-124.38017273 117.75476074]
[-130.71514893 113.93131256]
[-145.63462830 112.37924957]
[-160.55412292 110.82717896]
[-175.47360229 109.27511597]
[-193.47886658 118.32325745]
[-208.63917542 106.33184814]
[-223.60057068 105.25634003]
[-238.56196594 104.18083191]
[-248.00709534 122.78468323]
[-267.31393433 133.71173096]
[-290.76168823 132.06176758]
[-310.45236206 116.93937683]
[-324.57928467 121.98217010]
[-338.70620728 127.02495575]
[-352.83316040 132.06774902]
[-366.96008301 137.11053467]
[-368.06646729 149.99018860]
[-373.94409180 161.45126343]
[-383.68695068 169.80458069]
[-395.82229614 173.83403015]
[-408.53332520 172.97366333]
[-419.93103027 167.38677979]
[-428.33508301 157.93646240]
[-442.61563110 162.52619934]
[-456.89620972 167.11593628]
[-463.89221191 181.28742981]
[-478.88650513 186.28205872]
[-492.98324585 179.13661194]
[-497.81909180 164.09034729]
[-490.52499390 150.06993103]
[-475.42843628 145.39344788]
[-461.48593140 152.83537292]
[-447.20538330 148.24563599]
[-432.92480469 143.65591431]
[-429.91076660 126.71402740]
[-418.67880249 113.56015015]
[-402.25006104 107.87110138]
[-385.11431885 111.29693604]
[-372.00286865 122.98360443]
[-357.87594604 117.94081116]
[-343.74899292 112.89802551]
[-329.62207031 107.85523224]
[-315.49514771 102.81244659]
[-314.36325073 95.39834595]
[-329.19143677 93.13455963]
[-344.01959229 90.87052917]
[-341.75531006 76.04241180]
[-326.92764282 78.30636597]
[-312.09945679 80.57015991]
[-310.96755981 73.15605927]
[-322.94628906 64.12777710]
[-334.92501831 55.09948730]
[-346.90374756 46.07120132]
[-361.01068115 52.14492798]
[-376.26263428 50.33552551]
[-388.55688477 41.12971878]
[-394.58636475 27.00382042]
[-392.72915649 11.75762844]
[-383.48486328 -0.50770962]
[-369.34011841 -6.49287844]
[-354.09982300 -4.58789873]
[-341.86352539 4.69480085]
[-335.92272949 18.85821915]
[-337.87545776 34.09246826]
[-325.89672852 43.12075806]
[-313.91799927 52.14904404]
[-301.93927002 61.17733002]
[-287.83502197 54.28786850]
[-272.75219727 52.91149902]
[-258.69705200 56.84138870]
[-247.40451050 65.18942261]
[-240.12438965 76.54921722]
[-237.48645020 89.21943665]
[-222.52505493 90.29494476]
[-207.56365967 91.37046051]
[-200.46052551 84.00518799]
[-190.26048279 81.72367096]
[-180.28550720 85.51676178]
[-173.92153931 94.35562897]
[-159.00205994 95.90769196]
[-144.08256531 97.45976257]
[-129.16308594 99.01182556]
[-114.23169708 100.44488525]
[-99.28935242 101.75883484]
[-84.34701538 103.07279205]
[-69.40467072 104.38674927]
[-54.46233368 105.70070648]
[-39.46233368 105.70070648]
[-24.51999474 104.38674927]
[-12.51941109 95.56431580]
[1.90547800 102.06301880]
[16.84781837 100.74906921]
[31.79015732 99.43511200]
[46.72154617 98.00205231]
[61.64103317 96.44998932]
[76.56051636 94.89792633]
[84.81385040 78.34302521]
[103.84532166 71.34362793]
[124.14882660 79.96837616]
[136.93530273 72.12580109]
[149.72178650 64.28322601]
[162.44532776 56.33894348]
[175.10510254 48.29346466]
[187.76489258 40.24798584]
[200.42468262 32.20250320]
[212.40342712 23.17421913]
[223.62498474 13.22049427]
[234.84654236 3.26676941]
[246.06809998 -6.68695498]
[257.28964233 -16.64068031]
[256.67938232 -32.26634979]
[266.29672241 -44.59685135]
[281.60061646 -47.81009293]
[295.36505127 -40.38888550]
[301.09088135 -25.83729362]
[296.07455444 -11.02613449]
[282.68460083 -2.94878459]
[267.24337769 -5.41912127]
[256.02182007 4.53460312]
[244.80026245 14.48832798]
[233.57870483 24.44205284]
[222.35714722 34.39577484]
[237.30044556 33.09273148]
[250.93762207 39.33990860]
[259.71017456 51.50716400]
[261.32901001 66.41955566]
[255.37165833 80.18582153]
[243.39266968 89.21376801]
[228.51785278 91.14763641]
[214.62866211 85.48278809]
[205.34938049 73.69743347]
[203.10133362 58.86684418]
[208.47016907 44.86229324]
[195.81037903 52.90777206]
[183.15058899 60.95325089]
[170.49079895 68.99873352]
[166.52716064 75.24694824]
[157.56436157 77.06970215]
[144.77787781 84.91227722]
[131.99140930 92.75485229]
[131.87181091 107.75437927]
[144.53158569 115.79985809]
[157.19137573 123.84533691]
[172.98855591 124.71709442]
[179.58016968 138.07373047]
[192.23995972 146.11921692]
[204.89974976 154.16468811]
[217.32182312 145.40339661]
[232.15223694 142.06759644]
[247.12944031 144.66601562]
[259.96954346 152.80238342]
[268.71447754 165.23597717]
[272.03076172 180.07075500]
[269.41265869 195.04454041]
[261.25939941 207.87391663]
[248.81431580 216.60249329]
[233.97517395 219.89926147]
[219.00486755 217.26145935]
[206.18621826 209.09132385]
[197.47401428 196.63476562]
[194.19677734 181.79132080]
[196.85427856 166.82447815]
[184.19448853 158.77900696]
[171.53469849 150.73352051]
[156.64303589 150.43722534]
[149.14590454 136.50512695]
[136.48611450 128.45964050]
[123.82632446 120.41416931]
[105.51342010 128.38267517]
[87.81735229 123.47821808]
[78.11258698 109.81741333]
[63.19309998 111.36947632]
[48.27361298 112.92153931]
[40.05066299 116.92619324]
[33.10411453 114.37744904]
[18.16177368 115.69140625]
[3.21943331 117.00536346]
[-9.84992599 125.92177582]
[-23.20603943 119.32908630]
[-38.14838028 120.64304352]
[-25.12774086 128.09039307]
[-16.97648430 140.68232727]
[-15.51244259 155.61071777]
[-21.06211472 169.54632568]
[-32.38785172 179.38134766]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 98]
[7 97]
[8 96]
[9 95]
[10 94]
[12 93]
[13 92]
[14 91]
[15 90]
[17 86]
[18 85]
[19 84]
[23 54]
[24 53]
[25 52]
[26 51]
[27 50]
[34 45]
[35 44]
[36 43]
[61 78]
[62 77]
[63 76]
[64 75]
[99 191]
[100 190]
[102 188]
[103 187]
[104 186]
[105 184]
[106 183]
[107 182]
[110 151]
[111 150]
[112 149]
[113 147]
[114 146]
[115 145]
[116 144]
[117 133]
[118 132]
[119 131]
[120 130]
[121 129]
[152 179]
[153 178]
[154 177]
[156 175]
[157 174]
[158 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
