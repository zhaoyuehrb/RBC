%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:40:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCUGUCUGCAUUCUACUAUAUAAAGCAGCAGAGACGUUGACUAGCGCAUAUUUGCUAAGAGCACCAUGCGCGCAGCAGCCAUCUCCACUCCAAAGUUAGACAAAAUGCCAGGAAUGUUCUUCUCUGCUAACCCAAAGGAAUUGAAAGGAACCACUCAUUCACUUC\
) } def
/len { sequence length } bind def

/coor [
[292.53045654 257.63342285]
[294.65393066 250.96382141]
[282.21136475 242.58633423]
[269.76879883 234.20883179]
[257.32623291 225.83134460]
[253.77557373 226.16664124]
[249.88693237 224.77157593]
[246.48794556 221.50686646]
[244.43647766 216.61378479]
[232.48625183 207.54779053]
[220.53602600 198.48179626]
[208.58580017 189.41581726]
[196.63557434 180.34982300]
[181.10334778 185.60179138]
[165.33865356 180.52476501]
[155.59715271 166.92591858]
[155.86755371 150.03416443]
[143.74890137 141.19456482]
[131.63026428 132.35498047]
[120.08427429 140.54553223]
[106.57241058 144.76741028]
[92.41722107 144.60739136]
[79.00424957 140.08113098]
[67.64637756 131.63165283]
[59.45533371 120.08602142]
[55.23286819 106.57433319]
[55.39228058 92.41914368]
[59.91796875 79.00597382]
[47.96774673 69.93998718]
[32.51353073 71.89062500]
[20.52345467 62.52618408]
[18.75905991 47.78093338]
[6.80883741 38.71494293]
[-5.14138603 29.64895248]
[-17.09160995 20.58296394]
[-35.39182663 18.72451210]
[-41.59918213 2.32953787]
[-53.71783066 -6.51005411]
[-65.83647919 -15.34964561]
[-77.95512390 -24.18923759]
[-86.77342224 -26.73467255]
[-90.21649170 -33.31084824]
[-102.16670990 -42.37683868]
[-120.46692657 -44.23529053]
[-126.67428589 -60.63026428]
[-138.79293823 -69.46985626]
[-150.91157532 -78.30944824]
[-163.03022766 -87.14904022]
[-175.14888000 -95.98863220]
[-187.26751709 -104.82822418]
[-200.27256775 -101.22616577]
[-212.79035950 -105.71949768]
[-220.31196594 -116.45101166]
[-220.26641846 -129.36103821]
[-232.21664429 -138.42703247]
[-244.16687012 -147.49301147]
[-256.11709595 -156.55900574]
[-272.39022827 -161.31515503]
[-272.32479858 -178.26898193]
[-256.01544189 -182.89939880]
[-247.05110168 -168.50923157]
[-235.10087585 -159.44323730]
[-223.15065002 -150.37724304]
[-211.20042419 -141.31126404]
[-194.67301941 -144.31683350]
[-180.80033875 -134.25796509]
[-178.42793274 -116.94686890]
[-166.30928040 -108.10727692]
[-154.19064331 -99.26768494]
[-142.07199097 -90.42809296]
[-129.95333862 -81.58850098]
[-117.83469391 -72.74890900]
[-105.81149292 -74.30430603]
[-95.63552856 -67.00226593]
[-93.10072327 -54.32706070]
[-81.15049744 -45.26107407]
[-69.11553192 -36.30788422]
[-56.99688721 -27.46829414]
[-44.87823868 -18.62870216]
[-32.75959015 -9.78910923]
[-20.73638535 -11.34450531]
[-10.56042194 -4.04246616]
[-8.02561951 8.63274002]
[3.92460370 17.69873047]
[15.87482643 26.76471901]
[27.82505035 35.83070755]
[42.50046921 33.55745316]
[54.74884415 42.58142090]
[57.03373718 57.98976517]
[68.98396301 67.05575562]
[82.10753632 58.44067383]
[97.38492584 54.82833481]
[112.97711182 56.65357590]
[127.00717163 63.69668198]
[137.78620911 75.10983276]
[144.01670837 89.51916504]
[144.94863892 105.19013214]
[140.46984863 120.23633575]
[152.58850098 129.07592773]
[164.70715332 137.91551208]
[177.49684143 132.71136475]
[191.07870483 134.50329590]
[201.90827942 142.71548462]
[207.21299744 155.11087036]
[205.70156860 168.39959717]
[217.65179443 177.46559143]
[229.60202026 186.53158569]
[241.55224609 195.59756470]
[253.50245667 204.66355896]
[265.70370483 213.38877869]
[278.14630127 221.76626587]
[290.58886719 230.14375305]
[303.03143311 238.52125549]
[324.89315796 227.49714661]
[348.95019531 231.41230774]
[366.03256226 248.64282227]
[369.70623779 272.51443481]
[383.80700684 277.63000488]
[397.90774536 282.74557495]
[412.00848389 287.86114502]
[426.10922241 292.97671509]
[440.20996094 298.09228516]
[455.82153320 295.52523804]
[465.14706421 307.13916016]
[479.24783325 312.25473022]
[488.33444214 303.01153564]
[500.20486450 297.92388916]
[513.07122803 297.71942139]
[525.01013184 302.39318848]
[534.25036621 311.21365356]
[539.43560791 322.83700562]
[539.82336426 335.51174927]
[553.72167969 341.15408325]
[569.88177490 338.36419678]
[580.16864014 351.13577271]
[574.00000000 366.33050537]
[557.72161865 368.31735229]
[548.07934570 355.05242920]
[534.18103027 349.41009521]
[521.02618408 360.46334839]
[504.00201416 363.37191772]
[487.75747681 357.25051880]
[476.77468872 343.69235229]
[474.13226318 326.35546875]
[460.03152466 321.23989868]
[445.42852783 324.17285156]
[435.09439087 312.19302368]
[420.99365234 307.07745361]
[406.89291382 301.96188354]
[392.79217529 296.84631348]
[378.69143677 291.73077393]
[364.59066772 286.61520386]
[360.57131958 292.20001221]
[355.62789917 296.99688721]
[349.91235352 300.85467529]
[343.60110474 303.65118408]
[336.88949585 305.29699707]
[329.98571777 305.73840332]
[323.10440063 304.95904541]
[316.45996094 302.98059082]
[310.25991821 299.86209106]
[304.69833374 295.69830322]
[299.94985962 290.61660767]
[296.16409302 284.77343750]
[293.46102905 278.34912109]
[291.92721558 271.54257202]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 113]
[3 112]
[4 111]
[5 110]
[9 109]
[10 108]
[11 107]
[12 106]
[13 105]
[17 100]
[18 99]
[19 98]
[28 90]
[29 89]
[32 86]
[33 85]
[34 84]
[35 83]
[37 80]
[38 79]
[39 78]
[40 77]
[42 76]
[43 75]
[45 72]
[46 71]
[47 70]
[48 69]
[49 68]
[50 67]
[54 64]
[55 63]
[56 62]
[57 61]
[117 152]
[118 151]
[119 150]
[120 149]
[121 148]
[122 147]
[124 145]
[125 144]
[132 139]
[133 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
