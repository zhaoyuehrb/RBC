%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:37:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUUGCUGAUUUAGCUUAUGGAAGAGGAACCAGAAAUUUGUCCUUGAAUAAUGUUUCCCGACAACGAAGAGGCAGAAGGAUCUGGGCCUGUGCGCGACGCCCCGGGGGACGAGGCUCAUGGAGAAGUUUCGGGCGGUGCUGGACCUGCACGUCAAGCACCACAGCGCCUUGGGCUACGGCCUGGUGACCCUGCUGACGGCGGGCGGGGAGCGCAUCU\
) } def
/len { sequence length } bind def

/coor [
[29.86064148 176.18684387]
[19.21614265 186.75541687]
[4.47252131 189.51687622]
[-9.27523232 183.51693726]
[-17.27627373 170.82901001]
[-16.76555061 155.83737183]
[-21.42126465 170.09655762]
[-26.07697868 184.35574341]
[-30.73269463 198.61492920]
[-29.90113449 215.54846191]
[-45.94271088 221.03520203]
[-55.65576935 207.13941956]
[-44.99187851 193.95921326]
[-40.33616257 179.70002747]
[-35.68044662 165.44084167]
[-31.02473450 151.18165588]
[-35.14105606 144.91221619]
[-46.06304550 155.19375610]
[-52.36589813 168.80529785]
[-66.75502014 173.04243469]
[-79.42870331 165.01885986]
[-81.75379181 150.20016479]
[-72.14646149 138.68064880]
[-57.14983368 138.30783081]
[-43.37369919 132.37333679]
[-47.49002075 126.10389709]
[-62.42486191 124.70726776]
[-77.35970306 123.31063843]
[-87.76592255 130.92465210]
[-100.17303467 129.45759583]
[-107.99713135 120.23697662]
[-122.91040039 118.62625885]
[-137.82366943 117.01553345]
[-152.73693848 115.40481567]
[-167.65020752 113.79409790]
[-181.94944763 126.22875977]
[-200.47831726 124.28983307]
[-211.50834656 109.67440796]
[-226.46168518 108.49215698]
[-241.41502380 107.30990601]
[-256.36834717 106.12765503]
[-265.16394043 108.56993103]
[-271.52722168 104.81968689]
[-286.46206665 103.42305756]
[-301.39688110 102.02642822]
[-316.33172607 100.62980652]
[-323.15332031 113.00413513]
[-334.14199829 121.81801605]
[-347.61877441 125.76702881]
[-361.54043579 124.28684998]
[-373.80941772 117.63369751]
[-382.58987427 106.84066772]
[-386.58221436 93.55746460]
[-401.49548340 91.94673920]
[-416.40875244 90.33602142]
[-431.32202148 88.72530365]
[-446.09564209 95.84375000]
[-459.49298096 86.38631439]
[-457.73202515 70.08198547]
[-442.62426758 63.70326614]
[-429.71130371 73.81203461]
[-414.79803467 75.42275238]
[-399.88476562 77.03347015]
[-384.97149658 78.64419556]
[-376.79159546 64.91368103]
[-363.39324951 56.09404373]
[-347.43197632 53.99408722]
[-332.09786987 59.08473587]
[-320.47802734 70.39461517]
[-314.93508911 85.69496155]
[-300.00027466 87.09159088]
[-285.06542969 88.48822021]
[-270.13058472 89.88484955]
[-255.18611145 91.17432404]
[-240.23277283 92.35656738]
[-225.27943420 93.53881836]
[-210.32609558 94.72106934]
[-203.46444702 85.61470032]
[-192.95120239 80.90018463]
[-181.34851074 81.85314941]
[-171.54563904 88.35227203]
[-166.03948975 98.88082886]
[-151.12622070 100.49154663]
[-136.21295166 102.10226440]
[-121.29968262 103.71298981]
[-106.38641357 105.32370758]
[-90.73615265 97.37859344]
[-75.96307373 108.37580109]
[-61.02823257 109.77243042]
[-46.09339523 111.16905975]
[-5.35201311 125.69242096]
[8.94019699 121.13909912]
[23.23240662 116.58577728]
[37.52461624 112.03246307]
[51.81682587 107.47914124]
[66.10903931 102.92581940]
[64.92575073 84.67361450]
[73.89514160 66.41622925]
[92.42138672 53.82188797]
[116.80548859 51.78964615]
[120.21817780 37.18301773]
[123.63087463 22.57639313]
[127.04356384 7.96976614]
[125.53288269 2.98563504]
[126.03137207 -1.62032413]
[128.05969238 -5.14721584]
[130.93008423 -7.18530083]
[134.96803284 -21.63158226]
[139.00598145 -36.07786179]
[143.04391479 -50.52414322]
[147.08186340 -64.97042084]
[139.34802246 -73.99018097]
[136.95030212 -85.50478363]
[140.37063599 -96.63276672]
[148.64959717 -104.64611053]
[159.65191650 -107.63892365]
[164.10261536 -121.96342468]
[168.55331421 -136.28793335]
[167.47892761 -153.20779419]
[183.44013977 -158.92408752]
[193.35153198 -145.16905212]
[182.87780762 -131.83723450]
[178.42712402 -117.51273346]
[173.97642517 -103.18823242]
[183.45568848 -87.52248383]
[178.38092041 -69.59693146]
[161.52813721 -60.93247986]
[157.49020386 -46.48620224]
[153.45225525 -32.03992081]
[149.41430664 -17.59363937]
[145.37637329 -3.14735889]
[141.65019226 11.38245773]
[138.23750305 25.98908424]
[134.82481384 40.59571075]
[131.41210938 55.20233536]
[143.13000488 64.56669617]
[156.62446594 58.01692581]
[170.11892700 51.46715927]
[183.61338806 44.91738892]
[197.10784912 38.36762238]
[210.60231018 31.81785393]
[219.63887024 18.83127785]
[234.46722412 20.23461151]
[247.96168518 13.68484402]
[261.45614624 7.13507509]
[266.39260864 -7.87847805]
[280.53689575 -14.92937565]
[295.49740601 -9.83444595]
[302.39837646 4.38357973]
[297.14556885 19.28940010]
[282.85537720 26.03965378]
[268.00592041 20.62953758]
[254.51145935 27.17930603]
[241.01698303 33.72907639]
[232.94564819 46.24716949]
[217.15208435 45.31231689]
[203.65762329 51.86208344]
[190.16316223 58.41185379]
[176.66868591 64.96162415]
[163.17422485 71.51139069]
[149.67976379 78.06115723]
[150.05616760 85.55170441]
[165.03727722 84.79913330]
[165.78962708 99.78025818]
[150.80897522 100.53280640]
[151.18537903 108.02335358]
[165.26846313 113.18733978]
[179.35154724 118.35132599]
[193.43463135 123.51531982]
[199.99339294 122.76199341]
[205.17311096 125.08204651]
[207.84405518 129.03472900]
[221.77320862 134.60057068]
[235.70234680 140.16642761]
[249.63150024 145.73228455]
[265.77603149 142.85360718]
[276.13290405 155.56845093]
[270.04788208 170.79685974]
[253.78070068 172.87316895]
[244.06564331 159.66143799]
[230.13650513 154.09558105]
[216.20735168 148.52972412]
[202.27819824 142.96386719]
[188.27064514 137.59840393]
[174.18756104 132.43441772]
[160.10447693 127.27042389]
[146.02139282 122.10643768]
[134.83438110 124.41103363]
[124.30996704 123.79460144]
[132.45246887 136.39221191]
[140.59497070 148.98982239]
[148.73745728 161.58743286]
[156.87995911 174.18504333]
[165.02246094 186.78263855]
[173.16494751 199.38024902]
[188.70323181 201.13972473]
[199.43775940 212.51092529]
[200.29998779 228.12471008]
[190.88282776 240.60874939]
[175.63276672 244.06845093]
[161.75041199 236.87023926]
[155.79058838 222.41290283]
[160.56733704 207.52275085]
[152.42485046 194.92514038]
[144.28234863 182.32752991]
[136.13984680 169.72991943]
[127.99735260 157.13230896]
[119.85485840 144.53471375]
[111.71236420 131.93710327]
[88.51847839 132.02081299]
[70.66236115 117.21802521]
[56.37014771 121.77134705]
[42.07793808 126.32466888]
[27.78572845 130.87799072]
[13.49351788 135.43130493]
[-0.79869235 139.98463440]
[14.19588566 139.58135986]
[26.82620430 147.67301941]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 16]
[7 15]
[8 14]
[9 13]
[26 90]
[27 89]
[28 88]
[31 86]
[32 85]
[33 84]
[34 83]
[35 82]
[38 77]
[39 76]
[40 75]
[41 74]
[43 73]
[44 72]
[45 71]
[46 70]
[53 64]
[54 63]
[55 62]
[56 61]
[91 216]
[92 215]
[93 214]
[94 213]
[95 212]
[96 211]
[100 135]
[101 134]
[102 133]
[103 132]
[107 131]
[108 130]
[109 129]
[110 128]
[111 127]
[116 124]
[117 123]
[118 122]
[136 161]
[137 160]
[138 159]
[139 158]
[140 157]
[141 156]
[143 154]
[144 153]
[145 152]
[166 187]
[167 186]
[168 185]
[169 184]
[172 183]
[173 182]
[174 181]
[175 180]
[189 209]
[190 208]
[191 207]
[192 206]
[193 205]
[194 204]
[195 203]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
