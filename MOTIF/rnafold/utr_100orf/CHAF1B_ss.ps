%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:22:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGGAAGCGGCGCGCGCUGCGCGGGAGGUGACGGUGCCUCUGACUGUCCGGGUCCCUCCAGCAUUUUGCAGCUUUCUCCUGUCUUGAAGAAGUAGAACGGUGCCCGAGAAACGUUUUUCCCCUUCGAGACUCAGGAGGAUGAAAGUCAUCACUUGUGAAAUAGCCUGGCACAACAAGGAGCCCGUGUACAGCCUGGACUUCCAGCAUGGGACGGCUGGGAGGAUCCACAGACUGGCGU\
) } def
/len { sequence length } bind def

/coor [
[86.31206512 132.21046448]
[77.62339020 144.43775940]
[68.93470764 156.66505432]
[71.36662292 172.05087280]
[62.38088226 184.32731628]
[47.69786453 186.55096436]
[39.00918198 198.77825928]
[37.32257843 214.50930786]
[23.64328003 220.40219116]
[14.95459843 232.62948608]
[6.26591682 244.85678101]
[-2.42276525 257.08407593]
[-11.11144733 269.31137085]
[-13.52428436 278.10116577]
[-19.99556732 281.64126587]
[-28.84421730 293.75332642]
[-26.55575562 304.36227417]
[-30.39449883 314.27883911]
[-38.87270737 320.32681274]
[-49.06042480 320.71185303]
[-58.22439957 332.58709717]
[-67.38837433 344.46234131]
[-66.77223206 360.49356079]
[-79.01538849 370.86102295]
[-94.72594452 367.61172485]
[-101.85210419 353.23825073]
[-94.92729187 338.76666260]
[-79.26362610 335.29837036]
[-70.09964752 323.42312622]
[-60.93567276 311.54785156]
[-59.74704361 292.23730469]
[-40.95625305 284.90466309]
[-32.10760117 272.79263306]
[-23.33874512 260.62271118]
[-14.65006256 248.39540100]
[-5.96138096 236.16810608]
[2.72730088 223.94081116]
[11.41598225 211.71351624]
[12.48111248 196.85704041]
[26.78188515 190.08958435]
[35.47056580 177.86228943]
[32.74048996 163.26493835]
[41.37786484 150.74095154]
[56.70740891 147.97636414]
[65.39608765 135.74906921]
[74.08477020 123.52177429]
[65.07807922 102.30921936]
[71.21318817 80.09541321]
[89.82997894 66.51203918]
[88.64817810 51.55866241]
[87.46637726 36.60529327]
[86.28457642 21.65191841]
[85.10277557 6.69854641]
[76.30226135 -6.44913149]
[83.01277161 -19.74643707]
[81.83097076 -34.69981003]
[80.64916992 -49.65318298]
[78.78090668 -64.53637695]
[76.23014069 -79.31790924]
[73.67937469 -94.09943390]
[71.03150940 -108.86388397]
[68.28666687 -123.61060333]
[65.44496918 -138.33897400]
[62.50652695 -153.04833984]
[59.56808472 -167.75770569]
[56.62964630 -182.46708679]
[53.69120407 -197.17645264]
[50.75276566 -211.88581848]
[47.81432343 -226.59518433]
[44.87588501 -241.30456543]
[41.93744659 -256.01391602]
[26.85278893 -259.84356689]
[15.28320503 -271.11776733]
[10.74132347 -287.23565674]
[15.01079178 -304.03866577]
[27.51922417 -316.88256836]
[22.49199104 -331.01504517]
[17.46475792 -345.14752197]
[12.43752575 -359.27999878]
[7.41029263 -373.41247559]
[2.19773173 -387.47766113]
[-3.19925666 -401.47308350]
[-8.59624481 -415.46853638]
[-13.99323368 -429.46398926]
[-19.39022255 -443.45944214]
[-24.78721046 -457.45489502]
[-30.18419838 -471.45031738]
[-35.58118820 -485.44577026]
[-40.97817612 -499.44122314]
[-56.07260132 -501.91213989]
[-67.82597351 -511.54309082]
[-73.14525604 -525.67010498]
[-70.69557953 -540.46380615]
[-61.23365021 -551.96765137]
[-66.63063812 -565.96307373]
[-72.02762604 -579.95849609]
[-77.42461395 -593.95397949]
[-82.82160187 -607.94940186]
[-88.21858978 -621.94488525]
[-103.43605042 -623.12463379]
[-116.63031769 -630.79754639]
[-125.18166351 -643.44024658]
[-127.39221954 -658.54241943]
[-122.82307434 -673.10559082]
[-112.38142395 -684.23815918]
[-98.14048767 -689.72985840]
[-82.92779541 -688.49017334]
[-69.76383972 -680.76531982]
[-61.26234436 -668.08911133]
[-59.11128235 -652.97833252]
[-63.73774338 -638.43322754]
[-74.22314453 -627.34185791]
[-68.82615662 -613.34637451]
[-63.42916870 -599.35095215]
[-58.03218079 -585.35552979]
[-52.63519287 -571.36004639]
[-47.23820496 -557.36462402]
[-32.50234222 -555.19207764]
[-20.75429153 -545.87329102]
[-15.21139622 -531.83258057]
[-17.45541573 -516.80389404]
[-26.98272896 -504.83819580]
[-21.58574104 -490.84277344]
[-16.18875122 -476.84732056]
[-10.79176331 -462.85186768]
[-5.39477539 -448.85641479]
[0.00221296 -434.86099243]
[5.39920139 -420.86553955]
[10.79618931 -406.87008667]
[16.19317818 -392.87463379]
[20.10163689 -390.16018677]
[22.35696220 -384.96990967]
[21.54277039 -378.43969727]
[26.57000351 -364.30722046]
[31.59723663 -350.17474365]
[36.62446976 -336.04226685]
[41.65170288 -321.90979004]
[56.48064804 -319.65093994]
[65.48773956 -331.64562988]
[74.49482727 -343.64031982]
[83.50192261 -355.63497925]
[92.50901794 -367.62966919]
[97.18505859 -383.92602539]
[114.13899231 -383.94400024]
[118.84958649 -367.65759277]
[104.50369263 -358.62255859]
[95.49659729 -346.62789917]
[86.48950958 -334.63320923]
[77.48241425 -322.63854980]
[68.47532654 -310.64385986]
[76.66882324 -290.69488525]
[71.59460449 -270.96572876]
[56.64681625 -258.95236206]
[59.58525467 -244.24299622]
[62.52369690 -229.53363037]
[65.46213531 -214.82426453]
[68.40057373 -200.11488342]
[71.33901978 -185.40551758]
[74.27745819 -170.69615173]
[77.21589661 -155.98678589]
[80.15433502 -141.27740479]
[84.53836823 -135.34527588]
[83.03339386 -126.35544586]
[85.77823639 -111.60872650]
[90.08391571 -105.61947632]
[88.46089935 -96.65020752]
[91.01166534 -81.86867523]
[93.56243896 -67.08715057]
[102.02163696 -79.47431946]
[116.43370819 -83.63271332]
[130.19154358 -77.65594482]
[136.98800659 -64.28402710]
[133.70727539 -49.64719391]
[121.85340118 -40.45558548]
[106.86068726 -40.92301941]
[95.60253906 -50.83498383]
[96.78433990 -35.88161087]
[97.96614075 -20.92823792]
[106.68212891 -8.85012436]
[100.05615234 5.51674604]
[101.23795319 20.47011948]
[102.41975403 35.42349243]
[103.60155487 50.37686157]
[104.78335571 65.33023834]
[114.89742279 68.33078003]
[123.65785217 74.20893097]
[130.26861572 82.43058777]
[134.12901306 92.24868011]
[134.88830566 102.77109528]
[132.47747803 113.04170990]
[127.11559296 122.12730408]
[136.43487549 133.88107300]
[145.75415039 145.63484192]
[155.52955627 157.01206970]
[165.74591064 167.99505615]
[175.96226501 178.97805786]
[186.17860413 189.96105957]
[196.53843689 200.80882263]
[207.03996277 211.51947021]
[217.54148865 222.23011780]
[228.04299927 232.94076538]
[238.54452515 243.65141296]
[249.04605103 254.36207581]
[259.54757690 265.07272339]
[270.04910278 275.78335571]
[285.37799072 273.37405396]
[299.18011475 280.46493530]
[306.14831543 294.32940674]
[303.60314941 309.63632202]
[292.52328491 320.49984741]
[277.16915894 322.74273682]
[263.44473267 315.50256348]
[256.62738037 301.56329346]
[259.33843994 286.28488159]
[248.83691406 275.57424927]
[238.33540344 264.86358643]
[227.83387756 254.15293884]
[217.33235168 243.44229126]
[206.83082581 232.73164368]
[196.32931519 222.02099609]
[185.82778931 211.31033325]
[181.16360474 210.36709595]
[177.03602600 206.49557495]
[175.19561768 200.17739868]
[164.97926331 189.19441223]
[154.76290894 178.21141052]
[144.54656982 167.22840881]
[143.04957581 182.15353394]
[131.51490784 191.74266052]
[116.56744385 190.48835754]
[106.79217529 179.11100769]
[107.80346680 164.14514160]
[119.02049255 154.18630981]
[134.00038147 154.95411682]
[124.68110657 143.20034790]
[115.36182404 131.44657898]
[108.33104706 133.99215698]
[100.91997528 134.98609924]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 46]
[2 45]
[3 44]
[6 41]
[7 40]
[9 38]
[10 37]
[11 36]
[12 35]
[13 34]
[15 33]
[16 32]
[20 30]
[21 29]
[22 28]
[49 184]
[50 183]
[51 182]
[52 181]
[53 180]
[55 178]
[56 177]
[57 176]
[58 168]
[59 167]
[60 166]
[61 164]
[62 163]
[63 161]
[64 160]
[65 159]
[66 158]
[67 157]
[68 156]
[69 155]
[70 154]
[71 153]
[76 137]
[77 136]
[78 135]
[79 134]
[80 133]
[81 130]
[82 129]
[83 128]
[84 127]
[85 126]
[86 125]
[87 124]
[88 123]
[89 122]
[94 117]
[95 116]
[96 115]
[97 114]
[98 113]
[99 112]
[138 150]
[139 149]
[140 148]
[141 147]
[142 146]
[191 236]
[192 235]
[193 234]
[194 227]
[195 226]
[196 225]
[197 224]
[198 221]
[199 220]
[200 219]
[201 218]
[202 217]
[203 216]
[204 215]
[205 214]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
