%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:37:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGCUUUCAAGGUGUCUAGAUACAGAGUGAAGAAUGUCACAGUAGGAAGUGCACUGGACUAGGGGAGUCAGGAGACCCGGGUUCUUGUGUUGGCACCAUCACUCAUGAGCUACGAGGUGACUUCAGGCUGCCAUUGGACCUGUCAAGUGCCUGAGUCAUGUGAUAAUGGGCUACAUUGCGCAGGGCCCCUGGGCCAUCUCCACA\
) } def
/len { sequence length } bind def

/coor [
[323.82626343 12.23702240]
[314.41079712 10.10036373]
[306.37384033 4.64644623]
[293.08789062 11.60946369]
[279.80194092 18.57248116]
[266.51599121 25.53549957]
[253.23005676 32.49851608]
[239.94410706 39.46153641]
[239.98249817 51.60664368]
[234.82128906 62.68030548]
[225.38497925 70.55364227]
[213.42622375 73.68431854]
[201.20048523 71.41841125]
[191.04063416 64.12585449]
[177.54754639 70.67845917]
[164.05445862 77.23105621]
[150.56137085 83.78366089]
[137.06828308 90.33625793]
[123.57519531 96.88886261]
[125.36532593 103.15720367]
[125.40344238 110.11328888]
[123.46562958 117.25022888]
[119.47733307 123.99541473]
[113.53106689 129.75473022]
[105.89118195 133.96119690]
[96.98452759 136.12419128]
[87.37719727 135.87539673]
[74.54276276 143.63925171]
[61.70833206 151.40309143]
[48.87390137 159.16694641]
[45.34005356 174.57109070]
[31.90468979 182.89373779]
[16.53877449 179.19721985]
[8.35863304 165.67462158]
[12.21739674 150.34864807]
[25.82573128 142.31193542]
[41.11005020 146.33251953]
[53.94448090 138.56866455]
[66.77891541 130.80480957]
[79.61334229 123.04096985]
[77.13237762 115.96319580]
[69.68947601 94.72989655]
[54.81655884 96.67829132]
[39.94363785 98.62668610]
[29.06827736 110.42101288]
[13.07739162 109.12828064]
[4.23782063 95.74017334]
[9.33052540 80.52689362]
[24.44882011 75.15876770]
[37.99523926 83.75376892]
[52.86816025 81.80536652]
[67.74108124 79.85697174]
[96.68748474 69.27259064]
[117.02259827 83.39577484]
[130.51568604 76.84317017]
[144.00877380 70.29057312]
[157.50186157 63.73796844]
[170.99494934 57.18536758]
[184.48803711 50.63276672]
[187.13049316 32.69864655]
[199.89491272 20.04912949]
[217.54074097 17.61198616]
[232.98109436 26.17558861]
[246.26704407 19.21257019]
[259.55297852 12.24955273]
[272.83892822 5.28653526]
[286.12487793 -1.67648280]
[299.41082764 -8.63950062]
[304.35482788 -29.07326126]
[322.50921631 -39.08015060]
[341.86975098 -32.53794098]
[354.70416260 -40.30179214]
[367.53860474 -48.06564331]
[380.37304688 -55.82949448]
[393.20745850 -63.59334183]
[405.86004639 -71.65014648]
[418.32409668 -79.99563599]
[430.78817749 -88.34113312]
[443.18789673 -96.78189087]
[455.52261353 -105.31740570]
[467.85733032 -113.85292816]
[474.80261230 -128.06819153]
[489.67120361 -128.94795227]
[502.00588989 -137.48347473]
[514.34063721 -146.01899719]
[526.67529297 -154.55450439]
[539.01000977 -163.09002686]
[551.34472656 -171.62554932]
[563.67944336 -180.16105652]
[576.01416016 -188.69657898]
[588.08148193 -197.60607910]
[599.87011719 -206.88121033]
[611.65875244 -216.15632629]
[623.44738770 -225.43145752]
[628.25976562 -233.20114136]
[635.48852539 -234.75672913]
[647.41790771 -243.85009766]
[659.34729004 -252.94348145]
[671.27667236 -262.03686523]
[669.00146484 -278.41186523]
[675.25756836 -293.61331177]
[688.25036621 -303.52947998]
[704.37744141 -305.52999878]
[719.22674561 -299.16296387]
[731.01544189 -308.43811035]
[742.80407715 -317.71322632]
[754.59271240 -326.98834229]
[766.38134766 -336.26345825]
[771.19366455 -344.03317261]
[778.42242432 -345.58874512]
[790.35186768 -354.68212891]
[791.18151855 -365.53341675]
[797.71392822 -373.96160889]
[807.59960938 -377.32971191]
[817.49377441 -374.75338745]
[829.69622803 -383.47692871]
[841.89868164 -392.20043945]
[854.10113525 -400.92398071]
[859.26550293 -408.46429443]
[866.55810547 -409.68600464]
[878.89282227 -418.22152710]
[891.22753906 -426.75704956]
[903.56219482 -435.29257202]
[915.76464844 -444.01611328]
[927.83203125 -452.92559814]
[939.89935303 -461.83511353]
[951.96667480 -470.74462891]
[963.96539307 -479.74633789]
[975.89483643 -488.83969116]
[977.75903320 -504.53366089]
[990.22607422 -514.24694824]
[1005.89947510 -512.21691895]
[1015.48040771 -499.64785767]
[1013.28472900 -483.99685669]
[1000.61511230 -474.54931641]
[984.98815918 -476.91030884]
[973.05877686 -467.81692505]
[969.64331055 -461.25875854]
[960.87622070 -458.67727661]
[948.80883789 -449.76776123]
[936.74151611 -440.85827637]
[924.67419434 -431.94876099]
[923.08972168 -427.43878174]
[918.65258789 -423.87832642]
[912.09771729 -422.95785522]
[899.76300049 -414.42233276]
[887.42834473 -405.88684082]
[875.09362793 -397.35131836]
[862.82470703 -388.72152710]
[850.62219238 -379.99798584]
[838.41973877 -371.27447510]
[826.21728516 -362.55093384]
[819.53228760 -344.41003418]
[799.44525146 -342.75271606]
[787.51580811 -333.65933228]
[775.65649414 -324.47482300]
[763.86779785 -315.19970703]
[752.07916260 -305.92459106]
[740.29052734 -296.64944458]
[728.50189209 -287.37432861]
[731.33557129 -274.01181030]
[728.11901855 -260.66818237]
[719.42468262 -249.96171570]
[706.90563965 -244.01843262]
[692.98132324 -244.05006409]
[680.37005615 -250.10746765]
[668.44067383 -241.01409912]
[656.51129150 -231.92071533]
[644.58190918 -222.82733154]
[632.72253418 -213.64280701]
[620.93389893 -204.36769104]
[609.14526367 -195.09255981]
[597.35656738 -185.81744385]
[596.89282227 -183.04826355]
[595.30151367 -180.29643250]
[592.58404541 -177.99330139]
[588.89794922 -176.56170654]
[584.54962158 -176.36187744]
[572.21496582 -167.82635498]
[559.88024902 -159.29083252]
[547.54553223 -150.75532532]
[535.21081543 -142.21980286]
[522.87609863 -133.68428040]
[510.54141235 -125.14876556]
[498.20672607 -116.61325073]
[492.14370728 -103.00850677]
[476.39282227 -101.51821899]
[464.05813599 -92.98270416]
[451.72341919 -84.44718170]
[448.01019287 -78.05291748]
[439.13366699 -75.87707520]
[426.66961670 -67.53158569]
[414.20553589 -59.18608856]
[413.16665649 -55.81196976]
[410.43911743 -52.77463913]
[406.19964600 -50.86349869]
[400.97131348 -50.75891113]
[388.13687134 -42.99505997]
[375.30245972 -35.23121262]
[362.46801758 -27.46736145]
[349.63357544 -19.70351028]
[350.30187988 -10.36211300]
[347.50222778 -1.36442053]
[341.57949829 6.03913879]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 68]
[4 67]
[5 66]
[6 65]
[7 64]
[8 63]
[14 59]
[15 58]
[16 57]
[17 56]
[18 55]
[19 54]
[27 40]
[28 39]
[29 38]
[30 37]
[42 52]
[43 51]
[44 50]
[71 201]
[72 200]
[73 199]
[74 198]
[75 197]
[76 193]
[77 192]
[78 191]
[79 189]
[80 188]
[81 187]
[83 185]
[84 184]
[85 183]
[86 182]
[87 181]
[88 180]
[89 179]
[90 178]
[91 173]
[92 172]
[93 171]
[94 170]
[96 169]
[97 168]
[98 167]
[99 166]
[104 160]
[105 159]
[106 158]
[107 157]
[108 156]
[110 155]
[111 154]
[115 152]
[116 151]
[117 150]
[118 149]
[120 148]
[121 147]
[122 146]
[123 145]
[124 142]
[125 141]
[126 140]
[127 139]
[128 137]
[129 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
