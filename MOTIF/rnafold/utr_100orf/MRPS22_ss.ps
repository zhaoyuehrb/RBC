%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:57:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUAAUCAUGGCGCCCCUCGGAACAACUGUAUUGCUGUGGAGCCUCUUGAGGAGUUCUCCGGGCGUGGAACGGGUCUGUUUCCGGGCUCGAAUCCAGCCCUGGCACG\
) } def
/len { sequence length } bind def

/coor [
[46.69394684 160.08557129]
[39.94511795 163.19496155]
[32.66548157 164.59072876]
[25.28202057 164.20001221]
[18.22565269 162.05447388]
[11.90607262 158.28793335]
[6.68797445 153.12805176]
[2.87000465 146.88261414]
[-11.86753464 149.67634583]
[-26.60507393 152.47007751]
[-41.34261322 155.26380920]
[-56.08015442 158.05754089]
[-70.81769562 160.85127258]
[-85.55522919 163.64500427]
[-89.42444611 175.71391296]
[-98.05347443 184.89704895]
[-109.72299957 189.45600891]
[-122.14675140 188.56469727]
[-132.91935730 182.45834351]
[-139.98210144 172.37579346]
[-154.85610962 174.31582642]
[-169.73011780 176.25585938]
[-180.61212158 188.04406738]
[-196.60226440 186.74234009]
[-205.43431091 173.34925842]
[-200.33305359 158.13883972]
[-185.21174622 152.77922058]
[-171.67015076 161.38183594]
[-156.79614258 159.44181824]
[-141.92213440 157.50178528]
[-134.32655334 141.69364929]
[-118.67858887 133.43525696]
[-101.03470612 136.13183594]
[-88.34896088 148.90745544]
[-73.61141968 146.11372375]
[-58.87388229 143.31999207]
[-44.13634491 140.52626038]
[-29.39880562 137.73254395]
[-14.66126537 134.93881226]
[0.07627377 132.14508057]
[10.31593895 110.91390228]
[32.87696075 103.30937195]
[54.30151367 114.22470093]
[67.82942200 107.74427795]
[81.35732269 101.26386261]
[66.35890198 101.48134613]
[55.08649445 91.58524323]
[53.36007690 76.68492126]
[62.07099915 64.47345734]
[76.72179413 61.25565720]
[89.74822235 68.69287109]
[94.42460632 82.94730377]
[96.15009308 68.04688263]
[97.87557983 53.14645386]
[90.87108612 38.31847382]
[100.43138885 24.99433517]
[116.72167206 26.88077164]
[122.98388672 42.03717804]
[112.77600861 54.87194443]
[111.05052185 69.77236938]
[109.32502747 84.67279816]
[119.38339233 95.80065918]
[134.38183594 95.58450317]
[149.38027954 95.36834717]
[164.37872314 95.15219116]
[173.06607056 91.85900116]
[179.81103516 95.15219116]
[194.80947876 95.36834717]
[209.80792236 95.58450317]
[224.80636597 95.80065918]
[240.57777405 86.43373108]
[255.32380676 95.82703400]
[270.32226562 95.61087799]
[285.32070923 95.39472198]
[300.31915283 95.17855835]
[315.31759644 94.96240234]
[330.31604004 94.74624634]
[345.31445312 94.53009033]
[360.31289673 94.31393433]
[374.11041260 85.45048523]
[388.55914307 93.20720673]
[388.79544067 109.60464478]
[374.57626343 117.77452850]
[360.52905273 109.31237793]
[345.53063965 109.52853394]
[330.53219604 109.74468994]
[315.53375244 109.96084595]
[300.53530884 110.17700195]
[285.53686523 110.39315796]
[270.53842163 110.60932159]
[255.53997803 110.82547760]
[246.80160522 119.32720184]
[234.20881653 119.54078674]
[224.59019470 110.79910278]
[209.59176636 110.58294678]
[194.59332275 110.36679077]
[179.59487915 110.15063477]
[164.59487915 110.15063477]
[149.59643555 110.36679077]
[134.59799194 110.58294678]
[119.59954834 110.79910278]
[103.91168213 120.39199829]
[87.83773804 114.79176331]
[74.30983734 121.27217865]
[60.78193665 127.75260162]
[61.32666397 135.25578308]
[60.05828094 142.65228271]
[57.05961227 149.51147461]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 40]
[9 39]
[10 38]
[11 37]
[12 36]
[13 35]
[14 34]
[20 30]
[21 29]
[22 28]
[43 105]
[44 104]
[45 103]
[52 61]
[53 60]
[54 59]
[62 101]
[63 100]
[64 99]
[65 98]
[67 97]
[68 96]
[69 95]
[70 94]
[72 91]
[73 90]
[74 89]
[75 88]
[76 87]
[77 86]
[78 85]
[79 84]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
