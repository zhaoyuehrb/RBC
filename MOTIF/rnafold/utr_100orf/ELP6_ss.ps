%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:24:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGCGCAUGCGCGCUUCCUUGCGCGAGCCGGGCUGUCGGGUGUGUUUUGCUCUCCAGCCUCCGUCGUCUCUGCAGCACUCCGGGUUCUCCUCCAGAGCGCUAGUCCCAGGAGCUCGGAAUGUUCGUGGAACUUAAUAACCUGCUUAACACCACCCCCGACAGGGCGGAGCAGGGGAAACUGACUCUACUCUGUGAUGCCAAGACAGAUGGGAGUUUCC\
) } def
/len { sequence length } bind def

/coor [
[156.29182434 218.83566284]
[158.53268433 204.00463867]
[156.08044434 189.20645142]
[148.68135071 190.43257141]
[144.66131592 204.88383484]
[140.64126587 219.33511353]
[136.62123108 233.78637695]
[141.23637390 249.52272034]
[129.72164917 261.19934082]
[113.92241669 256.80432129]
[110.09156799 240.85888672]
[122.16995239 229.76634216]
[126.18999481 215.31506348]
[130.21003723 200.86380005]
[134.23008728 186.41252136]
[133.48069763 171.43125916]
[128.03857422 157.45329285]
[122.59646606 143.47532654]
[117.15435028 129.49737549]
[98.29671478 133.63893127]
[80.47176361 126.90034485]
[69.36651611 111.72432709]
[54.66527557 114.70318604]
[40.05509567 118.10063171]
[25.54789352 121.91390991]
[11.04069042 125.72718811]
[-3.46651268 129.54046631]
[-9.17777157 143.84736633]
[-22.06761169 151.95326233]
[-37.08129883 150.92698669]
[-48.47538757 141.37121582]
[-62.98258972 145.18449402]
[-77.48979187 148.99777222]
[-91.99699402 152.81105042]
[-106.50419617 156.62431335]
[-121.01139832 160.43759155]
[-129.00917053 173.80447388]
[-143.77586365 177.46501160]
[-156.46984863 169.75798035]
[-170.97705078 173.57125854]
[-185.48425293 177.38453674]
[-199.99145508 181.19781494]
[-214.49865723 185.01107788]
[-223.79547119 198.08581543]
[-239.82147217 198.82533264]
[-250.28288269 186.66233826]
[-247.15460205 170.92724609]
[-232.83638000 163.69065857]
[-218.31193542 170.50387573]
[-203.80473328 166.69061279]
[-189.29753113 162.87733459]
[-174.79032898 159.06405640]
[-160.28312683 155.25077820]
[-153.01968384 142.29786682]
[-138.36163330 138.22399902]
[-124.82467651 145.93038940]
[-110.31747437 142.11711121]
[-95.81027222 138.30383301]
[-81.30307007 134.49057007]
[-66.79586792 130.67729187]
[-52.28866196 126.86401367]
[-47.06618881 112.94052124]
[-34.49773407 104.66416931]
[-19.28802299 105.38398743]
[-7.27978754 115.03325653]
[7.22741508 111.21997833]
[21.73461723 107.40670776]
[36.24182129 103.59342957]
[37.76949310 101.25055695]
[40.31417847 99.36956024]
[43.70534134 98.33967590]
[47.63521194 98.48159790]
[51.68641663 100.00194550]
[66.38765717 97.02308655]
[71.92943573 83.08434296]
[63.28683853 70.82442474]
[54.64424515 58.56450653]
[40.36904907 51.74326706]
[39.35984802 36.88288879]
[30.71725273 24.62297249]
[22.07465935 12.36305618]
[7.79946232 5.54181528]
[6.79026222 -9.31856155]
[-1.85233235 -21.57847786]
[-10.49492741 -33.83839417]
[-26.10852432 -36.28607559]
[-35.35058975 -49.10636520]
[-32.73796844 -64.69320679]
[-19.82068443 -73.79921722]
[-4.26233101 -71.02194214]
[4.70659494 -58.00910950]
[1.76498961 -42.48098755]
[10.40758419 -30.22107315]
[19.05017853 -17.96115494]
[32.70719910 -12.01682663]
[34.33457565 3.72046113]
[42.97716904 15.98037815]
[51.61976624 28.24029541]
[65.27678680 34.18462372]
[66.90415955 49.92191315]
[75.54675293 62.18182755]
[84.18935394 74.44174194]
[98.91148376 71.56793213]
[102.30893707 56.95775223]
[105.70639038 42.34757233]
[101.29586029 27.15356636]
[111.71476746 16.50952530]
[115.11222076 1.89934647]
[118.50966644 -12.71083260]
[114.09914398 -27.90483856]
[124.51805115 -38.54887772]
[127.91550446 -53.15905762]
[131.31295776 -67.76923370]
[134.71040344 -82.37941742]
[125.17525482 -94.77356720]
[125.88936615 -110.39483643]
[136.51554871 -121.86734009]
[152.03643799 -123.77410889]
[165.12356567 -115.21482849]
[169.59756470 -100.23092651]
[163.34597778 -85.89734650]
[149.32058716 -78.98196411]
[145.92312622 -64.37178802]
[142.52568054 -49.76160812]
[139.12823486 -35.15142822]
[143.78176880 -21.00243950]
[133.11984253 -9.31338120]
[129.72239685 5.29679823]
[126.32494354 19.90697670]
[130.97848511 34.05596542]
[120.31656647 45.74502182]
[116.91911316 60.35520172]
[113.52165985 74.96537781]
[118.82496643 80.26868439]
[122.70735168 65.77982330]
[137.19630432 61.89774704]
[147.80267334 72.50457764]
[143.91996765 86.99335480]
[129.43156433 90.87528229]
[134.73486328 96.17858124]
[149.34504700 92.78113556]
[163.95523071 89.38368225]
[178.56539917 85.98622894]
[193.17558289 82.58877563]
[207.78576660 79.19132996]
[196.60093689 69.19635010]
[197.29528809 54.21242905]
[209.35653687 45.29467010]
[223.88591003 49.02258301]
[230.16366577 62.64571381]
[223.55882263 76.11236572]
[238.37414551 73.76584625]
[250.79403687 63.96498489]
[264.57501221 69.61604309]
[279.39031982 67.26952362]
[294.20565796 64.92300415]
[303.29122925 51.99135971]
[318.87393188 49.35412598]
[331.70880127 58.57593155]
[334.18115234 74.18564606]
[324.82415771 86.92229462]
[309.18917847 89.22946167]
[296.55215454 79.73833466]
[281.73684692 82.08484650]
[266.92150879 84.43136597]
[255.56132507 94.06439209]
[240.72067261 88.58117676]
[225.90534973 90.92768860]
[211.18321228 93.80150604]
[196.57302856 97.19895935]
[181.96286011 100.59640503]
[167.35267639 103.99385834]
[152.74249268 107.39131165]
[138.13232422 110.78876495]
[131.13230896 124.05525970]
[136.57441711 138.03321838]
[142.01654053 152.01118469]
[147.45864868 165.98913574]
[156.03955078 161.28576660]
[167.56742859 160.86099243]
[179.95860291 166.00909424]
[190.65982056 177.06144714]
[199.12646484 189.44352722]
[207.59310913 201.82559204]
[216.05976868 214.20767212]
[224.52641296 226.58975220]
[232.99305725 238.97183228]
[248.27021790 242.01255798]
[256.68020630 254.69035339]
[253.68721008 269.23605347]
[262.15386963 281.61813354]
[270.62051392 294.00021362]
[279.08715820 306.38229370]
[287.55380249 318.76437378]
[302.97158813 318.22103882]
[316.22393799 326.11911011]
[323.08203125 339.93829346]
[321.35748291 355.26898193]
[311.60061646 367.21917725]
[296.92480469 371.97561646]
[282.01303101 368.02056885]
[271.62359619 356.61602783]
[269.07171631 341.40118408]
[275.17172241 327.23101807]
[266.70507812 314.84893799]
[258.23843384 302.46685791]
[249.77177429 290.08477783]
[241.30513000 277.70269775]
[226.66462708 275.21450806]
[217.90185547 262.77792358]
[220.61097717 247.43847656]
[212.14433289 235.05639648]
[203.67768860 222.67433167]
[195.21102905 210.29225159]
[186.74438477 197.91017151]
[178.27774048 185.52809143]
[170.87864685 186.75421143]
[173.33088684 201.55239868]
[180.23582458 214.86862183]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 15]
[5 14]
[6 13]
[7 12]
[16 178]
[17 177]
[18 176]
[19 175]
[22 74]
[23 73]
[24 68]
[25 67]
[26 66]
[27 65]
[31 61]
[32 60]
[33 59]
[34 58]
[35 57]
[36 56]
[39 53]
[40 52]
[41 51]
[42 50]
[43 49]
[75 102]
[76 101]
[77 100]
[79 98]
[80 97]
[81 96]
[83 94]
[84 93]
[85 92]
[103 133]
[104 132]
[105 131]
[107 129]
[108 128]
[109 127]
[111 125]
[112 124]
[113 123]
[114 122]
[140 174]
[141 173]
[142 172]
[143 171]
[144 170]
[145 169]
[151 168]
[152 167]
[154 165]
[155 164]
[156 163]
[182 216]
[183 215]
[184 214]
[185 213]
[186 212]
[187 211]
[190 208]
[191 207]
[192 206]
[193 205]
[194 204]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
