%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:03:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGAGCUCCGGUUUUCAGCCUCUUUCCGGGCUACCUGGUAGCAAUUUGAGGCUCUGUCAUCAGUUUCUGCUACGUUUCAAAGAUCCUGGAGAAGCCUAGUGUUGUGUCAAGACGCCGAUGGACCCAUCACAGUUUAAUCCAACCUACAUCCCAGGGUCUCCACAAAUGCUCACCGAAGAAAAUUCCCGGGACGAUUCAGGGGCCUCUCAAAUCUCCU\
) } def
/len { sequence length } bind def

/coor [
[85.52444458 192.34558105]
[91.57078552 176.50645447]
[91.57078552 161.50645447]
[91.57078552 146.50645447]
[77.42276764 141.52313232]
[68.02220917 153.21199036]
[58.62165451 164.90086365]
[49.30556870 176.65716553]
[40.07443237 188.48028564]
[30.92872620 200.36959839]
[21.86892509 212.32452393]
[12.80912399 224.27943420]
[12.42208767 228.59242249]
[10.84404564 232.19732666]
[8.44292450 234.80717468]
[5.64200163 236.28359985]
[2.86676002 236.64199829]
[-6.86673927 248.05509949]
[-16.60023880 259.46820068]
[-26.33373833 270.88131714]
[-36.06723785 282.29443359]
[-34.56620789 298.02728271]
[-44.69390106 310.16009521]
[-60.44173813 311.49468994]
[-72.46680450 301.23928833]
[-73.63484192 285.47824097]
[-63.25288010 273.56225586]
[-47.48034286 272.56091309]
[-37.74684525 261.14782715]
[-28.01334572 249.73471069]
[-18.27984619 238.32160950]
[-8.54634571 226.90849304]
[0.85420871 215.21963501]
[9.91401005 203.26472473]
[18.97381020 191.30979919]
[20.50770950 184.08409119]
[28.25131416 179.24914551]
[37.48245239 167.42602539]
[39.12031555 160.22317505]
[46.93278885 155.50030518]
[56.33334351 143.81144714]
[65.73390198 132.12257385]
[56.10235596 114.03691864]
[55.19988632 93.95407867]
[62.86969757 75.79129028]
[77.31495667 62.94895554]
[95.50707245 57.67474365]
[113.81690979 60.67466736]
[121.25442505 47.64840698]
[128.69194031 34.62215042]
[136.12944031 21.59589195]
[143.56695557 8.56963348]
[151.00447083 -4.45662546]
[158.44198608 -17.48288345]
[165.87950134 -30.50914192]
[159.66636658 -44.60535049]
[162.90698242 -59.48324585]
[174.15383911 -69.48185730]
[188.95452881 -70.92336273]
[196.39202881 -83.94961548]
[203.82954407 -96.97587585]
[205.36553955 -105.97481537]
[211.46925354 -110.13514709]
[219.09370422 -123.05287933]
[226.71817017 -135.97059631]
[234.34262085 -148.88833618]
[241.96707153 -161.80606079]
[231.32975769 -176.18026733]
[227.65673828 -193.63208008]
[231.57656860 -210.98094177]
[242.33773804 -225.08206177]
[257.95236206 -233.39640808]
[275.56329346 -234.44790649]
[280.44451904 -248.63146973]
[285.32577515 -262.81503296]
[290.20703125 -276.99859619]
[295.08828735 -291.18215942]
[285.19622803 -304.90539551]
[285.43264771 -321.65435791]
[295.50619507 -334.82876587]
[311.28808594 -339.35513306]
[315.96441650 -353.60757446]
[320.64077759 -367.85998535]
[325.31713867 -382.11242676]
[329.99349976 -396.36486816]
[334.66983032 -410.61727905]
[339.34619141 -424.86972046]
[344.02255249 -439.12213135]
[348.69888306 -453.37457275]
[348.40045166 -462.49877930]
[353.54669189 -467.79782104]
[358.42794800 -481.98138428]
[351.23797607 -491.44146729]
[349.52246094 -503.07812500]
[353.59283447 -513.98602295]
[362.33047485 -521.49792480]
[373.49096680 -523.83679199]
[378.77893066 -537.87377930]
[384.06689453 -551.91076660]
[384.16308594 -561.03936768]
[389.53353882 -566.11102295]
[395.02322388 -580.07037354]
[400.51293945 -594.02972412]
[406.00262451 -607.98907471]
[403.85269165 -623.66351318]
[415.71112061 -632.67608643]
[421.20083618 -646.63543701]
[416.77655029 -658.74743652]
[421.63238525 -670.25921631]
[432.66397095 -675.21411133]
[438.35427856 -689.09289551]
[444.04455566 -702.97167969]
[449.73483276 -716.85046387]
[441.75076294 -730.02471924]
[443.03991699 -745.19677734]
[452.89913940 -756.56604004]
[467.38906860 -759.90966797]
[473.07934570 -773.78845215]
[478.76965332 -787.66723633]
[484.45993042 -801.54602051]
[481.72583008 -817.71563721]
[494.53286743 -827.95831299]
[509.70620728 -821.73724365]
[511.63684082 -805.45214844]
[498.33871460 -795.85571289]
[492.64843750 -781.97692871]
[486.95812988 -768.09814453]
[481.26785278 -754.21936035]
[489.24011230 -741.66625977]
[488.28054810 -726.64813232]
[478.54800415 -714.93786621]
[463.61361694 -711.16015625]
[457.92333984 -697.28137207]
[452.23306274 -683.40264893]
[446.54275513 -669.52386475]
[449.82769775 -652.28277588]
[435.16015625 -641.14575195]
[429.67047119 -627.18640137]
[432.21304321 -612.51043701]
[419.96197510 -602.49938965]
[414.47225952 -588.54003906]
[408.98257446 -574.58068848]
[403.49288940 -560.62133789]
[398.10391235 -546.62280273]
[392.81594849 -532.58581543]
[387.52798462 -518.54882812]
[396.06677246 -502.35180664]
[389.94473267 -484.75695801]
[372.61151123 -477.10012817]
[367.73025513 -462.91659546]
[362.95132446 -448.69821167]
[358.27496338 -434.44580078]
[353.59863281 -420.19335938]
[348.92227173 -405.94091797]
[344.24591064 -391.68850708]
[339.56954956 -377.43606567]
[334.89321899 -363.18365479]
[330.21685791 -348.93121338]
[325.54049683 -334.67877197]
[334.32586670 -324.62976074]
[337.02145386 -311.44647217]
[332.81872559 -298.54965210]
[322.71334839 -289.33990479]
[309.27185059 -286.30090332]
[304.39059448 -272.11734009]
[299.50933838 -257.93377686]
[294.62808228 -243.75021362]
[289.74685669 -229.56666565]
[296.26681519 -225.00605774]
[301.79190063 -219.28045654]
[306.11724854 -212.60209656]
[309.08251953 -205.21858215]
[310.57778931 -197.40362549]
[310.54757690 -189.44699097]
[308.99307251 -181.64361572]
[322.32861328 -174.77603149]
[335.66412354 -167.90846252]
[351.32019043 -171.41093445]
[363.72909546 -161.24243164]
[363.37182617 -145.20336914]
[350.52239990 -135.59751892]
[335.03784180 -139.79368591]
[328.79656982 -154.57293701]
[315.46102905 -161.44050598]
[302.12548828 -168.30807495]
[289.00683594 -156.93292236]
[272.28866577 -151.90510559]
[254.88479614 -154.18161011]
[247.26034546 -141.26387024]
[239.63589478 -128.34614563]
[232.01144409 -115.42842102]
[224.38697815 -102.51069641]
[216.85580444 -89.53836060]
[209.41828918 -76.51210785]
[201.98077393 -63.48584747]
[208.26252747 -50.00706100]
[205.36863708 -35.23920822]
[194.20327759 -24.88604927]
[178.90576172 -23.07163048]
[171.46824646 -10.04537106]
[164.03073120 2.98088694]
[156.59321594 16.00714493]
[149.15570068 29.03340340]
[141.71820068 42.05966187]
[134.28068542 55.08592224]
[126.84317017 68.11218262]
[135.33924866 76.67513275]
[141.13713074 87.46826172]
[143.66297913 99.65016174]
[142.60289001 112.23578644]
[137.93750000 124.17609406]
[129.95225525 134.44544983]
[119.22209167 142.12957764]
[106.57078552 146.50645447]
[106.57078552 161.50645447]
[106.57078552 176.50645447]
[112.61712646 192.34558105]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 216]
[3 215]
[4 214]
[5 42]
[6 41]
[7 40]
[8 38]
[9 37]
[10 35]
[11 34]
[12 33]
[17 32]
[18 31]
[19 30]
[20 29]
[21 28]
[48 206]
[49 205]
[50 204]
[51 203]
[52 202]
[53 201]
[54 200]
[55 199]
[59 195]
[60 194]
[61 193]
[63 192]
[64 191]
[65 190]
[66 189]
[67 188]
[73 168]
[74 167]
[75 166]
[76 165]
[77 164]
[81 159]
[82 158]
[83 157]
[84 156]
[85 155]
[86 154]
[87 153]
[88 152]
[89 151]
[91 150]
[92 149]
[97 146]
[98 145]
[99 144]
[101 143]
[102 142]
[103 141]
[104 140]
[106 138]
[107 137]
[110 135]
[111 134]
[112 133]
[113 132]
[117 128]
[118 127]
[119 126]
[120 125]
[175 185]
[176 184]
[177 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
