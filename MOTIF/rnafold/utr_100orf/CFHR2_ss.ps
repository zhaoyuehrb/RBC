%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:11:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUAGUACACUGAAAUUCAAAGUCAUGCUCAUAACUGUUAAUGAAAGCAGAUUCAAAGCAACACCACCACCACUGAAGUAUUUUUAGUUAUAUAAGAUUGGAACUACCAAGCAUGUGGCUCCUGGUCAGUGUAAUUCUAAUCUCACGGAUAUCCUCUGUUGGGGGAGAAGCAAUGUUCUGUGAUUUUCCAAAAAUAAACCAUGGAAUUCUAU\
) } def
/len { sequence length } bind def

/coor [
[267.13418579 208.27055359]
[267.94622803 202.15763855]
[255.10513306 194.40483093]
[242.26403809 186.65200806]
[229.42294312 178.89918518]
[216.58184814 171.14637756]
[203.57315063 163.67817688]
[190.40316772 156.49822998]
[177.23318481 149.31828308]
[164.06321716 142.13833618]
[150.89323425 134.95838928]
[137.72325134 127.77843475]
[124.55327606 120.59848785]
[111.38330078 113.41854095]
[123.28347778 122.55011749]
[130.25555420 135.83131409]
[131.01336670 150.81216431]
[125.41713715 164.72914124]
[114.49919128 175.01496887]
[100.27357483 179.77226257]
[85.36447144 178.12339783]
[72.52217102 170.37257385]
[64.11569214 157.94956970]
[61.69577026 143.14605713]
[65.70881653 128.69284058]
[75.41453552 117.25609589]
[89.01953888 110.94623566]
[74.59926605 115.07609558]
[60.17899323 119.20594788]
[45.75871658 123.33580780]
[43.13653946 139.39485168]
[33.80655670 152.65493774]
[19.67843628 160.49015808]
[3.60570216 161.37606812]
[-11.19057560 155.18594360]
[-21.76729202 143.20608521]
[-36.12538528 147.54718018]
[-50.48348236 151.88827515]
[-64.84157562 156.22937012]
[-79.19966888 160.57046509]
[-86.44067383 174.61836243]
[-101.51943970 179.35191345]
[-115.48999023 171.96279907]
[-120.06385803 156.83482361]
[-112.52743530 142.94317627]
[-97.35195923 138.52951050]
[-83.54076385 146.21237183]
[-69.18267059 141.87127686]
[-54.82458115 137.53018188]
[-40.46648407 133.18908691]
[-26.10839081 128.84799194]
[-24.64108467 115.05370331]
[-18.00647545 102.82173920]
[-7.17708111 94.01434326]
[6.23316622 89.98664093]
[20.20940590 91.37826538]
[32.63856888 98.01198578]
[41.62886047 108.91553497]
[56.04913330 104.78567505]
[70.46940613 100.65582275]
[84.88967896 96.52596283]
[88.33379364 89.86352539]
[80.23796082 77.23587799]
[95.22201538 76.53864288]
[98.66612244 69.87620544]
[93.69709778 55.72315598]
[88.72806549 41.57011032]
[72.45784760 36.94269943]
[62.25374222 23.66063118]
[61.98067856 7.07985163]
[71.54819489 -6.26085043]
[66.37193298 -20.33942795]
[61.19567871 -34.41800690]
[56.01942062 -48.49658203]
[50.73996353 -62.53678894]
[45.35759354 -76.53786469]
[27.76452255 -83.57102203]
[21.01706886 -100.93328857]
[28.96669006 -117.42508698]
[23.17561722 -131.26211548]
[17.38454437 -145.09915161]
[4.91927099 -154.84222412]
[7.14305162 -169.56988525]
[1.35197830 -183.40692139]
[-4.43909502 -197.24395752]
[-10.23016834 -211.08099365]
[-16.02124214 -224.91801453]
[-21.81231499 -238.75505066]
[-27.60338974 -252.59208679]
[-33.39446259 -266.42910767]
[-48.11104202 -272.19085693]
[-54.36642838 -286.70449829]
[-48.44940567 -301.35934448]
[-33.87044144 -307.46093750]
[-19.27897644 -301.38931274]
[-13.33186817 -286.74664307]
[-19.55743027 -272.22018433]
[-13.76635647 -258.38314819]
[-7.97528315 -244.54612732]
[-2.18420959 -230.70909119]
[3.60686374 -216.87205505]
[9.39793777 -203.03503418]
[15.18901062 -189.19799805]
[20.98008347 -175.36096191]
[33.03113937 -166.60760498]
[31.22157669 -150.89022827]
[37.01264954 -137.05319214]
[42.80372238 -123.21615601]
[54.04467392 -121.28054810]
[63.04924011 -114.08528900]
[67.50898743 -103.32694244]
[66.20954132 -91.63298035]
[59.35866547 -81.92023468]
[64.74103546 -67.91915894]
[70.07403564 -62.80490875]
[70.09799957 -53.67284012]
[75.27425385 -39.59426498]
[80.45051575 -25.51568604]
[85.62677002 -11.43710899]
[98.75322723 -9.00715446]
[109.04783630 -0.33933821]
[113.75318146 12.38444710]
[111.54013062 25.87836456]
[102.88111115 36.60108185]
[107.85014343 50.75412750]
[112.81917572 64.90717316]
[118.56324768 100.24856567]
[131.73323059 107.42851257]
[144.90319824 114.60845947]
[158.07318115 121.78840637]
[171.24316406 128.96835327]
[184.41314697 136.14830017]
[197.58311462 143.32824707]
[210.75309753 150.50819397]
[215.96682739 150.37907410]
[220.27847290 152.09034729]
[223.13836670 154.99075317]
[224.33465576 158.30526733]
[237.17576599 166.05809021]
[250.01686096 173.81091309]
[262.85794067 181.56373596]
[275.69906616 189.31654358]
[302.59985352 183.88180542]
[320.01119995 204.39964294]
[334.93206787 205.93836975]
[349.85293579 207.47709656]
[364.77380371 209.01582336]
[379.69467163 210.55455017]
[394.61553955 212.09326172]
[409.53640747 213.63198853]
[426.29855347 197.03233337]
[449.59451294 198.25021362]
[464.20138550 216.10037231]
[479.19976807 215.88018799]
[494.19815063 215.65998840]
[509.19653320 215.43978882]
[524.19494629 215.21958923]
[539.19329834 214.99938965]
[554.94195557 208.72119141]
[565.33447266 222.11640930]
[555.33972168 235.81094360]
[539.41351318 229.99777222]
[524.41510010 230.21797180]
[509.41674805 230.43817139]
[494.41836548 230.65837097]
[479.41998291 230.87857056]
[464.42160034 231.09875488]
[461.91134644 237.67312622]
[457.84878540 243.44622803]
[452.47460938 248.05728149]
[446.11181641 251.21487427]
[439.14645386 252.71537781]
[432.00402832 252.45608521]
[425.12362671 250.44213867]
[418.93087769 246.78683472]
[413.81164551 241.70539856]
[410.08792114 235.50227356]
[407.99768066 228.55285645]
[393.07681274 227.01412964]
[378.15594482 225.47541809]
[363.23507690 223.93669128]
[348.31420898 222.39796448]
[333.39334106 220.85923767]
[318.47247314 219.32051086]
[316.97366333 222.36311340]
[315.09451294 225.18667603]
[312.86645508 227.74394226]
[320.04638672 240.91390991]
[327.22634888 254.08389282]
[334.40631104 267.25387573]
[341.58624268 280.42385864]
[356.88870239 280.11810303]
[370.57525635 286.96917725]
[379.50082397 299.40270996]
[381.61437988 314.56158447]
[376.43023682 328.96240234]
[365.13970947 339.29595947]
[350.33724976 343.18765259]
[335.42434692 339.74325562]
[323.82788086 329.75421143]
[318.21264648 315.51596069]
[319.86898804 300.30035400]
[328.41625977 287.60379028]
[321.23632812 274.43380737]
[314.05636597 261.26385498]
[306.87643433 248.09385681]
[299.69647217 234.92388916]
[293.78097534 235.60635376]
[287.83749390 234.93572998]
[282.17285156 232.93466187]
[277.08224487 229.69473267]
[272.83377075 225.37245178]
[269.65429688 220.18164062]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 142]
[3 141]
[4 140]
[5 139]
[6 138]
[7 134]
[8 133]
[9 132]
[10 131]
[11 130]
[12 129]
[13 128]
[14 127]
[27 61]
[28 60]
[29 59]
[30 58]
[36 51]
[37 50]
[38 49]
[39 48]
[40 47]
[65 126]
[66 125]
[67 124]
[71 119]
[72 118]
[73 117]
[74 116]
[75 114]
[76 113]
[79 108]
[80 107]
[81 106]
[83 104]
[84 103]
[85 102]
[86 101]
[87 100]
[88 99]
[89 98]
[90 97]
[144 184]
[145 183]
[146 182]
[147 181]
[148 180]
[149 179]
[150 178]
[153 167]
[154 166]
[155 165]
[156 164]
[157 163]
[158 162]
[187 207]
[188 206]
[189 205]
[190 204]
[191 203]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
