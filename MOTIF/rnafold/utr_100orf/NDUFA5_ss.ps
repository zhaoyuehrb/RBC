%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:57:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAACUCUUAUGAAAACAAAGGACCUGCCAAUUCAGCUGCAGGGAGUGUUGCUACUGAUGGAACAAAACCAAACCACUUGGAAUUAACGCACAAUUUAAAGAGAUGGGGUUUGACCUUGUUGUCCAGGCUGGUUUCAAACUCCUGAGUUCGAGCAAUCUACCCACCCUUCAAAGUGUUGGGAUCACAGAUAUUUUACCAUUAC\
) } def
/len { sequence length } bind def

/coor [
[305.52600098 374.50466919]
[307.52658081 366.20025635]
[310.89111328 358.34310913]
[315.52624512 351.15570068]
[305.16500854 340.30926514]
[294.80380249 329.46282959]
[284.44259644 318.61639404]
[274.08135986 307.76992798]
[263.72015381 296.92349243]
[252.52403259 299.14120483]
[241.53448486 295.64089966]
[233.51846313 287.18240356]
[230.55262756 275.78878784]
[233.48619080 264.26303101]
[223.46057129 253.10566711]
[211.32164001 257.74237061]
[198.29747009 257.97735596]
[185.93872070 253.76087952]
[175.72419739 245.57455444]
[168.88391113 234.37632751]
[166.25099182 221.48847961]
[168.16026306 208.44145203]
[174.40585327 196.79214478]
[164.72515869 185.33421326]
[155.04444885 173.87628174]
[145.36375427 162.41836548]
[135.68305969 150.96043396]
[121.55889893 146.23205566]
[118.56277466 130.69714355]
[108.88207245 119.23921967]
[99.20137024 107.78128815]
[96.71044922 111.29021454]
[92.96450043 114.03224182]
[88.18012238 115.67840576]
[82.64949799 115.95649719]
[67.76099396 117.78201294]
[52.87249374 119.60752869]
[37.98398972 121.43304443]
[28.25950050 133.60153198]
[13.13443756 135.24076843]
[1.59357452 125.89496613]
[-13.29492760 127.72048187]
[-28.18342972 129.54600525]
[-43.07192993 131.37152100]
[-52.60543442 143.97659302]
[-68.27103424 146.06573486]
[-80.77461243 136.39949036]
[-82.69800568 120.71268463]
[-72.90011597 108.31200409]
[-57.19384384 106.55456543]
[-44.89744949 116.48301697]
[-30.00894737 114.65750122]
[-15.12044430 112.83198547]
[-0.23194280 111.00646973]
[8.70917034 99.14931488]
[23.78222275 97.08588409]
[36.15847397 106.54454041]
[51.04697418 104.71902466]
[65.93547821 102.89350891]
[80.82398224 101.06799316]
[89.22872162 88.64381409]
[85.38327789 74.14510345]
[81.53782654 59.64639282]
[77.69238281 45.14768600]
[73.62628174 30.70930481]
[69.34046936 16.33461189]
[65.05465698 1.95991874]
[60.76884460 -12.41477489]
[46.28275681 -17.65495110]
[37.75953674 -30.27272034]
[38.29411316 -45.31194305]
[47.47202682 -57.01253510]
[43.18621445 -71.38722992]
[38.90040207 -85.76192474]
[34.61458969 -100.13661957]
[30.32877731 -114.51130676]
[26.04296494 -128.88600159]
[20.58997917 -136.21925354]
[21.80319786 -143.51266479]
[17.73709679 -157.95104980]
[1.69254410 -160.64286804]
[-11.52515411 -170.02775574]
[-19.29984283 -184.18597412]
[-20.11988831 -200.25930786]
[-13.87182617 -215.02809143]
[-1.85294211 -225.55610657]
[-6.13875484 -239.93080139]
[-10.42456722 -254.30549622]
[-14.71038055 -268.68017578]
[-29.39078712 -273.70663452]
[-38.28544235 -286.42138672]
[-37.97416687 -301.93533325]
[-28.57665825 -314.28308105]
[-13.70644474 -318.71661377]
[0.91857105 -313.53121948]
[9.67477226 -300.72073364]
[9.19521999 -285.21105957]
[-0.33568677 -272.96600342]
[3.95012593 -258.59130859]
[8.23593903 -244.21661377]
[12.52175140 -229.84191895]
[26.31344986 -228.32066345]
[38.52182388 -221.63598633]
[47.28731155 -210.76846313]
[51.26044846 -197.33854675]
[49.80954742 -183.36503601]
[43.12087631 -170.96163940]
[32.17547607 -162.01715088]
[36.24157715 -147.57876587]
[40.41765594 -133.17181396]
[44.70346832 -118.79711914]
[48.98928452 -104.42243195]
[53.27509689 -90.04773712]
[57.56090927 -75.67304230]
[61.84672165 -61.29834747]
[75.93360901 -56.53415298]
[84.61668396 -44.24317169]
[84.39481354 -29.01805496]
[75.14353943 -16.70058823]
[79.42935181 -2.32589388]
[83.71516418 12.04879951]
[88.00097656 26.42349243]
[91.70494080 29.44407845]
[93.54839325 34.82508087]
[92.19109344 41.30223846]
[96.03653717 55.80094910]
[99.88198090 70.29965210]
[103.72743225 84.79836273]
[110.65929413 98.10059357]
[120.33999634 109.55851746]
[130.02069092 121.01644135]
[144.83728027 126.56436157]
[147.14097595 141.27973938]
[156.82168579 152.73765564]
[166.50238037 164.19558716]
[176.18307495 175.65351868]
[185.86378479 187.11143494]
[202.40357971 182.50622559]
[219.23849487 185.58213806]
[232.99194336 195.67308044]
[240.92692566 210.71087646]
[241.49060059 227.64907837]
[234.61793518 243.08004761]
[244.64355469 254.23741150]
[263.58337402 254.52301025]
[276.08859253 268.32235718]
[274.56658936 286.56228638]
[284.92782593 297.40872192]
[295.28903198 308.25515747]
[305.65023804 319.10159302]
[316.01144409 329.94802856]
[326.37268066 340.79449463]
[347.08474731 332.30725098]
[369.39422607 333.52789307]
[388.98516846 344.18527222]
[402.08261108 362.18603516]
[406.17990112 384.02572632]
[400.51837158 405.47097778]
[412.68045044 414.25070190]
[424.84255981 423.03042603]
[437.00463867 431.81015015]
[450.42718506 424.62707520]
[465.57568359 423.98672485]
[479.44326782 429.96255493]
[489.30053711 441.32015991]
[493.23284912 455.77166748]
[490.51193237 470.43667603]
[502.67401123 479.21640015]
[514.83612061 487.99612427]
[530.23968506 485.67913818]
[542.44866943 494.75625610]
[544.56262207 509.45547485]
[556.72473145 518.23522949]
[573.10620117 522.60369873]
[573.44329834 539.55426025]
[557.24847412 544.57055664]
[547.94500732 530.39727783]
[535.78289795 521.61755371]
[521.16558838 524.23858643]
[508.70645142 515.50793457]
[506.05639648 500.15820312]
[493.89428711 491.37847900]
[481.73220825 482.59875488]
[468.66946411 489.79806519]
[453.71481323 490.61520386]
[439.83148193 484.83465576]
[429.79382324 473.55346680]
[425.63265991 458.97363281]
[428.22491455 443.97222900]
[416.06283569 435.19250488]
[403.90072632 426.41278076]
[391.73864746 417.63305664]
[385.35073853 423.18630981]
[378.11895752 427.59460449]
[370.24645996 430.73205566]
[361.95480347 432.50848389]
[353.47756958 432.87210083]
[345.05398560 431.81085205]
[336.92190552 429.35302734]
[329.31137085 425.56628418]
[322.43792725 420.55596924]
[316.49655151 414.46206665]
[311.65618896 407.45529175]
[308.05480957 399.73245239]
[305.79565430 391.51071167]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 152]
[5 151]
[6 150]
[7 149]
[8 148]
[9 147]
[14 144]
[15 143]
[23 137]
[24 136]
[25 135]
[26 134]
[27 133]
[29 131]
[30 130]
[31 129]
[35 60]
[36 59]
[37 58]
[38 57]
[41 54]
[42 53]
[43 52]
[44 51]
[61 128]
[62 127]
[63 126]
[64 125]
[65 122]
[66 121]
[67 120]
[68 119]
[72 115]
[73 114]
[74 113]
[75 112]
[76 111]
[77 110]
[79 109]
[80 108]
[86 101]
[87 100]
[88 99]
[89 98]
[158 192]
[159 191]
[160 190]
[161 189]
[167 183]
[168 182]
[169 181]
[172 178]
[173 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
