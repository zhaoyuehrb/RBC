%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:26:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGUUCCUUUCCCACAAUCGGCUGGGCGAGGCGGCGCCAGCGAUCAGAGCAGCGCUGGGUGUUCAGGGGCCAAGAUGGCGGCGCGCCGGGGACGGAGAGACGGAGUCGCGCCGCCCCCGAGUGGGGGCCCCGGUCCGGACCCUGGCGGGGGAGCCCGCGGCAGUGGUUGGGGAA\
) } def
/len { sequence length } bind def

/coor [
[103.37779999 198.74079895]
[89.94637299 205.41886902]
[75.97329712 199.96423340]
[70.61845398 185.95260620]
[77.39185333 172.56939697]
[80.31524658 157.85702515]
[72.82271576 158.19160461]
[63.20370483 169.70137024]
[53.58470154 181.21113586]
[43.96569443 192.72090149]
[41.05307007 208.27169800]
[26.95452118 213.07588196]
[17.33551598 224.58566284]
[7.71650982 236.09542847]
[-1.90249574 247.60519409]
[2.01173615 262.62045288]
[-3.67867398 277.05648804]
[-16.78564835 285.36233521]
[-32.26928711 284.34420776]
[-44.17581558 274.39361572]
[-47.92692947 259.33676147]
[-42.08024979 244.96331787]
[-28.88394547 236.80015564]
[-13.41226292 237.98619080]
[-3.79325724 226.47640991]
[5.82574797 214.96664429]
[15.44475365 203.45687866]
[17.66936493 188.72933960]
[32.45592880 183.10189819]
[42.07493591 171.59213257]
[51.69393921 160.08236694]
[61.31294632 148.57260132]
[55.32625198 134.81907654]
[40.34775543 134.01620483]
[25.36925697 133.21334839]
[10.39075851 132.41047668]
[-4.58773994 131.60762024]
[-19.56623840 130.80474854]
[-29.68491173 138.83724976]
[-42.16325378 137.84091187]
[-50.33698654 128.89624023]
[-65.29876709 127.82614899]
[-76.04869843 139.18276978]
[-91.58935547 140.92117310]
[-104.58291626 132.22050476]
[-108.89421082 117.18898010]
[-102.48758698 102.92401886]
[-88.38805389 96.16109467]
[-73.25297546 100.09346008]
[-64.22868347 112.86436462]
[-49.26689911 113.93445587]
[-33.93735123 105.42042542]
[-18.76337433 115.82625580]
[-3.78487539 116.62911987]
[11.19362259 117.43198395]
[26.17212105 118.23484802]
[41.15061951 119.03771210]
[56.12911606 119.84057617]
[53.91867447 108.40679169]
[54.55769348 97.09573364]
[57.85445786 86.58796692]
[63.46186066 77.47888184]
[70.90696716 70.24508667]
[79.62744141 65.21987152]
[89.01206207 62.57917786]
[98.44253540 62.33838272]
[107.33389282 64.35980988]
[113.32057953 50.60628128]
[119.30727386 36.85275269]
[125.29396820 23.09922409]
[131.28065491 9.34569740]
[137.26734924 -4.40782976]
[133.00665283 -7.90871143]
[129.64320374 -12.66028786]
[127.54041290 -18.41761208]
[126.99114990 -24.83188820]
[128.18869019 -31.47149849]
[131.20397949 -37.85101318]
[135.94097900 -52.08340073]
[140.67796326 -66.31578827]
[145.41496277 -80.54817963]
[150.15194702 -94.78057098]
[154.88894653 -109.01295471]
[159.62594604 -123.24534607]
[164.36293030 -137.47773743]
[169.09992981 -151.71012878]
[173.45419312 -166.06422424]
[177.42262268 -180.52975464]
[181.39105225 -194.99528503]
[169.84770203 -204.98098755]
[163.78802490 -218.98965454]
[164.41516113 -234.23988342]
[171.60458374 -247.70372009]
[183.92884827 -256.70791626]
[198.94094849 -259.46466064]
[213.66021729 -255.42663574]
[225.16413879 -245.39555359]
[231.16860962 -231.36312866]
[230.48143005 -216.11549377]
[223.23904419 -202.68006897]
[210.87942505 -193.72448730]
[195.85658264 -191.02687073]
[191.88815308 -176.56134033]
[187.91973877 -162.09579468]
[189.36244202 -158.84507751]
[189.28269958 -154.72811890]
[187.28811646 -150.47721863]
[183.33232117 -146.97312927]
[178.59532166 -132.74073792]
[173.85833740 -118.50835419]
[169.12133789 -104.27596283]
[164.38433838 -90.04357147]
[159.64735413 -75.81118774]
[154.91035461 -61.57879639]
[150.17335510 -47.34640884]
[145.43637085 -33.11401749]
[156.32312012 -22.79517555]
[170.28157043 -28.28715706]
[184.24000549 -33.77914047]
[194.02493286 -46.93921280]
[210.28086853 -44.77675247]
[216.28512573 -29.51631355]
[205.86102295 -16.85652733]
[189.73199463 -19.82069588]
[175.77354431 -14.32871437]
[161.81510925 -8.83673286]
[151.02087402 1.57886207]
[145.03417969 15.33238983]
[139.04750061 29.08591652]
[133.06080627 42.83944321]
[127.07411194 56.59297180]
[121.08741760 70.34649658]
[139.45942688 91.77494812]
[137.89753723 122.80145264]
[113.39944458 146.24670410]
[124.00605011 156.85330200]
[134.61265564 167.45989990]
[149.84194946 171.74700928]
[153.37039185 186.21763611]
[163.97698975 196.82424927]
[174.58358765 207.43084717]
[185.19018555 218.03744507]
[195.89103699 228.54896545]
[206.68525696 238.96455383]
[217.47949219 249.38015747]
[228.45791626 259.60140991]
[239.61701965 269.62512207]
[250.77612305 279.64880371]
[261.93524170 289.67248535]
[273.09432983 299.69616699]
[289.24230957 302.55541992]
[294.58502197 318.05984497]
[283.62637329 330.25982666]
[267.63964844 326.60507202]
[263.07064819 310.85528564]
[251.91154480 300.83160400]
[240.75244141 290.80789185]
[229.59333801 280.78421021]
[218.43421936 270.76052856]
[213.67163086 270.12121582]
[209.26988220 266.46243286]
[207.06390381 260.17437744]
[196.26966858 249.75878906]
[185.47543335 239.34320068]
[178.45597839 236.95359802]
[174.58358765 228.64404297]
[163.97698975 218.03744507]
[153.37039185 207.43084717]
[142.76377869 196.82424927]
[128.29315186 193.29580688]
[124.00605011 178.06651306]
[113.39944458 167.45989990]
[102.79284668 156.85330200]
[95.30031586 157.18788147]
[99.52340698 171.58113098]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 32]
[8 31]
[9 30]
[10 29]
[12 27]
[13 26]
[14 25]
[15 24]
[33 58]
[34 57]
[35 56]
[36 55]
[37 54]
[38 53]
[41 51]
[42 50]
[67 132]
[68 131]
[69 130]
[70 129]
[71 128]
[72 127]
[78 116]
[79 115]
[80 114]
[81 113]
[82 112]
[83 111]
[84 110]
[85 109]
[86 108]
[87 104]
[88 103]
[89 102]
[117 126]
[118 125]
[119 124]
[135 173]
[136 172]
[137 171]
[139 169]
[140 168]
[141 167]
[142 166]
[143 164]
[144 163]
[145 162]
[146 159]
[147 158]
[148 157]
[149 156]
[150 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
