%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:00:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAGGCCUCACUCCCAGACUCCUUGCGGAGCUCGCCGCCUGAUUCUAGGCUGGUCACUACUCCGAGCCUGUGACGUUUGCGGCAGCCAGGCCGUCGACGAUGCCCAGUGAAACUCUCUGGGAAAUUGCAAAAGCUGAAGUGGAAAAAAGGGGAAUUAAUGGAAGUGAAGGUGAUGGAGCUGAAAUUGCAGAAAAAUUUG\
) } def
/len { sequence length } bind def

/coor [
[182.41967773 427.88473511]
[184.90397644 417.41049194]
[189.30207825 407.57879639]
[195.46133423 398.73614502]
[203.16702271 391.19454956]
[212.14976501 385.22064209]
[206.87287903 371.17947388]
[201.59597778 357.13830566]
[196.31909180 343.09713745]
[190.93263245 329.09765625]
[185.43692017 315.14065552]
[179.94122314 301.18368530]
[174.44552612 287.22671509]
[162.58322144 278.21920776]
[164.72639465 262.54385376]
[159.23069763 248.58685303]
[153.73500061 234.62988281]
[134.37483215 228.09530640]
[125.99925995 209.13623047]
[134.44148254 189.88583374]
[128.08450317 176.29948425]
[121.72753143 162.71313477]
[115.37055206 149.12678528]
[109.01358032 135.54043579]
[102.65660095 121.95409393]
[89.84561157 114.15162659]
[74.85706329 114.73759460]
[59.86851120 115.32356262]
[44.87995911 115.90953827]
[36.41912842 119.37414551]
[29.65295792 116.38568115]
[14.65707970 116.73731995]
[-0.33879796 117.08895874]
[-15.33467579 117.44059753]
[-30.33055305 117.79223633]
[-45.26464462 119.19685364]
[-60.06309891 121.64751434]
[-74.84194946 124.21375275]
[-89.60029602 126.89540100]
[-104.35864258 129.57704163]
[-119.11698914 132.25869751]
[-133.87533569 134.94033813]
[-146.02595520 145.95372009]
[-161.55422974 140.68074036]
[-164.48602295 124.54578400]
[-151.80532837 114.14712524]
[-136.55697632 120.18199921]
[-121.79863739 117.50035095]
[-107.04029083 114.81870270]
[-92.28194427 112.13705444]
[-77.52359772 109.45540619]
[-71.49967194 105.16305542]
[-62.51375961 106.84906006]
[-47.71530533 104.39839935]
[-60.79959488 97.06346130]
[-67.93955994 83.87176514]
[-66.92539978 68.90608978]
[-58.07099533 56.79825592]
[-44.11675644 51.29560089]
[-29.38146782 54.10117722]
[-18.42564774 64.34666443]
[-14.64008331 78.86112213]
[-19.19639397 93.15238190]
[-30.68219185 102.79635620]
[-15.68631458 102.44471741]
[-0.69043654 102.09307861]
[14.30544090 101.74143982]
[29.30131912 101.38980103]
[44.29399109 100.92098236]
[59.28253937 100.33501434]
[74.27109528 99.74904633]
[89.25964355 99.16307831]
[68.01332092 92.88251495]
[48.74803162 80.70113373]
[32.68400955 63.11062622]
[26.75477219 49.33222961]
[20.82553864 35.55383301]
[14.89630413 21.77544022]
[2.33416772 12.15757561]
[4.41047430 -2.59160137]
[-1.51876032 -16.36999702]
[-7.44799471 -30.14839172]
[-13.37722969 -43.92678833]
[-19.30646324 -57.70518112]
[-34.07995987 -63.31939316]
[-40.48025131 -77.76971436]
[-34.71015930 -92.48303223]
[-20.19297600 -98.73018646]
[-5.54148960 -92.80485535]
[0.55183244 -78.22243500]
[-5.52806902 -63.63441849]
[0.40116575 -49.85602188]
[6.33040047 -36.07762527]
[12.25963497 -22.29923058]
[18.18886948 -8.52083588]
[30.32690811 0.11150498]
[28.67469978 15.84620476]
[34.60393524 29.62459946]
[40.53316879 43.40299606]
[46.46240234 57.18138885]
[53.96217346 57.12277985]
[61.36040115 44.07416916]
[68.96171570 57.00555801]
[76.46148682 56.94694519]
[82.17465210 43.07756424]
[87.88781738 29.20818329]
[93.60098267 15.33880138]
[99.31414795 1.46942019]
[97.41622162 -14.23753548]
[109.41786194 -23.05852890]
[115.13102722 -36.92790985]
[115.57319641 -53.87609100]
[131.98144531 -58.14292145]
[140.62377930 -43.55709457]
[129.00041199 -31.21474457]
[123.28723907 -17.34536362]
[125.59381104 -2.63043952]
[113.18353271 7.18258572]
[107.47036743 21.05196762]
[101.75720215 34.92134857]
[96.04403687 48.79072952]
[90.33087158 62.66011047]
[96.16314697 67.37545776]
[105.59384155 55.71089554]
[119.59333038 50.32440567]
[117.25840759 65.14158630]
[107.82771301 76.80615234]
[113.65999603 81.52149963]
[126.02520752 73.03023529]
[132.59887695 58.00629044]
[148.92462158 56.45643616]
[158.20791626 69.97502899]
[150.89891052 84.65530396]
[134.51646423 85.39544678]
[122.15126038 93.88671112]
[137.07368469 92.36312103]
[150.06353760 84.86221313]
[165.04354858 84.08814240]
[178.73735046 90.21022034]
[188.14988708 101.88944244]
[191.22247314 116.57138062]
[187.28309631 131.04484558]
[177.19334412 142.14427185]
[163.16003418 147.44201660]
[148.25247192 145.77938843]
[135.73117065 137.52003479]
[128.33535767 124.47256470]
[116.24295044 115.59712219]
[122.59992981 129.18347168]
[128.95690918 142.76982117]
[135.31387329 156.35617065]
[141.67085266 169.94252014]
[148.02783203 183.52885437]
[157.73381042 184.05558777]
[166.52665710 188.06141663]
[173.21293640 194.95620728]
[176.90216064 203.76101685]
[177.12518311 213.24693298]
[173.89353943 222.10655212]
[167.69197083 229.13418579]
[173.18768311 243.09115601]
[178.68338013 257.04812622]
[190.93878174 267.05392456]
[188.40249634 281.73101807]
[193.89820862 295.68798828]
[199.39390564 309.64495850]
[204.88960266 323.60192871]
[210.95040894 330.44708252]
[210.36026001 337.82025146]
[215.63714600 351.86141968]
[220.91404724 365.90258789]
[226.19093323 379.94375610]
[245.86840820 378.88784790]
[264.72753906 384.52905273]
[280.55926514 396.19177246]
[291.51419067 412.49597168]
[296.31851196 431.52044678]
[294.42214966 451.02920532]
[286.06182861 468.73428345]
[272.23144531 482.56402588]
[279.21823120 495.83746338]
[286.20504761 509.11093140]
[301.37176514 513.55462646]
[308.88064575 527.46118164]
[304.27682495 542.58007812]
[290.29165649 549.94152832]
[275.22232056 545.17810059]
[268.00915527 531.11590576]
[272.93161011 516.09771729]
[265.94479370 502.82427979]
[258.95797729 489.55084229]
[248.62074280 492.31945801]
[237.94267273 493.11029053]
[227.29893494 491.89340210]
[217.06391907 488.70947266]
[207.59802246 483.66833496]
[199.23497009 476.94528198]
[192.27009583 468.77499390]
[186.94984436 459.44323730]
[183.46308899 449.27697754]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 172]
[7 171]
[8 170]
[9 169]
[10 167]
[11 166]
[12 165]
[13 164]
[15 162]
[16 161]
[17 160]
[20 153]
[21 152]
[22 151]
[23 150]
[24 149]
[25 148]
[26 72]
[27 71]
[28 70]
[29 69]
[31 68]
[32 67]
[33 66]
[34 65]
[35 64]
[36 54]
[37 53]
[38 51]
[39 50]
[40 49]
[41 48]
[42 47]
[75 100]
[76 99]
[77 98]
[78 97]
[80 95]
[81 94]
[82 93]
[83 92]
[84 91]
[104 122]
[105 121]
[106 120]
[107 119]
[108 118]
[110 116]
[111 115]
[128 135]
[129 134]
[180 191]
[181 190]
[182 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
