%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:11:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCCUGUCUGGCGGUGCCGACGGUGAGGGGCGGUGGCCCAACGGCGGGAGAUUCAAACCUGGAAGAAGGAGGAACAUGGAGAGGAGAGCAGCGGGCCCAGGCUGGGCAGCCUAUGAACGCCUCACAGCUGAGGAGAUGGAUGAGCAGAGGCGGCAGAAUGUUGCCUAUCAGUACC\
) } def
/len { sequence length } bind def

/coor [
[213.45100403 120.52328491]
[210.89950562 112.37410736]
[195.90190125 112.64184570]
[180.90428162 112.90957642]
[165.90667725 113.17731476]
[153.31953430 121.14054871]
[139.38345337 113.65080261]
[124.38584137 113.91854095]
[109.38823700 114.18627167]
[96.55684662 121.95515442]
[89.36811066 135.12033081]
[82.17937469 148.28552246]
[79.89523315 165.08489990]
[63.12006760 167.54054260]
[56.11655807 152.10075378]
[69.01419067 141.09678650]
[76.20292664 127.93160248]
[83.39166260 114.76641846]
[78.42981720 109.14235687]
[68.50611877 97.89423370]
[63.54427338 92.27017212]
[49.58583069 97.76215363]
[39.57677460 110.01488495]
[24.90037346 107.47470093]
[10.94193172 112.96668243]
[4.57070446 127.18094635]
[-9.66337681 132.55175781]
[-23.17523956 126.39015961]
[-37.13368225 131.88214111]
[-51.09212494 137.37413025]
[-65.05056763 142.86610413]
[-74.83547974 156.02618408]
[-91.09143066 153.86372375]
[-97.09568787 138.60328674]
[-86.67158508 125.94349670]
[-70.54254913 128.90766907]
[-56.58410645 123.41568756]
[-42.62566376 117.92370605]
[-28.66722107 112.43171692]
[-22.97657967 98.71485901]
[-8.89896965 92.94636536]
[5.44994926 99.00823975]
[19.40839195 93.51625824]
[28.41904449 81.65634918]
[44.09384537 83.80371094]
[58.05229187 78.31172943]
[59.18586349 70.89788818]
[44.38328552 73.32352448]
[37.50228882 59.99491119]
[48.05234146 49.33205795]
[61.45301056 56.07020950]
[62.58658600 48.65636826]
[50.90696335 39.24433517]
[39.22734070 29.83230019]
[26.07054329 32.80471039]
[13.78727627 27.72131157]
[6.78701735 16.64995193]
[7.44197321 3.76257253]
[-4.06779385 -5.85643291]
[-15.57756042 -15.47543812]
[-31.29462814 -13.81732273]
[-43.52801132 -23.82331276]
[-45.01986694 -39.55703354]
[-34.88509750 -51.68394470]
[-19.13648415 -53.00936508]
[-7.11740017 -42.74695206]
[-5.95855522 -26.98520470]
[5.55121183 -17.36619949]
[17.06097794 -7.74719429]
[33.71677780 -9.96820164]
[47.09864807 0.74277842]
[48.63937378 18.15267754]
[60.31899643 27.56471252]
[71.99861908 36.97674561]
[103.07372284 46.07554245]
[119.81301880 66.33784485]
[120.37751007 87.11710358]
[109.12049866 99.18866730]
[124.11811066 98.92092896]
[139.11572266 98.65319061]
[152.77558899 90.67080688]
[165.63893127 98.17970276]
[180.63655090 97.91197205]
[195.63415527 97.64423370]
[210.63177490 97.37649536]
[216.90397644 81.10165405]
[230.24752808 69.16188049]
[248.01371765 64.49284363]
[266.40997314 68.52707672]
[270.89218140 54.21240234]
[275.37438965 39.89773178]
[279.85659790 25.58305931]
[270.49423218 13.20866871]
[270.22705078 -2.30610633]
[279.15780640 -14.99551773]
[293.85244751 -19.98022652]
[308.66058350 -15.34351254]
[317.88815308 -2.86828589]
[317.98699951 12.64847469]
[308.91912842 25.24025726]
[294.17126465 30.06526566]
[289.68905640 44.37993622]
[285.20687866 58.69461060]
[280.72467041 73.00928497]
[288.94656372 85.55520630]
[303.86062622 87.15863037]
[318.77468872 88.76205444]
[333.68872070 90.36548615]
[348.60278320 91.96891022]
[363.51684570 93.57234192]
[374.67776489 80.88346100]
[391.03778076 77.37037659]
[406.12182617 84.22134399]
[414.07980347 98.56225586]
[429.02011108 99.89923096]
[439.41903687 92.23300171]
[451.85385132 93.67408752]
[459.70312500 102.90480804]
[474.61718750 104.50823212]
[489.53121948 106.11166382]
[504.44528198 107.71508789]
[519.35931396 109.31851196]
[534.27337646 110.92194366]
[542.36645508 103.59400177]
[552.94189453 101.98123932]
[562.45184326 106.37940216]
[567.84027100 115.10792542]
[582.68756104 117.24265289]
[597.53491211 119.37737274]
[605.61016846 106.46576691]
[618.24255371 97.96032715]
[633.24346924 95.33467865]
[648.01379395 99.04372406]
[659.99456787 108.44485474]
[667.10998535 121.90926361]
[668.12731934 137.10415649]
[662.87030029 151.39694214]
[652.24969482 162.31129456]
[638.10565186 167.95623779]
[622.88867188 167.35374451]
[609.23516846 160.60823059]
[599.51074219 148.88836670]
[595.40014648 134.22470093]
[580.55285645 132.08996582]
[565.70550537 129.95524597]
[548.36022949 138.45835876]
[532.66998291 125.83599854]
[517.75592041 124.23256683]
[502.84185791 122.62914276]
[487.92779541 121.02571869]
[473.01373291 119.42228699]
[458.09970093 117.81886292]
[442.47601318 125.78031921]
[427.68313599 114.83952332]
[412.74282837 113.50255585]
[404.92175293 124.34461975]
[392.66296387 129.94377136]
[379.13140869 128.73661804]
[367.87924194 120.93245697]
[361.91342163 108.48639679]
[346.99935913 106.88296509]
[332.08529663 105.27954102]
[317.17126465 103.67610931]
[302.25720215 102.07268524]
[287.34313965 100.46926117]
[286.82049561 109.84191895]
[284.17825317 118.77593994]
[279.58889771 126.80242157]
[273.32623291 133.50791931]
[265.74911499 138.55570984]
[257.28103638 141.70265198]
[248.38656616 142.81069946]
[239.54573059 141.85273743]
[231.22828674 138.91230774]
[223.86860657 134.17738342]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 85]
[3 84]
[4 83]
[5 82]
[7 80]
[8 79]
[9 78]
[10 18]
[11 17]
[12 16]
[21 46]
[22 45]
[24 43]
[25 42]
[28 39]
[29 38]
[30 37]
[31 36]
[52 74]
[53 73]
[54 72]
[58 69]
[59 68]
[60 67]
[89 104]
[90 103]
[91 102]
[92 101]
[105 165]
[106 164]
[107 163]
[108 162]
[109 161]
[110 160]
[114 155]
[115 154]
[118 152]
[119 151]
[120 150]
[121 149]
[122 148]
[123 147]
[127 145]
[128 144]
[129 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
