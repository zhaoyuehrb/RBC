%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:16:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAGCGAAAAAUGAUUUGGCUCGGACUGUCCCGUGACAGGCGGUGCGAGGAGGCCAGGCCCGCGCCCGCCGAGCCCUAGGGCCGCUGCUGCCGACAGCCAUGGAGGACGAGCAGCCUGACAGCCUGGAGGGCUGGGUGCCGGUCCGGGAGGGCCUCUUCGCCGAGCCCGAGAGGCACCGGCUGCGCUUCCUGGUGGCCU\
) } def
/len { sequence length } bind def

/coor [
[133.30574036 290.05883789]
[126.00668335 289.29965210]
[118.91641235 287.38763428]
[112.21594238 284.36993408]
[106.07659912 280.32189941]
[100.65564728 275.34530640]
[96.09226227 269.56567383]
[92.50393677 263.12924194]
[89.98348999 256.19912720]
[88.59664917 248.95126343]
[88.38032532 241.56999207]
[89.34166718 234.24322510]
[91.45779419 227.15779114]
[94.67636871 220.49464417]
[98.91687775 214.42416382]
[104.07265472 209.10192871]
[110.01354980 204.66459656]
[116.58921814 201.22650146]
[113.08753967 186.64096069]
[109.58586121 172.05540466]
[106.08417511 157.46986389]
[102.58249664 142.88430786]
[99.08081818 128.29875183]
[95.57913971 113.71321106]
[81.90808868 107.54049683]
[68.65160370 114.55944061]
[55.39511871 121.57839203]
[42.13863373 128.59733582]
[28.88214874 135.61628723]
[15.62566471 142.63522339]
[13.57269478 158.01589966]
[2.84692240 169.22917175]
[-12.42737293 171.96331787]
[-26.37691307 165.16699219]
[-33.63781357 151.45353699]
[-31.41811371 136.09603882]
[-20.57133102 124.99978638]
[-5.26827431 122.43150330]
[8.60671806 129.37875366]
[21.86320305 122.35980225]
[35.11968613 115.34085083]
[48.37617111 108.32190704]
[61.63265610 101.30295563]
[74.88913727 94.28401184]
[85.13268280 91.51611328]
[94.17185211 93.83736420]
[95.58347321 78.90393066]
[96.99510193 63.97050476]
[98.40672302 49.03707504]
[99.81835175 34.10364532]
[101.22997284 19.17021561]
[102.64160156 4.23678637]
[104.05322266 -10.69664288]
[105.46485138 -25.63007355]
[106.87647247 -40.56350327]
[97.15026093 -49.88871765]
[94.61060333 -62.92334366]
[99.96524811 -74.86265564]
[111.05340576 -81.43655396]
[112.69942474 -96.34596252]
[114.34543610 -111.25537872]
[115.99144745 -126.16479492]
[109.81523132 -140.73066711]
[118.90242004 -152.53204346]
[120.54843903 -167.44145203]
[122.19445038 -182.35086060]
[123.60607147 -197.28430176]
[124.78295898 -212.23805237]
[125.95984650 -227.19181824]
[127.13673401 -242.14556885]
[120.50603485 -256.51025391]
[129.21804810 -268.59124756]
[130.39494324 -283.54501343]
[131.57182312 -298.49877930]
[132.74871826 -313.45251465]
[133.92559814 -328.40628052]
[135.10249329 -343.36004639]
[126.78985596 -359.78652954]
[137.27595520 -373.85333252]
[138.21781921 -388.82373047]
[139.15966797 -403.79415894]
[140.10153198 -418.76455688]
[128.06526184 -438.59039307]
[141.05723572 -456.90045166]
[140.82162476 -471.89859009]
[140.58601379 -486.89675903]
[140.35040283 -501.89489746]
[140.11479187 -516.89306641]
[139.76139832 -531.88885498]
[139.29023743 -546.88146973]
[138.70133972 -561.86993408]
[137.99475098 -576.85327148]
[126.58784485 -587.46081543]
[126.08470154 -602.66613770]
[136.26768494 -613.47552490]
[135.56108093 -628.45886230]
[126.25109863 -641.95910645]
[133.53109741 -656.65374756]
[149.91203308 -657.42626953]
[158.54261780 -643.48193359]
[150.54443359 -629.16546631]
[151.25103760 -614.18212891]
[162.40608215 -604.37902832]
[163.33610535 -589.19384766]
[152.97808838 -577.55987549]
[153.68469238 -562.57653809]
[157.14311218 -556.03735352]
[154.28283691 -547.35266113]
[154.75399780 -532.36004639]
[158.10928345 -525.76733398]
[155.11294556 -517.12866211]
[155.34855652 -502.13049316]
[155.58416748 -487.13235474]
[155.81977844 -472.13421631]
[156.05538940 -457.13604736]
[162.25030518 -453.61364746]
[166.88023376 -448.10696411]
[169.33265686 -441.27096558]
[169.25779724 -433.94067383]
[166.61769104 -427.02890015]
[161.69676208 -421.41284180]
[155.07192993 -417.82269287]
[154.13008118 -402.85229492]
[153.18821716 -387.88189697]
[152.24635315 -372.91149902]
[160.01045227 -363.62811279]
[159.34265137 -351.14288330]
[150.05624390 -342.18316650]
[148.87936401 -327.22940063]
[147.70246887 -312.27563477]
[146.52558899 -297.32186890]
[145.34869385 -282.36813354]
[144.17181396 -267.41436768]
[150.88668823 -254.11926270]
[142.09049988 -240.96868896]
[140.91360474 -226.01492310]
[139.73672485 -211.06117249]
[138.55982971 -196.10740662]
[140.93125916 -191.95251465]
[140.71160889 -186.26245117]
[137.10386658 -180.70484924]
[135.45785522 -165.79544067]
[133.81182861 -150.88601685]
[140.10578918 -137.38656616]
[130.90086365 -124.51877594]
[129.25485229 -109.60936737]
[127.60883331 -94.69995117]
[125.96282196 -79.79053497]
[137.02861023 -67.13148499]
[135.48896790 -50.04927063]
[121.80990601 -39.15187836]
[120.39827728 -24.21844864]
[118.98665619 -9.28501892]
[117.57502747 5.64841080]
[116.16340637 20.58184052]
[114.75177765 35.51527023]
[113.34015656 50.44869995]
[111.92852783 65.38212585]
[110.51690674 80.31555939]
[109.10527802 95.24898529]
[110.16468811 110.21153259]
[113.66636658 124.79708099]
[117.16804504 139.38262939]
[120.66972351 153.96817017]
[124.17140961 168.55372620]
[127.67308807 183.13926697]
[131.17477417 197.72482300]
[154.58578491 202.24743652]
[172.62121582 217.74832153]
[180.56912231 240.09594727]
[176.39363098 263.38095093]
[161.25604248 281.47863770]
[167.85513306 294.94903564]
[174.45422363 308.41946411]
[181.05331421 321.88986206]
[187.75799561 335.30804443]
[194.56785583 348.67312622]
[201.37770081 362.03823853]
[208.18756104 375.40332031]
[214.99742126 388.76843262]
[230.35769653 390.20562744]
[242.48846436 399.73706055]
[247.51884460 414.32122803]
[243.84367371 429.30444336]
[232.63566589 439.90557861]
[217.47125244 442.74185181]
[203.18936157 436.90823364]
[194.34729004 424.26620483]
[193.76649475 408.84976196]
[201.63232422 395.57827759]
[194.82246399 382.21319580]
[188.01260376 368.84808350]
[181.20274353 355.48300171]
[174.39289856 342.11788940]
[168.54991150 337.58126831]
[167.58290100 328.48895264]
[160.98381042 315.01855469]
[154.38471985 301.54812622]
[147.78562927 288.07769775]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 167]
[19 166]
[20 165]
[21 164]
[22 163]
[23 162]
[24 161]
[25 44]
[26 43]
[27 42]
[28 41]
[29 40]
[30 39]
[46 160]
[47 159]
[48 158]
[49 157]
[50 156]
[51 155]
[52 154]
[53 153]
[54 152]
[55 151]
[59 148]
[60 147]
[61 146]
[62 145]
[64 143]
[65 142]
[66 141]
[67 138]
[68 137]
[69 136]
[70 135]
[72 133]
[73 132]
[74 131]
[75 130]
[76 129]
[77 128]
[79 125]
[80 124]
[81 123]
[82 122]
[84 115]
[85 114]
[86 113]
[87 112]
[88 111]
[89 109]
[90 108]
[91 106]
[92 105]
[95 102]
[96 101]
[172 199]
[173 198]
[174 197]
[175 196]
[176 194]
[177 193]
[178 192]
[179 191]
[180 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
