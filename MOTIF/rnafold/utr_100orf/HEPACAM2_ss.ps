%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:14:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCUCACUGCUAAUUUCCCUAGCAAAUAAACCAGCAGCUGCUGGUCCAAGUUACCACUGAGAACAGGGCACUGCAUGCAUGGGACAGGAUGCUUUCAUGGAGCCCUUCGGUGACACACUUGGGGUCUUUCAGUGCAAAAUAUACCUCCUUCUCUUCGAUAUUGUUGCAAACUGUUUAC\
) } def
/len { sequence length } bind def

/coor [
[151.50785828 129.75210571]
[139.48184204 120.78690338]
[127.45581055 111.82170868]
[120.08280182 113.19602203]
[122.83119202 127.94208527]
[108.08508301 130.69023132]
[105.33678436 115.94465637]
[97.96377563 117.31896973]
[89.97534180 130.01483154]
[81.98690033 142.71069336]
[73.99845886 155.40653992]
[66.01001740 168.10240173]
[70.96779633 182.93325806]
[65.18452454 197.46212769]
[51.39087677 204.82890320]
[36.09980011 201.55522156]
[26.53126907 189.18682861]
[27.20325089 173.56369019]
[37.79845810 162.06257629]
[53.31415939 160.11396790]
[61.30259705 147.41810608]
[69.29103851 134.72224426]
[77.27947998 122.02639008]
[85.26792145 109.33052826]
[80.83825684 103.27841187]
[72.06410980 115.44452667]
[57.78209686 110.85932922]
[57.72951889 95.85942078]
[71.97893524 91.17418671]
[67.54927826 85.12207031]
[53.03238678 88.89829254]
[38.51549911 92.67452240]
[23.99860764 96.45075226]
[9.48171711 100.22698212]
[-5.03517294 104.00320435]
[-16.32945251 115.89317322]
[-32.20814133 111.79447174]
[-36.33660126 95.92349243]
[-24.46783066 84.60694885]
[-8.81140041 89.48632050]
[5.70548964 85.71009064]
[20.22237968 81.93386078]
[34.73926926 78.15763092]
[49.25616074 74.38140106]
[63.77305222 70.60517883]
[71.76148987 57.90931702]
[68.88356781 43.18798828]
[66.00563812 28.46665955]
[63.12771225 13.74532986]
[60.24978638 -0.97599941]
[57.37186050 -15.69732857]
[41.94918442 -22.60876465]
[33.75685883 -37.20084000]
[35.84481049 -53.63722229]
[47.19566345 -65.47778320]
[44.05982208 -80.14633179]
[40.92398071 -94.81488800]
[37.78813934 -109.48344421]
[34.65229797 -124.15200043]
[31.51645851 -138.82055664]
[28.44445801 -141.98211670]
[26.72904778 -145.59706116]
[26.34483528 -149.17742920]
[27.10871696 -152.29472351]
[28.71350098 -154.62678528]
[26.61431885 -169.47917175]
[24.51513672 -184.33155823]
[22.41595268 -199.18394470]
[20.31677055 -214.03633118]
[10.72433949 -226.61790466]
[16.60437393 -240.30273438]
[14.50519180 -255.15512085]
[-1.92398858 -261.32324219]
[-12.92407894 -274.88241577]
[-15.54580498 -292.05462646]
[-9.15843296 -308.11328125]
[4.40149689 -318.68417358]
[1.78237200 -333.45373535]
[-0.83675295 -348.22329712]
[-3.45587778 -362.99288940]
[-17.46754837 -369.66015625]
[-24.85470581 -383.30603027]
[-22.77683830 -398.68334961]
[-12.03292561 -409.87924194]
[3.24577570 -412.58865356]
[17.18429375 -405.76974487]
[24.42298508 -392.04455566]
[22.17842484 -376.69067383]
[11.31369209 -365.61199951]
[13.93281651 -350.84243774]
[16.55194092 -336.07287598]
[19.17106628 -321.30328369]
[31.47198677 -318.28555298]
[41.74980927 -310.80404663]
[48.45065308 -299.94598389]
[50.54486465 -287.31234741]
[47.68509674 -274.78170776]
[40.26333237 -264.23098755]
[29.35758018 -257.25430298]
[31.45676231 -242.40191650]
[40.89904785 -230.88269043]
[35.16915894 -216.13551331]
[37.26834106 -201.28312683]
[39.36752319 -186.43074036]
[41.46670532 -171.57835388]
[43.56588745 -156.72596741]
[46.18501282 -141.95639038]
[49.32085419 -127.28784180]
[52.45669556 -112.61928558]
[55.59253693 -97.95072937]
[58.72837448 -83.28217316]
[61.86421585 -68.61362457]
[74.53112793 -64.34506226]
[83.50119781 -54.28936005]
[86.34657288 -41.00724030]
[82.21772766 -27.95279503]
[72.09319305 -18.57525444]
[74.97111511 -3.85392547]
[77.84904480 10.86740398]
[80.72696686 25.58873367]
[83.60489655 40.31006241]
[86.48281860 55.03139114]
[136.42100525 99.79568481]
[148.44703674 108.76088715]
[160.47305298 117.72608185]
[176.41978455 110.40038300]
[193.79357910 112.13371277]
[207.83500671 122.36094666]
[214.74320984 138.20252991]
[212.70452881 155.27470398]
[225.03776550 163.81233215]
[237.37101746 172.34996033]
[249.70425415 180.88758850]
[262.18542480 189.20745850]
[274.81069946 197.30700684]
[287.43597412 205.40653992]
[300.06124878 213.50608826]
[312.75711060 221.49452209]
[325.52255249 229.37124634]
[338.28802490 237.24797058]
[351.05349731 245.12469482]
[363.81896973 253.00141907]
[375.89916992 243.81266785]
[390.48406982 239.61203003]
[405.60116577 240.96763611]
[419.20602417 247.69612122]
[429.45867920 258.88754272]
[434.97253418 273.02832031]
[435.00189209 288.20605469]
[429.54281616 302.36807251]
[419.33355713 313.59906006]
[405.75485229 320.38015747]
[390.64309692 321.79425049]
[376.04205322 317.65011597]
[363.92639160 308.50817871]
[355.93463135 295.60482788]
[353.14761353 280.68515015]
[355.94226074 265.76687622]
[343.17678833 257.89016724]
[330.41131592 250.01344299]
[317.64584351 242.13671875]
[304.88037109 234.25999451]
[297.51541138 233.42098999]
[291.96170044 226.13134766]
[279.33642578 218.03181458]
[266.71115112 209.93226624]
[254.08589172 201.83271790]
[249.28541565 201.96636963]
[244.35568237 199.06594849]
[241.16662598 193.22082520]
[228.83337402 184.68319702]
[216.50013733 176.14556885]
[204.16690063 167.60794067]
[193.36387634 174.21961975]
[180.81492615 176.25198364]
[168.38613892 173.36689758]
[157.93936157 165.96015930]
[151.05334473 155.10760498]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 125]
[2 124]
[3 123]
[8 24]
[9 23]
[10 22]
[11 21]
[12 20]
[30 45]
[31 44]
[32 43]
[33 42]
[34 41]
[35 40]
[46 122]
[47 121]
[48 120]
[49 119]
[50 118]
[51 117]
[55 112]
[56 111]
[57 110]
[58 109]
[59 108]
[60 107]
[65 106]
[66 105]
[67 104]
[68 103]
[69 102]
[71 100]
[72 99]
[77 92]
[78 91]
[79 90]
[80 89]
[130 173]
[131 172]
[132 171]
[133 170]
[134 167]
[135 166]
[136 165]
[137 164]
[138 162]
[139 161]
[140 160]
[141 159]
[142 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
