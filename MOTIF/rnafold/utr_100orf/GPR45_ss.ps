%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:29:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGAGGUCCACAGACAUCCAGGAAGAUGCAGCCAGCAGACAAAGAAUGGCAGCCACCCAAGUGCUGAGGGGAGCCCUCCCGGCCAUUUCUGUCCCAGCUCCAAGGGUCUCUCCACGAUGGCCUGCAACAGCACGUCCCUUGAGGCUUACACAUACCUGCUGCUGAACACCAGCAACGCCUCAGACUCGGGGUCCACCCAGUUGCCCGCACCCCUCA\
) } def
/len { sequence length } bind def

/coor [
[90.56160736 185.50408936]
[82.80583954 171.05487061]
[91.67021179 157.25794983]
[91.88736725 142.25952148]
[92.10451508 127.26109314]
[92.32167053 112.26266479]
[89.91189575 127.06783295]
[79.59966278 137.96084595]
[64.94859314 141.17739868]
[51.02169418 135.60591125]
[42.63171387 123.17175293]
[42.67800140 108.17182922]
[51.14456177 95.78968811]
[65.10558319 90.30426025]
[79.73683167 93.61134338]
[65.74743652 88.19867706]
[51.75804901 82.78600311]
[37.76866150 77.37333679]
[23.45438004 83.51654816]
[9.34425449 77.82804871]
[3.57585192 64.14371490]
[-10.41353798 58.73104477]
[-24.40292740 53.31837463]
[-38.43112946 48.00711441]
[-52.49741364 42.79753494]
[-66.56369781 37.58795547]
[-80.62997437 32.37837601]
[-90.99311829 43.46354675]
[-104.77365875 49.71971130]
[-119.85880280 50.22188187]
[-133.94876099 44.92466354]
[-144.90742493 34.66441345]
[-151.08612061 21.02736473]
[-151.57170105 6.10444736]
[-165.63798523 0.89486849]
[-179.70426941 -4.31471014]
[-199.40646362 -0.03643052]
[-211.08676147 -15.44934559]
[-225.29797363 -20.24951172]
[-239.50917053 -25.04967690]
[-253.72038269 -29.84984398]
[-265.60189819 -24.83818817]
[-277.33776855 -29.12552834]
[-282.82604980 -39.90222168]
[-296.96627808 -44.90761566]
[-311.10647583 -49.91301346]
[-325.24670410 -54.91841125]
[-339.38693237 -59.92380905]
[-353.52716064 -64.92920685]
[-367.66738892 -69.93460083]
[-382.29132080 -73.27241516]
[-397.20297241 -74.89792633]
[-412.11465454 -76.52342987]
[-420.98028564 -74.34306335]
[-427.22985840 -78.28192902]
[-442.11642456 -80.12314606]
[-456.99838257 -73.23406982]
[-470.24783325 -82.89760590]
[-468.23489380 -99.17274475]
[-453.03027344 -105.31700897]
[-440.27520752 -95.00971222]
[-425.38864136 -93.16850281]
[-410.48913574 -91.43509674]
[-395.57748413 -89.80958557]
[-380.66580200 -88.18408203]
[-376.07186890 -102.46328735]
[-389.13403320 -109.83756256]
[-402.19619751 -117.21183777]
[-415.25836182 -124.58611298]
[-428.32052612 -131.96038818]
[-445.08590698 -134.48197937]
[-447.30398560 -151.29020691]
[-431.76663208 -158.07456970]
[-420.94625854 -145.02255249]
[-407.88409424 -137.64826965]
[-394.82192993 -130.27400208]
[-381.75976562 -122.89972687]
[-368.69760132 -115.52545166]
[-362.17816162 -107.35940552]
[-359.24194336 -98.57512665]
[-359.62719727 -90.45777893]
[-362.66198730 -84.07482910]
[-348.52175903 -79.06943512]
[-334.38156128 -74.06403351]
[-320.24133301 -69.05863953]
[-306.10110474 -64.05323792]
[-291.96087646 -59.04784393]
[-277.82064819 -54.04244614]
[-260.76104736 -58.16609955]
[-248.92021179 -44.06105042]
[-234.70901489 -39.26088333]
[-220.49780273 -34.46072006]
[-206.28659058 -29.66055298]
[-197.57888794 -34.99690628]
[-187.15222168 -34.65460587]
[-178.45462036 -28.50543785]
[-174.49468994 -18.38099289]
[-160.42840576 -13.17141342]
[-146.36212158 -7.96183491]
[-136.27330017 -18.96842957]
[-122.70236969 -25.29101372]
[-107.70415497 -25.93789482]
[-93.56282043 -20.77939034]
[-82.44394684 -10.57231712]
[-76.06294250 3.15086603]
[-75.42039490 18.31209373]
[-61.35411453 23.52167320]
[-47.28783417 28.73125267]
[-33.22154999 33.94083023]
[-25.86071777 33.31645203]
[-18.99025917 39.32898712]
[-5.00086880 44.74165344]
[8.98852062 50.15432358]
[22.46519279 43.91614532]
[36.72953033 49.20607758]
[43.18133163 63.38394547]
[57.17071915 68.79661560]
[71.16011047 74.20928192]
[85.14949799 79.62195587]
[129.60665894 76.82063293]
[144.59684753 77.36341858]
[156.11689758 66.87885284]
[171.31134033 67.64286041]
[181.23576355 78.69008636]
[196.22595215 79.23287201]
[211.21612549 79.77565002]
[226.20629883 80.31843567]
[241.19647217 80.86122131]
[247.01913452 70.70722961]
[256.36715698 63.77660751]
[267.64236450 61.18635559]
[278.94412231 63.31719589]
[288.38961792 69.75868225]
[294.42752075 79.38690948]
[309.36114502 77.97744751]
[324.29479980 76.56798553]
[328.54202271 73.54895020]
[333.06988525 72.55706787]
[337.06021118 73.36032867]
[339.90524292 75.43601227]
[354.88598633 74.67627716]
[369.86672974 73.91654205]
[384.84747314 73.15679932]
[399.82821655 72.39706421]
[414.80895996 71.63732910]
[401.74780273 64.26129913]
[392.36041260 52.56184387]
[387.98980713 38.21270370]
[389.26123047 23.26668358]
[395.99279785 9.86198044]
[407.22146606 -0.08371407]
[421.34088135 -5.14755726]
[436.33105469 -4.60510969]
[450.04751587 1.46602631]
[460.52795410 12.19730568]
[466.27304077 26.05349922]
[466.46084595 41.05232239]
[461.06454468 55.04802704]
[450.85607910 66.03836823]
[437.29421997 72.45149994]
[452.18078613 74.29271698]
[467.06738281 76.13392639]
[481.95394897 77.97513580]
[496.84051514 79.81634521]
[510.32467651 71.12399292]
[525.48126221 76.38307190]
[530.68341064 91.55927277]
[521.94049072 105.01071167]
[505.95932007 106.41859436]
[494.99929810 94.70291901]
[480.11273193 92.86170959]
[465.22616577 91.02049255]
[450.33959961 89.17928314]
[435.45303345 87.33807373]
[429.97171021 90.96695709]
[422.55612183 91.02747345]
[415.56869507 86.61807251]
[400.58795166 87.37781525]
[385.60720825 88.13755035]
[370.62646484 88.89728546]
[355.64572144 89.65702820]
[340.66497803 90.41676331]
[325.70425415 91.50161743]
[310.77059937 92.91107941]
[295.83697510 94.32054138]
[294.87393188 98.08556366]
[293.39321899 101.67866516]
[291.42404175 105.02907562]
[301.02883911 116.55069733]
[310.63363647 128.07232666]
[326.41683960 130.94813538]
[333.88186646 145.14859009]
[327.30218506 159.78031921]
[311.72518921 163.61911011]
[299.10018921 153.72016907]
[299.11203003 137.67712402]
[289.50723267 126.15549469]
[279.90243530 114.63387299]
[256.05874634 114.60463715]
[240.65368652 95.85139465]
[225.66351318 95.30860901]
[210.67333984 94.76583099]
[195.68316650 94.22304535]
[180.69299316 93.68025970]
[169.99557495 103.98078918]
[154.78565979 103.64386749]
[144.05406189 92.35359192]
[129.06388855 91.81080627]
[123.62793732 96.97805786]
[127.14196014 111.56063843]
[112.75604248 107.31256104]
[107.32009888 112.47982025]
[107.10294342 127.47824097]
[106.88579559 142.47666931]
[106.66864014 157.47509766]
[115.12985992 171.52287292]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 215]
[4 214]
[5 213]
[6 212]
[15 119]
[16 118]
[17 117]
[18 116]
[21 113]
[22 112]
[23 111]
[24 109]
[25 108]
[26 107]
[27 106]
[34 99]
[35 98]
[36 97]
[38 93]
[39 92]
[40 91]
[41 90]
[44 88]
[45 87]
[46 86]
[47 85]
[48 84]
[49 83]
[50 82]
[51 65]
[52 64]
[53 63]
[55 62]
[56 61]
[66 78]
[67 77]
[68 76]
[69 75]
[70 74]
[120 208]
[121 207]
[124 204]
[125 203]
[126 202]
[127 201]
[128 200]
[134 185]
[135 184]
[136 183]
[140 182]
[141 181]
[142 180]
[143 179]
[144 178]
[145 177]
[160 174]
[161 173]
[162 172]
[163 171]
[164 170]
[188 198]
[189 197]
[190 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
