%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:30:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCACGGGGCGGUGACUCCAGAGCUGGGAGCCUGGCAGCGUCCUCACCCCAGGAAGGCAUGCGCCCCUCUGCGGGCGGCCCCAGCCCUGGGCCCCCUGCCCCCGGAAUUGCCCAAGAUGCCGGGUGACUCCUCCCCGGGGACUCUCCCACUCUGGGACGCGUCACUCUCCCCACCCCUGGGUCCGGACCCCGGCGGCUUCUCGCGCGCGAGCCACG\
) } def
/len { sequence length } bind def

/coor [
[255.08110046 439.36459351]
[258.76913452 424.82504272]
[268.58328247 413.48120117]
[282.44110107 407.74005127]
[297.40219116 408.81979370]
[310.29190063 416.49114990]
[302.26550293 403.81927490]
[294.23910522 391.14736938]
[286.21270752 378.47546387]
[270.25067139 371.17834473]
[269.65423584 352.77175903]
[261.44522095 340.21740723]
[253.23622131 327.66302490]
[245.02722168 315.10864258]
[236.81820679 302.55429077]
[228.60920715 289.99990845]
[220.04019165 277.68847656]
[211.11833191 265.63024902]
[202.19647217 253.57203674]
[193.27461243 241.51382446]
[184.35275269 229.45561218]
[175.43089294 217.39739990]
[166.50904846 205.33918762]
[160.00663757 201.83343506]
[157.54681396 193.04121399]
[148.80044556 180.85510254]
[140.05409241 168.66899109]
[131.30773926 156.48289490]
[122.56137848 144.29678345]
[113.81502533 132.11067200]
[96.66544342 138.46922302]
[76.86219025 135.37571716]
[59.66864014 121.97106934]
[50.41621399 100.30027008]
[35.55786133 102.35679626]
[20.69950676 104.41333008]
[12.63223648 108.68801117]
[5.61133814 106.39046478]
[-9.27523041 108.23167419]
[-24.16180038 110.07289124]
[-39.04837036 111.91410065]
[-53.92121887 113.86302185]
[-68.77957153 115.91954803]
[-83.63793182 117.97608185]
[-92.02742767 127.76909637]
[-104.44218445 129.17820740]
[-114.16786957 121.99007416]
[-129.05444336 123.83128357]
[-144.03163147 131.77610779]
[-155.81205750 119.58359528]
[-147.35717773 104.88831329]
[-130.89566040 108.94471741]
[-116.00908661 107.10350037]
[-102.59047699 95.79090118]
[-85.69445801 103.11772919]
[-70.83610535 101.06119537]
[-55.97774887 99.00466919]
[-49.78586578 94.97573090]
[-40.88957977 97.02752686]
[-26.00301170 95.18631744]
[-11.11644268 93.34510803]
[3.77012682 91.50389862]
[18.64297867 89.55497742]
[33.50133133 87.49844360]
[48.35968781 85.44191742]
[51.11658096 78.46699524]
[36.14564896 77.53362274]
[32.40724945 63.00694275]
[45.06781387 54.96268082]
[56.63037109 64.51715088]
[59.38726807 57.54222870]
[49.95027542 45.88276291]
[40.51328278 34.22329712]
[31.07629013 22.56382942]
[21.63929749 10.90436268]
[6.94296837 5.04530954]
[4.95000982 -9.71536064]
[-4.48698282 -21.37482834]
[-13.92397594 -33.03429413]
[-23.36096764 -44.69375992]
[-32.79796219 -56.35322952]
[-48.43525314 -56.44899368]
[-60.31901932 -66.61315155]
[-62.83810806 -82.04649353]
[-54.80308914 -95.46187592]
[-40.00784683 -100.52496338]
[-25.43824196 -94.84511566]
[-17.97360039 -81.10418701]
[-21.13849449 -65.79022217]
[-11.70150185 -54.13075256]
[-2.26450872 -42.47128677]
[7.17248392 -30.81182098]
[16.60947609 -19.15235329]
[30.63080788 -14.12726307]
[33.29876328 1.46737015]
[42.73575592 13.12683678]
[52.17274857 24.78630447]
[61.60974121 36.44577026]
[71.04673767 48.10523605]
[85.82093811 45.51239777]
[90.72385406 31.33630943]
[95.62676239 17.16022110]
[100.52967072 2.98413253]
[104.91639709 -11.36008644]
[108.78120422 -25.85364723]
[112.64600372 -40.34720612]
[108.72560120 -55.67499161]
[119.48089600 -65.97901917]
[123.34569550 -80.47257233]
[127.21050262 -94.96613312]
[131.07530212 -109.45969391]
[134.94010925 -123.95325470]
[138.80491638 -138.44682312]
[128.92097473 -150.40873718]
[127.98934174 -165.89781189]
[136.36824036 -178.95820618]
[150.83583069 -184.56790161]
[165.82901001 -180.56987000]
[175.58259583 -168.50143433]
[176.34614563 -153.00315857]
[167.82604980 -140.03443909]
[153.29847717 -134.58201599]
[149.43367004 -120.08845520]
[145.56886292 -105.59489441]
[141.70405579 -91.10133362]
[137.83926392 -76.60777283]
[133.97445679 -62.11421204]
[138.17129517 -47.82310486]
[127.13956451 -36.48240280]
[123.27476501 -21.98884392]
[119.40995789 -7.49528313]
[133.49215698 -12.66168690]
[146.38815308 -5.00053787]
[148.58625793 9.83753300]
[138.46520996 20.90841293]
[123.48999023 20.04655647]
[114.70575714 7.88704252]
[109.80284882 22.06313133]
[104.89994049 36.23921967]
[99.99703217 50.41530609]
[125.00257874 61.47445679]
[138.60691833 82.78648376]
[138.14270020 106.01119995]
[126.00113678 123.36431885]
[134.74748230 135.55043030]
[143.49385071 147.73652649]
[152.24020386 159.92263794]
[160.98655701 172.10874939]
[169.73291016 184.29486084]
[178.56726074 196.41734314]
[187.48910522 208.47555542]
[196.41096497 220.53376770]
[205.33282471 232.59196472]
[214.25468445 244.65017700]
[223.17654419 256.70840454]
[232.09838867 268.76660156]
[236.12968445 270.35232544]
[239.14562988 272.88229370]
[240.97425842 275.92218018]
[241.60197449 279.02648926]
[241.16357422 281.79092407]
[249.37258911 294.34527588]
[257.58160400 306.89965820]
[265.79058838 319.45401001]
[273.99960327 332.00839233]
[282.20861816 344.56277466]
[294.64758301 347.96255493]
[301.22702026 358.58435059]
[298.88458252 370.44906616]
[306.91098022 383.12097168]
[314.93737793 395.79287720]
[322.96377563 408.46475220]
[340.02224731 396.34042358]
[367.48422241 402.19805908]
[379.47753906 411.20697021]
[391.53573608 420.12881470]
[403.65823364 428.96316528]
[419.36798096 430.83782959]
[425.09677124 444.58666992]
[437.21926880 453.42098999]
[449.34173584 462.25534058]
[461.46423340 471.08966064]
[477.81948853 472.28848267]
[484.71435547 487.16775513]
[475.05599976 500.42095947]
[458.78005981 498.41436768]
[452.62988281 483.21215820]
[440.50741577 474.37780762]
[428.38491821 465.54348755]
[416.26245117 456.70913696]
[401.41976929 455.46633911]
[394.82388306 441.08563232]
[382.70141602 432.25131226]
[375.44772339 430.85290527]
[370.46862793 423.20028687]
[358.47531128 414.19137573]
[352.41406250 418.60855103]
[354.00363159 433.52407837]
[340.29159546 427.44287109]
[334.23034668 431.86004639]
[339.13327026 446.03613281]
[344.03619385 460.21221924]
[348.93908691 474.38830566]
[361.67807007 484.71548462]
[358.83706665 500.86666870]
[343.33868408 506.22692871]
[331.12631226 495.28204346]
[334.76300049 479.29122925]
[329.86010742 465.11514282]
[324.95718384 450.93905640]
[320.05426025 436.76296997]
[318.01531982 451.62374878]
[309.53134155 463.99392700]
[296.40246582 471.24880981]
[281.41448975 471.84893799]
[267.74758911 465.66702271]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 172]
[7 171]
[8 170]
[9 169]
[11 166]
[12 165]
[13 164]
[14 163]
[15 162]
[16 161]
[17 156]
[18 155]
[19 154]
[20 153]
[21 152]
[22 151]
[23 150]
[25 149]
[26 148]
[27 147]
[28 146]
[29 145]
[30 144]
[34 65]
[35 64]
[36 63]
[38 62]
[39 61]
[40 60]
[41 59]
[42 57]
[43 56]
[44 55]
[47 53]
[48 52]
[71 99]
[72 98]
[73 97]
[74 96]
[75 95]
[77 93]
[78 92]
[79 91]
[80 90]
[81 89]
[100 140]
[101 139]
[102 138]
[103 137]
[104 131]
[105 130]
[106 129]
[108 127]
[109 126]
[110 125]
[111 124]
[112 123]
[113 122]
[174 196]
[175 195]
[176 193]
[177 192]
[179 190]
[180 189]
[181 188]
[182 187]
[200 211]
[201 210]
[202 209]
[203 208]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
