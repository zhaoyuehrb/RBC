%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:17:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGGCACGGAGCCUGCUGCCCGGGGCAGCCUCCCCGGCAACUUCCGAAAGAUUUCCAAGCCGCUGAUGGAGAAAAAGCGCCGGGCACGCAUCAAUGUGUCACUGGAGCAGCUCAAGUCGCUGCUGGAGAAACACUACUCGCACCAGAUCCGGAAGCGCAAAUUGG\
) } def
/len { sequence length } bind def

/coor [
[97.94428253 126.78316498]
[87.21546936 125.34748840]
[82.74250031 139.66505432]
[78.26953125 153.98260498]
[73.79656982 168.30017090]
[79.93817902 183.12110901]
[72.05413818 197.09327698]
[56.19239807 199.49841309]
[44.52072906 188.49151611]
[45.99264145 172.51612854]
[59.47900391 163.82720947]
[63.95197296 149.50964355]
[68.42494202 135.19207764]
[72.89791107 120.87451935]
[66.57293701 107.27324677]
[52.74205399 101.46749115]
[38.85685730 95.79286957]
[24.91858673 90.24989319]
[10.98031616 84.70691681]
[-2.95795488 79.16394043]
[-16.89622498 73.62096405]
[-30.83449745 68.07798767]
[-44.77276993 62.53500748]
[-60.45531464 64.62504578]
[-69.42254639 52.73227310]
[-83.36081696 47.18929291]
[-98.34679413 57.33098602]
[-116.26543427 56.48843384]
[-129.99172974 45.18446732]
[-134.18016052 28.06429100]
[-148.31820679 23.05272865]
[-162.45623779 18.04116631]
[-176.59428406 13.02960396]
[-194.59469604 16.81320763]
[-205.48582458 3.07670665]
[-219.71617126 -1.66640842]
[-233.94651794 -6.40952349]
[-248.17686462 -11.15263844]
[-262.18368530 -4.33746433]
[-276.54772949 -9.35037422]
[-282.95861816 -22.74574089]
[-297.18899536 -27.48885536]
[-311.41934204 -32.23197174]
[-323.31240845 -27.16625214]
[-335.08557129 -31.44205284]
[-340.59057617 -42.24438477]
[-354.72863770 -47.25594711]
[-368.86666870 -52.26751328]
[-384.88494873 -48.75365829]
[-395.73574829 -61.04966736]
[-390.25674438 -76.50645447]
[-374.08422852 -79.22340393]
[-363.85510254 -66.40555573]
[-349.71707153 -61.39398956]
[-335.57904053 -56.38242722]
[-318.54315186 -60.51602554]
[-306.67620850 -46.46232224]
[-292.44586182 -41.71920776]
[-278.21551514 -36.97608948]
[-265.04986572 -43.84639740]
[-250.55068970 -39.23892212]
[-243.43374634 -25.38298798]
[-229.20339966 -20.63987350]
[-214.97305298 -15.89675808]
[-200.74270630 -11.15364361]
[-189.75843811 -16.28601837]
[-177.84535217 -12.41713047]
[-171.58271790 -1.10843861]
[-157.44468689 3.90312409]
[-143.30664062 8.91468620]
[-129.16859436 13.92624950]
[-120.25061798 5.61668730]
[-108.57164764 1.88175642]
[-96.34342194 3.49354243]
[-85.90941620 10.20538330]
[-79.29574585 20.78730583]
[-77.81784058 33.25102234]
[-63.87957001 38.79400253]
[-49.19398117 36.30749512]
[-39.22978973 48.59673691]
[-25.29151917 54.13971329]
[-11.35324860 59.68268967]
[2.58502269 65.22566986]
[16.52329445 70.76864624]
[30.46156502 76.31162262]
[44.39983749 81.85459900]
[51.80997467 81.40232086]
[58.54780960 87.63661194]
[72.37868500 93.44236755]
[88.81145477 76.14016724]
[110.81136322 78.21887970]
[121.78713226 95.33699799]
[136.65570068 97.31834412]
[151.52426147 99.29968262]
[166.42765808 100.99929810]
[181.36054993 102.41658020]
[196.29345703 103.83385468]
[211.22634888 105.25112915]
[226.15924072 106.66841125]
[238.27192688 96.87451172]
[253.39581299 98.52455139]
[262.65817261 110.13250732]
[277.59106445 111.54978943]
[292.52395630 112.96706390]
[307.45684814 114.38433838]
[322.32540894 112.40299988]
[336.36608887 107.12477875]
[350.40673828 101.84656525]
[364.44741821 96.56835175]
[378.48809814 91.29013824]
[392.52874756 86.01192474]
[397.55133057 71.20287323]
[410.94467163 63.13116455]
[426.38485718 65.60800934]
[436.58151245 77.46390533]
[436.72006226 93.10087585]
[426.73510742 105.13561249]
[411.34124756 107.88568878]
[397.80697632 100.05258942]
[383.76629639 105.33081055]
[369.72564697 110.60902405]
[355.68496704 115.88723755]
[341.64428711 121.16545105]
[327.60363770 126.44366455]
[328.02941895 141.43829346]
[328.45513916 156.43157959]
[342.77270508 160.90455627]
[357.09027100 165.37751770]
[369.45861816 156.00715637]
[384.97320557 155.72998047]
[397.66839600 164.65254211]
[402.66256714 179.34396362]
[398.03540039 194.15507507]
[385.56613159 203.39070129]
[370.04943848 203.49957275]
[357.45181274 194.43980408]
[352.61730957 179.69508362]
[338.29974365 175.22210693]
[323.98217773 170.74914551]
[334.40255737 181.53874207]
[323.86032104 192.20932007]
[309.65762329 197.03459167]
[294.79699707 194.99446106]
[282.42013550 186.52021790]
[275.14355469 173.40338135]
[274.50558472 158.41694641]
[280.64111328 144.72917175]
[292.25524902 135.23266602]
[306.03955078 129.31723022]
[291.10665894 127.89995575]
[276.17376709 126.48268127]
[261.24087524 125.06540680]
[249.96017456 134.72363281]
[234.79591370 133.49902344]
[224.74195862 121.60130310]
[209.80906677 120.18402863]
[194.87617493 118.76674652]
[179.94328308 117.34947205]
[165.01039124 115.93219757]
[160.79411316 118.25968933]
[155.06480408 117.93243408]
[149.54292297 114.16825104]
[134.67434692 112.18690491]
[119.80578613 110.20555878]
[115.41845703 118.14046478]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 14]
[3 13]
[4 12]
[5 11]
[15 89]
[16 88]
[17 86]
[18 85]
[19 84]
[20 83]
[21 82]
[22 81]
[23 80]
[25 78]
[26 77]
[30 71]
[31 70]
[32 69]
[33 68]
[35 65]
[36 64]
[37 63]
[38 62]
[41 59]
[42 58]
[43 57]
[46 55]
[47 54]
[48 53]
[92 164]
[93 163]
[94 162]
[95 159]
[96 158]
[97 157]
[98 156]
[99 155]
[102 152]
[103 151]
[104 150]
[105 149]
[106 124]
[107 123]
[108 122]
[109 121]
[110 120]
[111 119]
[126 139]
[127 138]
[128 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
