%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:34:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGCAAGGGGUUGGGGGUGGGAAGGGAAACAGAGAAAAGGCAAGUGAAACAGAAGGGGAGGUGCAGUUUCAGAACCCAGCCAGCCUCUCUCUUGCUGCCUAGCCUCCUGCCGGCCUCAUCUUCGCCCAGCCAACCCCGCCUGGAGCCCUAUGGCCAACUGCGAGUUCAGCCCGGUGUCCGGGGACAAACCCUGCUGCCGGCUCUCUAGGAGAGCCCAACUCUGUCUUGGCGUCAGUAUCCUGGUCCUGA\
) } def
/len { sequence length } bind def

/coor [
[76.97632599 96.01654816]
[82.00281525 83.73231506]
[67.40314484 80.28999329]
[52.80347061 76.84767151]
[38.20380020 73.40534973]
[31.81351280 74.93025208]
[26.41355896 73.26628876]
[23.28400421 69.68983459]
[8.77506733 65.88316345]
[-5.73386955 62.07649231]
[-20.24280548 58.26981735]
[-34.75174332 54.46314621]
[-49.26068115 50.65647507]
[-63.76961517 46.84980392]
[-78.27855682 43.04313278]
[-92.83399963 39.41835022]
[-107.43367004 35.97603226]
[-122.03334045 32.53371048]
[-136.63301086 29.09139061]
[-151.23268127 25.64906883]
[-165.83236694 22.20674896]
[-180.45329285 18.85586166]
[-195.09489441 15.59654045]
[-209.77615356 12.52072811]
[-224.49476624 9.62890625]
[-239.21337891 6.73708534]
[-249.34840393 18.19258308]
[-263.76141357 23.00525284]
[-278.54989624 19.97757339]
[-289.76232910 10.02077389]
[-294.45388794 -4.11622906]
[-309.17248535 -7.00804996]
[-323.89108276 -9.89987087]
[-338.62750244 -12.69952488]
[-353.38116455 -15.40690136]
[-364.62680054 -4.87876129]
[-379.73876953 -3.01295733]
[-392.89608765 -10.31701183]
[-399.15463257 -23.80659103]
[-413.90826416 -26.51396751]
[-428.66192627 -29.22134399]
[-443.41555786 -31.92872047]
[-458.16921997 -34.63609695]
[-467.14816284 -33.10875702]
[-473.09008789 -37.47079086]
[-487.80868530 -40.36261368]
[-502.52728271 -43.25443268]
[-517.24591064 -46.14625549]
[-525.88238525 -39.58805084]
[-536.48291016 -38.86580276]
[-545.54705811 -43.97687149]
[-550.21356201 -53.03171158]
[-564.85522461 -56.29103088]
[-579.49682617 -59.55035400]
[-594.64849854 -54.99652863]
[-605.39044189 -65.31445312]
[-620.03204346 -68.57377625]
[-634.67370605 -71.83309937]
[-647.90808105 -63.61793518]
[-662.71032715 -67.13192749]
[-670.46063232 -79.79951477]
[-685.10223389 -83.05883789]
[-699.74389648 -86.31816101]
[-711.37683105 -76.21960449]
[-726.54821777 -74.92241669]
[-739.42205811 -82.71525574]
[-745.16973877 -96.43026733]
[-759.81140137 -99.68959045]
[-774.45300293 -102.94891357]
[-789.92663574 -97.51768494]
[-802.18902588 -108.40644836]
[-798.62573242 -124.41378021]
[-782.90228271 -129.07270813]
[-771.19366455 -117.59052277]
[-756.55206299 -114.33119965]
[-741.91046143 -111.07188416]
[-730.88763428 -121.05366516]
[-715.92376709 -122.64964294]
[-702.73529053 -115.03935242]
[-696.48455811 -100.95977020]
[-681.84295654 -97.70045471]
[-667.20135498 -94.44113159]
[-654.80932617 -102.62490082]
[-639.91424561 -99.52806091]
[-631.41436768 -86.47470856]
[-616.77276611 -83.21538544]
[-602.13110352 -79.95606232]
[-588.02673340 -84.74301910]
[-576.23748779 -74.19196320]
[-561.59588623 -70.93264771]
[-546.95428467 -67.67332458]
[-528.95758057 -74.78531647]
[-514.35406494 -60.86486053]
[-499.63546753 -57.97304153]
[-484.91687012 -55.08121872]
[-470.19824219 -52.18939972]
[-455.46185303 -49.38974380]
[-440.70819092 -46.68236923]
[-425.95455933 -43.97499084]
[-411.20089722 -41.26761627]
[-396.44726562 -38.56023788]
[-385.80694580 -48.94878387]
[-370.91354370 -51.10537720]
[-357.44863892 -43.99555206]
[-350.67376709 -30.16054916]
[-335.92013550 -27.45317268]
[-328.79251099 -29.33222961]
[-320.99926758 -24.61847687]
[-306.28067017 -21.72665596]
[-291.56207275 -18.83483505]
[-281.87060547 -30.14595222]
[-267.72457886 -35.12048340]
[-252.88989258 -32.32798004]
[-241.36909485 -22.41999626]
[-236.32154846 -7.98152065]
[-221.60295105 -5.08969975]
[-206.88433838 -2.19787860]
[-202.50961304 -4.05447054]
[-196.92398071 -3.20071173]
[-191.83558655 0.95492738]
[-177.19396973 4.21424913]
[-170.00083923 2.60408759]
[-162.39004517 7.60707617]
[-147.79035950 11.04939651]
[-133.19068909 14.49171734]
[-118.59101868 17.93403816]
[-103.99134827 21.37635803]
[-89.39167786 24.81867981]
[-84.95034027 23.12762260]
[-79.40068817 24.19046593]
[-74.47188568 28.53419495]
[-59.96294403 32.34086609]
[-45.45401001 36.14753723]
[-30.94507217 39.95420837]
[-16.43613434 43.76088333]
[-1.92719769 47.56755447]
[12.58173943 51.37422562]
[27.09067535 55.18089676]
[41.64612198 58.80567932]
[56.24579239 62.24799728]
[70.84546661 65.69031525]
[85.44513702 69.13263702]
[100.08675385 65.87331390]
[111.84759521 56.56296921]
[123.60843658 47.25262070]
[125.57528687 31.80046082]
[137.63508606 22.52598000]
[152.35423279 24.49630356]
[164.11508179 15.18595409]
[164.74053955 4.35968208]
[171.07847595 -4.16808224]
[180.85275269 -7.73806810]
[190.76806641 -5.40279293]
[202.75827026 -14.41585064]
[214.74845886 -23.42890930]
[221.58312988 -40.54056931]
[239.08653259 -41.94897842]
[250.96298218 -51.11140060]
[262.83941650 -60.27382278]
[274.71588135 -69.43624115]
[283.56344604 -83.89849854]
[299.90975952 -79.40024567]
[300.11242676 -62.44750977]
[283.87829590 -57.55979538]
[272.00186157 -48.39737320]
[260.12539673 -39.23495102]
[248.24894714 -30.07253075]
[246.39784241 -18.13490295]
[236.60098267 -10.40246201]
[223.76152039 -11.43871403]
[211.77131653 -2.42565560]
[199.78112793 6.58740234]
[193.49546814 24.88911438]
[173.42543030 26.94679642]
[161.66458130 36.25714493]
[160.20445251 51.03562927]
[148.40991211 60.64518356]
[132.91877747 59.01346207]
[121.15794373 68.32381439]
[109.39710236 77.63416290]
[119.86966705 90.49826813]
[119.01384735 105.48647308]
[130.77468872 114.79682159]
[142.53553772 124.10717010]
[154.29637146 133.41752625]
[166.05722046 142.72787476]
[181.38203430 134.93006897]
[198.51856995 134.62951660]
[214.00683594 141.83831787]
[224.74085999 155.05729675]
[228.59161377 171.58746338]
[224.82908630 188.08103943]
[236.81929016 197.09408569]
[248.80947876 206.10714722]
[264.48971558 208.21447754]
[270.01409912 222.04670715]
[282.00430298 231.05976868]
[293.99447632 240.07283020]
[305.98468018 249.08589172]
[318.61730957 257.17395020]
[331.82116699 264.29141235]
[345.02499390 271.40890503]
[358.22885132 278.52636719]
[371.43267822 285.64385986]
[384.63653564 292.76132202]
[397.84039307 299.87881470]
[414.65185547 302.07211304]
[417.19815063 318.83377075]
[401.79641724 325.92062378]
[390.72290039 313.08264160]
[377.51907349 305.96517944]
[364.31521606 298.84768677]
[351.11135864 291.73022461]
[337.90753174 284.61273193]
[324.70367432 277.49526978]
[311.49984741 270.37780762]
[318.99679565 283.36993408]
[320.18695068 298.32263184]
[314.83953857 312.33712769]
[303.99130249 322.69644165]
[289.74530029 327.39230347]
[274.86331177 325.51431274]
[262.23046875 317.42660522]
[254.29582214 304.69705200]
[252.59764099 289.79348755]
[257.46511841 275.60519409]
[267.95462036 264.88278198]
[282.03262329 259.70495605]
[296.97161865 261.07608032]
[284.98141479 252.06301880]
[272.99124146 243.04995728]
[261.00103760 234.03691101]
[246.17842102 232.57424927]
[239.79641724 218.09735107]
[227.80622864 209.08428955]
[215.81602478 200.07122803]
[204.82888794 206.94947815]
[192.12869263 209.69912720]
[179.21723938 207.97288513]
[167.62884521 201.95407104]
[158.74797058 192.33735657]
[153.64385986 180.24871826]
[152.94187927 167.11357117]
[156.74687195 154.48870850]
[144.98602295 145.17835999]
[133.22518921 135.86801147]
[121.46434021 126.55766296]
[109.70349884 117.24731445]
[98.94198608 120.65654755]
[87.55372620 117.62627411]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 142]
[3 141]
[4 140]
[5 139]
[8 138]
[9 137]
[10 136]
[11 135]
[12 134]
[13 133]
[14 132]
[15 131]
[16 128]
[17 127]
[18 126]
[19 125]
[20 124]
[21 123]
[22 121]
[23 120]
[24 117]
[25 116]
[26 115]
[31 110]
[32 109]
[33 108]
[34 106]
[35 105]
[39 101]
[40 100]
[41 99]
[42 98]
[43 97]
[45 96]
[46 95]
[47 94]
[48 93]
[52 91]
[53 90]
[54 89]
[56 87]
[57 86]
[58 85]
[61 82]
[62 81]
[63 80]
[67 76]
[68 75]
[69 74]
[143 180]
[144 179]
[145 178]
[148 175]
[149 174]
[153 172]
[154 171]
[155 170]
[157 167]
[158 166]
[159 165]
[160 164]
[182 248]
[183 247]
[184 246]
[185 245]
[186 244]
[192 236]
[193 235]
[194 234]
[196 232]
[197 231]
[198 230]
[199 229]
[200 216]
[201 215]
[202 214]
[203 213]
[204 212]
[205 211]
[206 210]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
