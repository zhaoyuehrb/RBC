%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:35:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCGGCGAGCGGGCGGCUGCGGGCGGCGCGGAGCGGGCGGCGCGGAGCGAGCGAGCGAGAGAGCGGCGCGGGCCGGGCCAUGGGGUGGCGGGCGGCGGGCGCGCUGCUGCUGGCGCUGCUGCUGCACGGGCGGCUGCUGGCGGUGACCCAUGGGCUGAGGGCAUACGAUGGCUUGUCUC\
) } def
/len { sequence length } bind def

/coor [
[94.85837555 248.05540466]
[80.36803436 242.17630005]
[73.09252167 228.33430481]
[76.46711731 213.06518555]
[88.89843750 203.57855225]
[89.41903687 188.58758545]
[89.93963623 173.59661865]
[90.46024323 158.60565186]
[90.98084259 143.61470032]
[91.50144196 128.62373352]
[92.02204132 113.63276672]
[89.81706238 98.79571533]
[84.95953369 84.60401154]
[80.10200500 70.41231537]
[66.18922424 63.40715408]
[61.46516037 48.94555283]
[68.22924805 35.72500992]
[63.37171936 21.53330994]
[58.51419067 7.34160757]
[53.65666199 -6.85009432]
[48.79912949 -21.04179573]
[37.00978470 -31.59271431]
[40.20860672 -46.13976669]
[35.35107803 -60.33147049]
[30.49354935 -74.52317047]
[25.63601875 -88.71487427]
[20.77848816 -102.90657806]
[15.92095947 -117.09828186]
[10.16601086 -124.22733307]
[11.10460281 -131.57864380]
[6.49411631 -145.85250854]
[-6.13685417 -150.57566833]
[-13.62484264 -161.55587769]
[-13.41600895 -174.64985657]
[-5.81117487 -185.07095337]
[-10.17323017 -199.42269897]
[-21.58928680 -210.37643433]
[-17.88750839 -224.80369568]
[-22.24956322 -239.15544128]
[-26.61161804 -253.50718689]
[-30.97367477 -267.85891724]
[-35.33572769 -282.21066284]
[-39.82217026 -296.52401733]
[-44.43265533 -310.79788208]
[-49.04314423 -325.07174683]
[-53.65362930 -339.34561157]
[-65.25807953 -350.09957886]
[-61.80725861 -364.58889771]
[-66.41774750 -378.86279297]
[-78.02219391 -389.61672974]
[-74.57137299 -404.10607910]
[-79.18186188 -418.37994385]
[-83.79235077 -432.65380859]
[-89.27322388 -418.69100952]
[-101.35990143 -409.80773926]
[-116.32224274 -408.74554443]
[-129.54264832 -415.83224487]
[-136.94108582 -428.88073730]
[-136.23428345 -443.86407471]
[-127.64038086 -456.15817261]
[-113.81158447 -461.96887207]
[-99.01567078 -459.50289917]
[-87.81852722 -449.52075195]
[-90.15218353 -464.33810425]
[-92.48583984 -479.15545654]
[-94.81949615 -493.97280884]
[-97.15316010 -508.79016113]
[-99.48681641 -523.60754395]
[-101.82047272 -538.42486572]
[-104.15413666 -553.24224854]
[-106.48779297 -568.05957031]
[-119.86351776 -583.11755371]
[-112.20871735 -600.85693359]
[-115.05522919 -615.58441162]
[-117.90174103 -630.31182861]
[-120.74826050 -645.03924561]
[-134.63853455 -659.62390137]
[-127.60402679 -677.61828613]
[-130.95996094 -692.23809814]
[-134.31590271 -706.85784912]
[-137.67184448 -721.47760010]
[-141.02778625 -736.09735107]
[-150.46453857 -750.18225098]
[-139.54244995 -763.14929199]
[-124.05863190 -756.24371338]
[-126.40802002 -739.45330811]
[-123.05207825 -724.83355713]
[-119.69613647 -710.21380615]
[-116.34019470 -695.59399414]
[-112.98425293 -680.97424316]
[-103.84524536 -676.33038330]
[-98.67516327 -667.22467041]
[-99.39990234 -656.55822754]
[-106.02082062 -647.88574219]
[-103.17430878 -633.15832520]
[-100.32779694 -618.43090820]
[-97.48127747 -603.70349121]
[-88.50894928 -598.74523926]
[-83.65801239 -589.46551514]
[-84.75251007 -578.83068848]
[-91.67044067 -570.39324951]
[-89.33677673 -555.57586670]
[-87.00312042 -540.75854492]
[-84.66946411 -525.94116211]
[-82.33580017 -511.12380981]
[-80.00214386 -496.30645752]
[-77.66848755 -481.48910522]
[-75.33482361 -466.67175293]
[-73.00116730 -451.85440063]
[-69.51847839 -437.26431274]
[-64.90798950 -422.99041748]
[-60.29750443 -408.71655273]
[-49.02282715 -398.98358154]
[-52.14387512 -383.47326660]
[-47.53338623 -369.19940186]
[-36.25870895 -359.46643066]
[-39.37975693 -343.95611572]
[-34.76927185 -329.68225098]
[-30.15878487 -315.40835571]
[-25.54829788 -301.13449097]
[-20.48672867 -295.72125244]
[-20.98398781 -286.57272339]
[-16.62193298 -272.22097778]
[-12.25987816 -257.86923218]
[-7.89782238 -243.51750183]
[-3.53576732 -229.16575623]
[7.56828547 -219.23855591]
[4.17851114 -203.78475952]
[8.54056644 -189.43301392]
[23.69422531 -182.16687012]
[29.02129745 -165.87246704]
[20.76798820 -150.46299744]
[25.37847519 -136.18913269]
[30.11266136 -121.95581055]
[34.97019196 -107.76410675]
[39.82772064 -93.57240295]
[44.68524933 -79.38069916]
[49.54278183 -65.18900299]
[54.40031052 -50.99729919]
[65.84221649 -41.46146393]
[62.99083328 -25.89932632]
[67.84836578 -11.70762348]
[72.70589447 2.48407817]
[77.56342316 16.67577934]
[82.42095184 30.86748123]
[95.86750031 37.17033768]
[100.99588776 51.49354172]
[94.29370880 65.55477905]
[99.15123749 79.74648285]
[104.00876617 93.93818665]
[110.30630493 88.97389984]
[118.22063446 86.09832001]
[127.20728302 85.68428040]
[136.64761353 87.97789001]
[145.87634277 93.08506012]
[156.25035095 103.91927338]
[166.62434387 114.75347900]
[181.94584656 122.01213074]
[179.21228027 138.74424744]
[162.37733459 140.74943542]
[155.79013062 125.12748718]
[145.41613770 114.29327393]
[135.04212952 103.45906830]
[128.03485107 106.13264465]
[133.38200378 120.14720154]
[138.72915649 134.16177368]
[144.07609558 148.17640686]
[130.06135559 153.52313232]
[124.71459198 139.50891113]
[119.36743927 125.49435425]
[114.02028656 111.47978973]
[107.01300812 114.15336609]
[106.49240875 129.14433289]
[105.97180176 144.13529968]
[105.45120239 159.12625122]
[104.93060303 174.11721802]
[104.41000366 189.10818481]
[103.88939667 204.09915161]
[115.63266754 214.42530823]
[117.93988800 229.89175415]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 178]
[6 177]
[7 176]
[8 175]
[9 174]
[10 173]
[11 172]
[12 150]
[13 149]
[14 148]
[17 145]
[18 144]
[19 143]
[20 142]
[21 141]
[23 139]
[24 138]
[25 137]
[26 136]
[27 135]
[28 134]
[30 133]
[31 132]
[35 129]
[36 128]
[38 126]
[39 125]
[40 124]
[41 123]
[42 122]
[43 120]
[44 119]
[45 118]
[46 117]
[48 115]
[49 114]
[51 112]
[52 111]
[53 110]
[63 109]
[64 108]
[65 107]
[66 106]
[67 105]
[68 104]
[69 103]
[70 102]
[71 101]
[73 97]
[74 96]
[75 95]
[76 94]
[78 90]
[79 89]
[80 88]
[81 87]
[82 86]
[155 163]
[156 162]
[157 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
