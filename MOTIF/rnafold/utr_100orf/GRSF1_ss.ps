%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:25:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAACCGGCCCUGGAUUCCACUUCCGUUCCACCAUCGCUGCUGGAGCAGCUGCCUUCAGGCCCUGCGCCGCCUCCGGAGUCCAUGGCCGGCACGCGCUGGGUACUCGGGGCGCUGCUCCGGGGCUGCGGCUGUAACUGCAGCAGCUGCCGGCGCACCGGCGCCGCCUGCCUGCCCUUCUACU\
) } def
/len { sequence length } bind def

/coor [
[68.51278687 255.61265564]
[61.09379196 242.45455933]
[57.68373108 227.73898315]
[58.55903244 212.65885925]
[63.64873886 198.43663025]
[72.54026031 186.22526550]
[84.51278687 177.01466370]
[98.59577179 171.55149841]
[97.31678772 156.60612488]
[96.03780365 141.66075134]
[90.42674255 140.73904419]
[84.99243164 139.06520081]
[79.83519745 136.67012024]
[70.36887360 148.30578613]
[60.90255737 159.94145203]
[51.43623734 171.57711792]
[54.56256485 186.89900208]
[47.06334686 200.62109375]
[32.47948837 206.26423645]
[17.69704247 201.16392517]
[9.69582367 187.72836304]
[12.25376606 172.30140686]
[24.16308594 162.16719055]
[39.80056763 162.11080933]
[49.26688766 150.47512817]
[58.73320770 138.83946228]
[68.19952393 127.20379639]
[64.31190491 121.85581207]
[61.31509399 115.96228790]
[59.28389359 109.67033386]
[58.26900482 103.13700104]
[58.29576111 96.52536011]
[59.36349487 90.00045013]
[61.44554901 83.72513580]
[64.48995972 77.85606384]
[68.42073822 72.53971863]
[73.13976288 67.90881348]
[78.52924347 64.07893372]
[73.26547241 50.03284073]
[68.00170135 35.98674774]
[62.04586411 29.02881241]
[62.77020645 21.65565300]
[57.74701309 7.52173901]
[52.72381973 -6.61217499]
[47.70062637 -20.74608803]
[42.67742920 -34.88000107]
[37.65423584 -49.01391602]
[32.63104248 -63.14783096]
[27.60784721 -77.28174591]
[22.58465385 -91.41565704]
[17.56145859 -105.54956818]
[11.72528458 -112.60817719]
[12.57540607 -119.96789551]
[7.79425287 -134.18550110]
[3.01309991 -148.40312195]
[-1.76805329 -162.62074280]
[-6.54920626 -176.83834839]
[-18.28165245 -187.45251465]
[-15.00465775 -201.98214722]
[-19.78581047 -216.19976807]
[-24.68816376 -230.37605286]
[-29.71135712 -244.50996399]
[-34.73455048 -258.64389038]
[-39.75774765 -272.77780151]
[-51.66969681 -283.19009399]
[-48.64124680 -297.77355957]
[-53.66444016 -311.90747070]
[-58.68763351 -326.04138184]
[-63.71082687 -340.17529297]
[-77.99794769 -351.77502441]
[-74.17729187 -368.89266968]
[-79.44106293 -382.93875122]
[-84.70483398 -396.98483276]
[-99.18791962 -408.33895874]
[-95.66007233 -425.51931763]
[-101.16287994 -439.47348022]
[-106.66569519 -453.42767334]
[-121.55342102 -458.21197510]
[-129.83898926 -471.47409058]
[-127.61019135 -486.95202637]
[-115.91941833 -497.33758545]
[-100.28668213 -497.72702026]
[-88.09329224 -487.93646240]
[-85.09658813 -472.58868408]
[-92.71151733 -458.93048096]
[-87.20870972 -444.97631836]
[-81.70589447 -431.02212524]
[-70.72766876 -425.90673828]
[-66.03646851 -414.30682373]
[-70.65874481 -402.24862671]
[-65.39497375 -388.20251465]
[-60.13120270 -374.15643311]
[-49.24190903 -368.85437012]
[-44.74944305 -357.17602539]
[-49.57691574 -345.19848633]
[-44.55372238 -331.06457520]
[-39.53052521 -316.93066406]
[-34.50733185 -302.79675293]
[-22.95467186 -293.39541626]
[-25.62383270 -277.80099487]
[-20.60063744 -263.66708374]
[-15.57744312 -249.53315735]
[-10.55424976 -235.39924622]
[-5.33925486 -230.13691711]
[-5.56819582 -220.98092651]
[-0.78704292 -206.76330566]
[10.60342312 -197.16609192]
[7.66840839 -181.61950684]
[12.44956207 -167.40188599]
[17.23071480 -153.18428040]
[22.01186752 -138.96665955]
[26.79302025 -124.74904633]
[31.69537354 -110.57276917]
[36.71856689 -96.43885040]
[41.74176025 -82.30493927]
[46.76495743 -68.17102051]
[51.78815079 -54.03710938]
[56.81134415 -39.90319824]
[61.83453751 -25.76928329]
[66.85773468 -11.63536930]
[71.88092804 2.49854493]
[76.90412140 16.63245964]
[82.04779053 30.72297478]
[87.31156158 44.76906967]
[92.57533264 58.81515884]
[125.98454285 63.88796234]
[146.63494873 93.19121552]
[161.63494873 93.19121552]
[176.63494873 93.19121552]
[191.63494873 93.19121552]
[206.63494873 93.19121552]
[221.63494873 93.19121552]
[236.63494873 93.19121552]
[251.63494873 93.19121552]
[261.54730225 81.09663391]
[276.92437744 78.25401306]
[290.50552368 86.00555420]
[295.87817383 100.69121552]
[290.50552368 115.37687683]
[276.92437744 123.12841797]
[261.54730225 120.28579712]
[251.63494873 108.19121552]
[236.63494873 108.19121552]
[221.63494873 108.19121552]
[206.63494873 108.19121552]
[191.63494873 108.19121552]
[176.63494873 108.19121552]
[161.63494873 108.19121552]
[146.63494873 108.19121552]
[141.73258972 122.36749268]
[153.52818298 131.63377380]
[165.32377625 140.90005493]
[177.11936951 150.16633606]
[188.91496277 159.43263245]
[200.71055603 168.69891357]
[217.01187134 170.48747253]
[223.36502075 185.60598755]
[213.23440552 198.50183105]
[197.04154968 195.90885925]
[191.44427490 180.49450684]
[179.64868164 171.22822571]
[167.85308838 161.96192932]
[156.05749512 152.69564819]
[144.26190186 143.42936707]
[132.46630859 134.16308594]
[127.22251129 136.84317017]
[121.82518768 138.76773071]
[116.37854004 139.94116211]
[110.98317719 140.38175964]
[112.26216125 155.32713318]
[113.54114532 170.27250671]
[128.34761047 173.26339722]
[141.71102905 180.30581665]
[152.54809570 190.82885742]
[159.98030090 203.97949219]
[163.40515137 218.69163513]
[162.54499817 233.77264404]
[157.46958923 247.99996948]
[148.59033203 260.22027588]
[136.62705994 269.44287109]
[122.54957581 274.92019653]
[107.49906921 276.20819092]
[92.69561768 273.20242310]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 171]
[9 170]
[10 169]
[13 27]
[14 26]
[15 25]
[16 24]
[38 125]
[39 124]
[40 123]
[42 122]
[43 121]
[44 120]
[45 119]
[46 118]
[47 117]
[48 116]
[49 115]
[50 114]
[51 113]
[53 112]
[54 111]
[55 110]
[56 109]
[57 108]
[59 106]
[60 105]
[61 103]
[62 102]
[63 101]
[64 100]
[66 98]
[67 97]
[68 96]
[69 95]
[71 92]
[72 91]
[73 90]
[75 87]
[76 86]
[77 85]
[127 149]
[128 148]
[129 147]
[130 146]
[131 145]
[132 144]
[133 143]
[134 142]
[150 165]
[151 164]
[152 163]
[153 162]
[154 161]
[155 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
