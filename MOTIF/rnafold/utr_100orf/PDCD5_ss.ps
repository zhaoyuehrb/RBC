%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:59:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGUGGUCAAGGCCGCGCUCGCGCCGAGGGGCUGCGAGAGUGACCGCGGCUGCUCCAGCGCUGACGCCGAGCCAUGGCGGACGAGGAGCUUGAGGCGCUGAGGAGACAGAGGCUGGCCGAGCUGCAGGCCAAACACGGGGAUCCUGGUGAUGCGGCCCAACAGGAAGCAAAGC\
) } def
/len { sequence length } bind def

/coor [
[206.80976868 195.80773926]
[195.42556763 186.04045105]
[184.04136658 176.27316284]
[172.65716553 166.50585938]
[161.27296448 156.73857117]
[149.71527100 147.17721558]
[137.98779297 137.82487488]
[126.26033020 128.47251892]
[114.53285217 119.12017822]
[102.80538177 109.76782990]
[98.44419098 114.09200287]
[91.28449249 115.96898651]
[78.33921814 123.54658508]
[70.33810425 137.19549561]
[55.44556046 136.94754028]
[42.50029373 144.52513123]
[29.55502510 152.10273743]
[21.55390549 165.75164795]
[6.66136456 165.50369263]
[-6.28390455 173.08129883]
[-19.22917366 180.65888977]
[-32.17444229 188.23649597]
[-45.11970901 195.81408691]
[-57.99644470 203.50758362]
[-70.80360413 211.31634521]
[-83.61075592 219.12510681]
[-90.98886108 233.77076721]
[-107.37460327 234.43371582]
[-115.91173553 220.43194580]
[-107.81799316 206.16929626]
[-91.41951752 206.31794739]
[-78.61235809 198.50918579]
[-65.80519867 190.70042419]
[-61.71739197 184.51290894]
[-52.69731140 182.86882019]
[-39.75204086 175.29122925]
[-26.80677223 167.71362305]
[-13.86150360 160.13603210]
[-0.91623503 152.55842590]
[6.15895128 139.45152283]
[21.97742462 139.15747070]
[34.92269516 131.57986450]
[47.86796188 124.00227356]
[54.94314957 110.89536285]
[70.76161957 110.60131073]
[83.70689392 103.02371216]
[89.47822571 89.17843628]
[85.74787903 74.64968872]
[72.42690277 66.57569885]
[68.85076904 51.78834152]
[76.63017273 39.13858414]
[72.89982605 24.60983658]
[69.16947937 10.08108902]
[65.30887604 -4.41358995]
[61.31832123 -18.87303352]
[57.32776642 -33.33247375]
[53.33721542 -47.79191971]
[49.08774185 -62.17739868]
[44.58072281 -76.48427582]
[40.07370377 -90.79115295]
[35.56668472 -105.09803009]
[31.05966377 -119.40490723]
[26.55264473 -133.71179199]
[11.95999336 -134.44146729]
[-1.19637287 -145.82586670]
[-5.38840771 -165.60723877]
[-12.84950733 -178.61999512]
[-20.31060600 -191.63275146]
[-27.77170563 -204.64552307]
[-35.23280334 -217.65827942]
[-50.27809525 -223.22773743]
[-55.16727066 -238.50764465]
[-46.14977264 -251.77656555]
[-30.14305496 -252.85572815]
[-19.42610168 -240.91728210]
[-22.22004318 -225.11938477]
[-14.75894260 -212.10661316]
[-7.29784346 -199.09385681]
[0.16325569 -186.08110046]
[7.62435484 -173.06832886]
[14.88872910 -174.93350220]
[29.41747665 -178.66384888]
[36.68185043 -180.52902222]
[36.95111465 -195.52661133]
[37.22037888 -210.52420044]
[37.48964310 -225.52177429]
[31.72860718 -241.46688843]
[45.45576859 -251.41683960]
[58.81692123 -240.98056030]
[52.48722839 -225.25251770]
[52.21796417 -210.25492859]
[51.94869614 -195.25733948]
[51.67943192 -180.25976562]
[55.82450104 -153.41279602]
[40.85952377 -138.21881104]
[45.36654282 -123.91193390]
[49.87356186 -109.60504913]
[54.38058090 -95.29817200]
[58.88760376 -80.99129486]
[63.39462280 -66.68441772]
[67.17042542 -63.71050644]
[69.09844208 -58.31970215]
[67.79666138 -51.78247070]
[71.78720856 -37.32302856]
[75.77776337 -22.86358452]
[79.76831818 -8.40414238]
[84.59500122 -2.77398944]
[83.69822693 6.35074091]
[87.42857361 20.87948799]
[91.15892029 35.40823746]
[104.07013702 42.74554443]
[108.06021118 57.42662048]
[100.27662659 70.91934204]
[104.00697327 85.44808960]
[112.15773010 98.04035187]
[123.88520050 107.39270020]
[135.61267090 116.74504852]
[147.34014893 126.09739685]
[159.06761169 135.44973755]
[165.59042358 136.82200623]
[169.78965759 140.71359253]
[171.04026794 145.35437012]
[182.42446899 155.12167358]
[193.80867004 164.88896179]
[205.19285583 174.65625000]
[216.57705688 184.42353821]
[226.79835510 186.48786926]
[231.94917297 194.17897034]
[245.63403320 200.32099915]
[259.31890869 206.46302795]
[273.00378418 212.60504150]
[287.54421997 203.99510193]
[304.18762207 205.71896362]
[316.40979004 216.90220642]
[319.53814697 233.00152588]
[333.33105469 238.89689636]
[347.12399292 244.79228210]
[362.85458374 243.10142517]
[371.51669312 255.21823120]
[385.30963135 261.11361694]
[401.51800537 258.61947632]
[411.56973267 271.57690430]
[405.12445068 286.65637207]
[388.81253052 288.34542847]
[379.41424561 274.90652466]
[365.62133789 269.01113892]
[350.87728882 271.12365723]
[341.22860718 258.58520508]
[327.43569946 252.68981934]
[313.64279175 246.79444885]
[302.84951782 254.68377686]
[289.45904541 256.21353149]
[276.96520996 250.87672424]
[268.68136597 239.97207642]
[266.86175537 226.28991699]
[253.17687988 220.14788818]
[239.49201965 214.00585938]
[225.80714417 207.86384583]
[234.29377747 220.23223877]
[238.42895508 234.65098572]
[237.78741455 249.63725281]
[232.43511963 263.64987183]
[222.92253113 275.24771118]
[210.22790527 283.23812866]
[195.65676880 286.79931641]
[180.70762634 285.56506348]
[166.91787720 279.66229248]
[155.70564270 269.69805908]
[148.22399902 256.69711304]
[145.24238586 241.99642944]
[147.06741333 227.10786438]
[153.51139832 213.56256104]
[163.91163635 202.75354004]
[177.19856262 195.79238892]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 126]
[2 125]
[3 124]
[4 123]
[5 122]
[6 119]
[7 118]
[8 117]
[9 116]
[10 115]
[12 46]
[13 45]
[15 43]
[16 42]
[17 41]
[19 39]
[20 38]
[21 37]
[22 36]
[23 35]
[24 33]
[25 32]
[26 31]
[47 114]
[48 113]
[51 110]
[52 109]
[53 108]
[54 106]
[55 105]
[56 104]
[57 103]
[58 100]
[59 99]
[60 98]
[61 97]
[62 96]
[63 95]
[66 80]
[67 79]
[68 78]
[69 77]
[70 76]
[83 93]
[84 92]
[85 91]
[86 90]
[128 158]
[129 157]
[130 156]
[131 155]
[135 150]
[136 149]
[137 148]
[139 146]
[140 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
