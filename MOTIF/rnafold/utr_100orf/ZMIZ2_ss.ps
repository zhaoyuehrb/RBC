%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:53:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCAUGGAGCGGCGCGGGCCGGGGGCCGCCACGGCGAGGGGCCGGGCCAGGCCGGGCGGAGCCAGAGCAGCUGAGUUCCAGAUAAAAACUGUCAGACCCGGCCUGUAGGCUGCUCCAUUGCCAAUGAACUCCAUGAACCCCAUGAAACCUGCCCUGCCCCCUGCGCCACACGGUGAUGGUUCAUUCGCAUAUGAGUCUGUGCCUUGGCAACAAAGCGCCACUC\
) } def
/len { sequence length } bind def

/coor [
[385.98046875 179.81999207]
[373.86996460 170.96923828]
[374.07138062 155.97058105]
[386.41522217 147.44819641]
[371.56250000 145.35133362]
[356.70980835 143.25448608]
[341.85708618 141.15762329]
[327.00436401 139.06077576]
[312.15164185 136.96391296]
[297.29891968 134.86706543]
[282.44619751 132.77020264]
[267.59350586 130.67335510]
[252.74078369 128.57649231]
[237.86012268 126.68814850]
[222.95443726 125.00868225]
[208.04875183 123.32921600]
[193.14306641 121.64974976]
[178.23738098 119.97027588]
[163.33169556 118.29080963]
[148.42601013 116.61134338]
[133.52033997 114.93187714]
[118.61464691 113.25241089]
[103.70896912 111.57294464]
[88.97702789 114.39606476]
[75.74820709 121.46701050]
[62.51939011 128.53796387]
[49.29057312 135.60891724]
[36.16222000 142.86470032]
[23.13691902 150.30389404]
[10.11161709 157.74307251]
[4.21873045 164.70980835]
[-3.14893556 165.19378662]
[-16.27728653 172.44956970]
[-29.40563774 179.70535278]
[-42.53398895 186.96113586]
[-48.33907700 201.91709900]
[-63.69389343 206.56565857]
[-76.81954193 197.34085083]
[-77.64714050 181.31916809]
[-65.54183197 170.79104614]
[-49.78977203 173.83279419]
[-36.66142273 166.57701111]
[-23.53306961 159.32122803]
[-10.40471935 152.06544495]
[2.67242908 144.71777344]
[15.69773006 137.27857971]
[28.72303200 129.83940125]
[30.82089424 125.55847931]
[35.62544632 122.54540253]
[42.21961975 122.38009644]
[55.44844055 115.30914307]
[68.67726135 108.23819733]
[81.90607452 101.16724396]
[81.38056946 93.68567657]
[66.41741943 94.73645782]
[65.36687469 79.77329254]
[80.32955933 78.72254181]
[79.80405426 71.24097443]
[65.71667480 66.08871460]
[51.62929916 60.93645096]
[37.54192352 55.78419113]
[23.45454597 50.63193130]
[9.33138466 45.57858276]
[-4.82686472 40.62439728]
[-18.98511505 35.67021179]
[-34.00510406 41.30754089]
[-47.70289993 32.95589447]
[-49.57072449 17.02194595]
[-38.17574310 5.72885132]
[-22.25921249 7.73970890]
[-14.03092861 21.51196098]
[0.12732103 26.46614647]
[14.28557110 31.42033195]
[21.63021088 30.66334915]
[28.60680771 36.54455185]
[42.69418335 41.69681549]
[56.78156281 46.84907532]
[70.86894226 52.00133514]
[84.95631409 57.15359879]
[89.25334930 51.00660706]
[102.14445496 32.56563568]
[92.46688080 21.10507584]
[82.78929901 9.64451504]
[73.11171722 -1.81604576]
[57.31062317 -4.59182882]
[49.75580215 -18.74471664]
[56.24266815 -33.41782761]
[71.79505157 -37.35520172]
[84.48249817 -27.53642654]
[84.57228088 -11.49362564]
[94.24985504 -0.03306491]
[103.92743683 11.42749596]
[113.60501862 22.88805580]
[122.66144562 44.10820007]
[123.74701691 64.97132874]
[117.55835724 83.16149902]
[105.38843536 96.66725922]
[120.29412079 98.34672546]
[135.19979858 100.02619171]
[150.10548401 101.70566559]
[165.01116943 103.38513184]
[179.91685486 105.06459808]
[194.82254028 106.74406433]
[209.72821045 108.42353058]
[224.63389587 110.10299683]
[239.53958130 111.78246307]
[245.72770691 109.49826813]
[251.30578613 110.52169800]
[254.83763123 113.72377777]
[269.69033813 115.82063293]
[284.54306030 117.91748810]
[299.39578247 120.01434326]
[314.24850464 122.11119843]
[329.10122681 124.20805359]
[343.95394897 126.30490875]
[358.80664062 128.40176392]
[373.65936279 130.49861145]
[388.51208496 132.59547424]
[423.05386353 112.33045197]
[436.91207886 106.59019470]
[450.77026367 100.84994507]
[460.55902100 88.42051697]
[475.27841187 90.69833374]
[489.13662720 84.95808411]
[502.99481201 79.21782684]
[516.85302734 73.47757721]
[530.71118164 67.73732758]
[544.56939697 61.99707413]
[558.42755127 56.25682449]
[572.28576660 50.51657104]
[576.02764893 27.36103058]
[602.49713135 15.05018425]
[612.49230957 3.86555195]
[622.48748779 -7.31908035]
[632.48272705 -18.50371361]
[633.02239990 -34.53768539]
[645.98022461 -43.99676132]
[661.41607666 -39.62474823]
[667.48883057 -24.77548027]
[659.54003906 -10.84004402]
[643.66735840 -8.50851440]
[633.67211914 2.67611814]
[623.67694092 13.86075020]
[613.68176270 25.04538345]
[616.60040283 31.95418358]
[630.41796875 26.11689186]
[644.23559570 20.27960205]
[658.05316162 14.44231319]
[671.87078857 8.60502338]
[685.68835449 2.76773310]
[699.50598145 -3.06955671]
[713.32354736 -8.90684700]
[724.66119385 -18.72817039]
[737.50524902 -10.98025036]
[734.10540771 3.62936759]
[719.16088867 4.91075230]
[705.34326172 10.74804211]
[691.52569580 16.58533287]
[677.70806885 22.42262268]
[663.89044189 28.25991249]
[650.07287598 34.09720230]
[636.25524902 39.93449020]
[622.43768311 45.77178192]
[625.35632324 52.68058014]
[640.34301758 53.31151962]
[655.32977295 53.94245529]
[670.31646729 54.57339478]
[684.59240723 46.50302887]
[698.58013916 55.06309128]
[697.89038086 71.44772339]
[683.23260498 78.80182648]
[669.68554688 69.56011963]
[654.69885254 68.92918396]
[639.71209717 68.29824066]
[624.72540283 67.66730499]
[606.72790527 77.86843109]
[588.83148193 75.42924500]
[578.02600098 64.37476349]
[564.16784668 70.11501312]
[550.30963135 75.85527039]
[536.45141602 81.59552002]
[522.59326172 87.33576965]
[508.73504639 93.07601929]
[494.87686157 98.81627655]
[481.01867676 104.55652618]
[472.22113037 116.57537842]
[456.51049805 114.70813751]
[442.65231323 120.44838715]
[428.79412842 126.18864441]
[426.11947632 133.19551086]
[435.58129883 144.83482361]
[420.77014160 147.20924377]
[418.09548950 154.21611023]
[424.60372925 167.73063660]
[431.11199951 181.24517822]
[437.62023926 194.75970459]
[449.50933838 199.74497986]
[454.65408325 211.12762451]
[450.79528809 222.58595276]
[457.11337280 236.19042969]
[463.43145752 249.79490662]
[469.74954224 263.39938354]
[482.57971191 272.65667725]
[480.92303467 287.45886230]
[487.24111938 301.06332397]
[493.55920410 314.66781616]
[507.28167725 323.64703369]
[506.09664917 340.00329590]
[491.22317505 346.91070557]
[477.96182251 337.26348877]
[479.95474243 320.98590088]
[473.63665771 307.38140869]
[467.31857300 293.77694702]
[454.94030762 285.49273682]
[456.14505005 269.71746826]
[449.82699585 256.11297607]
[443.50891113 242.50851440]
[437.19082642 228.90403748]
[422.30746460 219.59849548]
[424.10571289 201.26795959]
[417.59744263 187.75343323]
[411.08920288 174.23889160]
[404.58093262 160.72436523]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 118]
[5 117]
[6 116]
[7 115]
[8 114]
[9 113]
[10 112]
[11 111]
[12 110]
[13 109]
[14 106]
[15 105]
[16 104]
[17 103]
[18 102]
[19 101]
[20 100]
[21 99]
[22 98]
[23 97]
[24 53]
[25 52]
[26 51]
[27 50]
[28 47]
[29 46]
[30 45]
[32 44]
[33 43]
[34 42]
[35 41]
[58 79]
[59 78]
[60 77]
[61 76]
[62 75]
[63 73]
[64 72]
[65 71]
[81 93]
[82 92]
[83 91]
[84 90]
[119 189]
[120 188]
[121 187]
[123 185]
[124 184]
[125 183]
[126 182]
[127 181]
[128 180]
[129 179]
[130 178]
[132 144]
[133 143]
[134 142]
[135 141]
[164 175]
[165 174]
[166 173]
[167 172]
[193 223]
[194 222]
[195 221]
[196 220]
[199 218]
[200 217]
[201 216]
[202 215]
[204 213]
[205 212]
[206 211]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
