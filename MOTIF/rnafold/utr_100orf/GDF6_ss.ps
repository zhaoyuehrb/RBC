%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:31:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGAGGAGCCGGGCCCCGGCCGCUGUCCAGCCGCUCCGUGCCCCGCGCGUCCUGCGCCGCCGCCACCGCCUCCUGGGGAGACGCAGCCACUUGCCCGCCAUGGAUACUCCCAGGGUCCUGCUCUCGGCCGUCUUCCUCAUCAGUUUUCUGUGGGAUUUGCCCGGUUUCCAGCAGGCUUCCAUCUCAUCCUCCUCGUCGU\
) } def
/len { sequence length } bind def

/coor [
[113.53162384 241.19436646]
[115.89225769 225.73599243]
[127.67111969 215.45045471]
[127.20230103 200.45777893]
[126.73348999 185.46510315]
[126.26467133 170.47244263]
[125.79585266 155.47976685]
[125.32703400 140.48709106]
[124.85821533 125.49442291]
[90.08312988 129.57600403]
[73.52363586 104.02835846]
[58.65581131 102.04141235]
[43.78799438 100.05447388]
[28.92017365 98.06752777]
[14.05235481 96.08058167]
[2.55685091 108.48295593]
[-13.90197754 111.56204987]
[-28.80481911 104.29964447]
[-36.36832809 89.73429108]
[-51.26538849 87.97996521]
[-66.16244507 86.22563171]
[-81.08509827 84.70434570]
[-96.02970886 83.41647339]
[-110.98393250 82.24542999]
[-125.94684601 81.19129181]
[-140.25663757 87.93963623]
[-152.40870667 79.32704163]
[-167.37161255 78.27289581]
[-182.33453369 77.21875763]
[-197.29743958 76.16461182]
[-212.26036072 75.11047363]
[-225.25213623 86.81935120]
[-242.35610962 85.53875732]
[-253.03051758 72.54747772]
[-268.00808716 71.72731781]
[-275.68295288 79.44913483]
[-286.12658691 81.62306976]
[-295.83676147 77.76698303]
[-301.69195557 69.38055420]
[-316.63656616 68.09268188]
[-331.59075928 66.92164612]
[-346.55368042 65.86750031]
[-358.42489624 75.95272064]
[-373.58441162 74.67051697]
[-383.12597656 63.29096603]
[-398.08889771 62.23682404]
[-406.87744141 64.75687408]
[-413.27682495 61.04747772]
[-428.22143555 59.75960541]
[-443.16604614 58.47173309]
[-458.11065674 57.18386078]
[-474.41043091 61.84795761]
[-483.40447998 47.47633743]
[-472.08432007 34.85531998]
[-456.82278442 42.23925018]
[-441.87817383 43.52712250]
[-426.93356323 44.81499481]
[-411.98895264 46.10286713]
[-397.03475952 47.27391052]
[-382.07183838 48.32805252]
[-371.02905273 38.39867783]
[-355.83950806 39.25457382]
[-345.49954224 50.90458679]
[-330.53662109 51.95872879]
[-323.63781738 49.29069519]
[-315.34869385 53.14807510]
[-300.40408325 54.43594742]
[-283.54486084 44.97690582]
[-267.18792725 56.74975586]
[-252.21035767 57.56991196]
[-243.90824890 47.70960999]
[-231.25329590 44.38419724]
[-218.81150818 49.02529526]
[-211.20620728 60.14755630]
[-196.24330139 61.20170212]
[-181.28038025 62.25584412]
[-166.31747437 63.30998611]
[-151.35455322 64.36412811]
[-138.11500549 57.54038239]
[-124.89270020 66.22837830]
[-109.92978668 67.28251648]
[-103.03097534 64.61448669]
[-94.74183655 68.47186279]
[-79.79722595 69.75973511]
[-75.62541962 67.41979218]
[-69.93820190 67.68130493]
[-64.40811157 71.32857513]
[-49.51105881 73.08290863]
[-34.61399841 74.83723450]
[-26.50307083 64.22712708]
[-14.10838223 58.97004318]
[-0.62756252 60.53844833]
[10.40377426 68.62873077]
[16.03929901 81.21276093]
[30.90711784 83.19970703]
[45.77493668 85.18665314]
[60.64275742 87.17359924]
[75.51057434 89.16053772]
[82.84883881 76.63071442]
[96.50855255 69.00170898]
[113.27738953 69.35147095]
[128.53895569 78.70623016]
[131.79508972 64.06391144]
[135.05120850 49.42158890]
[126.35785675 36.22306061]
[129.62527466 20.76021957]
[142.91497803 12.20689011]
[158.34240723 15.63761139]
[166.75476074 29.01699829]
[163.16111755 44.40729904]
[149.69354248 52.67771912]
[146.43740845 67.32003784]
[143.18127441 81.96236420]
[153.14834595 93.17206573]
[168.07099915 91.65077972]
[182.99366760 90.12949371]
[197.66560364 79.00843048]
[213.38340759 86.80567169]
[228.28045654 85.05133820]
[243.17752075 83.29701233]
[258.07458496 81.54267883]
[272.97161865 79.78835297]
[287.86868286 78.03401947]
[295.51803589 64.66265106]
[309.41174316 58.43219757]
[324.13589478 61.54077148]
[334.08709717 72.59117889]
[348.98416138 70.83685303]
[363.88122559 69.08251953]
[378.77825928 67.32819366]
[393.67532349 65.57386017]
[402.31005859 48.50198364]
[419.35067749 40.14086914]
[437.84225464 43.70174026]
[450.35824585 57.57047653]
[465.15667725 55.11981583]
[479.95513916 52.66915512]
[487.91784668 48.17641830]
[495.00387573 50.29772186]
[509.83883667 48.07865143]
[517.87078857 43.71091080]
[524.92279053 45.94270706]
[539.79064941 43.95576096]
[554.65844727 41.96881866]
[567.31195068 31.53707123]
[582.57598877 37.53210831]
[584.74829102 53.78674316]
[571.59411621 63.57960510]
[556.64538574 56.83663559]
[541.77758789 58.82358170]
[526.90972900 60.81052399]
[512.05792236 62.91359711]
[497.22296143 65.13267517]
[482.40579224 67.46761322]
[467.60736084 69.91827393]
[452.80889893 72.36893463]
[449.78363037 83.12075806]
[442.93032837 92.00533295]
[433.21044922 97.71340942]
[422.01129150 99.38581848]
[410.94796753 96.74260712]
[401.63055420 90.12901306]
[395.42965698 80.47091675]
[380.53259277 82.22525024]
[365.63552856 83.97957611]
[350.73849487 85.73390961]
[335.84143066 87.48823547]
[328.72952271 100.54805756]
[315.13031006 106.99208832]
[300.16934204 104.15966797]
[289.62301636 92.93108368]
[274.72595215 94.68540955]
[259.82891846 96.43974304]
[244.93185425 98.19406891]
[230.03479004 99.94840240]
[215.13772583 101.70272827]
[207.39530945 111.00349426]
[194.99293518 112.58283234]
[184.51495361 105.05215454]
[169.59228516 106.57344055]
[154.66963196 108.09472656]
[169.59925842 106.64347839]
[182.76469421 113.83175659]
[189.61633301 127.17549133]
[187.78640747 142.06344604]
[177.90731812 153.35076904]
[163.39300537 157.13687134]
[149.25920105 152.11335754]
[140.39016724 140.01625061]
[139.85089111 125.02560425]
[140.31970215 140.01828003]
[140.78852844 155.01094055]
[141.25733948 170.00361633]
[141.72615051 184.99629211]
[142.19497681 199.98896790]
[142.66378784 214.98162842]
[155.06227112 224.51115417]
[158.38410950 239.79183960]
[151.06082153 253.60862732]
[136.55026245 259.43765259]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 196]
[4 195]
[5 194]
[6 193]
[7 192]
[8 191]
[9 190]
[11 98]
[12 97]
[13 96]
[14 95]
[15 94]
[19 89]
[20 88]
[21 87]
[22 84]
[23 83]
[24 81]
[25 80]
[27 78]
[28 77]
[29 76]
[30 75]
[31 74]
[34 70]
[35 69]
[39 67]
[40 66]
[41 64]
[42 63]
[45 60]
[46 59]
[48 58]
[49 57]
[50 56]
[51 55]
[102 113]
[103 112]
[104 111]
[114 181]
[115 180]
[116 179]
[118 176]
[119 175]
[120 174]
[121 173]
[122 172]
[123 171]
[127 167]
[128 166]
[129 165]
[130 164]
[131 163]
[135 156]
[136 155]
[137 154]
[139 153]
[140 152]
[142 151]
[143 150]
[144 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
