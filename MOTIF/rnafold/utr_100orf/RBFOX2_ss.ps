%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:26:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGCGGGGGCAGGCGCGCGCCCGCCUGUCGCGACAGUCGGGGCCGAGGCCCAGGGGGAGGUGGCCUGUCGCGGGUCGCCCGGCUCCCGGAGGCGAGGGGGGCGCGGGCGGAUGGCGGAGGGCGCCCAGCCGCAUCAGCCGCCUCAGCUCGGGCCCGGCGCCGCCGCCCGGGGCAUGAAGCGGGAGUCGGAGCUGGAGCUGCCGGUGCCCG\
) } def
/len { sequence length } bind def

/coor [
[168.83909607 195.60720825]
[167.45930481 186.42147827]
[170.50424194 177.50048828]
[162.15919495 165.03613281]
[153.81414795 152.57176208]
[145.46910095 140.10740662]
[137.12405396 127.64305878]
[128.77900696 115.17869568]
[121.27921295 115.12339020]
[98.77983093 114.95745850]
[90.25185394 127.29738617]
[81.72388458 139.63729858]
[73.19590759 151.97723389]
[64.66793823 164.31715393]
[56.13996506 176.65707397]
[47.61199188 188.99699402]
[39.08401871 201.33691406]
[42.17020035 216.83694458]
[33.32292557 229.93280029]
[17.79112816 232.85493469]
[4.78954887 223.86968994]
[2.03179240 208.30787659]
[11.15398693 195.40202332]
[26.74409676 192.80894470]
[35.27206802 180.46902466]
[43.80004120 168.12910461]
[52.32801437 155.78918457]
[60.85598755 143.44924927]
[69.38395691 131.10932922]
[77.91193390 118.76940918]
[86.43990326 106.42948914]
[76.27211761 95.40151978]
[63.28173828 102.90151978]
[55.55522156 117.36640930]
[39.15830612 117.63698578]
[30.95873260 103.43490601]
[39.39151764 89.37005615]
[55.78173828 89.91114044]
[68.77211761 82.41114044]
[75.39404297 68.95193481]
[73.40873718 54.08390045]
[71.42343140 39.21586227]
[61.92769241 26.56115723]
[67.91242218 12.92179203]
[65.92710876 -1.94624603]
[63.94180298 -16.81428337]
[61.95649719 -31.68232155]
[57.71938705 -39.77281952]
[60.05322266 -46.78409576]
[58.28741837 -61.67979813]
[56.52161026 -76.57550049]
[54.75580215 -91.47119904]
[52.98999405 -106.36690521]
[48.87267303 -114.51901245]
[51.30966187 -121.49510956]
[49.76374054 -136.41523743]
[48.21781540 -151.33535767]
[37.07313919 -165.99494934]
[44.85601807 -181.72442627]
[43.09020996 -196.62013245]
[41.32440186 -211.51582336]
[39.55859375 -226.41152954]
[37.79278564 -241.30723572]
[36.02698135 -256.20294189]
[34.26117325 -271.09863281]
[32.49536514 -285.99432373]
[28.37804222 -294.14645386]
[30.81503296 -301.12252808]
[29.26910973 -316.04266357]
[17.28517342 -325.99368286]
[15.92993164 -341.14685059]
[25.49057198 -352.51037598]
[23.94465065 -367.43051147]
[22.39872742 -382.35061646]
[20.85280418 -397.27075195]
[-1.48936176 -409.68777466]
[-1.94389617 -441.50909424]
[-7.14343500 -455.57907104]
[-12.34297371 -469.64907837]
[-17.54251289 -483.71905518]
[-22.74205017 -497.78906250]
[-27.94158936 -511.85906982]
[-33.14112854 -525.92907715]
[-38.44428635 -539.96032715]
[-43.85077286 -553.95208740]
[-49.25726318 -567.94390869]
[-54.66374969 -581.93566895]
[-60.07023621 -595.92742920]
[-65.47672272 -609.91925049]
[-80.60929871 -612.92065430]
[-91.70106506 -623.64337158]
[-95.21266937 -638.66577148]
[-90.02358246 -653.19421387]
[-77.78961182 -662.59283447]
[-62.41458511 -663.86248779]
[-48.80460739 -656.59802246]
[-41.30257797 -643.11755371]
[-42.30236816 -627.72265625]
[-51.48494339 -615.32568359]
[-46.07845688 -601.33392334]
[-40.67197037 -587.34216309]
[-35.26548386 -573.35040283]
[-29.85899353 -559.35858154]
[-24.45250702 -545.36682129]
[-19.11028671 -540.26135254]
[-19.07113266 -531.12860107]
[-13.87159348 -517.05859375]
[-8.67205429 -502.98861694]
[-3.47251606 -488.91860962]
[1.72702277 -474.84860229]
[6.92656136 -460.77862549]
[12.12610054 -446.70861816]
[19.62100220 -446.43212891]
[34.61080551 -445.87915039]
[42.10570908 -445.60266113]
[48.32778549 -459.25134277]
[54.54986191 -472.89999390]
[60.77193832 -486.54864502]
[56.52486801 -502.01931763]
[66.08840179 -514.90026855]
[82.12621307 -515.31030273]
[92.33546448 -502.93487549]
[88.88449860 -487.26739502]
[74.42059326 -480.32656860]
[68.19851685 -466.67791748]
[61.97644043 -453.02926636]
[55.75436401 -439.38058472]
[58.20047379 -424.58181763]
[54.30175781 -411.53991699]
[45.96389008 -402.58807373]
[35.77293015 -398.81668091]
[37.31885147 -383.89654541]
[38.86477280 -368.97640991]
[40.41069794 -354.05630493]
[52.09804916 -344.89434814]
[53.87837601 -329.78524780]
[44.18923569 -317.58859253]
[45.73515701 -302.66845703]
[47.39106750 -287.76013184]
[49.15687561 -272.86444092]
[50.92267990 -257.96875000]
[52.68848801 -243.07304382]
[54.45429611 -228.17733765]
[56.22010422 -213.28163147]
[57.98591232 -198.38594055]
[59.75171661 -183.49023438]
[69.05488586 -175.76013184]
[70.64869690 -163.36581421]
[63.13794327 -152.88127136]
[64.68386078 -137.96115112]
[66.22978973 -123.04103088]
[67.88569641 -108.13271332]
[69.65150452 -93.23700714]
[71.41731262 -78.34130859]
[73.18312073 -63.44560623]
[74.94892883 -48.54990387]
[76.82453156 -33.66762924]
[78.80984497 -18.79959106]
[80.79515076 -3.93155384]
[82.78045654 10.93648434]
[92.13419342 22.52772713]
[86.29146576 37.23055267]
[88.27677155 52.09859085]
[90.26208496 66.96662903]
[141.24336243 106.83364868]
[149.58840942 119.29801178]
[157.93345642 131.76235962]
[166.27850342 144.22671509]
[174.62355042 156.69108582]
[182.96859741 169.15544128]
[202.73635864 177.43133545]
[203.22187805 198.06533813]
[212.11010742 210.14837646]
[220.99832153 222.23139954]
[229.88653564 234.31442261]
[238.77476501 246.39746094]
[247.66297913 258.48046875]
[251.69625854 260.07940674]
[254.70875549 262.62231445]
[256.52908325 265.67266846]
[257.14520264 268.78311157]
[256.69400024 271.54830933]
[264.85430908 284.13439941]
[273.01461792 296.72048950]
[287.01434326 304.09057617]
[287.44607544 318.97891235]
[295.60638428 331.56500244]
[303.85928345 344.09054565]
[312.20434570 356.55490112]
[327.76904297 358.06301880]
[338.68594360 369.25921631]
[339.80041504 384.85702515]
[330.58627319 397.49163818]
[315.39410400 401.19738770]
[301.39724731 394.22448730]
[295.20452881 379.86535645]
[299.73999023 364.89996338]
[291.39492798 352.43560791]
[285.06259155 348.62689209]
[283.02032471 339.72531128]
[274.86001587 327.13922119]
[261.44396973 320.66937256]
[260.42852783 304.88079834]
[252.26823425 292.29470825]
[244.10792542 279.70861816]
[235.57995605 267.36871338]
[226.69172668 255.28567505]
[217.80351257 243.20265198]
[208.91529846 231.11961365]
[200.02706909 219.03659058]
[191.13885498 206.95356750]
[182.26339722 207.06402588]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 170]
[4 169]
[5 168]
[6 167]
[7 166]
[8 165]
[10 31]
[11 30]
[12 29]
[13 28]
[14 27]
[15 26]
[16 25]
[17 24]
[32 39]
[33 38]
[40 164]
[41 163]
[42 162]
[44 160]
[45 159]
[46 158]
[47 157]
[49 156]
[50 155]
[51 154]
[52 153]
[53 152]
[55 151]
[56 150]
[57 149]
[59 146]
[60 145]
[61 144]
[62 143]
[63 142]
[64 141]
[65 140]
[66 139]
[68 138]
[69 137]
[72 134]
[73 133]
[74 132]
[75 131]
[77 112]
[78 111]
[79 110]
[80 109]
[81 108]
[82 107]
[83 106]
[84 104]
[85 103]
[86 102]
[87 101]
[88 100]
[89 99]
[115 127]
[116 126]
[117 125]
[118 124]
[172 211]
[173 210]
[174 209]
[175 208]
[176 207]
[177 206]
[182 205]
[183 204]
[184 203]
[186 201]
[187 200]
[188 198]
[189 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
