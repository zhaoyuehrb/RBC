%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:14:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUCACCCUCCGGCUUCCUGUCGGGGCUUUCUCAGCCCCACCCCACGUUUGGACAUUUGGAGCAUUUCCUUCCCUGACAGCCGGACCUGGGACUGGGCUGGGGCCCUGGCGGAUGGAGACAUGCUGCCCCUGCUGCUGCUGCCCCUGCUGUGGGGGGGGUCCCUGCAGGAGAAGCCAGUGUACGAGCUGCAAGUGCAGAAGUCGGUGACGGUGCAGGAGG\
) } def
/len { sequence length } bind def

/coor [
[87.95153046 382.63073730]
[98.82352448 371.16012573]
[98.18402863 356.17376709]
[97.43803406 341.19232178]
[96.58557129 326.21655273]
[95.73310852 311.24081421]
[94.88064575 296.26504517]
[80.51161194 284.91424561]
[78.98381042 266.34588623]
[91.73422241 252.32600403]
[90.45639801 237.38052368]
[89.17856598 222.43505859]
[87.90073395 207.48957825]
[86.62290192 192.54411316]
[85.34506989 177.59863281]
[84.06723785 162.65316772]
[82.78940582 147.70768738]
[71.56033325 93.97526550]
[57.13294601 89.87032318]
[42.70555878 85.76537323]
[28.27817535 81.66043091]
[13.85079098 77.55548859]
[-0.57659370 73.45053864]
[-15.00397873 69.34559631]
[-29.43136215 65.24065399]
[-43.85874939 61.13570786]
[-58.28613281 57.03076172]
[-63.33389664 58.30136490]
[-67.90869141 57.58501434]
[-71.33415222 55.39308929]
[-73.23406982 52.43101501]
[-87.47332764 47.71471786]
[-101.71258545 42.99842072]
[-115.95185089 38.28212357]
[-130.19110107 33.56582642]
[-144.43037415 28.84952927]
[-158.66963196 24.13323212]
[-172.90888977 19.41693497]
[-185.49908447 28.29348755]
[-200.72398376 28.05724716]
[-212.74819946 19.00836372]
[-217.08647156 4.78453207]
[-231.32572937 0.06823492]
[-245.56498718 -4.64806223]
[-259.80426025 -9.36435986]
[-275.33728027 -6.35851145]
[-284.98632812 -17.70511246]
[-299.22558594 -22.42140961]
[-313.46484375 -27.13770866]
[-327.70410156 -31.85400581]
[-341.94335938 -36.57030106]
[-356.18264771 -41.28659821]
[-366.61828613 -29.05075455]
[-380.91677856 -21.77522659]
[-396.87420654 -20.54823494]
[-412.04367065 -25.52824593]
[-424.11044312 -35.92421722]
[-431.24523926 -50.12108994]
[-432.38146973 -65.93064880]
[-446.68634033 -70.44405365]
[-460.99121094 -74.95746613]
[-475.29608154 -79.47087860]
[-488.38827515 -70.91936493]
[-503.90802002 -72.83534241]
[-514.52740479 -84.31414032]
[-515.23223877 -99.93583679]
[-505.68975830 -112.32432556]
[-490.40557861 -115.63015747]
[-476.59646606 -108.29240417]
[-470.78265381 -93.77574158]
[-456.47778320 -89.26232910]
[-442.17294312 -84.74891663]
[-427.86807251 -80.23551178]
[-419.26388550 -91.31712341]
[-407.36926270 -98.81314087]
[-393.60137939 -101.80633545]
[-379.60897827 -99.91742706]
[-367.07470703 -93.35298920]
[-357.51290894 -82.88312531]
[-352.08670044 -69.75112152]
[-351.46633911 -55.52585983]
[-337.22708130 -50.80956268]
[-322.98782349 -46.09326553]
[-308.74856567 -41.37696838]
[-294.50930786 -36.66067123]
[-280.27001953 -31.94437408]
[-265.75546265 -35.28756332]
[-255.08795166 -23.60362053]
[-240.84869385 -18.88732338]
[-226.60943604 -14.17102528]
[-212.37017822 -9.45472813]
[-200.39878845 -18.27650833]
[-185.35028076 -18.35842896]
[-172.99462891 -9.45949459]
[-168.19259644 5.17767382]
[-153.95333862 9.89397144]
[-139.71406555 14.61026859]
[-125.47480774 19.32656479]
[-111.23554993 24.04286194]
[-96.99629211 28.75915909]
[-82.75702667 33.47545624]
[-68.51776886 38.19175339]
[-54.18118668 42.60337830]
[-39.75380325 46.70832443]
[-25.32641792 50.81326675]
[-10.89903355 54.91821289]
[3.52835107 59.02315903]
[17.95573616 63.12810135]
[32.38312149 67.23304749]
[46.81050491 71.33798981]
[61.23788834 75.44293976]
[75.66527557 79.54788208]
[88.47433472 71.74224091]
[91.43988800 57.03831863]
[94.40544891 42.33438873]
[88.66554260 26.97257042]
[99.30664062 14.49462986]
[115.38209534 17.73680305]
[120.35485840 33.36381912]
[109.10937500 45.29994583]
[106.14382172 60.00387192]
[103.17826080 74.70780182]
[115.14852142 83.74732208]
[128.47956848 76.87104797]
[141.81062317 69.99478149]
[144.27458191 54.78836441]
[155.09364319 44.07382965]
[169.97129822 41.81121063]
[183.17045593 48.66102600]
[196.50151062 41.78475571]
[209.83256531 34.90848541]
[223.16362000 28.03221703]
[236.49467468 21.15594673]
[237.32170105 5.88298893]
[245.62757874 -6.84136915]
[259.09777832 -13.65457916]
[274.06951904 -12.81622124]
[286.52752686 -4.65142822]
[299.85858154 -11.52769756]
[313.18963623 -18.40396690]
[321.90744019 -31.60663605]
[336.76553345 -30.56462288]
[350.09658813 -37.44089127]
[363.42764282 -44.31716156]
[376.75869751 -51.19343185]
[390.08975220 -58.06970215]
[396.32141113 -72.85300446]
[411.80322266 -77.05927277]
[424.65890503 -67.46181488]
[425.02664185 -51.42297363]
[412.62435913 -41.24638367]
[396.96603394 -44.73865128]
[383.63497925 -37.86238098]
[370.30392456 -30.98611069]
[356.97286987 -24.10984230]
[343.64181519 -17.23357201]
[335.87753296 -4.52273941]
[320.06588745 -5.07291603]
[306.73486328 1.80335343]
[293.40380859 8.67962265]
[292.83471680 23.56389999]
[284.83862305 36.24926376]
[271.47827148 43.27547836]
[256.29516602 42.66693115]
[243.37094116 34.48699951]
[230.03988647 41.36326599]
[216.70883179 48.23953629]
[203.37777710 55.11580658]
[190.04673767 61.99207687]
[187.97650146 76.71797943]
[177.50819397 87.52901459]
[162.50584412 90.13338470]
[148.68688965 83.32583618]
[135.35583496 90.20210266]
[122.02478790 97.07836914]
[121.43900299 104.55545807]
[133.80392456 113.04713440]
[120.26743317 119.50963593]
[119.68164825 126.98672485]
[131.77919006 135.85517883]
[143.87673950 144.72363281]
[155.97427368 153.59207153]
[168.07182312 162.46052551]
[182.43455505 156.82885742]
[197.55744934 159.87869263]
[208.61486816 170.63681030]
[212.07841492 185.67034912]
[206.84288025 200.18215942]
[194.57891846 209.54158020]
[179.19990540 210.76205444]
[165.61323547 203.45413208]
[158.15435791 189.94972229]
[159.20336914 174.55807495]
[147.10583496 165.68962097]
[135.00828552 156.82116699]
[122.91073608 147.95272827]
[110.81319427 139.08427429]
[97.73487854 146.42985535]
[99.01271057 161.37533569]
[100.29054260 176.32080078]
[101.56837463 191.26628113]
[102.84620667 206.21174622]
[104.12403870 221.15722656]
[105.40187073 236.10269165]
[106.67969513 251.04817200]
[117.08148193 256.78671265]
[123.36023712 266.73019409]
[124.05566406 278.34948730]
[119.11054230 288.75442505]
[109.85640717 295.41259766]
[110.70886993 310.38833618]
[111.56132507 325.36410522]
[112.41378784 340.33987427]
[116.02357483 348.72256470]
[113.17039490 355.53427124]
[113.80989075 370.52062988]
[125.61952972 381.02337646]
[126.46022034 396.80529785]
[115.83319092 408.50323486]
[100.04327393 409.17703247]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 216]
[3 215]
[4 213]
[5 212]
[6 211]
[7 210]
[10 205]
[11 204]
[12 203]
[13 202]
[14 201]
[15 200]
[16 199]
[17 198]
[18 112]
[19 111]
[20 110]
[21 109]
[22 108]
[23 107]
[24 106]
[25 105]
[26 104]
[27 103]
[31 102]
[32 101]
[33 100]
[34 99]
[35 98]
[36 97]
[37 96]
[38 95]
[42 91]
[43 90]
[44 89]
[45 88]
[47 86]
[48 85]
[49 84]
[50 83]
[51 82]
[52 81]
[59 73]
[60 72]
[61 71]
[62 70]
[113 122]
[114 121]
[115 120]
[123 175]
[124 174]
[125 173]
[129 169]
[130 168]
[131 167]
[132 166]
[133 165]
[138 160]
[139 159]
[140 158]
[142 156]
[143 155]
[144 154]
[145 153]
[146 152]
[179 197]
[180 196]
[181 195]
[182 194]
[183 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
