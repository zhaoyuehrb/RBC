%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:35:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCGCUCCGCCCCCAGCCCGCCUUCCUCCCGCCGCGCCCUCCGCCUCCGCCCGCACCUCGCUAGCGUUCCCCUGUCUUCCCCAACGCCCCGGAGCCGCCGGCCGCUAGCGUCAGCGCCAGCCAGAAUUAAGGAAGUUCACUGGAGUAAAAUGGAGGCCUCAGUAAUAUUACCCAUUCUGAAGAAAAAACUAGCCUUCCUUUCAGGAGGAAAAGACAGACGGAGUGGCCUCAUUUUGACAAUUCCAUUAU\
) } def
/len { sequence length } bind def

/coor [
[129.41964722 294.05130005]
[140.83216858 284.21755981]
[154.14700317 277.17037964]
[150.24960327 262.68554688]
[146.35220337 248.20071411]
[142.45480347 233.71588135]
[138.55741882 219.23104858]
[134.66001892 204.74621582]
[130.76261902 190.26139832]
[126.86522675 175.77656555]
[119.55476379 174.10112000]
[120.88597107 189.04193115]
[107.08776855 194.92492676]
[97.22884369 183.61999512]
[104.93383026 170.75022888]
[97.62336731 169.07478333]
[87.80690765 180.41661072]
[88.75865936 195.96435547]
[78.64180756 207.32673645]
[63.81355667 208.13827515]
[53.99709702 219.48010254]
[44.18063736 230.82192993]
[50.29185104 244.80821228]
[49.72086716 260.06063843]
[42.58105469 273.55084229]
[30.29002762 282.60034180]
[15.28818130 285.41235352]
[0.55414146 281.42852783]
[-10.98663807 271.43988037]
[-17.04272652 257.42965698]
[-16.41168213 242.17958069]
[-9.21880150 228.71759033]
[3.10776496 219.71656799]
[18.12056923 216.96366882]
[32.83880615 221.00547791]
[42.65526581 209.66365051]
[52.47172546 198.32180786]
[51.14789200 183.53050232]
[60.94160843 171.88842773]
[76.46508026 170.60015869]
[86.28153992 159.25833130]
[58.23984528 131.58100891]
[56.16247559 97.87985229]
[73.94226074 76.00838470]
[65.30873871 63.74208069]
[56.67521286 51.47577667]
[48.04168701 39.20947266]
[39.40816116 26.94316673]
[30.77463722 14.67686081]
[22.14111137 2.41055536]
[-2.02869177 2.81662011]
[-19.81365204 -15.58933067]
[-18.44414520 -42.57092285]
[-31.17701149 -50.50024033]
[-43.90987778 -58.42956161]
[-56.24665070 -52.31478882]
[-69.88600159 -53.08147430]
[-81.27793884 -60.42313385]
[-87.51024628 -72.33592224]
[-87.05264282 -85.66446686]
[-99.68527222 -93.75253296]
[-112.31789398 -101.84059906]
[-124.95052338 -109.92865753]
[-137.58314514 -118.01672363]
[-150.21577454 -126.10478210]
[-162.84840393 -134.19285583]
[-175.48101807 -142.28091431]
[-188.20655823 -140.28427124]
[-198.55593872 -147.25988770]
[-201.29748535 -159.02497864]
[-213.82789612 -167.27052307]
[-229.11683655 -164.28955078]
[-241.70698547 -172.83020020]
[-244.45466614 -187.42424011]
[-256.98507690 -195.66976929]
[-272.76638794 -196.79232788]
[-279.14505005 -210.25198364]
[-291.67544556 -218.49752808]
[-304.20587158 -226.74305725]
[-316.73626709 -234.98860168]
[-330.09680176 -227.52169800]
[-345.39730835 -227.13063049]
[-359.12185669 -233.90525818]
[-368.11663818 -246.28881836]
[-370.31469727 -261.43566895]
[-365.21096802 -275.86517334]
[-353.97824097 -286.26153564]
[-339.19769287 -290.23571777]
[-324.26580811 -286.87454224]
[-312.61383057 -276.95034790]
[-306.91928101 -262.74362183]
[-308.49072266 -247.51901245]
[-295.96032715 -239.27346802]
[-283.42990112 -231.02792358]
[-270.89950562 -222.78239441]
[-256.01443481 -222.24960327]
[-248.73953247 -208.20018005]
[-236.20912170 -199.95463562]
[-221.71884155 -203.20536804]
[-208.89376831 -195.02171326]
[-205.58235168 -179.80093384]
[-193.05195618 -171.55538940]
[-175.49220276 -171.46418762]
[-167.39295959 -154.91354370]
[-154.76033020 -146.82546997]
[-142.12771606 -138.73741150]
[-129.49508667 -130.64935303]
[-116.86245728 -122.56128693]
[-104.22983551 -114.47322083]
[-91.59720612 -106.38516235]
[-78.96458435 -98.29709625]
[-63.86386108 -104.76506042]
[-47.72391129 -100.90992737]
[-36.96264648 -88.06063080]
[-35.98055649 -71.16242981]
[-23.24769020 -63.23310852]
[-10.51482487 -55.30378723]
[3.06875157 -61.66668320]
[5.12742376 -76.52474213]
[7.18609571 -91.38279724]
[9.24476814 -106.24085999]
[2.21078396 -114.49449158]
[0.89293998 -125.03752136]
[5.48565054 -134.37500000]
[14.26343346 -139.54388428]
[16.69335747 -154.34574890]
[19.12328148 -169.14762878]
[21.55320740 -183.94949341]
[23.98313141 -198.75137329]
[15.83217144 -212.56953430]
[21.68798256 -227.50569153]
[37.05848694 -232.10212708]
[50.15275192 -222.83282471]
[50.92597198 -206.80841064]
[38.78500366 -196.32145691]
[36.35507965 -181.51957703]
[33.92515564 -166.71769714]
[31.49523163 -151.91583252]
[29.06530762 -137.11395264]
[37.17912292 -119.54614258]
[24.10282516 -104.18218231]
[22.04415321 -89.32412720]
[19.98548126 -74.46607208]
[17.92680931 -59.60801315]
[26.33563042 -56.25016785]
[33.43928528 -50.92340469]
[38.80189514 -44.06821823]
[42.12465286 -36.21409607]
[43.26165771 -27.93920326]
[42.22432709 -19.82802200]
[39.17454910 -12.43013287]
[34.40741730 -6.22296953]
[43.04094315 6.04333591]
[51.67446518 18.30964088]
[60.30799103 30.57594681]
[68.94151306 42.84225082]
[77.57504272 55.10855865]
[86.20856476 67.37486267]
[124.55019379 58.61030197]
[160.52090454 93.92008972]
[174.06439209 87.47230530]
[187.60789490 81.02452850]
[201.15138245 74.57675171]
[207.53402710 68.07937622]
[214.90496826 68.13421631]
[228.52810669 61.85644913]
[242.15122986 55.57868195]
[246.09193420 40.44577789]
[258.86782837 31.42852020]
[274.44650269 32.78458405]
[285.47219849 43.87368011]
[286.73889160 59.45987320]
[277.64855957 72.18384552]
[262.49328613 76.03771210]
[248.42900085 69.20181274]
[234.80586243 75.47957611]
[221.18273926 81.75733948]
[207.59915161 88.12023926]
[194.05566406 94.56801605]
[180.51217651 101.01580048]
[166.96868896 107.46357727]
[167.34402466 114.95417786]
[182.32522583 114.20351410]
[197.30642700 113.45285034]
[212.28762817 112.70218658]
[227.26884460 111.95152283]
[241.28485107 106.60817719]
[250.69784546 118.28702545]
[242.49935913 130.84826660]
[228.01950073 126.93273163]
[213.03829956 127.68339539]
[198.05709839 128.43405151]
[183.07588196 129.18472290]
[168.09468079 129.93537903]
[168.47001648 137.42599487]
[182.59020996 142.48762512]
[196.71040344 147.54925537]
[210.83059692 152.61088562]
[224.95079041 157.67251587]
[239.07098389 162.73416138]
[256.02139282 162.38725281]
[261.04705811 178.57917786]
[246.87916565 187.89083862]
[234.00935364 176.85435486]
[219.88916016 171.79270935]
[205.76896667 166.73107910]
[191.64877319 161.66944885]
[177.52857971 156.60781860]
[163.40838623 151.54618835]
[157.89379883 156.62942505]
[168.06028748 167.65858459]
[178.22679138 178.68775940]
[188.39328003 189.71691895]
[198.55960083 200.74624634]
[187.53012085 210.91238403]
[177.36410522 199.88340759]
[167.19761658 188.85424805]
[157.03112793 177.82508850]
[146.86463928 166.79591370]
[141.35005188 171.87916565]
[145.24745178 186.36399841]
[149.14485168 200.84883118]
[153.04223633 215.33364868]
[156.93963623 229.81848145]
[160.83703613 244.30331421]
[164.73443604 258.78814697]
[168.63182068 273.27297974]
[183.68522644 272.68722534]
[198.49143982 275.46633911]
[212.30781555 281.47094727]
[224.44132996 290.39987183]
[234.28335571 301.80523682]
[241.34022522 315.11495972]
[245.25798035 329.66140747]
[245.84010315 344.71493530]
[243.05738831 359.52047729]
[237.04940796 373.33538818]
[228.11755371 385.46673584]
[216.70980835 395.30599976]
[203.39839172 402.35964966]
[188.85099792 406.27389526]
[173.79733276 406.85235596]
[158.99244690 404.06604004]
[145.17898560 398.05474854]
[133.04980469 389.11993408]
[123.21331024 377.70980835]
[116.16288757 364.39666748]
[112.25218201 349.84832764]
[111.67736053 334.79452515]
[114.46724701 319.99032593]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 227]
[4 226]
[5 225]
[6 224]
[7 223]
[8 222]
[9 221]
[10 220]
[16 41]
[17 40]
[20 37]
[21 36]
[22 35]
[44 158]
[45 157]
[46 156]
[47 155]
[48 154]
[49 153]
[50 152]
[53 117]
[54 116]
[55 115]
[60 111]
[61 110]
[62 109]
[63 108]
[64 107]
[65 106]
[66 105]
[67 104]
[70 102]
[71 101]
[74 98]
[75 97]
[77 95]
[78 94]
[79 93]
[80 92]
[118 144]
[119 143]
[120 142]
[121 141]
[125 139]
[126 138]
[127 137]
[128 136]
[129 135]
[160 181]
[161 180]
[162 179]
[163 178]
[165 177]
[166 176]
[167 175]
[195 209]
[196 208]
[197 207]
[198 206]
[199 205]
[200 204]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
