%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:19:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCGGCAGGUACAUAAGAUCCAUUAGGUUUGAGCUGUGUUGACUACCACUGCUUUUUCCUUGGUCUCACUUACGUCUUGGAAGAUGGCUCUGCAGAUCCCUGGAGGCUUUUGGGCAGCAGCUGUGACCGUGAUGCUGGUGAUGCUGAGCACCCCAGUGGCUGAGGCCAGAGACUUUCCCAAGG\
) } def
/len { sequence length } bind def

/coor [
[-2.85553527 157.34512329]
[-8.27772141 162.22142029]
[-14.71994019 165.59123230]
[-21.77499771 167.25386047]
[-28.99999619 167.11616516]
[-35.94414139 165.19763184]
[-42.17686844 161.62855530]
[-47.31452942 156.64117432]
[-51.04402542 150.55467224]
[-65.82592010 153.10331726]
[-80.60781097 155.65197754]
[-85.98985291 169.96913147]
[-97.73800659 179.60644531]
[-112.63365173 182.05310059]
[-126.66013336 176.75085449]
[-136.08584595 165.21736145]
[-150.86773682 167.76600647]
[-165.64962769 170.31466675]
[-173.59721375 174.86665344]
[-180.70547485 172.77839661]
[-195.52873230 175.07431030]
[-210.35198975 177.37022400]
[-215.76625061 181.23143005]
[-221.46081543 181.69126892]
[-225.71969604 179.48246765]
[-240.61268616 181.27096558]
[-255.50567627 183.05944824]
[-263.12435913 196.44833374]
[-277.00372314 202.71063232]
[-291.73495483 199.63583374]
[-301.71148682 188.60827637]
[-316.60449219 190.39677429]
[-331.49746704 192.18525696]
[-346.39047241 193.97375488]
[-359.16964722 203.30130005]
[-372.72866821 197.13670349]
[-387.62167358 198.92518616]
[-402.51467896 200.71368408]
[-409.95562744 214.33027649]
[-423.99349976 220.94221497]
[-439.23043823 218.00706482]
[-449.80752563 206.65345764]
[-451.65768433 191.24707031]
[-444.06945801 177.71199036]
[-429.96069336 171.25273132]
[-414.75646973 174.35299683]
[-404.30316162 185.82067871]
[-389.41015625 184.03219604]
[-374.51718140 182.24369812]
[-362.80322266 173.04408264]
[-348.17895508 179.08076477]
[-333.28598022 177.29226685]
[-318.39297485 175.50378418]
[-303.49996948 173.71528625]
[-296.41806030 160.63919067]
[-282.83364868 154.16398621]
[-267.86624146 156.96208191]
[-257.29418945 168.16645813]
[-242.40118408 166.37796021]
[-227.50817871 164.58947754]
[-212.64790344 162.54696655]
[-197.82464600 160.25106812]
[-183.00138855 157.95515442]
[-168.19828796 155.53277588]
[-153.41638184 152.98411560]
[-138.63449097 150.43547058]
[-133.61535645 136.41142273]
[-122.17436218 126.71813965]
[-107.31944275 124.03528595]
[-93.02227783 129.18193054]
[-83.15647125 140.87008667]
[-68.37457275 138.32142639]
[-53.59268188 135.77278137]
[-42.61304474 115.48725128]
[-19.99633408 109.77853394]
[-0.27020860 122.70795441]
[14.02696323 118.17024231]
[28.32413483 113.63252258]
[42.62130737 109.09480286]
[56.91847610 104.55708313]
[59.88078308 100.78327942]
[65.25478363 98.84429169]
[71.78180695 100.11753845]
[86.22556305 96.07058716]
[96.13544464 86.20722961]
[109.72748566 89.48565674]
[124.17124176 85.43870544]
[138.57992554 81.26859283]
[152.95248413 76.97563171]
[167.32504272 72.68267822]
[181.69761658 68.38971710]
[196.07017517 64.09675598]
[198.08262634 56.79497147]
[202.47286987 50.70704269]
[208.65231323 46.56794357]
[215.82026672 44.85681534]
[223.06756592 45.74185181]
[229.49188232 49.06500244]
[234.31002808 54.36766815]
[248.99629211 51.31582642]
[263.68255615 48.26398468]
[269.12954712 38.81444550]
[278.68746948 34.03312302]
[289.07919312 35.28856659]
[296.88818359 41.92404175]
[311.67007446 39.37538528]
[326.45196533 36.82672882]
[341.23385620 34.27807617]
[353.51870728 24.30848503]
[367.37557983 29.77078629]
[382.15747070 27.22212982]
[396.93936157 24.67347527]
[411.72125244 22.12481880]
[426.50314331 19.57616234]
[434.00625610 3.09146404]
[449.75585938 -5.53010941]
[467.37487793 -3.01213264]
[479.85696411 9.45405197]
[494.54321289 6.40221214]
[509.22949219 3.35037208]
[523.91571045 0.29853183]
[531.70330811 -4.52213812]
[538.87872314 -2.67778659]
[553.61492920 -5.47844267]
[565.72778320 -15.65631866]
[579.67590332 -10.43139267]
[594.41210938 -13.23204899]
[609.14831543 -16.03270531]
[623.88458252 -18.83336067]
[632.56848145 -32.03808594]
[648.06280518 -35.15290070]
[661.17498779 -26.32984161]
[664.12579346 -10.80347061]
[655.16461182 2.21468949]
[639.60791016 5.00119591]
[626.68524170 -4.09713650]
[611.94897461 -1.29648030]
[597.21276855 1.50417590]
[582.47656250 4.30483198]
[571.41772461 14.28238583]
[556.41558838 9.25778198]
[541.67938232 12.05843830]
[526.96759033 14.98479271]
[512.28131104 18.03663254]
[497.59506226 21.08847427]
[482.90878296 24.14031410]
[479.60598755 35.85005569]
[471.58346558 45.09286118]
[460.32247925 50.06828308]
[447.94256592 49.77255249]
[436.80273438 44.20046616]
[429.05178833 34.35805511]
[414.26989746 36.90671158]
[399.48800659 39.45536804]
[384.70611572 42.00402451]
[369.92422485 44.55268097]
[358.69665527 54.33996964]
[343.78250122 49.05996704]
[329.00061035 51.60862350]
[314.21871948 54.15727997]
[299.43682861 56.70593643]
[285.54989624 70.14118958]
[266.73440552 62.95024872]
[252.04812622 66.00209045]
[237.36186218 69.05392456]
[222.37425232 85.76920319]
[200.36312866 78.46931458]
[185.99057007 82.76227570]
[171.61801147 87.05523682]
[157.24545288 91.34819794]
[142.87289429 95.64115906]
[137.35046387 100.57988739]
[128.21820068 99.88246155]
[113.77443695 103.92941284]
[103.86455536 113.79277039]
[90.27251434 110.51434326]
[75.82875824 114.56129456]
[61.45619583 118.85425568]
[47.15902328 123.39197540]
[32.86185455 127.92969513]
[18.56468201 132.46740723]
[4.26750946 137.00512695]
[3.62916255 144.33576965]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 73]
[10 72]
[11 71]
[16 66]
[17 65]
[18 64]
[20 63]
[21 62]
[22 61]
[25 60]
[26 59]
[27 58]
[31 54]
[32 53]
[33 52]
[34 51]
[36 49]
[37 48]
[38 47]
[76 182]
[77 181]
[78 180]
[79 179]
[80 178]
[83 177]
[84 176]
[86 174]
[87 173]
[88 171]
[89 170]
[90 169]
[91 168]
[92 167]
[99 165]
[100 164]
[101 163]
[105 161]
[106 160]
[107 159]
[108 158]
[110 156]
[111 155]
[112 154]
[113 153]
[114 152]
[118 146]
[119 145]
[120 144]
[121 143]
[123 142]
[124 141]
[126 139]
[127 138]
[128 137]
[129 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
