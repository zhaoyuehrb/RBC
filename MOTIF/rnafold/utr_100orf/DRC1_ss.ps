%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:33:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGGUUUGUUCCUAGCAACCAGCCUGAGGUCUGGAGGUGGUGCGGAGGGAGCCGCCUAGGGACCAGGGACUCCUGCCAUGAAUCCGCCGGGGUCCCUAGAGGCCCUGGACCCGAACGUGGACGAGCACUUGUCCACCCAGAUUCUCGCGCCCUCGGUCCACUCCGACAACUCUCAGG\
) } def
/len { sequence length } bind def

/coor [
[-36.15988159 497.80831909]
[-41.05615997 508.41586304]
[-50.37578964 515.26037598]
[-61.72431564 516.72741699]
[-68.09671021 530.30651855]
[-74.46910095 543.88562012]
[-80.84149170 557.46478271]
[-81.65992737 566.59234619]
[-87.44673157 571.22479248]
[-94.05645752 584.69000244]
[-100.66617584 598.15515137]
[-102.21798706 615.03796387]
[-118.87056732 618.22039795]
[-126.53853607 603.09960938]
[-114.13137817 591.54547119]
[-107.52165222 578.08026123]
[-100.91192627 564.61505127]
[-94.42061615 551.09234619]
[-88.04822540 537.51324463]
[-81.67583466 523.93414307]
[-75.30343628 510.35501099]
[-82.55741882 493.57031250]
[-75.13912201 476.50958252]
[-57.31618881 470.15359497]
[-51.42427063 456.35919189]
[-45.53235245 442.56478882]
[-39.64043427 428.77041626]
[-33.74851990 414.97601318]
[-27.85660172 401.18161011]
[-22.45241928 387.18893433]
[-17.54263115 373.01522827]
[-12.63284206 358.84152222]
[-13.41677189 351.47052002]
[-7.51051521 344.46347046]
[-2.35273576 330.37811279]
[2.80504394 316.29275513]
[7.96282339 302.20739746]
[7.30837584 294.82376099]
[13.33669567 287.92144775]
[18.74087715 273.92877197]
[24.14505959 259.93609619]
[23.62029457 252.54209900]
[29.76881981 245.74664307]
[35.41773987 231.85098267]
[33.04309464 217.14688110]
[45.40783310 207.27653503]
[51.05675125 193.38085938]
[56.70567322 179.48518372]
[62.35459137 165.58950806]
[68.00350952 151.69384766]
[65.62886810 136.98974609]
[77.99360657 127.11940002]
[83.64252472 113.22372437]
[71.09674835 76.29052734]
[68.21882629 61.56919861]
[54.29689026 47.01670074]
[61.28767395 29.00658226]
[57.89488602 14.39532089]
[54.50209427 -0.21594173]
[51.10930634 -14.82720375]
[47.71651840 -29.43846512]
[44.32372665 -44.04972839]
[39.32067871 -51.72775650]
[41.00199509 -58.94714737]
[37.86615372 -73.61570740]
[34.34527969 -88.19663239]
[30.44180489 -102.67982483]
[26.53833389 -117.16301727]
[22.63486099 -131.64620972]
[18.73138809 -146.12940979]
[14.82791615 -160.61259460]
[10.92444324 -175.09579468]
[7.02097082 -189.57899475]
[3.11749840 -204.06217957]
[-7.94446230 -215.37339783]
[-3.78577828 -229.67565918]
[-7.68925047 -244.15884399]
[-22.42176628 -248.73667908]
[-32.32307053 -260.56747437]
[-34.23369598 -275.87606812]
[-27.54396629 -289.77755737]
[-14.38855076 -297.83599854]
[1.03470445 -297.47998047]
[13.80429554 -288.82315063]
[19.84549332 -274.62780762]
[17.23057175 -259.42367554]
[6.79394293 -248.06231689]
[10.69741535 -233.57913208]
[21.48017311 -223.30384827]
[17.60069275 -207.96565247]
[21.50416374 -193.48245239]
[25.40763664 -178.99926758]
[29.31110954 -164.51606750]
[33.21458054 -150.03288269]
[37.11805344 -135.54968262]
[41.02152634 -121.06649017]
[44.92499924 -106.58329773]
[48.82847214 -92.10010529]
[51.71535873 -90.02826691]
[53.72968674 -86.44168854]
[54.16442108 -81.77166748]
[52.53470993 -76.75154114]
[55.67055130 -62.08298874]
[58.93498993 -47.44251633]
[62.32778168 -32.83125687]
[65.72056580 -18.21999359]
[69.11335754 -3.60873079]
[72.50614929 11.00253105]
[75.89893341 25.61379433]
[85.05177307 30.23608780]
[90.24475861 39.33177567]
[89.54399872 50.00244141]
[82.94015503 58.69127274]
[85.81807709 73.41259766]
[92.13071442 77.46237183]
[105.45774078 70.57831573]
[104.75598145 85.56191254]
[111.06861877 89.61168671]
[125.64954376 86.09081268]
[140.23046875 82.56993103]
[154.81140137 79.04905701]
[169.39231873 75.52818298]
[183.97325134 72.00730133]
[198.55418396 68.48642731]
[213.13510132 64.96555328]
[224.63630676 53.27563095]
[240.44062805 57.65237045]
[244.28991699 73.59335327]
[232.22436523 84.69986725]
[216.65597534 79.54647827]
[202.07505798 83.06735229]
[187.49412537 86.58823395]
[172.91319275 90.10910797]
[158.33227539 93.62998199]
[143.75134277 97.15086365]
[129.17042542 100.67173767]
[114.58949280 104.19261169]
[129.54356384 103.01965332]
[143.21815491 109.18449402]
[152.24142456 121.16701508]
[154.38838196 136.01257324]
[149.12963867 150.06054688]
[137.76191711 159.84701538]
[123.08824158 162.95880127]
[108.72685242 158.62863159]
[98.21896362 147.92422485]
[94.15562439 133.48506165]
[97.53819275 118.87264252]
[91.88927460 132.76831055]
[93.85987091 148.46632385]
[81.89918518 157.34275818]
[76.25026703 171.23843384]
[70.60134125 185.13410950]
[64.95242310 199.02978516]
[59.30350494 212.92544556]
[61.27410126 228.62345886]
[49.31341171 237.49989319]
[43.66449356 251.39556885]
[38.13772964 265.34027100]
[32.73354721 279.33294678]
[27.32936478 293.32562256]
[22.04818153 307.36517334]
[16.89040184 321.45053101]
[11.73262215 335.53588867]
[6.57484245 349.62124634]
[1.54086471 363.75131226]
[-3.36892414 377.92501831]
[-8.27871323 392.09872437]
[-7.28679514 396.39395142]
[-7.69027376 400.37484741]
[-9.21482944 403.63711548]
[-11.48200798 405.90890503]
[-14.06220722 407.07354736]
[-19.95412445 420.86791992]
[-25.84604073 434.66232300]
[-31.73795891 448.45672607]
[-37.62987518 462.25109863]
[-43.52179337 476.04550171]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 21]
[5 20]
[6 19]
[7 18]
[9 17]
[10 16]
[11 15]
[24 178]
[25 177]
[26 176]
[27 175]
[28 174]
[29 173]
[30 168]
[31 167]
[32 166]
[34 165]
[35 164]
[36 163]
[37 162]
[39 161]
[40 160]
[41 159]
[43 158]
[44 157]
[46 155]
[47 154]
[48 153]
[49 152]
[50 151]
[52 149]
[53 148]
[54 114]
[55 113]
[57 109]
[58 108]
[59 107]
[60 106]
[61 105]
[62 104]
[64 103]
[65 102]
[66 98]
[67 97]
[68 96]
[69 95]
[70 94]
[71 93]
[72 92]
[73 91]
[74 90]
[76 88]
[77 87]
[118 137]
[119 136]
[120 135]
[121 134]
[122 133]
[123 132]
[124 131]
[125 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
