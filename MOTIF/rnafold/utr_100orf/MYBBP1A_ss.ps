%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:18:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGACCUGGAAGCGGCUGGGGCCGGAGCACACGUGUUUCGUGUUUCGGUGAGUGUGGCGGAGAUGGAGAGCCGGGAUCCCGCCCAGCCGAUGUCGCCUGGAGAAGCGACGCAGAGUGGCGCCCGGCCUGCCGACCGCUAUGGCCUAUUGAAGCACAGUCGCG\
) } def
/len { sequence length } bind def

/coor [
[135.74945068 258.02911377]
[131.30775452 272.59588623]
[121.32032776 284.09246826]
[107.51753235 290.52694702]
[92.29079437 290.78457642]
[78.27824402 284.82067871]
[67.90762329 273.66851807]
[62.97572327 259.26034546]
[64.33701324 244.09237671]
[71.75564575 230.79261780]
[83.94630432 221.66529846]
[98.79687500 218.29180908]
[101.67004395 203.56954956]
[104.54321289 188.84729004]
[107.41638184 174.12503052]
[110.28955078 159.40277100]
[113.16272736 144.68051147]
[116.03589630 129.95825195]
[110.31645203 125.10665131]
[100.61306763 136.54537964]
[89.17450714 126.84180450]
[98.87757111 115.40345764]
[93.15812683 110.55186462]
[79.10158539 115.78766632]
[65.04505157 121.02347565]
[50.98850632 126.25928497]
[36.93196869 131.49508667]
[22.87542725 136.73089600]
[8.81888580 141.96670532]
[-1.20505023 154.94563293]
[-17.41873360 152.48626709]
[-23.14291763 137.11857605]
[-12.48905182 124.65153503]
[3.58307981 127.91015625]
[17.63961983 122.67435455]
[31.69616127 117.43854523]
[45.75270081 112.20274353]
[59.80924225 106.96693420]
[73.86578369 101.73113251]
[87.92232513 96.49532318]
[99.81528473 87.35434723]
[108.49114227 75.11795044]
[117.16700745 62.88154984]
[125.84286499 50.64514923]
[134.51872253 38.40874863]
[143.19458008 26.17234993]
[151.87043762 13.93594933]
[160.54629517 1.69954979]
[169.22215271 -10.53684998]
[177.89801025 -22.77325058]
[179.56813049 -38.50605774]
[193.24124146 -44.41327667]
[201.91709900 -56.64967728]
[203.18205261 -74.99812317]
[219.36412048 -81.73547363]
[227.80253601 -94.13680267]
[236.24096680 -106.53813171]
[244.67938232 -118.93946838]
[253.11781311 -131.34078979]
[261.55621338 -143.74212646]
[258.90017700 -154.35202026]
[262.47427368 -164.45559692]
[270.85949707 -170.77015686]
[281.11770630 -171.38735962]
[290.02777100 -183.45428467]
[298.93783569 -195.52119446]
[307.73120117 -207.67343140]
[316.40707397 -219.90982056]
[318.83560181 -228.76638794]
[325.36990356 -232.29626465]
[334.27999878 -244.36318970]
[343.19006348 -256.43011475]
[352.10012817 -268.49703979]
[361.01019287 -280.56396484]
[369.92028809 -292.63088989]
[370.25299072 -297.06988525]
[371.84570312 -300.78045654]
[374.30584717 -303.45117188]
[377.17944336 -304.93362427]
[380.01083374 -305.24838257]
[389.82382202 -316.59320068]
[399.63677979 -327.93804932]
[409.44976807 -339.28289795]
[402.68524170 -351.84460449]
[400.62701416 -365.93240356]
[403.50280762 -379.84576416]
[410.94610596 -391.91226196]
[422.04254150 -400.68859863]
[435.44235229 -405.13327026]
[449.52441406 -404.73013306]
[462.59237671 -399.54815674]
[472.62216187 -410.70178223]
[482.65197754 -421.85540771]
[492.68176270 -433.00900269]
[502.71154785 -444.16262817]
[512.74133301 -455.31625366]
[509.37384033 -470.46350098]
[515.58367920 -484.68383789]
[528.98303223 -492.50921631]
[544.41961670 -490.93066406]
[555.95770264 -480.55511475]
[559.16070557 -465.37222290]
[552.79699707 -451.22009277]
[539.31347656 -443.54052734]
[523.89495850 -445.28646851]
[513.86517334 -434.13284302]
[503.83538818 -422.97921753]
[493.80557251 -411.82559204]
[483.77578735 -400.67199707]
[473.74600220 -389.51837158]
[480.79162598 -375.34838867]
[481.87249756 -359.52185059]
[476.79418945 -344.45263672]
[466.30398560 -332.45053101]
[451.98101807 -325.36703491]
[435.99862671 -324.30990601]
[420.79461670 -329.46994019]
[410.98162842 -318.12509155]
[401.16867065 -306.78024292]
[391.35568237 -295.43539429]
[381.98721313 -283.72079468]
[373.07711792 -271.65386963]
[364.16705322 -259.58697510]
[355.25698853 -247.52003479]
[346.34692383 -235.45310974]
[337.43682861 -223.38619995]
[328.64346313 -211.23396301]
[319.96762085 -198.99757385]
[318.65789795 -191.68716431]
[311.00476074 -186.61112976]
[302.09469604 -174.54420471]
[293.18460083 -162.47727966]
[292.47860718 -143.18190002]
[273.95755005 -135.30371094]
[265.51913452 -122.90237427]
[257.08071899 -110.50104523]
[248.64228821 -98.09970856]
[240.20387268 -85.69837952]
[231.76544189 -73.29705048]
[233.71295166 -61.32789993]
[226.74340820 -50.91751099]
[214.15350342 -47.97381973]
[205.47763062 -35.73741913]
[204.42808533 -20.87983704]
[190.13441467 -14.09739113]
[181.45855713 -1.86099136]
[172.78269958 10.37540817]
[164.10684204 22.61180878]
[155.43098450 34.84820938]
[146.75512695 47.08460617]
[138.07926941 59.32100677]
[129.40339661 71.55740356]
[120.72754669 83.79380798]
[112.05168915 96.03020477]
[130.75814819 132.83142090]
[127.88497925 147.55368042]
[125.01181030 162.27593994]
[122.13864136 176.99819946]
[119.26547241 191.72045898]
[116.39230347 206.44271851]
[113.51912689 221.16497803]
[126.01155853 229.87467957]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 161]
[13 160]
[14 159]
[15 158]
[16 157]
[17 156]
[18 155]
[23 40]
[24 39]
[25 38]
[26 37]
[27 36]
[28 35]
[29 34]
[41 154]
[42 153]
[43 152]
[44 151]
[45 150]
[46 149]
[47 148]
[48 147]
[49 146]
[50 145]
[52 143]
[53 142]
[55 139]
[56 138]
[57 137]
[58 136]
[59 135]
[60 134]
[64 132]
[65 131]
[66 130]
[67 128]
[68 127]
[70 126]
[71 125]
[72 124]
[73 123]
[74 122]
[75 121]
[80 120]
[81 119]
[82 118]
[83 117]
[91 110]
[92 109]
[93 108]
[94 107]
[95 106]
[96 105]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
