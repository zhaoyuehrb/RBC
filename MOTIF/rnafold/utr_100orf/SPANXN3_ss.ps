%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:33:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCCCACUGGGAAGCUUCAACAUAGCUGUGGAAGUCUGCAGUCUACAGGAGCCUACUAUAGACAUUCUACAACCAACCAGAAUCAUGGAACAGCCAACUUCCAGCACCAAUGGGGAGAAGACGAAGAGCCCCUGUGAAUCCAAUAACAAAAAAAAUGAUGAGAUGCAAGAGGUACCAAACAGAG\
) } def
/len { sequence length } bind def

/coor [
[211.57859802 187.88919067]
[211.83671570 173.27539062]
[214.95211792 158.99009705]
[201.23171997 152.92785645]
[187.51132202 146.86561584]
[173.79092407 140.80337524]
[159.02235413 142.73690796]
[149.52645874 130.08232117]
[135.80607605 124.02008820]
[122.08567810 117.95783997]
[112.49742889 125.57489777]
[100.59629822 128.45884705]
[88.58480835 126.07594299]
[79.16150665 137.74647522]
[69.73821259 149.41700745]
[60.31491089 161.08755493]
[63.49777603 176.39778137]
[56.04927063 190.14746094]
[41.48634338 195.84442139]
[26.68516731 190.79870605]
[18.63440514 177.39276123]
[21.13537979 161.95646667]
[33.00720596 151.77836609]
[48.64437485 151.66424561]
[58.06767273 139.99371338]
[67.49097443 128.32318115]
[76.91427612 116.65264130]
[71.70814514 103.13560486]
[73.82807922 88.80662537]
[62.07795334 79.48275757]
[50.32782745 70.15888214]
[38.57770157 60.83501434]
[26.82757378 51.51114655]
[15.07744789 42.18727493]
[3.32732224 32.86340714]
[-12.16567802 34.47731018]
[-23.94915581 24.85419655]
[-25.39228821 10.07404327]
[-37.14241409 0.75017381]
[-63.61568832 8.37945938]
[-87.65883636 -14.45222187]
[-102.37371063 -17.36296082]
[-117.08859253 -20.27369881]
[-131.80346680 -23.18443871]
[-146.51834106 -26.09517670]
[-161.55761719 -21.18286324]
[-172.54154968 -31.24280739]
[-187.25642395 -34.15354538]
[-199.32731628 -24.21234894]
[-214.96368408 -24.40766716]
[-226.78250122 -34.64727783]
[-229.20329285 -50.09634781]
[-221.08302307 -63.46030426]
[-206.25584412 -68.42909241]
[-191.72270203 -62.65659714]
[-184.34568787 -48.86842346]
[-169.63081360 -45.95768356]
[-155.64404297 -51.07819366]
[-143.60760498 -40.81005478]
[-128.89273071 -37.89931488]
[-114.17784882 -34.98857498]
[-99.46297455 -32.07783890]
[-84.74809265 -29.16709900]
[-79.84101868 -34.83900833]
[-91.35905457 -44.44811249]
[-102.87709045 -54.05721283]
[-114.39512634 -63.66631317]
[-125.91316223 -73.27541351]
[-139.34539795 -79.95186615]
[-137.76374817 -94.86824799]
[-123.23007202 -98.57933044]
[-114.69068909 -86.24705505]
[-103.52473450 -76.23100281]
[-92.35877228 -66.21494293]
[-81.19281769 -56.19888687]
[-70.02686310 -46.18283081]
[-65.11978149 -51.85474396]
[-70.11687469 -65.99790192]
[-75.11397552 -80.14106750]
[-89.48014069 -86.72808075]
[-94.90243530 -101.57308960]
[-88.16390228 -115.86881256]
[-73.26239014 -121.13385010]
[-59.03871155 -114.24455261]
[-53.93151474 -99.28820801]
[-60.97081375 -85.13816071]
[-55.97371674 -70.99500275]
[-50.97661972 -56.85184097]
[-38.01408768 -51.86759949]
[-28.63739777 -42.86776352]
[-23.85114288 -31.74587631]
[-23.79757118 -20.52434540]
[-27.81854439 -10.99995232]
[-16.06841850 -1.67608273]
[-1.34701097 -3.62947464]
[10.70210934 5.65886974]
[12.65119171 21.11328125]
[24.40131760 30.43715096]
[36.15144348 39.76102066]
[47.90156937 49.08488846]
[59.65169525 58.40876007]
[71.40182495 67.73262787]
[83.15194702 77.05649567]
[98.71971893 71.56372070]
[114.71810913 75.63530731]
[125.76615143 87.90180206]
[128.14791870 104.23744965]
[141.86831665 110.29969025]
[155.58869934 116.36193085]
[171.33865356 114.86200714]
[179.85317993 127.08298492]
[193.57356262 133.14523315]
[207.29396057 139.20747375]
[221.01435852 145.26971436]
[230.05056763 132.69812012]
[241.49133301 122.27545166]
[254.83851624 114.45232391]
[269.51162720 109.56626892]
[284.87310791 107.82714081]
[300.25595093 109.30808258]
[314.99270630 113.94249725]
[328.44451904 121.52700806]
[340.02868652 131.73039246]
[349.24392700 144.10804749]
[355.69223022 158.12135315]
[359.09579468 173.16111755]
[359.30920410 188.57408142]
[356.32553101 203.69125366]
[370.14688110 209.51963806]
[383.96823120 215.34802246]
[399.69046021 213.58087158]
[408.41125488 225.65550232]
[422.23263550 231.48388672]
[431.37918091 231.93841553]
[436.23785400 237.53038025]
[449.95825195 243.59262085]
[465.70819092 242.09269714]
[474.22271729 254.31367493]
[487.94311523 260.37591553]
[501.66351318 266.43814087]
[515.43487549 272.38366699]
[529.25622559 278.21206665]
[539.54980469 267.08471680]
[553.02984619 260.15179443]
[568.06848145 258.25048828]
[582.84979248 261.61041260]
[595.58880615 269.82580566]
[604.74725342 281.90463257]
[609.21923828 296.38833618]
[608.46472168 311.52789307]
[602.57482910 325.49517822]
[592.26074219 336.60351562]
[578.76800537 343.51159668]
[563.72589111 345.38516235]
[548.95080566 341.99801636]
[536.22692871 333.75915527]
[527.09069824 321.66348267]
[522.64544678 307.17156982]
[523.42785645 292.03341675]
[509.60647583 286.20504761]
[502.20462036 286.50375366]
[495.60125732 280.15853882]
[481.88085938 274.09631348]
[468.16046143 268.03405762]
[453.39190674 269.96759033]
[443.89599609 257.31301880]
[430.17559814 251.25076294]
[416.40423584 245.30523682]
[402.58288574 239.47685242]
[387.84927368 241.66088867]
[378.13986206 229.16938782]
[364.31851196 223.34100342]
[350.49713135 217.51261902]
[342.31130981 229.54319763]
[331.92489624 239.74174500]
[319.73858643 247.71211243]
[306.22299194 253.14413452]
[291.90057373 255.82575989]
[277.32534790 255.65127563]
[263.06149292 252.62547302]
[249.66154480 246.86358643]
[237.64494324 238.58683777]
[227.47793579 228.11399841]
[219.55545044 215.84909058]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 114]
[4 113]
[5 112]
[6 111]
[8 109]
[9 108]
[10 107]
[13 27]
[14 26]
[15 25]
[16 24]
[29 103]
[30 102]
[31 101]
[32 100]
[33 99]
[34 98]
[35 97]
[38 94]
[39 93]
[41 63]
[42 62]
[43 61]
[44 60]
[45 59]
[47 57]
[48 56]
[77 88]
[78 87]
[79 86]
[128 173]
[129 172]
[130 171]
[132 169]
[133 168]
[135 167]
[136 166]
[138 164]
[139 163]
[140 162]
[141 160]
[142 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
