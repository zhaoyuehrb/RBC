%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:16:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGCCCGGCGGAGCCCUGCAGAACCCGGCCGACCUCCAUGGGCUGCGGGGGGCUGCACCCGGACCCCUGGGGCGCGGCGCGCCCCUGAAUGCACCGUGGGACGCAGGAGGGUGCCAUGGCCUCCCGGCUCCUGCACCGGCUGCGGCACGCCUUGGCCGGCGACGGCCCCGGGGAGGCGGCGGCCAGUC\
) } def
/len { sequence length } bind def

/coor [
[206.71437073 205.31205750]
[206.94805908 188.40786743]
[194.81280518 179.59109497]
[182.67755127 170.77432251]
[170.54229736 161.95753479]
[158.40704346 153.14076233]
[151.13459778 151.75016785]
[146.14566040 144.07652283]
[134.15783691 135.06030273]
[119.33560944 133.59373474]
[112.95742035 119.11515808]
[100.96960449 110.09893799]
[93.13195801 108.15051270]
[88.85975647 100.83321381]
[77.02265167 91.62002563]
[65.18553925 82.40682983]
[49.54291916 80.03640747]
[44.25166321 66.11333466]
[32.41455460 56.90014648]
[21.10819054 60.64350891]
[9.51881123 58.47802734]
[0.51223224 51.05712509]
[-3.74154186 40.31898117]
[-2.29057813 28.98144341]
[-13.81659508 19.38191414]
[-25.34261131 9.78238678]
[-36.86862946 0.18285877]
[-49.77266312 0.57280064]
[-59.17726135 -7.67493153]
[-60.39315414 -19.72154236]
[-71.75887299 -29.51032829]
[-87.30168152 -23.89503860]
[-103.46382141 -26.86203957]
[-115.85636139 -37.50946426]
[-121.16257477 -52.86294556]
[-118.02529907 -68.70602417]
[-129.55131531 -78.30554962]
[-141.07733154 -87.90507507]
[-152.60334778 -97.50460815]
[-164.12936401 -107.10413361]
[-175.65538025 -116.70365906]
[-187.18139648 -126.30319214]
[-198.78639221 -135.80709839]
[-210.46954346 -145.21475220]
[-227.81558228 -143.01614380]
[-241.12857056 -153.82321167]
[-242.48782349 -170.57788086]
[-254.32493591 -179.79107666]
[-266.16204834 -189.00425720]
[-277.99914551 -198.21745300]
[-289.83627319 -207.43064880]
[-301.67337036 -216.64382935]
[-313.73532104 -225.56063843]
[-326.01467896 -234.17556763]
[-338.29406738 -242.79049683]
[-350.57342529 -251.40542603]
[-362.85281372 -260.02035522]
[-381.22033691 -261.20776367]
[-388.01168823 -277.38107300]
[-400.43182373 -285.79180908]
[-412.85195923 -294.20251465]
[-425.27209473 -302.61325073]
[-437.69223022 -311.02398682]
[-454.07913208 -311.65765381]
[-461.48339844 -326.29010010]
[-452.28814697 -339.86874390]
[-435.95266724 -338.42501831]
[-429.28149414 -323.44412231]
[-416.86135864 -315.03338623]
[-404.44122314 -306.62265015]
[-392.02111816 -298.21194458]
[-379.60098267 -289.80120850]
[-367.65554810 -291.77755737]
[-357.23565674 -284.85678101]
[-354.23788452 -272.29974365]
[-341.95849609 -263.68478394]
[-329.67913818 -255.06987000]
[-317.39974976 -246.45494080]
[-305.12039185 -237.84001160]
[-301.58663940 -238.09457397]
[-297.75457764 -236.63885498]
[-294.43460083 -233.35176086]
[-292.46017456 -228.48094177]
[-280.62307739 -219.26774597]
[-268.78594971 -210.05456543]
[-256.94885254 -200.84136963]
[-245.11174011 -191.62817383]
[-233.27464294 -182.41499329]
[-220.82638550 -185.78242493]
[-208.52992249 -181.29299927]
[-200.95756531 -170.37728882]
[-201.06190491 -156.89790344]
[-189.37873840 -147.49026489]
[-182.18418884 -145.74078369]
[-177.58187866 -137.82920837]
[-166.05586243 -128.22967529]
[-154.52984619 -118.63014984]
[-143.00382996 -109.03062439]
[-131.47779846 -99.43109131]
[-119.95178986 -89.83156586]
[-108.42577362 -80.23204041]
[-95.93893433 -85.78705597]
[-82.21107483 -85.41443634]
[-69.92608643 -79.12995148]
[-61.51037979 -68.11073303]
[-58.65370560 -54.47523880]
[-61.97008896 -40.87605286]
[-50.60436630 -31.08726501]
[-33.21794128 -28.76116562]
[-27.26910019 -11.34315777]
[-15.74308300 -1.74362981]
[-4.21706676 7.85589838]
[7.30894995 17.45542717]
[25.39166451 14.68852139]
[40.01630402 26.20071030]
[41.62774658 45.06303787]
[53.46485138 54.27622986]
[68.26080322 55.98766327]
[74.39873505 70.56972504]
[86.23583984 79.78291321]
[98.07295227 88.99610138]
[109.98581696 98.11112213]
[121.97364044 107.12733459]
[137.65332031 109.23880005]
[143.17405701 123.07248688]
[155.16188049 132.08869934]
[167.22383118 141.00550842]
[179.35908508 149.82228088]
[191.49433899 158.63906860]
[203.62959290 167.45584106]
[215.76484680 176.27261353]
[228.53076172 171.04743958]
[242.10325623 172.80316162]
[252.94636536 180.97442627]
[258.28863525 193.33862305]
[256.83114624 206.61955261]
[268.81896973 215.63577271]
[284.49865723 217.74723816]
[290.01937866 231.58091736]
[302.00720215 240.59713745]
[313.99502563 249.61335754]
[325.98284912 258.62957764]
[337.97067261 267.64578247]
[349.95849609 276.66201782]
[365.63815308 278.77346802]
[371.15890503 292.60714722]
[383.14672852 301.62338257]
[397.91223145 297.23178101]
[412.26464844 302.31719971]
[420.76989746 314.73187256]
[420.33917236 329.59634399]
[432.32699585 338.61257935]
[444.31478882 347.62878418]
[462.63302612 349.42285156]
[468.88592529 365.81185913]
[481.02117920 374.62863159]
[493.15643311 383.44540405]
[505.29168701 392.26220703]
[517.42694092 401.07897949]
[533.78393555 402.25408936]
[540.70037842 417.12338257]
[531.06115723 430.39056396]
[514.78234863 428.40750122]
[508.61016846 413.21423340]
[496.47491455 404.39746094]
[484.33966064 395.58065796]
[472.20440674 386.76388550]
[460.06915283 377.94711304]
[448.06491089 379.52743530]
[437.87954712 372.26589966]
[435.29858398 359.61660767]
[423.31076050 350.60040283]
[411.32293701 341.58416748]
[397.16134644 346.12145996]
[382.87451172 341.39385986]
[374.00726318 329.01544189]
[374.13049316 313.61117554]
[362.14266968 304.59497070]
[347.32046509 303.12841797]
[340.94226074 288.64981079]
[328.95443726 279.63360596]
[316.96661377 270.61740112]
[304.97882080 261.60116577]
[292.99099731 252.58496094]
[281.00317383 243.56874084]
[266.18093872 242.10217285]
[259.80276489 227.62359619]
[247.81494141 218.60737610]
[232.29214478 223.92251587]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 131]
[3 130]
[4 129]
[5 128]
[6 127]
[8 126]
[9 125]
[11 123]
[12 122]
[14 121]
[15 120]
[16 119]
[18 117]
[19 116]
[24 113]
[25 112]
[26 111]
[27 110]
[30 108]
[31 107]
[36 101]
[37 100]
[38 99]
[39 98]
[40 97]
[41 96]
[42 95]
[43 93]
[44 92]
[47 88]
[48 87]
[49 86]
[50 85]
[51 84]
[52 83]
[53 79]
[54 78]
[55 77]
[56 76]
[57 75]
[59 72]
[60 71]
[61 70]
[62 69]
[63 68]
[136 188]
[137 187]
[139 185]
[140 184]
[141 183]
[142 182]
[143 181]
[144 180]
[146 178]
[147 177]
[151 173]
[152 172]
[153 171]
[155 168]
[156 167]
[157 166]
[158 165]
[159 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
