%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:13:09 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PTCH2)
} def

/sequence { (\
AUCCCCGCCAGCAUGACUCGAUCGCCGCCCCUCAGAGAGCUGCCCCCGAGUUACACACCCCCAGCUCGAACCGCAGCACCCCAGAUCCUAGCUGGGAGCCUGAAGGCUCCAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 22 0.014589463 ubox
1 86 0.006364431 ubox
2 16 0.009827165 ubox
2 21 0.017138812 ubox
2 36 0.015264451 ubox
2 38 0.008544326 ubox
2 85 0.007465721 ubox
2 97 0.024872148 ubox
3 15 0.010714795 ubox
3 20 0.017523454 ubox
3 35 0.016277305 ubox
3 37 0.009097993 ubox
3 84 0.007644539 ubox
3 94 0.008433399 ubox
3 95 0.006700343 ubox
3 96 0.037742324 ubox
3 106 0.003850462 ubox
4 94 0.010892619 ubox
4 95 0.044968164 ubox
4 96 0.016380245 ubox
4 105 0.003875546 ubox
4 106 0.006404439 ubox
5 94 0.056160903 ubox
5 95 0.021276749 ubox
5 96 0.006753610 ubox
5 105 0.006351700 ubox
5 106 0.024136257 ubox
6 15 0.028549059 ubox
6 20 0.039417302 ubox
6 24 0.011462038 ubox
6 27 0.019488642 ubox
6 68 0.015304027 ubox
6 94 0.028066069 ubox
6 95 0.006398299 ubox
6 105 0.024361590 ubox
7 14 0.021174957 ubox
7 19 0.039276775 ubox
7 23 0.011672969 ubox
7 25 0.042105511 ubox
7 26 0.023790270 ubox
7 28 0.120504708 ubox
7 43 0.014002890 ubox
7 65 0.004001170 ubox
7 67 0.015242757 ubox
7 92 0.077539686 ubox
7 93 0.008718491 ubox
7 107 0.083732802 ubox
8 24 0.042344652 ubox
8 27 0.120599179 ubox
8 42 0.009952667 ubox
8 64 0.004004779 ubox
8 91 0.077706156 ubox
8 95 0.531987632 ubox
8 106 0.083825282 ubox
9 15 0.038182247 ubox
9 42 0.014112544 ubox
9 94 0.957907326 ubox
9 102 0.025679231 ubox
9 105 0.083508638 ubox
10 14 0.031022312 ubox
10 18 0.032155493 ubox
10 41 0.017298707 ubox
10 66 0.017458219 ubox
10 89 0.069750126 ubox
10 93 0.959364713 ubox
10 101 0.027709368 ubox
10 108 0.005702110 ubox
11 17 0.034269421 ubox
11 25 0.175868940 ubox
11 28 0.049151724 ubox
11 40 0.017348806 ubox
11 43 0.007263621 ubox
11 65 0.018756710 ubox
11 77 0.003460237 ubox
11 88 0.070643487 ubox
11 92 0.959761730 ubox
11 99 0.023395977 ubox
11 100 0.021521448 ubox
11 107 0.005957450 ubox
12 24 0.175985107 ubox
12 27 0.049223444 ubox
12 39 0.017298037 ubox
12 42 0.007280423 ubox
12 64 0.018731769 ubox
12 76 0.003452838 ubox
12 91 0.958564402 ubox
12 94 0.006848173 ubox
12 98 0.029147941 ubox
12 102 0.055762509 ubox
12 106 0.005814294 ubox
13 22 0.150181836 ubox
13 41 0.007101745 ubox
13 86 0.052969598 ubox
13 93 0.006577170 ubox
13 101 0.050302509 ubox
14 20 0.026481381 ubox
14 21 0.151557341 ubox
14 24 0.100387145 ubox
14 27 0.019425716 ubox
14 34 0.155059295 ubox
14 53 0.229636654 ubox
14 55 0.015217066 ubox
14 57 0.007608836 ubox
14 63 0.008119263 ubox
14 83 0.050910668 ubox
14 85 0.051678349 ubox
14 90 0.274575373 ubox
14 111 0.026081217 ubox
15 19 0.038186550 ubox
15 23 0.145043445 ubox
15 26 0.028137557 ubox
15 33 0.172611058 ubox
15 52 0.259299355 ubox
15 54 0.016528418 ubox
15 56 0.008248564 ubox
15 62 0.007829365 ubox
15 82 0.052503276 ubox
15 87 0.268140494 ubox
15 89 0.255495993 ubox
15 109 0.009942439 ubox
15 110 0.029798354 ubox
16 22 0.137157811 ubox
16 32 0.168309537 ubox
16 51 0.263157803 ubox
16 86 0.251459896 ubox
16 108 0.007798077 ubox
17 35 0.055966470 ubox
17 37 0.818033632 ubox
17 39 0.034490011 ubox
17 50 0.263683714 ubox
17 84 0.092206801 ubox
17 91 0.015872945 ubox
17 98 0.007898728 ubox
18 34 0.055743999 ubox
18 36 0.823093098 ubox
18 38 0.090585168 ubox
18 49 0.263652928 ubox
18 83 0.085236101 ubox
18 85 0.125479011 ubox
18 90 0.029185279 ubox
18 97 0.007719417 ubox
19 27 0.206833934 ubox
19 35 0.823372610 ubox
19 37 0.094853739 ubox
19 48 0.263676142 ubox
19 84 0.126839425 ubox
19 96 0.006127479 ubox
20 26 0.213883099 ubox
20 33 0.453993967 ubox
20 47 0.262031098 ubox
20 87 0.271619009 ubox
20 109 0.017589315 ubox
21 32 0.434144487 ubox
21 86 0.272251281 ubox
21 108 0.017282037 ubox
22 36 0.122574467 ubox
22 38 0.093181276 ubox
22 85 0.272362804 ubox
23 35 0.130858058 ubox
23 37 0.099807136 ubox
23 42 0.003199445 ubox
23 84 0.272015649 ubox
23 94 0.003707443 ubox
24 40 0.003922740 ubox
24 43 0.257961389 ubox
24 77 0.062117878 ubox
24 92 0.010785355 ubox
24 107 0.024692458 ubox
25 39 0.004031852 ubox
25 42 0.257819956 ubox
25 76 0.062148632 ubox
25 91 0.010811490 ubox
25 106 0.024634084 ubox
26 42 0.014053800 ubox
26 105 0.024492339 ubox
27 40 0.255562151 ubox
27 41 0.015692158 ubox
27 43 0.051435991 ubox
27 74 0.061877409 ubox
27 77 0.022371849 ubox
27 92 0.006552643 ubox
27 99 0.005072111 ubox
27 107 0.171195437 ubox
28 39 0.252292257 ubox
28 42 0.051499645 ubox
28 73 0.061841728 ubox
28 76 0.022225863 ubox
28 91 0.006559895 ubox
28 98 0.005069251 ubox
28 106 0.168292050 ubox
29 105 0.164858945 ubox
29 106 0.063647286 ubox
30 105 0.071715770 ubox
30 106 0.051166804 ubox
31 37 0.210495105 ubox
31 39 0.083855513 ubox
31 76 0.003642291 ubox
31 84 0.040655046 ubox
31 91 0.006589282 ubox
31 105 0.051942908 ubox
32 36 0.190250861 ubox
32 38 0.167927410 ubox
32 69 0.044465614 ubox
32 75 0.003495652 ubox
32 83 0.040531649 ubox
32 85 0.036011004 ubox
32 90 0.008005819 ubox
32 103 0.186384369 ubox
32 104 0.037299677 ubox
33 37 0.171423840 ubox
33 42 0.010736770 ubox
33 68 0.045264873 ubox
33 84 0.038043754 ubox
33 94 0.022160917 ubox
33 102 0.193826429 ubox
34 41 0.011659088 ubox
34 89 0.027626300 ubox
34 93 0.022208345 ubox
34 101 0.193690710 ubox
35 40 0.011628642 ubox
35 67 0.004497706 ubox
35 87 0.017027139 ubox
35 88 0.029742803 ubox
35 92 0.022179069 ubox
35 100 0.193094853 ubox
35 109 0.007961163 ubox
36 66 0.003762434 ubox
36 86 0.017121088 ubox
36 89 0.009522185 ubox
36 101 0.003987200 ubox
36 108 0.006460639 ubox
37 67 0.064969519 ubox
37 87 0.035463356 ubox
37 88 0.009225160 ubox
37 100 0.004797601 ubox
37 107 0.004305445 ubox
37 109 0.006864823 ubox
38 66 0.065058424 ubox
38 86 0.035700170 ubox
38 89 0.016183202 ubox
38 108 0.004966512 ubox
39 65 0.065144640 ubox
39 77 0.959618322 ubox
39 88 0.007530050 ubox
40 64 0.065162776 ubox
40 76 0.961988789 ubox
41 63 0.065107352 ubox
41 75 0.961817393 ubox
42 51 0.003385259 ubox
42 62 0.064609735 ubox
42 74 0.962043777 ubox
43 50 0.006416927 ubox
43 73 0.960864894 ubox
47 68 0.956390322 ubox
48 67 0.962334741 ubox
49 66 0.962242109 ubox
50 56 0.026180656 ubox
50 58 0.014083883 ubox
50 65 0.962320279 ubox
51 55 0.023695072 ubox
51 57 0.013672136 ubox
51 64 0.957121771 ubox
52 63 0.862651094 ubox
60 96 0.030642109 ubox
61 95 0.037906432 ubox
62 94 0.048803652 ubox
63 93 0.048893987 ubox
64 74 0.034766840 ubox
64 77 0.255006300 ubox
64 92 0.048907794 ubox
65 73 0.034785697 ubox
65 76 0.255268667 ubox
65 91 0.048898127 ubox
66 75 0.253911884 ubox
66 85 0.010303330 ubox
66 90 0.046087351 ubox
67 73 0.235472438 ubox
67 84 0.012479542 ubox
68 72 0.220482758 ubox
68 87 0.034322564 ubox
69 86 0.032479247 ubox
71 106 0.003270610 ubox
72 105 0.003279954 ubox
74 94 0.031570523 ubox
74 102 0.006107043 ubox
75 89 0.007021150 ubox
75 93 0.031717662 ubox
75 101 0.006185792 ubox
76 88 0.007138137 ubox
76 92 0.031746012 ubox
76 99 0.006125451 ubox
76 100 0.005530107 ubox
77 91 0.031718916 ubox
77 98 0.006828498 ubox
79 96 0.013118632 ubox
80 95 0.011895320 ubox
80 96 0.223534700 ubox
81 94 0.009799183 ubox
81 95 0.236089712 ubox
82 94 0.255988300 ubox
82 102 0.014508816 ubox
83 89 0.157659060 ubox
83 93 0.256128970 ubox
83 101 0.014550447 ubox
84 88 0.162353395 ubox
84 92 0.255600529 ubox
84 100 0.014518014 ubox
86 97 0.015082504 ubox
87 94 0.003699517 ubox
87 95 0.006747819 ubox
87 96 0.015232232 ubox
88 94 0.011054226 ubox
88 95 0.015236286 ubox
89 94 0.014287037 ubox
93 111 0.012138386 ubox
94 110 0.012106549 ubox
95 109 0.009237451 ubox
95 110 0.809322858 ubox
96 108 0.004401568 ubox
96 109 0.971987176 ubox
97 108 0.976856432 ubox
98 107 0.977956220 ubox
99 106 0.977937996 ubox
100 105 0.974742811 ubox
100 106 0.006547146 ubox
101 105 0.008329164 ubox
9 94 0.9500000 lbox
10 93 0.9500000 lbox
11 92 0.9500000 lbox
12 91 0.9500000 lbox
17 37 0.9500000 lbox
18 36 0.9500000 lbox
19 35 0.9500000 lbox
39 77 0.9500000 lbox
40 76 0.9500000 lbox
41 75 0.9500000 lbox
42 74 0.9500000 lbox
43 73 0.9500000 lbox
47 68 0.9500000 lbox
48 67 0.9500000 lbox
49 66 0.9500000 lbox
50 65 0.9500000 lbox
51 64 0.9500000 lbox
52 63 0.9500000 lbox
95 110 0.9500000 lbox
96 109 0.9500000 lbox
97 108 0.9500000 lbox
98 107 0.9500000 lbox
99 106 0.9500000 lbox
100 105 0.9500000 lbox
showpage
end
%%EOF
