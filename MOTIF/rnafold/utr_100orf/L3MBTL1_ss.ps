%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:21:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGGCGCGCGGCGCCCGGCUCGGACCGUAGCUAGGCGCUGGGCGGCCACCGGCUGGCCAGGCAGGGGAGGUCAGCAUGCACUUGGUGGCCGGAGACAGCCCCGGUUCUGGUCCUCACCUGCCCGCAACUGCCUUCAUCAUUCCAGCCAGUUCGGCCACCCUCGGCCUGCCCAGCA\
) } def
/len { sequence length } bind def

/coor [
[101.75087738 186.93817139]
[100.15647888 172.02316284]
[98.56207275 157.10813904]
[96.96767426 142.19311523]
[95.37327576 127.27809143]
[93.77886963 112.36306763]
[79.95919037 106.53070831]
[68.16091919 115.79357147]
[62.08434296 130.40130615]
[47.29571533 132.17492676]
[35.49744034 141.43778992]
[23.69916725 150.70066833]
[11.90089417 159.96353149]
[0.10262079 169.22639465]
[-11.69565296 178.48927307]
[-23.49392509 187.75213623]
[-29.57049942 202.35987854]
[-44.35912704 204.13348389]
[-56.15740204 213.39636230]
[-67.95567322 222.65922546]
[-79.75395203 231.92210388]
[-91.46955109 241.28930664]
[-103.10157013 250.76011658]
[-111.56672668 265.44949341]
[-128.02540588 261.38156128]
[-128.67269897 244.43998718]
[-112.57238007 239.12809753]
[-100.94036102 229.65728760]
[-97.72859192 222.97483826]
[-89.01681519 220.12382507]
[-77.21854401 210.86096191]
[-65.42027283 201.59808350]
[-53.62199783 192.33522034]
[-48.38931656 178.39002991]
[-32.75679398 175.95387268]
[-20.95852089 166.69099426]
[-9.16024876 157.42813110]
[2.63802481 148.16525269]
[14.43629837 138.90238953]
[26.23457146 129.63952637]
[38.03284454 120.37664795]
[43.26552582 106.43146515]
[58.89804840 103.99530029]
[70.69631958 94.73242950]
[98.92244720 82.14812469]
[105.36208344 68.60076141]
[111.80172729 55.05339813]
[118.24136353 41.50603485]
[124.43954468 27.84651375]
[130.39431763 14.07913685]
[128.77128601 -1.65859985]
[140.92532349 -10.26841736]
[146.88009644 -24.03579330]
[152.83486938 -37.80316925]
[158.78964233 -51.57054520]
[164.74441528 -65.33792114]
[170.69918823 -79.10530090]
[152.29776001 -88.20066071]
[145.13328552 -106.19515991]
[151.45433044 -123.27345276]
[166.56288147 -131.18205261]
[168.42175293 -146.06642151]
[170.28062439 -160.95079041]
[172.13948059 -175.83517456]
[173.99835205 -190.71954346]
[175.85722351 -205.60392761]
[169.88973999 -220.25656128]
[179.14460754 -231.92687988]
[181.00347900 -246.81126404]
[182.86235046 -261.69564819]
[184.72120667 -276.58001709]
[186.44790649 -291.48028564]
[188.04231262 -306.39532471]
[189.63671875 -321.31033325]
[191.23112488 -336.22537231]
[181.53402710 -324.78131104]
[167.87411499 -318.58401489]
[152.87603760 -318.82424927]
[139.42160034 -325.45587158]
[130.09602356 -337.20465088]
[126.69116211 -351.81307983]
[129.86123657 -366.47427368]
[138.99713135 -378.37115479]
[152.34342957 -385.21777344]
[167.33572388 -385.69857788]
[181.09330750 -379.72122192]
[190.97274780 -368.43420410]
[195.07591248 -354.00317383]
[199.78706360 -368.24411011]
[204.49821472 -382.48507690]
[209.20936584 -396.72604370]
[213.92051697 -410.96701050]
[218.63166809 -425.20797729]
[209.46890259 -437.73089600]
[209.45053101 -453.24795532]
[218.58360291 -465.79254150]
[233.35627747 -470.54098511]
[248.08815002 -465.66744995]
[257.11453247 -453.04586792]
[256.96456909 -437.52951050]
[247.69595337 -425.08474731]
[232.87263489 -420.49682617]
[228.16148376 -406.25585938]
[223.45033264 -392.01489258]
[218.73918152 -377.77392578]
[214.02803040 -363.53295898]
[209.31687927 -349.29202271]
[206.14613342 -334.63095093]
[204.55174255 -319.71594238]
[202.95733643 -304.80090332]
[201.36293030 -289.88589478]
[203.78601074 -282.87878418]
[199.60559082 -274.72113037]
[197.74671936 -259.83676147]
[195.88784790 -244.95239258]
[194.02899170 -230.06802368]
[200.12942505 -216.48001099]
[190.74159241 -203.74505615]
[188.88272095 -188.86068726]
[187.02386475 -173.97630310]
[185.16499329 -159.09193420]
[183.30612183 -144.20755005]
[181.44726562 -129.32318115]
[195.10272217 -119.82236481]
[200.03215027 -101.71684265]
[214.86177063 -103.97128296]
[227.32528687 -114.62926483]
[242.69487000 -108.91014862]
[245.15959167 -92.69728088]
[232.18395996 -82.66905975]
[217.11619568 -89.14166260]
[202.28659058 -86.88722992]
[217.28219604 -87.25000000]
[230.60350037 -80.35487366]
[238.96574402 -67.90204620]
[240.30696106 -52.96212769]
[234.29643250 -39.21899796]
[222.41622925 -30.06143761]
[207.59577942 -27.74750900]
[193.48950195 -32.84778214]
[183.57569885 -44.10463333]
[180.29893494 -58.74235153]
[184.46656799 -73.15052795]
[178.51179504 -59.38314819]
[172.55702209 -45.61577225]
[166.60224915 -31.84839630]
[160.64747620 -18.08101845]
[154.69268799 -4.31364250]
[156.74165344 10.43935966]
[144.16169739 20.03391075]
[138.20692444 33.80128860]
[139.11482239 38.51903534]
[137.04663086 43.85463333]
[131.78872681 47.94567490]
[125.34909058 61.49303818]
[118.90944672 75.04039764]
[112.46981049 88.58776093]
[125.12868500 80.54084015]
[140.06454468 81.92652893]
[151.02697754 92.16493988]
[153.42837524 106.97146606]
[146.26380920 120.14981842]
[132.53152466 126.18506622]
[117.97824860 122.55155945]
[108.69389343 110.76866913]
[110.28829193 125.68368530]
[111.88269806 140.59870911]
[113.47709656 155.51373291]
[115.07150269 170.42875671]
[116.66590118 185.34378052]
[129.74559021 193.91441345]
[134.20658875 208.90219116]
[127.94254303 223.23034668]
[113.91115570 230.13354492]
[98.73761749 226.35232544]
[89.58640289 213.67205811]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 170]
[2 169]
[3 168]
[4 167]
[5 166]
[6 165]
[7 44]
[8 43]
[10 41]
[11 40]
[12 39]
[13 38]
[14 37]
[15 36]
[16 35]
[18 33]
[19 32]
[20 31]
[21 30]
[22 28]
[23 27]
[45 157]
[46 156]
[47 155]
[48 154]
[49 151]
[50 150]
[52 148]
[53 147]
[54 146]
[55 145]
[56 144]
[57 143]
[61 123]
[62 122]
[63 121]
[64 120]
[65 119]
[66 118]
[68 116]
[69 115]
[70 114]
[71 113]
[72 111]
[73 110]
[74 109]
[75 108]
[88 107]
[89 106]
[90 105]
[91 104]
[92 103]
[93 102]
[125 132]
[126 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
