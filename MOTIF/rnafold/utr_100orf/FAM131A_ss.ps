%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:27:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAUGUUCUCCUUAUGUGACUAGGCACAGGUUCCAAAUGGGGAGGGGACUGGCUCAGCAUCCGGAGCCAAAACAGGAAUAGAACUGGGAGCUGAGCCUGGAGCGGUUCUGGGCUUUUGGUUCUCUGCAUCAACACAGCCAGCAUGCCUAUGAUUUCUGUGCUGGGCAAAAUGUUUCUGUGGCAGCGUGAAGGGCCUGGAGGACGAUGGACUUGUCAGACAAGUCGCAGAGUGUCCUCGGACC\
) } def
/len { sequence length } bind def

/coor [
[268.86996460 84.66246033]
[254.02017212 86.77980042]
[239.17034912 88.89714050]
[224.32054138 91.01448822]
[209.47073364 93.13182831]
[203.26367188 104.40892029]
[191.52241516 110.14366913]
[178.42817688 108.04485321]
[168.78872681 98.65651703]
[153.91288757 100.58249664]
[139.03704834 102.50846863]
[124.16120911 104.43444824]
[123.96251678 115.90055084]
[118.07514954 127.55155945]
[106.51412201 136.56915283]
[90.65432739 140.26788330]
[82.44159698 152.81980896]
[74.22886658 165.37174988]
[66.01613617 177.92367554]
[69.49386597 193.34059143]
[60.98108292 206.65629578]
[45.52827072 209.97082520]
[32.30331039 201.31773376]
[29.15233421 185.83074951]
[37.94476318 172.69801331]
[53.46420288 169.71095276]
[61.67693329 157.15901184]
[69.88966370 144.60708618]
[78.10239410 132.05514526]
[67.77240753 121.17896271]
[54.81433487 128.73464966]
[41.85626221 136.29032898]
[28.89818764 143.84600830]
[15.94011497 151.40170288]
[2.98204184 158.95738220]
[3.12819481 174.31558228]
[-4.43830061 187.68133545]
[-17.68209457 195.45935059]
[-33.04067612 195.55737305]
[-46.38265991 187.94900513]
[-54.11912155 174.68090820]
[-54.16899109 159.32209778]
[-46.51885223 146.00402832]
[-33.22655869 138.30918884]
[-17.86766624 138.30746460]
[-4.57364082 145.99929810]
[8.38443184 138.44361877]
[21.34250450 130.88793945]
[34.30057907 123.33226013]
[47.25865173 115.77657318]
[60.21672440 108.22089386]
[58.96284103 93.27339172]
[44.92708588 87.98210907]
[30.89133453 82.69082642]
[16.85558319 77.39954376]
[2.81983066 72.10826874]
[-11.21592140 66.81698608]
[-25.25167465 61.52570343]
[-39.28742599 56.23442078]
[-54.92982864 58.60630417]
[-64.10960388 46.87681198]
[-78.14535522 41.58552933]
[-92.18110657 36.29424667]
[-106.21685791 31.00296593]
[-120.25260925 25.71168518]
[-139.43588257 36.13277817]
[-159.76596069 29.00002480]
[-168.01118469 9.40514755]
[-182.35826111 5.02778101]
[-196.18882751 12.67572403]
[-211.35310364 8.22372341]
[-218.85440063 -5.68692732]
[-214.24232483 -20.80328560]
[-200.25314331 -28.15708542]
[-185.18638611 -23.38544464]
[-177.98089600 -9.31929779]
[-163.63381958 -4.94193125]
[-157.88005066 -11.27346134]
[-150.35018921 -15.42546177]
[-141.83963013 -16.92734337]
[-133.25776672 -15.59016228]
[-125.53082275 -11.52987003]
[-119.50193024 -5.15783596]
[-115.83910370 2.86068058]
[-114.96132660 11.67593288]
[-100.92557526 16.96721458]
[-86.88982391 22.25849533]
[-72.85407257 27.54977608]
[-58.81832123 32.84105682]
[-44.17984772 30.09070778]
[-33.99614334 42.19866943]
[-19.96039200 47.48995209]
[-5.92464018 52.78123093]
[8.11111164 58.07251358]
[22.14686394 63.36379623]
[36.18261719 68.65507507]
[50.21836853 73.94635773]
[64.25411987 79.23764038]
[101.43595123 67.07983398]
[122.23522949 89.55860901]
[137.11106873 87.63262939]
[151.98690796 85.70665741]
[166.86274719 83.78067780]
[177.29753113 69.72714233]
[194.33363342 67.62099457]
[207.35339355 78.28202057]
[222.20320129 76.16467285]
[237.05300903 74.04733276]
[251.90281677 71.92999268]
[266.75262451 69.81264496]
[280.29693604 63.36660385]
[291.30523682 53.17750549]
[302.31350708 42.98840332]
[313.32180786 32.79930496]
[324.33007812 22.61020470]
[335.33834839 12.42110443]
[346.34664917 2.23200440]
[357.35491943 -7.95709562]
[353.31829834 -20.19873238]
[354.20043945 -33.01173401]
[359.83554077 -44.50087357]
[369.35742188 -52.98007202]
[381.33233643 -57.21985245]
[393.97506714 -56.62550354]
[405.41476440 -51.32025146]
[416.68176270 -61.22253418]
[427.94873047 -71.12481689]
[439.21569824 -81.02709961]
[424.61355591 -84.45882416]
[418.07296753 -97.95774841]
[424.42932129 -111.54439545]
[438.98345947 -115.17443848]
[450.97579956 -106.16425323]
[451.54089355 -91.17534637]
[463.42156982 -100.33228302]
[475.30224609 -109.48921967]
[487.18292236 -118.64615631]
[499.06359863 -127.80309296]
[501.48501587 -140.45727539]
[511.55053711 -147.84088135]
[523.55206299 -146.44213867]
[535.54962158 -155.44535828]
[547.54724121 -164.44856262]
[559.54479980 -173.45178223]
[571.36627197 -182.68501282]
[583.00726318 -192.14482117]
[594.64825439 -201.60462952]
[606.28918457 -211.06442261]
[617.93017578 -220.52423096]
[629.57110596 -229.98403931]
[631.34045410 -245.46005249]
[643.28082275 -254.88781738]
[658.02392578 -253.10565186]
[669.66491699 -262.56546021]
[675.00689697 -278.07012939]
[691.15472412 -280.93014526]
[701.49688721 -268.20336914]
[695.39428711 -252.98199463]
[679.12469482 -250.92448425]
[667.48376465 -241.46467590]
[666.21246338 -226.66874695]
[654.54162598 -216.90933228]
[639.03094482 -218.34306335]
[627.38995361 -208.88327026]
[615.74902344 -199.42346191]
[604.10803223 -189.96365356]
[592.46704102 -180.50384521]
[580.82611084 -171.04405212]
[580.09704590 -167.61543274]
[577.68402100 -164.36520386]
[573.68682861 -162.07519531]
[568.54803467 -161.45419312]
[556.55041504 -152.45097351]
[544.55285645 -143.44776917]
[532.55523682 -134.44454956]
[526.53277588 -117.95139313]
[508.22052002 -115.92241669]
[496.33984375 -106.76548004]
[484.45916748 -97.60854340]
[472.57849121 -88.45160675]
[460.69781494 -79.29467010]
[449.11798096 -69.76011658]
[437.85101318 -59.85783768]
[426.58404541 -49.95555496]
[415.31704712 -40.05327225]
[419.30093384 -23.28463554]
[414.20419312 -6.72669744]
[401.34844971 5.01942968]
[384.22433472 8.64182186]
[367.54400635 3.05118465]
[356.53573608 13.24028492]
[345.52746582 23.42938423]
[334.51916504 33.61848450]
[323.51089478 43.80758667]
[312.50262451 53.99668503]
[301.49432373 64.18578339]
[290.48605347 74.37488556]
[296.85372925 77.54098511]
[301.59295654 83.98189545]
[310.74987793 95.86257935]
[319.90682983 107.74325562]
[329.06375122 119.62393188]
[338.22070312 131.50460815]
[347.37762451 143.38528442]
[356.53457642 155.26596069]
[375.50833130 162.11680603]
[377.18563843 181.39276123]
[386.64544678 193.03372192]
[396.17999268 204.61355591]
[405.78887939 216.13175964]
[415.39779663 227.64996338]
[425.00668335 239.16816711]
[434.61557007 250.68638611]
[444.22448730 262.20458984]
[453.83337402 273.72277832]
[468.62268066 282.01211548]
[464.75140381 298.51815796]
[447.81875610 299.36749268]
[442.31518555 283.33169556]
[432.70626831 271.81347656]
[423.09738159 260.29528809]
[413.48849487 248.77706909]
[403.87957764 237.25886536]
[394.27069092 225.74066162]
[384.66177368 214.22244263]
[377.97836304 211.10649109]
[375.00448608 202.49353027]
[365.54467773 190.85256958]
[355.35409546 190.72447205]
[346.72824097 184.89547729]
[342.63916016 175.08346558]
[344.65390015 164.42289734]
[335.49694824 152.54222107]
[326.34002686 140.66154480]
[317.18307495 128.78086853]
[308.02615356 116.90019226]
[298.86920166 105.01951599]
[289.71228027 93.13883209]
[293.39294434 107.68024445]
[286.37246704 120.93591309]
[272.27551270 126.06192017]
[258.38037109 120.41168213]
[251.86114502 106.90243530]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 110]
[2 109]
[3 108]
[4 107]
[5 106]
[9 103]
[10 102]
[11 101]
[12 100]
[16 29]
[17 28]
[18 27]
[19 26]
[30 51]
[31 50]
[32 49]
[33 48]
[34 47]
[35 46]
[52 98]
[53 97]
[54 96]
[55 95]
[56 94]
[57 93]
[58 92]
[59 91]
[61 89]
[62 88]
[63 87]
[64 86]
[65 85]
[68 77]
[69 76]
[111 197]
[112 196]
[113 195]
[114 194]
[115 193]
[116 192]
[117 191]
[118 190]
[125 185]
[126 184]
[127 183]
[128 182]
[134 181]
[135 180]
[136 179]
[137 178]
[138 177]
[141 175]
[142 174]
[143 173]
[144 172]
[145 168]
[146 167]
[147 166]
[148 165]
[149 164]
[150 163]
[153 160]
[154 159]
[199 238]
[200 237]
[201 236]
[202 235]
[203 234]
[204 233]
[205 232]
[207 228]
[208 227]
[209 225]
[210 224]
[211 223]
[212 222]
[213 221]
[214 220]
[215 219]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
