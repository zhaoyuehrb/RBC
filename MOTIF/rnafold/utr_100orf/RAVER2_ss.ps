%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:58:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGGCCUCCUCCCGCUUUCUCUCUCCGCUUCCCCUGGAGCCUCCGAGGAGUCCGCAGCCGCUGGGCGCCCGGGAAGAUGGCGGCGGCGGCGGGAGACGGCGGCGGCGAGGGGGGCGCGGGCCUGGGCAGCGCGGCGGGGCUGGGGCCGGGGCCGGGGCUGCGCGGGCAGGGCCCCU\
) } def
/len { sequence length } bind def

/coor [
[219.59034729 314.59466553]
[211.82595825 301.76058960]
[204.06155396 288.92648315]
[190.85350037 282.04196167]
[190.33024597 266.22943115]
[182.56584167 253.39532471]
[174.80145264 240.56121826]
[167.03704834 227.72712708]
[160.86651611 223.61967468]
[159.25128174 214.59895325]
[151.71331787 201.63056946]
[138.62811279 194.51531982]
[138.38244629 178.69601440]
[130.84448242 165.72763062]
[123.19300842 152.82589722]
[115.42860413 139.99179077]
[107.66420746 127.15769196]
[99.89980316 114.32359314]
[87.74433899 107.41445160]
[87.26609802 93.44080353]
[79.50169373 80.60670471]
[71.73729706 67.77260590]
[56.39880371 66.34544373]
[44.97530365 56.27781677]
[41.70906067 41.58782959]
[47.64809799 27.95456696]
[39.88369751 15.12046814]
[32.11929703 2.28636909]
[24.35490036 -10.54773045]
[16.59049988 -23.38183022]
[2.82707810 -31.18431473]
[2.85918880 -46.07888794]
[-4.90521049 -58.91298676]
[-12.66961002 -71.74708557]
[-20.43400955 -84.58118439]
[-28.19840813 -97.41528320]
[-35.96280670 -110.24938202]
[-49.34197998 -111.94689941]
[-59.15114594 -120.91619873]
[-61.95279694 -133.70991516]
[-56.94111633 -145.59889221]
[-64.47908020 -158.56727600]
[-72.01704407 -171.53565979]
[-85.64141846 -179.57849121]
[-85.34791565 -194.47019958]
[-92.88587952 -207.43859863]
[-100.42384338 -220.40698242]
[-115.60771179 -219.30625916]
[-129.70631409 -224.88446045]
[-139.94297791 -235.98539734]
[-144.32670593 -250.37095642]
[-142.03924561 -265.17221069]
[-133.58723450 -277.46157837]
[-141.12519836 -290.42996216]
[-148.66316223 -303.39834595]
[-159.35635376 -305.58065796]
[-166.91610718 -313.14401245]
[-169.00526428 -323.40725708]
[-165.16799927 -332.91595459]
[-172.24621582 -346.14089966]
[-179.32441711 -359.36584473]
[-186.40261841 -372.59075928]
[-193.48083496 -385.81570435]
[-200.55903625 -399.04064941]
[-207.63723755 -412.26559448]
[-219.74978638 -416.75332642]
[-225.36712646 -427.93789673]
[-221.95887756 -439.56338501]
[-228.80389404 -452.91049194]
[-235.64892578 -466.25762939]
[-242.49394226 -479.60473633]
[-257.85794067 -481.00149536]
[-270.01376343 -490.50094604]
[-275.08251953 -505.07183838]
[-271.44680786 -520.06469727]
[-260.26675415 -530.69531250]
[-245.10986328 -533.57147217]
[-230.81266785 -527.77545166]
[-221.93733215 -515.15673828]
[-221.31596375 -499.74191284]
[-229.14682007 -486.44976807]
[-222.30178833 -473.10263062]
[-215.45677185 -459.75552368]
[-208.61175537 -446.40838623]
[-193.38125610 -437.71560669]
[-194.41229248 -419.34378052]
[-187.33409119 -406.11886597]
[-180.25588989 -392.89392090]
[-173.17768860 -379.66897583]
[-166.09947205 -366.44403076]
[-159.02127075 -353.21908569]
[-151.94306946 -339.99417114]
[-134.81549072 -331.05651855]
[-135.69477844 -310.93630981]
[-128.15681458 -297.96792603]
[-120.61885071 -284.99954224]
[-105.75704956 -286.26147461]
[-91.76359558 -280.92364502]
[-81.43309784 -269.99468994]
[-76.85348511 -255.60554504]
[-78.98412323 -240.59397888]
[-87.45545959 -227.94494629]
[-79.91749573 -214.97656250]
[-72.37952423 -202.00817871]
[-59.29432297 -194.89292908]
[-59.04866028 -179.07362366]
[-51.51069260 -166.10523987]
[-43.97272873 -153.13685608]
[-27.55714226 -149.54148865]
[-18.63331985 -134.90533447]
[-23.12870979 -118.01377869]
[-15.36430931 -105.17967987]
[-7.59991026 -92.34558105]
[0.16448918 -79.51148224]
[7.92888832 -66.67738342]
[15.69328785 -53.84328461]
[28.90134811 -46.95877838]
[29.42459869 -31.14622879]
[37.18899918 -18.31212997]
[44.95339966 -5.47803020]
[52.71779633 7.35606909]
[60.48219681 20.19016838]
[75.31458282 21.25709534]
[86.81057739 30.96822548]
[90.42623901 45.75945282]
[84.57139587 60.00820541]
[92.33579254 72.84230804]
[100.10019684 85.67640686]
[112.25566101 92.58554840]
[112.73390198 106.55919647]
[120.49830627 119.39329529]
[128.26271057 132.22738647]
[136.02709961 145.06149292]
[143.16801453 150.80517578]
[143.81286621 158.18966675]
[151.35083008 171.15805054]
[164.97520447 179.20088196]
[164.68170166 194.09259033]
[172.21966553 207.06098938]
[179.87113953 219.96272278]
[187.63554382 232.79682922]
[195.39994812 245.63092041]
[203.16433716 258.46502686]
[216.92776489 266.26751709]
[216.89566040 281.16207886]
[224.66004944 293.99618530]
[232.42445374 306.83026123]
[247.50871277 310.71655273]
[255.20008850 323.84274292]
[251.40216064 338.19934082]
[259.16656494 351.03341675]
[266.93096924 363.86752319]
[274.69537354 376.70162964]
[282.45977783 389.53573608]
[290.22415161 402.36981201]
[294.16177368 404.35171509]
[296.96594238 407.20602417]
[298.50091553 410.46340942]
[298.79946899 413.65902710]
[298.04638672 416.38787842]
[304.89141846 429.73501587]
[311.73645020 443.08212280]
[318.58145142 456.42926025]
[332.64440918 464.86523438]
[332.09960938 481.25531006]
[317.50750732 488.73883057]
[303.87921143 479.61734009]
[305.23434448 463.27429199]
[298.38931274 449.92715454]
[291.54428101 436.58001709]
[284.69927979 423.23291016]
[277.39007568 410.13421631]
[269.62567139 397.30014038]
[261.86126709 384.46603394]
[254.09686279 371.63192749]
[246.33247375 358.79782104]
[238.56806946 345.96371460]
[224.08872986 342.66455078]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 147]
[2 146]
[3 145]
[5 143]
[6 142]
[7 141]
[8 140]
[10 139]
[11 138]
[13 136]
[14 135]
[15 133]
[16 132]
[17 131]
[18 130]
[20 128]
[21 127]
[22 126]
[26 122]
[27 121]
[28 120]
[29 119]
[30 118]
[32 116]
[33 115]
[34 114]
[35 113]
[36 112]
[37 111]
[41 108]
[42 107]
[43 106]
[45 104]
[46 103]
[47 102]
[53 96]
[54 95]
[55 94]
[59 92]
[60 91]
[61 90]
[62 89]
[63 88]
[64 87]
[65 86]
[68 84]
[69 83]
[70 82]
[71 81]
[150 177]
[151 176]
[152 175]
[153 174]
[154 173]
[155 172]
[160 171]
[161 170]
[162 169]
[163 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
