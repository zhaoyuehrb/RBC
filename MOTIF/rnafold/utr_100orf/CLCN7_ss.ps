%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:16:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCGCUCAUCACGUGGCCCCGUCGCGCGUCACGUGGCCGCCGGCGCGGGUCACGAGAACAAACACGGGGGCAGCCGGCGCUUCCCGGCCGGUGUCGCUCCGCGGCGGGCCAUGGCCAACGUCUCUAAGAAGGUGUCCUGGUCCGGCCGGGACCGGGACGACGAGGAGGCGGCGCCGCUGCUGCGGAGGACGGCGCGGCCCGGCGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[145.34736633 90.43883514]
[141.42802429 90.88971710]
[137.18069458 89.98744965]
[123.08954620 95.12940979]
[108.99840546 100.27136993]
[115.21464539 107.78307343]
[115.34193420 119.96278381]
[107.01743317 132.51582336]
[90.56703949 140.26148987]
[78.08724213 148.58343506]
[70.89831543 162.67704773]
[56.01677704 163.30076599]
[43.53698349 171.62269592]
[31.05718803 179.94464111]
[18.57739449 188.26658630]
[6.09760094 196.58853149]
[-6.38219261 204.91047668]
[-18.86198616 213.23242188]
[-31.34177971 221.55436707]
[-43.75927734 229.96897888]
[-56.11378479 238.47581482]
[-68.46829224 246.98263550]
[-80.82279968 255.48947144]
[-93.17731476 263.99630737]
[-105.46814728 272.59484863]
[-117.69463348 281.28466797]
[-122.87659454 288.80697632]
[-130.16847229 290.01126099]
[-142.52297974 298.51809692]
[-154.87748718 307.02493286]
[-161.43223572 322.05712891]
[-177.75601196 323.62753296]
[-187.05632019 310.12063599]
[-179.76580811 295.43118286]
[-163.38432312 294.67041016]
[-151.02980042 286.16357422]
[-138.67529297 277.65676880]
[-126.38446045 269.05819702]
[-114.15797424 260.36837769]
[-110.52703094 253.93113708]
[-101.68413544 251.64178467]
[-89.32962799 243.13496399]
[-76.97512054 234.62812805]
[-64.62061310 226.12130737]
[-52.26610184 217.61447144]
[-48.53971863 211.23200989]
[-39.66372299 209.07456970]
[-27.18392944 200.75262451]
[-14.70413685 192.43067932]
[-2.22434282 184.10873413]
[10.25545120 175.78680420]
[22.73524475 167.46485901]
[35.21503830 159.14291382]
[47.69483185 150.82096863]
[53.99112320 137.32260132]
[69.76530457 136.10363770]
[82.24509430 127.78169250]
[82.02178955 120.28501892]
[67.07998657 121.60507965]
[52.72068787 125.94218445]
[43.74800873 113.92173767]
[51.98933411 101.38856506]
[66.58130646 104.86330414]
[81.57518768 105.29167175]
[81.35188293 97.79499817]
[68.39888763 90.23061371]
[55.44588470 82.66623688]
[40.22558975 86.92278290]
[26.49456024 79.09754181]
[22.39917374 63.83309174]
[30.36914825 50.18556595]
[45.67604065 46.25179291]
[59.23854446 54.36561203]
[63.01026535 69.71324158]
[75.96326447 77.27761841]
[88.91625977 84.84199524]
[103.85644531 86.18022919]
[117.94758606 81.03826904]
[132.03872681 75.89630890]
[145.97052002 70.33708191]
[159.73063660 64.36552429]
[173.49073792 58.39395905]
[187.25083923 52.42239761]
[201.01094055 46.45083237]
[214.77104187 40.47927094]
[228.53114319 34.50770950]
[235.15760803 28.22058678]
[242.54084778 28.55136490]
[256.38833618 22.78533173]
[270.23580933 17.01929855]
[284.08331299 11.25326443]
[290.80264282 5.06549835]
[298.18014526 5.50616503]
[312.11193848 -0.05306069]
[326.04373169 -5.61228657]
[339.97552490 -11.17151260]
[353.90734863 -16.73073769]
[367.53063965 -23.00809860]
[380.80850220 -29.98655128]
[394.08633423 -36.96500397]
[407.36419678 -43.94345474]
[420.64202881 -50.92190933]
[433.91989136 -57.90036011]
[447.19772339 -64.87881470]
[460.47558594 -71.85726929]
[473.75341797 -78.83571625]
[487.03128052 -85.81417084]
[489.21768188 -89.56563568]
[492.18566895 -92.16481018]
[495.47695923 -93.50749207]
[498.64657593 -93.64899445]
[501.31369019 -92.78601837]
[514.98333740 -98.96179199]
[528.65301514 -105.13755798]
[542.32269287 -111.31332397]
[545.59869385 -124.37786865]
[555.65423584 -133.04373169]
[568.67193604 -134.31697083]
[579.87744141 -127.95571136]
[593.63757324 -133.92727661]
[607.39770508 -139.89883423]
[621.15777588 -145.87040710]
[634.91790771 -151.84196472]
[648.67797852 -157.81352234]
[662.43811035 -163.78509521]
[662.26629639 -175.80252075]
[666.14556885 -187.14134216]
[673.59948730 -196.48097229]
[683.73669434 -202.74198914]
[695.35754395 -205.21092224]
[707.09600830 -203.62138367]
[717.58032227 -198.18267822]
[725.59313965 -189.55259705]
[739.60620117 -194.90377808]
[753.61920166 -200.25495911]
[767.63226318 -205.60615540]
[781.64526367 -210.95733643]
[795.65826416 -216.30851746]
[809.67132568 -221.65971375]
[823.68432617 -227.01089478]
[837.69732666 -232.36207581]
[851.71038818 -237.71327209]
[865.72338867 -243.06445312]
[873.56030273 -257.06311035]
[889.41387939 -259.52166748]
[901.12255859 -248.55416870]
[899.70446777 -232.57391357]
[886.24743652 -223.83958435]
[871.07458496 -229.05142212]
[857.06158447 -223.70024109]
[843.04852295 -218.34906006]
[829.03552246 -212.99786377]
[815.02246094 -207.64668274]
[801.00946045 -202.29550171]
[786.99645996 -196.94430542]
[772.98339844 -191.59312439]
[758.97039795 -186.24194336]
[744.95739746 -180.89074707]
[730.94433594 -175.53956604]
[728.90374756 -157.53382874]
[717.95416260 -142.98843384]
[701.05786133 -135.98225403]
[682.85968018 -138.53480530]
[668.40966797 -150.02499390]
[654.64953613 -144.05342102]
[640.88946533 -138.08186340]
[627.12933350 -132.11030579]
[613.36926270 -126.13873291]
[599.60913086 -120.16717529]
[585.84906006 -114.19561005]
[580.34832764 -98.30281067]
[564.74804688 -91.16518402]
[548.49847412 -97.64365387]
[534.82879639 -91.46788788]
[521.15911865 -85.29212189]
[507.48947144 -79.11634827]
[494.00973511 -72.53632355]
[480.73187256 -65.55786896]
[467.45404053 -58.57941818]
[454.17617798 -51.60096741]
[440.89834595 -44.62251282]
[427.62048340 -37.64406204]
[414.34265137 -30.66560936]
[401.06478882 -23.68715668]
[387.78695679 -16.70870590]
[374.50909424 -9.73025227]
[388.85827637 -5.35980034]
[397.14624023 7.14259148]
[395.58383179 22.06099701]
[384.88534546 32.57492447]
[369.94201660 33.87754440]
[357.58572388 25.37331963]
[353.46557617 10.95026493]
[359.46655273 -2.79893994]
[345.53475952 2.76028609]
[331.60296631 8.31951141]
[317.67117310 13.87873745]
[303.73937988 19.43796349]
[289.84933472 25.10074997]
[276.00186157 30.86678314]
[262.15435791 36.63281631]
[248.30688477 42.39884949]
[234.50270081 48.26781082]
[220.74259949 54.23937607]
[206.98249817 60.21093750]
[193.22239685 66.18250275]
[179.46229553 72.15406036]
[165.70219421 78.12562561]
[151.94209290 84.09719086]
[150.78862000 86.65211487]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 79]
[4 78]
[5 77]
[9 57]
[10 56]
[12 54]
[13 53]
[14 52]
[15 51]
[16 50]
[17 49]
[18 48]
[19 47]
[20 45]
[21 44]
[22 43]
[23 42]
[24 41]
[25 39]
[26 38]
[28 37]
[29 36]
[30 35]
[65 76]
[66 75]
[67 74]
[80 209]
[81 208]
[82 207]
[83 206]
[84 205]
[85 204]
[86 203]
[88 202]
[89 201]
[90 200]
[91 199]
[93 198]
[94 197]
[95 196]
[96 195]
[97 194]
[98 186]
[99 185]
[100 184]
[101 183]
[102 182]
[103 181]
[104 180]
[105 179]
[106 178]
[107 177]
[112 176]
[113 175]
[114 174]
[115 173]
[119 170]
[120 169]
[121 168]
[122 167]
[123 166]
[124 165]
[125 164]
[133 159]
[134 158]
[135 157]
[136 156]
[137 155]
[138 154]
[139 153]
[140 152]
[141 151]
[142 150]
[143 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
