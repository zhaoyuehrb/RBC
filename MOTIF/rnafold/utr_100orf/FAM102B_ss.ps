%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:23:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGCUGAUCCGGGGCUCGGCCAAGCUGAGGCGGCGGCGCCCGGCCGUGCGCCCAGCUUGCAGGCGCCUGGCUCUCACGAUGAUGAAGAAGAAGAAGUUUAAGUUUAAGGUGGACUUCGAGCUCGAGGAGCUCUCCUCAGUGCCCUUCGUCAAUGGGGUCCUCUUCUGCAAGAUGCGGC\
) } def
/len { sequence length } bind def

/coor [
[90.21083069 215.55770874]
[93.80158997 200.79277039]
[104.36959076 189.73544312]
[100.25727844 175.31016541]
[96.14497375 160.88487244]
[92.03266144 146.45957947]
[87.92034912 132.03430176]
[75.38538361 123.79569244]
[60.51230240 125.74282837]
[47.83326340 135.20605469]
[34.20930481 129.18634033]
[19.33622169 131.13346863]
[4.46313620 133.08061218]
[-10.40994835 135.02774048]
[-25.28303337 136.97488403]
[-40.13866043 139.05102539]
[-54.97571182 141.25599670]
[-69.81275940 143.46098328]
[-78.12039185 153.35041809]
[-90.54252625 154.86897278]
[-100.33832550 147.74311829]
[-115.21141052 149.69026184]
[-123.34001923 153.91738892]
[-130.35926819 151.53979492]
[-145.26390076 153.22850037]
[-160.16854858 154.91720581]
[-175.07318115 156.60592651]
[-189.97781372 158.29463196]
[-204.88246155 159.98333740]
[-213.08320618 164.06874084]
[-220.06013489 161.56968689]
[-234.99183655 162.99946594]
[-249.92353821 164.42922974]
[-264.85525513 165.85899353]
[-279.77398682 167.41828918]
[-294.67861938 169.10699463]
[-309.58325195 170.79570007]
[-324.48788452 172.48440552]
[-339.39254761 174.17311096]
[-350.47195435 185.77597046]
[-366.43783569 184.20455933]
[-375.04257202 170.66430664]
[-369.68530273 155.54216003]
[-354.47570801 150.43852234]
[-341.08123779 159.26847839]
[-326.17660522 157.57977295]
[-311.27197266 155.89106750]
[-296.36730957 154.20236206]
[-281.46267700 152.51365662]
[-275.15328979 148.62593079]
[-266.28500366 150.92729187]
[-251.35330200 149.49752808]
[-236.42160034 148.06776428]
[-221.48989868 146.63798523]
[-206.57116699 145.07868958]
[-191.66653442 143.38998413]
[-176.76188660 141.70127869]
[-161.85725403 140.01257324]
[-146.95260620 138.32386780]
[-132.04797363 136.63516235]
[-117.15854645 134.81716919]
[-102.28546143 132.87002563]
[-88.96753693 121.45963287]
[-72.01773834 128.62393188]
[-57.18069077 126.41895294]
[-42.34364319 124.21397400]
[-36.17298889 120.10960388]
[-27.23017120 122.10179901]
[-12.35708618 120.15466309]
[2.51599908 118.20752716]
[17.38908386 116.26038361]
[32.26216888 114.31324768]
[43.87738419 104.98929596]
[58.56516647 110.86974335]
[73.43824768 108.92260742]
[74.63618469 92.23252106]
[84.80331421 80.10784912]
[99.26754761 76.47249603]
[112.26738739 81.68341064]
[124.35656738 72.80356598]
[130.89834595 58.39816284]
[145.73623657 57.09958649]
[157.82542419 48.21974182]
[169.91459656 39.33989334]
[182.00378418 30.46004486]
[194.09295654 21.58019638]
[206.18214417 12.70034790]
[218.27133179 3.82050014]
[230.36050415 -5.05934763]
[224.39030457 -24.50314903]
[226.98048401 -44.96647644]
[237.90657043 -62.79887009]
[255.43637085 -74.72203827]
[276.60098267 -78.43157196]
[297.69680786 -73.03901672]
[305.82632446 -85.64500427]
[313.95581055 -98.25099945]
[322.08532715 -110.85698700]
[330.21484375 -123.46298218]
[338.34436035 -136.06896973]
[346.47387695 -148.67495728]
[354.60339355 -161.28096008]
[348.12332153 -175.28138733]
[350.26379395 -190.55953979]
[360.34176636 -202.24020386]
[375.14138794 -206.59613037]
[389.94021606 -202.23735046]
[400.01593018 -190.55473328]
[402.15341187 -175.27616882]
[395.67065430 -161.27697754]
[382.63623047 -153.02427673]
[367.20938110 -153.15144348]
[359.07986450 -140.54545593]
[350.95034790 -127.93946075]
[342.82083130 -115.33346558]
[334.69131470 -102.72747803]
[326.56182861 -90.12148285]
[318.43231201 -77.51549530]
[310.30279541 -64.90950012]
[319.39111328 -52.97626114]
[333.70446777 -57.46269989]
[348.01782227 -61.94914246]
[362.33114624 -66.43557739]
[376.64450073 -70.92201996]
[390.95785522 -75.40846252]
[404.26348877 -85.91543579]
[418.04321289 -76.03842163]
[412.36679077 -60.06298065]
[395.44427490 -61.09511566]
[381.13095093 -56.60867691]
[366.81759644 -52.12223434]
[352.50424194 -47.63579559]
[338.19091797 -43.14935684]
[323.87756348 -38.66291428]
[324.83163452 -27.56995773]
[323.40899658 -16.60102654]
[319.70587158 -6.25616074]
[313.92172241 2.99975538]
[306.34878540 10.75787354]
[297.35736084 16.68341255]
[287.37777710 20.53005219]
[276.87988281 22.15005875]
[266.35086060 21.49974442]
[256.27279663 18.64007187]
[247.10031128 13.73242855]
[239.24035645 7.02983332]
[227.15116882 15.90968132]
[215.06199646 24.78952980]
[202.97280884 33.66937637]
[190.88363647 42.54922485]
[178.79444885 51.42907333]
[166.70526123 60.30892181]
[154.61608887 69.18876648]
[148.93901062 82.95903015]
[133.23641968 84.89274597]
[121.14723206 93.77259827]
[120.65613556 114.14076233]
[102.34564209 127.92198944]
[106.45794678 142.34727478]
[110.57025909 156.77256775]
[114.68257141 171.19784546]
[118.79487610 185.62313843]
[133.60482788 189.44581604]
[144.44136047 200.09786987]
[148.46440125 214.64714050]
[144.69003296 229.15956116]
[134.22882080 239.76278687]
[138.34112549 254.18807983]
[142.45343018 268.61337280]
[146.56575012 283.03863525]
[150.67805481 297.46392822]
[160.83509827 311.03857422]
[150.60270691 324.55651855]
[134.78044128 318.46615601]
[136.25276184 301.57623291]
[132.14045715 287.15097046]
[128.02815247 272.72567749]
[123.91584015 258.30038452]
[119.80352783 243.87509155]
[105.32376862 240.38194275]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 162]
[4 161]
[5 160]
[6 159]
[7 158]
[8 75]
[9 74]
[11 72]
[12 71]
[13 70]
[14 69]
[15 68]
[16 66]
[17 65]
[18 64]
[21 62]
[22 61]
[24 60]
[25 59]
[26 58]
[27 57]
[28 56]
[29 55]
[31 54]
[32 53]
[33 52]
[34 51]
[35 49]
[36 48]
[37 47]
[38 46]
[39 45]
[79 156]
[80 155]
[82 153]
[83 152]
[84 151]
[85 150]
[86 149]
[87 148]
[88 147]
[89 146]
[95 119]
[96 118]
[97 117]
[98 116]
[99 115]
[100 114]
[101 113]
[102 112]
[120 134]
[121 133]
[122 132]
[123 131]
[124 130]
[125 129]
[167 179]
[168 178]
[169 177]
[170 176]
[171 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
