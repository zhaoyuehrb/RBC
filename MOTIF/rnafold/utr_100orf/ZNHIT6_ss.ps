%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:11:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCGCGUCAAGCAGGCUAUUCCGGGUUUGUGGCUGCUUGGCUCCACACGUGGGCCGCCGUAGGUAUUCCGACCGGUAAUUCCUCCUAUUGGUGUGCAGCAGCCACAUUGAAGGAUAGAGUGGCAGCAGAGGCCAAGGAUCGUGAGUUGAUGGAGUUUGCUGCUGAAAAUGAAGGGAAGUCUGGGGGAGGUCUCCACAGCGUAGCUGAGGGGGUGCGGCUAAGUCCAGAGCCUGGCAGGGAGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[-49.42217255 863.29687500]
[-52.20258331 865.42620850]
[-55.75006866 880.00067139]
[-59.29755402 894.57513428]
[-62.75339508 909.17163086]
[-66.11745453 923.78955078]
[-58.85953903 938.09698486]
[-65.65110779 952.63153076]
[-81.28224945 956.24359131]
[-93.76209259 946.16229248]
[-93.51716614 930.12109375]
[-80.73535919 920.42547607]
[-77.37129974 905.80755615]
[-78.93001556 898.60272217]
[-73.87203217 891.02764893]
[-70.32454681 876.45318604]
[-66.77706146 861.87872314]
[-63.50490952 847.23999023]
[-60.50926208 832.54211426]
[-57.51361084 817.84429932]
[-54.51795959 803.14648438]
[-51.52231216 788.44866943]
[-48.52666092 773.75085449]
[-57.03051376 768.87854004]
[-64.02943420 761.99353027]
[-69.05799866 753.54156494]
[-71.77876282 744.07305908]
[-72.00485229 734.20697021]
[-69.71281433 724.59069824]
[-65.04467773 715.85742188]
[-58.29924393 708.58435059]
[-49.91290665 703.25476074]
[-40.43146896 700.22570801]
[-30.47460747 699.70422363]
[-26.38032722 685.27380371]
[-22.28604889 670.84344482]
[-18.19177055 656.41302490]
[-14.09749031 641.98260498]
[-18.06705475 627.62670898]
[-6.85677338 616.46246338]
[-2.76249433 602.03204346]
[1.33178473 587.60162354]
[5.42606354 573.17120361]
[9.52034283 558.74078369]
[-3.99986720 565.23724365]
[-18.19195366 560.38085938]
[-24.89774323 546.96319580]
[-20.26248360 532.69738770]
[-6.95070410 525.78387451]
[7.38545656 530.19683838]
[14.50500488 543.39959717]
[19.67464828 529.31854248]
[24.84429169 515.23754883]
[30.01393700 501.15655518]
[35.18357849 487.07556152]
[30.51709557 468.29592896]
[46.24772263 455.66366577]
[51.06187439 441.45721436]
[55.87602997 427.25073242]
[60.69018173 413.04425049]
[65.50434113 398.83776855]
[70.31848907 384.63131714]
[56.50259018 376.41650391]
[49.19179916 362.70358276]
[50.01538086 347.71975708]
[58.18481445 335.77294922]
[70.87874603 330.01318359]
[72.00865173 315.05578613]
[73.13854980 300.09841919]
[74.26845551 285.14102173]
[66.63056183 275.78131104]
[67.43331146 263.32604980]
[76.79060364 254.47302246]
[78.10836792 239.53102112]
[79.42613983 224.58901978]
[80.74390411 209.64701843]
[71.17649841 201.03802490]
[68.26329041 188.30201721]
[73.28383636 176.02989197]
[84.61583710 168.77792358]
[86.12126923 153.85366821]
[87.62669373 138.92939758]
[89.13211823 124.00512695]
[90.63754272 109.08086395]
[86.63401031 94.62500763]
[77.66543579 82.60150146]
[68.69686127 70.57800293]
[61.07767487 65.58678436]
[59.69226074 58.34658432]
[50.87548447 46.21133041]
[42.05870438 34.07607651]
[33.24192429 21.94082069]
[24.42514610 9.80556679]
[15.60836792 -2.32968831]
[6.79158926 -14.46494293]
[-2.10126328 -26.54456139]
[-11.06983757 -38.56806564]
[-26.33948708 -44.54885483]
[-28.52693176 -60.80146027]
[-15.38191700 -70.60659027]
[-0.42690644 -63.87757111]
[0.95366681 -47.53664017]
[9.92224121 -35.51313782]
[16.42412376 -32.03961563]
[18.92684364 -23.28172302]
[27.74362373 -11.14646721]
[36.56040192 0.98878777]
[45.37718201 13.12404251]
[54.19395828 25.25929832]
[63.01073837 37.39455414]
[71.82751465 49.52980804]
[80.72036743 61.60942459]
[89.68894196 73.63292694]
[98.65751648 85.65643311]
[106.12423706 84.95062256]
[104.01794434 70.09924316]
[98.62290192 56.10304642]
[110.00734711 46.33604050]
[123.02049255 53.79647827]
[120.34377289 68.55599213]
[121.05766296 83.53900146]
[128.52438354 82.83318329]
[135.08111572 69.34210968]
[141.63784790 55.85102844]
[148.19458008 42.35995102]
[154.75132751 28.86887169]
[161.30805969 15.37779236]
[167.86479187 1.88671327]
[174.42153931 -11.60436535]
[180.97827148 -25.09544373]
[176.04611206 -39.87081528]
[182.88777161 -53.45928574]
[197.00421143 -58.07028580]
[203.56095886 -71.56136322]
[210.11769104 -85.05244446]
[205.18553162 -99.82781219]
[212.02719116 -113.41628265]
[226.14364624 -118.02728271]
[232.70037842 -131.51835632]
[239.25711060 -145.00944519]
[235.39282227 -160.58013916]
[245.27105713 -173.22132874]
[261.31411743 -173.23577881]
[271.21508789 -160.61239624]
[267.37884521 -145.03475952]
[252.74819946 -138.45269775]
[246.19145203 -124.96162415]
[239.63471985 -111.47054291]
[244.73112488 -97.52198792]
[238.27384949 -83.74671936]
[223.60876465 -78.49570465]
[217.05203247 -65.00462341]
[210.49530029 -51.51354980]
[215.59170532 -37.56499481]
[209.13442993 -23.78971863]
[194.46934509 -18.53870773]
[187.91261292 -5.04762888]
[181.35588074 8.44344997]
[174.79913330 21.93452835]
[168.24240112 35.42560577]
[161.68566895 48.91668701]
[155.12893677 62.40776443]
[148.57218933 75.89884186]
[142.01545715 89.38992310]
[155.53207397 95.89382935]
[164.50079346 107.91722870]
[166.88279724 122.72689056]
[162.13658142 136.95620728]
[151.34109497 147.37049866]
[136.95042419 151.60232544]
[122.23591614 148.68969727]
[110.54256439 139.29472351]
[104.52856445 125.55311584]
[105.56180573 110.58628845]
[104.05638123 125.51055908]
[102.55095673 140.43481445]
[101.04553223 155.35908508]
[99.54010773 170.28335571]
[110.85453796 183.64099121]
[109.03083038 200.71121216]
[95.68591309 210.96478271]
[94.36814117 225.90678406]
[93.05037689 240.84878540]
[91.73260498 255.79078674]
[99.88386536 272.31561279]
[89.22583771 286.27093506]
[88.09593201 301.22833252]
[86.96603394 316.18569946]
[85.83612823 331.14309692]
[102.72647858 345.11068726]
[103.44355011 369.04385376]
[117.45848083 374.39001465]
[131.47341919 379.73620605]
[145.48835754 385.08236694]
[159.50328064 390.42855835]
[175.15484619 388.11791992]
[184.28865051 399.88323975]
[198.30357361 405.22943115]
[212.31851196 410.57559204]
[226.33345032 415.92178345]
[243.28739929 415.91775513]
[247.98457336 432.20803833]
[233.63124084 441.23123169]
[220.98727417 429.93670654]
[206.97233582 424.59054565]
[192.95739746 419.24435425]
[178.94247437 413.89819336]
[164.29335022 416.59121704]
[154.15710449 404.44348145]
[140.14218140 399.09732056]
[126.12724304 393.75112915]
[112.11230469 388.40493774]
[98.09737396 383.05877686]
[84.52496338 389.44546509]
[79.71081543 403.65194702]
[74.89665985 417.85839844]
[70.08250427 432.06488037]
[65.26834869 446.27136230]
[60.45419693 460.47784424]
[65.81211090 469.90689087]
[65.12480927 480.51040649]
[58.85827637 488.81857300]
[49.26458740 492.24517822]
[44.09494400 506.32620239]
[38.92530060 520.40722656]
[33.75565720 534.48822021]
[28.58601189 548.56921387]
[23.95075798 562.83508301]
[19.85647964 577.26550293]
[15.76219940 591.69592285]
[11.66792107 606.12634277]
[7.57364178 620.55670166]
[11.25035477 635.94476318]
[0.33292443 646.07684326]
[-3.76135468 660.50726318]
[-7.85563374 674.93768311]
[-11.94991302 689.36810303]
[-16.04419136 703.79852295]
[-0.92938524 717.72625732]
[4.95005035 737.34033203]
[0.02620800 757.13641357]
[-14.24855804 771.60089111]
[-33.82883453 776.74645996]
[-36.82448578 791.44433594]
[-39.82013702 806.14215088]
[-42.81578445 820.83996582]
[-45.81143570 835.53778076]
[-48.80708313 850.23559570]
[-47.16926956 855.13879395]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 17]
[3 16]
[4 15]
[5 13]
[6 12]
[18 248]
[19 247]
[20 246]
[21 245]
[22 244]
[23 243]
[34 238]
[35 237]
[36 236]
[37 235]
[38 234]
[40 232]
[41 231]
[42 230]
[43 229]
[44 228]
[51 227]
[52 226]
[53 225]
[54 224]
[55 223]
[57 219]
[58 218]
[59 217]
[60 216]
[61 215]
[62 214]
[67 189]
[68 188]
[69 187]
[70 186]
[73 184]
[74 183]
[75 182]
[76 181]
[80 178]
[81 177]
[82 176]
[83 175]
[84 174]
[85 114]
[86 113]
[87 112]
[89 111]
[90 110]
[91 109]
[92 108]
[93 107]
[94 106]
[95 105]
[96 103]
[97 102]
[122 164]
[123 163]
[124 162]
[125 161]
[126 160]
[127 159]
[128 158]
[129 157]
[130 156]
[133 153]
[134 152]
[135 151]
[138 148]
[139 147]
[140 146]
[191 213]
[192 212]
[193 211]
[194 210]
[195 209]
[197 207]
[198 206]
[199 205]
[200 204]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
