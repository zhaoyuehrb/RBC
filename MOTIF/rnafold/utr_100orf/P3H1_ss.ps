%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:21:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCGCCGCCCGGCUUGGAAGGUGGGGCUUCGCCCGGGGGCGGGCCUUCGCCGGGGGUAGGACUCCGGCCUUGGUGGCGGGUGGCUGGCGGUUCCGUUAGGUCUGAGGGAGCGAUGGCGGUACGCGCGUUGAAGCUGCUGACCACACUGCUGGCUGUCGUGGCCGCUGCCUCCCAAGCCGAGGUCGAGUCCGAGGCAGGAUGGGGCAUGGUGA\
) } def
/len { sequence length } bind def

/coor [
[190.41445923 456.34036255]
[189.31442261 441.38076782]
[188.21438599 426.42114258]
[187.11434937 411.46154785]
[178.46452332 399.33596802]
[185.16893005 385.00552368]
[184.06889343 370.04592896]
[181.11555481 355.33953857]
[176.35482788 341.11508179]
[171.59408569 326.89059448]
[166.72908020 312.70147705]
[161.76005554 298.54843140]
[156.79103088 284.39538574]
[151.82199097 270.24230957]
[146.85296631 256.08926392]
[141.88394165 241.93623352]
[136.91490173 227.78318787]
[131.94587708 213.63014221]
[120.42930603 204.18461609]
[123.15816498 188.60052490]
[118.18913269 174.44747925]
[113.22010803 160.29443359]
[108.25107574 146.14138794]
[103.28205109 131.98834229]
[98.31301880 117.83528900]
[84.27281189 112.55583191]
[71.20965576 119.92833710]
[58.14649582 127.30084229]
[45.08333588 134.67335510]
[39.14958191 141.61494446]
[31.77385521 142.05659485]
[18.60387611 149.23654175]
[5.43389654 156.41648865]
[-7.73608255 163.59643555]
[-15.81416607 177.86796570]
[-32.21279144 177.73731995]
[-40.06246185 163.33889771]
[-31.28810501 149.48455811]
[-14.91603088 150.42646790]
[-1.74605167 143.24652100]
[11.42392731 136.06655884]
[24.59390640 128.88661194]
[37.71082687 121.61019135]
[50.77398682 114.23768616]
[63.83714676 106.86518097]
[76.90030670 99.49266815]
[75.64013672 92.09929657]
[61.57415390 86.88890076]
[73.11978912 77.31255341]
[71.85961151 69.91918182]
[57.09176636 67.29036713]
[42.32391739 64.66155243]
[27.55607033 62.03273392]
[12.78822231 59.40391922]
[-1.97962558 56.77510452]
[-16.74747276 54.14628983]
[-29.56330681 63.39453506]
[-45.15140915 60.78942490]
[-54.26363754 47.87652969]
[-51.49386597 32.31684113]
[-38.48535538 23.34164619]
[-22.95582008 26.27576637]
[-14.11865902 39.37844467]
[0.64918917 42.00725937]
[15.41703701 44.63607407]
[30.18488503 47.26488876]
[44.95273209 49.89370346]
[59.72058105 52.52251816]
[74.48842621 55.15133286]
[84.89679718 66.40765381]
[92.89447021 79.10945892]
[98.31301880 92.89723206]
[103.28205109 78.74417877]
[108.25107574 64.59113312]
[113.22010803 50.43808746]
[110.49124908 34.85399628]
[122.00782013 25.40847588]
[126.97684479 11.25542831]
[131.94587708 -2.89761853]
[136.91490173 -17.05066490]
[132.04479980 -28.99245834]
[136.47320557 -40.67734146]
[147.31663513 -46.03569031]
[152.49288940 -60.11426926]
[157.66915894 -74.19284821]
[162.84541321 -88.27142334]
[168.02166748 -102.35000610]
[173.19792175 -116.42858124]
[178.37419128 -130.50715637]
[183.55044556 -144.58573914]
[188.72669983 -158.66430664]
[193.90295410 -172.74288940]
[193.01258850 -177.88165283]
[194.07475281 -182.39724731]
[196.52561951 -185.65061951]
[199.62950134 -187.31889343]
[205.42057800 -201.15592957]
[204.96205139 -207.74778748]
[207.51652527 -212.82116699]
[211.59011841 -215.31016541]
[217.78489685 -228.97123718]
[223.97969055 -242.63229370]
[230.17446899 -256.29336548]
[222.67823792 -269.75115967]
[224.52223206 -284.86584473]
[234.79122925 -295.86636353]
[249.39390564 -298.67706299]
[255.58868408 -312.33813477]
[248.09246826 -325.79595947]
[249.93644714 -340.91061401]
[260.20544434 -351.91113281]
[274.80813599 -354.72183228]
[281.00289917 -368.38290405]
[287.19769287 -382.04397583]
[293.39248657 -395.70504761]
[299.58724976 -409.36608887]
[305.68161011 -423.07226562]
[311.67517090 -436.82278442]
[317.66876221 -450.57333374]
[318.45492554 -467.50903320]
[334.94641113 -471.44186401]
[343.29083252 -456.68356323]
[331.41928101 -444.57974243]
[325.42572021 -430.82922363]
[319.43212891 -417.07870483]
[319.64102173 -409.69271851]
[313.24832153 -403.17132568]
[307.05352783 -389.51025391]
[300.85876465 -375.84918213]
[294.66397095 -362.18811035]
[288.46917725 -348.52706909]
[295.97634888 -335.69036865]
[294.46737671 -320.71749878]
[284.31246948 -309.37152100]
[269.24975586 -306.14334106]
[263.05496216 -292.48229980]
[270.56213379 -279.64559937]
[269.05316162 -264.67272949]
[258.89822388 -253.32675171]
[243.83552551 -250.09857178]
[237.64074707 -236.43751526]
[231.44596863 -222.77644348]
[225.25117493 -209.11538696]
[219.25761414 -195.36485291]
[213.46653748 -181.52781677]
[207.98153687 -167.56663513]
[202.80528259 -153.48805237]
[197.62902832 -139.40948486]
[192.45275879 -125.33090210]
[187.27650452 -111.25231934]
[182.10025024 -97.17374420]
[176.92399597 -83.09516907]
[171.74772644 -69.01658630]
[166.57147217 -54.93801117]
[161.39521790 -40.85943222]
[165.31278992 -23.75231552]
[151.06794739 -12.08163643]
[146.09892273 2.07141089]
[141.12989807 16.22445869]
[136.16085815 30.37750626]
[139.24514771 44.94927597]
[127.37315369 55.40711594]
[122.40412140 69.56016541]
[117.43509674 83.71321106]
[112.46606445 97.86625671]
[112.46606445 112.86625671]
[117.43509674 127.01930237]
[122.40412140 141.17234802]
[127.37315369 155.32539368]
[132.34217834 169.47845459]
[137.31121826 183.63150024]
[149.18319702 194.08934021]
[146.09892273 208.66110229]
[151.06794739 222.81414795]
[156.03698730 236.96719360]
[161.00601196 251.12025452]
[165.97503662 265.27328491]
[170.94407654 279.42633057]
[175.91310120 293.57937622]
[180.88212585 307.73242188]
[186.67637634 314.79089355]
[185.81855774 322.12988281]
[190.57928467 336.35433960]
[195.34002686 350.57879639]
[201.56431580 347.70516968]
[209.39971924 347.31372070]
[217.88381958 350.01400757]
[225.86094666 356.05871582]
[233.98739624 368.66668701]
[242.11383057 381.27465820]
[250.24028015 393.88262939]
[265.73886108 396.97604370]
[274.44100952 410.16879272]
[271.18389893 425.63378906]
[257.89990234 434.19598389]
[242.47018433 430.77554321]
[234.04891968 417.40176392]
[237.63230896 402.00906372]
[229.50587463 389.40109253]
[221.37942505 376.79312134]
[213.25297546 364.18515015]
[199.02850342 368.94589233]
[200.12854004 383.90548706]
[208.85705566 397.10107422]
[202.07395935 410.36151123]
[203.17399597 425.32110596]
[204.27403259 440.28073120]
[205.37406921 455.24032593]
[217.50109863 465.37496948]
[218.82669067 481.12356567]
[208.56440735 493.14276123]
[192.80267334 494.30178833]
[180.89265442 483.91299438]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 208]
[2 207]
[3 206]
[4 205]
[6 203]
[7 202]
[8 184]
[9 183]
[10 182]
[11 180]
[12 179]
[13 178]
[14 177]
[15 176]
[16 175]
[17 174]
[18 173]
[20 171]
[21 170]
[22 169]
[23 168]
[24 167]
[25 166]
[26 46]
[27 45]
[28 44]
[29 43]
[31 42]
[32 41]
[33 40]
[34 39]
[50 69]
[51 68]
[52 67]
[53 66]
[54 65]
[55 64]
[56 63]
[72 165]
[73 164]
[74 163]
[75 162]
[77 160]
[78 159]
[79 158]
[80 157]
[83 155]
[84 154]
[85 153]
[86 152]
[87 151]
[88 150]
[89 149]
[90 148]
[91 147]
[92 146]
[96 145]
[97 144]
[100 143]
[101 142]
[102 141]
[103 140]
[107 136]
[108 135]
[112 131]
[113 130]
[114 129]
[115 128]
[116 127]
[117 125]
[118 124]
[119 123]
[188 201]
[189 200]
[190 199]
[191 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
