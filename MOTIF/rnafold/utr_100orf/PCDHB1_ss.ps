%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:17:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGAGAGCAGCUGUUGCAGUAACCUGUUGCAGAAAAGUGAAAGUAUAUCCGCAACAGUUGGCUCUGAUUGCAGAGAGCGCGCUUGUGAGAACUGAUGGCGGGUACGCGCAGAAAAUCUUUGCAAAACAGGCAAGUGGGAUCUCUUCUCAUUUUUCUGUGCAUAUCUGUGGGGGAUGCGACAACUAUCCGCUAUU\
) } def
/len { sequence length } bind def

/coor [
[98.69638062 211.52079773]
[97.73532867 196.55162048]
[96.77427673 181.58244324]
[95.81322479 166.61325073]
[82.92417908 158.94041443]
[69.30706787 165.23123169]
[55.68995285 171.52203369]
[42.07284546 177.81285095]
[28.45573425 184.10365295]
[14.88947678 190.50340271]
[1.37494361 197.01165771]
[-12.13958931 203.51991272]
[-25.65412331 210.02816772]
[-39.16865540 216.53642273]
[-52.68318939 223.04467773]
[-66.19772339 229.55293274]
[-79.71225739 236.06118774]
[-93.22678375 242.56944275]
[-103.23638153 258.01864624]
[-120.66815186 256.04013062]
[-134.07662964 262.76416016]
[-147.48512268 269.48818970]
[-152.55331421 284.21743774]
[-166.24720764 290.84555054]
[-180.25807190 285.92303467]
[-193.66656494 292.64706421]
[-202.53413391 305.74960327]
[-217.37940979 304.53848267]
[-230.78790283 311.26251221]
[-244.19638062 317.98654175]
[-257.60485840 324.71057129]
[-262.34643555 339.78680420]
[-276.39819336 347.02032471]
[-291.42346191 342.11962891]
[-298.50802612 327.99218750]
[-293.44873047 313.01959229]
[-279.24719238 306.08477783]
[-264.32888794 311.30209351]
[-250.92041016 304.57806396]
[-237.51193237 297.85403442]
[-224.10343933 291.13000488]
[-216.19493103 278.50839233]
[-200.39059448 279.23858643]
[-186.98210144 272.51455688]
[-182.54704285 258.34182739]
[-169.04472351 251.33169556]
[-154.20915222 256.07971191]
[-140.80065918 249.35566711]
[-127.39217377 242.63163757]
[-123.27944183 231.24740601]
[-112.15315247 225.53875732]
[-99.73504639 229.05491638]
[-86.22051239 222.54666138]
[-72.70597839 216.03840637]
[-59.19144440 209.53015137]
[-45.67691040 203.02189636]
[-32.16238022 196.51364136]
[-18.64784622 190.00537109]
[-5.13331223 183.49711609]
[8.38122082 176.98886108]
[13.04941940 171.24703979]
[22.16492271 170.48655701]
[35.78203201 164.19573975]
[49.39914322 157.90492249]
[63.01625443 151.61412048]
[76.63336182 145.32330322]
[57.51770020 113.02718353]
[66.75377655 81.85086823]
[91.52919769 69.84713745]
[91.04842377 54.85484695]
[90.56765747 39.86255264]
[90.08688354 24.87026024]
[89.60610962 9.87796593]
[89.12533569 -5.11432695]
[88.64456177 -20.10662079]
[88.16378784 -35.09891510]
[87.68301392 -50.09120560]
[86.48215485 -65.04306030]
[84.56400299 -79.91991425]
[82.64584351 -94.79676056]
[80.72768402 -109.67361450]
[78.80953217 -124.55046082]
[76.65317535 -139.39465332]
[74.25917816 -154.20237732]
[71.86517334 -169.01011658]
[69.47117615 -183.81784058]
[67.07717896 -198.62556458]
[52.54321671 -203.42373657]
[41.91218948 -214.43463135]
[37.62703705 -229.12803650]
[40.67245102 -244.12750244]
[50.34861755 -255.98626709]
[64.43202972 -261.97927856]
[79.68641663 -260.72937012]
[92.60643005 -252.52378845]
[100.22315979 -239.24809265]
[100.78631592 -223.95294189]
[94.16650391 -210.15306091]
[81.88490295 -201.01956177]
[84.27890778 -186.21183777]
[86.67290497 -171.40411377]
[89.06690216 -156.59638977]
[91.46089935 -141.78865051]
[94.75072479 -138.31097412]
[95.88290405 -132.72586060]
[93.68637848 -126.46862030]
[95.60453796 -111.59176636]
[97.52268982 -96.71492004]
[99.44084930 -81.83806610]
[101.35900879 -66.96121979]
[111.41730499 -78.08914185]
[126.39000702 -78.99367523]
[137.71479797 -69.15756989]
[138.91546631 -54.20569611]
[129.30540466 -42.68846893]
[114.38021851 -41.19214249]
[102.67530823 -50.57197952]
[103.15608215 -35.57968903]
[103.63685608 -20.58739471]
[104.11762238 -5.59510088]
[104.59839630 9.39719296]
[105.07917023 24.38948631]
[105.55994415 39.38177872]
[106.04071808 54.37407303]
[106.52149200 69.36636353]
[134.72642517 77.91146851]
[149.67254639 111.52558899]
[164.54940796 109.60742950]
[179.42625427 107.68927002]
[194.30310059 105.77111816]
[209.17994690 103.85295868]
[221.87739563 94.41445160]
[235.48960876 100.46070099]
[250.36645508 98.54254913]
[265.24331665 96.62438965]
[280.12014771 94.70623016]
[294.99700928 92.78807068]
[309.87387085 90.86991882]
[324.75070190 88.95175934]
[339.62756348 87.03359985]
[350.52688599 75.26140594]
[366.51510620 76.58663940]
[375.32742310 89.99269867]
[370.20382690 105.19559479]
[355.07464600 110.53297424]
[341.54571533 101.91045380]
[326.66885376 103.82860565]
[311.79202271 105.74676514]
[296.91516113 107.66492462]
[282.03833008 109.58308411]
[267.16146851 111.50123596]
[252.28462219 113.41939545]
[237.40776062 115.33755493]
[225.77441406 124.63885498]
[211.09811401 118.72980499]
[196.22126770 120.64796448]
[181.34440613 122.56612396]
[166.46755981 124.48427582]
[151.59071350 126.40243530]
[147.32279968 140.78245544]
[158.74449158 150.50587463]
[170.16616821 160.22930908]
[181.58786011 169.95272827]
[190.16238403 173.13838196]
[193.11308289 179.92469788]
[204.37745667 189.82994080]
[215.64183044 199.73518372]
[231.81910706 202.42367554]
[237.32530212 217.87080383]
[226.49613953 230.18588257]
[210.47171021 226.70021057]
[205.73658752 210.99955750]
[194.47221375 201.09431458]
[183.20783997 191.18907166]
[171.86444092 181.37442017]
[160.44274902 171.65100098]
[149.02105713 161.92756653]
[137.59936523 152.20414734]
[130.89512634 155.56616211]
[137.61915588 168.97463989]
[144.34318542 182.38313293]
[154.88154602 193.05752563]
[147.98609924 206.37867737]
[133.18614197 203.93714905]
[130.93470764 189.10716248]
[124.21067047 175.69866943]
[117.48664856 162.29019165]
[110.78240204 165.65220642]
[111.74345398 180.62138367]
[112.70451355 195.59056091]
[113.66556549 210.55973816]
[124.71524811 222.19091797]
[122.36837006 238.06138611]
[108.42524719 245.99667358]
[93.58186340 239.90953064]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 191]
[2 190]
[3 189]
[4 188]
[5 66]
[6 65]
[7 64]
[8 63]
[9 62]
[10 60]
[11 59]
[12 58]
[13 57]
[14 56]
[15 55]
[16 54]
[17 53]
[18 52]
[20 49]
[21 48]
[22 47]
[25 44]
[26 43]
[28 41]
[29 40]
[30 39]
[31 38]
[69 125]
[70 124]
[71 123]
[72 122]
[73 121]
[74 120]
[75 119]
[76 118]
[77 117]
[78 110]
[79 109]
[80 108]
[81 107]
[82 106]
[83 103]
[84 102]
[85 101]
[86 100]
[87 99]
[127 159]
[128 158]
[129 157]
[130 156]
[131 155]
[133 153]
[134 152]
[135 151]
[136 150]
[137 149]
[138 148]
[139 147]
[140 146]
[160 178]
[161 177]
[162 176]
[163 175]
[165 174]
[166 173]
[167 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
