%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:06:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCUCUCUGCCUUGGCUGCCAGGCAGGGAAGGGCCCCCUGUCCAGUGGACACGUGACCCACGUGACCUUACCUAUCAUUGGAGAUGACUCACACUCUUUACCCUACCCCUUUUGCUUUGUAUCCAAUAAAUAUCAGCGCAGCCUGGCAUUUGGGGCCACUACCAGUCUCCUGCUUUGUAUCCA\
) } def
/len { sequence length } bind def

/coor [
[52.65986252 604.81213379]
[55.28525162 619.78460693]
[51.97619247 634.62097168]
[43.23728180 647.05883789]
[30.40115166 655.20147705]
[15.42521000 657.80712891]
[0.59318310 654.47857666]
[-11.83315372 645.72332764]
[-19.95887375 632.87646484]
[-22.54486465 617.89709473]
[-19.19677925 603.06945801]
[-10.42517948 590.65466309]
[2.43233132 582.54583740]
[17.41507530 579.97955322]
[20.69965172 565.34362793]
[23.98423004 550.70764160]
[19.22161865 536.59497070]
[29.79299164 524.82397461]
[33.07756805 510.18801880]
[36.36214447 495.55206299]
[31.59953308 481.43942261]
[42.17090607 469.66839600]
[45.45548248 455.03244019]
[48.74006271 440.39645386]
[52.02463913 425.76049805]
[55.30921555 411.12454224]
[58.59379196 396.48855591]
[61.87836838 381.85260010]
[65.03855896 367.18927002]
[68.07413483 352.49963379]
[70.48352051 337.69439697]
[72.26239014 322.80026245]
[73.91474152 307.89154053]
[75.44043732 292.96932983]
[76.96613312 278.04711914]
[78.49183655 263.12490845]
[80.01753235 248.20271301]
[81.54323578 233.28051758]
[72.34409332 216.28782654]
[84.33835602 200.10456848]
[85.35646057 185.13916016]
[82.66747284 178.23654175]
[86.52104950 169.92895508]
[87.79314423 154.98300171]
[89.06523132 140.03703308]
[90.33731842 125.09107208]
[65.08909607 111.53334808]
[60.60436630 75.02329254]
[46.78300858 69.19490051]
[31.06080437 70.96205902]
[22.33999062 58.88742828]
[8.51863289 53.05904388]
[-5.30272532 47.23065948]
[-19.12408257 41.40227127]
[-32.94544220 35.57388687]
[-46.76679993 29.74550438]
[-63.71071243 29.16230774]
[-67.84085083 12.71912384]
[-53.18360901 4.19846678]
[-40.93841553 15.92414570]
[-27.11705589 21.75253105]
[-13.29569817 27.58091545]
[0.52565962 33.40930176]
[14.34701729 39.23768616]
[28.16837502 45.06607056]
[42.90198517 42.88203049]
[52.61139679 55.37354660]
[66.43275452 61.20193100]
[72.46273041 56.74218369]
[63.12762451 45.00098038]
[53.79251862 33.25978088]
[44.45741272 21.51857948]
[31.22363091 14.45692158]
[30.12504387 -0.50279486]
[42.18525314 -9.42195225]
[56.16723633 -3.99018598]
[59.04364777 10.73065853]
[67.53665924 23.09466743]
[76.02967072 35.45867538]
[84.52268982 47.82268524]
[90.55266571 43.36293411]
[89.02696991 28.44072914]
[87.50126648 13.51852322]
[85.97557068 -1.40368319]
[81.98147583 -9.64462662]
[84.55287170 -16.59191704]
[83.28077698 -31.53787804]
[71.99164581 -42.93678284]
[74.00803375 -58.85261536]
[87.78314972 -67.07611084]
[102.74989319 -61.29890823]
[107.42706299 -45.95278168]
[98.22673798 -32.80996704]
[99.49883270 -17.86400604]
[100.89777374 -2.92938256]
[102.42347717 11.99282360]
[103.94917297 26.91502953]
[105.47487640 41.83723831]
[111.89450073 45.71517563]
[117.70965576 31.88824654]
[123.52481842 18.06131935]
[129.33998108 4.23439217]
[129.59101868 -10.76350689]
[139.43530273 -22.08119774]
[154.25369263 -24.40820122]
[167.09313965 -16.65264511]
[171.92912292 -2.45358372]
[166.49249268 11.52651215]
[153.33316040 18.72807693]
[143.80001831 30.30906677]
[134.26689148 41.89005661]
[124.73374939 53.47105026]
[131.15338135 57.34898758]
[145.07171631 51.75613785]
[158.99005127 46.16329193]
[172.90838623 40.57044601]
[182.82850647 28.24560547]
[197.52290344 30.67951584]
[211.44123840 25.08666801]
[225.35957336 19.49382019]
[239.22991943 13.78299904]
[253.05128479 7.95461416]
[266.87265015 2.12622929]
[271.30667114 -12.86954784]
[284.37094116 -21.46369553]
[299.89685059 -19.59831810]
[310.55358887 -8.15419102]
[311.30935669 7.46511936]
[301.80728149 19.88465118]
[286.53396606 23.24028397]
[272.70101929 15.94758701]
[258.87966919 21.77597237]
[245.05830383 27.60435677]
[240.10537720 33.11301422]
[230.95242310 33.41215515]
[217.03408813 39.00500488]
[203.11575317 44.59785080]
[194.19116211 56.52265167]
[178.50123596 54.48878098]
[164.58290100 60.08162689]
[150.66456604 65.67447662]
[136.74623108 71.26731873]
[134.47804260 112.76927185]
[105.28327942 126.36316681]
[104.01119232 141.30912781]
[102.73910522 156.25508118]
[101.46701050 171.20104980]
[100.32186890 186.15727234]
[99.30376434 201.12268066]
[106.93537140 208.91334534]
[108.96497345 219.40472412]
[104.95758820 229.07316589]
[96.46543884 234.80621338]
[94.93974304 249.72840881]
[93.41403961 264.65063477]
[91.88834381 279.57281494]
[90.36264038 294.49502563]
[88.83694458 309.41723633]
[91.08065796 318.29595947]
[87.15653992 324.57913208]
[85.37767029 339.47326660]
[98.66304779 332.50918579]
[112.46038818 338.39419556]
[116.62944794 352.80319214]
[108.10620880 365.14636230]
[93.15475464 366.35223389]
[82.76376343 355.53521729]
[79.72818756 370.22485352]
[81.05718231 379.28573608]
[76.51433563 385.13717651]
[73.22975922 399.77313232]
[69.94518280 414.40911865]
[66.66060638 429.04507446]
[63.37602997 443.68103027]
[60.09145355 458.31701660]
[56.80687332 472.95297241]
[61.33455276 488.11248779]
[50.99811172 498.83663940]
[47.71353531 513.47259521]
[44.42895889 528.10858154]
[48.95663452 543.26806641]
[38.62019730 553.99224854]
[35.33562088 568.62817383]
[32.05104446 583.26416016]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 184]
[15 183]
[16 182]
[18 180]
[19 179]
[20 178]
[22 176]
[23 175]
[24 174]
[25 173]
[26 172]
[27 171]
[28 170]
[29 168]
[30 167]
[31 161]
[32 160]
[33 158]
[34 157]
[35 156]
[36 155]
[37 154]
[38 153]
[40 149]
[41 148]
[43 147]
[44 146]
[45 145]
[46 144]
[48 68]
[49 67]
[51 65]
[52 64]
[53 63]
[54 62]
[55 61]
[56 60]
[81 98]
[82 97]
[83 96]
[84 95]
[86 94]
[87 93]
[113 142]
[114 141]
[115 140]
[116 139]
[118 137]
[119 136]
[120 135]
[121 133]
[122 132]
[123 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
