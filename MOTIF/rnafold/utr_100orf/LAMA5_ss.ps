%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:38:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACCCGCCGGGCUCCCGCCGCGCGCGCUGUCCCUGGAGCUCGGGGACGCGGCCCGGAGCCGGGAAGAUGGCGAAGCGGCUCUGCGCGGGGAGCGCACUGUGUGUUCGCGGCCCCCGGGGCCCCGCGCCGCUGCUGCUGGUCGGGCUGGCGCUGCUGGGCGCGGCGC\
) } def
/len { sequence length } bind def

/coor [
[89.39328766 400.01327515]
[74.34719086 404.27343750]
[60.10409164 397.81835938]
[53.38914490 383.69589233]
[57.37294388 368.57427979]
[70.17446136 359.59344482]
[71.29541016 344.63540649]
[72.41636658 329.67733765]
[73.53731537 314.71929932]
[74.65826416 299.76123047]
[67.89371490 286.49133301]
[76.64066315 273.30795288]
[77.76161957 258.34991455]
[75.11468506 251.41586304]
[79.04595184 243.12347412]
[80.44640350 228.18899536]
[73.93115997 214.79493713]
[82.92310333 201.77742004]
[84.32355499 186.84294128]
[77.80831909 173.44888306]
[86.80025482 160.43136597]
[88.20070648 145.49688721]
[89.60116577 130.56240845]
[91.00161743 115.62792206]
[80.85497284 107.03144836]
[78.57898712 92.31610870]
[63.70730972 94.27400208]
[48.83563995 96.23189545]
[40.69604492 100.47047424]
[33.66788483 98.08466339]
[18.76220131 99.76412964]
[3.85651779 101.44359589]
[-11.04916573 103.12306213]
[-25.95484924 104.80253601]
[-40.86053085 106.48200226]
[-55.76621628 108.16146851]
[-66.85281372 119.75745392]
[-82.81774139 118.17613220]
[-91.41407776 104.63056183]
[-86.04744720 89.51173401]
[-70.83466339 84.41753387]
[-57.44568253 93.25578308]
[-42.53999710 91.57631683]
[-27.63431549 89.89685059]
[-12.72863293 88.21738434]
[2.17705059 86.53791809]
[17.08273315 84.85844421]
[31.98841667 83.17897797]
[46.87774658 81.36022186]
[61.74942017 79.40232849]
[76.62109375 77.44443512]
[89.24678040 69.34555054]
[97.22726440 56.64468765]
[105.20774841 43.94382477]
[113.18822479 31.24296379]
[121.16870880 18.54210091]
[121.80323792 11.89347267]
[125.21066284 7.27981615]
[129.69256592 5.52336407]
[138.14236450 -6.87021780]
[146.59216309 -19.26379967]
[155.04197693 -31.65738106]
[163.49177551 -44.05096436]
[161.86720276 -56.87384033]
[169.19425964 -67.03084564]
[181.08753967 -69.37776184]
[189.76760864 -81.61117554]
[192.19683838 -90.46088409]
[198.72612000 -93.99013519]
[207.63342285 -106.05909729]
[216.54072571 -118.12806702]
[225.44802856 -130.19703674]
[234.35533142 -142.26599121]
[232.20068359 -157.69308472]
[241.40588379 -169.80584717]
[256.12652588 -171.76492310]
[265.03384399 -183.83387756]
[273.94113159 -195.90284729]
[282.84844971 -207.97181702]
[280.69378662 -223.39891052]
[289.89898682 -235.51167297]
[304.61962891 -237.47073364]
[313.52694702 -249.53970337]
[315.49633789 -265.23785400]
[329.27947998 -270.88363647]
[338.18676758 -282.95260620]
[340.78106689 -291.75534058]
[347.37518311 -295.16186523]
[356.50662231 -307.06216431]
[365.63803101 -318.96246338]
[374.76947021 -330.86276245]
[376.72888184 -349.15301514]
[393.15863037 -355.26922607]
[402.06591797 -367.33816528]
[410.97323608 -379.40713501]
[412.94262695 -395.10528564]
[426.72576904 -400.75106812]
[435.63305664 -412.82003784]
[434.67340088 -428.83435059]
[446.69149780 -439.46191406]
[462.46810913 -436.55014038]
[469.90075684 -422.33270264]
[463.28775024 -407.71600342]
[447.70202637 -403.91271973]
[438.79473877 -391.84378052]
[437.46243286 -377.00888062]
[423.04220581 -370.49984741]
[414.13488770 -358.43087769]
[405.22760010 -346.36190796]
[406.71575928 -334.33096313]
[399.35794067 -324.19625854]
[386.66976929 -321.73135376]
[377.53833008 -309.83105469]
[368.40692139 -297.93075562]
[359.27548218 -286.03045654]
[350.25573730 -274.04528809]
[341.34841919 -261.97631836]
[340.01614380 -247.14141846]
[325.59591675 -240.63240051]
[316.68859863 -228.56343079]
[319.15554810 -213.91932678]
[310.29421997 -201.55279541]
[294.91741943 -199.06451416]
[286.01010132 -186.99554443]
[277.10281372 -174.92657471]
[268.19549561 -162.85762024]
[270.66244507 -148.21351624]
[261.80111694 -135.84698486]
[246.42430115 -133.35868835]
[237.51699829 -121.28972626]
[228.60969543 -109.22076416]
[219.70239258 -97.15179443]
[210.79508972 -85.08283234]
[202.00102234 -72.93110657]
[193.32095337 -60.69769287]
[192.64669800 -43.17941284]
[175.88534546 -35.60116196]
[167.43554688 -23.20758057]
[158.98574829 -10.81399822]
[150.53594971 1.57958305]
[142.08615112 13.97316456]
[133.86956787 26.52258110]
[125.88909149 39.22344589]
[117.90860748 51.92430878]
[109.92812347 64.62516785]
[101.94764709 77.32603455]
[117.73850250 88.42177582]
[118.55931091 106.32682800]
[105.93609619 117.02838135]
[104.53564453 131.96286011]
[103.13519287 146.89733887]
[101.73473358 161.83181763]
[108.14980316 176.29409790]
[99.25803375 188.24339294]
[97.85758209 203.17787170]
[104.27265167 217.64015198]
[95.38088226 229.58944702]
[93.98043060 244.52392578]
[92.71967316 259.47085571]
[91.59872437 274.42892456]
[98.28309631 288.76870728]
[89.61632538 300.88217163]
[88.49536896 315.84024048]
[87.37442017 330.79830933]
[86.25347137 345.75634766]
[85.13251495 360.71441650]
[96.45252991 371.50289917]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 166]
[7 165]
[8 164]
[9 163]
[10 162]
[12 160]
[13 159]
[15 158]
[16 157]
[18 155]
[19 154]
[21 152]
[22 151]
[23 150]
[24 149]
[26 51]
[27 50]
[28 49]
[30 48]
[31 47]
[32 46]
[33 45]
[34 44]
[35 43]
[36 42]
[52 146]
[53 145]
[54 144]
[55 143]
[56 142]
[59 141]
[60 140]
[61 139]
[62 138]
[63 137]
[66 135]
[67 134]
[69 133]
[70 132]
[71 131]
[72 130]
[73 129]
[76 126]
[77 125]
[78 124]
[79 123]
[82 120]
[83 119]
[85 117]
[86 116]
[88 115]
[89 114]
[90 113]
[91 112]
[93 109]
[94 108]
[95 107]
[97 105]
[98 104]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
