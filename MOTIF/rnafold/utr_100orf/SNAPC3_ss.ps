%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:20:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUCGCCGGCCGGGCGCCCCAAGCAACUACAACUUCCAUCACGCUCUGCGAGGCCUUGAUCUGCAGGCUUUUGCAGGGGAAGGAGUGGGGCGAACAUGGCUGAAGGAAGCCGAGGUGGCCCUACGUGUAGCGGGGUGGGUGGCAGGCAGGACCCAGUCUCCGGCAGUGGCGGCUGCAACUUUCCAGAGUAUGAGC\
) } def
/len { sequence length } bind def

/coor [
[51.37394333 186.72119141]
[53.87159729 167.50109863]
[54.11079788 152.50300598]
[54.34999466 137.50491333]
[54.58919144 122.50682068]
[49.65920258 108.34012604]
[40.16064835 96.73075867]
[30.66209602 85.12139130]
[15.93497276 79.34017944]
[13.86394024 64.59025574]
[4.36538696 52.98088837]
[-5.13316631 41.37151718]
[-14.63171959 29.76214790]
[-30.11355209 28.04440880]
[-39.58105469 16.13554573]
[-37.84804535 1.38657081]
[-47.34659958 -10.22280025]
[-56.84515381 -21.83217049]
[-66.34370422 -33.44153976]
[-75.84226227 -45.05091095]
[-85.34081268 -56.66028214]
[-91.39676666 -59.35920334]
[-94.67964935 -64.01594543]
[-94.95001984 -68.79468536]
[-104.07353210 -80.70104980]
[-118.60881042 -86.94895172]
[-120.20843506 -101.75741577]
[-129.33193970 -113.66378021]
[-137.04490662 -118.57949829]
[-138.50421143 -125.83353424]
[-147.43669128 -137.88388062]
[-152.18362427 -136.54313660]
[-157.28677368 -136.39878845]
[-162.43922424 -137.54226685]
[-167.31164551 -139.98529053]
[-171.57302856 -143.65455627]
[-185.61775208 -148.92196655]
[-199.66247559 -154.18939209]
[-215.30082703 -151.79093933]
[-224.50051880 -163.50480652]
[-238.54524231 -168.77223206]
[-243.71667480 -167.90924072]
[-248.24555969 -169.01301575]
[-251.48851013 -171.50689697]
[-253.12559509 -174.64205933]
[-266.90234375 -180.57511902]
[-280.67910767 -186.50817871]
[-294.45584106 -192.44123840]
[-308.23257446 -198.37429810]
[-322.00933838 -204.30735779]
[-335.78607178 -210.24041748]
[-349.56283569 -216.17347717]
[-363.33956909 -222.10653687]
[-377.16320801 -227.92956543]
[-391.03280640 -233.64218140]
[-404.90240479 -239.35479736]
[-418.77203369 -245.06741333]
[-431.91522217 -236.81903076]
[-447.39425659 -237.90490723]
[-459.25711060 -247.90753174]
[-462.94229126 -262.98065186]
[-457.03274536 -277.32836914]
[-443.80084229 -285.43368530]
[-428.33450317 -284.17993164]
[-416.58084106 -274.04922485]
[-413.05941772 -258.93701172]
[-399.18978882 -253.22439575]
[-385.32019043 -247.51177979]
[-371.45059204 -241.79916382]
[-364.05996704 -242.15908813]
[-357.40652466 -235.88328552]
[-343.62976074 -229.95022583]
[-329.85302734 -224.01716614]
[-316.07626343 -218.08410645]
[-302.29953003 -212.15104675]
[-288.52276611 -206.21798706]
[-274.74603271 -200.28492737]
[-260.96926880 -194.35186768]
[-247.19253540 -188.41880798]
[-233.27781677 -182.81695557]
[-219.23309326 -177.54953003]
[-204.59931946 -180.32475281]
[-194.39505005 -168.23411560]
[-180.35032654 -162.96669006]
[-166.30560303 -157.69927979]
[-153.10153198 -164.81632996]
[-149.78038025 -179.44404602]
[-146.45922852 -194.07174683]
[-143.13807678 -208.69946289]
[-139.81692505 -223.32717896]
[-136.49575806 -237.95487976]
[-133.17460632 -252.58259583]
[-139.37863159 -263.89932251]
[-136.30334473 -276.02001953]
[-126.12808990 -282.57485962]
[-122.57409668 -297.14773560]
[-128.15249634 -314.69100952]
[-115.55393982 -326.90048218]
[-112.23278809 -341.52819824]
[-108.91162872 -356.15588379]
[-105.59047699 -370.78359985]
[-102.26932526 -385.41131592]
[-110.90395355 -398.64834595]
[-107.56786346 -414.09649658]
[-94.24029541 -422.59069824]
[-78.82825470 -419.09149170]
[-70.47544098 -405.67483521]
[-74.13742065 -390.30065918]
[-87.64160919 -382.09014893]
[-90.96276855 -367.46246338]
[-94.28392029 -352.83474731]
[-97.60507202 -338.20703125]
[-100.92623138 -323.57931519]
[-94.74433136 -313.17324829]
[-97.39984894 -300.95373535]
[-108.00120544 -293.59375000]
[-111.55519867 -279.02087402]
[-105.72740936 -262.47302246]
[-118.54689789 -249.26144409]
[-121.86805725 -234.63372803]
[-125.18920898 -220.00601196]
[-128.51036072 -205.37831116]
[-131.83151245 -190.75059509]
[-135.15266418 -176.12287903]
[-138.47383118 -161.49517822]
[-135.38635254 -146.81636047]
[-126.45386505 -134.76602173]
[-117.42558289 -122.78729248]
[-108.30207062 -110.88092804]
[-94.41936493 -105.48464966]
[-92.16716766 -89.82456207]
[-83.04365540 -77.91819763]
[-73.73143768 -66.15883636]
[-64.23288727 -54.54946518]
[-54.73433304 -42.94009399]
[-45.23578262 -31.33072281]
[-35.73722839 -19.72135353]
[-26.23867416 -8.11198235]
[-11.43859100 -6.89005232]
[-1.64032733 4.74818993]
[-3.02234912 20.26359367]
[6.47620440 31.87296486]
[15.97475719 43.48233414]
[25.47331047 55.09170532]
[39.52103424 60.04253769]
[42.27146912 75.62283325]
[51.77001953 87.23220825]
[61.26857376 98.84157562]
[78.14341736 40.94857025]
[164.44834900 41.28451538]
[179.04911804 44.72219849]
[193.64988708 48.15988159]
[208.25064087 51.59756470]
[225.05389404 49.34214783]
[231.87278748 64.86436462]
[218.84483337 75.71373749]
[204.81295776 66.19832611]
[190.21220398 62.76064682]
[175.61143494 59.32296371]
[161.01066589 55.88528061]
[157.55787659 62.54322433]
[165.63699341 75.18157196]
[150.65228271 75.85910797]
[147.19947815 82.51705170]
[158.42103577 92.47077942]
[169.64259338 102.42449951]
[180.86415100 112.37822723]
[192.08570862 122.33194733]
[208.25123596 125.09017944]
[213.69078064 140.56091309]
[202.80860901 152.82917786]
[186.79936218 149.27444458]
[182.13198853 133.55351257]
[170.91043091 123.59978485]
[159.68887329 113.64605713]
[148.46731567 103.69233704]
[137.24575806 93.73860931]
[131.15013123 98.10820770]
[112.86325836 111.21699524]
[118.68628693 125.04061127]
[124.50930786 138.86422729]
[130.33233643 152.68785095]
[143.72181702 162.15640259]
[141.94731140 178.45925903]
[126.83428192 184.82543945]
[113.92970276 174.70594788]
[116.50871277 158.51086426]
[110.68569183 144.68725586]
[104.86266327 130.86363220]
[99.03964233 117.04001617]
[91.67655182 118.46651459]
[76.95037079 121.31951904]
[69.58728027 122.74601746]
[69.34808350 137.74411011]
[69.10888672 152.74220276]
[68.86968994 167.74029541]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 196]
[3 195]
[4 194]
[5 193]
[6 148]
[7 147]
[8 146]
[10 144]
[11 143]
[12 142]
[13 141]
[16 138]
[17 137]
[18 136]
[19 135]
[20 134]
[21 133]
[24 132]
[25 131]
[27 129]
[28 128]
[30 127]
[31 126]
[36 85]
[37 84]
[38 83]
[40 81]
[41 80]
[45 79]
[46 78]
[47 77]
[48 76]
[49 75]
[50 74]
[51 73]
[52 72]
[53 71]
[54 69]
[55 68]
[56 67]
[57 66]
[86 125]
[87 124]
[88 123]
[89 122]
[90 121]
[91 120]
[92 119]
[95 117]
[96 116]
[98 113]
[99 112]
[100 111]
[101 110]
[102 109]
[150 160]
[151 159]
[152 158]
[153 157]
[164 177]
[165 176]
[166 175]
[167 174]
[168 173]
[179 190]
[180 189]
[181 188]
[182 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
