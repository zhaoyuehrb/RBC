%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:25:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCGCUAGGCGCUCGCCACGCCCAUGCCUCCGUCGCUGCGCGGCCCACCCCGGAUGUCAGCCCCCCGCGCCGACCAGAAUCCGUGAACAUGGCGAACGAGGUUAUCAAGUGCAAGGCUGCAGUUGCUUGGGAGGCUGGAAAGCCUCUCUCCAUAGAGGAGAUAGAGGUGGCACCCCCAAAGGCUCAUG\
) } def
/len { sequence length } bind def

/coor [
[79.68133545 233.49099731]
[77.03571320 218.29217529]
[83.04822540 204.08467102]
[95.80030060 195.40203857]
[95.30172729 180.41032410]
[94.80315399 165.41862488]
[80.07571411 162.56860352]
[65.34959412 159.71882629]
[59.29413223 173.44221497]
[53.23867035 187.16560364]
[55.54402542 203.40190125]
[42.47052383 213.30218506]
[27.46706772 206.68190002]
[25.96792221 190.35140991]
[39.51528168 181.11013794]
[45.57074356 167.38674927]
[51.62620163 153.66336060]
[41.89375305 130.95840454]
[41.16741180 108.40340424]
[48.09810638 89.16619873]
[60.34668350 75.50032043]
[75.04446411 68.48114777]
[68.09059906 55.19040680]
[61.13674164 41.89966583]
[54.37258148 35.73213959]
[54.17983627 28.32971573]
[47.44784927 14.92522717]
[40.71585846 1.52073729]
[33.98387146 -11.88375187]
[27.25188446 -25.28824234]
[20.51989746 -38.69272995]
[5.34096003 -41.32067108]
[-5.25618362 -52.25474167]
[-7.35809755 -67.15594482]
[-0.36622384 -80.28041840]
[-7.09821177 -93.68490601]
[-20.20602226 -102.54470062]
[-19.00370598 -117.39069366]
[-25.73569489 -130.79518127]
[-32.57885361 -144.14326477]
[-39.53271484 -157.43400574]
[-46.48657227 -170.72474670]
[-53.44043350 -184.01548767]
[-60.39429092 -197.30622864]
[-67.34815216 -210.59698486]
[-74.63119507 -223.71022034]
[-82.23889923 -236.63781738]
[-89.84660339 -249.56542969]
[-101.73780060 -250.25329590]
[-111.71363831 -256.53918457]
[-117.35041046 -266.75885010]
[-117.34520721 -278.30993652]
[-111.81527710 -288.31448364]
[-118.98908234 -301.48779297]
[-126.16289520 -314.66113281]
[-133.33670044 -327.83444214]
[-137.82499695 -330.57278442]
[-140.53132629 -334.38302612]
[-141.34626770 -338.40167236]
[-140.52107239 -341.84808350]
[-147.02932739 -355.36260986]
[-153.53758240 -368.87713623]
[-168.76107788 -368.95870972]
[-182.38398743 -375.61480713]
[-191.72779846 -387.47705078]
[-194.98130798 -402.15954590]
[-191.55148315 -416.73849487]
[-182.17074585 -428.33450317]
[-188.67900085 -441.84906006]
[-195.18725586 -455.36358643]
[-201.69552612 -468.87811279]
[-208.20378113 -482.39263916]
[-226.30094910 -487.94677734]
[-234.46942139 -504.66979980]
[-227.95214844 -521.76190186]
[-234.90600586 -535.05267334]
[-250.21768188 -538.22857666]
[-259.86505127 -550.53558350]
[-259.29287720 -566.16271973]
[-248.77137756 -577.73126221]
[-233.26844788 -579.77899170]
[-220.10409546 -571.33892822]
[-215.49414062 -556.39630127]
[-221.61526489 -542.00653076]
[-214.66140747 -528.71575928]
[-203.27168274 -527.74371338]
[-193.67106628 -521.32061768]
[-188.31613159 -510.95046997]
[-188.64411926 -499.16397095]
[-194.68923950 -488.90090942]
[-188.18098450 -475.38638306]
[-181.67272949 -461.87182617]
[-175.16447449 -448.35729980]
[-168.65621948 -434.84277344]
[-153.74130249 -434.94692993]
[-140.20455933 -428.53863525]
[-130.75384521 -416.84057617]
[-127.30532837 -402.13928223]
[-130.59513855 -387.33847046]
[-140.02305603 -375.38540649]
[-133.51480103 -361.87084961]
[-127.00653839 -348.35632324]
[-120.16338348 -335.00823975]
[-112.98957062 -321.83493042]
[-105.81576538 -308.66159058]
[-98.64195251 -295.48828125]
[-80.81382751 -291.39282227]
[-71.46401215 -275.30041504]
[-76.91900635 -257.17312622]
[-69.31130219 -244.24552917]
[-61.70359802 -231.31793213]
[-58.38084793 -230.08589172]
[-55.49524307 -227.17263794]
[-53.83524704 -222.80383301]
[-54.05740738 -217.55084229]
[-47.10354996 -204.26010132]
[-40.14968872 -190.96934509]
[-33.19583130 -177.67860413]
[-26.24197197 -164.38786316]
[-19.28811264 -151.09712219]
[-13.39031792 -146.61950684]
[-12.33120441 -137.52717590]
[-5.59921741 -124.12268829]
[7.02707624 -116.22167206]
[6.30627823 -100.41689301]
[13.03826618 -87.01240540]
[27.74096489 -84.78336334]
[38.43839264 -74.19898224]
[40.88068771 -59.16939163]
[33.92438507 -45.42472076]
[40.65637589 -32.02022934]
[47.38836288 -18.61573982]
[54.12034988 -5.21125031]
[60.85233688 8.19323921]
[67.58432770 21.59772873]
[74.42748260 34.94580460]
[81.38134766 48.23654938]
[88.33520508 61.52729034]
[112.28585815 53.37795639]
[140.71197510 61.22114944]
[162.83827209 86.66991425]
[168.03923035 124.29904938]
[181.60739136 130.69476318]
[195.17555237 137.09046936]
[208.74369812 143.48619080]
[222.31185913 149.88189697]
[235.98445129 156.05120850]
[249.75769043 161.99240112]
[263.53091431 167.93359375]
[277.30416870 173.87478638]
[291.07742310 179.81599426]
[306.45785522 175.25291443]
[319.53198242 184.55059814]
[320.27044678 200.57664490]
[308.10675049 211.03724670]
[292.37185669 207.90792847]
[285.13623047 193.58923340]
[271.36297607 187.64804077]
[257.58972168 181.70683289]
[243.81649780 175.76564026]
[230.04324341 169.82444763]
[225.33682251 170.73182678]
[220.01196289 168.67893982]
[215.91615295 163.45005798]
[202.34799194 157.05433655]
[188.77983093 150.65863037]
[175.21166992 144.26290894]
[161.64352417 137.86720276]
[151.53266907 148.94740295]
[159.14036560 161.87500000]
[174.24765015 167.27403259]
[179.30921936 182.49771118]
[170.44227600 195.86770630]
[154.44877625 197.12771606]
[143.59756470 185.31115723]
[146.21276855 169.48269653]
[138.60507202 156.55509949]
[131.40251160 158.64633179]
[127.82239532 173.21282959]
[116.99741364 162.82881165]
[109.79486847 164.92004395]
[110.29344177 179.91175842]
[110.79201508 194.90347290]
[124.09278870 202.71966553]
[131.03596497 216.49630737]
[129.40599060 231.83732605]
[119.72298431 243.84744263]
[105.07676697 248.69429016]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 183]
[5 182]
[6 181]
[8 17]
[9 16]
[10 15]
[22 138]
[23 137]
[24 136]
[26 135]
[27 134]
[28 133]
[29 132]
[30 131]
[31 130]
[35 126]
[36 125]
[38 123]
[39 122]
[40 120]
[41 119]
[42 118]
[43 117]
[44 116]
[45 115]
[46 111]
[47 110]
[48 109]
[53 106]
[54 105]
[55 104]
[56 103]
[60 102]
[61 101]
[62 100]
[68 94]
[69 93]
[70 92]
[71 91]
[72 90]
[75 85]
[76 84]
[142 168]
[143 167]
[144 166]
[145 165]
[146 164]
[147 161]
[148 160]
[149 159]
[150 158]
[151 157]
[169 177]
[170 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
