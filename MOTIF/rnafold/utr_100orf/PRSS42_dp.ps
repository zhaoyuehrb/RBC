%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:24:04 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PRSS42)
} def

/sequence { (\
AUGUCCUCUGGCGGCGGCUCCCGGGGCCUCCUGGCGUGGCUUCUGCUCCUUCAGCCCUGGCCCGGGCAGAACUGGGCGGGCAUGGCGGCGCCACGCCUCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 83 0.003657472 ubox
2 10 0.006722050 ubox
2 13 0.071020738 ubox
2 16 0.003889416 ubox
2 82 0.003908109 ubox
3 9 0.008808074 ubox
3 12 0.834329931 ubox
3 15 0.066714902 ubox
3 18 0.004407222 ubox
3 27 0.235646170 ubox
3 32 0.003344799 ubox
3 81 0.003984491 ubox
4 11 0.809223317 ubox
4 14 0.051440227 ubox
4 17 0.004109231 ubox
4 25 0.009466658 ubox
4 26 0.229815235 ubox
4 80 0.003974930 ubox
5 10 0.791856484 ubox
5 11 0.235297699 ubox
5 13 0.050033009 ubox
5 14 0.049748071 ubox
5 16 0.004049593 ubox
5 24 0.012711607 ubox
5 25 0.230233161 ubox
5 26 0.079210592 ubox
5 79 0.003975377 ubox
6 10 0.235448121 ubox
6 13 0.050175926 ubox
6 14 0.004503327 ubox
6 23 0.013465075 ubox
6 24 0.229836721 ubox
6 25 0.079855272 ubox
6 26 0.073185616 ubox
6 78 0.003970302 ubox
7 13 0.004132222 ubox
7 14 0.005066772 ubox
7 23 0.213467795 ubox
7 24 0.066546968 ubox
7 25 0.074281102 ubox
8 13 0.006977905 ubox
8 17 0.019902382 ubox
8 23 0.087180501 ubox
8 24 0.087715297 ubox
8 33 0.004303490 ubox
9 16 0.019908619 ubox
9 23 0.090020922 ubox
10 15 0.020924253 ubox
10 19 0.197844120 ubox
10 20 0.103312157 ubox
10 21 0.036718997 ubox
10 22 0.101980514 ubox
10 28 0.073409183 ubox
10 30 0.003848874 ubox
10 31 0.072952872 ubox
10 32 0.042672860 ubox
10 47 0.007834685 ubox
10 97 0.028199338 ubox
10 98 0.003434185 ubox
10 99 0.021092096 ubox
10 100 0.048308572 ubox
11 18 0.230204487 ubox
11 19 0.012228857 ubox
11 20 0.034339533 ubox
11 21 0.101169040 ubox
11 27 0.073538321 ubox
11 29 0.003812429 ubox
11 30 0.072979411 ubox
11 31 0.042819974 ubox
11 46 0.008666713 ubox
11 96 0.028223076 ubox
11 98 0.016348318 ubox
11 99 0.048318769 ubox
12 17 0.231032684 ubox
12 23 0.011981507 ubox
12 26 0.073427950 ubox
12 33 0.011344071 ubox
12 45 0.008679789 ubox
12 95 0.028189850 ubox
13 19 0.056596237 ubox
13 20 0.081653634 ubox
13 21 0.004559114 ubox
13 22 0.013945260 ubox
13 28 0.071576496 ubox
13 29 0.005471511 ubox
13 30 0.060772910 ubox
13 31 0.949439192 ubox
13 32 0.033020092 ubox
13 44 0.008643294 ubox
13 94 0.015449248 ubox
13 97 0.011179175 ubox
13 99 0.004404963 ubox
13 100 0.009931070 ubox
14 18 0.057681559 ubox
14 19 0.057243133 ubox
14 20 0.005505183 ubox
14 21 0.013841435 ubox
14 27 0.071580256 ubox
14 29 0.060797674 ubox
14 30 0.951226360 ubox
14 31 0.034981118 ubox
14 43 0.008644090 ubox
14 96 0.011171011 ubox
14 99 0.009916749 ubox
15 23 0.073787541 ubox
15 26 0.070854568 ubox
15 95 0.011145479 ubox
16 22 0.077532182 ubox
16 28 0.960849572 ubox
16 29 0.004112201 ubox
16 41 0.008531124 ubox
16 94 0.004385405 ubox
16 97 0.004916237 ubox
17 21 0.076287512 ubox
17 27 0.961262718 ubox
17 40 0.008798492 ubox
17 96 0.004912374 ubox
18 24 0.033194213 ubox
18 25 0.018384306 ubox
18 26 0.961120588 ubox
18 39 0.008798943 ubox
18 95 0.004766615 ubox
19 23 0.030038787 ubox
19 24 0.021103351 ubox
19 25 0.955901932 ubox
19 26 0.007244592 ubox
19 38 0.008648746 ubox
20 24 0.922738237 ubox
20 25 0.063842099 ubox
20 26 0.004947925 ubox
21 25 0.007162712 ubox
21 34 0.010792904 ubox
22 33 0.011298277 ubox
23 31 0.003951263 ubox
23 32 0.013329239 ubox
24 30 0.003959494 ubox
24 31 0.013925444 ubox
24 32 0.004326332 ubox
25 30 0.013905912 ubox
25 31 0.006191280 ubox
26 30 0.006136988 ubox
28 33 0.003882385 ubox
32 93 0.026893182 ubox
33 92 0.030344749 ubox
33 97 0.997595429 ubox
33 98 0.009228363 ubox
33 99 0.005400367 ubox
34 91 0.030353379 ubox
34 96 0.999420475 ubox
34 97 0.007239793 ubox
35 90 0.030353554 ubox
35 95 0.999446984 ubox
36 89 0.030354542 ubox
36 94 0.999446686 ubox
37 88 0.030270377 ubox
37 93 0.999280581 ubox
38 92 0.999476862 ubox
39 46 0.003410892 ubox
39 86 0.030289528 ubox
39 91 0.999393577 ubox
40 45 0.003970160 ubox
40 85 0.030280803 ubox
40 90 0.996652424 ubox
41 84 0.029607649 ubox
41 88 0.017385520 ubox
42 80 0.025660298 ubox
42 87 0.009388514 ubox
42 88 0.165591737 ubox
43 79 0.027147010 ubox
43 87 0.167940265 ubox
43 88 0.875798644 ubox
44 53 0.004802913 ubox
44 78 0.027166476 ubox
44 82 0.011953703 ubox
44 87 0.878618388 ubox
44 90 0.056410305 ubox
45 52 0.005132791 ubox
45 77 0.027220801 ubox
45 81 0.012104888 ubox
45 86 0.895057357 ubox
45 89 0.432312318 ubox
45 91 0.013242126 ubox
46 76 0.027188530 ubox
46 80 0.012058959 ubox
46 85 0.885141423 ubox
46 88 0.430809758 ubox
46 90 0.017890828 ubox
47 53 0.005564354 ubox
47 75 0.024771591 ubox
47 79 0.010658345 ubox
47 84 0.655322646 ubox
47 85 0.031575407 ubox
47 87 0.415690030 ubox
47 88 0.009164298 ubox
48 74 0.024546903 ubox
48 75 0.011295777 ubox
48 78 0.010349828 ubox
48 79 0.005900255 ubox
48 80 0.008728570 ubox
48 84 0.260807201 ubox
48 85 0.299140194 ubox
48 87 0.072965462 ubox
48 88 0.099538198 ubox
49 74 0.011314038 ubox
49 76 0.003776685 ubox
49 78 0.005915185 ubox
49 79 0.008719943 ubox
49 84 0.319562546 ubox
49 85 0.205933368 ubox
49 87 0.107766889 ubox
49 88 0.005494161 ubox
50 71 0.024937179 ubox
50 75 0.003193239 ubox
50 76 0.004491556 ubox
50 78 0.008511527 ubox
50 84 0.196019343 ubox
50 85 0.027971122 ubox
50 87 0.006245225 ubox
51 70 0.027253584 ubox
51 75 0.004788023 ubox
51 84 0.071258927 ubox
51 85 0.271437620 ubox
52 59 0.007784233 ubox
52 69 0.027276649 ubox
52 74 0.004992338 ubox
52 84 0.567474148 ubox
53 58 0.007029861 ubox
53 73 0.004988103 ubox
53 83 0.608357019 ubox
54 67 0.027728196 ubox
54 72 0.004005295 ubox
54 81 0.996358889 ubox
54 86 0.018155026 ubox
55 66 0.027806470 ubox
55 79 0.007428244 ubox
55 80 0.997168167 ubox
55 85 0.018175071 ubox
56 65 0.027801898 ubox
56 78 0.007744363 ubox
56 79 0.996470302 ubox
56 80 0.059920031 ubox
56 84 0.018147945 ubox
57 64 0.027768500 ubox
57 69 0.003654618 ubox
57 78 0.990802489 ubox
57 79 0.069541633 ubox
57 80 0.031180853 ubox
58 68 0.003646138 ubox
58 78 0.073147808 ubox
58 79 0.032760512 ubox
59 67 0.003436506 ubox
59 77 0.148932760 ubox
60 77 0.984061146 ubox
61 75 0.006059744 ubox
61 76 0.999559902 ubox
62 74 0.004356725 ubox
62 75 0.999580206 ubox
63 74 0.999557188 ubox
64 73 0.998718066 ubox
65 72 0.998863140 ubox
65 73 0.011704503 ubox
66 72 0.016548372 ubox
80 89 0.006066694 ubox
81 88 0.006075796 ubox
84 97 0.006783291 ubox
84 100 0.005307968 ubox
85 96 0.006811177 ubox
85 99 0.005451551 ubox
86 95 0.006811566 ubox
87 94 0.006800098 ubox
87 97 0.006129632 ubox
88 96 0.006134228 ubox
89 95 0.006133886 ubox
90 94 0.005738264 ubox
3 12 0.9500000 lbox
4 11 0.9500000 lbox
5 10 0.9500000 lbox
13 31 0.9500000 lbox
14 30 0.9500000 lbox
16 28 0.9500000 lbox
17 27 0.9500000 lbox
18 26 0.9500000 lbox
19 25 0.9500000 lbox
20 24 0.9500000 lbox
33 97 0.9500000 lbox
34 96 0.9500000 lbox
35 95 0.9500000 lbox
36 94 0.9500000 lbox
37 93 0.9500000 lbox
38 92 0.9500000 lbox
39 91 0.9500000 lbox
40 90 0.9500000 lbox
43 88 0.9500000 lbox
44 87 0.9500000 lbox
45 86 0.9500000 lbox
46 85 0.9500000 lbox
47 84 0.9500000 lbox
54 81 0.9500000 lbox
55 80 0.9500000 lbox
56 79 0.9500000 lbox
57 78 0.9500000 lbox
60 77 0.9500000 lbox
61 76 0.9500000 lbox
62 75 0.9500000 lbox
63 74 0.9500000 lbox
64 73 0.9500000 lbox
65 72 0.9500000 lbox
showpage
end
%%EOF
