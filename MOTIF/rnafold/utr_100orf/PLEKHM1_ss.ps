%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:40:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGUGAUGGCGUCAGGGGCCGGGGCGCCGCUUCCUGUUGUCAGUGGCCGAGAGACCGCAUCGUCGGCUCGGAGGCUGAGGGGCUGCCGCGGCCGGGAGCGCCCCUCGCCUCGCUCCUCGCUCCGCUUGGUGUCAUGUGAUUCUCUGAGGGAGCAGCUGCGUGAGUGGAGAUGCUUUCAGUGGUGGAGAAUGGACUGGACCCCCAGGCUGCCAUCCCGGUCAUCAAGAAGAAGCUGGUGGGAUCCGUGAAGGCCU\
UGCAGAAGCAGUACG\
) } def
/len { sequence length } bind def

/coor [
[69.74446106 649.18493652]
[64.24472046 635.22955322]
[64.83312988 620.24108887]
[71.40997314 606.75976562]
[82.86061096 597.07049561]
[97.24439240 592.81524658]
[112.12356567 594.71533203]
[124.97640991 602.44860840]
[133.62440491 614.70397949]
[132.23527527 599.76843262]
[130.84616089 584.83288574]
[119.94886780 571.05786133]
[127.82652283 554.39544678]
[126.26435852 539.47705078]
[124.70219421 524.55859375]
[115.68149567 512.70629883]
[121.93951416 498.17541504]
[120.37735748 483.25695801]
[118.81519318 468.33853149]
[117.16658783 453.42941284]
[115.43158722 438.53009033]
[113.35835266 436.69430542]
[111.87395477 433.94131470]
[111.32598877 430.48657227]
[111.97944641 426.66552734]
[113.97806549 422.90203857]
[112.93556976 407.93832397]
[111.89308167 392.97457886]
[110.85058594 378.01086426]
[109.72137451 363.05340576]
[108.50549316 348.10278320]
[107.28960419 333.15213013]
[106.07371521 318.20150757]
[104.85783386 303.25085449]
[92.06301880 295.67254639]
[86.11367035 281.84976196]
[89.48385620 267.00070190]
[101.08551788 256.86621094]
[99.86962891 241.91557312]
[98.65374756 226.96493530]
[96.25210571 224.42976379]
[94.94122314 220.61871338]
[95.30165100 216.04891968]
[97.66476440 211.47483826]
[96.96945953 196.49095154]
[96.27415466 181.50708008]
[95.57884979 166.52320862]
[94.88354492 151.53932190]
[94.18823242 136.55545044]
[93.49292755 121.57157898]
[78.23048401 105.81059265]
[83.60876465 84.54030609]
[76.74473572 71.20294952]
[69.88070679 57.86558914]
[63.01667404 44.52823257]
[57.72014236 40.66883087]
[55.47750854 35.49618530]
[56.15217590 30.80115509]
[49.59918976 17.30825233]
[43.04620743 3.81534958]
[36.49322510 -9.67755318]
[29.94024277 -23.17045593]
[23.40007401 -29.49441719]
[23.39052200 -36.85796738]
[16.99439240 -50.42593002]
[4.11125612 -59.60935593]
[5.68286419 -74.42081451]
[-0.71326399 -87.98877716]
[-7.10939217 -101.55673981]
[-13.50552082 -115.12469482]
[-19.90164948 -128.69265747]
[-29.84348106 -139.92475891]
[-42.53442383 -147.92100525]
[-55.22536469 -155.91725159]
[-67.91630554 -163.91349792]
[-80.60724640 -171.90975952]
[-89.50088501 -173.82534790]
[-93.39820099 -180.07298279]
[-105.99559784 -188.21580505]
[-118.59298706 -196.35864258]
[-131.19038391 -204.50146484]
[-143.78778076 -212.64430237]
[-156.38516235 -220.78712463]
[-168.98255920 -228.92996216]
[-187.37275696 -224.26402283]
[-203.04371643 -234.38005066]
[-206.25097656 -252.42929077]
[-219.03375244 -260.27789307]
[-231.81654358 -268.12649536]
[-248.21539307 -268.02890015]
[-256.26470947 -282.31668091]
[-247.68402100 -296.29177856]
[-231.30041504 -295.57785034]
[-223.96794128 -280.90927124]
[-211.18516541 -273.06066895]
[-198.40237427 -265.21206665]
[-188.18548584 -270.19442749]
[-176.71240234 -269.63659668]
[-166.82316589 -263.56137085]
[-161.02113342 -253.37150574]
[-160.83973694 -241.52735901]
[-148.24234009 -233.38452148]
[-135.64494324 -225.24169922]
[-123.04755402 -217.09886169]
[-110.45015717 -208.95602417]
[-97.85276794 -200.81320190]
[-85.25537109 -192.67036438]
[-72.61099243 -184.60069275]
[-59.92005539 -176.60444641]
[-47.22911453 -168.60820007]
[-34.53817368 -160.61193848]
[-21.84723091 -152.61569214]
[-8.63124180 -159.71060181]
[-8.28349495 -174.70655823]
[-18.91701889 -186.08926392]
[-18.35073280 -201.29235840]
[-7.43353415 -211.35964966]
[-7.08578777 -226.35562134]
[-10.00716877 -234.97140503]
[-6.64608765 -241.52313232]
[-6.12452602 -256.51406860]
[-5.60296440 -271.50500488]
[-5.08140278 -286.49591064]
[-4.55984116 -301.48684692]
[-7.38114929 -310.13592529]
[-3.94434381 -316.64825439]
[-3.24903750 -331.63214111]
[-2.55373120 -346.61599731]
[-1.85842478 -361.59988403]
[-1.16311848 -376.58377075]
[-11.20118713 -394.09204102]
[0.01440366 -409.86846924]
[0.36215028 -424.86444092]
[0.70989692 -439.86038208]
[-7.62868023 -453.98132324]
[0.66564822 -468.12826538]
[17.06038857 -467.74807739]
[24.69003677 -453.23187256]
[15.70586586 -439.51263428]
[15.35811901 -424.51669312]
[15.01037216 -409.52072144]
[22.67339516 -402.82788086]
[25.46477699 -392.81637573]
[22.23721313 -382.70657349]
[13.82075787 -375.88845825]
[13.12545109 -360.90457153]
[12.43014526 -345.92068481]
[11.73483849 -330.93682861]
[11.03953266 -315.95294189]
[10.43108845 -300.96530151]
[9.90952682 -285.97436523]
[9.38796520 -270.98342896]
[8.86640358 -255.99250793]
[8.34484196 -241.00157166]
[7.91018105 -226.00787354]
[7.56243420 -211.01190186]
[18.00123978 -200.44937134]
[17.86219978 -185.23637390]
[6.71247339 -174.35881042]
[6.36472654 -159.36285400]
[3.47735262 -143.44796753]
[-6.33368826 -135.08879089]
[0.06243982 -121.52082825]
[6.45856810 -107.95286560]
[12.85469627 -94.38490295]
[19.25082397 -80.81694794]
[31.67646790 -72.60398865]
[30.56235313 -56.82205582]
[36.95848083 -43.25409698]
[43.43314743 -29.72343826]
[49.98612976 -16.23053551]
[56.53911209 -2.73763323]
[63.09209442 10.75526905]
[69.64507294 24.24817085]
[76.35403442 37.66420364]
[83.21806335 51.00156021]
[90.08209229 64.33892059]
[96.94612122 77.67627716]
[103.99757385 77.82582092]
[110.65731812 80.14813995]
[116.27278900 84.41567230]
[120.29373932 90.21026611]
[135.20286560 88.56166077]
[150.11199951 86.91304779]
[165.02111816 85.26444244]
[179.93025208 83.61583710]
[194.82957458 81.88083649]
[209.71858215 80.05950928]
[219.44650269 67.89376068]
[234.57202148 66.25877380]
[246.11026001 75.60782623]
[260.99926758 73.78649902]
[275.88827515 71.96517181]
[282.49862671 58.02576828]
[295.60784912 49.89241791]
[311.03289795 50.16044617]
[323.85165405 58.74432755]
[329.97372437 72.90497589]
[327.44555664 88.12377167]
[317.07388306 99.54447174]
[302.16830444 103.52275085]
[287.48507690 98.78916931]
[277.70962524 86.85418701]
[262.82058716 88.67551422]
[247.93159485 90.49684143]
[238.98713684 102.35147858]
[223.91349792 104.41066742]
[211.53991699 94.94852448]
[196.65090942 96.76985168]
[190.41578674 100.68715668]
[181.57885742 98.52496338]
[166.66973877 100.17356873]
[151.76060486 101.82218170]
[136.85147095 103.47078705]
[121.94234467 105.11939240]
[117.12895203 114.63809204]
[108.47680664 120.87626648]
[109.17211151 135.86013794]
[109.86741638 150.84402466]
[110.56272125 165.82789612]
[111.25803375 180.81176758]
[111.95333862 195.79565430]
[112.64864349 210.77952576]
[113.60438538 225.74905396]
[114.82027435 240.69969177]
[116.03615570 255.65032959]
[129.12294006 263.77697754]
[134.84822083 277.88635254]
[131.21060181 292.48880005]
[119.80847168 302.03497314]
[121.02435303 316.98562622]
[122.24024200 331.93624878]
[123.45613098 346.88690186]
[124.67201996 361.83752441]
[128.47479248 370.10223389]
[125.81431580 376.96835327]
[126.85681152 391.93209839]
[127.89929962 406.89581299]
[128.94178772 421.85955811]
[130.33091736 436.79510498]
[132.06590271 451.69439697]
[136.15376282 459.82186890]
[133.73362732 466.77636719]
[135.29579163 481.69479370]
[136.85795593 496.61325073]
[145.99038696 509.53256226]
[139.62063599 522.99645996]
[141.18278503 537.91485596]
[142.74494934 552.83331299]
[152.24171448 561.52624512]
[153.25346375 573.95941162]
[145.78170776 583.44378662]
[147.17082214 598.37933350]
[148.55993652 613.31488037]
[151.06947327 628.10345459]
[154.68518066 642.66113281]
[158.30087280 657.21887207]
[161.91658020 671.77655029]
[173.68110657 683.20141602]
[169.40733337 699.03387451]
[153.49172974 702.98687744]
[142.30693054 690.99383545]
[147.35888672 675.39227295]
[143.74317932 660.83453369]
[140.12747192 646.27685547]
[136.51176453 631.71917725]
[132.39048767 646.14190674]
[122.80807495 657.68212891]
[109.38852692 664.38403320]
[94.40619659 665.11181641]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 254]
[10 253]
[11 252]
[13 249]
[14 248]
[15 247]
[17 245]
[18 244]
[19 243]
[20 241]
[21 240]
[26 239]
[27 238]
[28 237]
[29 236]
[30 234]
[31 233]
[32 232]
[33 231]
[34 230]
[38 226]
[39 225]
[40 224]
[44 223]
[45 222]
[46 221]
[47 220]
[48 219]
[49 218]
[50 217]
[52 178]
[53 177]
[54 176]
[55 175]
[58 174]
[59 173]
[60 172]
[61 171]
[62 170]
[64 169]
[65 168]
[67 166]
[68 165]
[69 164]
[70 163]
[71 162]
[72 112]
[73 111]
[74 110]
[75 109]
[76 108]
[78 107]
[79 106]
[80 105]
[81 104]
[82 103]
[83 102]
[84 101]
[87 96]
[88 95]
[89 94]
[113 160]
[114 159]
[117 156]
[118 155]
[120 154]
[121 153]
[122 152]
[123 151]
[124 150]
[126 149]
[127 148]
[128 147]
[129 146]
[130 145]
[132 141]
[133 140]
[134 139]
[182 215]
[183 214]
[184 213]
[185 212]
[186 211]
[187 209]
[188 208]
[191 205]
[192 204]
[193 203]
[255 266]
[256 265]
[257 264]
[258 263]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
