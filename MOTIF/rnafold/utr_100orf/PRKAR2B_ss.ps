%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:11:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCGCGCCGGGAGCCGCGGGCCGGGCCAGCCGGGCCGCCGGGGCCCAGUGCGCCGCGCUCGCAGCCGGUAGCGCGCCAGCGCCGUAGGCGCUCGCUCGGCAGCCGCGGGGCCCUAGGCCGUGCCGGGGAGGGGGCGAGGGCGGCGCCCAGGCGCCUGCCGCCCCGGAGGCAGGAUGAGCAUCGAGAUCCCGGCGGGACUGACGGAGCUGCUGCAGGGCUUCACGGUGGAGGUGCUGAGGCACCAGCCCGCGGA\
CCUGCUGGAGUUCGCGCUGC\
) } def
/len { sequence length } bind def

/coor [
[412.71163940 98.06501770]
[400.05996704 87.42033386]
[396.40078735 70.42172241]
[381.51821899 72.29494476]
[366.63565063 74.16816711]
[351.75308228 76.04138947]
[345.53308105 79.97943878]
[336.69055176 77.85023499]
[321.78762817 79.55393982]
[306.88470459 81.25764465]
[292.00210571 83.13086700]
[277.14181519 85.17336273]
[262.28152466 87.21586609]
[253.51432800 99.20217896]
[238.47297668 101.48525238]
[225.96008301 92.20813751]
[211.09979248 94.25063324]
[196.23950195 96.29313660]
[181.37921143 98.33563232]
[166.51892090 100.37813568]
[151.65863037 102.42063141]
[136.82255554 104.63214874]
[122.01261139 107.01238251]
[107.20266724 109.39262390]
[93.69342804 115.91186523]
[82.61506653 126.02471924]
[71.53669739 136.13757324]
[60.45833206 146.25042725]
[49.37996674 156.36328125]
[47.04118347 162.48129272]
[42.63813019 165.99789429]
[37.93241501 166.57672119]
[26.62671852 176.43476868]
[15.32102299 186.29283142]
[4.01532698 196.15087891]
[-0.78540736 211.83160400]
[-16.82426643 215.25022888]
[-27.60184669 202.88998413]
[-22.03109741 187.46601868]
[-5.84272814 184.84518433]
[5.46296740 174.98713684]
[16.76866341 165.12907410]
[28.07435799 155.27102661]
[39.26711273 145.28491211]
[50.34547806 135.17205811]
[61.42384338 125.05921173]
[72.50220490 114.94635773]
[83.58057404 104.83349609]
[80.39804840 98.04221344]
[70.85047150 77.66836548]
[55.99017715 79.71086884]
[41.12989044 81.75336456]
[26.26959991 83.79586792]
[11.42117596 85.92290497]
[-3.41490173 88.13442230]
[-18.25098038 90.34593201]
[-33.08705902 92.55744171]
[-41.07719803 96.90270996]
[-48.10449600 94.70869446]
[-62.96478271 96.75119781]
[-77.82507324 98.79369354]
[-92.69336700 106.94048309]
[-104.63772583 94.90850067]
[-96.38249207 80.10014343]
[-79.86757660 83.93340302]
[-65.00728607 81.89090729]
[-50.14699554 79.84840393]
[-35.29856873 77.72136688]
[-20.46249199 75.50984955]
[-5.62641430 73.29833984]
[9.20966434 71.08683014]
[15.33840466 67.00820923]
[24.22710037 68.93557739]
[39.08739090 66.89307404]
[53.94767761 64.85057831]
[68.80796814 62.80807877]
[70.85047150 47.94778824]
[57.09229660 41.97177124]
[41.35207367 43.57050705]
[32.76102829 31.40320969]
[19.00285721 25.42719269]
[5.24468756 19.45117760]
[-8.51348209 13.47516060]
[-22.27165222 7.49914455]
[-36.02981949 1.52312803]
[-52.96652222 0.75857151]
[-56.92038727 -15.72788525]
[-42.17276764 -24.09114075]
[-30.05380440 -12.23504162]
[-16.29563522 -6.25902510]
[-2.53746533 -0.28300875]
[11.22070408 5.69300747]
[24.97887421 11.66902351]
[38.73704147 17.64504051]
[53.49319077 15.61886024]
[63.06831360 28.21360207]
[76.82648468 34.18962097]
[100.81928253 51.07513428]
[110.21240997 73.82975006]
[104.82242584 94.58267975]
[119.63237000 92.20243835]
[134.44232178 89.82220459]
[139.75340271 85.98914337]
[145.36384583 85.46348572]
[149.61613464 87.56034851]
[164.47642517 85.51784515]
[179.33671570 83.47534180]
[194.19700623 81.43284607]
[209.05729675 79.39034271]
[223.91757202 77.34784698]
[233.46353149 65.03880310]
[248.56307983 63.17911148]
[260.23904419 72.35557556]
[275.09933472 70.31307983]
[289.95962524 68.27057648]
[295.35656738 64.55941010]
[300.97753906 64.16160583]
[305.18099976 66.35471344]
[320.08392334 64.65100861]
[334.98684692 62.94730377]
[349.87985229 61.15881348]
[364.76242065 59.28559113]
[379.64498901 57.41236877]
[394.52758789 55.53914642]
[405.49011230 45.30084991]
[408.37460327 30.58080292]
[411.25906372 15.86075497]
[414.14355469 1.14070797]
[417.02801514 -13.57933903]
[419.91250610 -28.29938507]
[414.97335815 -43.32986832]
[425.01370239 -54.33173370]
[427.89816284 -69.05178070]
[430.69882202 -83.78800964]
[433.41555786 -98.53993225]
[436.13232422 -113.29185486]
[438.84906006 -128.04377747]
[441.56579590 -142.79571533]
[433.99114990 -161.50366211]
[447.24368286 -175.61413574]
[449.62390137 -190.42407227]
[452.00415039 -205.23402405]
[454.38439941 -220.04396057]
[450.92803955 -236.64186096]
[465.92050171 -244.55787659]
[477.67745972 -232.34272766]
[469.19433594 -217.66372681]
[466.81408691 -202.85379028]
[464.43386841 -188.04383850]
[462.05361938 -173.23388672]
[468.73559570 -165.56513977]
[470.14331055 -155.27038574]
[465.57711792 -145.69364929]
[456.31771851 -140.07896423]
[453.60098267 -125.32704163]
[450.88424683 -110.57511139]
[448.16751099 -95.82318878]
[445.45074463 -81.07126617]
[447.32266235 -73.95139313]
[442.61822510 -66.16730499]
[439.73373413 -51.44725418]
[444.87921143 -37.46964645]
[434.63253784 -25.41490746]
[431.74807739 -10.69486046]
[428.86358643 4.02518654]
[425.97912598 18.74523354]
[423.09463501 33.46527863]
[420.21017456 48.18532562]
[434.75973511 52.33818054]
[444.02209473 63.02141190]
[445.78665161 76.05163574]
[459.80258179 81.39525604]
[473.81848145 86.73888397]
[487.83438110 92.08251190]
[502.11819458 85.86878967]
[516.25622559 91.48764801]
[522.09204102 105.14337921]
[536.10791016 110.48700714]
[550.12384033 115.83062744]
[564.13970947 121.17425537]
[578.15563965 126.51788330]
[571.32604980 113.16286469]
[572.41210938 98.20223236]
[581.09893799 85.97362518]
[594.86791992 80.02256775]
[609.72692871 82.07447815]
[621.36773682 91.53444672]
[626.41534424 105.65967560]
[623.40612793 120.35473633]
[613.21270752 131.35899353]
[598.79290771 135.48190308]
[612.26483154 142.07792664]
[625.73675537 148.67395020]
[639.20861816 155.26997375]
[652.68054199 161.86599731]
[666.15246582 168.46200562]
[679.62438965 175.05802917]
[693.09631348 181.65405273]
[708.89300537 180.77337646]
[716.92132568 193.31909180]
[730.39324951 199.91511536]
[743.86517334 206.51113892]
[752.91015625 207.46604919]
[757.45227051 213.25967407]
[770.84820557 220.00860596]
[784.24420166 226.75753784]
[793.27770996 227.81535339]
[797.75354004 233.66029358]
[811.07183838 240.56126404]
[824.39013672 247.46224976]
[837.82427979 254.13482666]
[851.37036133 260.57708740]
[864.91650391 267.01934814]
[880.70214844 265.95892334]
[888.87274170 278.41244507]
[902.41888428 284.85467529]
[915.96502686 291.29693604]
[931.75067139 290.23651123]
[939.92126465 302.69003296]
[953.46740723 309.13229370]
[967.01354980 315.57452393]
[980.55963135 322.01678467]
[994.10577393 328.45904541]
[1008.91174316 322.93099976]
[1023.25512695 329.56741333]
[1028.62634277 344.43099976]
[1021.83862305 358.70343018]
[1006.91912842 363.91717529]
[992.71923828 356.97897339]
[987.66351318 342.00515747]
[974.11737061 335.56289673]
[960.57128906 329.12066650]
[947.02514648 322.67840576]
[933.47900391 316.23614502]
[918.66229248 317.75735474]
[909.52276611 304.84304810]
[895.97662354 298.40081787]
[882.43054199 291.95855713]
[867.61376953 293.47976685]
[858.47424316 280.56546021]
[844.92816162 274.12319946]
[831.38201904 267.68093872]
[827.98632812 268.48681641]
[824.03442383 267.71154785]
[820.26293945 265.11248779]
[817.48913574 260.78051758]
[804.17083740 253.87954712]
[790.85260010 246.97857666]
[777.49523926 240.15350342]
[764.09924316 233.40457153]
[750.70330811 226.65563965]
[737.26916504 219.98304749]
[723.79724121 213.38702393]
[710.32531738 206.79100037]
[695.49224854 208.14346313]
[686.50030518 195.12596130]
[673.02838135 188.52995300]
[659.55645752 181.93392944]
[646.08453369 175.33790588]
[632.61260986 168.74188232]
[619.14068604 162.14585876]
[605.66876221 155.54985046]
[592.19689941 148.95382690]
[581.10809326 149.83128357]
[572.81201172 140.53378296]
[558.79608154 135.19017029]
[544.78021240 129.84654236]
[530.76428223 124.50291443]
[516.74841309 119.15928650]
[503.30264282 125.46383667]
[489.01239014 120.24430847]
[482.49075317 106.09841919]
[468.47485352 100.75479126]
[454.45895386 95.41117096]
[440.44305420 90.06754303]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 124]
[4 123]
[5 122]
[6 121]
[8 120]
[9 119]
[10 118]
[11 115]
[12 114]
[13 113]
[16 110]
[17 109]
[18 108]
[19 107]
[20 106]
[21 105]
[22 102]
[23 101]
[24 100]
[25 48]
[26 47]
[27 46]
[28 45]
[29 44]
[32 43]
[33 42]
[34 41]
[35 40]
[50 76]
[51 75]
[52 74]
[53 73]
[54 71]
[55 70]
[56 69]
[57 68]
[59 67]
[60 66]
[61 65]
[77 97]
[78 96]
[80 94]
[81 93]
[82 92]
[83 91]
[84 90]
[85 89]
[125 168]
[126 167]
[127 166]
[128 165]
[129 164]
[130 163]
[132 161]
[133 160]
[134 158]
[135 157]
[136 156]
[137 155]
[138 154]
[140 150]
[141 149]
[142 148]
[143 147]
[171 275]
[172 274]
[173 273]
[174 272]
[177 269]
[178 268]
[179 267]
[180 266]
[181 265]
[191 263]
[192 262]
[193 261]
[194 260]
[195 259]
[196 258]
[197 257]
[198 256]
[200 254]
[201 253]
[202 252]
[204 251]
[205 250]
[206 249]
[208 248]
[209 247]
[210 246]
[211 242]
[212 241]
[213 240]
[215 238]
[216 237]
[217 236]
[219 234]
[220 233]
[221 232]
[222 231]
[223 230]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
