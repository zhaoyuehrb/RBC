%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:46:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCCAGGGAGCUGUGAGGCAGUGCUGUGUGGUUCCUGCCGUCCGGACUCUUUUUCCUCUACUGAGAUUCAUCUGUGUGAAAUAUGAGUUGGCGAGGAAGAUCGACCUAUUAUUGGCCUAGACCAAGGCGCUAUGUACAGCCUCCUGAAAUGAUUGGGCCUAUGCGGCCCGAGCAGUUCAGUG\
) } def
/len { sequence length } bind def

/coor [
[205.96652222 366.89837646]
[196.86112976 354.97814941]
[196.36868286 339.98623657]
[204.67218018 327.49417114]
[218.68576050 322.14443970]
[233.19982910 325.92416382]
[224.93330383 313.40759277]
[216.66677856 300.89102173]
[210.34120178 297.03271484]
[208.36793518 288.08786011]
[200.31748962 275.43124390]
[192.26705933 262.77459717]
[184.21661377 250.11796570]
[176.16616821 237.46133423]
[168.11572266 224.80470276]
[154.75762939 225.21772766]
[142.84721375 218.92019653]
[135.55114746 207.46530151]
[134.86892700 193.79284668]
[141.08602905 181.47511292]
[133.25404358 168.68214417]
[125.42205048 155.88917542]
[117.59006500 143.09620667]
[109.75807190 130.30325317]
[101.92608643 117.51028442]
[92.10805511 115.74919128]
[84.82035065 108.93856812]
[82.39956665 99.26205444]
[85.62185669 89.82214355]
[78.23363495 76.76786041]
[70.84541321 63.71358490]
[63.45719528 50.65930557]
[56.06897354 37.60502625]
[40.77842331 35.73279572]
[29.65226746 25.33750916]
[26.81422997 10.55882359]
[33.14687729 -2.89612222]
[25.75865555 -15.95040131]
[18.37043571 -29.00467873]
[10.98221397 -42.05895996]
[-8.08473778 -43.39163208]
[-22.40294838 -55.82604218]
[-26.33190536 -74.22536469]
[-18.46748161 -91.15206146]
[-26.51792526 -103.80869293]
[-32.22845840 -107.21968842]
[-34.93447495 -112.25275421]
[-34.61880493 -117.04087830]
[-42.23003387 -129.96640015]
[-58.45666885 -138.64709473]
[-57.95111465 -156.17819214]
[-65.78310394 -168.97116089]
[-73.61508942 -181.76412964]
[-81.44708252 -194.55709839]
[-89.27906799 -207.35005188]
[-97.11106110 -220.14302063]
[-104.94304657 -232.93598938]
[-112.77503204 -245.72895813]
[-124.22833252 -244.62994385]
[-135.21170044 -247.88125610]
[-144.14070129 -254.97378540]
[-149.74226379 -264.84716797]
[-151.23619080 -276.04827881]
[-148.44360352 -286.94506836]
[-141.80737305 -295.96420288]
[-148.97041321 -309.14337158]
[-156.13345337 -322.32257080]
[-163.29649353 -335.50173950]
[-170.45951843 -348.68093872]
[-177.62255859 -361.86010742]
[-184.78559875 -375.03930664]
[-200.08843994 -374.75320435]
[-213.76617432 -381.62182617]
[-222.67578125 -394.06680298]
[-224.76988220 -409.22839355]
[-219.56727600 -423.62252808]
[-208.26348877 -433.94158936]
[-193.45602417 -437.81430054]
[-178.54756165 -434.35073853]
[-166.96392822 -424.34683228]
[-161.36698914 -410.10137939]
[-163.04284668 -394.88790894]
[-171.60641479 -382.20233154]
[-164.44337463 -369.02316284]
[-157.28034973 -355.84396362]
[-150.11730957 -342.66479492]
[-142.95426941 -329.48559570]
[-135.79122925 -316.30642700]
[-128.62818909 -303.12722778]
[-110.01139832 -301.79406738]
[-95.82732391 -289.43350220]
[-91.89885712 -270.88104248]
[-99.98207092 -253.56094360]
[-92.15008545 -240.76797485]
[-84.31809235 -227.97500610]
[-76.48610687 -215.18203735]
[-68.65411377 -202.38908386]
[-60.82212830 -189.59611511]
[-52.99013901 -176.80314636]
[-45.15814972 -164.01017761]
[-33.46039581 -160.86906433]
[-26.83491325 -150.25373840]
[-29.30450630 -137.57762146]
[-21.69327927 -124.65209961]
[-13.86129093 -111.85913849]
[-5.81084824 -99.20250702]
[5.29518175 -100.63093567]
[16.17876816 -97.78742218]
[25.24929428 -91.04779816]
[31.16628838 -81.36015320]
[33.03746414 -70.11161804]
[30.55308914 -58.92977905]
[24.03649330 -49.44717789]
[31.42471313 -36.39290237]
[38.81293488 -23.33862114]
[46.20115662 -10.28434372]
[60.99628067 -8.78690624]
[72.20526123 1.25414634]
[75.38962555 16.14418221]
[69.12325287 30.21680641]
[76.51147461 43.27108383]
[83.89969635 56.32536316]
[91.28791809 69.37963867]
[98.67613983 82.43392181]
[115.17964935 91.06143188]
[114.71904755 109.67829132]
[122.55104065 122.47126007]
[130.38302612 135.26422119]
[138.21501160 148.05718994]
[146.04699707 160.85015869]
[153.87899780 173.64311218]
[170.74572754 174.74205017]
[183.51322937 185.56332397]
[187.28605652 201.69851685]
[180.77235413 216.75425720]
[188.82279968 229.41088867]
[196.87324524 242.06752014]
[204.92369080 254.72415161]
[212.97413635 267.38079834]
[221.02456665 280.03741455]
[229.18336487 292.62448120]
[237.44987488 305.14105225]
[245.71640015 317.65762329]
[254.82226562 329.57748413]
[264.72454834 340.84448242]
[274.62683105 352.11145020]
[284.52911377 363.37844849]
[294.43139648 374.64541626]
[309.35333252 379.90338135]
[311.94354248 394.57101440]
[321.84582520 405.83801270]
[336.76776123 411.09594727]
[339.35797119 425.76361084]
[349.26025391 437.03057861]
[359.16253662 448.29757690]
[369.06481934 459.56454468]
[378.96710205 470.83154297]
[388.86938477 482.09851074]
[398.77166748 493.36547852]
[414.62454224 495.82830811]
[422.45773315 509.82907104]
[416.26223755 524.62756348]
[400.79074097 528.87164307]
[387.91165161 519.30566406]
[387.50469971 503.26776123]
[377.60241699 492.00079346]
[367.70013428 480.73382568]
[357.79785156 469.46682739]
[347.89556885 458.19985962]
[337.99328613 446.93286133]
[328.09100342 435.66589355]
[313.87731934 431.21383667]
[310.57885742 415.74029541]
[300.67657471 404.47329712]
[286.46289062 400.02124023]
[283.16442871 384.54769897]
[273.26214600 373.28073120]
[263.35986328 362.01373291]
[253.45758057 350.74676514]
[243.55529785 339.47976685]
[243.38473511 354.47882080]
[234.53727722 366.59173584]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 143]
[7 142]
[8 141]
[10 140]
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[20 131]
[21 130]
[22 129]
[23 128]
[24 127]
[25 126]
[29 124]
[30 123]
[31 122]
[32 121]
[33 120]
[37 116]
[38 115]
[39 114]
[40 113]
[44 106]
[45 105]
[48 104]
[49 103]
[51 100]
[52 99]
[53 98]
[54 97]
[55 96]
[56 95]
[57 94]
[58 93]
[65 89]
[66 88]
[67 87]
[68 86]
[69 85]
[70 84]
[71 83]
[144 180]
[145 179]
[146 178]
[147 177]
[148 176]
[150 174]
[151 173]
[153 171]
[154 170]
[155 169]
[156 168]
[157 167]
[158 166]
[159 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
