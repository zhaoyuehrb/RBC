%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:36:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGCAAGGGAAAGGAACUUCCUCCACCUUCGGGGCUGGAGCCCUUUUCCUCUGCAUCUCCAGUCUCUGAGUGAAGAUGGGGGGCCUGACAGCCUCGGACGUACACCCGACCCUGGGGGUCCAGCUCUUCUCAGCUGGAAUAGCGGCGUGCUUGGCGGACGUGAUCACCUUCCCGC\
) } def
/len { sequence length } bind def

/coor [
[83.06845093 411.23211670]
[69.14575195 417.71701050]
[53.84729767 416.35577393]
[41.28830338 407.51455688]
[34.84707642 393.57159424]
[36.25626755 378.27746582]
[45.13681412 365.74624634]
[59.09989548 359.34875488]
[60.42933273 344.40780640]
[61.75876999 329.46682739]
[63.08820343 314.52584839]
[64.41764069 299.58486938]
[61.87057877 292.62188721]
[65.90557098 284.39132690]
[67.49996948 269.47631836]
[56.76850891 250.69293213]
[70.06375885 232.67390442]
[70.59612274 217.68336487]
[63.31539917 204.68949890]
[71.53760529 191.17262268]
[72.06996155 176.18208313]
[72.60232544 161.19152832]
[65.32160187 148.19767761]
[73.54380798 134.68080139]
[74.07616425 119.69024658]
[67.99945068 105.97625732]
[56.53735352 96.30049133]
[41.00114441 93.31105804]
[36.26668549 79.18894196]
[24.80459023 69.51317596]
[13.34249592 59.83741379]
[1.88040173 50.16165161]
[-9.58169270 40.48588943]
[-21.04378700 30.81012535]
[-32.50588226 21.13436127]
[-43.96797562 11.45859814]
[-55.43006897 1.78283477]
[-66.89216614 -7.89292860]
[-85.66860199 -5.56115723]
[-99.96308899 -17.46518898]
[-101.03059387 -35.71755219]
[-112.82886505 -44.98041916]
[-124.62714386 -54.24328995]
[-136.42541504 -63.50616074]
[-148.22369385 -72.76902771]
[-160.02195740 -82.03189850]
[-157.49446106 -67.24637604]
[-164.01707458 -53.73876572]
[-177.16810608 -46.52415466]
[-192.06484985 -48.28117371]
[-203.17646790 -58.35747528]
[-206.37745667 -73.01194763]
[-200.47937012 -86.80371094]
[-187.67204285 -94.61216736]
[-172.70985413 -93.53794861]
[-183.07855225 -104.37724304]
[-193.44723511 -115.21653748]
[-203.81591797 -126.05583191]
[-214.18461609 -136.89512634]
[-229.31504822 -141.51902771]
[-232.52160645 -156.06437683]
[-242.89028931 -166.90367126]
[-258.02072144 -171.52757263]
[-261.22726440 -186.07292175]
[-271.59597778 -196.91221619]
[-286.91390991 -204.17837524]
[-284.17211914 -220.90916443]
[-267.33621216 -222.90608215]
[-260.75668335 -207.28089905]
[-250.38798523 -196.44160461]
[-235.99917603 -192.59301758]
[-232.05099487 -177.27235413]
[-221.68231201 -166.43305969]
[-207.29350281 -162.58447266]
[-203.34532166 -147.26380920]
[-192.97662354 -136.42451477]
[-182.60794067 -125.58522797]
[-172.23925781 -114.74593353]
[-161.87055969 -103.90663910]
[-150.75909424 -93.83016968]
[-138.96081543 -84.56729889]
[-127.16254425 -75.30443573]
[-115.36427307 -66.04156494]
[-103.56600189 -56.77869415]
[-91.76772308 -47.51582336]
[-80.96926880 -51.30953217]
[-69.56489563 -49.38549423]
[-60.42085648 -42.10950851]
[-55.89210892 -31.20701027]
[-57.21640015 -19.35502243]
[-45.75430679 -9.67925930]
[-34.29220963 -0.00349597]
[-22.83011818 9.67226791]
[-11.36802292 19.34803009]
[0.09407103 29.02379417]
[11.55616474 38.69955826]
[23.01825905 48.37532043]
[34.48035431 58.05108643]
[45.94244766 67.72684479]
[60.65881348 70.02420807]
[66.21311951 84.83840179]
[77.67520905 94.51416016]
[96.02885437 79.79794312]
[114.70585632 89.29692841]
[129.39447021 86.25642395]
[144.08308411 83.21591949]
[158.74412537 80.04518127]
[173.37646484 76.74445343]
[188.00880432 73.44373322]
[201.66831970 67.24555206]
[213.78790283 58.40724564]
[225.90750122 49.56894302]
[238.02708435 40.73063660]
[247.26203918 26.51262474]
[263.48089600 31.45073891]
[263.22558594 48.40276337]
[246.86538696 52.85022354]
[234.74580383 61.68852997]
[222.62622070 70.52683258]
[210.50662231 79.36513519]
[215.96903992 93.33518219]
[230.86932373 91.60847473]
[245.76960754 89.88177490]
[260.66989136 88.15507507]
[275.57019043 86.42837524]
[290.47045898 84.70166779]
[300.08737183 72.16012573]
[315.76651001 70.17495728]
[328.20565796 79.92393494]
[330.02496338 95.62316132]
[320.14501953 107.95856476]
[304.42742920 109.61177063]
[292.19717407 99.60195160]
[277.29687500 101.32865906]
[262.39660645 103.05535889]
[247.49630737 104.78205872]
[232.59602356 106.50876617]
[217.69573975 108.23546600]
[210.37901306 107.57711792]
[203.92422485 105.34371948]
[198.64103699 101.87417603]
[194.73448181 97.56152344]
[192.29725647 92.82408905]
[191.30952454 88.07606506]
[176.67718506 91.37679291]
[162.04486084 94.67751312]
[156.19354248 99.23085022]
[147.12358093 97.90453339]
[132.43496704 100.94503784]
[117.74636078 103.98554230]
[115.04795837 112.22595978]
[108.52892303 118.73900604]
[99.25375366 121.77600861]
[89.06671906 120.22261047]
[88.53435516 135.21316528]
[95.77700043 149.27923584]
[87.59288025 161.72389221]
[87.06051636 176.71444702]
[86.52815247 191.70498657]
[93.77079773 205.77107239]
[85.58667755 218.21572876]
[85.05431366 233.20626831]
[91.83438110 238.19430542]
[96.02713013 245.38418579]
[97.00688171 253.55451965]
[94.68659973 261.35128784]
[89.51997375 267.51211548]
[82.41499329 271.07070923]
[80.82058716 285.98574829]
[79.35861206 300.91430664]
[78.02917480 315.85528564]
[76.69973755 330.79626465]
[75.37030029 345.73724365]
[74.04086304 360.67819214]
[86.65503693 369.44052124]
[93.18354797 383.34283447]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 174]
[9 173]
[10 172]
[11 171]
[12 170]
[14 169]
[15 168]
[17 162]
[18 161]
[20 159]
[21 158]
[22 157]
[24 155]
[25 154]
[26 102]
[27 101]
[29 99]
[30 98]
[31 97]
[32 96]
[33 95]
[34 94]
[35 93]
[36 92]
[37 91]
[38 90]
[41 85]
[42 84]
[43 83]
[44 82]
[45 81]
[46 80]
[55 79]
[56 78]
[57 77]
[58 76]
[59 75]
[61 73]
[62 72]
[64 70]
[65 69]
[104 150]
[105 149]
[106 148]
[107 146]
[108 145]
[109 144]
[110 120]
[111 119]
[112 118]
[113 117]
[121 138]
[122 137]
[123 136]
[124 135]
[125 134]
[126 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
