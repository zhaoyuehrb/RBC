%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:45:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCGCUCCGGAGGAGGCGUGAAUCGCGCAGGGAUUGACUAAUUUGGGGUGGGGGGUGCGGUGGGCGAUGGAGCAGCCUGAGGACAUGGCGUCGCUGAGCGAGUUCGACUCCUUGGCGGGCAGCAUCCCGGCCACCAAGGUGGAGAUCACCGUGUCCUGCAGGAACC\
) } def
/len { sequence length } bind def

/coor [
[-170.42492676 191.79994202]
[-177.87864685 189.81967163]
[-184.49588013 185.91127014]
[-189.79093933 180.37855530]
[-193.37983704 173.64392090]
[-208.31431580 175.04437256]
[-223.24880981 176.44483948]
[-238.18328857 177.84529114]
[-253.11776733 179.24574280]
[-268.05224609 180.64619446]
[-271.85275269 189.67459106]
[-278.65713501 196.64031982]
[-287.48803711 200.60374451]
[-297.09899902 201.05212402]
[-306.15057373 197.96559143]
[-313.39678955 191.81398010]
[-317.85678101 183.48583984]
[-332.85415649 183.76631165]
[-339.30859375 193.80915833]
[-349.71258545 199.41464233]
[-361.40969849 199.28361511]
[-371.47656250 193.56509399]
[-377.45358276 183.79005432]
[-392.45095825 183.50956726]
[-407.44833374 183.22908020]
[-422.44570923 182.94859314]
[-437.44308472 182.66812134]
[-452.44046021 182.38763428]
[-467.43783569 182.10714722]
[-473.07415771 191.25099182]
[-481.94271851 197.16648865]
[-492.39022827 198.83200073]
[-502.50250244 196.01077271]
[-510.45520020 189.28189087]
[-514.84295654 179.92291260]
[-529.80096436 178.80197144]
[-544.14080811 185.48634338]
[-556.25427246 176.81956482]
[-571.21234131 175.69860840]
[-586.17034912 174.57766724]
[-596.95886230 185.89767456]
[-612.50531006 187.58322144]
[-625.46923828 178.83842468]
[-629.72937012 163.79232788]
[-623.27429199 149.54924011]
[-609.15185547 142.83428955]
[-594.03021240 146.81808472]
[-585.04943848 159.61961365]
[-570.09136963 160.74055481]
[-555.13330078 161.86151123]
[-541.86340332 155.09695435]
[-528.68005371 163.84390259]
[-513.72198486 164.96485901]
[-499.98599243 151.20025635]
[-480.24975586 151.92065430]
[-467.15734863 167.10977173]
[-452.15997314 167.39025879]
[-437.16259766 167.67074585]
[-422.16522217 167.95121765]
[-407.16784668 168.23170471]
[-392.17047119 168.51219177]
[-377.17309570 168.79266357]
[-364.81845093 155.32511902]
[-346.22534180 155.11914062]
[-333.13464355 168.76893616]
[-318.13726807 168.48846436]
[-305.31771851 152.61349487]
[-284.66613770 151.25347900]
[-269.45269775 165.71171570]
[-254.51821899 164.31126404]
[-239.58374023 162.91081238]
[-224.64926147 161.51034546]
[-209.71478271 160.10989380]
[-194.78028870 158.70944214]
[-182.47937012 139.84529114]
[-160.01290894 136.04780579]
[-141.77635193 150.14480591]
[-127.15243530 146.80699158]
[-112.52851868 143.46917725]
[-97.90460205 140.13136292]
[-83.31253052 136.65696716]
[-68.75357819 133.04627991]
[-54.19462967 129.43560791]
[-39.63568115 125.82492065]
[-25.07673454 122.21424103]
[-10.51778603 118.60356140]
[4.04116249 114.99288177]
[18.60011101 111.38219452]
[33.15906143 107.77151489]
[45.09708023 94.93296051]
[62.74490356 100.12207794]
[77.23379517 96.23979187]
[91.72267914 92.35750580]
[104.78261566 84.97929382]
[115.58569336 74.57287598]
[126.38877106 64.16645813]
[137.19184875 53.76004410]
[147.99493408 43.35363007]
[158.79800415 32.94721222]
[162.83015442 24.70340729]
[169.90173340 22.44956017]
[180.89752197 12.24696827]
[191.89329529 2.04437709]
[202.88906860 -8.15821362]
[210.38742065 -23.36384010]
[227.07455444 -20.36786461]
[228.81512451 -3.50350118]
[213.09165955 2.83756423]
[202.09588623 13.04015541]
[191.10011292 23.24274635]
[180.10432434 33.44533920]
[169.20442200 43.75028992]
[158.40135193 54.15670776]
[147.59826660 64.56312561]
[136.79519653 74.96953583]
[125.99211121 85.37595367]
[115.18903351 95.78237152]
[121.44344330 109.41623688]
[136.37792969 108.01578522]
[151.31240845 106.61532593]
[161.20127869 94.28707886]
[176.92005920 92.64525604]
[189.14306641 102.66391754]
[190.61860657 118.39917755]
[180.47128296 130.51557922]
[164.72129822 131.82467651]
[152.71286011 121.54981232]
[137.77838135 122.95026398]
[122.84389496 124.35071564]
[121.58760071 131.74475098]
[119.07500458 146.53282166]
[117.81871033 153.92684937]
[131.45257568 160.18125916]
[145.08644104 166.43566895]
[158.72030640 172.69007874]
[174.98841858 170.62110901]
[184.69752502 183.83721924]
[177.85972595 198.74279785]
[161.50915527 200.00428772]
[152.46589661 186.32395935]
[138.83203125 180.06953430]
[125.19816589 173.81512451]
[111.56430054 167.56071472]
[92.36116791 137.57080078]
[95.60496521 106.84638977]
[81.11608124 110.72867584]
[66.62718964 114.61096191]
[59.49436188 125.39002991]
[47.31538010 128.30940247]
[36.76974106 122.33046722]
[22.21079254 125.94114685]
[7.65184355 129.55183411]
[-6.90710497 133.16250610]
[-21.46605301 136.77319336]
[-36.02500153 140.38386536]
[-50.58395004 143.99455261]
[-65.14289856 147.60523987]
[-79.70185089 151.21591187]
[-87.31568909 156.33918762]
[-94.56678772 154.75527954]
[-109.19070435 158.09309387]
[-123.81462097 161.43090820]
[-138.43853760 164.76872253]
[-139.90626526 172.50515747]
[-143.39936829 179.53225708]
[-148.64447021 185.33287048]
[-155.23989868 189.48458862]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 74]
[6 73]
[7 72]
[8 71]
[9 70]
[10 69]
[17 66]
[18 65]
[23 62]
[24 61]
[25 60]
[26 59]
[27 58]
[28 57]
[29 56]
[35 53]
[36 52]
[38 50]
[39 49]
[40 48]
[77 163]
[78 162]
[79 161]
[80 160]
[81 158]
[82 157]
[83 156]
[84 155]
[85 154]
[86 153]
[87 152]
[88 151]
[89 150]
[91 147]
[92 146]
[93 145]
[94 117]
[95 116]
[96 115]
[97 114]
[98 113]
[99 112]
[101 111]
[102 110]
[103 109]
[104 108]
[118 129]
[119 128]
[120 127]
[132 143]
[133 142]
[134 141]
[135 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
