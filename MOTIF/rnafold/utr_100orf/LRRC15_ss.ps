%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:53:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACUCAUGCUGCAGCCUUGAGCCGUCCCUCGUCCUCCUCUCAGGCUCCCUCUUGUCCACGGCGGGCGGGCGCCGAGCUGCUGAUGUGUCCCUAGCAUAACCUGGCCCCAUUCCUUUGCAUCUAGAUGCCUUUGGACAAGGCUAUGCCACUGAAGCAUUAUCUCCUUUUGCUGGUGGGCUGCCAAGCCUGGGGUGCAGGGUUGGCCUACCAUGGCUGCCCUAGCG\
) } def
/len { sequence length } bind def

/coor [
[107.75105286 594.03375244]
[98.84181213 606.54461670]
[84.86411285 612.91009521]
[69.57787323 611.41796875]
[57.09502411 602.46954346]
[50.77338791 588.47192383]
[52.31344986 573.19049072]
[61.30094147 560.73571777]
[75.31827545 554.45800781]
[76.77556610 539.52893066]
[78.23284912 524.59991455]
[79.37855530 509.64373779]
[80.21217346 494.66690063]
[81.04579926 479.69009399]
[81.87941742 464.71325684]
[82.71304321 449.73645020]
[83.54666138 434.75964355]
[76.52863312 421.62203979]
[85.02091980 408.27319336]
[85.85453796 393.29635620]
[74.98816681 375.74304199]
[87.04797363 358.02105713]
[87.25648499 343.02249146]
[87.46498871 328.02395630]
[87.67349243 313.02539062]
[80.11385345 300.19180298]
[88.04223633 286.50051880]
[88.25074005 271.50195312]
[88.45925140 256.50341797]
[88.66775513 241.50485229]
[85.62111664 234.78030396]
[88.98484802 226.29965210]
[89.40182495 211.30545044]
[82.02130890 198.36801147]
[90.13923645 184.78825378]
[90.55620575 169.79405212]
[90.97317505 154.79985046]
[91.39015198 139.80564880]
[70.02671051 127.57210541]
[59.61545181 105.26377106]
[44.63863373 104.43015289]
[29.66181564 103.59652710]
[20.93041801 106.24206543]
[14.48305035 102.64579773]
[-0.48073277 101.60407257]
[-15.44451618 100.56234741]
[-29.74871063 107.32257080]
[-41.90790939 98.72006226]
[-56.87169266 97.67833710]
[-71.83547974 96.63661194]
[-86.13967133 103.39683533]
[-98.29887390 94.79432678]
[-113.26265717 93.75260162]
[-128.22644043 92.71087646]
[-143.19021606 91.66915131]
[-158.15400696 90.62742615]
[-173.11778259 89.58570862]
[-189.33859253 94.51744843]
[-198.56796265 80.29580688]
[-187.45704651 67.49018097]
[-172.07606506 74.62192535]
[-157.11227417 75.66364288]
[-142.14849854 76.70536804]
[-127.18471527 77.74709320]
[-112.22093201 78.78881836]
[-97.25714874 79.83054352]
[-84.02326202 72.99581146]
[-70.79375458 81.67282867]
[-55.82997131 82.71455383]
[-40.86618805 83.75627899]
[-27.63230133 76.92154694]
[-14.40279102 85.59856415]
[0.56099194 86.64028931]
[15.52477551 87.68201447]
[30.49543762 88.61971283]
[45.47225571 89.45333099]
[60.44907379 90.28695679]
[60.43707657 78.27732086]
[64.20738983 65.74607086]
[54.60111618 54.22567749]
[44.99484253 42.70528030]
[35.38856888 31.18488503]
[25.78229713 19.66448975]
[10.48613167 21.67219353]
[-3.45750523 15.07078934]
[-11.59925079 1.96676242]
[-11.34110260 -13.45844078]
[-2.76543474 -26.28269386]
[11.39128780 -32.41382599]
[26.61170578 -29.89541054]
[38.03903961 -19.53107071]
[42.02687073 -4.62802458]
[37.30269241 10.05821705]
[46.90896606 21.57861328]
[56.51523972 33.09901047]
[66.12151337 44.61940384]
[75.72778320 56.13980103]
[83.07594299 54.63829803]
[75.67866516 41.58914948]
[85.80339813 30.52163887]
[99.45786285 36.73094940]
[97.77227020 51.63529587]
[105.12042999 50.13379288]
[109.43727875 35.76838684]
[113.75411987 21.40298080]
[118.07096100 7.03757620]
[122.38780212 -7.32782888]
[113.25022125 -17.63932610]
[110.42063141 -31.01264954]
[114.53298950 -43.93527603]
[124.41213989 -53.06681442]
[137.40705872 -56.10240936]
[141.92317200 -70.40641785]
[146.43928528 -84.71043396]
[136.19802856 -98.17842102]
[136.00823975 -114.93059540]
[145.74655151 -128.35792542]
[161.41181946 -133.28121948]
[165.72865295 -147.64663696]
[170.04550171 -162.01203918]
[174.36235046 -176.37744141]
[170.07229614 -192.20550537]
[181.82507324 -203.64245605]
[197.53044128 -198.92295837]
[201.03204346 -182.90200806]
[188.72775269 -172.06059265]
[184.41090393 -157.69519043]
[180.09407043 -143.32978821]
[175.77722168 -128.96438599]
[184.81062317 -119.14193726]
[187.83786011 -106.03398132]
[183.96467590 -93.03766632]
[174.09956360 -83.57553864]
[160.74328613 -80.19432068]
[156.22718811 -65.89031219]
[151.71107483 -51.58629990]
[161.88946533 -38.70064926]
[162.38272095 -22.12101173]
[152.79817200 -8.38028049]
[136.75320435 -3.01098609]
[132.43637085 11.35441875]
[128.11952209 25.71982384]
[123.80268097 40.08522797]
[119.48583984 54.45063400]
[127.17141724 59.56483459]
[133.64976501 65.92372131]
[138.73040771 73.25997162]
[142.27952576 81.27957153]
[156.95462036 78.17449188]
[171.62971497 75.06941986]
[186.30482483 71.96434021]
[191.45564270 67.84722137]
[197.07011414 67.05937195]
[201.43080139 68.98291016]
[216.18653870 66.28697205]
[230.94229126 63.59103394]
[245.69802856 60.89509964]
[250.19834900 46.26616669]
[260.98980713 35.41246796]
[275.59265137 30.82810402]
[290.65118408 33.56652832]
[302.70510864 42.99847031]
[308.98449707 56.95654297]
[308.04641724 72.23327637]
[300.10641479 85.31819153]
[286.98907471 93.20447540]
[271.70861816 94.07991028]
[257.77639771 87.74333191]
[248.39396667 75.65084076]
[233.63822937 78.34677887]
[218.88247681 81.04271698]
[204.12673950 83.73864746]
[189.40989685 86.63943481]
[174.73480225 89.74451447]
[160.05970764 92.84959412]
[145.38459778 95.95466614]
[144.23890686 110.91085052]
[158.26982117 116.21492004]
[172.30075073 121.51899719]
[186.33166504 126.82306671]
[202.41944885 123.64260864]
[213.01258850 136.16130066]
[207.21377563 151.50097656]
[190.98832703 153.88150024]
[181.02760315 140.85398865]
[166.99667358 135.54992676]
[152.96574402 130.24584961]
[138.93482971 124.94177246]
[123.80152130 136.38964844]
[106.38435364 140.22262573]
[105.96738434 155.21682739]
[105.55040741 170.21102905]
[105.13343811 185.20523071]
[112.48413086 199.21514893]
[104.39602661 211.72242737]
[103.97904968 226.71662903]
[103.66630554 241.71336365]
[103.45780182 256.71191406]
[103.24929810 271.71047974]
[103.04078674 286.70901489]
[110.58551025 300.61541748]
[102.67204285 313.23388672]
[102.46353912 328.23245239]
[102.25503540 343.23098755]
[102.04653168 358.22955322]
[109.44678497 364.04174805]
[113.29193115 372.47927856]
[112.83687592 381.60290527]
[108.30945587 389.37832642]
[100.83135986 394.13000488]
[99.99773407 409.10681152]
[106.95613861 423.31564331]
[98.52348328 435.59326172]
[97.68985748 450.57006836]
[96.85623932 465.54690552]
[96.02261353 480.52371216]
[95.18899536 495.50051880]
[94.35536957 510.47735596]
[96.70094299 515.11645508]
[97.00899506 519.73114014]
[95.62829590 523.55169678]
[93.16189575 526.05718994]
[91.70460510 540.98626709]
[90.24732208 555.91528320]
[102.78601837 564.78527832]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 224]
[10 223]
[11 222]
[12 218]
[13 217]
[14 216]
[15 215]
[16 214]
[17 213]
[19 211]
[20 210]
[22 205]
[23 204]
[24 203]
[25 202]
[27 200]
[28 199]
[29 198]
[30 197]
[32 196]
[33 195]
[35 193]
[36 192]
[37 191]
[38 190]
[40 77]
[41 76]
[42 75]
[44 74]
[45 73]
[46 72]
[48 70]
[49 69]
[50 68]
[52 66]
[53 65]
[54 64]
[55 63]
[56 62]
[57 61]
[79 97]
[80 96]
[81 95]
[82 94]
[83 93]
[103 144]
[104 143]
[105 142]
[106 141]
[107 140]
[112 136]
[113 135]
[114 134]
[118 129]
[119 128]
[120 127]
[121 126]
[148 176]
[149 175]
[150 174]
[151 173]
[154 172]
[155 171]
[156 170]
[157 169]
[177 188]
[178 187]
[179 186]
[180 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
