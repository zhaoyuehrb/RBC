%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:30:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUUUCCGGUUCCCGGGGCUACGAGGCGGAAGCGAAGGCAGACGCAGUCUCCGUCGUUGACGUUAGUCGCAGUCUUCGCUGCUAACGUUUUGUUAUGAGUUGCUAAAAUGGUGAAAUGCUGCUCCGCCAUUGGAUGUGCUUCUCGCUGCUUGCCAAAUUCGAAGUUAAAAGGACUGACAUUUCACGUAUUCCCCACAGAUGAAAACA\
) } def
/len { sequence length } bind def

/coor [
[81.50891876 272.76235962]
[78.15540314 287.38269043]
[74.80188751 302.00302124]
[85.09974670 313.61050415]
[86.57466125 329.05731201]
[78.65950775 342.40383911]
[64.39781952 348.51809692]
[49.27350616 345.04898071]
[39.10217667 333.33044434]
[37.79491425 317.86853027]
[45.85438538 304.60867310]
[60.18156433 298.64950562]
[63.53507614 284.02917480]
[66.88858795 269.40884399]
[63.69078445 259.83547974]
[69.38265991 249.99488831]
[69.83354187 235.00166321]
[70.28441620 220.00843811]
[70.73529816 205.01521301]
[61.60060120 190.03186035]
[71.41081238 174.44934082]
[71.63627625 159.45103455]
[71.86174011 144.45272827]
[72.08720398 129.45442200]
[71.97626495 101.40207672]
[88.23960114 89.84479523]
[82.11110687 76.15386963]
[75.98260498 62.46294403]
[69.85410309 48.77201843]
[63.72560120 35.08109283]
[48.56030655 24.63748360]
[51.03750992 7.26488495]
[44.70391083 -6.33237791]
[38.37031555 -19.92963982]
[32.03671646 -33.52690125]
[25.70311928 -47.12416458]
[19.26750946 -60.67344284]
[12.73024750 -74.17396545]
[6.19298553 -87.67449188]
[-0.34427592 -101.17501831]
[-6.88153744 -114.67554474]
[-28.14706612 -115.59117126]
[-45.44685745 -127.80924225]
[-53.34167862 -147.34796143]
[-49.42540359 -167.94651794]
[-61.19293594 -177.24841309]
[-72.96046448 -186.55030823]
[-84.72799683 -195.85220337]
[-93.40239716 -198.71952820]
[-96.60110474 -205.38342285]
[-108.22749329 -214.86114502]
[-119.85387421 -224.33886719]
[-132.88465881 -216.63017273]
[-147.73872375 -213.85006714]
[-162.61970520 -216.31512451]
[-175.73474121 -223.70877075]
[-185.51039124 -235.12184143]
[-190.78146362 -249.16429138]
[-190.92984009 -264.13449097]
[-185.95692444 -278.22546387]
[-197.58331299 -287.70318604]
[-209.20970154 -297.18090820]
[-220.83607483 -306.65863037]
[-232.46246338 -316.13635254]
[-244.08885193 -325.61407471]
[-255.71522522 -335.09179688]
[-267.34161377 -344.56951904]
[-278.96798706 -354.04724121]
[-294.55319214 -356.76971436]
[-299.52920532 -370.80856323]
[-311.15560913 -380.28625488]
[-326.48052979 -377.17495728]
[-340.19528198 -384.68762207]
[-345.82412720 -399.27700806]
[-340.70932007 -414.05444336]
[-327.26589966 -422.04251099]
[-311.84146118 -419.46942139]
[-301.71893311 -407.55017090]
[-301.67788696 -391.91265869]
[-290.05148315 -382.43493652]
[-275.29788208 -380.39035034]
[-269.49026489 -365.67361450]
[-257.86389160 -356.19589233]
[-246.23750305 -346.71817017]
[-234.61112976 -337.24044800]
[-222.98474121 -327.76272583]
[-211.35835266 -318.28500366]
[-199.73197937 -308.80728149]
[-188.10559082 -299.32955933]
[-176.47920227 -289.85183716]
[-163.67959595 -297.56256104]
[-148.98664856 -300.43426514]
[-134.17002869 -298.10140991]
[-121.02100372 -290.82647705]
[-111.13591003 -279.47064209]
[-105.72238159 -265.39178467]
[-105.45181274 -250.28224182]
[-110.37615204 -235.96524048]
[-98.74977112 -226.48751831]
[-87.12339020 -217.00981140]
[-75.42610168 -207.61973572]
[-63.65856934 -198.31784058]
[-51.89104080 -189.01594543]
[-40.12350845 -179.71405029]
[-32.68555069 -184.56739807]
[-24.30676842 -187.51261902]
[-15.46794891 -188.38067627]
[-6.67627764 -187.12179565]
[0.06317171 -200.52253723]
[6.80262089 -213.92327881]
[13.54207039 -227.32402039]
[20.28151894 -240.72474670]
[27.02096939 -254.12548828]
[33.76041794 -267.52624512]
[24.79697037 -279.93249512]
[22.63718605 -295.08483887]
[27.77736855 -309.50140381]
[39.03633881 -319.86935425]
[53.82687378 -323.80618286]
[68.75020599 -320.40725708]
[80.37707520 -310.45364380]
[86.03570557 -296.23260498]
[84.42578888 -281.01199341]
[75.91726685 -268.28942871]
[62.46533585 -260.98846436]
[47.16115952 -260.78677368]
[40.42170715 -247.38604736]
[33.68225861 -233.98530579]
[26.94281006 -220.58456421]
[20.20336151 -207.18382263]
[13.46391106 -193.78308105]
[6.72446203 -180.38233948]
[14.46490669 -172.24424744]
[19.43509293 -162.13029480]
[21.16010475 -150.95561218]
[19.45979500 -139.73886108]
[14.46731949 -129.50939941]
[6.61898851 -121.21280670]
[13.15625000 -107.71228027]
[19.69351196 -94.21175385]
[26.23077393 -80.71122742]
[32.76803589 -67.21070099]
[38.51332855 -62.55982208]
[39.30038452 -53.45776367]
[45.63397980 -39.86050034]
[51.96757507 -26.26323700]
[58.30117416 -12.66597462]
[64.63477325 0.93128783]
[75.88970184 5.36712646]
[81.27719879 16.64469528]
[77.41652679 28.95259094]
[83.54502869 42.64351654]
[89.67353058 56.33444214]
[95.80203247 70.02536774]
[101.93053436 83.71629333]
[101.30448914 68.72937012]
[109.20758057 55.98020554]
[122.90872192 49.87457275]
[137.67317200 52.52240372]
[148.39874268 63.00868607]
[151.37898254 77.70964813]
[145.58398438 91.54503632]
[133.01635742 99.73373413]
[118.01878357 99.44583130]
[131.84439087 105.26410675]
[145.67001343 111.08238220]
[159.49563599 116.90065765]
[174.83480835 112.20075989]
[187.99124146 121.38161469]
[188.87242126 137.40045166]
[176.80239868 147.96899414]
[161.04025269 144.97994995]
[153.67735291 130.72627258]
[139.85174561 124.90799713]
[126.02612305 119.08972168]
[112.20050812 113.27144623]
[105.92176056 117.37355804]
[115.26544952 129.10792542]
[124.60913849 140.84230042]
[134.62954712 152.00434875]
[128.54727173 165.71588135]
[113.54740906 165.77926636]
[107.34967041 152.11846924]
[100.35696411 138.84812927]
[93.36425781 125.57778168]
[87.08551025 129.67988586]
[86.86004639 144.67819214]
[86.63458252 159.67649841]
[86.40911865 174.67480469]
[94.81534576 184.45869446]
[94.31790161 196.94712830]
[85.72851562 205.46609497]
[85.27764130 220.45932007]
[84.82675934 235.45254517]
[84.37588501 250.44575500]
[92.91541290 238.11383057]
[105.42428589 229.83566284]
[120.11298370 226.79556274]
[134.88011169 229.42842102]
[147.61306763 237.35758972]
[156.49026489 249.44871521]
[160.24171448 263.97201538]
[158.33073425 278.84979248]
[151.03071594 291.95361328]
[139.38600159 301.40878296]
[125.06249237 305.86270142]
[110.10933685 304.67813110]
[96.66574860 298.02456665]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 14]
[2 13]
[3 12]
[16 195]
[17 194]
[18 193]
[19 192]
[21 189]
[22 188]
[23 187]
[24 186]
[26 155]
[27 154]
[28 153]
[29 152]
[30 151]
[32 148]
[33 147]
[34 146]
[35 145]
[36 144]
[37 142]
[38 141]
[39 140]
[40 139]
[41 138]
[45 104]
[46 103]
[47 102]
[48 101]
[50 100]
[51 99]
[52 98]
[60 90]
[61 89]
[62 88]
[63 87]
[64 86]
[65 85]
[66 84]
[67 83]
[68 82]
[70 80]
[71 79]
[108 132]
[109 131]
[110 130]
[111 129]
[112 128]
[113 127]
[114 126]
[164 176]
[165 175]
[166 174]
[167 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
