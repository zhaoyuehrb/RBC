%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:37:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACUAAACUAUAAGAGGUAAGCAGUUCUCAGAGGAGACAGAAGGCAACAGCUCUACCAUCCUCCAAACAUCUGAAGCCCCCCAUAGAAACUCCUCUUGGAAUUGGUGGUUCCCUGUCUGACCCAAAUGCUAGGCCGAUUUCAACCCUUCUCCUUGGUCCGGAGUUUCAGACUGGGAUUUGAAGCCUGCUGCUAUCCAAACCAAAAAUGUGCUACUCAGACCAUCA\
) } def
/len { sequence length } bind def

/coor [
[95.93857574 408.39926147]
[87.09951782 396.25207520]
[79.95845032 383.03509521]
[74.64280701 368.98419189]
[71.24745941 354.35015869]
[69.83299255 339.39413452]
[70.42465973 324.38302612]
[73.01189423 309.58471680]
[77.54852295 295.26333618]
[83.95359802 281.67440796]
[92.11279297 269.06048584]
[101.88050842 257.64669800]
[113.08242798 247.63667297]
[125.51863861 239.20909119]
[138.96720886 232.51434326]
[153.18812561 227.67192078]
[150.28733826 212.95507812]
[137.81278992 204.89770508]
[134.66133118 190.01405334]
[143.19723511 176.98423767]
[140.29644775 162.26739502]
[137.39566040 147.55055237]
[134.49487305 132.83370972]
[131.59408569 118.11686707]
[128.69329834 103.40002441]
[115.40498352 122.34567261]
[93.82453156 124.62576294]
[78.99000549 110.82643890]
[64.16502380 113.11115265]
[49.34004593 115.39586639]
[34.51506424 117.68058014]
[19.69008064 119.96529388]
[4.95343351 122.76372528]
[-9.67708492 126.07248688]
[-24.30760384 129.38125610]
[-38.93812180 132.69001770]
[-42.46512985 148.57899475]
[-52.53415298 161.29205322]
[-67.08811951 168.31379700]
[-83.18916321 168.28317261]
[-97.61165619 161.25712585]
[-107.48836517 148.68893433]
[-122.07147980 152.20075989]
[-136.62983704 155.81384277]
[-151.16271973 159.52803040]
[-162.50767517 171.36964417]
[-178.36871338 167.20317078]
[-182.42935181 151.31469727]
[-170.51235962 140.04895020]
[-154.87690735 144.99514771]
[-140.34402466 141.28096008]
[-134.64799500 136.58447266]
[-125.58329773 137.61764526]
[-111.00018311 134.10581970]
[-108.74684906 120.42244720]
[-101.42700958 108.59302521]
[-90.11695099 100.41963196]
[-76.50370026 97.16211700]
[-62.63339233 99.34403992]
[-50.60376740 106.66880035]
[-42.24688721 118.05950928]
[-27.61636925 114.75074005]
[-12.98585129 111.44197083]
[1.64466667 108.13320160]
[-9.49557590 98.08855438]
[-8.73099518 83.10805511]
[3.37402177 74.24980927]
[17.88395691 78.05267334]
[24.08806229 91.70950317]
[17.40536880 105.14031219]
[32.23035049 102.85559845]
[47.05533218 100.57088470]
[61.88031387 98.28617096]
[76.70529175 96.00145721]
[88.13088989 76.57011414]
[112.90525818 74.14810944]
[104.81159973 61.51906967]
[96.71794128 48.89002609]
[88.53669739 36.31754684]
[80.26827240 23.80223083]
[71.65513611 11.52159691]
[62.70395660 -0.51486075]
[53.75277328 -12.55131912]
[46.12918854 -17.56301498]
[44.76219940 -24.81787682]
[35.97919464 -36.97759628]
[27.19618797 -49.13731766]
[11.55547619 -51.40528488]
[2.16659522 -64.11844635]
[4.59980154 -79.73430634]
[17.41151619 -88.98825073]
[33.00077820 -86.39008331]
[42.11875153 -73.48124695]
[39.35590744 -57.92032242]
[48.13891602 -45.76060486]
[56.92192078 -33.60088348]
[65.78923035 -21.50250244]
[74.74040985 -9.46604347]
[83.69159698 2.57041407]
[86.43099976 3.11500239]
[89.12103271 4.77163172]
[91.33921814 7.52735138]
[92.67535400 11.21740341]
[92.78358459 15.53380394]
[101.05201721 28.04911995]
[107.35480499 31.89314651]
[109.34697723 40.79636765]
[117.44063568 53.42541122]
[125.53429413 66.05445099]
[140.40368652 68.02957153]
[151.51358032 57.95135880]
[162.62347412 47.87314606]
[173.73336792 37.79493713]
[178.75604248 22.79216194]
[193.38116455 19.97165680]
[204.49105835 9.89344501]
[215.60093689 -0.18476664]
[226.71083069 -10.26297760]
[237.82072449 -20.34119034]
[248.93061829 -30.41940117]
[250.10426331 -34.57458496]
[252.31250000 -37.81888199]
[255.14395142 -39.93953705]
[258.16043091 -40.87849045]
[260.94937134 -40.72780609]
[272.60217285 -50.17301559]
[284.25500488 -59.61822128]
[290.10369873 -74.31867218]
[304.86294556 -76.32202911]
[316.51577759 -85.76724243]
[322.36447144 -100.46768951]
[337.12371826 -102.47105408]
[348.77655029 -111.91625977]
[360.42935181 -121.36146545]
[372.08218384 -130.80667114]
[383.73498535 -140.25187683]
[395.38778687 -149.69708252]
[390.70748901 -164.13519287]
[391.56277466 -179.28883362]
[397.83801270 -193.10861206]
[408.68447876 -203.72549438]
[422.63534546 -209.70364380]
[437.80380249 -210.23457336]
[452.13848877 -205.24645996]
[463.70074463 -195.41392517]
[470.92684937 -182.06672668]
[472.83956909 -167.00996399]
[469.18020630 -152.27995300]
[460.44363403 -139.86878967]
[447.81143188 -131.45498657]
[432.99200439 -128.17645264]
[417.98953247 -130.47656250]
[404.83300781 -138.04426575]
[393.18017578 -128.59906006]
[381.52737427 -119.15385437]
[369.87457275 -109.70864868]
[358.22174072 -100.26344299]
[346.56893921 -90.81823730]
[341.55371094 -76.79336548]
[325.96096802 -74.11442566]
[314.30816650 -64.66921997]
[309.29293823 -50.64434814]
[293.70019531 -47.96540451]
[282.04739380 -38.52019882]
[270.39456177 -29.07499313]
[259.00881958 -19.30951118]
[247.89892578 -9.23129940]
[236.78904724 0.84691185]
[225.67915344 10.92512321]
[214.56925964 21.00333405]
[203.45936584 31.08154678]
[199.23133850 45.36346054]
[183.81156921 48.90482712]
[172.70169067 58.98303604]
[161.59179688 69.06124878]
[150.48190308 79.13945770]
[162.70272827 70.44168091]
[177.60064697 68.69470215]
[191.50215149 74.32929230]
[200.97938538 85.95606995]
[203.69546509 100.70811462]
[198.98066711 114.94787598]
[187.99757385 125.16410828]
[173.45437622 128.83770752]
[158.93713379 125.06283569]
[148.02549744 114.77029419]
[143.41014099 100.49923706]
[146.31092834 115.21607971]
[149.21171570 129.93292236]
[152.11250305 144.64976501]
[155.01329041 159.36660767]
[157.91407776 174.08345032]
[170.75596619 182.89956665]
[173.48812866 197.86585999]
[165.00416565 210.05429077]
[167.90495300 224.77113342]
[182.89976501 223.85494995]
[197.88288879 224.94561768]
[212.58692932 228.02366638]
[226.74949646 233.03417969]
[240.11782837 239.88772583]
[252.45335388 248.46199036]
[263.53594971 258.60397339]
[273.16778564 270.13265991]
[281.17703247 282.84234619]
[287.42071533 296.50616455]
[291.78741455 310.88027954]
[294.19921875 325.70816040]
[294.61306763 340.72525024]
[293.02157593 355.66345215]
[289.45315552 370.25625610]
[283.97146606 384.24319458]
[276.67437744 397.37469482]
[267.69207764 409.41635132]
[257.18487549 420.15332031]
[245.34028625 429.39395142]
[232.36970520 436.97335815]
[218.50457764 442.75625610]
[203.99237061 446.63943481]
[189.09205627 448.55364990]
[174.06956482 448.46469116]
[159.19296265 446.37414551]
[144.72776794 442.31936646]
[130.93211365 436.37265015]
[118.05219269 428.64016724]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 196]
[17 195]
[20 192]
[21 191]
[22 190]
[23 189]
[24 188]
[25 187]
[28 74]
[29 73]
[30 72]
[31 71]
[32 70]
[33 64]
[34 63]
[35 62]
[36 61]
[42 54]
[43 53]
[44 51]
[45 50]
[76 109]
[77 108]
[78 107]
[79 105]
[80 104]
[81 99]
[82 98]
[83 97]
[85 96]
[86 95]
[87 94]
[110 176]
[111 175]
[112 174]
[113 173]
[115 171]
[116 170]
[117 169]
[118 168]
[119 167]
[120 166]
[125 165]
[126 164]
[127 163]
[129 161]
[130 160]
[132 158]
[133 157]
[134 156]
[135 155]
[136 154]
[137 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
