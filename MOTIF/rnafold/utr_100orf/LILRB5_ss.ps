%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:56:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGUCUUGUGACAGGGAGAACCCAGCCUCCAGUCCACACUCUGCGUGUUUUUGUGUCCUGCCAGGCACCGUGGUCUCAUCCGCCUGCACAGCUGAGUCCAGUGGGAGCUGACGCCAUGACCCUCACCCUCUCAGUCCUGAUUUGCCUCGGGCUGAGUGUGGGCCCCAGGACCUGCGUGCAGGCAGGCACCCUCCCCAAACCCACCCUCUGGGCUG\
) } def
/len { sequence length } bind def

/coor [
[131.73680115 388.94125366]
[131.19149780 373.95114136]
[123.69645691 374.22381592]
[120.44986725 388.86825562]
[117.20326996 403.51269531]
[122.64794922 418.98159790]
[111.76984406 431.25347900]
[95.75942230 427.70404053]
[91.08683014 411.98468018]
[102.55883026 400.26608276]
[105.80542755 385.62164307]
[109.05201721 370.97720337]
[108.62115479 341.14755249]
[128.06880188 327.03274536]
[126.54427338 312.11041260]
[125.01975250 297.18807983]
[123.49522400 282.26577759]
[121.97069550 267.34344482]
[111.44633484 263.66275024]
[103.01593018 256.28817749]
[97.92161560 246.25543213]
[96.93287659 234.99545288]
[100.23056793 224.13024902]
[107.37526703 215.23936462]
[117.36547089 209.63014221]
[116.49330139 194.65551758]
[115.62112427 179.68089294]
[114.74895477 164.70626831]
[108.48279572 160.58496094]
[102.06898499 174.14456177]
[96.39266968 188.02906799]
[81.39297485 188.12509155]
[75.53937531 174.31439209]
[86.04020691 163.60227966]
[95.95047760 152.34231567]
[89.68431854 148.22100830]
[75.58892822 153.35130310]
[61.49354172 158.48161316]
[47.39815140 163.61190796]
[39.34219742 177.48567200]
[23.45196915 179.69479370]
[11.91709042 168.54463196]
[13.58613300 152.58862305]
[27.17875099 144.06687927]
[42.26784897 149.51652527]
[56.36323929 144.38621521]
[70.45862579 139.25592041]
[84.55401611 134.12561035]
[83.95469666 126.64959717]
[69.00264740 127.84798431]
[67.80451202 112.89591217]
[82.75606537 111.69756317]
[82.15674591 104.22154999]
[67.42407990 101.40225983]
[52.69140625 98.58296204]
[37.95873260 95.76367188]
[23.22606277 92.94438171]
[10.29187775 102.02636719]
[-5.26128626 99.22018433]
[-14.20601177 86.19070435]
[-11.23555279 70.66807556]
[1.88777149 61.86160660]
[17.37812424 64.99600983]
[26.04535484 78.21170807]
[40.77802658 81.03100586]
[55.51069641 83.85029602]
[70.24337006 86.66958618]
[84.97603607 89.48887634]
[88.04647827 82.64618683]
[79.26478577 70.48551941]
[94.18736267 68.96080780]
[97.25780487 62.11812210]
[85.35750580 52.98670197]
[69.72311401 55.29780579]
[57.08370972 45.80986404]
[54.93803024 30.15190697]
[64.55907440 17.61352158]
[80.23883820 15.63350964]
[92.67480469 25.38657761]
[94.48892975 41.08640289]
[106.38922882 50.21782303]
[121.31155396 48.69329834]
[131.11947632 37.34407425]
[140.92738342 25.99485397]
[150.73529053 14.64563179]
[160.54321289 3.29641008]
[170.35112000 -8.05281162]
[180.15904236 -19.40203285]
[189.96694946 -30.75125504]
[193.20866394 -39.28699112]
[200.00097656 -42.19287872]
[209.97291565 -53.39825439]
[207.64709473 -66.66265106]
[213.30178833 -78.66996765]
[224.67057800 -85.13331604]
[237.49334717 -83.88843536]
[247.62721252 -94.94759369]
[257.76104736 -106.00675201]
[267.89489746 -117.06591034]
[269.69464111 -123.42140198]
[273.81390381 -127.32970428]
[278.48794556 -128.29388428]
[288.93917847 -139.05361938]
[299.39038086 -149.81336975]
[309.84161377 -160.57310486]
[313.57412720 -168.90591431]
[320.52392578 -171.41194153]
[331.13055420 -182.01853943]
[341.73715210 -192.62515259]
[346.02423096 -207.85444641]
[360.49487305 -211.38288879]
[371.10147095 -221.98948669]
[381.70806885 -232.59608459]
[392.31469727 -243.20268250]
[377.91525269 -239.00076294]
[362.94281006 -239.90969849]
[349.15740967 -245.82263184]
[338.17953491 -256.04449463]
[331.29965210 -269.37368774]
[329.32653809 -284.24334717]
[332.49206543 -298.90551758]
[340.42416382 -311.63662720]
[352.19042969 -320.94015503]
[366.40765381 -325.72241211]
[381.40463257 -325.42129517]
[395.41842651 -320.07211304]
[406.80169678 -310.30374146]
[414.21633911 -297.26446533]
[416.79071045 -282.48703003]
[414.22222900 -267.70855713]
[406.81286621 -254.66636658]
[419.57962036 -262.54101562]
[432.34637451 -270.41567993]
[445.11312866 -278.29031372]
[450.77154541 -285.45617676]
[458.12332153 -286.18508911]
[471.00323486 -293.87322998]
[483.88317871 -301.56137085]
[496.76309204 -309.24951172]
[509.64303589 -316.93765259]
[513.26751709 -332.32070923]
[526.75164795 -340.56408691]
[542.09552002 -336.77716064]
[550.19592285 -323.20663452]
[546.24694824 -307.90362549]
[532.59155273 -299.94720459]
[517.33117676 -304.05770874]
[504.45123291 -296.36956787]
[491.57128906 -288.68142700]
[478.69137573 -280.99331665]
[465.81146240 -273.30517578]
[452.98776245 -265.52355957]
[440.22100830 -257.64892578]
[427.45428467 -249.77426147]
[414.68753052 -241.89961243]
[402.92129517 -232.59608459]
[392.31469727 -221.98948669]
[381.70806885 -211.38288879]
[371.10147095 -200.77627563]
[367.57302856 -186.30564880]
[352.34375000 -182.01853943]
[341.73715210 -171.41194153]
[331.13055420 -160.80534363]
[320.60134888 -150.12188721]
[310.15014648 -139.36215210]
[299.69891357 -128.60240173]
[289.24771118 -117.84266663]
[278.95407104 -106.93206024]
[268.82022095 -95.87290192]
[258.68637085 -84.81374359]
[248.55250549 -73.75457764]
[250.00236511 -56.99768066]
[238.65956116 -44.12462997]
[221.17829895 -43.42631531]
[211.20635986 -32.22093964]
[201.31617737 -20.94334221]
[191.50825500 -9.59412003]
[181.70034790 1.75510168]
[171.89242554 13.10432339]
[162.08451843 24.45354462]
[152.27661133 35.80276871]
[142.46868896 47.15198898]
[132.66078186 58.50120926]
[129.72357178 163.83410645]
[130.59574890 178.80871582]
[131.46792603 193.78334045]
[132.34008789 208.75796509]
[148.87876892 218.39953613]
[156.20269775 235.92430115]
[151.51744080 254.17590332]
[136.89302063 265.81890869]
[138.41755676 280.74124146]
[139.94207764 295.66357422]
[141.46659851 310.58587646]
[142.99113464 325.50820923]
[152.71611023 326.95477295]
[161.89094543 332.74276733]
[168.56779480 342.55709839]
[171.00672913 355.22155762]
[168.04647827 368.83117676]
[172.34852600 383.20101929]
[176.65057373 397.57086182]
[180.95262146 411.94070435]
[194.33448792 420.78970337]
[195.61593628 436.78149414]
[183.81394958 447.64852905]
[167.98199463 445.05456543]
[160.26499939 430.98944092]
[166.58277893 416.24273682]
[162.28073120 401.87289429]
[157.97868347 387.50305176]
[153.67663574 373.13320923]
[146.18159485 373.40585327]
[146.72688293 388.39593506]
[147.27192688 403.38604736]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 12]
[4 11]
[5 10]
[14 195]
[15 194]
[16 193]
[17 192]
[18 191]
[25 187]
[26 186]
[27 185]
[28 184]
[36 48]
[37 47]
[38 46]
[39 45]
[53 68]
[54 67]
[55 66]
[56 65]
[57 64]
[72 81]
[73 80]
[82 183]
[83 182]
[84 181]
[85 180]
[86 179]
[87 178]
[88 177]
[89 176]
[91 175]
[92 174]
[96 171]
[97 170]
[98 169]
[99 168]
[102 167]
[103 166]
[104 165]
[105 164]
[107 163]
[108 162]
[109 161]
[111 159]
[112 158]
[113 157]
[114 156]
[131 155]
[132 154]
[133 153]
[134 152]
[136 151]
[137 150]
[138 149]
[139 148]
[140 147]
[200 212]
[201 211]
[202 210]
[203 209]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
