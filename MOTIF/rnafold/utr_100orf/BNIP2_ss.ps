%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:00:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCGACGCGACGGGUCCGCCCACAGGCAAGGAAGGCCGACCCCGCGAGUGCAGGCGCGAGCGCUAGCCCGUGACGUCUGAGGGGGUUGGGGGGAUGCUGUGUGGGUUUCAAGAAGACGCCACGCCUCCGCCGCCGCCACGCCCCCGCCGCCUCCACCGCCGGCUGCCGCGCCCGGAGGAGGUCGGGAUGUUAU\
) } def
/len { sequence length } bind def

/coor [
[120.24628448 127.71620941]
[102.47268677 136.59687805]
[99.11804962 151.21694946]
[95.76341248 165.83702087]
[92.40876770 180.45709229]
[94.75965881 197.24725342]
[79.27644348 204.15425110]
[68.35320282 191.18817139]
[77.78870392 177.10244751]
[81.14334106 162.48237610]
[84.49797821 147.86230469]
[87.85262299 133.24224854]
[75.17477417 125.22525787]
[63.40437317 134.52352905]
[51.63397598 143.82179260]
[39.86357880 153.12005615]
[28.09318161 162.41831970]
[22.06051254 177.04423523]
[7.27727747 178.86227417]
[-4.49311972 188.16053772]
[-16.26351738 197.45880127]
[-12.45913219 212.20486450]
[-14.98782253 227.22238159]
[-23.41147804 239.90945435]
[-36.27064896 248.06799316]
[-51.33740234 250.28445435]
[-66.00134277 246.17485046]
[-77.72183990 236.45118713]
[-84.46825409 222.79812622]
[-85.07173157 207.58117676]
[-79.42771149 193.43675232]
[-68.51405334 182.81544495]
[-54.22161865 177.55747986]
[-39.02665710 178.57383728]
[-25.56178284 185.68840027]
[-13.79138565 176.39013672]
[-2.02098823 167.09187317]
[3.16978335 153.13102722]
[18.79491615 150.64791870]
[30.56531334 141.34965515]
[42.33570862 132.05139160]
[54.10610580 122.75312805]
[65.87650299 113.45485687]
[67.45755005 106.29147339]
[70.39084625 100.18856812]
[55.85610580 96.48162842]
[40.57186890 100.56851196]
[30.15147591 89.92592621]
[15.61673737 86.21898651]
[1.08199859 82.51205444]
[-13.45273972 78.80511475]
[-27.98747826 75.09817505]
[-39.84118271 85.11163330]
[-55.31921768 86.21167755]
[-68.46996307 77.97531891]
[-74.23667908 63.56960297]
[-70.40196228 48.53382874]
[-58.44032669 38.64955521]
[-42.95126724 37.71748352]
[-29.89064980 46.09601593]
[-24.28054237 60.56343842]
[-9.74580288 64.27037811]
[4.78893518 67.97731018]
[19.32367325 71.68424988]
[33.85841370 75.39118958]
[48.10302734 71.03915405]
[59.56304169 81.94689178]
[74.09777832 85.65382385]
[87.94142151 72.95691681]
[106.63823700 71.14395142]
[122.66338348 80.94458771]
[136.21513367 74.51419830]
[149.76689148 68.08380890]
[163.31864929 61.65341949]
[176.87040710 55.22303009]
[190.42216492 48.79264450]
[203.97392273 42.36225510]
[217.52568054 35.93186569]
[211.22129822 21.64912987]
[214.49812317 7.20674992]
[225.13504028 -1.90650308]
[238.30888367 -2.81091952]
[245.91328430 -15.74046421]
[253.51768494 -28.67000961]
[261.12207031 -41.59955597]
[268.72647095 -54.52909851]
[276.33087158 -67.45864105]
[272.58413696 -82.57816315]
[280.48028564 -95.58222961]
[294.91751099 -99.06098938]
[302.52191162 -111.99053192]
[302.84872437 -127.80836487]
[315.97024536 -134.85638428]
[323.57464600 -147.78593445]
[319.82794189 -162.90544128]
[327.72406006 -175.90951538]
[342.16128540 -179.38827515]
[349.76568604 -192.31781006]
[348.61285400 -213.70744324]
[366.95559692 -223.15289307]
[373.92645264 -236.43473816]
[380.89730835 -249.71658325]
[387.86816406 -262.99841309]
[394.83898926 -276.28024292]
[401.80984497 -289.56210327]
[408.67349243 -302.89965820]
[415.42944336 -316.29208374]
[422.18542480 -329.68450928]
[428.94140625 -343.07690430]
[425.30828857 -358.70318604]
[435.37283325 -371.19656372]
[451.41430664 -370.97323608]
[461.12713623 -358.20449829]
[457.06042480 -342.68542480]
[442.33380127 -336.32095337]
[435.57785034 -322.92852783]
[428.82186890 -309.53610229]
[422.06588745 -296.14367676]
[421.85989380 -288.74584961]
[415.09167480 -282.59124756]
[408.12084961 -269.30941772]
[401.14999390 -256.02755737]
[394.17913818 -242.74572754]
[387.20828247 -229.46388245]
[380.23745728 -216.18205261]
[384.23336792 -208.22729492]
[384.11120605 -199.18843079]
[379.77163696 -191.10185242]
[372.07974243 -185.84774780]
[362.69525146 -184.71342468]
[355.09085083 -171.78387451]
[359.06677246 -157.47557068]
[351.53903198 -144.25485229]
[336.50421143 -140.18153381]
[328.89981079 -127.25198364]
[329.11691284 -112.35896301]
[315.45144653 -104.38613129]
[307.84704590 -91.45658875]
[311.82299805 -77.14828491]
[304.29522705 -63.92756271]
[289.26040649 -59.85424805]
[281.65603638 -46.92470169]
[274.05163574 -33.99515533]
[266.44723511 -21.06561089]
[258.84283447 -8.13606644]
[251.23843384 4.79347801]
[257.74905396 21.64603806]
[248.15904236 39.40126801]
[259.92944336 48.69953537]
[271.69982910 57.99779892]
[283.54476929 67.20095062]
[295.46340942 76.30838776]
[307.38208008 85.41582489]
[319.30075073 94.52326202]
[331.21942139 103.63069916]
[346.88253784 105.86176300]
[352.29751587 119.73716736]
[364.21618652 128.84460449]
[376.13485718 137.95204163]
[382.65267944 139.18296814]
[386.92141724 142.96002197]
[388.28451538 147.54989624]
[399.90356445 157.03659058]
[411.52264404 166.52326965]
[427.21972656 164.68542480]
[439.56680298 174.55078125]
[441.23855591 190.26640320]
[431.24322510 202.50848389]
[415.51080322 204.01400757]
[403.37509155 193.88978577]
[402.03598022 178.14233398]
[390.41690063 168.65565491]
[378.79782104 159.16897583]
[367.02743530 149.87071228]
[355.10876465 140.76327515]
[343.19009399 131.65583801]
[328.37948608 130.07620239]
[322.11196899 115.54936981]
[310.19329834 106.44193268]
[298.27465820 97.33448792]
[286.35598755 88.22705078]
[274.43731689 79.11961365]
[267.20401001 77.55434418]
[262.40158081 69.76819611]
[250.63117981 60.46993256]
[238.86077881 51.17166519]
[223.95606995 49.48362350]
[210.40431213 55.91401291]
[196.85255432 62.34439850]
[183.30079651 68.77478790]
[169.74903870 75.20517731]
[156.19728088 81.63556671]
[142.64552307 88.06595612]
[129.09376526 94.49634552]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 12]
[3 11]
[4 10]
[5 9]
[13 43]
[14 42]
[15 41]
[16 40]
[17 39]
[19 37]
[20 36]
[21 35]
[45 68]
[46 67]
[48 65]
[49 64]
[50 63]
[51 62]
[52 61]
[71 194]
[72 193]
[73 192]
[74 191]
[75 190]
[76 189]
[77 188]
[78 187]
[82 146]
[83 145]
[84 144]
[85 143]
[86 142]
[87 141]
[90 138]
[91 137]
[93 135]
[94 134]
[97 131]
[98 130]
[100 125]
[101 124]
[102 123]
[103 122]
[104 121]
[105 120]
[106 118]
[107 117]
[108 116]
[109 115]
[148 186]
[149 185]
[150 184]
[151 182]
[152 181]
[153 180]
[154 179]
[155 178]
[157 176]
[158 175]
[159 174]
[162 173]
[163 172]
[164 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
