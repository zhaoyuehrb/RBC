%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:15:30 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TENM2)
} def

/sequence { (\
AUGGAUGUAAAGGACCGGCGACACCGCUCUUUGACCAGAGGACGCUGUGGCAAAGAGUGUCGCUACACAAGCUCCUCUCUGGACAGUGAGGACUGCCGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.033181599 ubox
2 7 0.032948932 ubox
2 9 0.049128237 ubox
2 17 0.089159976 ubox
2 37 0.009810081 ubox
2 65 0.003398214 ubox
2 67 0.014991743 ubox
2 69 0.077170680 ubox
2 81 0.003269304 ubox
2 95 0.008958665 ubox
2 98 0.265826079 ubox
2 100 0.027971372 ubox
3 8 0.051861964 ubox
3 16 0.300220574 ubox
3 36 0.016546952 ubox
3 66 0.017017300 ubox
3 68 0.085116348 ubox
3 73 0.008607746 ubox
3 74 0.006032856 ubox
3 75 0.513109719 ubox
3 76 0.030384426 ubox
3 77 0.017549185 ubox
3 78 0.072544860 ubox
3 79 0.026736859 ubox
3 80 0.057576784 ubox
3 94 0.014984522 ubox
3 97 0.375864265 ubox
3 99 0.043830257 ubox
4 15 0.299491284 ubox
4 35 0.016427991 ubox
4 72 0.010247282 ubox
4 73 0.005165278 ubox
4 74 0.514002994 ubox
4 75 0.034038070 ubox
4 76 0.011174815 ubox
4 77 0.081784049 ubox
4 78 0.011827535 ubox
4 79 0.063676556 ubox
4 93 0.015423744 ubox
4 96 0.374075366 ubox
5 73 0.506905906 ubox
5 76 0.077871531 ubox
5 78 0.062391515 ubox
6 17 0.023089336 ubox
6 23 0.003264814 ubox
6 65 0.027279869 ubox
6 67 0.243065918 ubox
6 69 0.107608408 ubox
6 95 0.051115900 ubox
6 98 0.019091959 ubox
6 100 0.096688906 ubox
7 15 0.154175083 ubox
7 16 0.077545049 ubox
7 19 0.004403126 ubox
7 22 0.003497444 ubox
7 35 0.011702059 ubox
7 64 0.014168414 ubox
7 66 0.266632372 ubox
7 68 0.112547984 ubox
7 72 0.474050562 ubox
7 80 0.009214557 ubox
7 93 0.064068252 ubox
7 94 0.017690627 ubox
7 96 0.050246217 ubox
7 97 0.025616864 ubox
7 99 0.156541201 ubox
8 14 0.152924659 ubox
8 18 0.004349294 ubox
8 21 0.003407328 ubox
8 33 0.011338727 ubox
8 34 0.011509144 ubox
8 65 0.265629909 ubox
8 67 0.109105929 ubox
8 71 0.463706461 ubox
8 92 0.054314649 ubox
8 95 0.050964582 ubox
8 98 0.152843627 ubox
9 32 0.011553462 ubox
9 64 0.163286172 ubox
9 80 0.007467826 ubox
9 94 0.039963396 ubox
10 31 0.011411997 ubox
10 32 0.016949707 ubox
11 30 0.011229214 ubox
11 31 0.018570274 ubox
11 64 0.014036064 ubox
11 73 0.032544820 ubox
11 76 0.201283998 ubox
11 78 0.006338264 ubox
11 80 0.008934340 ubox
11 94 0.049472347 ubox
12 29 0.010904502 ubox
12 30 0.018871591 ubox
12 63 0.009210138 ubox
12 64 0.008541793 ubox
12 72 0.038536616 ubox
12 73 0.015963552 ubox
12 74 0.003475221 ubox
12 75 0.214046760 ubox
12 77 0.006170979 ubox
12 78 0.010907272 ubox
12 79 0.009331484 ubox
12 80 0.006295103 ubox
12 93 0.050503148 ubox
12 94 0.045662581 ubox
12 97 0.235878588 ubox
13 28 0.007505389 ubox
13 29 0.019099064 ubox
13 61 0.008199842 ubox
13 63 0.004700494 ubox
13 72 0.019534614 ubox
13 74 0.214088065 ubox
13 75 0.003464773 ubox
13 76 0.005005635 ubox
13 77 0.013824066 ubox
13 78 0.004782864 ubox
13 79 0.007331145 ubox
13 93 0.046016799 ubox
13 96 0.234903273 ubox
14 28 0.018734588 ubox
14 60 0.008228084 ubox
14 73 0.209316115 ubox
14 76 0.013459185 ubox
14 78 0.007147948 ubox
15 59 0.007890854 ubox
15 91 0.024641626 ubox
16 26 0.020566753 ubox
16 62 0.005193209 ubox
16 90 0.024632144 ubox
16 95 0.028137721 ubox
16 98 0.328862044 ubox
16 100 0.021667949 ubox
17 25 0.021485988 ubox
17 28 0.007877585 ubox
17 61 0.005634831 ubox
17 64 0.877952126 ubox
17 73 0.003243058 ubox
17 75 0.003463998 ubox
17 94 0.009439797 ubox
17 97 0.345232444 ubox
17 99 0.020393445 ubox
18 24 0.021447436 ubox
18 27 0.010199716 ubox
18 60 0.005611192 ubox
18 63 0.936738309 ubox
18 72 0.003494970 ubox
18 93 0.007406502 ubox
18 96 0.344172911 ubox
18 99 0.051031233 ubox
19 26 0.010251814 ubox
19 59 0.005254234 ubox
19 62 0.937103378 ubox
19 71 0.003300692 ubox
19 95 0.343504493 ubox
19 98 0.051286981 ubox
20 25 0.012558297 ubox
20 61 0.964851750 ubox
20 94 0.205492119 ubox
20 97 0.050448240 ubox
21 60 0.963662602 ubox
22 59 0.907482099 ubox
22 95 0.039161680 ubox
23 58 0.661308795 ubox
23 60 0.052870262 ubox
23 94 0.034694324 ubox
24 57 0.487853114 ubox
24 59 0.045139230 ubox
24 91 0.003374301 ubox
25 59 0.412459437 ubox
26 58 0.745558822 ubox
27 55 0.006301072 ubox
27 57 0.872170437 ubox
27 90 0.010598165 ubox
28 54 0.005448390 ubox
28 56 0.997492896 ubox
28 89 0.010804684 ubox
29 55 0.999637061 ubox
29 88 0.010820876 ubox
30 54 0.999072211 ubox
31 53 0.998354094 ubox
31 54 0.003318426 ubox
31 86 0.009011028 ubox
32 52 0.999055237 ubox
32 53 0.004424610 ubox
32 85 0.010811125 ubox
33 51 0.999401838 ubox
33 84 0.010842419 ubox
35 50 0.999577582 ubox
35 82 0.011526940 ubox
36 47 0.004392269 ubox
36 49 0.999671256 ubox
36 81 0.011553331 ubox
37 46 0.006022938 ubox
37 48 0.998214140 ubox
37 78 0.018600268 ubox
37 80 0.010350104 ubox
38 45 0.007390410 ubox
38 77 0.022792004 ubox
38 79 0.009181853 ubox
39 46 0.995545689 ubox
39 76 0.023116187 ubox
39 78 0.008242070 ubox
40 45 0.997873489 ubox
40 46 0.014211110 ubox
40 75 0.023657405 ubox
40 77 0.006677250 ubox
41 45 0.016738158 ubox
41 74 0.023814486 ubox
41 75 0.004139569 ubox
41 76 0.003491685 ubox
42 73 0.023744409 ubox
44 72 0.024437493 ubox
45 71 0.024438976 ubox
46 67 0.013982168 ubox
46 69 0.006197033 ubox
46 70 0.018891849 ubox
47 63 0.011321971 ubox
47 66 0.019880088 ubox
47 68 0.008632176 ubox
48 62 0.011349726 ubox
48 65 0.019916815 ubox
48 67 0.008508916 ubox
49 61 0.011457609 ubox
49 64 0.020033281 ubox
49 66 0.008109953 ubox
50 60 0.011680498 ubox
50 63 0.020573016 ubox
51 59 0.011691620 ubox
51 62 0.020558231 ubox
52 58 0.010960468 ubox
55 61 0.007386401 ubox
56 60 0.006432184 ubox
57 68 0.005328049 ubox
58 67 0.005694814 ubox
59 66 0.007234114 ubox
59 68 0.006115551 ubox
59 93 0.012760463 ubox
60 65 0.006617611 ubox
60 67 0.005957453 ubox
60 92 0.013577617 ubox
61 91 0.013705091 ubox
61 100 0.005108183 ubox
62 72 0.338574011 ubox
62 96 0.003225725 ubox
62 99 0.006349592 ubox
63 71 0.338999588 ubox
63 90 0.013995644 ubox
63 91 0.003176435 ubox
63 95 0.003264157 ubox
63 98 0.006378802 ubox
64 70 0.331558092 ubox
64 89 0.014057858 ubox
64 90 0.003178291 ubox
66 88 0.029469695 ubox
66 95 0.051930744 ubox
67 87 0.029589983 ubox
67 94 0.039694968 ubox
68 81 0.003913727 ubox
68 86 0.029525427 ubox
68 88 0.012655348 ubox
68 95 0.275759511 ubox
69 80 0.003918621 ubox
69 87 0.012581999 ubox
69 94 0.214257394 ubox
70 76 0.011566389 ubox
70 78 0.013069432 ubox
70 80 0.009628578 ubox
70 94 0.501310628 ubox
71 75 0.012055434 ubox
71 77 0.013724074 ubox
71 79 0.010186601 ubox
71 87 0.005853439 ubox
71 93 0.545020009 ubox
71 96 0.347248084 ubox
71 99 0.174086555 ubox
72 86 0.006194007 ubox
72 90 0.005189329 ubox
72 95 0.347818487 ubox
72 98 0.174200821 ubox
73 83 0.102538327 ubox
73 85 0.003783822 ubox
73 89 0.005303322 ubox
73 92 0.778701899 ubox
74 82 0.110438827 ubox
74 88 0.005313808 ubox
74 91 0.805805393 ubox
75 81 0.110453394 ubox
75 82 0.003453726 ubox
75 86 0.004700161 ubox
75 90 0.805908499 ubox
75 91 0.006811576 ubox
76 83 0.006066227 ubox
76 85 0.004570267 ubox
76 89 0.805743330 ubox
76 91 0.030517115 ubox
76 92 0.003970694 ubox
77 82 0.006766214 ubox
77 86 0.007782577 ubox
77 88 0.803781314 ubox
77 90 0.036964865 ubox
77 91 0.003746999 ubox
78 85 0.011069142 ubox
78 89 0.037769042 ubox
79 86 0.764592935 ubox
79 88 0.038252956 ubox
79 90 0.003978437 ubox
80 85 0.717237415 ubox
80 89 0.004007107 ubox
80 98 0.422265543 ubox
80 100 0.008062838 ubox
81 87 0.010757847 ubox
81 97 0.578973405 ubox
81 99 0.010234580 ubox
82 96 0.579221819 ubox
84 95 0.589109482 ubox
85 94 0.589340071 ubox
86 93 0.589451312 ubox
86 99 0.009869547 ubox
87 92 0.583553423 ubox
87 98 0.009850474 ubox
87 100 0.004016553 ubox
88 97 0.009557304 ubox
88 99 0.007298257 ubox
90 97 0.014969913 ubox
91 96 0.014985537 ubox
94 100 0.005647164 ubox
95 99 0.016821775 ubox
3 75 0.9500000 lbox
4 74 0.9500000 lbox
5 73 0.9500000 lbox
7 72 0.9500000 lbox
8 71 0.9500000 lbox
17 64 0.9500000 lbox
18 63 0.9500000 lbox
19 62 0.9500000 lbox
20 61 0.9500000 lbox
21 60 0.9500000 lbox
22 59 0.9500000 lbox
26 58 0.9500000 lbox
27 57 0.9500000 lbox
28 56 0.9500000 lbox
29 55 0.9500000 lbox
30 54 0.9500000 lbox
31 53 0.9500000 lbox
32 52 0.9500000 lbox
33 51 0.9500000 lbox
35 50 0.9500000 lbox
36 49 0.9500000 lbox
37 48 0.9500000 lbox
39 46 0.9500000 lbox
40 45 0.9500000 lbox
80 98 0.9500000 lbox
81 97 0.9500000 lbox
82 96 0.9500000 lbox
84 95 0.9500000 lbox
85 94 0.9500000 lbox
86 93 0.9500000 lbox
87 92 0.9500000 lbox
showpage
end
%%EOF
