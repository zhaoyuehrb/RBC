%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:31:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGCCCCGUCGCACGAGCGCUCCCUGCGAGUGGCGCAGGUAACAGACCGCAGGGGCAAGACAGCCGGCGCGGGAGGAGGAUGGCGCUGUCGGUGCUGCGCUUGGCGCUGCUGCUCCUGGCAGUUACCUUCGCAGGUAGCGCUCGGAGCGGUCCUGGCGAGCGGGGACCUCCGGAGAAAA\
) } def
/len { sequence length } bind def

/coor [
[-3.65949559 213.71325684]
[-13.59874821 202.47888184]
[-18.65449333 188.35656738]
[-18.10344696 173.36669922]
[-12.02444458 159.65371704]
[-1.28567290 149.17846680]
[-16.03725624 151.89706421]
[-30.78884125 154.61566162]
[-45.54042435 157.33425903]
[-53.43800354 161.97872925]
[-60.57148361 159.96969604]
[-75.36802673 162.43185425]
[-90.16457367 164.89401245]
[-98.14157104 169.40071106]
[-105.23911285 167.26817322]
[-120.07615662 169.47315979]
[-128.13017273 173.84072876]
[-135.18963623 171.58532715]
[-150.06271362 173.53247070]
[-164.81430054 176.25106812]
[-179.40438843 179.73376465]
[-187.04954529 184.78297424]
[-194.27790833 183.14794922]
[-208.92625427 186.37689209]
[-223.57460022 189.60583496]
[-238.22294617 192.83476257]
[-252.87129211 196.06370544]
[-267.51962280 199.29264832]
[-282.16796875 202.52159119]
[-289.89959717 207.43736267]
[-297.09851074 205.67712402]
[-311.80068970 208.65133667]
[-314.68334961 223.57644653]
[-323.06234741 236.25953674]
[-335.65994263 244.76654053]
[-350.55508423 247.80018616]
[-365.47637939 244.89788818]
[-378.14843750 236.50221252]
[-386.63885498 223.89343262]
[-389.65292358 208.99430847]
[-386.73098755 194.07684326]
[-378.31866455 181.41584778]
[-365.69873047 172.94201660]
[-350.79565430 169.94755554]
[-335.88204956 172.88911438]
[-323.23211670 181.31809998]
[-314.77490234 193.94915771]
[-300.07272339 190.97494507]
[-285.39691162 187.87324524]
[-270.74856567 184.64430237]
[-256.10021973 181.41537476]
[-241.45188904 178.18643188]
[-226.80354309 174.95748901]
[-212.15519714 171.72854614]
[-197.50685120 168.49960327]
[-182.88708496 165.14366150]
[-168.29699707 161.66098022]
[-180.37052917 152.75985718]
[-182.77259827 137.95344543]
[-174.13232422 125.69188690]
[-159.38079834 122.97299194]
[-146.93685913 131.34844971]
[-143.90238953 146.03831482]
[-152.00985718 158.65937805]
[-137.13676453 156.71224976]
[-122.28114319 154.63610840]
[-107.44409180 152.43113708]
[-92.62673187 150.09747314]
[-77.83019257 147.63531494]
[-63.03364182 145.17315674]
[-48.25902176 142.58267212]
[-33.50743866 139.86407471]
[-18.75585556 137.14547729]
[-4.00427151 134.42687988]
[3.28206539 127.85653687]
[14.29188919 128.86595154]
[28.06130981 122.91590881]
[41.83072662 116.96585846]
[55.60014725 111.01580811]
[69.36956787 105.06575775]
[70.60081482 90.02135468]
[78.78166199 77.33576965]
[91.97824860 70.00772095]
[91.71790314 55.00997925]
[91.45756531 40.01224136]
[91.19722748 25.01449966]
[90.93688965 10.01675892]
[90.67654419 -4.98098183]
[84.35621643 -20.71278763]
[97.72357178 -31.14111710]
[111.44480896 -21.18300819]
[105.67428589 -5.24132204]
[105.93462372 9.75641918]
[106.19496918 24.75415993]
[106.45530701 39.75189972]
[106.71564484 54.74964142]
[106.97599030 69.74738312]
[119.86442566 76.14020538]
[128.48727417 87.65656281]
[143.28382874 85.19440460]
[158.08036804 82.73223877]
[172.87690735 80.27008057]
[187.67346191 77.80792236]
[202.47000122 75.34575653]
[214.81295776 65.44818878]
[228.63763428 70.99143982]
[243.43418884 68.52927399]
[252.62803650 55.95505524]
[267.66891479 53.66885757]
[279.59985352 62.51127243]
[294.39639282 60.04911041]
[309.19293213 57.58695221]
[323.98947144 55.12479019]
[338.78601074 52.66263199]
[353.58258057 50.20046997]
[368.37911987 47.73830795]
[383.17565918 45.27614975]
[395.51861572 35.37857819]
[409.34329224 40.92182541]
[424.13983154 38.45966721]
[438.93640137 35.99750519]
[446.91339111 31.49080658]
[454.01092529 33.62334061]
[468.84796143 31.41836166]
[483.68502808 29.21337891]
[498.52206421 27.00839806]
[513.35913086 24.80341721]
[528.19616699 22.59843636]
[543.03320312 20.39345551]
[555.53222656 9.77708817]
[570.88262939 15.54740906]
[573.29327393 31.76840782]
[560.28430176 41.75331116]
[545.23822021 35.23050690]
[530.40118408 37.43548584]
[515.56408691 39.64046860]
[500.72705078 41.84544754]
[485.89001465 44.05043030]
[471.05294800 46.25540924]
[456.21591187 48.46039200]
[441.39855957 50.79405212]
[426.60202026 53.25621033]
[411.80545044 55.71837234]
[400.52084351 65.43983459]
[385.63781738 60.07269287]
[370.84127808 62.53485489]
[356.04473877 64.99701691]
[341.24819946 67.45917511]
[326.45162964 69.92133331]
[311.65509033 72.38349915]
[296.85855103 74.84565735]
[282.06201172 77.30781555]
[273.63748169 89.53740692]
[258.66674805 92.24517059]
[245.89634705 83.32582092]
[231.09980774 85.78797913]
[219.81518555 95.50944519]
[204.93215942 90.14230347]
[190.13562012 92.60446167]
[175.33908081 95.06662750]
[160.54252625 97.52878571]
[145.74598694 99.99094391]
[130.94943237 102.45310974]
[126.28414917 116.52358246]
[115.62670135 126.82706451]
[101.40673065 131.01461792]
[86.86605835 128.13156128]
[75.31961823 118.83518219]
[61.55019760 124.78523254]
[47.78077698 130.73527527]
[34.01136017 136.68533325]
[20.24193954 142.63537598]
[34.99195862 145.36244202]
[47.67404175 153.37274170]
[56.47387695 165.52029419]
[60.13254166 180.06724548]
[58.12663269 194.93252563]
[50.74311066 207.98945618]
[39.03827667 217.37011719]
[24.68663216 221.73249817]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 74]
[7 73]
[8 72]
[9 71]
[11 70]
[12 69]
[13 68]
[15 67]
[16 66]
[18 65]
[19 64]
[20 57]
[21 56]
[23 55]
[24 54]
[25 53]
[26 52]
[27 51]
[28 50]
[29 49]
[31 48]
[32 47]
[76 172]
[77 171]
[78 170]
[79 169]
[80 168]
[83 97]
[84 96]
[85 95]
[86 94]
[87 93]
[88 92]
[99 163]
[100 162]
[101 161]
[102 160]
[103 159]
[104 158]
[106 156]
[107 155]
[110 152]
[111 151]
[112 150]
[113 149]
[114 148]
[115 147]
[116 146]
[117 145]
[119 143]
[120 142]
[121 141]
[123 140]
[124 139]
[125 138]
[126 137]
[127 136]
[128 135]
[129 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
