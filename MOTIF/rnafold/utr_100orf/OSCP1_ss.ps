%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:05:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCCCGUCACGGCGUUGCCCCAGCAACCGGACUAUUGGGACGCUGCGGCCUGGCCUUCAGGCCACUGGCUACCGAACCCCGGGGCUCUUCACCAGUCCAGCUCGUUUCCAGCACCAUGUCGGUGCGGACGCUACCGCUGCUCUUCUUGAACUUGGGCGGGGAGAUGCUUUACAUCCUCGACCAACGGCUGCGGGCCCAGAACAUCCCGGGAGACA\
) } def
/len { sequence length } bind def

/coor [
[-33.66919327 506.01928711]
[-23.74826813 493.41156006]
[-24.18252945 478.41784668]
[-24.61678886 463.42413330]
[-25.05105019 448.43041992]
[-25.48531151 433.43670654]
[-25.91957283 418.44299316]
[-33.09168243 416.24963379]
[-37.47840881 430.59384155]
[-37.21801758 445.59158325]
[-51.40130997 450.47363281]
[-60.42712402 438.49301147]
[-51.82262802 426.20712280]
[-47.43590164 411.86291504]
[-54.60800934 409.66952515]
[-63.35436630 421.85565186]
[-72.10072327 434.04174805]
[-80.84707642 446.22787476]
[-89.59343719 458.41397095]
[-90.67382050 474.77749634]
[-105.50278473 481.77990723]
[-118.82557678 472.21771240]
[-116.93683624 455.92770386]
[-101.77954102 449.66760254]
[-93.03318787 437.48150635]
[-84.28683472 425.29541016]
[-75.54047394 413.10928345]
[-66.79412079 400.92318726]
[-42.03108215 390.70080566]
[-23.35253525 398.85311890]
[-19.06975174 384.47750854]
[-14.78697109 370.10189819]
[-25.17289543 357.38665771]
[-25.93938828 340.82031250]
[-16.58634186 326.92456055]
[-0.63651037 321.28793335]
[3.43770885 306.85183716]
[7.51192808 292.41574097]
[11.58614731 277.97964478]
[15.66036701 263.54357910]
[9.88982296 255.11732483]
[9.70358276 244.68670654]
[15.40433216 235.68879700]
[25.31521606 231.22116089]
[29.80566216 216.90907288]
[34.29610825 202.59698486]
[38.78655624 188.28489685]
[43.27700424 173.97280884]
[47.76744843 159.66072083]
[52.25789642 145.34863281]
[56.74834442 131.03654480]
[48.63042831 118.42307281]
[33.74385834 116.58186340]
[18.85729027 114.74065399]
[3.97072196 112.89944458]
[-10.91584682 111.05822754]
[-25.79780579 117.94730377]
[-39.04725647 108.28376770]
[-37.03430557 92.00862885]
[-21.82969856 85.86436462]
[-9.07463551 96.17166138]
[5.81193352 98.01287079]
[20.69850159 99.85408020]
[35.58507156 101.69529724]
[50.47164154 103.53650665]
[53.37934113 96.62309265]
[59.19474411 82.79627228]
[62.10244751 75.88285828]
[50.37497330 66.53050995]
[38.64750290 57.17816162]
[26.92003059 47.82581711]
[18.26368904 44.92382812]
[15.09176636 38.25220108]
[3.50091553 28.73105621]
[-8.08993530 19.20991325]
[-24.13247681 19.33787346]
[-34.12254333 6.78486013]
[-30.39661026 -8.81952953]
[-15.81289291 -15.50494289]
[-1.55877280 -8.14290333]
[1.43120921 7.61906195]
[13.02205944 17.14020538]
[24.61290932 26.66135025]
[36.27237701 36.09834290]
[47.99984741 45.45069122]
[59.72732162 54.80303574]
[71.45479584 64.15538788]
[88.91947174 64.40219116]
[101.98138428 71.32554626]
[106.88429260 57.14945984]
[111.78720093 42.97337341]
[116.69010925 28.79728508]
[108.75634003 13.20402718]
[114.44492340 -2.98320460]
[129.77375793 -9.90662861]
[134.47091675 -24.15221024]
[127.61058807 -38.13697052]
[132.57711792 -52.51710510]
[145.95172119 -58.97120285]
[150.64889526 -73.21678162]
[155.34606934 -87.46236420]
[160.04324341 -101.70794678]
[150.87744141 -118.29211426]
[156.64982605 -136.00419617]
[173.24798584 -143.73307800]
[177.53076172 -158.10867310]
[174.05575562 -173.54353333]
[185.10484314 -183.53186035]
[189.38763428 -197.90745544]
[193.67041016 -212.28305054]
[193.12129211 -221.39634705]
[198.12065125 -226.83493042]
[202.61109924 -241.14701843]
[207.10154724 -255.45910645]
[211.59199524 -269.77120972]
[216.08244324 -284.08328247]
[209.95892334 -298.91171265]
[217.86001587 -312.87423706]
[233.72468567 -315.26000977]
[245.38290405 -304.23889160]
[243.89149475 -288.26528931]
[230.39453125 -279.59283447]
[225.90408325 -265.28076172]
[221.41363525 -250.96865845]
[216.92318726 -236.65657043]
[212.43273926 -222.34448242]
[208.04600525 -208.00027466]
[203.76322937 -193.62466431]
[199.48045349 -179.24906921]
[203.26179504 -164.84245300]
[191.90635681 -153.82588196]
[187.62358093 -139.45028687]
[195.09484863 -130.83479309]
[197.50637817 -119.56632233]
[194.14640808 -108.41818237]
[185.73841858 -100.19134521]
[174.28881836 -97.01077271]
[169.59164429 -82.76519775]
[164.89448547 -68.51961517]
[160.19731140 -54.27403259]
[167.11006165 -41.13061523]
[162.54939270 -26.61665726]
[148.71650696 -19.45503998]
[144.01933289 -5.20945835]
[151.37101746 5.36952639]
[151.28739929 18.44645500]
[143.57501221 29.24732399]
[130.86619568 33.70019531]
[125.96328735 47.87628174]
[121.06037903 62.05237198]
[116.15747070 76.22846222]
[124.82237244 85.50862885]
[128.64382935 97.61642456]
[143.39888000 100.31614685]
[158.15393066 103.01586151]
[172.90898132 105.71557617]
[187.87635803 100.58840179]
[199.00323486 110.49002075]
[213.75828552 113.18973541]
[228.51333618 115.88945770]
[243.26838684 118.58917236]
[258.02343750 121.28888702]
[272.77847290 123.98860931]
[282.16403198 111.89852142]
[296.09783936 105.56551361]
[311.37808228 106.44486237]
[324.49340820 114.33451080]
[332.43005371 127.42145538]
[333.36422729 142.69842529]
[327.08123779 156.65489197]
[315.02490234 166.08374023]
[299.96566772 168.81831360]
[285.36401367 164.23020935]
[274.57534790 153.37374878]
[270.07876587 138.74365234]
[255.32371521 136.04394531]
[240.56866455 133.34422302]
[225.81361389 130.64450073]
[211.05856323 127.94478607]
[196.30351257 125.24507141]
[182.39151001 130.56535339]
[170.20925903 120.47062683]
[155.45420837 117.77091217]
[140.69915771 115.07119751]
[125.94410706 112.37147522]
[108.17743683 136.37460327]
[71.06043243 135.52699280]
[66.56998444 149.83908081]
[62.07954025 164.15116882]
[57.58909225 178.46325684]
[53.09864426 192.77534485]
[48.60820007 207.08743286]
[44.11775208 221.39952087]
[39.62730408 235.71160889]
[44.89799500 255.17182922]
[30.09645844 267.61779785]
[26.02223969 282.05386353]
[21.94801903 296.48995972]
[17.87380028 310.92605591]
[13.79958153 325.36215210]
[23.11152840 335.52130127]
[26.16460800 348.84902954]
[22.26583099 361.84133911]
[12.53563976 371.13653564]
[-0.41137409 374.38470459]
[-4.69415617 388.76028442]
[-8.97693825 403.13589478]
[-10.92585945 418.00872803]
[-10.49159813 433.00244141]
[-10.05733776 447.99615479]
[-9.62307644 462.98986816]
[-9.18881607 477.98358154]
[-8.75455475 492.97729492]
[1.87943912 504.98968506]
[-1.02387106 520.76788330]
[-15.23731422 528.20812988]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 213]
[3 212]
[4 211]
[5 210]
[6 209]
[7 208]
[15 28]
[16 27]
[17 26]
[18 25]
[19 24]
[30 207]
[31 206]
[32 205]
[36 200]
[37 199]
[38 198]
[39 197]
[40 196]
[44 194]
[45 193]
[46 192]
[47 191]
[48 190]
[49 189]
[50 188]
[51 187]
[52 65]
[53 64]
[54 63]
[55 62]
[56 61]
[68 87]
[69 86]
[70 85]
[71 84]
[73 83]
[74 82]
[75 81]
[89 151]
[90 150]
[91 149]
[92 148]
[95 144]
[96 143]
[99 140]
[100 139]
[101 138]
[102 137]
[105 132]
[106 131]
[108 129]
[109 128]
[110 127]
[112 126]
[113 125]
[114 124]
[115 123]
[116 122]
[153 185]
[154 184]
[155 183]
[156 182]
[158 180]
[159 179]
[160 178]
[161 177]
[162 176]
[163 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
