%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:37:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCCCGGAAGUGGUCCCUGUAGAACCACUGUGGCACCGCUACUCCGUGCCGCGCCCGUCGAGCAUUGCGUUGCUGCAUUGCGCCCCACCGACUCCACUAUGUUGAAGAAAUUCGACAAGAAGGAUGAGGAGUCAGGUGGAGGCUCCAACCCAUUCCAGCACCUUGAGAAGAGUGCGGUACUCCAGGAGGCCCGUGUAU\
) } def
/len { sequence length } bind def

/coor [
[94.76702881 251.96153259]
[106.65721893 241.99142456]
[105.48617554 227.03720093]
[104.31513214 212.08297729]
[103.14408875 197.12876892]
[101.97304535 182.17454529]
[88.84386444 166.25558472]
[98.35603333 147.05899048]
[96.48533630 132.17610168]
[94.61463928 117.29320526]
[80.14103699 113.35433197]
[70.98638153 125.23677063]
[61.83172607 137.11920166]
[52.67707443 149.00164795]
[43.52241898 160.88407898]
[34.46090317 172.83769226]
[25.49308205 184.86177063]
[28.01777840 200.46308899]
[18.70357704 213.23106384]
[3.07642889 215.59068298]
[-9.59235764 206.14201355]
[-11.78661633 190.49078369]
[-2.20453119 177.92260742]
[13.46901608 175.89393616]
[22.43683815 163.86987305]
[23.91697502 156.62272644]
[31.63998222 151.72943115]
[40.79463577 139.84698486]
[49.94929123 127.96455383]
[59.10394287 116.08211517]
[68.25859833 104.19967651]
[59.19708252 92.24606323]
[45.28347778 97.85066986]
[31.36987305 103.45526886]
[17.45626640 109.05987549]
[3.54266191 114.66448212]
[-8.89014435 126.19104004]
[-23.40798950 117.43498993]
[-19.01306152 101.06058502]
[-2.06194234 100.75087738]
[11.85166264 95.14627075]
[25.76526833 89.54166412]
[39.67887497 83.93706512]
[53.59247971 78.33245850]
[68.36974335 75.60070038]
[81.66767883 77.94617462]
[92.06484222 84.50444794]
[98.46286011 94.05551147]
[105.03140259 80.57017517]
[111.59994507 67.08484650]
[118.16848755 53.59951019]
[124.73703003 40.11417389]
[131.30557251 26.62883949]
[137.87411499 13.14350510]
[144.44265747 -0.34182966]
[151.01119995 -13.82716465]
[142.01710510 -29.56316566]
[144.24368286 -47.39250946]
[156.61323547 -60.20713806]
[174.04244995 -63.01233673]
[180.18630981 -76.69638062]
[186.33016968 -90.38042450]
[192.47401428 -104.06446838]
[198.61787415 -117.74851227]
[194.16712952 -127.68437195]
[195.88848877 -138.21206665]
[202.97427368 -145.88986206]
[212.90390015 -148.34295654]
[219.47244263 -161.82829285]
[226.04098511 -175.31361389]
[216.66654968 -187.30867004]
[213.44285583 -202.12402344]
[216.95700073 -216.80976868]
[226.45985413 -228.46553040]
[240.02508545 -234.81329346]
[254.93937683 -234.64253235]
[261.50793457 -248.12786865]
[256.58871460 -262.90756226]
[263.44223022 -276.49002075]
[277.56271362 -281.08868408]
[284.13125610 -294.57400513]
[290.69979858 -308.05935669]
[288.97668457 -326.38894653]
[303.88464355 -335.64093018]
[310.24163818 -349.22726440]
[316.59860229 -362.81362915]
[322.84921265 -376.44924927]
[328.99307251 -390.13327026]
[335.13693237 -403.81732178]
[341.28079224 -417.50137329]
[347.42462158 -431.18542480]
[353.46136475 -444.91705322]
[359.39059448 -458.69543457]
[365.31982422 -472.47384644]
[371.24905396 -486.25222778]
[377.17831421 -500.03063965]
[383.10754395 -513.80902100]
[378.84695435 -535.80474854]
[396.65872192 -548.09545898]
[401.71551514 -562.21734619]
[397.21340942 -581.86120605]
[412.47399902 -593.72802734]
[417.08694458 -608.00109863]
[421.69989014 -622.27416992]
[426.31283569 -636.54724121]
[430.92581177 -650.82031250]
[435.53875732 -665.09338379]
[440.15170288 -679.36645508]
[436.18984985 -695.27984619]
[448.17660522 -706.47137451]
[463.78100586 -701.42810059]
[466.95062256 -685.33819580]
[454.42477417 -674.75354004]
[449.81182861 -660.48046875]
[445.19888306 -646.20739746]
[440.58593750 -631.93426514]
[435.97296143 -617.66119385]
[431.36001587 -603.38812256]
[426.74707031 -589.11505127]
[432.20382690 -580.46411133]
[431.98922729 -570.01849365]
[425.93261719 -561.23712158]
[415.83746338 -557.16058350]
[410.78067017 -543.03863525]
[415.59826660 -536.78295898]
[417.56985474 -529.04028320]
[416.30139160 -521.05670166]
[411.92660522 -514.14752197]
[405.09704590 -509.48074341]
[396.88592529 -507.87979126]
[390.95669556 -494.10140991]
[385.02746582 -480.32299805]
[379.09823608 -466.54461670]
[373.16900635 -452.76620483]
[367.23974609 -438.98782349]
[367.48367310 -431.59509277]
[361.10867310 -425.04156494]
[354.96481323 -411.35751343]
[348.82095337 -397.67346191]
[342.67712402 -383.98944092]
[336.53326416 -370.30538940]
[336.66159058 -362.90972900]
[330.18496704 -356.45666504]
[323.82797241 -342.87030029]
[317.47100830 -329.28396606]
[321.29754639 -317.80322266]
[316.10607910 -306.42950439]
[304.18515015 -301.49081421]
[297.61660767 -288.00546265]
[291.04806519 -274.52014160]
[296.13226318 -260.56710815]
[289.66293335 -246.79750061]
[274.99325562 -241.55932617]
[268.42471313 -228.07398987]
[277.75357056 -216.43621826]
[281.11825562 -201.84208679]
[277.79922485 -187.17427063]
[268.40252686 -175.35385132]
[254.75003052 -168.75866699]
[239.52632141 -168.74507141]
[232.95777893 -155.25975037]
[226.38923645 -141.77441406]
[229.16325378 -122.64299011]
[212.30192566 -111.60465240]
[206.15806580 -97.92060852]
[200.01420593 -84.23656464]
[193.87036133 -70.55252838]
[187.72650146 -56.86848068]
[195.26298523 -47.33971786]
[198.04635620 -35.43977356]
[195.48794556 -23.41561127]
[188.01377869 -13.56455231]
[176.99496460 -7.79538012]
[164.49653625 -7.25862217]
[157.92799377 6.22671270]
[151.35945129 19.71204758]
[144.79090881 33.19738388]
[138.22236633 46.68271637]
[131.65382385 60.16805267]
[125.08528137 73.65338898]
[118.51673889 87.13871765]
[111.94819641 100.62405396]
[109.49753571 115.42250824]
[111.36823273 130.30540466]
[113.23892212 145.18829346]
[121.40161133 149.93690491]
[126.38614655 157.79518127]
[127.17916870 166.92897034]
[123.72863770 175.27424622]
[116.92726135 181.00350952]
[118.09830475 195.95771790]
[119.26934814 210.91194153]
[120.44039154 225.86616516]
[121.61143494 240.82037354]
[134.90866089 248.81809998]
[140.93438721 263.11740112]
[137.37159729 278.21994019]
[125.59027100 288.31845093]
[110.12055206 289.52984619]
[96.91087341 281.38833618]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 194]
[3 193]
[4 192]
[5 191]
[6 190]
[8 185]
[9 184]
[10 183]
[11 31]
[12 30]
[13 29]
[14 28]
[15 27]
[16 25]
[17 24]
[32 44]
[33 43]
[34 42]
[35 41]
[36 40]
[48 182]
[49 181]
[50 180]
[51 179]
[52 178]
[53 177]
[54 176]
[55 175]
[56 174]
[60 168]
[61 167]
[62 166]
[63 165]
[64 164]
[68 162]
[69 161]
[70 160]
[76 154]
[77 153]
[80 150]
[81 149]
[82 148]
[84 145]
[85 144]
[86 143]
[87 141]
[88 140]
[89 139]
[90 138]
[91 137]
[92 135]
[93 134]
[94 133]
[95 132]
[96 131]
[97 130]
[99 124]
[100 123]
[102 119]
[103 118]
[104 117]
[105 116]
[106 115]
[107 114]
[108 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
