%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:05:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCAUGGUGGAGAUCAGCAGCAGCUUCCCCACCCAGGACAAGGCCUAGAUGAGGAAACUGAGACCCAAAAAGAGACAGCAACUGGCCCAGGGUCACCAGCAUGCAGAUGCCUGCUAUGAUGUCUCUGCUUCUUGUGUCUGUGGGCCUCAUGGAAGCACUUCAGGCCCAGAGCCACCCCAUCACACGACGAGACCUCUUCU\
) } def
/len { sequence length } bind def

/coor [
[-9.49972820 204.76718140]
[-19.51354980 215.93513489]
[-29.52737236 227.10310364]
[-39.54119492 238.27105713]
[-36.43059540 260.53424072]
[-50.61677933 277.61523438]
[-72.52194214 278.61953735]
[-81.45157623 290.67199707]
[-90.38121033 302.72445679]
[-99.31084442 314.77691650]
[-108.24047852 326.82937622]
[-110.23894501 342.52383423]
[-124.03250122 348.14407349]
[-132.96212769 360.19653320]
[-134.09457397 366.72216797]
[-137.79985046 371.04324341]
[-142.36166382 372.47918701]
[-151.66180420 384.24807739]
[-160.96194458 396.01699829]
[-162.79734802 412.31311035]
[-177.93406677 418.62277222]
[-190.80073547 408.45513916]
[-188.16123962 392.26980591]
[-172.73086548 386.71685791]
[-163.43072510 374.94793701]
[-154.13056946 363.17901611]
[-145.01458740 351.26690674]
[-136.08494568 339.21444702]
[-134.72518921 324.38204956]
[-120.29293060 317.89971924]
[-111.36329651 305.84725952]
[-102.43366241 293.79483032]
[-93.50402832 281.74237061]
[-84.57439423 269.68991089]
[-88.53560638 262.71240234]
[-90.28058624 254.84634399]
[-89.63613129 246.78100586]
[-86.63928986 239.22909546]
[-81.53588867 232.86376953]
[-74.76041412 228.25866699]
[-66.89911652 225.83619690]
[-58.63928223 225.82890320]
[-50.70915604 228.25723267]
[-40.69533539 217.08927917]
[-30.68151093 205.92131042]
[-20.66769028 194.75335693]
[-17.93177223 180.11218262]
[-2.95828223 175.00285339]
[7.05554008 163.83489990]
[17.06936264 152.66693115]
[19.80527878 138.02575684]
[34.77877045 132.91642761]
[44.79259109 121.74847412]
[54.80641174 110.58051300]
[64.82023621 99.41255188]
[54.39923859 110.20156097]
[40.98042679 116.90495300]
[26.09528351 118.75766754]
[11.44265079 115.54824829]
[-1.30516791 107.64299011]
[-10.69326687 95.94411469]
[-15.65018272 81.78681946]
[-15.61018467 66.78687286]
[-10.57783604 52.65621948]
[-1.12747979 41.00757980]
[11.66231728 33.17042160]
[26.33185768 30.03919220]
[41.20690918 31.97126007]
[54.58977890 38.74612045]
[64.95308685 49.59055710]
[71.11407471 63.26689529]
[72.36936188 78.21678162]
[71.66975403 63.23310471]
[70.97014618 48.24942780]
[70.27054596 33.26575089]
[69.57093811 18.28207397]
[68.87133026 3.29839826]
[68.17172241 -11.68527794]
[59.79920197 -25.10956192]
[66.93447876 -38.18385315]
[66.23487091 -53.16753006]
[52.79734039 -57.02445602]
[42.69320297 -70.24507141]
[42.12545395 -89.57363129]
[37.09270477 -103.70413971]
[32.05995560 -117.83465576]
[27.02720261 -131.96516418]
[21.99445343 -146.09568787]
[10.98430061 -158.98803711]
[20.32490730 -173.13687134]
[36.50653458 -168.07809448]
[36.12496567 -151.12843323]
[41.15771866 -136.99792480]
[46.19046783 -122.86740875]
[51.22321701 -108.73689270]
[56.25597000 -94.60637665]
[63.73760986 -95.13084412]
[78.70088959 -96.17977905]
[86.18252563 -96.70424652]
[89.19463348 -111.39870453]
[92.20674133 -126.09317017]
[95.21884918 -140.78762817]
[90.41032410 -155.86041260]
[100.54574585 -166.77473450]
[103.55785370 -181.46919250]
[97.86661530 -196.84910583]
[108.54718018 -209.29328918]
[124.61228943 -206.00022888]
[129.53553772 -190.35754395]
[118.25231171 -178.45709229]
[115.24020386 -163.76261902]
[120.26417542 -149.74089050]
[109.91330719 -137.77552795]
[106.90119934 -123.08106232]
[103.88909912 -108.38659668]
[100.87699127 -93.69213867]
[99.75936127 -65.64692688]
[81.21854401 -53.86713409]
[81.91815186 -38.88346100]
[90.24063873 -26.53090858]
[83.15540314 -12.38488388]
[83.85501099 2.59879231]
[84.55461121 17.58246803]
[85.25421906 32.56614304]
[85.95382690 47.54981995]
[86.65343475 62.53349686]
[87.35303497 77.51717377]
[110.27376556 79.84041595]
[119.32700348 97.75259399]
[133.74307251 101.89712524]
[148.15913391 106.04164886]
[163.55990601 102.41856384]
[173.65388489 113.37122345]
[188.06996155 117.51575470]
[202.48602295 121.66027832]
[216.90208435 125.80480194]
[231.31814575 129.94932556]
[245.73420715 134.09385681]
[260.42868042 137.10595703]
[275.31271362 138.96743774]
[289.96640015 133.00253296]
[301.63510132 142.25946045]
[316.51916504 144.12094116]
[331.40319824 145.98243713]
[346.28726196 147.84391785]
[361.17129517 149.70539856]
[376.05535889 151.56687927]
[390.93939209 153.42835999]
[405.43246460 141.23606873]
[423.91894531 143.46334839]
[434.72427368 158.23388672]
[449.65902710 159.63157654]
[464.32952881 152.30296326]
[477.86050415 161.56820679]
[476.33245850 177.89601135]
[461.31729126 184.48973083]
[448.26135254 174.56631470]
[433.32659912 173.16862488]
[426.32330322 182.18600464]
[415.72573853 186.74710083]
[404.12390137 185.61117554]
[394.41452026 178.94549561]
[389.07791138 168.31240845]
[374.19387817 166.45092773]
[359.30981445 164.58944702]
[344.42578125 162.72796631]
[329.54171753 160.86647034]
[314.65768433 159.00498962]
[299.77362061 157.14350891]
[286.18453979 163.24156189]
[273.45123291 153.85148621]
[258.56719971 151.99000549]
[269.43768311 162.32598877]
[273.78268433 176.68290710]
[270.46762085 191.31199646]
[260.35815430 202.39343262]
[246.09393311 207.03372192]
[231.39955139 204.02122498]
[220.11187744 194.14253235]
[215.17826843 179.97711182]
[217.88694763 165.22369385]
[227.53063965 153.73460388]
[241.58969116 148.50991821]
[227.17361450 144.36540222]
[212.75755310 140.22087097]
[198.34149170 136.07633972]
[183.92543030 131.93182373]
[169.50936890 127.78729248]
[155.13972473 131.70681763]
[144.01460266 120.45771027]
[129.59854126 116.31318665]
[115.18247986 112.16866302]
[96.60124207 122.36979675]
[75.98819733 109.42636871]
[65.97437286 120.59433746]
[55.96055222 131.76229858]
[45.94673157 142.93025208]
[42.49455643 158.37023926]
[28.23732376 162.68075562]
[18.22350121 173.84872437]
[8.20967960 185.01667786]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 46]
[2 45]
[3 44]
[4 43]
[7 34]
[8 33]
[9 32]
[10 31]
[11 30]
[13 28]
[14 27]
[17 26]
[18 25]
[19 24]
[48 201]
[49 200]
[50 199]
[52 197]
[53 196]
[54 195]
[55 194]
[72 127]
[73 126]
[74 125]
[75 124]
[76 123]
[77 122]
[78 121]
[80 119]
[81 118]
[84 96]
[85 95]
[86 94]
[87 93]
[88 92]
[99 116]
[100 115]
[101 114]
[102 113]
[104 111]
[105 110]
[129 192]
[130 191]
[131 190]
[133 188]
[134 187]
[135 186]
[136 185]
[137 184]
[138 183]
[139 172]
[140 171]
[142 169]
[143 168]
[144 167]
[145 166]
[146 165]
[147 164]
[148 163]
[151 158]
[152 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
