%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:42:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGGCCCCCUCGGCUGGGCUUGGCUGGGCUCGGCUCUCCUCUCCCACUGUUACCAGGACGACUGUCUCCCCACAGCCUGGCUGUCUAGACUGGCGGGCGCCAUGAGCUCCACGGAUGAAGUGUCCGUUUGCAGGGCUGGUUUAGGCCCAGAGGGUGGCGAGCAGGCCGGCGCCCACACCGCCAGCCCGGGAGCCCCACGGG\
) } def
/len { sequence length } bind def

/coor [
[84.24604034 777.51867676]
[94.14176178 764.89117432]
[93.67756653 749.89837646]
[93.21336365 734.90551758]
[92.74916077 719.91271973]
[82.93405914 714.08172607]
[77.09464264 704.13232422]
[76.78292084 692.48016357]
[82.19212341 682.01971436]
[92.07997894 675.40545654]
[92.07997894 660.40545654]
[92.07997894 645.40545654]
[89.39170074 641.45098877]
[89.16339111 635.76446533]
[92.31929016 629.94305420]
[92.78349304 614.95025635]
[93.24769592 599.95739746]
[93.71189117 584.96459961]
[94.17609406 569.97180176]
[94.64029694 554.97900391]
[95.10449982 539.98614502]
[92.16744995 533.19891357]
[95.69367218 524.76544189]
[96.38983917 509.78158569]
[97.08599854 494.79776001]
[97.31812286 479.79956055]
[97.08599854 464.80136108]
[96.85386658 449.80313110]
[96.62174225 434.80493164]
[96.38961792 419.80673218]
[96.04144287 404.81079102]
[95.57723999 389.81796265]
[95.11303711 374.82513428]
[94.64883423 359.83233643]
[94.18463898 344.83950806]
[90.83332825 338.24694824]
[93.83106995 329.61148071]
[93.59894562 314.61328125]
[85.66561127 302.00726318]
[93.18843079 288.08901978]
[92.95629883 273.09082031]
[92.72417450 258.09259033]
[84.25845337 249.44648743]
[83.94604492 236.94894409]
[92.50000000 227.28970337]
[92.50000000 212.28970337]
[92.50000000 197.28970337]
[92.50000000 182.28970337]
[92.50000000 167.28970337]
[84.76270294 154.56243896]
[92.50000000 140.76226807]
[92.50000000 125.76226044]
[76.79768372 113.47577667]
[73.90663147 93.74858093]
[60.87773132 86.31569672]
[47.84883499 78.88280487]
[34.81993866 71.44991302]
[21.79104042 64.01702881]
[17.43807983 64.19576263]
[13.63879108 63.08792877]
[10.73038864 61.02662659]
[8.90683174 58.42037582]
[8.20662689 55.69971848]
[-4.33748865 47.47504807]
[-16.88160515 39.25038147]
[-29.42572021 31.02571297]
[-44.84592819 34.48876953]
[-58.15353012 25.96332169]
[-61.45336151 10.50736237]
[-52.78769302 -2.70935917]
[-37.29771042 -5.84559774]
[-24.17334557 2.95932198]
[-21.20105171 18.48159599]
[-8.65693665 26.70626450]
[3.88717914 34.93093109]
[16.43129539 43.15560150]
[29.22392845 50.98813248]
[42.25282669 58.42102051]
[55.28172302 65.85390472]
[68.31062317 73.28679657]
[81.33951569 80.71968079]
[88.02324677 75.98955536]
[95.82233429 73.49544525]
[104.01047516 73.46963501]
[110.30881500 59.85600281]
[116.60714722 46.24237442]
[122.90548706 32.62874222]
[129.20382690 19.01511002]
[135.50216675 5.40147924]
[141.80049133 -8.21215153]
[148.09883118 -21.82578278]
[154.39717102 -35.43941498]
[160.69551086 -49.05304718]
[166.99383545 -62.66667557]
[173.29217529 -76.28031158]
[176.85589600 -90.85082245]
[177.55206299 -105.83465576]
[178.24822998 -120.81849670]
[178.94438171 -135.80233765]
[167.32287598 -146.26533508]
[165.19699097 -161.75775146]
[173.57048035 -174.96450806]
[188.48966980 -179.64979553]
[202.91015625 -173.60136414]
[210.02302551 -159.67509460]
[206.46981812 -144.44653320]
[193.92822266 -135.10617065]
[193.23205566 -120.12233734]
[192.53590393 -105.13849640]
[191.83973694 -90.15466309]
[206.12759399 -85.58549500]
[220.41416931 -81.01671600]
[228.54151917 -93.62409973]
[236.66888428 -106.23147583]
[244.79623413 -118.83885956]
[252.92359924 -131.44624329]
[261.05096436 -144.05361938]
[259.08187866 -159.97537231]
[270.40487671 -171.34066772]
[286.33386230 -169.43101501]
[294.64950562 -155.71134949]
[288.97277832 -140.70620728]
[273.65832520 -135.92626953]
[265.53097534 -123.31888580]
[257.40362549 -110.71150208]
[249.27626038 -98.10411835]
[241.14891052 -85.49674225]
[233.02154541 -72.88935852]
[238.74220276 -59.02306366]
[236.48091125 -44.19449234]
[226.88729858 -32.66355515]
[212.71737671 -27.74283600]
[198.04187012 -30.84594345]
[187.07670593 -41.08142471]
[182.97192383 -55.50886154]
[186.90580750 -69.98197174]
[180.60746765 -56.36833954]
[174.30914307 -42.75471115]
[168.01080322 -29.14107895]
[161.71246338 -15.52744675]
[155.41412354 -1.91381550]
[149.11579895 11.69981575]
[142.81745911 25.31344795]
[136.51911926 38.92707825]
[130.22077942 52.54071045]
[123.92244720 66.15434265]
[117.62410736 79.76797485]
[125.48012543 91.59123230]
[126.20446014 105.76803589]
[119.59438324 118.33041382]
[107.50000000 125.76226044]
[107.50000000 140.76226807]
[115.23729706 154.56243896]
[107.50000000 167.28970337]
[107.50000000 182.28970337]
[107.50000000 197.28970337]
[107.50000000 212.28970337]
[107.50000000 227.28970337]
[117.07549286 243.01492310]
[107.72237396 257.86047363]
[107.95450592 272.85867310]
[108.18663025 287.85687256]
[116.13656616 301.53567505]
[108.59715271 314.38116455]
[108.82927704 329.37936401]
[109.17745209 344.37530518]
[109.64165497 359.36813354]
[110.10585022 374.36093140]
[110.57005310 389.35375977]
[111.03425598 404.34658813]
[114.42955017 412.83361816]
[111.38781738 419.57461548]
[111.61994934 434.57281494]
[111.85207367 449.57101440]
[112.08420563 464.56921387]
[112.31632996 479.56741333]
[114.68544769 483.22357178]
[115.66529083 487.05786133]
[115.37098694 490.61050415]
[114.05549622 493.50659180]
[112.06983185 495.49392700]
[111.37367249 510.47775269]
[110.67751312 525.46160889]
[110.09731293 540.45037842]
[109.63311005 555.44317627]
[109.16891479 570.43597412]
[108.70471191 585.42883301]
[108.24050903 600.42163086]
[107.77630615 615.41442871]
[107.31211090 630.40728760]
[107.07997894 645.40545654]
[107.07997894 660.40545654]
[107.07997894 675.40545654]
[120.97669220 688.27429199]
[121.05937958 706.89489746]
[107.74198151 719.44854736]
[108.20617676 734.44134521]
[108.67037964 749.43414307]
[109.13458252 764.42694092]
[119.79254150 776.41809082]
[116.92074585 792.20202637]
[102.72218323 799.67065430]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 199]
[3 198]
[4 197]
[5 196]
[10 193]
[11 192]
[12 191]
[15 190]
[16 189]
[17 188]
[18 187]
[19 186]
[20 185]
[21 184]
[23 183]
[24 182]
[25 181]
[26 176]
[27 175]
[28 174]
[29 173]
[30 172]
[31 170]
[32 169]
[33 168]
[34 167]
[35 166]
[37 165]
[38 164]
[40 162]
[41 161]
[42 160]
[45 158]
[46 157]
[47 156]
[48 155]
[49 154]
[51 152]
[52 151]
[54 81]
[55 80]
[56 79]
[57 78]
[58 77]
[63 76]
[64 75]
[65 74]
[66 73]
[84 147]
[85 146]
[86 145]
[87 144]
[88 143]
[89 142]
[90 141]
[91 140]
[92 139]
[93 138]
[94 137]
[95 136]
[96 110]
[97 109]
[98 108]
[99 107]
[112 128]
[113 127]
[114 126]
[115 125]
[116 124]
[117 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
