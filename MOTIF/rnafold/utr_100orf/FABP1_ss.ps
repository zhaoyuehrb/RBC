%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:23:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGACCUCUGGCCGCUAUUCGAAGGGAAGGGAGCCCCCUAUAAAACAGCCUACAGUGGACAGUCUGGUCGGCAGAGCCGCAGGUCAGUCGUGAAGAGGGAGCUCUAUUGCCACCAUGAGUUUCUCCGGCAAGUACCAACUGCAGAGCCAGGAAAACUUUGAAGCCUUCAUGAAGGCAAUCGGUCUGCCGGAAGAGCUCAUCCAGAAGGGGAAGG\
) } def
/len { sequence length } bind def

/coor [
[97.40407562 261.41674805]
[97.18489838 246.41835022]
[86.35440826 236.25782776]
[85.91847992 221.05044556]
[96.64920044 209.75932312]
[96.43002319 194.76092529]
[95.99172211 179.76733398]
[95.33438873 164.78173828]
[94.67706299 149.79614258]
[94.01972961 134.81056213]
[93.36239624 119.82496643]
[86.75478363 133.29119873]
[83.39124298 147.90922546]
[73.86684418 159.49740601]
[60.17689896 165.62809753]
[45.18935394 165.01695251]
[32.04400253 157.79200745]
[23.49471092 145.46685791]
[21.33249855 130.62350464]
[26.01033592 116.37156677]
[36.54824829 105.69671631]
[50.73860550 100.83526611]
[65.61156464 102.80677032]
[80.53934479 101.33660889]
[66.73415375 95.47003937]
[51.00712204 97.19372559]
[42.31972122 85.09503174]
[28.51452827 79.22846222]
[12.78749657 80.95214081]
[4.10009527 68.85345459]
[-9.70509720 62.98688126]
[-23.51029015 57.12031174]
[-37.31548309 51.25373840]
[-51.12067413 45.38716888]
[-66.84770966 47.11085129]
[-75.53511047 35.01216125]
[-89.34030151 29.14558983]
[-103.14549255 23.27901840]
[-116.95068359 17.41244698]
[-127.67227173 26.39378357]
[-141.15304565 29.86352921]
[-154.74856567 27.19989586]
[-165.81713867 18.97852516]
[-172.23313904 6.84925938]
[-172.79512024 -6.79468203]
[-186.51312256 -12.86234188]
[-202.26365662 -11.36863995]
[-210.77336121 -23.59297562]
[-224.49134827 -29.66063499]
[-239.07992554 -24.20067024]
[-252.90550232 -30.54955864]
[-258.02084351 -44.49118423]
[-271.73883057 -50.55884552]
[-289.99829102 -48.16619873]
[-299.78497314 -62.73442459]
[-313.59014893 -68.60099030]
[-327.39535522 -74.46756744]
[-341.20053101 -80.33413696]
[-349.39227295 -75.67570496]
[-358.67132568 -75.31230164]
[-366.95321655 -79.19906616]
[-372.43560791 -86.35047913]
[-373.99005127 -95.08679962]
[-387.52490234 -101.55271149]
[-401.05975342 -108.01861572]
[-414.59460449 -114.48452759]
[-430.13897705 -110.51565552]
[-442.84628296 -120.30871582]
[-442.96856689 -136.35130310]
[-430.41201782 -146.33691406]
[-414.80892944 -142.60545349]
[-408.12869263 -128.01937866]
[-394.59384155 -121.55346680]
[-381.05899048 -115.08755493]
[-367.52416992 -108.62164307]
[-347.16363525 -112.00982666]
[-335.33398438 -94.13932800]
[-321.52877808 -88.27275848]
[-307.72360229 -82.40618896]
[-293.91839600 -76.53961945]
[-282.58923340 -80.77404785]
[-271.04098511 -76.00189972]
[-265.67117310 -64.27684021]
[-251.95317078 -58.20918274]
[-238.19677734 -63.80358505]
[-224.19834900 -57.84553146]
[-218.42369080 -43.37863541]
[-204.70568848 -37.31097412]
[-189.93635559 -39.23867798]
[-180.44546509 -26.58034134]
[-166.72746277 -20.51268196]
[-153.91319275 -30.35909843]
[-137.78890991 -32.41058731]
[-122.74444580 -26.01315308]
[-112.92388153 -12.82607841]
[-111.08411407 3.60725498]
[-97.27892303 9.47382545]
[-83.47373199 15.34039688]
[-69.66853333 21.20696831]
[-54.92894745 19.06366920]
[-45.25410461 31.58197594]
[-31.44891167 37.44854736]
[-17.64371872 43.31511688]
[-3.83852673 49.18169022]
[9.96666622 55.04825974]
[24.70625687 52.90496063]
[34.38109970 65.42327118]
[48.18629074 71.28984070]
[62.92588043 69.14653778]
[72.60072327 81.66484833]
[86.40591431 87.53141785]
[94.04806519 82.67219543]
[103.02167511 82.05585480]
[111.14469147 85.77345276]
[116.46995544 92.86934662]
[131.37997437 91.22877502]
[146.28997803 89.58821106]
[161.19999695 87.94763947]
[176.11001587 86.30707550]
[191.02003479 84.66650391]
[205.93003845 83.02593231]
[220.84005737 81.38536835]
[233.71121216 72.18514252]
[247.20835876 78.48403168]
[262.11837769 76.84346008]
[277.02838135 75.20289612]
[291.93841553 73.56232452]
[306.84841919 71.92175293]
[321.75842285 70.28118896]
[329.94342041 66.23305511]
[336.89807129 68.72721863]
[351.83047485 67.30467987]
[360.07373047 63.37657547]
[366.99118042 65.97209167]
[381.94277954 64.76789093]
[396.89437866 63.56369400]
[399.85638428 49.40689850]
[408.30361938 36.91727448]
[421.36038208 28.21156311]
[437.34237671 24.96652985]
[453.97039795 28.11527634]
[468.69515991 37.64432907]
[483.02722168 33.21801376]
[497.35928345 28.79170036]
[511.69131470 24.36538506]
[526.02337646 19.93907166]
[530.06372070 5.05018234]
[541.52752686 -5.27379465]
[556.75677490 -7.73851585]
[570.89178467 -1.55749762]
[579.42218018 11.29691887]
[579.62591553 26.72293663]
[571.43798828 39.79817200]
[557.47119141 46.35035706]
[542.18218994 44.28872299]
[530.44970703 34.27112579]
[516.11761475 38.69743729]
[501.78558350 43.12375259]
[487.45352173 47.55006790]
[473.12149048 51.97637939]
[473.34063721 59.47317886]
[473.77893066 74.46677399]
[473.99807739 81.96356964]
[488.56420898 85.54512024]
[503.13037109 89.12667084]
[517.69653320 92.70822144]
[532.26263428 96.28976440]
[547.85235596 91.20124054]
[559.87158203 102.35788727]
[555.95593262 118.28270721]
[540.13354492 122.59361267]
[528.68109131 110.85591125]
[514.11492920 107.27436066]
[499.54882812 103.69281006]
[484.98266602 100.11125946]
[470.41653442 96.52971649]
[453.90707397 107.83642578]
[434.97500610 110.81526947]
[417.41320801 105.59844971]
[404.43743896 93.89208984]
[398.09857178 78.51528168]
[383.14697266 79.71947479]
[368.19540405 80.92367554]
[353.25299072 82.23707581]
[338.32061768 83.65961456]
[323.39901733 85.19120026]
[308.48898315 86.83177185]
[293.57897949 88.47233582]
[278.66897583 90.11290741]
[263.75894165 91.75347900]
[248.84893799 93.39404297]
[237.04425049 102.47692871]
[222.48062134 96.29537964]
[207.57061768 97.93595123]
[192.66059875 99.57651520]
[177.75057983 101.21708679]
[162.84056091 102.85765839]
[147.93055725 104.49822235]
[133.02053833 106.13879395]
[118.11052704 107.77935791]
[108.34798431 119.16763306]
[109.00531769 134.15322876]
[109.66265106 149.13882446]
[110.31998444 164.12440491]
[110.97731781 179.11000061]
[114.20049286 184.87698364]
[114.05195618 190.55429077]
[111.42842102 194.54174805]
[111.64759827 209.54014587]
[122.70365906 220.51289368]
[122.71227264 235.72653198]
[112.18329620 246.19917297]
[112.40247345 261.19757080]
[114.87446594 280.42098999]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 213]
[2 212]
[5 209]
[6 208]
[7 205]
[8 204]
[9 203]
[10 202]
[11 201]
[24 111]
[25 110]
[27 108]
[28 107]
[30 105]
[31 104]
[32 103]
[33 102]
[34 101]
[36 99]
[37 98]
[38 97]
[39 96]
[45 91]
[46 90]
[48 88]
[49 87]
[52 84]
[53 83]
[55 80]
[56 79]
[57 78]
[58 77]
[63 75]
[64 74]
[65 73]
[66 72]
[115 200]
[116 199]
[117 198]
[118 197]
[119 196]
[120 195]
[121 194]
[122 193]
[124 191]
[125 190]
[126 189]
[127 188]
[128 187]
[129 186]
[131 185]
[132 184]
[134 183]
[135 182]
[136 181]
[142 160]
[143 159]
[144 158]
[145 157]
[146 156]
[163 176]
[164 175]
[165 174]
[166 173]
[167 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
