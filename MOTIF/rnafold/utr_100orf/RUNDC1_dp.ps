%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:16:16 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RUNDC1)
} def

/sequence { (\
GGUGUUUCCGGGAAGAUGGCGGCUGUCGAAGCGGCUGCAGAGCCGGUAACGGUGGUGGCGGCUGUUGGGCCAAAGGCGAAAGACGAAGAGGAGGAGGAAGAGGAGCCGCUGCCAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.009680155 ubox
2 8 0.009695597 ubox
2 50 0.113016308 ubox
2 115 0.003647110 ubox
3 48 0.006117834 ubox
3 49 0.112071567 ubox
3 51 0.754128695 ubox
3 52 0.006519627 ubox
4 47 0.007326391 ubox
4 50 0.990445237 ubox
5 49 0.988758500 ubox
6 48 0.802501710 ubox
6 49 0.041916666 ubox
7 46 0.004922324 ubox
7 48 0.054369744 ubox
8 45 0.003893678 ubox
8 46 0.997715516 ubox
9 45 0.999846178 ubox
10 44 0.997479989 ubox
11 43 0.994786890 ubox
11 44 0.069705579 ubox
12 43 0.097978922 ubox
17 37 0.102444651 ubox
17 39 0.437502469 ubox
18 36 0.150661386 ubox
18 38 0.312421682 ubox
19 35 0.154535369 ubox
19 38 0.937011560 ubox
20 34 0.154487974 ubox
20 37 0.987483641 ubox
21 36 0.987211923 ubox
22 32 0.154495956 ubox
22 35 0.987966766 ubox
23 31 0.154558491 ubox
23 34 0.987966495 ubox
24 30 0.153868545 ubox
24 33 0.987196557 ubox
25 32 0.986803450 ubox
26 31 0.939573887 ubox
27 33 0.004338981 ubox
28 32 0.004524929 ubox
42 53 0.008590871 ubox
43 52 0.010072848 ubox
44 51 0.010381852 ubox
45 50 0.010453623 ubox
51 113 0.037081543 ubox
52 112 0.037170401 ubox
52 115 0.978589571 ubox
53 111 0.037090653 ubox
53 114 0.994056503 ubox
54 110 0.036922573 ubox
54 113 0.999264029 ubox
55 109 0.037062327 ubox
55 112 0.999276704 ubox
55 115 0.005854471 ubox
56 108 0.037047058 ubox
56 111 0.997204838 ubox
56 114 0.005947076 ubox
57 107 0.037060690 ubox
57 110 0.995389023 ubox
57 113 0.005977996 ubox
58 106 0.037061716 ubox
58 109 0.999276406 ubox
58 112 0.005976134 ubox
59 105 0.037050786 ubox
59 108 0.999272589 ubox
59 111 0.005974271 ubox
60 71 0.011876429 ubox
60 107 0.999232117 ubox
60 110 0.005951768 ubox
61 70 0.011890840 ubox
61 106 0.999248997 ubox
61 109 0.005955865 ubox
62 69 0.011893063 ubox
62 100 0.003324156 ubox
62 102 0.036878923 ubox
62 103 0.004409068 ubox
62 105 0.999162890 ubox
62 108 0.005947819 ubox
63 68 0.012100532 ubox
63 78 0.003450818 ubox
63 85 0.168189060 ubox
63 87 0.004828881 ubox
63 89 0.003820922 ubox
63 99 0.004209042 ubox
63 101 0.040692816 ubox
63 102 0.006969475 ubox
63 104 0.981942395 ubox
64 77 0.007478596 ubox
64 84 0.344037770 ubox
65 76 0.007482907 ubox
65 79 0.005393325 ubox
65 80 0.010305369 ubox
65 81 0.030168659 ubox
65 82 0.020082303 ubox
65 83 0.343574945 ubox
65 86 0.005026301 ubox
65 87 0.003433003 ubox
65 95 0.004467946 ubox
65 96 0.007515564 ubox
65 97 0.004951251 ubox
65 98 0.010455161 ubox
65 99 0.043660522 ubox
65 100 0.028765117 ubox
65 101 0.084545735 ubox
65 102 0.908551188 ubox
65 103 0.046363283 ubox
65 104 0.006454217 ubox
66 72 0.004424951 ubox
66 75 0.007434785 ubox
66 78 0.008850672 ubox
66 79 0.022253142 ubox
66 80 0.064233340 ubox
66 81 0.038018315 ubox
66 82 0.341226003 ubox
66 85 0.008819466 ubox
66 86 0.005346828 ubox
66 87 0.004462069 ubox
66 88 0.004999146 ubox
66 89 0.004809178 ubox
66 90 0.004304338 ubox
66 91 0.005252930 ubox
66 92 0.005464246 ubox
66 93 0.005551418 ubox
66 94 0.007802402 ubox
66 95 0.021957682 ubox
66 96 0.017776892 ubox
66 97 0.018794339 ubox
66 98 0.054836604 ubox
66 99 0.042620337 ubox
66 100 0.089389529 ubox
66 101 0.890538061 ubox
66 102 0.052112969 ubox
66 103 0.010657127 ubox
67 71 0.004967106 ubox
67 77 0.005550883 ubox
67 84 0.010156497 ubox
69 77 0.621952447 ubox
70 76 0.622589565 ubox
70 91 0.133523336 ubox
70 94 0.244317929 ubox
70 97 0.726783514 ubox
70 103 0.007349509 ubox
71 75 0.618066693 ubox
71 90 0.133482366 ubox
71 93 0.244163581 ubox
71 96 0.726321109 ubox
71 102 0.007346443 ubox
75 107 0.008562087 ubox
76 106 0.008573776 ubox
77 85 0.330409194 ubox
77 105 0.008571635 ubox
78 84 0.339992765 ubox
96 107 0.005598141 ubox
97 106 0.005607285 ubox
3 51 0.9500000 lbox
4 50 0.9500000 lbox
5 49 0.9500000 lbox
6 48 0.9500000 lbox
8 46 0.9500000 lbox
9 45 0.9500000 lbox
10 44 0.9500000 lbox
11 43 0.9500000 lbox
19 38 0.9500000 lbox
20 37 0.9500000 lbox
21 36 0.9500000 lbox
22 35 0.9500000 lbox
23 34 0.9500000 lbox
24 33 0.9500000 lbox
25 32 0.9500000 lbox
26 31 0.9500000 lbox
52 115 0.9500000 lbox
53 114 0.9500000 lbox
54 113 0.9500000 lbox
55 112 0.9500000 lbox
56 111 0.9500000 lbox
57 110 0.9500000 lbox
58 109 0.9500000 lbox
59 108 0.9500000 lbox
60 107 0.9500000 lbox
61 106 0.9500000 lbox
62 105 0.9500000 lbox
63 104 0.9500000 lbox
65 102 0.9500000 lbox
66 101 0.9500000 lbox
70 97 0.9500000 lbox
71 96 0.9500000 lbox
showpage
end
%%EOF
