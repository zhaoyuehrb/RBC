%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:07:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCCACAGAGGAGCACAGCUGUGUUUGGCUGCAGGGCCAAGAGCGCUGUCAAGAAGACCCACACGCCCCCCUCCAGCAGCUGAAUUCCUGCAGCUCAGCAGCCGCCGCCAGAGCAGGACGAACCGCCAAUCGCAAGGCACCUCUGAGAACUUCAGGAUGCAGAUGUCUCCAGCCCUCACCUGCCUAGUCCUGGGCCUGGCCCUUGUCUUUGGUGAAGGGUCUGCUGUGCACCAUCCCCCAUCCUACGUGGCCCA\
CC\
) } def
/len { sequence length } bind def

/coor [
[118.31792450 388.93093872]
[117.77009583 373.94094849]
[109.57313538 361.50476074]
[116.80126190 347.43121338]
[116.25343323 332.44122314]
[115.70559692 317.45123291]
[115.15776825 302.46124268]
[104.10720062 292.54052734]
[103.33808136 277.34634399]
[113.81876373 265.82275391]
[113.27093506 250.83276367]
[112.72310638 235.84275818]
[112.17527008 220.85276794]
[110.62551117 205.93304443]
[108.08077240 191.15048218]
[105.53602600 176.36790466]
[102.99128723 161.58534241]
[100.44654083 146.80278015]
[97.90180206 132.02020264]
[95.35705566 117.23764038]
[85.24232483 112.31073761]
[79.48588562 101.70243073]
[81.05664825 88.90973663]
[66.08444214 89.82242584]
[51.11223602 90.73511505]
[36.14002991 91.64780426]
[22.83620834 100.21045685]
[9.66173458 93.26189423]
[-5.31047249 94.17458344]
[-20.28268051 95.08727264]
[-35.25488663 95.99996185]
[-50.22709656 96.91265106]
[-65.19930267 97.82534027]
[-80.17150879 98.73802948]
[-95.14371490 99.65071869]
[-110.11592865 100.56340790]
[-125.08813477 101.47609711]
[-130.66526794 114.28654480]
[-141.16343689 123.40563202]
[-154.50074768 127.10034943]
[-168.06454468 124.70597839]
[-179.22311401 116.74486542]
[-185.83631897 104.81378937]
[-200.81852722 105.54410553]
[-215.80073547 106.27442169]
[-230.77822876 107.09593201]
[-245.75044250 108.00862122]
[-260.72265625 108.92131805]
[-275.69485474 109.83400726]
[-278.26406860 124.68310547]
[-284.18905640 138.53919983]
[-293.15020752 150.65505981]
[-304.66433716 160.37727356]
[-318.11047363 167.18156433]
[-332.76348877 170.70094299]
[-347.83316040 170.74565125]
[-362.50677490 167.31324768]
[-375.99304199 160.58886719]
[-387.56466675 150.93513489]
[-396.59756470 138.87265015]
[-402.60461426 125.05194855]
[-405.26190186 110.21834564]
[-404.42608643 95.17181396]
[-400.14224243 80.72379303]
[-392.64141846 67.65343475]
[-382.32809448 56.66561127]
[-369.75848389 48.35289001]
[-355.61041260 43.16355515]
[-340.64691162 41.37746811]
[-325.67492676 43.09094620]
[-311.50186157 48.21158981]
[-298.89205933 56.46324158]
[-288.52554321 67.40090179]
[-280.96139526 80.43472290]
[-276.60754395 94.86179352]
[-261.63534546 93.94910431]
[-246.66313171 93.03641510]
[-231.69091797 92.12372589]
[-225.22502136 88.59034729]
[-216.53105164 91.29220581]
[-201.54884338 90.56188965]
[-186.56663513 89.83158112]
[-179.52117920 75.27433014]
[-166.01322937 66.21142578]
[-149.68394470 65.20009613]
[-134.99305725 72.61162567]
[-126.00082397 86.50389099]
[-111.02861786 85.59120178]
[-96.05640411 84.67851257]
[-81.08419800 83.76582336]
[-66.11199188 82.85313416]
[-51.13978577 81.94044495]
[-36.16757584 81.02775574]
[-21.19536972 80.11506653]
[-6.22316217 79.20237732]
[8.74904537 78.28968811]
[20.98195267 69.79232025]
[35.22733688 76.67559814]
[50.19954681 75.76290894]
[65.17175293 74.85021973]
[80.14395905 73.93753052]
[93.83970642 67.81979370]
[104.51068878 57.27796936]
[115.18166351 46.73613739]
[114.97599030 29.22981071]
[127.26351929 17.23803711]
[144.08366394 17.84597015]
[154.62548828 7.17498779]
[165.16731262 -3.49599361]
[175.70915222 -14.16697502]
[186.25097656 -24.83795738]
[196.79280090 -35.50893784]
[207.33464050 -46.17992020]
[217.87646484 -56.85090256]
[228.35313416 -67.58586884]
[238.76423645 -78.38442230]
[249.17535400 -89.18296814]
[259.58645630 -99.98152161]
[256.74951172 -110.21261597]
[258.38693237 -120.62114716]
[264.13952637 -129.35240173]
[272.92074585 -134.87849426]
[283.12164307 -136.26564026]
[292.90527344 -133.33131409]
[303.70382690 -143.74243164]
[314.37478638 -154.28425598]
[324.91662598 -164.95523071]
[335.45846558 -175.62622070]
[331.50897217 -190.40284729]
[335.45993042 -205.07548523]
[346.15362549 -215.72967529]
[360.64739990 -219.57499695]
[375.02307129 -215.67555237]
[385.56488037 -226.34654236]
[389.75918579 -241.60165405]
[404.20806885 -245.21812439]
[414.74990845 -255.88911438]
[425.29174805 -266.56008911]
[435.83355713 -277.23107910]
[446.37539673 -287.90203857]
[443.99411011 -299.51354980]
[447.46466064 -310.72201538]
[455.81872559 -318.78985596]
[466.91040039 -321.80480957]
[477.96649170 -319.13256836]
[488.76504517 -329.54367065]
[499.56359863 -339.95477295]
[510.36215210 -350.36590576]
[510.81527710 -365.93612671]
[521.91485596 -376.34066772]
[536.75592041 -375.81268311]
[547.55450439 -386.22381592]
[548.98229980 -391.18344116]
[551.86865234 -394.75790405]
[555.44946289 -396.62493896]
[558.94268799 -396.80899048]
[570.11425781 -406.81878662]
[581.28588867 -416.82855225]
[586.40063477 -431.80020142]
[601.04278564 -434.53082275]
[612.21435547 -444.54058838]
[616.80297852 -460.28469849]
[632.79418945 -463.91955566]
[643.73767090 -451.70590210]
[638.37567139 -436.20816040]
[622.22412109 -433.36901855]
[611.05255127 -423.35922241]
[606.73687744 -409.10354614]
[591.29565430 -405.65698242]
[580.12408447 -395.64718628]
[568.95251465 -385.63742065]
[557.96557617 -375.42526245]
[547.16705322 -365.01412964]
[547.15264893 -350.16369629]
[536.34967041 -339.45153809]
[520.77325439 -339.56735229]
[509.97470093 -329.15621948]
[499.17614746 -318.74511719]
[488.37759399 -308.33401489]
[489.12631226 -290.02188110]
[476.00518799 -276.77145386]
[457.04638672 -277.36022949]
[446.50454712 -266.68923950]
[435.96270752 -256.01824951]
[425.42089844 -245.34727478]
[414.87905884 -234.67630005]
[411.43878174 -220.18444824]
[396.23587036 -215.80470276]
[385.69406128 -205.13372803]
[389.76824951 -190.80661011]
[386.09970093 -176.26708984]
[375.57650757 -165.44447327]
[360.95306396 -161.31510925]
[346.12942505 -165.08439636]
[335.58761597 -154.41340637]
[325.04577637 -143.74243164]
[324.17620850 -139.07368469]
[320.38290405 -134.89196777]
[314.11492920 -132.94387817]
[303.31637573 -122.53276062]
[304.35916138 -103.05491638]
[290.49291992 -88.90375519]
[270.38500977 -89.57041168]
[259.97390747 -78.77185822]
[249.56278992 -67.97330475]
[239.15168762 -57.17475510]
[236.77871704 -50.19896317]
[228.54743958 -46.30907440]
[218.00561523 -35.63809204]
[207.46379089 -24.96710968]
[196.92195129 -14.29612827]
[186.38012695 -3.62514639]
[175.83830261 7.04583502]
[165.29647827 17.71681595]
[154.75463867 28.38779831]
[156.63661194 41.11746216]
[150.76362610 52.78517151]
[139.07525635 59.04025269]
[125.72349548 57.40711975]
[115.05251312 67.94895172]
[104.38153076 78.49077606]
[117.09338379 88.53076172]
[118.88010406 103.58956146]
[110.13962555 114.69290161]
[112.68436432 129.47546387]
[115.22911072 144.25804138]
[117.77384949 159.04060364]
[120.31859589 173.82316589]
[122.86333466 188.60572815]
[125.40808105 203.38830566]
[131.35334778 189.61682129]
[142.96978760 180.12690735]
[157.65045166 177.04827881]
[172.10075378 181.07183838]
[183.07775879 191.29461670]
[188.11805725 205.42243958]
[186.09049988 220.28477478]
[177.45010376 232.54624939]
[164.13594055 239.45515442]
[149.13594055 239.46101379]
[135.81637573 232.56251526]
[127.16526794 220.30494690]
[127.71309662 235.29493713]
[128.26092529 250.28492737]
[128.80876160 265.27493286]
[140.10264587 276.00271606]
[140.44468689 291.21252441]
[130.14776611 301.91339111]
[130.69558716 316.90338135]
[131.24342346 331.89337158]
[131.79125977 346.88336182]
[140.02740479 360.39175415]
[132.76008606 373.39312744]
[133.30792236 388.38311768]
[142.47436523 401.98120117]
[135.03910828 416.59796143]
[118.65090179 417.19686890]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 254]
[2 253]
[4 251]
[5 250]
[6 249]
[7 248]
[10 245]
[11 244]
[12 243]
[13 242]
[14 230]
[15 229]
[16 228]
[17 227]
[18 226]
[19 225]
[20 224]
[23 101]
[24 100]
[25 99]
[26 98]
[28 96]
[29 95]
[30 94]
[31 93]
[32 92]
[33 91]
[34 90]
[35 89]
[36 88]
[37 87]
[43 82]
[44 81]
[45 80]
[46 78]
[47 77]
[48 76]
[49 75]
[102 221]
[103 220]
[104 219]
[107 215]
[108 214]
[109 213]
[110 212]
[111 211]
[112 210]
[113 209]
[114 208]
[115 206]
[116 205]
[117 204]
[118 203]
[124 200]
[125 199]
[126 196]
[127 195]
[128 194]
[133 189]
[134 188]
[136 186]
[137 185]
[138 184]
[139 183]
[140 182]
[145 179]
[146 178]
[147 177]
[148 176]
[151 173]
[152 172]
[156 171]
[157 170]
[158 169]
[160 167]
[161 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
