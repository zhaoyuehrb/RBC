%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:15:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCAGAAGCGGAACUGCAAGGCCGGAAGCUCCACGUCCGCACCCGCCCCUUCCGUUUCGCUUCCGCCUACCUCGCCCAGGCUGCCAGACCGGAAGCGCUCCGCUGUACCUGGAUCCUGCUCCUCUGGGUUGAAACCCGGGCGCCGCCAAGAUGCCGGCUUACCACUCUUCUCUCAUGGAUCCUGAUACCAAACUCAUCGGAAACAUGGCACUGUUGCCUAUCAGAAGUCAAUUCAAAGGACCUGCCCCCA\
) } def
/len { sequence length } bind def

/coor [
[-36.84146118 97.22596741]
[-48.34366226 83.28045654]
[-53.58185577 66.01468658]
[-68.55271912 65.08029175]
[-83.52359009 64.14590454]
[-98.49446106 63.21150970]
[-113.46533203 62.27711487]
[-128.44668579 61.52942657]
[-143.43618774 60.96855927]
[-158.42570496 60.40769196]
[-173.41522217 59.84682465]
[-188.40472412 59.28595734]
[-192.02825928 70.82578278]
[-199.16867065 80.96121216]
[-209.29754639 88.62393951]
[-221.56391907 92.94036865]
[-234.86477661 93.32801056]
[-247.94413757 89.56683350]
[-259.51153564 81.83712769]
[-268.36914062 70.71878052]
[-281.80148315 77.39500427]
[-295.23382568 84.07123566]
[-308.66616821 90.74745941]
[-314.93746948 97.35163879]
[-322.30786133 97.42201233]
[-335.82238770 103.93026733]
[-349.33691406 110.43852234]
[-362.85144043 116.94678497]
[-376.36599731 123.45503998]
[-389.88052368 129.96328735]
[-392.76040649 145.09645081]
[-403.86907959 155.51039124]
[-418.80319214 157.36433411]
[-431.80963135 150.15528870]
[-445.32415771 156.66354370]
[-458.83868408 163.17179871]
[-461.47778320 182.15695190]
[-474.94229126 195.58651733]
[-493.63555908 198.13555908]
[-509.94152832 188.94923401]
[-523.20324707 195.95826721]
[-531.46520996 210.12413025]
[-547.86077881 209.78141785]
[-555.52362061 195.28268433]
[-546.57080078 181.54296875]
[-530.21228027 182.69653320]
[-516.95056152 175.68750000]
[-517.48632812 164.58912659]
[-513.83679199 154.04006958]
[-506.49026489 145.56800842]
[-496.47311401 140.41482544]
[-485.20672607 139.35458374]
[-474.30581665 142.57751465]
[-465.34695435 149.65725708]
[-451.83239746 143.14900208]
[-438.31787109 136.64074707]
[-435.84475708 121.97713470]
[-425.08404541 111.45710754]
[-410.01593018 109.26496124]
[-396.38876343 116.44876099]
[-382.87423706 109.94050598]
[-369.35971069 103.43225098]
[-355.84518433 96.92399597]
[-342.33065796 90.41573334]
[-328.81610107 83.90747833]
[-315.34240723 77.31510925]
[-301.91006470 70.63888550]
[-288.47772217 63.96265793]
[-275.04534912 57.28643036]
[-273.78906250 49.89239883]
[-288.77780151 49.31152725]
[-303.76904297 49.82444000]
[-309.92364502 36.14522934]
[-299.59619141 25.26664734]
[-285.61596680 30.70213699]
[-271.27645874 35.10433197]
[-270.02017212 27.71030045]
[-280.49371338 16.97229767]
[-290.96728516 6.23429489]
[-301.44082642 -4.50370789]
[-311.91439819 -15.24171066]
[-320.12344360 -19.18572426]
[-322.45053101 -26.17946625]
[-332.78939819 -37.04720306]
[-343.12829590 -47.91493607]
[-351.28753662 -51.96097946]
[-353.52725220 -58.98318863]
[-363.72985840 -69.97896576]
[-369.88452148 -72.27453613]
[-373.44018555 -76.66520691]
[-374.04550171 -81.37837982]
[-383.97079468 -92.62509918]
[-393.89608765 -103.87181854]
[-403.82138062 -115.11853790]
[-419.67926025 -117.54895782]
[-427.54101562 -131.53367615]
[-421.37579346 -146.34480286]
[-405.91299438 -150.62051392]
[-393.01440430 -141.08085632]
[-392.57464600 -125.04382324]
[-382.64938354 -113.79710388]
[-372.72409058 -102.55039215]
[-362.79879761 -91.30367279]
[-352.73406982 -80.18155670]
[-342.53149414 -69.18578339]
[-332.26055908 -58.25381088]
[-321.92166138 -47.38607788]
[-311.58279419 -36.51834106]
[-301.17639160 -25.71526337]
[-290.70281982 -14.97725964]
[-280.22927856 -4.23925734]
[-269.75573730 6.49874544]
[-259.28216553 17.23674774]
[-236.65113831 6.78052139]
[-212.96627808 9.64114761]
[-195.15739441 23.85295868]
[-187.84385681 44.29644394]
[-172.85433960 44.85731506]
[-157.86483765 45.41818237]
[-142.87532043 45.97904968]
[-127.88581848 46.53991699]
[-123.85453033 44.02412033]
[-118.20476532 43.99607086]
[-112.53093719 47.30624771]
[-97.56006622 48.24063873]
[-82.58920288 49.17503357]
[-67.61833191 50.10942459]
[-52.64746094 51.04381561]
[-48.53176498 39.84020233]
[-41.66097260 30.06291962]
[-32.49266434 22.37599182]
[-21.64076424 17.30381012]
[-9.83442783 15.19534969]
[2.13095403 16.20017433]
[13.44733620 20.25785637]
[23.34859085 27.10154915]
[31.16237068 36.27552795]
[36.35576630 47.16553116]
[38.57165146 59.03988647]
[53.47733307 60.71935272]
[68.38301849 62.39882278]
[83.28870392 64.07828522]
[96.99947357 57.99432755]
[105.75563049 45.81525803]
[114.51178741 33.63618469]
[123.26794434 21.45711708]
[125.04149628 5.73563194]
[138.75317383 -0.08152385]
[147.50932312 -12.26059437]
[151.84606934 -28.65049934]
[168.79597473 -29.02041817]
[173.84364319 -12.83531952]
[159.68840027 -3.50443888]
[150.93223572 8.67463112]
[149.78498840 23.52498627]
[135.44700623 30.21327209]
[126.69085693 42.39234161]
[117.93470001 54.57141113]
[109.17855072 66.75048065]
[112.39049530 73.52790070]
[125.91369629 67.03768921]
[139.43690491 60.54747009]
[152.96011353 54.05725479]
[166.48332214 47.56703949]
[180.00653076 41.07682419]
[193.71464539 34.98688507]
[200.13851929 48.54173279]
[186.74510193 55.29568863]
[173.15896606 61.65309906]
[159.57281494 68.01050568]
[145.98667908 74.36791992]
[132.40052795 80.72532654]
[118.81438446 87.08274078]
[122.02632904 93.86016083]
[136.99719238 94.79454803]
[151.96806335 95.72894287]
[166.93893433 96.66333771]
[181.90980530 97.59772491]
[193.69995117 87.41784668]
[208.86923218 88.57872009]
[218.50154114 99.88156891]
[233.47241211 100.81595612]
[248.44328308 101.75035095]
[263.42462158 102.49803925]
[278.41415405 103.05890656]
[293.40365601 103.61977386]
[302.88110352 91.33329773]
[317.77978516 86.99634552]
[332.37081909 92.27657318]
[341.04370117 105.14362335]
[340.46350098 120.64984894]
[330.85333252 132.83279419]
[315.90847778 137.00785828]
[301.37554932 131.56965637]
[292.84277344 118.60928345]
[277.85327148 118.04841614]
[262.86376953 117.48754883]
[258.83248901 120.00334930]
[253.18270874 120.03139496]
[247.50888062 116.72122192]
[232.53800964 115.78682709]
[217.56715393 114.85243225]
[206.60415649 124.86985016]
[191.40826416 124.13550568]
[180.97540283 112.56859589]
[166.00454712 111.63420105]
[151.03367615 110.69981384]
[136.06280518 109.76541901]
[121.09193420 108.83102417]
[118.17867279 115.74209595]
[112.35214996 129.56423950]
[109.43888855 136.47531128]
[120.56100464 146.54003906]
[131.68312073 156.60475159]
[146.84086609 153.28475952]
[161.04164124 159.53913879]
[168.82498169 172.96298218]
[167.19799805 188.39453125]
[156.78633118 199.90003967]
[141.59346008 203.05540466]
[127.46136475 196.64733887]
[119.82411957 183.13986206]
[121.61839294 167.72686768]
[110.49628448 157.66213989]
[99.37416840 147.59742737]
[93.31204224 152.01338196]
[81.18778992 160.84527588]
[75.12566376 165.26123047]
[81.29496765 178.93380737]
[87.46427155 192.60639954]
[102.73925781 194.76937866]
[114.40505219 204.86456299]
[118.73915100 219.67062378]
[114.35855103 234.46298218]
[102.66109467 244.52145386]
[87.37939453 246.63644409]
[73.38978577 240.13302612]
[65.15629578 227.08645630]
[65.30621338 211.65982056]
[73.79168701 198.77571106]
[67.62238312 185.10311890]
[61.45307541 171.43052673]
[42.44092560 126.62946320]
[55.32314682 90.51017761]
[81.60923004 78.98397064]
[66.70355225 77.30450439]
[51.79786682 75.62503815]
[36.89218521 73.94557190]
[28.52538872 90.16196442]
[14.58738518 101.88642120]
[-2.75710130 107.33232117]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 128]
[4 127]
[5 126]
[6 125]
[7 124]
[8 121]
[9 120]
[10 119]
[11 118]
[12 117]
[20 69]
[21 68]
[22 67]
[23 66]
[25 65]
[26 64]
[27 63]
[28 62]
[29 61]
[30 60]
[34 56]
[35 55]
[36 54]
[40 47]
[41 46]
[77 113]
[78 112]
[79 111]
[80 110]
[81 109]
[83 108]
[84 107]
[85 106]
[87 105]
[88 104]
[91 103]
[92 102]
[93 101]
[94 100]
[139 248]
[140 247]
[141 246]
[142 245]
[143 159]
[144 158]
[145 157]
[146 156]
[148 154]
[149 153]
[174 209]
[175 208]
[176 207]
[177 206]
[178 205]
[181 202]
[182 201]
[183 200]
[184 197]
[185 196]
[186 195]
[212 225]
[213 224]
[214 223]
[228 242]
[229 241]
[230 240]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
