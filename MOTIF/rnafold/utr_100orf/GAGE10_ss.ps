%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:56:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCUUCUGCUCAGCCGCUUUACCCACGUGGAGAACGCCAGGGAGCUGUGAGGGUGUGUGGUCUCGUUCCUGUCGUCUGGAAUAUUUUUCCUCUACUGAGAUUCAUCUGUGUGAAAUAUGAGUUGGCGAGGAAGAUCGACCUAUCGGUCUAGACCAAGACUCUAUGUAGAGCCCCCUGAAAUGAUUGGGCCUAUGCUGCCCGAGCAGUUCAGUGAUG\
) } def
/len { sequence length } bind def

/coor [
[69.75432587 249.81178284]
[66.06138611 235.11013794]
[67.62249756 220.03239441]
[74.24915314 206.39921570]
[85.14114380 195.85691833]
[98.98322296 189.67849731]
[97.89836121 174.71777344]
[96.81350708 159.75706482]
[95.72865295 144.79634094]
[94.64379883 129.83563232]
[93.55894470 114.87490845]
[86.45333862 112.47482300]
[65.13652802 105.27457428]
[55.20219803 116.51330566]
[56.59632874 133.95323181]
[45.16932297 146.75205994]
[28.35883713 147.31278992]
[18.58824921 158.69416809]
[8.81766224 170.07554626]
[-0.95292485 181.45690918]
[-10.72351170 192.83828735]
[-20.49409866 204.21965027]
[-22.99002647 220.42774963]
[-38.37058258 226.11726379]
[-50.81356812 215.43531799]
[-47.51870728 199.37057495]
[-31.87547112 194.44906616]
[-22.10488319 183.06770325]
[-12.33429623 171.68632507]
[-2.56370950 160.30494690]
[7.20687771 148.92358398]
[16.97746468 137.54220581]
[14.21102047 124.96012115]
[19.27078247 112.90143585]
[30.51667786 105.85377502]
[43.96346664 106.57897949]
[53.89779663 95.34024811]
[59.00541687 81.23662567]
[58.57115555 66.24291229]
[58.13689423 51.24919510]
[57.70263290 36.25548553]
[57.26837540 21.26177216]
[49.13479233 7.69138432]
[56.50038528 -5.25455332]
[56.06612396 -20.24826622]
[55.63186264 -35.24197769]
[47.49827957 -48.81236649]
[54.86387253 -61.75830460]
[54.42961502 -76.75201416]
[53.66987610 -91.73276520]
[52.58501816 -106.69348145]
[51.50016403 -121.65419769]
[50.41530991 -136.61491394]
[49.33045197 -151.57563782]
[38.19801712 -159.15263367]
[33.52890396 -171.57595825]
[36.81742477 -184.23292542]
[46.64661407 -192.56054688]
[45.77845383 -207.53540039]
[44.91029739 -222.51025391]
[44.04214096 -237.48512268]
[43.17398071 -252.45997620]
[42.30582428 -267.43481445]
[25.61780739 -280.11450195]
[23.26018715 -300.52090454]
[10.53052330 -308.45535278]
[-2.19914079 -316.38983154]
[-14.92880440 -324.32427979]
[-27.65846825 -332.25872803]
[-41.98796844 -326.30514526]
[-57.07234192 -329.94403076]
[-67.11134338 -341.77609253]
[-68.24476624 -357.25170898]
[-60.03679276 -370.42019653]
[-45.64355087 -376.21798706]
[-30.59953880 -372.41571045]
[-20.68948555 -360.47540283]
[-19.72400856 -344.98840332]
[-6.99434471 -337.05395508]
[5.73531914 -329.11947632]
[18.46498299 -321.18502808]
[31.19464684 -313.25054932]
[34.34004593 -315.61239624]
[37.80649948 -317.47131348]
[41.51423645 -318.78451538]
[41.94849777 -333.77822876]
[42.38275909 -348.77194214]
[42.81702042 -363.76565552]
[43.25128174 -378.75936890]
[43.68553925 -393.75308228]
[44.11980057 -408.74679565]
[44.55406189 -423.74050903]
[34.40530014 -429.05477905]
[27.00435066 -437.73190308]
[23.39026451 -448.49468994]
[24.04838181 -459.77758789]
[28.84552574 -469.95440674]
[37.05472565 -477.57263184]
[47.46513748 -481.56082153]
[48.54999161 -496.52154541]
[49.63484955 -511.48223877]
[50.71970367 -526.44299316]
[51.80456161 -541.40368652]
[52.88941574 -556.36437988]
[53.97427368 -571.32513428]
[40.93830109 -579.34521484]
[33.13261795 -592.51068115]
[32.35091782 -607.79626465]
[38.77282715 -621.68933105]
[50.92263412 -630.99743652]
[66.00840759 -633.58160400]
[80.56354523 -628.84802246]
[91.24338531 -617.88446045]
[95.59377289 -603.21026611]
[92.61502838 -588.19744873]
[82.99163818 -576.29577637]
[68.93498993 -570.24029541]
[67.85013580 -555.27954102]
[66.76528168 -540.31884766]
[65.68041992 -525.35809326]
[64.59556580 -510.39739990]
[63.51071167 -495.43667603]
[62.42585373 -480.47595215]
[77.38670349 -469.26733398]
[82.60569000 -451.16033936]
[75.79802704 -433.42782593]
[59.54777527 -423.30624390]
[59.11351395 -408.31253052]
[58.67925262 -393.31881714]
[58.24499130 -378.32510376]
[57.81072998 -363.33139038]
[57.37647247 -348.33767700]
[56.94221115 -333.34396362]
[56.50794983 -318.35025024]
[59.46064377 -317.15780640]
[62.24490738 -315.61239624]
[64.81875610 -313.73739624]
[77.31336975 -322.03704834]
[89.80799103 -330.33673096]
[102.30261230 -338.63638306]
[109.10706329 -353.55722046]
[125.45475769 -354.85525513]
[134.52859497 -341.19519043]
[126.99417877 -326.62930298]
[110.60227966 -326.14175415]
[98.10765839 -317.84210205]
[85.61303711 -309.54241943]
[73.11842346 -301.24276733]
[71.89435577 -281.79013062]
[57.28068161 -268.30297852]
[58.14883804 -253.32812500]
[59.01699448 -238.35327148]
[59.88515472 -223.37841797]
[60.75331116 -208.40356445]
[61.62146759 -193.42871094]
[74.64891052 -182.78950500]
[75.97473907 -165.68312073]
[64.29116821 -152.66049194]
[65.37602997 -137.69976807]
[66.46088409 -122.73905945]
[67.54573822 -107.77833557]
[68.63059235 -92.81761932]
[71.03980255 -90.24891663]
[72.32678986 -86.38733673]
[71.89818573 -81.77198792]
[69.42332458 -77.18627930]
[69.85758972 -62.19256592]
[77.96010590 -49.69462967]
[70.62557220 -35.67623901]
[71.05983734 -20.68252754]
[71.49409485 -5.68881416]
[79.59661865 6.80912256]
[72.26208496 20.82751083]
[72.69635010 35.82122421]
[73.13060760 50.81493759]
[73.56486511 65.80864716]
[73.99913025 80.80236053]
[75.36079407 65.86429596]
[82.98147583 52.94433975]
[95.39638519 44.52590179]
[110.21919250 42.22711182]
[124.60074615 46.48983765]
[135.77671814 56.49472046]
[141.59892273 70.31867981]
[140.94827271 85.30455780]
[133.95085144 98.57063293]
[143.55564880 110.09225464]
[153.16044617 121.61388397]
[162.76524353 133.13551331]
[178.40228271 133.00488281]
[190.43194580 142.99594116]
[193.17419434 158.39120483]
[185.33422852 171.92149353]
[170.61384583 177.19824219]
[155.96353149 171.72990417]
[148.30075073 158.09848022]
[151.24360657 142.74031067]
[141.63882446 131.21867371]
[132.03402710 119.69705200]
[122.42922211 108.17543030]
[108.51966095 113.79005432]
[109.60451508 128.75076294]
[110.68936920 143.71148682]
[111.77422333 158.67221069]
[112.85908508 173.63291931]
[113.94393921 188.59364319]
[128.53256226 192.71044922]
[140.83152771 201.57109070]
[149.35569763 214.10562134]
[153.07572937 228.80041504]
[151.54240417 243.88102722]
[144.94088745 257.52639771]
[134.06832886 268.08874512]
[120.23767090 274.29266357]
[105.11901093 275.38897705]
[90.53800201 271.24530029]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 206]
[7 205]
[8 204]
[9 203]
[10 202]
[11 201]
[13 37]
[14 36]
[17 32]
[18 31]
[19 30]
[20 29]
[21 28]
[22 27]
[38 177]
[39 176]
[40 175]
[41 174]
[42 173]
[44 171]
[45 170]
[46 169]
[48 167]
[49 166]
[50 162]
[51 161]
[52 160]
[53 159]
[54 158]
[58 155]
[59 154]
[60 153]
[61 152]
[62 151]
[63 150]
[65 82]
[66 81]
[67 80]
[68 79]
[69 78]
[85 134]
[86 133]
[87 132]
[88 131]
[89 130]
[90 129]
[91 128]
[92 127]
[99 123]
[100 122]
[101 121]
[102 120]
[103 119]
[104 118]
[105 117]
[137 148]
[138 147]
[139 146]
[140 145]
[186 200]
[187 199]
[188 198]
[189 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
