%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:10:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGGAUUUAAGGUUGCCGCUAGCCGCCUGGGAAUUUAAGGGACCCACACUACCUUCCCGAAGUUGAAGGCAAGCGGUGAUUGUUUGUAGACGGCGCUUUGUCAUGGGACCUGUGCGGUUGGGAAUAUUGCUUUUCCUUUUUUUGGCCGUGCACGAGGCUUGGGCUGGGAUGUUGAAGGAGGAGGACGAUGACACAGAACGCU\
) } def
/len { sequence length } bind def

/coor [
[69.14653778 110.39112854]
[54.21052551 111.77515411]
[39.27451324 113.15917969]
[24.33849907 114.54319763]
[20.32255745 130.68482971]
[11.03912354 144.45599365]
[-2.37601542 154.20326233]
[-18.29229546 158.76361084]
[-34.78255844 157.60313416]
[-49.85639954 150.87951660]
[-61.70039749 139.42086792]
[-68.89629364 124.62373352]
[-83.78260040 126.46706390]
[-98.66890717 128.31037903]
[-113.55521393 130.15370178]
[-128.44152832 131.99703979]
[-143.32783508 133.84036255]
[-158.21414185 135.68368530]
[-173.10044861 137.52700806]
[-187.98675537 139.37033081]
[-202.87306213 141.21365356]
[-215.61781311 150.58819580]
[-229.19944763 144.47357178]
[-244.08575439 146.31689453]
[-258.97204590 148.16021729]
[-273.79452515 150.46109009]
[-288.53912354 153.21733093]
[-302.23764038 165.51928711]
[-318.54901123 159.05227661]
[-333.24942017 162.03524780]
[-347.94982910 165.01821899]
[-362.65023804 168.00119019]
[-377.35064697 170.98416138]
[-366.50149536 181.34254456]
[-367.67810059 196.29632568]
[-380.01376343 204.83047485]
[-394.42196655 200.65867615]
[-400.28952026 186.85391235]
[-393.29461670 173.58500671]
[-408.18090820 175.42832947]
[-423.06723022 177.27165222]
[-428.40097046 191.61772156]
[-439.79846191 201.83319092]
[-454.64065552 205.57060242]
[-469.51690674 201.97114563]
[-481.00872803 191.86195374]
[-486.47546387 177.56602478]
[-484.66082764 162.36846924]
[-475.98184204 149.76156616]
[-462.43286133 142.64230347]
[-447.12734985 142.64663696]
[-433.58239746 149.77354431]
[-424.91055298 162.38534546]
[-410.02423096 160.54202271]
[-395.13793945 158.69869995]
[-380.33361816 156.28376770]
[-365.63320923 153.30079651]
[-350.93280029 150.31781006]
[-336.23239136 147.33483887]
[-321.53198242 144.35186768]
[-314.58834839 134.44244385]
[-302.36141968 131.83949280]
[-291.29537964 138.47273254]
[-276.55078125 135.71649170]
[-274.85644531 133.47660828]
[-272.17031860 131.77487183]
[-268.69360352 130.99330139]
[-264.76229858 131.43386841]
[-260.81536865 133.27391052]
[-245.92907715 131.43058777]
[-231.04277039 129.58726501]
[-219.36277771 120.34457397]
[-204.71638489 126.32734680]
[-189.83007812 124.48402405]
[-174.94377136 122.64070129]
[-160.05746460 120.79737091]
[-145.17115784 118.95404816]
[-130.28485107 117.11072540]
[-115.39854431 115.26740265]
[-100.51223755 113.42407990]
[-85.62592316 111.58074951]
[-70.73961639 109.73742676]
[-68.40082550 96.46792603]
[-62.41082001 84.37979126]
[-53.24639511 74.45656586]
[-41.64304733 67.50860596]
[-28.53597069 64.10694122]
[-14.98465443 64.53633118]
[-2.08726931 68.77145386]
[9.10834026 76.47819519]
[17.68978310 87.04000854]
[22.95447350 99.60718536]
[37.89048767 98.22315979]
[52.82649994 96.83913422]
[67.76251221 95.45511627]
[69.73355865 85.94245911]
[74.51476288 77.21262360]
[81.80994415 70.09509277]
[91.07885742 65.31074524]
[101.57609558 63.40045166]
[112.41072083 64.66737366]
[114.02458954 49.75444412]
[115.63845825 34.84151840]
[108.52312469 20.06640244]
[117.98338318 6.67105007]
[134.28733826 8.43545246]
[140.66287231 23.54454231]
[130.55139160 36.45538330]
[128.93751526 51.36831284]
[127.32365417 66.28124237]
[137.17034912 77.59683228]
[152.16323853 78.05875397]
[167.15611267 78.52068329]
[182.14900208 78.98260498]
[197.14189148 79.44453430]
[208.60523987 68.89799500]
[223.80357361 69.58003235]
[233.78744507 80.57357025]
[248.78033447 81.03549957]
[263.77322388 81.49742126]
[278.76611328 81.95935059]
[282.08969116 74.96118927]
[287.14862061 69.12926483]
[293.56225586 64.88030243]
[300.85400391 62.51274872]
[308.48654175 62.18589020]
[315.90151978 63.90920258]
[322.56033325 67.54269409]
[327.98330688 72.80817413]
[331.78424072 79.31052399]
[333.69778442 86.56729889]
[348.55395508 88.63964844]
[363.41009521 90.71199036]
[378.26626587 92.78433228]
[393.12240601 94.85668182]
[407.97857666 96.92902374]
[422.83471680 99.00137329]
[437.69088745 101.07371521]
[452.54702759 103.14606476]
[467.40319824 105.21840668]
[482.31613159 106.83227539]
[497.27166748 107.98612976]
[512.22723389 109.13998413]
[527.18280029 110.29384613]
[542.13836670 111.44770050]
[557.09387207 112.60155487]
[572.04943848 113.75540924]
[587.00500488 114.90927124]
[600.07592773 103.28697968]
[617.17199707 104.68357086]
[627.75781250 117.74855804]
[642.72937012 118.67197418]
[655.65417480 109.16783905]
[671.10516357 113.48609161]
[677.22961426 128.31413269]
[669.32940674 142.27714539]
[653.46490479 144.66392517]
[641.80596924 133.64352417]
[626.83441162 132.72010803]
[618.46569824 142.52204895]
[605.78985596 145.76086426]
[593.38104248 141.03645325]
[585.85113525 129.86482239]
[570.89556885 128.71096802]
[555.94006348 127.55711365]
[540.98449707 126.40325165]
[526.02893066 125.24939728]
[511.07336426 124.09554291]
[496.11782837 122.94168854]
[481.16226196 121.78782654]
[478.94595337 123.51286316]
[475.91088867 124.46140289]
[472.35034180 124.31649780]
[468.66702271 122.87344360]
[465.33084106 120.07456207]
[450.47470093 118.00222015]
[435.61853027 115.92987061]
[420.76239014 113.85752869]
[405.90621948 111.78518677]
[391.05007935 109.71283722]
[376.19390869 107.64049530]
[361.33776855 105.56814575]
[346.48159790 103.49580383]
[331.62542725 101.42345428]
[315.22805786 116.87608337]
[292.49453735 115.13948822]
[278.30416870 96.95223236]
[263.31127930 96.49031067]
[248.31840515 96.02838135]
[233.32551575 95.56645966]
[222.68380737 105.92453003]
[207.47230530 105.66965485]
[196.67996216 94.43742371]
[181.68707275 93.97549438]
[166.69419861 93.51356506]
[151.70130920 93.05164337]
[136.70841980 92.58971405]
[136.25660706 106.51519012]
[130.79229736 119.08244324]
[121.24049377 128.58689880]
[109.06696320 133.80786133]
[96.05490875 134.16398621]
[84.04422760 129.77354431]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 95]
[2 94]
[3 93]
[4 92]
[12 82]
[13 81]
[14 80]
[15 79]
[16 78]
[17 77]
[18 76]
[19 75]
[20 74]
[21 73]
[23 71]
[24 70]
[25 69]
[26 64]
[27 63]
[29 60]
[30 59]
[31 58]
[32 57]
[33 56]
[39 55]
[40 54]
[41 53]
[101 110]
[102 109]
[103 108]
[111 197]
[112 196]
[113 195]
[114 194]
[115 193]
[118 190]
[119 189]
[120 188]
[121 187]
[131 184]
[132 183]
[133 182]
[134 181]
[135 180]
[136 179]
[137 178]
[138 177]
[139 176]
[140 175]
[141 170]
[142 169]
[143 168]
[144 167]
[145 166]
[146 165]
[147 164]
[148 163]
[151 159]
[152 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
