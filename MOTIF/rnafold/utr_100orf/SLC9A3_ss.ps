%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:45:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGGCACCGGAGCGCGCCGGGUCCUCGCCGGGUCCCAGCCCCGCGCGUCGGCCCAGCCCAGCCGGGACCCCCCGCGACAUGCGCGUCCCAGCCCUGCGCUGAGCAGGCGGCAAUGUGGGGACUCGGGGCCCGGGGCCCCGACCGGGGGCUGCUGCUGGCGCUGGCGCUGGGCGGGCUGGCGCGGGCCGGGGGCGUCGAGGUGGAGCCCGGCG\
) } def
/len { sequence length } bind def

/coor [
[-76.58161926 625.66436768]
[-83.23212433 633.70672607]
[-93.00101471 636.69732666]
[-98.81783295 650.52355957]
[-93.09307861 665.01025391]
[-99.18910980 678.94915771]
[-113.03526306 684.31756592]
[-118.85207367 698.14379883]
[-124.66888428 711.97003174]
[-130.48570251 725.79626465]
[-124.28717804 740.33428955]
[-130.26152039 754.96588135]
[-144.86425781 761.01031494]
[-159.43185425 754.88159180]
[-165.32159424 740.21582031]
[-159.03921509 725.71380615]
[-144.31193542 719.97949219]
[-138.49511719 706.15325928]
[-132.67829895 692.32702637]
[-126.86149597 678.50079346]
[-132.70550537 664.84857178]
[-127.00338745 650.74389648]
[-112.64406586 644.70672607]
[-106.82724762 630.88049316]
[-110.64047241 611.92315674]
[-94.39148712 599.99114990]
[-88.98500061 585.99938965]
[-83.57851410 572.00762939]
[-78.17202759 558.01580811]
[-72.76553345 544.02404785]
[-67.35904694 530.03228760]
[-61.95256042 516.04046631]
[-56.54607391 502.04870605]
[-59.17599106 487.38812256]
[-46.98472214 477.30429077]
[-41.57823181 463.31253052]
[-36.17174530 449.32073975]
[-36.69297409 441.94964600]
[-30.58096123 435.16342163]
[-24.96870041 421.25292969]
[-27.38210678 406.55514526]
[-15.04343796 396.65222168]
[-9.43117714 382.74169922]
[-3.92165351 368.79016113]
[1.48483419 354.79840088]
[6.89132214 340.80661011]
[3.25458956 323.63790894]
[17.68808556 312.20193481]
[22.88762474 298.13195801]
[28.08716202 284.06195068]
[33.28670120 269.99194336]
[38.48624039 255.92195129]
[43.68577957 241.85195923]
[48.88531876 227.78196716]
[48.25542831 220.41935730]
[54.26669312 213.54374695]
[59.67317963 199.55197144]
[64.97633362 185.52069092]
[70.17587280 171.45069885]
[75.37541199 157.38070679]
[80.57495117 143.31069946]
[85.77449036 129.24070740]
[90.97402954 115.17071533]
[85.36177063 101.26019287]
[71.85410309 94.73770142]
[58.34643173 88.21521759]
[42.04063034 89.96244812]
[32.59447479 76.55714417]
[39.72535706 61.78953171]
[56.09764099 60.85125732]
[64.86891937 74.70754242]
[78.37659454 81.23003387]
[91.88426208 87.75252533]
[100.22930908 75.28816986]
[89.05257416 65.28413391]
[73.01903534 64.73178101]
[63.57019806 51.76647568]
[67.95440674 36.33409882]
[82.80847168 30.27304649]
[96.73762512 38.23283768]
[99.05661011 54.10740280]
[110.23333740 64.11143494]
[125.16512299 62.67551422]
[140.09558105 61.23973465]
[149.16104126 49.28911209]
[151.85363770 40.56218719]
[158.44938660 37.23039627]
[167.69012451 25.41477776]
[176.93086243 13.59915733]
[186.17158508 1.78353775]
[195.41232300 -10.03208160]
[204.65304565 -21.84770203]
[213.80639648 -33.73114777]
[222.87185669 -45.68177032]
[225.04782104 -61.35262680]
[238.90409851 -66.81640625]
[247.96955872 -78.76702881]
[257.03503418 -90.71765137]
[266.10049438 -102.66827393]
[275.16595459 -114.61889648]
[277.85855103 -123.34581757]
[284.45428467 -126.67761230]
[293.69503784 -138.49322510]
[302.93576050 -150.30885315]
[312.17648315 -162.12446594]
[321.41723633 -173.94009399]
[324.23825073 -182.62635803]
[330.88241577 -185.86050415]
[340.29641724 -197.53854370]
[349.71038818 -209.21659851]
[359.12438965 -220.89463806]
[354.54751587 -233.89537048]
[356.97253418 -247.35324097]
[365.66091919 -257.77239990]
[378.26129150 -262.50015259]
[391.44525146 -260.40179443]
[401.03045654 -271.93972778]
[410.61566162 -283.47766113]
[411.19558716 -287.77740479]
[412.93765259 -291.31387329]
[415.45944214 -293.81561279]
[418.32977295 -295.16308594]
[421.12225342 -295.39151001]
[431.37106323 -306.34420776]
[441.61990356 -317.29687500]
[451.86874390 -328.24957275]
[462.11758423 -339.20223999]
[472.36642456 -350.15493774]
[482.61526489 -361.10763550]
[492.86410522 -372.06030273]
[499.27136230 -387.75689697]
[516.12823486 -385.94528198]
[519.05389404 -369.24566650]
[503.81677246 -361.81146240]
[493.56796265 -350.85879517]
[483.31912231 -339.90609741]
[473.07028198 -328.95339966]
[462.82144165 -318.00073242]
[452.57260132 -307.04803467]
[442.32376099 -296.09536743]
[432.07492065 -285.14266968]
[422.15359497 -273.89245605]
[412.56838989 -262.35452271]
[402.98318481 -250.81660461]
[407.54013062 -235.04527283]
[401.73995972 -219.51005554]
[387.68319702 -210.40330505]
[370.80242920 -211.48065186]
[361.38845825 -199.80259705]
[351.97445679 -188.12455750]
[342.56045532 -176.44650269]
[333.23284912 -164.69935608]
[323.99209595 -152.88374329]
[314.75137329 -141.06811523]
[305.51065063 -129.25250244]
[296.26992798 -117.43688202]
[287.11657715 -105.55343628]
[278.05111694 -93.60281372]
[268.98565674 -81.65219116]
[259.92019653 -69.70156097]
[250.85472107 -57.75094223]
[249.32717896 -42.93487167]
[234.82247925 -36.61630630]
[225.75701904 -24.66568375]
[224.21920776 -17.43796730]
[216.46867371 -12.60696888]
[207.22793579 -0.79134959]
[197.98721313 11.02427006]
[188.74647522 22.83988953]
[179.50573730 34.65550995]
[170.26501465 46.47113037]
[161.11166382 58.35457230]
[152.04620361 70.30519867]
[105.04402924 120.37025452]
[99.84449005 134.44024658]
[94.64495087 148.51023865]
[89.44541168 162.58024597]
[84.24587250 176.65023804]
[79.04633331 190.72023010]
[79.00717926 199.85301208]
[73.66496277 204.95845032]
[68.25846863 218.95022583]
[62.95531464 232.98150635]
[57.75577545 247.05149841]
[52.55623627 261.12149048]
[47.35669708 275.19149780]
[42.15715790 289.26147461]
[36.95761871 303.33148193]
[31.75808144 317.40148926]
[36.43256760 329.42172241]
[31.81333923 341.03302002]
[20.88310051 346.21310425]
[15.47661400 360.20486450]
[10.07012558 374.19665527]
[9.89627934 383.32788086]
[4.47934151 388.35397339]
[-1.13291931 402.26446533]
[0.87906057 417.95724487]
[-11.05818081 426.86517334]
[-16.67044258 440.77569580]
[-22.17996597 454.72723389]
[-27.58645439 468.71899414]
[-32.99294281 482.71078491]
[-30.74973297 498.37216187]
[-42.55429459 507.45520020]
[-47.96078110 521.44696045]
[-53.36727142 535.43878174]
[-58.77375793 549.43054199]
[-64.18024445 563.42230225]
[-69.58673096 577.41406250]
[-74.99321747 591.40588379]
[-80.39971161 605.39764404]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 24]
[4 23]
[7 20]
[8 19]
[9 18]
[10 17]
[26 212]
[27 211]
[28 210]
[29 209]
[30 208]
[31 207]
[32 206]
[33 205]
[35 203]
[36 202]
[37 201]
[39 200]
[40 199]
[42 197]
[43 196]
[44 194]
[45 193]
[46 192]
[48 189]
[49 188]
[50 187]
[51 186]
[52 185]
[53 184]
[54 183]
[56 182]
[57 181]
[58 179]
[59 178]
[60 177]
[61 176]
[62 175]
[63 174]
[64 73]
[65 72]
[66 71]
[74 82]
[75 81]
[84 173]
[85 172]
[87 171]
[88 170]
[89 169]
[90 168]
[91 167]
[92 166]
[93 164]
[94 163]
[96 161]
[97 160]
[98 159]
[99 158]
[100 157]
[102 156]
[103 155]
[104 154]
[105 153]
[106 152]
[108 151]
[109 150]
[110 149]
[111 148]
[116 144]
[117 143]
[118 142]
[123 141]
[124 140]
[125 139]
[126 138]
[127 137]
[128 136]
[129 135]
[130 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
