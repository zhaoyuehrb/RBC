%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:26:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCCGACCCAAGCGGAAGUGACGUUAGGUGUCCGCCGGAGGUGUCGUUGGUGUGUUGCGCGACUGGCCUUGAGGGAGAGCUGGGGCCUGCUCCCGGAGAGAUACGGCUAUGUCGAUCGAAAUCGAAUCUUCGGAUGUGAUCCGCCUUAUUAUGCAGUACUUGAAGGAGAACAGUUUACAUCGGGCGUUAGCCACCUUGCAGGAGGAGA\
) } def
/len { sequence length } bind def

/coor [
[90.66282654 164.43562317]
[90.59236145 148.63148499]
[101.77692413 137.46542358]
[101.55146027 122.46711731]
[87.09717560 118.45793915]
[79.17814636 131.19721985]
[71.25912476 143.93649292]
[63.43607330 156.73490906]
[55.70942688 169.59178162]
[55.23265457 185.40580750]
[42.04488373 192.32910156]
[34.31824112 205.18595886]
[26.59159470 218.04283142]
[18.86495018 230.89968872]
[24.12555313 245.62585449]
[18.64116669 260.27017212]
[5.00135136 267.91799927]
[-10.35359001 264.95831299]
[-20.17352295 252.78854370]
[-19.82177544 237.15492249]
[-9.46443272 225.43914795]
[6.00808573 223.17304993]
[13.73473072 210.31617737]
[21.46137619 197.45932007]
[29.18802071 184.60244751]
[29.11213303 169.70803833]
[42.85256195 161.86514282]
[50.57920837 149.00827026]
[51.33039093 141.65470886]
[58.51985550 136.01745605]
[66.43888092 123.27819061]
[74.35790253 110.53891754]
[75.88762665 97.39207458]
[82.91135406 88.17228699]
[67.93210602 88.96107483]
[52.95286179 89.74987030]
[37.97361374 90.53865814]
[22.99436951 91.32745361]
[12.44955063 102.79238129]
[-2.75277114 103.37894440]
[-13.61784267 93.25541687]
[-28.59708977 94.04420471]
[-43.57633591 94.83300018]
[-58.55558014 95.62178802]
[-64.39813232 109.72240448]
[-75.78583527 119.88523102]
[-90.45764923 124.09242249]
[-105.50048828 121.50865173]
[-117.92757416 112.64691162]
[-125.27149963 99.26672363]
[-126.07412720 84.02472687]
[-120.17609406 69.94722748]
[-108.74845886 59.82932663]
[-94.06018829 55.67994308]
[-79.02764130 58.32293701]
[-66.63555145 67.23353577]
[-59.34437180 80.64254761]
[-44.36512756 79.85375214]
[-29.38588142 79.06496429]
[-14.40663528 78.27616882]
[-4.66489506 67.06750488]
[10.51495361 66.05417633]
[22.20557785 76.34820557]
[37.18482208 75.55941772]
[52.16407013 74.77062225]
[67.14331818 73.98182678]
[82.12255859 73.19303894]
[96.19640350 68.00392914]
[108.10242462 58.87995911]
[120.00843811 49.75599289]
[131.91445923 40.63202667]
[143.75157166 31.41883659]
[155.51908875 22.11694336]
[167.28662109 12.81504822]
[179.05415344 3.51315331]
[179.06948853 -9.95679379]
[186.72854614 -20.79993820]
[199.05184937 -25.18653870]
[211.46464539 -21.72602081]
[223.37066650 -30.84998703]
[235.27667236 -39.97395325]
[247.18269348 -49.09791946]
[259.08871460 -58.22188568]
[265.33605957 -72.75740051]
[280.14447021 -74.35758209]
[292.05047607 -83.48155212]
[303.95648193 -92.60552216]
[315.86251831 -101.72948456]
[327.76852417 -110.85345459]
[323.87796021 -130.84083557]
[330.47039795 -150.00819397]
[345.69192505 -163.25157166]
[365.40411377 -167.09376526]
[369.19558716 -181.60668945]
[372.98706055 -196.11959839]
[376.77850342 -210.63252258]
[380.56997681 -225.14544678]
[384.36145020 -239.65835571]
[388.15289307 -254.17127991]
[390.95477295 -268.90728760]
[392.75421143 -283.79895020]
[394.55364990 -298.69061279]
[392.47610474 -307.58731079]
[396.49368286 -313.79199219]
[398.51675415 -328.65493774]
[400.53982544 -343.51788330]
[402.56292725 -358.38082886]
[398.70806885 -374.89071655]
[413.50561523 -383.16531372]
[425.55319214 -371.23669434]
[417.42587280 -356.35775757]
[415.40277100 -341.49481201]
[413.37969971 -326.63186646]
[411.35662842 -311.76892090]
[409.44531250 -296.89117432]
[407.64587402 -281.99951172]
[405.84643555 -267.10781860]
[416.51574707 -277.65133667]
[431.16900635 -280.85794067]
[445.26681519 -275.73425293]
[454.44183350 -263.86755371]
[455.85177612 -248.93395996]
[449.05987549 -235.55972290]
[436.17016602 -227.88803101]
[421.17568970 -228.29544067]
[408.72155762 -236.65576172]
[402.66583252 -250.37980652]
[398.87435913 -235.86689758]
[395.08288574 -221.35397339]
[391.29144287 -206.84106445]
[387.49996948 -192.32814026]
[383.70849609 -177.81521606]
[379.91705322 -163.30230713]
[392.50888062 -153.58201599]
[400.12921143 -139.61889648]
[415.05764771 -141.08213806]
[429.98611450 -142.54537964]
[440.00338745 -154.47401428]
[455.16381836 -155.74528503]
[466.47421265 -146.12184143]
[481.40264893 -147.58508301]
[496.33111572 -149.04832458]
[498.78543091 -163.93586731]
[505.01016235 -177.68051147]
[514.58093262 -189.34510803]
[526.84515381 -198.13436890]
[540.96667480 -203.44902039]
[555.98260498 -204.92669678]
[570.86920166 -202.46664429]
[584.61145020 -196.23660278]
[596.27233887 -186.66134644]
[605.05688477 -174.39372253]
[610.36602783 -160.27015686]
[611.83795166 -145.25363159]
[609.37213135 -130.36799622]
[603.13677979 -116.62817383]
[593.55700684 -104.97096252]
[581.28601074 -96.19117737]
[567.16040039 -90.88743591]
[552.14331055 -89.42135620]
[537.25860596 -91.89289856]
[523.52117920 -98.13355255]
[511.86770630 -107.71781158]
[503.09265137 -119.99221802]
[497.79437256 -134.11987305]
[482.86590576 -132.65663147]
[467.93743896 -131.19337463]
[458.71087646 -119.55696106]
[443.59216309 -117.86035919]
[431.44937134 -127.61692047]
[416.52090454 -126.15367889]
[401.59243774 -124.69042969]
[399.61380005 -115.45347595]
[395.45059204 -106.95214081]
[389.34170532 -99.69570160]
[381.64291382 -94.12139130]
[372.80609131 -90.56804657]
[363.35281372 -89.25555420]
[353.84344482 -90.27124023]
[344.84402466 -93.56413269]
[336.89248657 -98.94743347]
[324.98648071 -89.82347107]
[313.08044434 -80.69950104]
[301.17443848 -71.57553864]
[289.26843262 -62.45156860]
[283.87268066 -48.56866074]
[268.21267700 -46.31586838]
[256.30667114 -37.19190216]
[244.40065002 -28.06793594]
[232.49462891 -18.94396973]
[220.58860779 -9.82000351]
[219.09793091 6.93091011]
[205.68994141 17.63212013]
[188.35604858 15.28068256]
[176.58851624 24.58257675]
[164.82098389 33.88447189]
[153.05345154 43.18636703]
[149.75494385 49.80142212]
[141.03842163 52.53804398]
[129.13240051 61.66201019]
[117.22638702 70.78598022]
[105.32037354 79.90994263]
[123.81465149 95.40979767]
[116.54976654 122.24165344]
[116.77523041 137.23995972]
[128.29037476 148.06478882]
[128.69499207 163.86389160]
[117.74902344 175.26396179]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 205]
[4 204]
[5 32]
[6 31]
[7 30]
[8 28]
[9 27]
[11 25]
[12 24]
[13 23]
[14 22]
[34 67]
[35 66]
[36 65]
[37 64]
[38 63]
[41 60]
[42 59]
[43 58]
[44 57]
[68 202]
[69 201]
[70 200]
[71 199]
[72 197]
[73 196]
[74 195]
[75 194]
[79 191]
[80 190]
[81 189]
[82 188]
[83 187]
[85 185]
[86 184]
[87 183]
[88 182]
[89 181]
[93 133]
[94 132]
[95 131]
[96 130]
[97 129]
[98 128]
[99 127]
[100 117]
[101 116]
[102 115]
[104 114]
[105 113]
[106 112]
[107 111]
[135 172]
[136 171]
[137 170]
[140 167]
[141 166]
[142 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
