%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:21:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGUACAGAGCAAGUCCCACGCACAGUCCUGAAAAAAAUUUUAAUCUUCUUUUCUUAGAACUAUCUUGGUUGGCAUCAUCAGGCCCUGAGAGCACAGUGCAUGUCAGCAUCUAAGAUUCCACUUUUCAAAAUGAAGGACCUGAUACUGAUCCUAUGCCUCCUGGAAAUGAGUUUUGCAGUGCCGUUCUUUCCUCAGCAAU\
) } def
/len { sequence length } bind def

/coor [
[89.57689667 416.46752930]
[74.75193024 413.21405029]
[62.10551453 404.82165527]
[53.34796524 392.42529297]
[49.66366959 377.70147705]
[51.55089569 362.64151001]
[58.75441742 349.28210449]
[70.30001068 339.43002319]
[84.62623596 334.41766357]
[85.09273529 319.42492676]
[85.55923462 304.43218994]
[76.43911743 289.44277954]
[86.25811005 273.86889648]
[86.49138641 258.87069702]
[86.72466278 243.87251282]
[75.24100494 238.58636475]
[66.57952118 229.31381226]
[62.05407333 217.40960693]
[62.37069702 204.63140869]
[67.51765442 192.88031006]
[76.76195526 183.91796875]
[88.75352478 179.10253906]
[89.45313263 164.11885071]
[90.15274048 149.13517761]
[90.85234833 134.15150452]
[85.11534882 129.32067871]
[82.48519897 144.08828735]
[68.38102722 149.19439697]
[56.90686035 139.53294373]
[59.53674316 124.76528931]
[73.64136505 119.65901947]
[67.90437317 114.82819366]
[53.25852966 118.06845856]
[38.61268616 121.30872345]
[23.96684456 124.54899597]
[9.32100391 127.78926086]
[-2.48194337 138.32496643]
[-16.58011246 133.51965332]
[-31.22595215 136.75993347]
[-37.29581451 151.04055786]
[-50.61767197 158.99717712]
[-66.06900024 157.57028198]
[-77.70845032 147.30857849]
[-81.06041718 132.15786743]
[-74.83599854 117.94392395]
[-61.42860794 110.13229370]
[-45.99366760 111.72670746]
[-34.46622086 122.11408997]
[-19.82037926 118.87381744]
[-9.06500053 108.56988525]
[6.08073664 113.14341736]
[20.72657776 109.90315247]
[35.37242126 106.66288757]
[50.01826096 103.42261505]
[64.66410065 100.18235016]
[81.10890198 77.84178925]
[103.73886871 77.40758514]
[110.89966583 64.22718048]
[118.06046295 51.04677963]
[125.22126007 37.86637878]
[132.38206482 24.68597794]
[139.54286194 11.50557709]
[146.70365906 -1.67482412]
[144.83467102 -23.01774979]
[162.86048889 -33.06150055]
[169.39875793 -46.56154251]
[175.93702698 -60.06158066]
[174.98872375 -75.85433960]
[187.49992371 -83.93634796]
[194.03819275 -97.43639374]
[190.54988098 -109.85881805]
[196.27919006 -120.97074127]
[207.66781616 -125.06163788]
[214.41525269 -138.45835876]
[221.16267395 -151.85508728]
[227.91009521 -165.25181580]
[234.65753174 -178.64854431]
[232.59465027 -198.69639587]
[249.19456482 -208.60438538]
[255.52209473 -222.20446777]
[261.84960938 -235.80456543]
[268.17715454 -249.40464783]
[274.50466919 -263.00473022]
[275.78616333 -277.94989014]
[271.86636353 -292.42868042]
[260.79162598 -303.72738647]
[264.93414307 -318.03433228]
[261.01431274 -332.51312256]
[257.09448242 -346.99188232]
[243.26411438 -354.64016724]
[238.97303772 -369.85076904]
[246.76710510 -383.59951782]
[262.02221680 -387.72952271]
[275.68780518 -379.79052734]
[279.65628052 -364.49258423]
[271.57327271 -350.91171265]
[275.49310303 -336.43295288]
[279.41293335 -321.95416260]
[290.20727539 -311.69107056]
[286.34512329 -296.34851074]
[290.26495361 -281.86972046]
[297.56179810 -280.13589478]
[319.45230103 -274.93444824]
[329.46612549 -286.10238647]
[339.47994995 -297.27035522]
[349.49377441 -308.43832397]
[359.50759888 -319.60629272]
[369.52142334 -330.77423096]
[369.60122681 -343.67691040]
[378.17776489 -352.77322388]
[390.25335693 -353.55816650]
[400.43966675 -364.56906128]
[410.62594604 -375.57992554]
[396.07766724 -371.92651367]
[381.36700439 -374.85855103]
[369.33117676 -383.81054688]
[362.29138184 -397.05596924]
[361.60543823 -412.04028320]
[367.40557861 -425.87350464]
[378.57318115 -435.88772583]
[392.95440674 -440.15155029]
[407.77563477 -437.84262085]
[420.17837524 -429.40628052]
[427.77056885 -416.46957397]
[429.08798218 -401.52752686]
[423.87515259 -387.45989990]
[435.92761230 -396.38955688]
[447.98007202 -405.31918335]
[460.03253174 -414.24880981]
[469.15975952 -428.53619385]
[485.41549683 -423.72079468]
[485.28829956 -406.76733398]
[468.96215820 -402.19635010]
[456.90969849 -393.26672363]
[444.85723877 -384.33709717]
[432.80477905 -375.40747070]
[421.63684082 -365.39364624]
[411.45053101 -354.38275146]
[401.26425171 -343.37188721]
[398.31634521 -326.07537842]
[380.68939209 -320.76043701]
[370.67556763 -309.59246826]
[360.66174316 -298.42449951]
[350.64791870 -287.25653076]
[340.63409424 -276.08856201]
[330.62026978 -264.92062378]
[288.10476685 -256.67721558]
[281.77722168 -243.07713318]
[275.44970703 -229.47703552]
[269.12219238 -215.87695312]
[262.79464722 -202.27685547]
[267.14968872 -193.02333069]
[265.65719604 -182.68371582]
[258.57150269 -174.71092224]
[248.05424500 -171.90110779]
[241.30682373 -158.50437927]
[234.55940247 -145.10766602]
[227.81196594 -131.71093750]
[221.06454468 -118.31420898]
[223.01045227 -100.87654114]
[207.53823853 -90.89812469]
[200.99996948 -77.39808655]
[202.41593933 -62.57093811]
[189.43707275 -53.52331543]
[182.89880371 -40.02327347]
[176.36053467 -26.52323532]
[180.60682678 -18.71132851]
[180.78070068 -9.68397522]
[176.71646118 -1.46754682]
[169.21389771 4.03534222]
[159.88404846 5.48597383]
[152.72325134 18.66637421]
[145.56245422 31.84677505]
[138.40165710 45.02717590]
[131.24085999 58.20757675]
[124.08006287 71.38797760]
[116.91926575 84.56838226]
[127.03703308 99.33284760]
[124.05371094 119.85662842]
[105.83602142 134.85110474]
[105.13641357 149.83477783]
[104.43681335 164.81846619]
[103.73720551 179.80213928]
[118.74438477 188.93457031]
[127.02086639 204.32928467]
[126.36807251 221.70649719]
[117.05572510 236.28681946]
[101.72284698 244.10580444]
[101.48957062 259.10397339]
[101.25629425 274.10217285]
[109.65927124 283.89373779]
[109.15206146 296.38543701]
[100.55197906 304.89868164]
[100.08547974 319.89141846]
[99.61898041 334.88415527]
[113.60588074 340.77749634]
[124.51663971 351.32830811]
[130.87567139 365.10971069]
[131.82298279 380.25787354]
[127.23043823 394.72415161]
[117.71915436 406.55206299]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 195]
[10 194]
[11 193]
[13 190]
[14 189]
[15 188]
[22 183]
[23 182]
[24 181]
[25 180]
[32 55]
[33 54]
[34 53]
[35 52]
[36 51]
[38 49]
[39 48]
[57 177]
[58 176]
[59 175]
[60 174]
[61 173]
[62 172]
[63 171]
[65 166]
[66 165]
[67 164]
[69 162]
[70 161]
[73 159]
[74 158]
[75 157]
[76 156]
[77 155]
[79 151]
[80 150]
[81 149]
[82 148]
[83 147]
[84 101]
[85 100]
[87 98]
[88 97]
[89 96]
[103 146]
[104 145]
[105 144]
[106 143]
[107 142]
[108 141]
[111 139]
[112 138]
[113 137]
[126 136]
[127 135]
[128 134]
[129 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
