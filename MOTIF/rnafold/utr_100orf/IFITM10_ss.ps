%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:40:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAAGGGUUCAGAGUCAGGCACAGGCAGGCAGACAGGACCCCAAGCAGGACUGGCCUUCCAGACAGGAAAGAGGGUUGCGGAGACACAGGAGGCCAGUUGAGAGUGGCAGAGGAGAAAGGAGUUUCAUGGGAGGAUGGGGCUUGGAGAGAGAUGAGGGAGGGAAAACGGGGGCCGCCAUGCAUCCUCAGCUUCCGGGGGACUUUGGAGAGGGUCGAGGCUCAGUGGGAGCUGGAGGCCCAGGGCCCCGGCC\
) } def
/len { sequence length } bind def

/coor [
[114.12842560 235.67864990]
[99.18502808 236.98051453]
[89.76109314 225.31048584]
[94.17995453 210.97677612]
[95.61824799 196.04588318]
[88.14656067 196.69697571]
[79.72609711 209.11050415]
[71.30563354 221.52404785]
[62.88516617 233.93757629]
[54.46470261 246.35110474]
[46.04423904 258.76464844]
[48.69995499 269.27734375]
[45.21788025 279.31420898]
[36.96948624 285.65594482]
[26.81208992 286.40911865]
[18.08596802 298.60971069]
[9.35984516 310.81033325]
[10.70041943 323.62088013]
[3.20341802 333.59820557]
[-8.68609905 335.73281860]
[-17.56304359 347.82412720]
[-12.71326160 362.56384277]
[-17.48553848 377.32882690]
[-30.04483795 386.44165039]
[-45.56185150 386.39825439]
[-58.06997299 377.21530151]
[-62.75957489 362.42385864]
[-57.82740402 347.71148682]
[-45.16998672 338.73544312]
[-29.65435600 338.94717407]
[-20.77741241 326.85586548]
[-19.78576851 309.32345581]
[-2.84076071 302.08419800]
[5.88536167 289.88360596]
[14.61148357 277.68298340]
[15.10578156 258.33767700]
[33.63070679 250.34417725]
[42.05117035 237.93064880]
[50.47163391 225.51712036]
[58.89209747 213.10357666]
[67.31256104 200.69004822]
[75.73302460 188.27651978]
[90.90229034 174.32879639]
[107.11479187 173.33734131]
[104.15419006 158.63241577]
[101.19359589 143.92749023]
[98.23299408 129.22256470]
[74.76776123 125.19661713]
[58.03186035 102.47819519]
[61.94616699 70.05371857]
[47.58028793 65.73844910]
[33.21440887 61.42318726]
[18.84852982 57.10792160]
[4.48264980 52.79265976]
[-9.88323021 48.47739410]
[-24.24910927 44.16213226]
[-38.61499023 39.84686661]
[-52.98086929 35.53160095]
[-67.54328156 31.93491173]
[-82.26630402 29.06566811]
[-96.98932648 26.19642258]
[-114.27522278 32.57903671]
[-127.04186249 20.52159500]
[-141.79937744 17.83538818]
[-156.55690002 15.14918137]
[-166.43286133 26.91186523]
[-180.87252808 32.14558029]
[-195.99168396 29.44248009]
[-207.72335815 19.52968597]
[-212.91178894 5.07369089]
[-210.16130066 -10.03691578]
[-200.21179199 -21.73745728]
[-185.73959351 -26.88054657]
[-170.63768005 -24.08271790]
[-158.96838379 -14.09657288]
[-153.87069702 0.39166459]
[-139.11317444 3.07787204]
[-124.35565948 5.76407909]
[-114.25027466 -0.85395825]
[-101.94788361 1.24437439]
[-94.12007904 11.47339821]
[-79.39705658 14.34264374]
[-64.67403412 17.21188927]
[-74.04364014 5.49819899]
[-74.83477783 -9.48092270]
[-66.75119781 -22.11641884]
[-52.81986618 -27.67681885]
[-38.25749207 -24.07998657]
[-28.51707458 -12.67278290]
[-27.24599838 2.27326560]
[-34.92023087 15.16148472]
[-48.66560364 21.16572380]
[-34.29972458 25.48098755]
[-19.93384552 29.79625130]
[-5.56796598 34.11151505]
[8.79791355 38.42678070]
[23.16379356 42.74204254]
[37.52967453 47.05730820]
[51.89555359 51.37257004]
[66.26142883 55.68783569]
[72.59588623 51.67227936]
[62.05748749 40.99790955]
[51.51909256 30.32353973]
[40.98069382 19.64916992]
[30.44229698 8.97480011]
[16.16800499 4.36561537]
[5.34915876 -6.02440739]
[0.16675250 -20.10072327]
[1.66551733 -35.02565765]
[9.54331398 -47.79046631]
[22.21204185 -55.82186508]
[37.11778641 -57.50078201]
[51.25566864 -52.48876953]
[61.77560425 -41.79620361]
[66.55686188 -27.57862473]
[64.63504791 -12.70076275]
[69.79248047 1.38472068]
[74.94992065 15.47020435]
[80.10736084 29.55568695]
[85.26479340 43.64117050]
[91.59925079 39.62561417]
[93.82611084 24.79183388]
[96.05297852 9.95805168]
[98.27983856 -4.87573004]
[100.50670624 -19.70951271]
[102.73356628 -34.54329300]
[104.96042633 -49.37707520]
[107.18729401 -64.21085358]
[109.41415405 -79.04463959]
[99.82134247 -91.60463715]
[102.00223541 -107.25772858]
[114.66294861 -116.71720886]
[130.29211426 -114.37094116]
[139.61720276 -101.61092377]
[137.10583496 -86.00744629]
[124.24794006 -76.81777191]
[122.02107239 -61.98399353]
[119.79421234 -47.15021133]
[117.56734467 -32.31642914]
[115.34048462 -17.48264885]
[113.11362457 -2.64886689]
[110.88675690 12.18491459]
[108.65989685 27.01869583]
[106.43302917 41.85247803]
[112.66581726 46.02409363]
[126.12403870 39.40017700]
[125.13139343 54.36732483]
[131.36418152 58.53894043]
[144.22860718 50.82490158]
[157.09304810 43.11086273]
[162.82395935 36.03339386]
[170.16545105 35.38205338]
[183.12467957 27.82834816]
[196.08390808 20.27464485]
[209.04313660 12.72093964]
[213.20071411 -4.28448820]
[228.08445740 -12.84124756]
[244.22360229 -8.06893349]
[257.08804321 -15.78297138]
[264.94442749 -29.51570511]
[279.83874512 -29.42521667]
[292.70318604 -37.13925552]
[291.77011108 -52.41629410]
[298.05410767 -66.37230682]
[310.11111450 -75.80029297]
[325.17056274 -78.53377533]
[339.77185059 -73.94461823]
[350.55975342 -63.08737564]
[355.05529785 -48.45697021]
[352.22540283 -33.41535187]
[342.72036743 -21.41897964]
[328.72436523 -15.22452927]
[313.45364380 -16.25544357]
[300.41720581 -24.27482224]
[287.55279541 -16.56078529]
[280.61654663 -3.37980938]
[264.80209351 -2.91853857]
[251.93765259 4.79549885]
[250.59419250 17.59474373]
[242.00212097 27.43568039]
[229.12336731 30.58579445]
[216.59683228 25.68016624]
[203.63761902 33.23387146]
[190.67839050 40.78757477]
[177.71916199 48.34127808]
[164.80708313 55.97529602]
[151.94264221 63.68933487]
[139.07821655 71.40337372]
[137.73034668 109.25943756]
[112.93791962 126.26196289]
[115.89852142 140.96688843]
[118.85912323 155.67181396]
[121.81971741 170.37673950]
[128.80325317 183.65191650]
[139.24394226 194.42187500]
[149.68464661 205.19181824]
[160.12535095 215.96176147]
[170.56604004 226.73171997]
[181.00674438 237.50166321]
[196.57817078 237.91209412]
[207.01309204 248.98309326]
[206.52584839 263.82553101]
[216.96655273 274.59548950]
[216.90942383 259.59558105]
[226.42658997 248.00148010]
[241.15002441 245.13436890]
[254.32226562 252.31018066]
[259.89776611 266.23547363]
[255.31756592 280.51910400]
[242.68382263 288.60540771]
[227.79518127 286.78326416]
[237.26150513 298.41894531]
[246.72782898 310.05459595]
[256.19415283 321.69027710]
[265.66046143 333.32592773]
[283.10418701 334.80459595]
[293.85903931 348.18658447]
[291.63909912 364.86947632]
[301.24917603 376.38671875]
[310.85925293 387.90393066]
[320.46932983 399.42117310]
[330.07937622 410.93838501]
[345.86389160 413.80697632]
[353.33541870 428.00399780]
[346.76245117 442.63873291]
[331.18719482 446.48468018]
[318.55767822 436.59152222]
[318.56216431 420.54846191]
[308.95208740 409.03121948]
[299.34201050 397.51400757]
[289.73196411 385.99676514]
[280.12188721 374.47955322]
[267.26882935 375.13092041]
[256.21789551 368.16351318]
[251.11466980 355.92657471]
[254.02479553 342.79226685]
[244.55847168 331.15658569]
[235.09216309 319.52093506]
[225.62583923 307.88525391]
[216.15951538 296.24957275]
[206.19659424 285.03619385]
[195.75590515 274.26623535]
[180.90548706 274.29257202]
[170.16371155 263.51904297]
[170.23678589 247.94236755]
[159.79609680 237.17240906]
[149.35539246 226.40246582]
[138.91470337 215.63252258]
[128.47399902 204.86256409]
[118.03330231 194.09262085]
[110.56161499 194.74371338]
[114.56079865 209.20075989]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 42]
[7 41]
[8 40]
[9 39]
[10 38]
[11 37]
[15 35]
[16 34]
[17 33]
[20 31]
[21 30]
[44 193]
[45 192]
[46 191]
[47 190]
[50 100]
[51 99]
[52 98]
[53 97]
[54 96]
[55 95]
[56 94]
[57 93]
[58 92]
[59 83]
[60 82]
[61 81]
[63 78]
[64 77]
[65 76]
[121 144]
[122 143]
[123 142]
[124 141]
[125 140]
[126 139]
[127 138]
[128 137]
[129 136]
[148 188]
[149 187]
[150 186]
[152 185]
[153 184]
[154 183]
[155 182]
[158 178]
[159 177]
[161 175]
[162 174]
[194 250]
[195 249]
[196 248]
[197 247]
[198 246]
[199 245]
[202 242]
[203 241]
[211 240]
[212 239]
[213 238]
[214 237]
[215 236]
[218 232]
[219 231]
[220 230]
[221 229]
[222 228]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
