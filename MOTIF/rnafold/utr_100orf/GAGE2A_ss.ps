%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:44:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCCCACGUGAAGAACGCCAGGGAGCUGUGAGGCAGUGCUGUGUGGUUCCUGCCGUCCGGACUCUUUUUCCUCUACUGAGAUUCAUCUGUGUGAAAUAUGAGUUGGCGAGGAAGAUCGACCUAUCGGCCUAGACCAAGACGCUACGUAGAGCCUCCUGAAAUGAUUGGGCCUAUGCGGCCCGAGCAGUUCAGUGAUG\
) } def
/len { sequence length } bind def

/coor [
[110.64950562 127.88401794]
[109.33916473 112.94136047]
[101.95310211 114.24372864]
[95.93914795 127.98535156]
[89.92518616 141.72697449]
[93.07097626 161.63139343]
[77.03686523 172.42749023]
[71.46192932 186.35299683]
[65.88699341 200.27851868]
[70.85514832 215.53292847]
[61.90641785 228.84832764]
[45.90549850 230.01028442]
[35.12692642 218.12744141]
[37.83909988 202.31529236]
[51.96147156 194.70358276]
[57.53640747 180.77806091]
[63.11134720 166.85255432]
[58.25572205 157.84684753]
[59.18382263 147.43713379]
[65.82944489 139.08848572]
[76.18356323 135.71302795]
[82.19751740 121.97139740]
[88.21147919 108.22976685]
[75.27725220 115.82620239]
[60.58809280 112.78834534]
[51.72804260 100.68465424]
[53.27156448 85.76427460]
[64.42173767 75.73065186]
[79.42169952 75.76415253]
[90.52786255 85.84931946]
[87.45575714 71.16728210]
[84.38365936 56.48524857]
[81.31156158 41.80321121]
[78.23946381 27.12117386]
[65.29570770 18.45532227]
[62.38931274 3.52188540]
[70.73064423 -8.76460075]
[67.65854645 -23.44663811]
[64.58644867 -38.12867355]
[50.47827148 -52.51758957]
[57.27692413 -70.61252594]
[53.74053955 -85.18970490]
[50.20415497 -99.76687622]
[46.66777039 -114.34404755]
[42.78548813 -128.83293152]
[38.55949783 -143.22532654]
[34.33351135 -157.61772156]
[30.10752106 -172.01011658]
[15.64335442 -177.31050110]
[7.17268848 -189.96360779]
[7.76981068 -205.00048828]
[16.99631119 -216.66279602]
[12.77032280 -231.05519104]
[8.54433537 -245.44758606]
[4.31834650 -259.83999634]
[-10.14582062 -265.14038086]
[-18.61648750 -277.79348755]
[-18.01936340 -292.83035278]
[-8.79286385 -304.49267578]
[-13.01885128 -318.88507080]
[-17.54414558 -323.72879028]
[-18.75407028 -329.29528809]
[-17.14279556 -333.80145264]
[-20.91001511 -348.32067871]
[-34.12781525 -361.13433838]
[-28.80807495 -377.85284424]
[-32.80518341 -392.31045532]
[-36.80228806 -406.76809692]
[-40.79939651 -421.22573853]
[-44.79650497 -435.68334961]
[-48.79360962 -450.14099121]
[-52.79071808 -464.59863281]
[-56.78782654 -479.05627441]
[-68.07613373 -481.15505981]
[-77.71974945 -487.29141235]
[-84.34282684 -496.54440308]
[-87.01748657 -507.55181885]
[-85.39370728 -518.71069336]
[-79.74457550 -528.41058350]
[-70.92127991 -535.26629639]
[-74.22593689 -549.89770508]
[-77.53059387 -564.52917480]
[-80.83525085 -579.16064453]
[-84.13991547 -593.79205322]
[-87.44457245 -608.42352295]
[-90.74922943 -623.05499268]
[-105.55197144 -626.94567871]
[-116.84323120 -637.27844238]
[-122.02836609 -651.67889404]
[-119.91586304 -666.83789062]
[-110.99115753 -679.27203369]
[-97.30509186 -686.12408447]
[-82.00261688 -685.81939697]
[-68.60012817 -678.42803955]
[-60.17742538 -665.64849854]
[-58.66997528 -650.41741943]
[-64.42418671 -636.23474121]
[-76.11778259 -626.35961914]
[-72.81312561 -611.72814941]
[-69.50846863 -597.09674072]
[-66.20380402 -582.46527100]
[-62.89915085 -567.83386230]
[-59.59449005 -553.20239258]
[-56.28983307 -538.57092285]
[-38.72959900 -532.20440674]
[-28.46212387 -516.42156982]
[-29.77933884 -497.48870850]
[-42.33019257 -483.05337524]
[-38.33308411 -468.59573364]
[-34.33597946 -454.13809204]
[-30.33887100 -439.68048096]
[-26.34176445 -425.22283936]
[-22.34465599 -410.76519775]
[-18.34754944 -396.30758667]
[-14.35044193 -381.84994507]
[-3.98025966 -375.60913086]
[-0.53613240 -363.58862305]
[-6.39078426 -352.08792114]
[-2.62356424 -337.56869507]
[1.37354290 -323.11105347]
[5.59953117 -308.71865845]
[19.66648293 -303.89590454]
[28.29835892 -291.56890869]
[28.01317024 -276.34484863]
[18.71074104 -264.06597900]
[22.93672943 -249.67358398]
[27.16271782 -235.28118896]
[31.38870621 -220.88879395]
[45.45565796 -216.06604004]
[54.08753586 -203.73905945]
[53.80234528 -188.51499939]
[44.49991608 -176.23611450]
[48.72590637 -161.84371948]
[52.95189285 -147.45132446]
[57.17787933 -133.05892944]
[60.09151459 -131.05538940]
[62.17502594 -127.53603363]
[62.72431564 -122.90850067]
[61.24494553 -117.88043213]
[64.78132629 -103.30326080]
[68.31771088 -88.72608948]
[71.85409546 -74.14891052]
[81.03318787 -69.62962341]
[86.31541443 -60.61176682]
[85.74473572 -49.95632172]
[79.26848602 -41.20077515]
[82.34058380 -26.51873779]
[85.41268158 -11.83670044]
[97.98027802 -3.92524242]
[101.30497742 10.92066765]
[92.92150116 24.04907417]
[95.99359894 38.73110962]
[99.06569672 53.41314697]
[102.13779449 68.09518433]
[105.20989990 82.77722168]
[142.35334778 98.68309784]
[152.70452881 109.53910828]
[163.05572510 120.39511871]
[173.40690613 131.25112915]
[183.75808716 142.10713196]
[198.88104248 146.75544739]
[202.06411743 161.30595398]
[212.41529846 172.16195679]
[227.53826904 176.81027222]
[230.72134399 191.36077881]
[241.07252502 202.21678162]
[251.42370605 213.07279968]
[261.77490234 223.92880249]
[272.12606812 234.78482056]
[282.47726440 245.64082336]
[292.82846069 256.49682617]
[308.76818848 258.31454468]
[317.16287231 271.98602295]
[311.57278442 287.02365112]
[296.28619385 291.89187622]
[283.02966309 282.85620117]
[281.97244263 266.84802246]
[271.62124634 255.99201965]
[261.27008057 245.13600159]
[250.91888428 234.27999878]
[240.56770325 223.42398071]
[230.21650696 212.56797791]
[219.86532593 201.71195984]
[205.48275757 197.84014893]
[201.55929565 182.51315308]
[191.20811462 171.65713501]
[176.82554626 167.78532410]
[172.90208435 152.45832825]
[162.55088806 141.60231018]
[152.19970703 130.74630737]
[141.84852600 119.89028931]
[131.49732971 109.03427887]
[124.11128235 110.33663940]
[127.99064636 124.82630920]
[136.84947205 136.93090820]
[131.25444031 150.84835815]
[116.48229218 153.45291138]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 23]
[4 22]
[5 21]
[7 17]
[8 16]
[9 15]
[30 155]
[31 154]
[32 153]
[33 152]
[34 151]
[37 148]
[38 147]
[39 146]
[41 142]
[42 141]
[43 140]
[44 139]
[45 135]
[46 134]
[47 133]
[48 132]
[52 128]
[53 127]
[54 126]
[55 125]
[59 121]
[60 120]
[63 119]
[64 118]
[66 115]
[67 114]
[68 113]
[69 112]
[70 111]
[71 110]
[72 109]
[73 108]
[80 104]
[81 103]
[82 102]
[83 101]
[84 100]
[85 99]
[86 98]
[156 192]
[157 191]
[158 190]
[159 189]
[160 188]
[162 186]
[163 185]
[165 183]
[166 182]
[167 181]
[168 180]
[169 179]
[170 178]
[171 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
