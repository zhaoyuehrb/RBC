%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:17:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUUGUGGGGAAGCGCAGGAGGCGGGGCUUUGCGUGAGUCACUGCCGGGCUCGGCGUGAGUCGCUGCGGGGCUGACGGGGUGGCAGUGCGGCGGGUUACGGCCUGGUCAGACCAUAAUGACUUCAGCAAAUAAAGCAAUCGAAUUACAACUACAAGUGAAACAAAAUGCAGAAGAAUUACAAGACUUUAUGCGGGAUUUAGAAAACUGGGAAAAAG\
) } def
/len { sequence length } bind def

/coor [
[406.56796265 379.08673096]
[395.25759888 369.23400879]
[383.94726562 359.38128662]
[372.63693237 349.52856445]
[361.32656860 339.67584229]
[350.01623535 329.82315063]
[338.70587158 319.97042847]
[327.39553833 310.11770630]
[314.81411743 318.21002197]
[300.44772339 322.43353271]
[285.45822144 322.43771362]
[271.06036377 318.21368408]
[258.42340088 310.09558105]
[248.57609558 298.73413086]
[242.32296753 285.04446411]
[240.17854309 270.13250732]
[242.32508850 255.20553589]
[248.59707642 241.47448730]
[237.28672791 231.62176514]
[222.49125671 232.89823914]
[210.88059998 223.06730652]
[209.64202881 207.53979492]
[198.33168030 197.68707275]
[185.73666382 202.96127319]
[172.03211975 202.29197693]
[159.89447021 195.75286865]
[151.71870422 184.56948853]
[149.14587402 170.88998413]
[152.73390198 157.37257385]
[141.56738281 147.35716248]
[130.40086365 137.34173584]
[119.23432922 127.32630920]
[108.06780243 117.31089020]
[93.59431458 117.99231720]
[82.80780792 108.31774139]
[81.91677094 93.85563660]
[70.75024414 83.84021759]
[59.58372116 73.82479095]
[48.41719437 63.80937195]
[37.25066757 53.79394913]
[26.08414268 43.77852631]
[14.42467594 34.34153366]
[2.30219793 25.50719452]
[-9.82028008 16.67285538]
[-22.00638771 7.92649937]
[-34.25548935 -0.73141736]
[-46.50458908 -9.38933372]
[-58.75369263 -18.04725075]
[-71.00279236 -26.70516777]
[-83.25189209 -35.36308289]
[-87.57699585 -35.60668182]
[-91.23348999 -37.06495667]
[-93.92207336 -39.37933731]
[-95.49031830 -42.13094711]
[-95.93963623 -44.89361954]
[-107.66710663 -54.24596786]
[-119.39458466 -63.59831619]
[-131.12205505 -72.95066071]
[-142.84953308 -82.30300903]
[-158.46305847 -84.85800934]
[-163.58952332 -98.84259796]
[-175.31698608 -108.19494629]
[-187.04446411 -117.54729462]
[-198.77194214 -126.89964294]
[-210.49940491 -136.25198364]
[-222.22688293 -145.60433960]
[-233.95434570 -154.95668030]
[-245.68182373 -164.30903625]
[-261.17868042 -162.73271179]
[-272.93878174 -172.38438416]
[-274.34606934 -187.16799927]
[-286.07354736 -196.52033997]
[-297.80099487 -205.87269592]
[-312.72250366 -201.61492920]
[-327.28530884 -206.97254944]
[-335.88973999 -219.88548279]
[-335.22720337 -235.38839722]
[-325.55245972 -247.52014160]
[-310.58566284 -251.61578369]
[-296.08181763 -246.10049438]
[-287.61798096 -233.09498596]
[-288.44866943 -217.60015869]
[-276.72119141 -208.24781799]
[-264.99371338 -198.89547729]
[-250.26760864 -200.81314087]
[-238.24105835 -191.49559021]
[-236.32948303 -176.03649902]
[-224.60200500 -166.68415833]
[-212.87452698 -157.33180237]
[-201.14706421 -147.97946167]
[-189.41958618 -138.62712097]
[-177.69210815 -129.27476501]
[-165.96464539 -119.92241669]
[-154.23716736 -110.57007599]
[-139.46246338 -108.68401337]
[-133.49717712 -94.03047943]
[-121.76970673 -84.67813110]
[-110.04223633 -75.32579041]
[-98.31476593 -65.97344208]
[-86.58728790 -56.62109375]
[-74.59397888 -47.61218643]
[-62.34487534 -38.95426941]
[-50.09577560 -30.29635239]
[-37.84667587 -21.63843536]
[-25.59757233 -12.98051834]
[-13.34847164 -4.32260180]
[-6.07528591 -3.02935386]
[-0.98594171 4.55037832]
[11.13653564 13.38471603]
[23.25901413 22.21905518]
[20.81431198 7.41961432]
[28.34918022 -5.55057240]
[42.41640091 -10.75761509]
[56.58018875 -5.81927919]
[64.36057281 7.00513506]
[62.19801331 21.84842682]
[51.08188629 31.91975784]
[36.09956360 32.61199951]
[47.26609039 42.62742233]
[58.43261719 52.64284515]
[69.59914398 62.65826797]
[80.76567078 72.67369080]
[91.93219757 82.68910980]
[106.40568542 82.00768280]
[117.19219208 91.68225861]
[118.08322906 106.14436340]
[129.24975586 116.15978241]
[140.41627502 126.17520905]
[151.58280945 136.19062805]
[162.74932861 146.20605469]
[178.41317749 140.90454102]
[194.52067566 144.20812988]
[206.69320679 155.12210083]
[211.67071533 170.59620667]
[208.18438721 186.37672424]
[219.49473572 196.22944641]
[235.04544067 195.32746887]
[246.37538147 205.48063660]
[247.13945007 220.31141663]
[258.44979858 230.16413879]
[271.19128418 222.06880188]
[285.68301392 217.89602661]
[300.74816895 217.97573853]
[315.16586304 222.29293823]
[327.77011108 230.48956299]
[337.54409790 241.89418030]
[343.70220947 255.57696533]
[345.75317383 270.42550659]
[343.53921509 285.23529053]
[337.24822998 298.80734253]
[348.55859375 308.66006470]
[359.86892700 318.51278687]
[371.17929077 328.36550903]
[382.48962402 338.21823120]
[393.79998779 348.07095337]
[405.11032104 357.92364502]
[416.42068481 367.77636719]
[433.01361084 355.48541260]
[452.11959839 347.67269897]
[472.55514526 344.81817627]
[493.05538940 347.09460449]
[512.35247803 354.35745239]
[529.25384521 366.15377808]
[542.71606445 381.75070190]
[551.90899658 400.18075562]
[556.26739502 420.30203247]
[555.52520752 440.86886597]
[549.73223877 460.60897827]
[562.89978027 467.79336548]
[576.06732178 474.97778320]
[589.28656006 482.06668091]
[602.55676270 489.05969238]
[615.82690430 496.05273438]
[629.09710693 503.04574585]
[642.04901123 494.79086304]
[657.39385986 494.13391113]
[671.00390625 501.25164795]
[679.21813965 514.22937012]
[679.82702637 529.57617188]
[672.66668701 543.16387939]
[659.66320801 551.33740234]
[644.31457520 551.89813232]
[630.74938965 544.69525146]
[622.61669922 531.66625977]
[622.10406494 516.31591797]
[608.83386230 509.32290649]
[595.56372070 502.32986450]
[582.29351807 495.33685303]
[574.91400146 494.99954224]
[568.88293457 488.14532471]
[555.71539307 480.96090698]
[542.54785156 473.77651978]
[536.43426514 481.81680298]
[529.38494873 489.05297852]
[521.50482178 495.37683105]
[512.91125488 500.69369507]
[503.73211670 504.92395020]
[494.10424805 508.00415039]
[484.17111206 509.88796997]
[474.08081055 510.54690552]
[463.98385620 509.97076416]
[454.03088379 508.16775513]
[444.37042236 505.16439819]
[435.14669800 501.00506592]
[426.49743652 495.75149536]
[418.55191040 489.48175049]
[411.42883301 482.28897095]
[405.23474121 474.28027344]
[400.06237793 465.57479858]
[395.98919678 456.30224609]
[393.07632446 446.60079956]
[391.36761475 436.61502075]
[390.88888550 426.49383545]
[391.64770508 416.38818359]
[393.63311768 406.44882202]
[396.81588745 396.82415771]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 157]
[2 156]
[3 155]
[4 154]
[5 153]
[6 152]
[7 151]
[8 150]
[18 140]
[19 139]
[22 136]
[23 135]
[29 130]
[30 129]
[31 128]
[32 127]
[33 126]
[36 123]
[37 122]
[38 121]
[39 120]
[40 119]
[41 118]
[42 110]
[43 109]
[44 108]
[45 106]
[46 105]
[47 104]
[48 103]
[49 102]
[50 101]
[55 100]
[56 99]
[57 98]
[58 97]
[59 96]
[61 94]
[62 93]
[63 92]
[64 91]
[65 90]
[66 89]
[67 88]
[68 87]
[71 84]
[72 83]
[73 82]
[168 192]
[169 191]
[170 190]
[171 188]
[172 187]
[173 186]
[174 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
