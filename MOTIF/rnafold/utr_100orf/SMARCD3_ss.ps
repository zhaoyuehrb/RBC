%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:07:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGGGCCGAGCCGAGCGCCGAGCAGGGAGCGGGCGGCCGCGCUCCGGGCCGGGGUCCCGGGGGAGCAGAUCCUCAGAAUGGCCCUUGGUGCUGCAGGCGCGGUGGGCUCCGGGCCCAGGCACCGAGGGGGCACUGGAUGACUCUCCAGGUGCAGGACCCUGCCAUCUAUGACUCCAGGUCUUCAGCACCCACCCACCGUGGUACAGCGCCCCGGGAUGCCGUCUGGAGCCCGGAUGCCCCACCAGGGGGCGCCC\
AUGGGCCCCCCGG\
) } def
/len { sequence length } bind def

/coor [
[60.83971024 734.01733398]
[56.52212524 748.38256836]
[52.28849792 762.77270508]
[48.13896942 777.18731689]
[43.98944473 791.60192871]
[39.92416000 806.04052734]
[35.94325638 820.50268555]
[32.04687119 834.98773193]
[28.23513794 849.49536133]
[30.05802727 866.35101318]
[14.36571598 872.76879883]
[3.85469747 859.46636963]
[13.72753048 845.68365479]
[17.53926468 831.17602539]
[16.20424843 823.93377686]
[21.48115540 816.52172852]
[25.46205711 802.05963135]
[24.21170998 794.80230713]
[29.57481766 787.45239258]
[33.72434616 773.03778076]
[37.87387085 758.62316895]
[36.70836639 751.35168457]
[42.15694427 744.06494141]
[46.47452927 729.69976807]
[50.71217728 704.19934082]
[68.41414642 695.23175049]
[68.58932495 680.23278809]
[59.06860352 674.02069092]
[53.65877151 663.88653564]
[53.79812241 652.27996826]
[59.56737900 642.07025146]
[69.64134979 635.83654785]
[70.16678619 620.84576416]
[70.69223022 605.85498047]
[71.21766663 590.86419678]
[71.74310303 575.87341309]
[64.45637512 562.88287354]
[72.67234039 549.36224365]
[73.19777679 534.37145996]
[73.72321320 519.38061523]
[66.43648529 506.39013672]
[74.65245056 492.86947632]
[75.17788696 477.87869263]
[75.70332336 462.88787842]
[76.22875977 447.89709473]
[76.75419617 432.90631104]
[77.27964020 417.91549683]
[77.80507660 402.92471313]
[78.33051300 387.93392944]
[78.85594940 372.94311523]
[75.95979309 366.17224121]
[79.47607422 357.78060913]
[80.17654419 342.79696655]
[73.04203033 329.72229004]
[81.41532898 316.29846191]
[82.11579895 301.31484985]
[82.81626892 286.33120728]
[83.51674652 271.34756470]
[84.21721649 256.36392212]
[84.91768646 241.38029480]
[85.61816406 226.39666748]
[86.31863403 211.41302490]
[87.01910400 196.42939758]
[79.11862183 187.29826355]
[79.55783844 174.83113098]
[88.64572144 165.71072388]
[89.52113342 150.73628235]
[74.22901917 145.94067383]
[60.89689255 136.57669067]
[50.87522507 123.39636993]
[45.23754120 107.54589844]
[44.66716766 90.46656799]
[30.05446815 87.07997894]
[17.66740608 96.62433624]
[2.04561090 95.92183685]
[-9.43478584 85.30419159]
[-11.35309124 69.78471375]
[-2.80353951 56.69123459]
[12.17703152 52.20609283]
[26.51525497 58.44703674]
[33.44105911 72.46727753]
[48.05376053 75.85387421]
[56.10299301 63.19646835]
[46.83895493 51.39911270]
[37.57491684 39.60175323]
[28.31088066 27.80439758]
[19.04684448 16.00704193]
[9.78280735 4.20968533]
[0.51876998 -7.58767128]
[-8.74526691 -19.38502693]
[-18.00930405 -31.18238449]
[-27.27334023 -42.97974014]
[-36.53737640 -54.77709579]
[-49.98527527 -54.83140182]
[-60.79522705 -62.49974442]
[-65.16065979 -74.80774689]
[-61.70273972 -87.19918060]
[-70.82836914 -99.10391998]
[-79.95399475 -111.00866699]
[-94.49038696 -117.25398254]
[-96.09263611 -132.06214905]
[-105.21826935 -143.96690369]
[-114.34389496 -155.87164307]
[-130.04283142 -157.69340515]
[-139.78985596 -170.13410950]
[-137.80221558 -185.81291199]
[-125.25914764 -195.42785645]
[-109.60223389 -193.27456665]
[-100.12044525 -180.63053894]
[-102.43915558 -164.99726868]
[-93.31352997 -153.09252930]
[-84.18789673 -141.18778992]
[-70.30423737 -135.79397583]
[-68.04925537 -120.13429260]
[-58.92362595 -108.22955322]
[-49.79799652 -96.32480621]
[-33.03145218 -94.82411957]
[-22.34071159 -81.38610077]
[-24.74002075 -64.04113770]
[-15.47598457 -52.24377823]
[-6.21194744 -40.44642258]
[3.05208969 -28.64906502]
[12.31612682 -16.85170746]
[21.58016396 -5.05435181]
[30.84420013 6.74300480]
[40.10823822 18.54036140]
[49.37227249 30.33771706]
[58.63631058 42.13507462]
[67.90034485 53.93243027]
[75.54662323 48.18980408]
[84.22292328 43.73618698]
[93.70845795 40.75617981]
[103.74945831 39.39596176]
[114.06597137 39.75746536]
[116.50759888 24.95751953]
[118.94923401 10.15757275]
[121.39086151 -4.64237452]
[123.83249664 -19.44232178]
[114.42273712 -32.14003754]
[116.83027649 -47.75987244]
[129.62677002 -57.03485870]
[145.22027588 -54.46230698]
[154.35945129 -41.56847000]
[151.62219238 -26.00303268]
[138.63244629 -17.00069046]
[136.19081116 -2.20074296]
[133.74917603 12.59920406]
[131.30755615 27.39915085]
[128.86592102 42.19909668]
[142.09732056 49.26522064]
[153.03903198 39.00468063]
[163.98075867 28.74413681]
[174.92248535 18.48359489]
[185.74363708 8.09597015]
[196.44273376 -2.41732216]
[207.14183044 -12.93061352]
[217.84092712 -23.44390678]
[228.54002380 -33.95719910]
[239.23912048 -44.47048950]
[243.14807129 -52.68656540]
[250.12509155 -55.04317474]
[260.94622803 -65.43080139]
[258.97814941 -80.70931244]
[266.29837036 -94.06101990]
[279.91583252 -100.46638489]
[294.51904297 -97.65860748]
[305.34020996 -108.04623413]
[312.57955933 -123.37685394]
[329.31512451 -120.66434479]
[331.34149170 -103.83193207]
[315.72784424 -97.22508240]
[304.90667725 -86.83746338]
[307.11535645 -72.13169098]
[300.15887451 -58.78735352]
[286.51919556 -52.01887512]
[271.33386230 -54.60965347]
[260.51272583 -44.22202682]
[249.75241089 -33.77139282]
[239.05331421 -23.25810051]
[228.35421753 -12.74480820]
[217.65512085 -2.23151612]
[206.95602417 8.28177547]
[196.25692749 18.79506683]
[195.31777954 23.44528961]
[191.46900940 27.56668472]
[185.18302917 29.42531776]
[174.24130249 39.68585968]
[163.29957581 49.94639969]
[152.35786438 60.20694351]
[158.79838562 73.75388336]
[173.66331482 71.74534607]
[188.52822876 69.73680115]
[203.39314270 67.72826385]
[214.22070312 55.89004898]
[230.21669006 57.11808395]
[239.11033630 70.47032928]
[234.07920837 85.70408630]
[218.98275757 91.13331604]
[205.40168762 82.59318542]
[190.53675842 84.60172272]
[175.67184448 86.61026001]
[160.80693054 88.61879730]
[159.19070435 108.87071228]
[151.23608398 126.84018707]
[138.23733521 140.67961121]
[121.97800446 149.12609863]
[104.49556732 151.61169434]
[103.62015533 166.58613586]
[112.25483704 182.86860657]
[102.00273895 197.12986755]
[101.30226898 212.11349487]
[100.60179901 227.09713745]
[99.90132141 242.08076477]
[99.20085144 257.06439209]
[98.50038147 272.04803467]
[97.79991150 287.03167725]
[97.09943390 302.01531982]
[96.39896393 316.99896240]
[103.48338318 331.14538574]
[95.16017914 343.49746704]
[94.45970917 358.48107910]
[93.84674072 373.46856689]
[93.32130432 388.45935059]
[92.79586792 403.45013428]
[92.27043152 418.44094849]
[91.74499512 433.43173218]
[91.21955872 448.42251587]
[90.69411469 463.41333008]
[90.16867828 478.40411377]
[89.64324188 493.39492798]
[96.89238739 507.45764160]
[88.71400452 519.90606689]
[88.18856812 534.89685059]
[87.66313171 549.88769531]
[94.91227722 563.95037842]
[86.73389435 576.39880371]
[86.20845795 591.38964844]
[85.68302155 606.38043213]
[85.15758514 621.37121582]
[84.63214874 636.36199951]
[98.07305145 649.75170898]
[97.43263245 668.39245605]
[83.58830261 680.40795898]
[83.41312408 695.40692139]
[100.76316071 704.34545898]
[105.15297699 729.35711670]
[109.63803101 743.67089844]
[114.12308502 757.98468018]
[118.60813904 772.29846191]
[123.09319305 786.61224365]
[128.62649536 793.83489990]
[127.54599762 801.11944580]
[131.86358643 815.48461914]
[136.18116760 829.84979248]
[148.48602295 840.69055176]
[144.98524475 856.71173096]
[129.28012085 861.43200684]
[117.52674866 849.99566650]
[121.81597900 834.16735840]
[117.49839783 819.80218506]
[113.18080902 805.43701172]
[108.77941895 791.09729004]
[104.29436493 776.78350830]
[99.80931091 762.46972656]
[95.32424927 748.15594482]
[90.83919525 733.84216309]
[83.33932495 733.88598633]
[75.91558075 746.92010498]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 24]
[2 23]
[3 21]
[4 20]
[5 19]
[6 17]
[7 16]
[8 14]
[9 13]
[26 244]
[27 243]
[32 240]
[33 239]
[34 238]
[35 237]
[36 236]
[38 234]
[39 233]
[40 232]
[42 230]
[43 229]
[44 228]
[45 227]
[46 226]
[47 225]
[48 224]
[49 223]
[50 222]
[52 221]
[53 220]
[55 218]
[56 217]
[57 216]
[58 215]
[59 214]
[60 213]
[61 212]
[62 211]
[63 210]
[66 208]
[67 207]
[72 82]
[73 81]
[83 129]
[84 128]
[85 127]
[86 126]
[87 125]
[88 124]
[89 123]
[90 122]
[91 121]
[92 120]
[93 119]
[97 116]
[98 115]
[99 114]
[101 112]
[102 111]
[103 110]
[134 149]
[135 148]
[136 147]
[137 146]
[138 145]
[150 189]
[151 188]
[152 187]
[153 186]
[154 183]
[155 182]
[156 181]
[157 180]
[158 179]
[159 178]
[161 177]
[162 176]
[166 172]
[167 171]
[190 202]
[191 201]
[192 200]
[193 199]
[246 266]
[247 265]
[248 264]
[249 263]
[250 262]
[252 261]
[253 260]
[254 259]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
