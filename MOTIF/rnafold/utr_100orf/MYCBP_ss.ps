%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:17:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCAUGAGCAGUGCUGCUCCCAACCCGCCAGUCGCGGUCUCCGGCGCCAGCUACGCCGCUGCCGCUGUCACUAUGGCCCAUUACAAAGCCGCCGACUCGAAGCGUGAGCAGUUCCGGAGGUACUUGGAGAAGUCGGGGGUGCUGGACACGCUGACCAAGGUGUUGGUAGCCU\
) } def
/len { sequence length } bind def

/coor [
[37.30367279 372.51510620]
[33.03046036 386.89355469]
[28.75724983 401.27197266]
[24.48403740 415.65042114]
[33.25361252 428.59756470]
[31.59781647 444.14724731]
[20.29846764 454.95736694]
[4.69077206 455.92373657]
[-7.85579395 446.59005737]
[-11.41712475 431.36340332]
[-4.31166983 417.43334961]
[10.10559273 411.37722778]
[14.37880516 396.99877930]
[18.65201759 382.62033081]
[22.92523003 368.24188232]
[17.03565216 349.84558105]
[31.80233002 336.15637207]
[35.55366135 321.63302612]
[39.30498886 307.10968018]
[34.99650574 292.85183716]
[45.93920517 281.42520142]
[49.69053268 266.90185547]
[53.44186401 252.37850952]
[57.19319153 237.85516357]
[60.94452286 223.33181763]
[64.56459045 208.77520752]
[68.05310059 194.18650818]
[58.45853806 184.87538147]
[54.69594193 171.93302917]
[57.85346985 158.71847534]
[67.20858002 148.71684265]
[80.38994598 144.62025452]
[84.14128113 130.09690857]
[87.89260864 115.57356262]
[80.27564240 102.65141296]
[65.75229645 98.90008545]
[51.22895432 95.14875793]
[36.70561218 91.39743042]
[22.18226814 87.64609528]
[11.42456150 95.78516388]
[-1.86309063 96.22470856]
[-12.80952072 89.02827454]
[-17.53118896 77.01773834]
[-31.98443985 73.00481415]
[-46.43769073 68.99188995]
[-60.89093781 64.97896576]
[-75.34418488 60.96603775]
[-88.13089752 69.96793365]
[-103.70793152 68.59313965]
[-114.72029114 57.49080276]
[-115.96827698 41.90309906]
[-106.86262512 29.19006538]
[-91.70275879 25.35441017]
[-77.64668274 32.20721436]
[-71.33126068 46.51278687]
[-56.87801361 50.52571106]
[-42.42476273 54.53863907]
[-27.97151375 58.55156326]
[-13.51826382 62.56448746]
[0.73597419 53.66891861]
[17.34453011 57.90208435]
[25.93359756 73.12274933]
[40.45693970 76.87408447]
[54.98028564 80.62541199]
[69.50363159 84.37673950]
[84.02697754 88.12807465]
[95.10185242 78.01041412]
[106.17576599 67.89366913]
[103.74903107 53.09127045]
[101.32230377 38.28887177]
[90.46546173 33.34444046]
[83.42857361 23.86026001]
[81.87583160 12.27429962]
[86.07990265 1.49570346]
[94.88251495 -5.82563448]
[92.99176788 -20.70599365]
[91.10102844 -35.58635330]
[89.21028137 -50.46671295]
[75.01634216 -56.33422089]
[65.67051697 -68.52237701]
[63.68678284 -83.75262451]
[69.59875488 -97.92810059]
[81.81614685 -107.23567200]
[97.05253601 -109.17166138]
[111.20941162 -103.21527863]
[120.47864532 -90.96878052]
[122.36685944 -75.72639465]
[116.36613464 -61.58826065]
[104.09063721 -52.35745621]
[105.98138428 -37.47709656]
[107.87213135 -22.59673882]
[109.76287842 -7.71638012]
[124.87668610 2.56818008]
[127.75746918 20.94331741]
[116.12470245 35.86214066]
[118.55142975 50.66453934]
[120.97816467 65.46694183]
[125.61933136 51.20301437]
[139.93547058 46.72552109]
[151.87689209 55.80310440]
[151.39265442 70.79528809]
[138.89025879 79.08335876]
[153.80232239 77.46157074]
[168.71440125 75.83979034]
[183.62646484 74.21800232]
[198.53852844 72.59621429]
[213.45060730 70.97443390]
[228.31329346 68.94943237]
[243.11567688 66.52270508]
[257.91809082 64.09597015]
[272.72048950 61.66924286]
[285.08709717 51.80125046]
[298.89846802 57.37757874]
[313.70086670 54.95084763]
[328.50326538 52.52412033]
[343.30566406 50.09738922]
[358.10806274 47.67065811]
[347.77767944 36.79483414]
[349.65612793 21.91291809]
[362.36499023 13.94517803]
[376.57858276 18.73829842]
[381.86703491 32.77511597]
[374.34924316 45.75582123]
[389.31015015 44.67345428]
[404.27102661 43.59108734]
[419.23193359 42.50872040]
[432.49429321 32.86289215]
[447.36703491 39.77185059]
[448.55035400 56.12824631]
[434.82696533 65.10602570]
[420.31430054 57.46961975]
[405.35339355 58.55198669]
[390.39251709 59.63435364]
[375.43161011 60.71672058]
[360.53479004 62.47305679]
[345.73239136 64.89978790]
[330.92999268 67.32651520]
[316.12759399 69.75325012]
[301.32519531 72.17997742]
[290.01733398 81.87438965]
[275.14721680 76.47164154]
[260.34481812 78.89836884]
[245.54241943 81.32509613]
[230.74002075 83.75183105]
[228.38662720 86.42114258]
[224.60885620 88.06678772]
[219.90977478 88.02526093]
[215.07238770 85.88649750]
[200.16032410 87.50828552]
[185.24824524 89.13007355]
[170.33618164 90.75185394]
[155.42410278 92.37364197]
[140.51203918 93.99542999]
[102.41595459 119.32489014]
[98.66461945 133.84823608]
[94.91329193 148.37158203]
[105.84734344 161.25508118]
[106.94965363 177.95060730]
[97.98401642 191.88067627]
[82.64180756 197.67501831]
[79.15329742 212.26371765]
[80.20152283 221.37345886]
[75.46786499 227.08316040]
[71.71653748 241.60649109]
[67.96520996 256.12985229]
[64.21387482 270.65319824]
[60.46254730 285.17654419]
[64.50271606 300.47317505]
[53.82833481 310.86102295]
[50.07700348 325.38436890]
[46.32567596 339.90768433]
[52.40261459 348.98123169]
[52.46172333 359.68157959]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 15]
[2 14]
[3 13]
[4 12]
[17 171]
[18 170]
[19 169]
[21 167]
[22 166]
[23 165]
[24 164]
[25 163]
[26 161]
[27 160]
[32 156]
[33 155]
[34 154]
[35 66]
[36 65]
[37 64]
[38 63]
[39 62]
[43 59]
[44 58]
[45 57]
[46 56]
[47 55]
[68 97]
[69 96]
[70 95]
[75 92]
[76 91]
[77 90]
[78 89]
[102 153]
[103 152]
[104 151]
[105 150]
[106 149]
[107 148]
[108 144]
[109 143]
[110 142]
[111 141]
[113 139]
[114 138]
[115 137]
[116 136]
[117 135]
[123 134]
[124 133]
[125 132]
[126 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
