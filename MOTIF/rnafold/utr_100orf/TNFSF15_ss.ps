%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:47:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAAAGGGAAGGAGGAGACUGAGUGAUUAAGUCACCCACUGUGAGAGCUGGUCUUCUAUUUAAUGGGGGCUCUCUCUGCCCAGGAGUCAGAGGUGCCUCCAGGAGCAGCAGGAGCAUGGCCGAGGAUCUGGGACUGAGCUUUGGGGAAACAGCCAGUGUGGAAAUGCUGCCAGAGCACGGCAGCUGCAGGCCCAAGGCCAGGAGCAGCAGCGCAC\
) } def
/len { sequence length } bind def

/coor [
[52.03145218 299.84686279]
[57.52935791 313.80297852]
[56.95460892 328.79196167]
[50.40413666 342.28610229]
[38.98260498 352.00970459]
[24.61614418 356.32302856]
[9.72750092 354.49865723]
[-3.17250562 346.84423828]
[-11.90842438 334.65066528]
[-15.00703335 319.97418213]
[-11.94589233 305.29013062]
[-22.20142746 316.23654175]
[-21.86275101 331.80969238]
[-32.41925812 342.76483154]
[-47.26796722 342.99172974]
[-57.52350235 353.93814087]
[-61.31233215 369.29898071]
[-75.66037750 373.29684448]
[-85.91591644 384.24325562]
[-96.17144775 395.18966675]
[-106.42698669 406.13607788]
[-102.55880737 421.07064819]
[-107.40062714 435.71850586]
[-119.40742493 445.40563965]
[-134.74787903 447.04089355]
[-148.52690125 440.10244751]
[-156.34767151 426.80435181]
[-155.71458435 411.38998413]
[-146.82968140 398.77801514]
[-132.52809143 392.99285889]
[-117.37339783 395.88055420]
[-107.11786652 384.93414307]
[-96.86232758 373.98773193]
[-86.60679626 363.04132080]
[-83.55150604 348.46343994]
[-68.46991730 343.68261719]
[-58.21438217 332.73620605]
[-58.95463943 317.90423584]
[-48.71000671 306.65692139]
[-33.14784241 305.98101807]
[-22.89230728 295.03460693]
[-13.71071720 283.17297363]
[-5.68431950 270.50106812]
[2.34207797 257.82916260]
[-2.21062684 245.77781677]
[1.05651236 233.11532593]
[11.16800213 224.51896667]
[24.57874107 223.29663086]
[32.78774643 210.74226379]
[40.99675369 198.18788147]
[49.20576096 185.63351440]
[49.69517899 170.74696350]
[63.72335815 163.43116760]
[71.93236542 150.87678528]
[80.14136505 138.32241821]
[74.52674103 124.41285706]
[59.90282440 121.07504272]
[45.27890778 117.73722839]
[30.65498734 114.39941406]
[16.03106880 111.06159973]
[-0.75638008 113.43180847]
[-7.68118668 97.95655060]
[5.27230835 87.01839447]
[19.36888313 96.43768311]
[33.99280167 99.77549744]
[48.61672211 103.11330414]
[63.24063873 106.45111847]
[77.86455536 109.78893280]
[78.60550690 96.74935150]
[85.63215637 87.45060730]
[79.12390137 73.93607330]
[72.61564636 60.42153931]
[66.10739136 46.90700912]
[59.59913254 33.39247513]
[44.95299911 28.08884430]
[38.54522324 14.29047394]
[43.69168091 0.36030716]
[37.18342590 -13.15422630]
[30.67516899 -26.66875839]
[24.16691208 -40.18329239]
[17.56100082 -53.65036011]
[10.85777760 -67.06925964]
[-2.23099947 -75.95713806]
[-0.99684572 -90.80052948]
[-7.70006800 -104.21942902]
[-14.40329075 -117.63832092]
[-21.10651207 -131.05722046]
[-34.19528961 -139.94509888]
[-32.96113586 -154.78849792]
[-39.66436005 -168.20738220]
[-53.63713837 -176.79188538]
[-52.91872406 -193.17527771]
[-38.24815750 -200.50375366]
[-24.71726227 -191.23840332]
[-26.24546051 -174.91061401]
[-19.54223824 -161.49171448]
[-6.93292093 -153.56364441]
[-7.68761492 -137.76043701]
[-0.98439282 -124.34154510]
[5.71882963 -110.92264557]
[12.42205143 -97.50375366]
[25.03137016 -89.57567596]
[24.27667618 -73.77247620]
[30.97989845 -60.35358047]
[36.77843475 -55.77660751]
[37.68144608 -46.69154739]
[44.18970108 -33.17701340]
[50.69795609 -19.66248131]
[57.20621490 -6.14794874]
[71.30602264 -1.48629582]
[78.09883881 12.12664986]
[73.11367035 26.88421822]
[79.62192535 40.39875031]
[86.13018036 53.91328430]
[92.63843536 67.42781830]
[99.14669037 80.94235229]
[121.51371765 97.66526794]
[104.12947083 123.84844971]
[119.06310272 122.43898773]
[133.99673462 121.02952576]
[148.93037415 119.62006378]
[163.86401367 118.21060181]
[173.92417908 106.31813049]
[189.08908081 105.10147095]
[200.36473083 114.76559448]
[215.29837036 113.35613251]
[228.31045532 104.35634613]
[241.70845032 110.86350250]
[256.64208984 109.45404053]
[271.57571411 108.04457855]
[286.50933838 106.63511658]
[301.43237305 105.11759186]
[316.34405518 103.49208069]
[332.05761719 90.86021423]
[349.39447021 99.42879486]
[364.25283813 97.37226105]
[379.11117554 95.31573486]
[391.72024536 85.75946808]
[405.38812256 91.67877197]
[420.24649048 89.62223816]
[435.10482788 87.56571198]
[449.96319580 85.50917816]
[464.82153320 83.45265198]
[479.67990112 81.39612579]
[494.53826904 79.33959198]
[481.59521484 71.75818634]
[474.71356201 58.42990494]
[476.02716064 43.48753357]
[485.12866211 31.56432915]
[499.19592285 26.35738945]
[513.86700439 29.48125839]
[524.59283447 39.96730042]
[528.04754639 54.56404877]
[523.15991211 68.74540710]
[511.44692993 78.11348724]
[526.44653320 78.00490570]
[541.44616699 77.89632416]
[556.44573975 77.78774261]
[571.44537354 77.67916870]
[586.44494629 77.57058716]
[600.30566406 68.80632019]
[614.69836426 76.66647339]
[614.81707764 93.06519318]
[600.53967285 101.13288116]
[586.55352783 92.57019043]
[571.55395508 92.67877197]
[556.55432129 92.78735352]
[541.55468750 92.89593506]
[526.55511475 93.00450897]
[511.55551147 93.11309052]
[496.59478760 94.19794464]
[481.73641968 96.25447845]
[466.87808228 98.31100464]
[452.01971436 100.36753845]
[437.16137695 102.42406464]
[422.30300903 104.48059082]
[407.44467163 106.53712463]
[395.89837646 115.94629669]
[381.16772461 110.17408752]
[366.30935669 112.23062134]
[351.45101929 114.28714752]
[346.04586792 122.95232391]
[336.56527710 127.30558777]
[326.03649902 125.69138336]
[317.96954346 118.40374756]
[303.05789185 120.02925110]
[296.75195312 123.87723541]
[287.91879272 121.56874847]
[272.98516846 122.97821045]
[258.05154419 124.38767242]
[243.11790466 125.79713440]
[231.17398071 134.69610596]
[216.70782471 128.28976440]
[201.77420044 129.69923401]
[192.50578308 141.30233765]
[177.38102722 142.94447327]
[165.27346802 133.14422607]
[150.33982849 134.55369568]
[135.40620422 135.96315002]
[120.47257233 137.37261963]
[105.53893280 138.78208923]
[92.69573975 146.53141785]
[84.48673248 159.08580017]
[76.27772522 171.64016724]
[75.20114136 187.42469788]
[61.76013184 193.84252930]
[53.55112457 206.39689636]
[45.34211731 218.95126343]
[37.13311386 231.50563049]
[41.02869415 248.56198120]
[31.56769943 262.87545776]
[15.01397324 265.85556030]
[6.98757601 278.52746582]
[-1.03882158 291.19937134]
[12.40945530 284.55526733]
[27.39408493 283.87640381]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 41]
[12 40]
[15 37]
[16 36]
[18 34]
[19 33]
[20 32]
[21 31]
[42 214]
[43 213]
[44 212]
[48 209]
[49 208]
[50 207]
[51 206]
[53 204]
[54 203]
[55 202]
[56 68]
[57 67]
[58 66]
[59 65]
[60 64]
[70 116]
[71 115]
[72 114]
[73 113]
[74 112]
[77 109]
[78 108]
[79 107]
[80 106]
[81 104]
[82 103]
[84 101]
[85 100]
[86 99]
[87 98]
[89 96]
[90 95]
[118 201]
[119 200]
[120 199]
[121 198]
[122 197]
[125 194]
[126 193]
[128 191]
[129 190]
[130 189]
[131 188]
[132 186]
[133 185]
[135 181]
[136 180]
[137 179]
[139 177]
[140 176]
[141 175]
[142 174]
[143 173]
[144 172]
[145 171]
[155 170]
[156 169]
[157 168]
[158 167]
[159 166]
[160 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
