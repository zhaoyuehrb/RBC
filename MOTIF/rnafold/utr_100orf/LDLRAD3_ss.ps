%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:22:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGCGGGAGGGAGGAGGGCCAGGCGGGAGGGCGGGGACGGCGCGGCGAGGGGCGGGGUCAGCGCCGAGGCCGCGGGGGCAGCAACGACGCCGGGCAGCGGGAGCGGCGGCCGCGCCAUGUGGCUGCUGGGGCCGCUGUGCCUGCUGCUGAGCAGCGCCGCGGAGAGCCAGCUGCUCCCCGGGAACAACUUCACCAAUGAGUGCAACAUACCAGGCA\
) } def
/len { sequence length } bind def

/coor [
[141.36581421 477.34759521]
[144.16128540 462.48016357]
[151.41600037 449.20523071]
[162.41923523 438.82330322]
[176.09297180 432.35153198]
[174.16175842 417.47637939]
[172.23052979 402.60122681]
[156.10205078 396.56152344]
[145.20079041 383.11361694]
[142.60241699 365.90826416]
[149.11254883 349.67544556]
[163.02015686 338.92422485]
[160.66300964 324.11059570]
[151.02183533 312.75729370]
[156.49441528 297.91271973]
[154.13726807 283.09909058]
[151.78012085 268.28546143]
[149.42298889 253.47181702]
[134.74038696 250.69570923]
[121.86937714 243.04939270]
[112.37326050 231.43913269]
[107.41308594 217.25398254]
[107.60574341 202.19966125]
[112.94728088 188.09333801]
[122.81105804 176.64440918]
[136.02119446 169.24728394]
[133.66404724 154.43363953]
[131.30691528 139.62001038]
[128.94976807 124.80636597]
[112.76178741 136.80574036]
[92.29846954 139.03428650]
[73.11451721 130.44676208]
[60.63998795 112.99428558]
[45.64346313 113.31702423]
[30.64693451 113.63976288]
[15.65040684 113.96250916]
[6.75829792 126.54171753]
[-7.66719961 131.41598511]
[-22.02691841 126.91458893]
[-30.87660789 114.96382141]
[-45.87313461 115.28656006]
[-60.86966324 115.60929871]
[-75.86618805 115.93204498]
[-90.86271667 116.25478363]
[-105.85924530 116.57752228]
[-120.85307312 117.00782013]
[-135.84342957 117.54565430]
[-150.83378601 118.08348083]
[-157.96038818 131.68888855]
[-170.94349670 139.89463806]
[-186.29071045 140.49343872]
[-199.87371826 133.32421875]
[-208.03874207 120.31546021]
[-208.58943176 104.96643829]
[-201.37767029 91.40598297]
[-188.34336853 83.28177643]
[-172.99270630 82.77919769]
[-159.45492554 90.03342438]
[-151.37161255 103.09312439]
[-136.38125610 102.55529785]
[-121.39089966 102.01746368]
[-114.82302094 98.63832855]
[-106.18198395 101.58100128]
[-91.18546295 101.25825500]
[-76.18893433 100.93551636]
[-61.19240570 100.61277771]
[-46.19587708 100.29003143]
[-31.19934845 99.96729279]
[-22.87200165 87.64685059]
[-8.71923923 82.53184509]
[5.90260363 86.78097534]
[15.32766533 98.96598053]
[30.32419205 98.64323425]
[45.32072067 98.32049561]
[60.31724930 97.99775696]
[63.49500656 91.20423889]
[54.90579987 78.90686035]
[69.85053253 77.61721039]
[73.02828979 70.82369995]
[63.66392899 59.10581589]
[54.29957199 47.38793182]
[38.96492386 49.07676315]
[25.16173744 42.18651199]
[17.29455757 28.91582870]
[17.87377167 13.49934196]
[26.71455765 0.85639673]
[40.99584961 -4.97869015]
[56.16054153 -2.14396286]
[67.36963654 8.45602703]
[71.04634857 23.43886185]
[66.01745605 38.02357101]
[75.38181305 49.74145508]
[84.74617004 61.45933914]
[111.47013092 61.90242767]
[131.26910400 78.18972015]
[136.73490906 64.22100830]
[142.20071411 50.25229263]
[147.66651917 36.28358078]
[153.13232422 22.31486511]
[158.59812927 8.34615040]
[164.06393433 -5.62256336]
[169.52973938 -19.59127808]
[174.99554443 -33.55998993]
[172.81880188 -49.23073959]
[184.66180420 -58.26361084]
[190.12760925 -72.23232269]
[195.59341431 -86.20104218]
[201.05921936 -100.16975403]
[206.52502441 -114.13846588]
[211.99082947 -128.10717773]
[217.45663452 -142.07589722]
[222.92243958 -156.04461670]
[228.38824463 -170.01332092]
[233.55223083 -184.09640503]
[238.41200256 -198.28733826]
[243.16987610 -212.51275635]
[247.82559204 -226.77194214]
[252.48130798 -241.03112793]
[248.56716919 -256.95632935]
[260.58740234 -268.11184692]
[276.17663574 -263.02185059]
[279.29800415 -246.92250061]
[266.74047852 -236.37541199]
[262.08477783 -222.11622620]
[257.42904663 -207.85704041]
[258.34054565 -200.52732849]
[252.60293579 -193.42756653]
[247.74316406 -179.23663330]
[248.95315552 -175.93074036]
[248.62564087 -171.87539673]
[246.42616272 -167.79795837]
[242.35694885 -164.54751587]
[236.89114380 -150.57881165]
[231.42533875 -136.61009216]
[225.95953369 -122.64137268]
[220.49372864 -108.67266083]
[215.02792358 -94.70394897]
[209.56211853 -80.73523712]
[204.09631348 -66.76651764]
[198.63050842 -52.79780579]
[201.19819641 -38.12619400]
[188.96426392 -28.09418678]
[183.49845886 -14.12547207]
[178.03265381 -0.15675832]
[172.56684875 13.81195545]
[167.10104370 27.78067017]
[161.63523865 41.74938583]
[156.16943359 55.71809769]
[150.70361328 69.68681335]
[145.23780823 83.65552521]
[153.64947510 96.07502747]
[168.64909363 96.18260956]
[183.64871216 96.29019928]
[198.64831543 96.39778900]
[213.64793396 96.50537872]
[228.64755249 96.61296082]
[243.64717102 96.72055054]
[252.08428955 86.22608948]
[264.83840942 82.55873108]
[277.19351196 86.84147644]
[284.71435547 97.29985809]
[299.71087646 97.62259674]
[312.24447632 87.60818481]
[327.85607910 91.30382538]
[334.56976318 105.87453461]
[327.23541260 120.14292145]
[311.47927856 123.16349030]
[299.38812256 112.61912537]
[284.39160156 112.29638672]
[272.75152588 124.43877411]
[255.59321594 124.40197754]
[243.53958130 111.72016144]
[228.53996277 111.61257935]
[213.54034424 111.50498962]
[198.54074097 111.39739990]
[183.54112244 111.28981018]
[168.54150391 111.18222809]
[153.54188538 111.07463837]
[143.76341248 122.44922638]
[146.12054443 137.26286316]
[148.47769165 152.07650757]
[150.83483887 166.89013672]
[165.68849182 169.82176208]
[178.61863708 177.64372253]
[188.07470703 189.39544678]
[192.93041992 203.64648438]
[192.61802673 218.67059326]
[187.19448853 232.65487671]
[177.33242798 243.91847229]
[164.23661804 251.11466980]
[166.59376526 265.92831421]
[168.95091248 280.74194336]
[171.30804443 295.55557251]
[181.11782837 307.96844482]
[175.47665405 321.75344849]
[177.83378601 336.56707764]
[190.27183533 340.01745605]
[200.44538879 347.88546753]
[206.86595154 358.97525024]
[208.61102295 371.62307739]
[205.45657349 383.94671631]
[197.90504456 394.12564087]
[187.10569763 400.66998291]
[189.03691101 415.54516602]
[190.96813965 430.42031860]
[205.84115601 433.18591309]
[219.13066101 440.41390991]
[229.53468323 451.39627075]
[236.03392029 465.05697632]
[237.99166870 480.05770874]
[235.21612549 494.92886353]
[227.97920227 508.21353149]
[216.98989868 518.61016846]
[203.32482910 525.10028076]
[188.32278442 527.04797363]
[173.45347595 524.26245117]
[160.17367554 517.01666260]
[149.78439331 506.02035522]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 205]
[6 204]
[7 203]
[12 196]
[13 195]
[15 193]
[16 192]
[17 191]
[18 190]
[26 182]
[27 181]
[28 180]
[29 179]
[33 75]
[34 74]
[35 73]
[36 72]
[40 68]
[41 67]
[42 66]
[43 65]
[44 64]
[45 63]
[46 61]
[47 60]
[48 59]
[79 93]
[80 92]
[81 91]
[95 150]
[96 149]
[97 148]
[98 147]
[99 146]
[100 145]
[101 144]
[102 143]
[103 142]
[105 140]
[106 139]
[107 138]
[108 137]
[109 136]
[110 135]
[111 134]
[112 133]
[113 132]
[114 128]
[115 127]
[116 125]
[117 124]
[118 123]
[151 178]
[152 177]
[153 176]
[154 175]
[155 174]
[156 173]
[157 172]
[161 169]
[162 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
