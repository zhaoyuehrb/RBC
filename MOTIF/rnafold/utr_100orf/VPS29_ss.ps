%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:32:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGGUUGCGGUUAAGUGGGCGGGUCGCCGAGGAGCCUGAGGAAGAGGGCGGCGACGGUGGUGGUGACUGAGCGGAGCCCGGUGACAGGAUGGGAAAGGGAAUAAACCACCCUCCUCGCUCCUGAAAUAACAUCUAGCUGCCAUUGAGAUGAGCAGGUGUGCUCUCAGAGGGCGGGAUUUGGCGCUUGCAAUUGCUGGAACUGUUUCUUUCCACGGGUUGCUACGCCUCUUUAGGGCUGGGCACAGAU\
) } def
/len { sequence length } bind def

/coor [
[-63.43483353 278.39273071]
[-59.30030060 263.97418213]
[-71.79202271 272.27819824]
[-79.00116730 286.36148071]
[-93.88359070 286.96383667]
[-106.37531281 295.26785278]
[-118.86703491 303.57186890]
[-124.26407623 310.90991211]
[-131.56916809 311.90072632]
[-144.16465759 320.04647827]
[-156.76016235 328.19223022]
[-169.35565186 336.33801270]
[-181.95115662 344.48376465]
[-194.54664612 352.62951660]
[-192.72555542 367.74392700]
[-197.62744141 382.09170532]
[-208.22933960 392.84436035]
[-222.39030457 397.90679932]
[-237.28353882 396.32534790]
[-249.96070862 388.46691895]
[-262.55621338 396.61270142]
[-266.01229858 409.02233887]
[-276.65017700 415.55090332]
[-288.49423218 413.16992188]
[-301.19149780 421.15612793]
[-313.88876343 429.14233398]
[-326.58602905 437.12854004]
[-339.28329468 445.11474609]
[-351.98056030 453.10092163]
[-338.10293579 458.79409790]
[-333.77709961 473.15679932]
[-342.20214844 485.56719971]
[-357.14743042 486.84732056]
[-367.56027222 476.05041504]
[-365.73971558 461.16094971]
[-378.91519165 468.33081055]
[-392.09066772 475.50064087]
[-405.26614380 482.67050171]
[-407.14337158 498.07360840]
[-417.74041748 509.40863037]
[-432.98248291 512.31695557]
[-447.00872803 505.68038940]
[-454.42572021 492.05072021]
[-452.38153076 476.66888428]
[-441.66213989 465.44949341]
[-426.38940430 462.70666504]
[-412.43600464 469.49502563]
[-399.26052856 462.32516479]
[-386.08505249 455.15533447]
[-372.90954590 447.98547363]
[-359.96673584 440.40365601]
[-347.26947021 432.41748047]
[-334.57220459 424.43127441]
[-321.87493896 416.44506836]
[-309.17767334 408.45886230]
[-296.48040771 400.47265625]
[-289.12045288 384.53002930]
[-270.70196533 384.01718140]
[-258.10647583 375.87142944]
[-260.07327271 361.08639526]
[-255.40649414 346.85507202]
[-244.98085022 336.01684570]
[-230.82560730 330.75857544]
[-215.72973633 332.17340088]
[-202.69241333 340.03402710]
[-190.09690857 331.88827515]
[-177.50141907 323.74249268]
[-164.90591431 315.59674072]
[-152.31042480 307.45098877]
[-139.71492004 299.30520630]
[-127.17106628 291.08016968]
[-114.67933655 282.77612305]
[-102.18761444 274.47210693]
[-95.87196350 260.98278809]
[-80.09604645 259.78646851]
[-67.60432434 251.48243713]
[-55.54741287 242.55883789]
[-43.95600891 233.03836060]
[-32.36460495 223.51789856]
[-20.77319908 213.99742126]
[-9.18179512 204.47695923]
[2.40960908 194.95648193]
[14.00101280 185.43601990]
[12.50806999 169.07688904]
[21.15453720 154.91419983]
[36.69652557 148.64215088]
[53.07304382 152.92065430]
[64.54341125 143.25469971]
[76.01377869 133.58874512]
[87.48414612 123.92279053]
[71.79091644 104.09362030]
[79.10375977 78.46041870]
[71.03761292 65.81378174]
[62.97146988 53.16714859]
[52.26357269 51.44369888]
[44.42398453 44.26998138]
[41.86737061 34.18170166]
[45.20101166 24.55460548]
[37.45652390 11.70848083]
[21.98087502 9.46386814]
[11.60727406 -2.23751783]
[11.23382092 -17.87064171]
[21.03684807 -30.05401802]
[36.38766479 -33.03503418]
[50.03808594 -25.40613747]
[55.54279709 -10.76946735]
[50.30264664 3.96399236]
[58.04713440 16.81011581]
[75.61309052 24.92646790]
[75.61810303 45.10100555]
[83.68424988 57.74763870]
[91.75038910 70.39427185]
[106.74561310 70.01580811]
[114.16352081 56.97837067]
[121.58142090 43.94093704]
[123.09850311 34.95911789]
[129.17604065 30.78665924]
[136.75784302 17.84384918]
[144.33964539 4.90103912]
[151.92144775 -8.04177094]
[159.50325012 -20.98458099]
[167.00325012 -33.97496033]
[174.42114258 -47.01239777]
[181.83905029 -60.04983139]
[189.25695801 -73.08726501]
[181.61463928 -86.33650970]
[181.63009644 -101.53179169]
[189.19902039 -114.59233093]
[202.20204163 -122.06076050]
[217.09713745 -122.01815796]
[224.51502991 -135.05558777]
[231.93293762 -148.09303284]
[239.35084534 -161.13046265]
[246.76873779 -174.16790771]
[254.18664551 -187.20533752]
[255.70373535 -196.18714905]
[261.78128052 -200.35961914]
[269.36306763 -213.30242920]
[276.94488525 -226.24523926]
[268.38388062 -238.88137817]
[266.16180420 -253.98187256]
[270.71981812 -268.54852295]
[281.15298462 -279.68908691]
[295.38970947 -285.19161987]
[310.60336304 -283.96356201]
[323.77319336 -276.24877930]
[332.28436279 -263.57901001]
[334.44696045 -248.46987915]
[329.83160400 -233.92129517]
[319.35467529 -222.82189941]
[305.09637451 -217.37548828]
[289.88766479 -218.66343689]
[282.30587769 -205.72062683]
[274.72409058 -192.77781677]
[267.22409058 -179.78742981]
[259.80618286 -166.75000000]
[252.38827515 -153.71257019]
[244.97036743 -140.67512512]
[237.55247498 -127.63769531]
[230.13456726 -114.60025787]
[237.78089905 -101.81748199]
[238.00373840 -86.82394409]
[230.64312744 -73.64487457]
[217.58842468 -65.86853027]
[202.29438782 -65.66936493]
[194.87648010 -52.63193130]
[187.45858765 -39.59449387]
[180.04067993 -26.55705833]
[179.46598816 -19.20752335]
[172.44606018 -13.40278149]
[164.86425781 -0.45997167]
[157.28245544 12.48283768]
[149.70065308 25.42564774]
[142.11885071 38.36845779]
[134.61885071 51.35883713]
[127.20095062 64.39627075]
[119.78305054 77.43370819]
[126.56564331 87.74201965]
[128.50192261 99.61236572]
[125.50549316 110.93761444]
[118.34364319 119.81053925]
[131.94491577 126.13551331]
[145.54618835 132.46049500]
[159.14746094 138.78547668]
[171.16885376 132.74391174]
[184.28457642 134.69265747]
[193.74833679 143.70036316]
[196.26576233 156.32258606]
[209.78616333 162.81866455]
[223.30654907 169.31472778]
[236.82695007 175.81080627]
[250.34733582 182.30688477]
[263.86773682 188.80294800]
[278.62078857 183.80448914]
[292.23986816 190.58503723]
[296.91421509 204.68063354]
[310.43460083 211.17671204]
[323.95501709 217.67277527]
[337.47540283 224.16885376]
[350.99578857 230.66493225]
[364.58898926 223.18130493]
[379.98065186 225.15022278]
[391.25234985 235.81457520]
[394.06991577 251.07369995]
[387.34991455 265.06015015]
[373.67633057 272.39587402]
[358.30691528 270.26010132]
[347.15158081 259.47412109]
[344.49972534 244.18531799]
[330.97933960 237.68925476]
[317.45892334 231.19317627]
[303.93853760 224.69709778]
[290.41815186 218.20101929]
[276.49261475 223.36003113]
[262.68847656 216.96469116]
[257.37167358 202.32334900]
[243.85127258 195.82727051]
[230.33087158 189.33120728]
[216.81048584 182.83512878]
[203.29008484 176.33905029]
[189.76969910 169.84297180]
[174.13998413 176.08209229]
[158.53141785 168.93490601]
[152.82249451 152.38674927]
[139.22120667 146.06176758]
[125.61994171 139.73678589]
[112.01866150 133.41181946]
[97.15010071 135.39315796]
[85.67973328 145.05911255]
[74.20936584 154.72506714]
[62.73899841 164.39102173]
[64.75000763 178.01304626]
[59.81276321 190.75119019]
[49.31414032 199.32275391]
[36.05904388 201.57553101]
[23.52148247 197.02742004]
[11.93007946 206.54788208]
[0.33867517 216.06835938]
[-11.25272846 225.58882141]
[-22.84413338 235.10929871]
[-34.43553543 244.62976074]
[-46.02693939 254.15023804]
[-31.02917099 254.40892029]
[-18.98920250 263.35537720]
[-14.41406059 277.64062500]
[-19.01639938 291.91711426]
[-31.07338333 300.84063721]
[-46.07161713 301.07073975]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 76]
[3 75]
[5 73]
[6 72]
[7 71]
[9 70]
[10 69]
[11 68]
[12 67]
[13 66]
[14 65]
[20 59]
[21 58]
[24 56]
[25 55]
[26 54]
[27 53]
[28 52]
[29 51]
[35 50]
[36 49]
[37 48]
[38 47]
[77 242]
[78 241]
[79 240]
[80 239]
[81 238]
[82 237]
[83 236]
[87 231]
[88 230]
[89 229]
[90 228]
[92 112]
[93 111]
[94 110]
[98 108]
[99 107]
[113 177]
[114 176]
[115 175]
[117 174]
[118 173]
[119 172]
[120 171]
[121 170]
[122 168]
[123 167]
[124 166]
[125 165]
[130 160]
[131 159]
[132 158]
[133 157]
[134 156]
[135 155]
[137 154]
[138 153]
[139 152]
[181 227]
[182 226]
[183 225]
[184 224]
[188 221]
[189 220]
[190 219]
[191 218]
[192 217]
[193 216]
[196 213]
[197 212]
[198 211]
[199 210]
[200 209]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
