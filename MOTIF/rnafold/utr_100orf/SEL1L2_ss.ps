%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:30:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCACAGUCCCUGAGAAGAGGAGCUCUUGGGCCAAUCACCUAGUUUCUGCCUGUGUUACAGUGAAGAGAAGCUGCUUAAGAGAAGAUGAAGCCCUUGUCUCUGUUAAUAGAGAUAUUGAUAAUUCUUGGGGUCACAAUUAAAACUAUCAAAGCAGAGGAACAUAAUAAAAGACAAAAGGAAAGAA\
) } def
/len { sequence length } bind def

/coor [
[95.79422760 247.75975037]
[107.62133789 237.71490479]
[106.35607147 222.76835632]
[92.05042267 214.73733521]
[85.27550507 199.61364746]
[88.87793732 183.26803589]
[101.63323212 172.17543030]
[100.11570740 157.25239563]
[98.59818268 142.32936096]
[83.93125916 139.18589783]
[76.43125916 152.17628479]
[68.93125916 165.16667175]
[73.26329041 180.36564636]
[65.50629425 194.13534546]
[50.26235580 198.30644226]
[36.57544327 190.40429688]
[32.56575012 175.11711121]
[40.61215973 161.51451111]
[55.94087601 157.66667175]
[63.44087601 144.67628479]
[70.94087982 131.68589783]
[64.96825409 121.33972168]
[62.32364273 110.25028229]
[62.93260956 99.41210175]
[48.29275513 96.14490509]
[33.65289688 92.87770081]
[19.01304245 89.61049652]
[4.37318659 86.34329224]
[-10.26666927 83.07608795]
[-24.90652466 79.80888367]
[-39.54638290 76.54167938]
[-54.18623734 73.27447510]
[-44.89698029 85.05198669]
[-43.32977676 99.96988678]
[-49.96866989 113.42073059]
[-62.76320648 121.25015259]
[-77.76173401 121.04000854]
[-90.33189392 112.85520172]
[-96.59133148 99.22364044]
[-94.60679626 84.35549927]
[-84.99121857 72.84286499]
[-70.71494293 68.24149323]
[-84.69123077 62.79508209]
[-98.66751862 57.34867477]
[-112.64380646 51.90226746]
[-126.62009430 46.45585632]
[-140.59638977 41.00944901]
[-154.57267761 35.56304169]
[-172.48559570 44.61796188]
[-191.00988770 37.71952438]
[-198.40533447 19.71662712]
[-212.63954163 14.98509693]
[-226.87373352 10.25356674]
[-241.10794067 5.52203655]
[-258.04568481 6.26347065]
[-263.44696045 -9.80707455]
[-249.49967957 -19.44604874]
[-236.37641907 -8.71216965]
[-222.14221191 -3.98063946]
[-207.90800476 0.75089055]
[-193.67379761 5.48242044]
[-186.04446411 -1.44114709]
[-176.14897156 -4.58674431]
[-165.76164246 -3.31973672]
[-156.77455139 2.19687700]
[-150.85279846 11.01992989]
[-149.12626648 21.58675385]
[-135.14997864 27.03316116]
[-121.17369080 32.47956848]
[-107.19740295 37.92597580]
[-93.22111511 43.37238693]
[-79.24481964 48.81879425]
[-65.26853180 54.26520157]
[-50.91903305 58.63462067]
[-36.27917862 61.90182495]
[-21.63932228 65.16902924]
[-6.99946594 68.43623352]
[7.64038992 71.70343781]
[22.28024673 74.97064209]
[36.92010117 78.23783875]
[51.55995941 81.50504303]
[66.19981384 84.77224731]
[73.99542236 72.28067017]
[86.30028534 63.54549408]
[101.37724304 60.14423752]
[116.96125031 62.87572861]
[130.59947205 71.59513855]
[139.37521362 59.43016815]
[137.05317688 44.02738190]
[146.12631226 31.81538582]
[160.82482910 29.69659996]
[169.60055542 17.53163147]
[178.37629700 5.36666250]
[187.15203857 -6.79830694]
[195.92776489 -18.96327591]
[203.42776489 -31.95365715]
[209.57507324 -45.63615036]
[215.72238159 -59.31864548]
[221.86967468 -73.00113678]
[228.01698303 -86.68363190]
[234.16429138 -100.36612701]
[240.31159973 -114.04862213]
[246.45890808 -127.73111725]
[244.26242065 -143.98249817]
[257.40197754 -153.79493713]
[272.36071777 -147.07423401]
[273.75039673 -130.73406982]
[260.14138794 -121.58380890]
[253.99409485 -107.90131378]
[247.84678650 -94.21881866]
[241.69947815 -80.53633118]
[235.55216980 -66.85383606]
[229.40487671 -53.17134094]
[223.25756836 -39.48884583]
[217.11026001 -25.80635262]
[229.82550049 -33.76390076]
[244.72308350 -35.51383591]
[258.93621826 -30.71941757]
[269.72988892 -20.30324173]
[275.02703857 -6.26970387]
[273.80834961 8.68070698]
[266.30831909 21.67106438]
[253.97016907 30.20162201]
[239.16818237 32.63083267]
[224.75070190 28.49123955]
[213.49209595 18.57943344]
[207.55888367 4.80275106]
[208.09274292 -10.18754101]
[199.31700134 1.97742820]
[190.54125977 14.14239693]
[181.76553345 26.30736732]
[172.98979187 38.47233582]
[175.61561584 53.08878708]
[166.88906860 65.55081177]
[151.54017639 68.20590210]
[142.76445007 80.37087250]
[146.76895142 94.82646179]
[160.55331421 100.74179840]
[174.33769226 106.65713501]
[188.12205505 112.57247162]
[199.03334045 102.02641296]
[213.11308289 96.47624969]
[228.20428467 96.73877716]
[242.00787354 102.74284363]
[252.43278503 113.54496765]
[257.91284180 127.47745514]
[257.64196777 142.40582275]
[271.42633057 148.32115173]
[286.00820923 142.22654724]
[300.59677124 148.30516052]
[306.53686523 162.95066833]
[300.30435181 177.47413635]
[285.59686279 183.25906372]
[271.14010620 176.87335205]
[265.51098633 162.10552979]
[251.72663879 156.19018555]
[241.09329224 166.67166138]
[227.21954346 172.29878235]
[212.20780945 172.18518066]
[198.34590149 166.31704712]
[187.75828552 155.55992126]
[182.08053589 141.53115845]
[182.20671082 126.35684204]
[168.42234802 120.44149780]
[154.63798523 114.52616119]
[140.85360718 108.61082458]
[138.41149902 116.98608398]
[134.26193237 124.71881104]
[128.56629944 131.46298218]
[121.55560303 136.91186523]
[113.52122498 140.81182861]
[115.03874969 155.73487854]
[116.55627441 170.65791321]
[128.96290588 176.69175720]
[136.70191956 187.98168945]
[137.83705139 201.51361084]
[132.17807007 213.73847961]
[121.30261230 221.50309753]
[122.56787872 236.44963074]
[135.91523743 244.36338806]
[142.03097534 258.62445068]
[138.56343079 273.74911499]
[126.84598541 283.92169189]
[111.38420868 285.23056030]
[98.12348175 277.17248535]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 179]
[3 178]
[7 173]
[8 172]
[9 171]
[10 21]
[11 20]
[12 19]
[24 82]
[25 81]
[26 80]
[27 79]
[28 78]
[29 77]
[30 76]
[31 75]
[32 74]
[42 73]
[43 72]
[44 71]
[45 70]
[46 69]
[47 68]
[48 67]
[51 61]
[52 60]
[53 59]
[54 58]
[87 136]
[88 135]
[91 132]
[92 131]
[93 130]
[94 129]
[95 128]
[96 115]
[97 114]
[98 113]
[99 112]
[100 111]
[101 110]
[102 109]
[103 108]
[137 166]
[138 165]
[139 164]
[140 163]
[147 156]
[148 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
