%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:39:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGUGACCCCAGCACAGCUGGAGGCGGGUCCCCGCCCUCCCCAGGGAGCAGCCGGUUGAGGCGGGAGCGGUGCAUUGUGGGCAGAGGGGCGGGGGUUGGGAAGAUGGCGGCUCCCAGCCUCCUCAACUGGAGGCGAGUUUCUUCCUUCACGGGGCCGGUCCCCCGCGCCCGGCACGGACACCGAGCGGUGGCCAUCCGGGAGC\
) } def
/len { sequence length } bind def

/coor [
[76.29499054 124.05566406]
[69.60891724 137.48312378]
[70.38379669 153.28533936]
[57.78461456 161.22950745]
[51.09854126 174.65696716]
[50.07347870 183.73944092]
[44.20471954 188.23851013]
[37.31266403 201.56140137]
[30.52339554 214.93698120]
[23.83732033 228.36442566]
[17.15124512 241.79187012]
[10.46516991 255.21932983]
[3.77909446 268.64675903]
[2.13144684 285.52047729]
[-14.53893185 288.60830688]
[-22.12092590 273.44421387]
[-9.64835453 261.96069336]
[-2.96227956 248.53324890]
[3.72379565 235.10580444]
[10.40987110 221.67834473]
[17.09594727 208.25090027]
[17.26342964 200.85794067]
[23.98976707 194.66935730]
[30.88182449 181.34645081]
[37.67108917 167.97088623]
[44.35716629 154.54344177]
[43.10405350 139.70164490]
[56.18146515 130.79704285]
[62.86754227 117.36959076]
[57.23416519 103.46761322]
[43.08684921 98.48229218]
[28.93953323 93.49696350]
[14.79221725 88.51164246]
[0.64490026 83.52632141]
[-13.50241661 78.54100037]
[-27.64973259 73.55567932]
[-41.79705048 68.57035828]
[-55.98233414 63.69411469]
[-70.20474243 58.92724609]
[-84.49887085 54.37995529]
[-98.86133575 50.05332565]
[-113.22379303 45.72669220]
[-127.58625031 41.40006256]
[-143.03164673 44.82795715]
[-152.98620605 33.74843216]
[-167.34867859 29.42180252]
[-182.79406738 32.84969711]
[-192.74862671 21.77017212]
[-207.11108398 17.44354248]
[-221.47355652 13.11691093]
[-230.59884644 13.63774490]
[-236.02293396 8.61148930]
[-250.31706238 4.06419897]
[-264.61117554 -0.48309129]
[-280.10754395 2.70654798]
[-289.89031982 -8.52495670]
[-304.18444824 -13.07224751]
[-317.29684448 -4.55177307]
[-332.81204224 -6.50451374]
[-343.40417480 -18.00844383]
[-344.07202148 -33.63175964]
[-334.50018311 -45.99761200]
[-319.20825195 -49.26721954]
[-305.41656494 -41.89677429]
[-299.63714600 -27.36637688]
[-285.34301758 -22.81908607]
[-270.86907959 -26.33397865]
[-260.06390381 -14.77722168]
[-245.76977539 -10.22993088]
[-231.47564697 -5.68264103]
[-217.14692688 -1.24554920]
[-202.78445435 3.08108139]
[-188.42199707 7.40771198]
[-174.00390625 3.67034745]
[-163.02204895 15.05934143]
[-148.65957642 19.38597298]
[-134.24148560 15.64860821]
[-123.25962067 27.03760147]
[-108.89716339 31.36423302]
[-94.53470612 35.69086456]
[-80.17224121 40.01749420]
[-75.61109161 38.58452988]
[-70.10132599 40.00558853]
[-65.43787384 44.70483398]
[-51.21546173 49.47170639]
[-43.87025452 48.61619949]
[-36.81172562 54.42303848]
[-22.66441154 59.40836334]
[-8.51709461 64.39368439]
[5.63022232 69.37900543]
[19.77753830 74.36432648]
[33.92485428 79.34964752]
[48.07217026 84.33496857]
[62.21949005 89.32029724]
[110.36461639 62.74381256]
[119.21873474 50.63577271]
[120.77194214 32.28981400]
[137.08543396 25.82809067]
[145.75202942 13.58513832]
[154.41864014 1.34218419]
[163.08525085 -10.90076923]
[171.75186157 -23.14372253]
[180.41847229 -35.38667679]
[189.08506775 -47.62963104]
[189.33122253 -51.97741699]
[190.80296326 -55.64937592]
[193.13633728 -58.34265137]
[195.90638733 -59.90408325]
[198.68133545 -60.33713913]
[208.08518982 -72.02334595]
[217.48904419 -83.70955658]
[226.89291382 -95.39576721]
[236.29676819 -107.08197021]
[237.09684753 -112.25142670]
[239.55659485 -116.19954681]
[242.93144226 -118.49821472]
[246.41481018 -119.07752991]
[256.34835815 -130.31697083]
[266.28189087 -141.55639648]
[276.21542358 -152.79583740]
[286.14895630 -164.03527832]
[296.08248901 -175.27471924]
[294.85952759 -191.03161621]
[305.19989014 -202.98368835]
[320.96884155 -204.03999329]
[332.81091309 -193.57383728]
[333.70043945 -177.79460144]
[323.10968018 -166.06382751]
[307.32189941 -165.34118652]
[297.38836670 -154.10174561]
[287.45483398 -142.86230469]
[277.52130127 -131.62286377]
[267.58776855 -120.38343048]
[257.65423584 -109.14399719]
[247.98297119 -97.67811584]
[238.57911682 -85.99190521]
[229.17526245 -74.30570221]
[219.77140808 -62.61949158]
[210.36753845 -50.93328094]
[201.32803345 -38.96302414]
[192.66142273 -26.72006989]
[183.99481201 -14.47711563]
[175.32820129 -2.23416209]
[166.66159058 10.00879192]
[157.99499512 22.25174522]
[149.32838440 34.49469757]
[151.05751038 46.47056198]
[143.93264771 56.74233246]
[131.32676697 59.48988724]
[122.47265625 71.59793091]
[128.31944275 85.41150665]
[143.17559814 87.48385620]
[158.03175354 89.55619812]
[172.88792419 91.62854767]
[185.34738159 81.90552521]
[201.02232361 83.92337036]
[210.61308289 96.48493958]
[208.42961121 112.13767242]
[195.76734924 121.59508514]
[180.13858032 119.24625397]
[170.81556702 106.48470306]
[155.95941162 104.41235352]
[141.10325623 102.34001160]
[126.24710083 100.26766968]
[118.44905090 113.08134460]
[127.11566162 125.32430267]
[141.40420532 132.11755371]
[142.44252014 146.97592163]
[151.10913086 159.21887207]
[159.77574158 171.46182251]
[168.44235229 183.70477295]
[177.10894775 195.94773865]
[190.56163025 196.67593384]
[200.98538208 204.90051270]
[204.71199036 217.44165039]
[200.59519958 229.65496826]
[209.07223511 242.02992249]
[223.25447083 249.04240417]
[224.06385803 263.91500854]
[232.54090881 276.28997803]
[241.01795959 288.66491699]
[249.49501038 301.03988647]
[264.51138306 307.63082886]
[266.04248047 323.95834351]
[252.51321411 333.22610474]
[237.84135437 325.90020752]
[237.12004089 309.51693726]
[228.64299011 297.14196777]
[220.16595459 284.76699829]
[211.68890381 272.39205933]
[198.11300659 266.26470947]
[196.69728088 250.50697327]
[188.22023010 238.13201904]
[171.57408142 235.75294495]
[161.60047913 221.79754639]
[164.86599731 204.61433411]
[156.19938660 192.37138367]
[147.53279114 180.12843323]
[138.86618042 167.88548279]
[130.19956970 155.64253235]
[116.53092194 149.72497559]
[114.87270355 133.99090576]
[106.20610046 121.74795532]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 29]
[2 28]
[4 26]
[5 25]
[7 24]
[8 23]
[9 21]
[10 20]
[11 19]
[12 18]
[13 17]
[30 94]
[31 93]
[32 92]
[33 91]
[34 90]
[35 89]
[36 88]
[37 87]
[38 85]
[39 84]
[40 81]
[41 80]
[42 79]
[43 78]
[45 76]
[46 75]
[48 73]
[49 72]
[50 71]
[52 70]
[53 69]
[54 68]
[56 66]
[57 65]
[95 150]
[96 149]
[98 146]
[99 145]
[100 144]
[101 143]
[102 142]
[103 141]
[104 140]
[109 139]
[110 138]
[111 137]
[112 136]
[113 135]
[117 134]
[118 133]
[119 132]
[120 131]
[121 130]
[122 129]
[151 164]
[152 163]
[153 162]
[154 161]
[165 203]
[166 202]
[168 200]
[169 199]
[170 198]
[171 197]
[172 196]
[176 193]
[177 192]
[179 190]
[180 189]
[181 188]
[182 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
