%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:37:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCUCAGAAGGUCCAGAAAUCAGGGGAAGGAGACCCCUAUCUGUCCUUCUUCUGGAAGAGCUGGAAAGGAAGUCUGCUCAGGAAAUAACCUUGGAAGAUGGUGGCCACGAAGACCUUUGCUCUGCUGCUGCUGUCCCUGUUCCUGGCAGUGGGACUAGGAGAGAAGAAAGAGGGUCACUUCAGCGCUCUCCCCUCCC\
) } def
/len { sequence length } bind def

/coor [
[-36.36788559 298.80999756]
[-43.24672699 301.87921143]
[-50.59731293 303.47222900]
[-58.10705948 303.52600098]
[-65.45759583 302.04290771]
[-72.33823395 299.09033203]
[-78.45911407 294.79766846]
[-90.35340881 303.93692017]
[-102.24769592 313.07617188]
[-114.14199066 322.21539307]
[-126.03627777 331.35464478]
[-137.93057251 340.49389648]
[-140.37896729 353.16409302]
[-150.48213196 360.53070068]
[-162.49786377 359.08230591]
[-174.53494263 368.03265381]
[-186.57202148 376.98300171]
[-198.60910034 385.93334961]
[-198.72778320 395.37908936]
[-203.11959839 403.58679199]
[-210.68521118 408.77059937]
[-219.65165710 409.86932373]
[-227.98701477 406.76162720]
[-240.43434143 415.13204956]
[-252.88165283 423.50250244]
[-265.32897949 431.87292480]
[-277.77630615 440.24334717]
[-279.25268555 455.81109619]
[-290.42660522 466.75079346]
[-306.02212524 467.89706421]
[-318.67547607 458.70867920]
[-322.41217041 443.52410889]
[-315.46783447 429.51306152]
[-301.12136841 423.29107666]
[-286.14672852 427.79602051]
[-273.69940186 419.42559814]
[-261.25210571 411.05517578]
[-248.80476379 402.68472290]
[-236.35745239 394.31430054]
[-228.95100403 375.05563354]
[-207.55944824 373.89624023]
[-195.52236938 364.94592285]
[-183.48527527 355.99557495]
[-171.44819641 347.04522705]
[-165.37196350 330.58618164]
[-147.06982422 328.59960938]
[-135.17552185 319.46035767]
[-123.28123474 310.32110596]
[-111.38694763 301.18185425]
[-99.49265289 292.04263306]
[-87.59836578 282.90338135]
[-90.65629578 260.11782837]
[-79.38297272 239.94285583]
[-58.15363693 230.50633240]
[-35.38734436 235.70954895]
[-25.07778168 224.81399536]
[-14.76822090 213.91845703]
[-4.54498196 202.94186401]
[5.59129572 191.88493347]
[8.48838329 177.27479553]
[23.51726532 172.33078003]
[33.65354156 161.27383423]
[43.78982162 150.21690369]
[53.92609787 139.15995789]
[64.06237793 128.10302734]
[74.19865417 117.04608917]
[69.14838409 102.11098480]
[72.11727905 86.62717438]
[82.33364868 74.61932373]
[77.00605774 60.59731674]
[58.27323914 53.35879898]
[51.00052643 34.96671677]
[59.45223999 17.42357063]
[53.46678162 3.66950631]
[47.48132324 -10.08455849]
[41.49586487 -23.83862305]
[28.89455414 -33.40510178]
[30.91060448 -48.16263580]
[24.92514610 -61.91669846]
[12.32383442 -71.48317719]
[14.33988571 -86.24070740]
[8.35442734 -99.99477386]
[2.36896920 -113.74884033]
[-12.42733192 -119.30266571]
[-18.88658714 -133.72673035]
[-13.17663479 -148.46348572]
[1.31491256 -154.76988220]
[15.99047661 -148.90443420]
[22.14330482 -134.34703064]
[16.12303352 -119.73429871]
[22.10849190 -105.98023224]
[28.09395027 -92.22616577]
[40.26714325 -83.64347076]
[38.67921066 -67.90216064]
[44.66466904 -54.14809418]
[56.83786011 -45.56539917]
[55.24993134 -29.82408142]
[61.23538971 -16.07001686]
[67.22084808 -2.31595206]
[73.20630646 11.43811226]
[83.43439484 12.48838043]
[92.37081146 17.73485756]
[98.36535645 26.28658295]
[100.27889252 36.63546371]
[97.69933319 46.92207336]
[91.02806854 55.26972580]
[96.35565948 69.29174042]
[103.09242249 69.23125458]
[109.68241119 70.63114929]
[115.81285095 73.42496490]
[121.19276428 77.48011017]
[125.56681061 82.60411072]
[128.72738647 88.55377197]
[143.59252930 86.54697418]
[158.45768738 84.54018402]
[173.32284546 82.53338623]
[188.18798828 80.52659607]
[203.05314636 78.51979828]
[217.91830444 76.51300812]
[227.49380493 64.22693634]
[242.59776306 62.40351868]
[254.25164795 71.60800934]
[269.11679077 69.60121155]
[283.98196411 67.59442139]
[296.62292480 58.08040237]
[310.27093506 64.04541016]
[325.13607788 62.03861618]
[333.23126221 57.78547668]
[340.25152588 60.11939240]
[355.14651489 58.34751511]
[367.93609619 49.03423691]
[381.48822021 55.21395493]
[396.38320923 53.44207382]
[411.26373291 51.55267715]
[426.12887573 49.54588318]
[440.99404907 47.53908920]
[455.85919189 45.53229523]
[470.72433472 43.52550125]
[485.55596924 41.28429413]
[500.35034180 38.80922699]
[515.14477539 36.33416367]
[529.93914795 33.85909653]
[544.56347656 25.28210831]
[556.85369873 36.96058655]
[549.03387451 52.00342560]
[532.41418457 48.65348816]
[517.61981201 51.12855530]
[502.82540894 53.60361862]
[488.03103638 56.07868576]
[484.57269287 59.38537216]
[478.99731445 60.54843903]
[472.73114014 58.39065552]
[457.86599731 60.39744949]
[443.00082397 62.40424347]
[428.13568115 64.41103363]
[413.27050781 66.41783142]
[407.05630493 70.43214417]
[398.15509033 68.33705139]
[383.26010132 70.10893250]
[371.53588867 79.29547882]
[356.91836548 73.24249268]
[342.02340698 75.01437378]
[327.14288330 76.90377045]
[312.27770996 78.91056824]
[300.70001221 88.28104401]
[285.98873901 82.45957184]
[271.12359619 84.46636963]
[256.25845337 86.47315979]
[247.46246338 98.43837738]
[232.41567993 100.68531036]
[219.92509460 91.37815857]
[205.05993652 93.38495636]
[190.19479370 95.39174652]
[175.32963562 97.39854431]
[160.46447754 99.40533447]
[145.59933472 101.41213226]
[130.73417664 103.41892242]
[122.34794617 121.37400055]
[104.78411102 130.55145264]
[85.25559235 127.18236542]
[75.11931610 138.23930359]
[64.98303986 149.29623413]
[54.84675980 160.35317993]
[44.71047974 171.41011047]
[34.57420349 182.46705627]
[30.95210075 197.86805725]
[16.64823341 202.02120972]
[6.51195574 213.07814026]
[3.01488042 221.52751160]
[-3.87267423 224.22801208]
[-14.18223667 235.12356567]
[-24.49179840 246.01910400]
[-20.84446144 252.71261597]
[-18.64849091 260.00039673]
[-17.99255371 267.57223511]
[-18.89985275 275.10668945]
[-21.32734108 282.28494263]
[-25.16773605 288.80422974]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 51]
[8 50]
[9 49]
[10 48]
[11 47]
[12 46]
[15 44]
[16 43]
[17 42]
[18 41]
[23 39]
[24 38]
[25 37]
[26 36]
[27 35]
[55 192]
[56 191]
[57 190]
[58 188]
[59 187]
[61 185]
[62 184]
[63 183]
[64 182]
[65 181]
[66 180]
[69 107]
[70 106]
[73 100]
[74 99]
[75 98]
[76 97]
[78 95]
[79 94]
[81 92]
[82 91]
[83 90]
[113 177]
[114 176]
[115 175]
[116 174]
[117 173]
[118 172]
[119 171]
[122 168]
[123 167]
[124 166]
[126 164]
[127 163]
[129 162]
[130 161]
[132 159]
[133 158]
[134 156]
[135 155]
[136 154]
[137 153]
[138 152]
[139 149]
[140 148]
[141 147]
[142 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
