%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:41:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCACUUCCGGGUGUUGUCUGGCCGCCGUAGCGCGUCUUGGGUCUCCCGGCUGCCGCUGCUGCCGCCGCCGCCUCGGGUCGUGGAGCCAGGAGCGACGUCACCGCCAUGGCAGGCAUCAAAGCUUUGAUUAGUUUGUCCUUUGGAGGAGCAAUCGGACUGAUGUUUUUGAUGCUUGGAUGUGCCCUUCCAAUAUACAACAAAUACU\
) } def
/len { sequence length } bind def

/coor [
[135.86994934 327.34191895]
[146.73153687 316.90289307]
[159.64398193 309.14294434]
[154.96565247 294.89117432]
[150.28732300 280.63937378]
[145.60899353 266.38760376]
[134.28816223 256.70837402]
[137.33538818 241.18338013]
[132.65707397 226.93161011]
[127.97873688 212.67982483]
[123.30041504 198.42803955]
[118.62208557 184.17626953]
[113.94375610 169.92448425]
[109.26542664 155.67269897]
[104.58710480 141.42092896]
[99.90877533 127.16914368]
[95.23044586 112.91735840]
[85.03181458 101.91791534]
[71.17361450 96.17766571]
[57.31542587 90.43740845]
[43.41427612 84.80197906]
[29.47096825 79.27168274]
[15.52766037 73.74139404]
[1.58435154 68.21109772]
[-13.43215370 78.36945343]
[-31.38311958 77.48972321]
[-45.09237289 66.11253357]
[-49.19285965 48.93718338]
[-63.29684067 43.83054352]
[-77.40081787 38.72390366]
[-83.96973419 39.50552750]
[-89.16618347 37.19739532]
[-91.84971619 33.24415970]
[-105.79302216 27.71386719]
[-119.73633575 22.18357468]
[-128.86959839 21.92828178]
[-133.84744263 16.46302605]
[-147.70562744 10.72277451]
[-161.56382751 4.98252296]
[-175.42201233 -0.75772864]
[-189.28021240 -6.49798012]
[-203.13839722 -12.23823166]
[-209.73597717 -11.75495529]
[-214.82255554 -14.29609585]
[-217.32426453 -18.36682701]
[-231.00276184 -24.52301979]
[-244.68125916 -30.67921066]
[-258.35974121 -36.83540344]
[-272.08435059 -42.88812256]
[-285.85427856 -48.83702087]
[-299.62417603 -54.78592300]
[-313.39410400 -60.73482132]
[-319.99822998 -60.35124588]
[-325.04583740 -62.96892166]
[-327.48577881 -67.07697296]
[-341.06973267 -73.43904877]
[-354.65368652 -79.80113220]
[-369.35662842 -74.65704346]
[-383.04205322 -81.30260468]
[-387.85556030 -95.35130310]
[-401.43951416 -101.71337891]
[-417.21859741 -100.55968475]
[-425.46267700 -112.96469116]
[-439.04666138 -119.32677460]
[-455.33062744 -117.38657379]
[-464.93484497 -130.67907715]
[-457.97933960 -145.53010559]
[-441.61932373 -146.66218567]
[-432.68457031 -132.91073608]
[-419.10061646 -126.54865265]
[-404.29315186 -128.15740967]
[-395.07742310 -115.29734039]
[-381.49346924 -108.93525696]
[-367.61962891 -114.23169708]
[-353.75292969 -107.97315979]
[-348.29162598 -93.38509369]
[-334.70764160 -87.02301025]
[-321.12368774 -80.66093445]
[-307.44519043 -74.50473785]
[-293.67529297 -68.55583954]
[-279.90536499 -62.60693741]
[-266.13543701 -56.65803909]
[-258.74670410 -56.89112473]
[-252.20356750 -50.51390076]
[-238.52507019 -44.35770798]
[-224.84657288 -38.20151520]
[-211.16806030 -32.04532623]
[-197.39814758 -26.09642410]
[-183.53996277 -20.35617256]
[-169.68176270 -14.61592197]
[-155.82357788 -8.87567043]
[-141.96537781 -3.13541865]
[-128.10719299 2.60483289]
[-114.20603943 8.24026585]
[-100.26273346 13.77055931]
[-86.31941986 19.30085182]
[-72.29418182 24.61992645]
[-58.19020081 29.72656631]
[-44.08621979 34.83320618]
[-35.15111923 26.61108780]
[-23.49889374 22.94732475]
[-11.32317543 24.59599686]
[-0.94361633 31.30495071]
[5.63603687 41.85213470]
[7.11464500 54.26779175]
[21.05795288 59.79808426]
[35.00126266 65.32837677]
[48.94457245 70.85867310]
[56.32290649 70.40252686]
[63.05567551 76.57921600]
[76.91387177 82.31947327]
[90.77206421 88.05972290]
[105.75666809 87.38027954]
[119.03850555 80.40943146]
[132.32034302 73.43859100]
[145.60218811 66.46774292]
[158.88403320 59.49689102]
[172.16586304 52.52604294]
[185.44770813 45.55519867]
[189.30030823 40.17755127]
[194.50889587 37.89693451]
[199.23765564 38.58126068]
[212.72396851 32.01474762]
[219.07151794 25.44281006]
[226.46392822 25.45262718]
[240.04789734 19.09054756]
[253.63185120 12.72846794]
[267.21582031 6.36638880]
[280.79977417 0.00430933]
[294.38372803 -6.35776997]
[307.96768188 -12.71984959]
[314.41375732 -19.19516754]
[321.80520630 -19.07370186]
[335.48370361 -25.22989464]
[349.16220093 -31.38608742]
[362.84069824 -37.54227829]
[372.24957275 -50.26168823]
[387.03106689 -48.42948151]
[400.70956421 -54.58567429]
[414.38806152 -60.74186707]
[426.35025024 -72.75610352]
[441.20645142 -64.58725739]
[437.46945190 -48.05029297]
[420.54425049 -47.06336975]
[406.86575317 -40.90717697]
[393.18725586 -34.75098419]
[384.75674438 -22.47190475]
[368.99688721 -23.86378098]
[355.31838989 -17.70758820]
[341.63989258 -11.55139732]
[327.96139526 -5.39520502]
[314.32977295 0.86410946]
[300.74581909 7.22618914]
[287.16183472 13.58826828]
[273.57788086 19.95034790]
[259.99392700 26.31242752]
[246.40997314 32.67450714]
[232.82601929 39.03658676]
[219.29048157 45.50106812]
[205.80416870 52.06758499]
[192.41856384 58.83703613]
[179.13671875 65.80788422]
[165.85487366 72.77873230]
[152.57302856 79.74958038]
[139.29119873 86.72042847]
[126.00935364 93.69127655]
[112.72751617 100.66212463]
[112.21360779 103.42106628]
[111.11214447 105.98763275]
[109.48223114 108.23903656]
[114.16055298 122.49081421]
[118.83888245 136.74259949]
[123.51721191 150.99436951]
[128.19554138 165.24615479]
[132.87387085 179.49794006]
[137.55218506 193.74971008]
[142.23051453 208.00149536]
[146.90884399 222.25328064]
[151.58717346 236.50506592]
[163.24264526 247.20368958]
[159.86077881 261.70928955]
[164.53910828 275.96105957]
[169.21743774 290.21282959]
[173.89576721 304.46463013]
[188.89512634 303.06216431]
[203.83042908 305.03305054]
[217.95252991 310.27841187]
[230.55307007 318.53518677]
[241.00000000 329.38919067]
[248.76931763 342.29598999]
[253.47132874 356.60818481]
[254.87016296 371.60787964]
[252.89564514 386.54269409]
[247.64685059 400.66354370]
[239.38702393 413.26208496]
[228.53050232 423.70639038]
[215.62182617 431.47256470]
[201.30848694 436.17111206]
[186.30845642 437.56631470]
[171.37409973 435.58816528]
[157.25454712 430.33596802]
[144.65800476 422.07308960]
[134.21633911 411.21401978]
[126.45326996 398.30346680]
[121.75820160 383.98898315]
[120.36663818 368.98861694]
[122.34838867 354.05474854]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 184]
[4 183]
[5 182]
[6 181]
[8 179]
[9 178]
[10 177]
[11 176]
[12 175]
[13 174]
[14 173]
[15 172]
[16 171]
[17 170]
[18 112]
[19 111]
[20 110]
[21 108]
[22 107]
[23 106]
[24 105]
[28 99]
[29 98]
[30 97]
[33 96]
[34 95]
[35 94]
[37 93]
[38 92]
[39 91]
[40 90]
[41 89]
[42 88]
[45 87]
[46 86]
[47 85]
[48 84]
[49 82]
[50 81]
[51 80]
[52 79]
[55 78]
[56 77]
[57 76]
[60 73]
[61 72]
[63 70]
[64 69]
[113 167]
[114 166]
[115 165]
[116 164]
[117 163]
[118 162]
[119 161]
[122 160]
[123 159]
[125 158]
[126 157]
[127 156]
[128 155]
[129 154]
[130 153]
[131 152]
[133 151]
[134 150]
[135 149]
[136 148]
[138 146]
[139 145]
[140 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
