%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:37:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCUGAGGCAACCUGAAGGAGGAGCUCUCAUUACCUUCUGCCCAUCACUUAAUAAAUAGCCAGCCAAUUCAUCAACAUUCUGGUACACUGUUGGAGAGAUGAGACAGUCACACCAGCUGCCCCUAGUGGGGCUCUUACUGUUUUCUUUUAUUCCAAGCCAACUAUGCGAGAUUUGUGAGGUAAGUGAAGAAAACUACA\
) } def
/len { sequence length } bind def

/coor [
[39.60866165 143.97874451]
[26.65792847 151.54699707]
[13.70719337 159.11524963]
[0.75645947 166.68351746]
[-12.19427490 174.25177002]
[-13.78691483 196.99398804]
[-39.85179520 210.06941223]
[-50.33207321 220.80084229]
[-60.81234741 231.53228760]
[-71.29262543 242.26373291]
[-72.21922302 246.52856445]
[-74.25449371 249.93023682]
[-76.98909760 252.22550964]
[-79.97669983 253.32977295]
[-82.78920746 253.31529236]
[-93.92581177 263.36398315]
[-105.06241608 273.41265869]
[-116.19902039 283.46136475]
[-127.33561707 293.51004028]
[-127.57810974 312.44589233]
[-141.34167480 324.98397827]
[-159.58175659 323.51565552]
[-170.39558411 333.91088867]
[-174.42947388 349.80618286]
[-190.28347778 353.99935913]
[-201.64836121 342.17684937]
[-196.83290100 326.50064087]
[-180.79083252 323.09707642]
[-169.97700500 312.70184326]
[-172.23031616 301.50585938]
[-168.75901794 290.49987793]
[-160.31636047 282.45718384]
[-148.92303467 279.46267700]
[-137.38430786 282.37344360]
[-126.24770355 272.32473755]
[-115.11109924 262.27606201]
[-103.97449493 252.22737122]
[-92.83789825 242.17869568]
[-82.02406311 231.78344727]
[-71.54378510 221.05201721]
[-61.06351089 210.32057190]
[-50.58323288 199.58912659]
[-53.08027267 192.51701355]
[-64.98899078 201.63745117]
[-77.34302521 193.12994385]
[-73.06948853 178.75160217]
[-58.07435226 178.37278748]
[-60.57139206 171.30067444]
[-75.46636963 169.52879333]
[-85.90689087 181.00813293]
[-101.10762787 184.12536621]
[-115.22360229 177.68183899]
[-122.82691956 164.15522766]
[-120.99396515 148.74679565]
[-110.42953491 137.38139343]
[-95.19586945 134.42924500]
[-81.15063477 141.02552795]
[-73.69449615 154.63381958]
[-58.79951477 156.40570068]
[-35.39289474 150.39332581]
[-19.76252937 161.30102539]
[-6.81179571 153.73277283]
[6.13893843 146.16452026]
[19.08967209 138.59626770]
[32.04040527 131.02801514]
[28.73777008 122.42629242]
[26.51911354 113.48344421]
[25.41818428 104.33549500]
[25.45172691 95.12159729]
[26.61923218 85.98191071]
[28.90294456 77.05545044]
[32.26811981 68.47800446]
[36.66357422 60.38003922]
[42.02244949 52.88474274]
[48.26322556 46.10612106]
[55.29097748 40.14728546]
[62.99880600 35.09888077]
[71.26946259 31.03769112]
[79.97714233 28.02549744]
[88.98938751 26.10811615]
[88.27924347 11.12493706]
[87.56909943 -3.85824370]
[86.85895538 -18.84142494]
[86.14881134 -33.82460403]
[72.99569702 -45.35070419]
[72.25773621 -62.48587799]
[83.90364838 -74.61283112]
[82.95706940 -89.58293152]
[82.01048279 -104.55303192]
[81.06389618 -119.52313232]
[80.11730957 -134.49324036]
[79.17073059 -149.46334839]
[65.37596893 -156.21612549]
[56.81906509 -168.97053528]
[55.80179214 -184.29570007]
[62.59778595 -198.06922913]
[75.37895966 -206.58610535]
[90.70723724 -207.55534363]
[104.45939636 -200.71621704]
[112.93616486 -187.90840149]
[113.85734558 -172.57716370]
[106.97514343 -158.84651184]
[94.14083099 -150.40992737]
[95.08741760 -135.43981934]
[96.03399658 -120.46971893]
[96.98058319 -105.49961853]
[97.92716980 -90.52951813]
[98.87375641 -75.55941010]
[109.64251709 -68.47351074]
[114.43246460 -56.29611588]
[111.28491211 -43.39426422]
[101.13198853 -34.53474808]
[101.84214020 -19.55156898]
[102.55228424 -4.56838846]
[103.26242828 10.41479206]
[103.97257233 25.39797211]
[120.32878113 28.11130524]
[135.68376160 34.36530304]
[149.28123474 43.85194778]
[160.25781250 33.62870789]
[171.23440552 23.40547180]
[182.21098328 13.18223286]
[193.18757629 2.95899415]
[197.47187805 -12.87062073]
[213.39010620 -16.81299591]
[224.56692505 -4.81255484]
[219.50460815 10.78567791]
[203.41081238 13.93557835]
[192.43421936 24.15881729]
[181.45764160 34.38205338]
[170.48106384 44.60529327]
[159.50447083 54.82853317]
[165.17637634 63.48583603]
[169.59736633 72.84394836]
[172.68258667 82.72325897]
[174.37283325 92.93415833]
[174.63565063 103.28067017]
[173.46601868 113.56421661]
[170.88636780 123.58742523]
[166.94621277 133.15792847]
[179.65156555 141.13125610]
[192.35693359 149.10456848]
[205.06228638 157.07789612]
[217.76765442 165.05120850]
[230.47300720 173.02452087]
[243.17837524 180.99784851]
[255.88374329 188.97116089]
[268.58911133 196.94448853]
[283.81018066 193.63439941]
[296.58163452 201.90147400]
[299.64349365 216.43284607]
[312.34884644 224.40615845]
[325.11676025 232.27894592]
[337.94638062 240.05068970]
[353.11331177 236.50073242]
[366.01370239 244.56517029]
[369.30456543 259.04638672]
[382.13421631 266.81814575]
[397.94647217 267.35046387]
[404.82339478 280.56246948]
[417.65304565 288.33422852]
[430.54364014 296.00445557]
[443.49435425 303.57272339]
[459.31478882 300.90927124]
[471.16436768 311.72439575]
[469.95312500 327.72167969]
[456.61022949 336.62933350]
[441.37118530 331.61419678]
[435.92611694 316.52346802]
[422.97537231 308.95520020]
[415.60693359 308.29394531]
[409.88128662 301.16387939]
[397.05163574 293.39212036]
[382.15704346 293.41567993]
[374.36245728 279.64779663]
[361.53280640 271.87603760]
[347.17404175 275.66571045]
[334.05224609 267.96682739]
[330.17465210 252.88034058]
[317.34500122 245.10858154]
[309.98791504 244.33110046]
[304.37551880 237.11151123]
[291.67016602 229.13819885]
[277.25338745 232.70074463]
[264.25476074 224.79565430]
[260.61578369 209.64984131]
[247.91041565 201.67652893]
[235.20506287 193.70320129]
[222.49969482 185.72988892]
[209.79434204 177.75657654]
[197.08897400 169.78324890]
[184.38362122 161.80993652]
[171.67825317 153.83660889]
[158.97290039 145.86329651]
[142.26152039 161.60525513]
[121.55908203 171.52935791]
[98.82064819 174.69841003]
[76.19358826 170.81312561]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 65]
[2 64]
[3 63]
[4 62]
[5 61]
[7 42]
[8 41]
[9 40]
[10 39]
[15 38]
[16 37]
[17 36]
[18 35]
[19 34]
[22 29]
[23 28]
[48 59]
[49 58]
[80 116]
[81 115]
[82 114]
[83 113]
[84 112]
[87 108]
[88 107]
[89 106]
[90 105]
[91 104]
[92 103]
[119 132]
[120 131]
[121 130]
[122 129]
[123 128]
[140 194]
[141 193]
[142 192]
[143 191]
[144 190]
[145 189]
[146 188]
[147 187]
[148 186]
[151 183]
[152 182]
[153 180]
[154 179]
[157 176]
[158 175]
[160 173]
[161 172]
[162 170]
[163 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
