%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:27:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACAAAGUUCAGUGACUGAGAGGGCUGAGCGGAGGCUGCUGAAGGGGAGAAAGGAGUGAGGAGCUGCUGGGCAGAGAGGGACUGUCCGGCUCCCAGAUGCUGGGCCUCCUGGGGAGCACAGCCCUCGUGGGAUGGAUCACAGGUGCUGCUGUGGCGGUCCUGCUGCUGCUGCUGCUGCUGGCCACCUGCCUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[469.06112671 519.18463135]
[468.28515625 504.20474243]
[472.81924438 489.90643311]
[482.08578491 478.11105347]
[494.90441895 470.32113647]
[509.64227295 467.52902222]
[524.41973877 470.08953857]
[513.19818115 460.13583374]
[501.97662354 450.18209839]
[490.75506592 440.22836304]
[479.53350830 430.27465820]
[468.54992676 433.41067505]
[457.30117798 430.82327271]
[448.61285400 423.04351807]
[444.72451782 411.92126465]
[446.71319580 400.18627930]
[435.81475830 389.87976074]
[424.91632080 379.57327271]
[410.35287476 376.44998169]
[405.64248657 361.34625244]
[394.74404907 351.03973389]
[383.84561157 340.73324585]
[372.94717407 330.42672729]
[362.04873657 320.12023926]
[351.15029907 309.81372070]
[340.25186157 299.50723267]
[329.35342407 289.20071411]
[314.78994751 286.07742310]
[310.07958984 270.97369385]
[299.18115234 260.66717529]
[287.80227661 250.89367676]
[275.96902466 241.67552185]
[264.13580322 232.45736694]
[252.30256653 223.23919678]
[240.46931458 214.02104187]
[228.63607788 204.80288696]
[216.80284119 195.58473206]
[204.82411194 186.55644226]
[192.70292664 177.72032166]
[180.60371399 184.06813049]
[166.88391113 184.58360291]
[154.22096252 179.10906982]
[145.11071777 168.66136169]
[141.37544250 155.24353027]
[143.79963684 141.46086121]
[131.82090759 132.43258667]
[119.84217072 123.40428925]
[107.86343384 114.37600708]
[109.95375061 129.22964478]
[101.54409027 141.65049744]
[86.97637177 145.22564697]
[73.77194977 138.10923767]
[68.74829102 123.97549438]
[74.49913025 110.12168884]
[88.05732727 103.70042419]
[73.93038940 98.65763092]
[59.80345917 93.61484528]
[44.74844742 99.15796661]
[31.10324287 90.72066498]
[29.33527756 74.77532959]
[40.80078506 63.55384445]
[56.70440674 65.66437531]
[64.84624481 79.48790741]
[78.97318268 84.53070068]
[93.10011292 89.57348633]
[101.93623352 77.45230865]
[92.81272125 65.54594421]
[83.68920898 53.63957977]
[74.56569672 41.73321152]
[65.44218445 29.82684898]
[56.31867599 17.92048264]
[47.19516373 6.01411819]
[38.07165146 -5.89224672]
[28.94813919 -17.79861069]
[13.31892967 -18.31029320]
[1.70973456 -28.78696251]
[-0.39793926 -44.28185654]
[7.99108744 -57.47875977]
[22.91577339 -62.14649582]
[37.32913589 -56.08110809]
[44.42562866 -42.14648056]
[40.85450363 -26.92212296]
[49.97801590 -15.01575851]
[59.10152817 -3.10939360]
[68.22504425 8.79697132]
[77.34855652 20.70333672]
[86.47206116 32.60970306]
[95.59557343 44.51606750]
[104.71908569 56.42243195]
[113.84259796 68.32879639]
[116.89172363 102.39727020]
[128.87045288 111.42556000]
[140.84918213 120.45384979]
[152.82792664 129.48213196]
[167.97549438 122.86686707]
[184.29913330 124.77889252]
[197.35792542 134.60276794]
[203.64724731 149.58363342]
[201.53904724 165.59915161]
[213.66023254 174.43525696]
[220.20130920 175.51831055]
[224.55323792 179.19570923]
[226.02099609 183.75149536]
[237.85423279 192.96965027]
[249.68746948 202.18780518]
[261.52072144 211.40596008]
[273.35394287 220.62411499]
[285.18719482 229.84226990]
[297.02044678 239.06044006]
[296.32769775 224.07644653]
[306.32351685 212.89236450]
[321.29095459 211.90472412]
[332.66967773 221.67839050]
[333.95181274 236.62348938]
[324.40408325 248.19244385]
[309.48764038 249.76875305]
[320.38607788 260.07525635]
[335.72906494 263.93572998]
[339.65994263 278.30227661]
[350.55838013 288.60879517]
[361.45678711 298.91528320]
[372.35522461 309.22180176]
[383.25366211 319.52828979]
[394.15209961 329.83480835]
[405.05053711 340.14129639]
[415.94897461 350.44781494]
[431.29199219 354.30828857]
[435.22283936 368.67483521]
[446.12127686 378.98132324]
[457.01971436 389.28784180]
[475.91394043 388.03009033]
[489.50289917 400.75527954]
[489.48724365 419.05310059]
[500.70880127 429.00680542]
[511.93035889 438.96054077]
[523.15191650 448.91427612]
[534.37347412 458.86798096]
[542.31164551 459.74163818]
[547.96740723 464.16741943]
[550.13745117 470.16827393]
[563.16754150 477.59912109]
[576.19757080 485.02993774]
[589.22766113 492.46078491]
[602.25775146 499.89163208]
[615.28778076 507.32247925]
[621.90881348 507.67010498]
[626.64331055 510.83981323]
[628.60943604 515.20373535]
[641.39593506 523.04632568]
[654.18237305 530.88891602]
[667.03100586 538.62927246]
[679.94091797 546.26696777]
[692.85083008 553.90460205]
[705.76074219 561.54229736]
[718.67065430 569.17999268]
[731.58056641 576.81768799]
[744.49047852 584.45532227]
[757.40039062 592.09301758]
[767.77642822 588.78198242]
[778.04870605 591.67492676]
[784.88433838 599.58190918]
[786.20465088 609.72875977]
[798.86444092 617.77423096]
[815.26281738 617.93041992]
[823.09008789 632.34106445]
[814.29412842 646.18170166]
[797.92352295 645.21429443]
[790.81896973 630.43402100]
[778.15917969 622.38854980]
[758.83917236 622.99395752]
[749.76269531 605.00292969]
[736.85278320 597.36523438]
[723.94287109 589.72760010]
[711.03295898 582.08990479]
[698.12304688 574.45220947]
[685.21313477 566.81451416]
[672.30322266 559.17687988]
[659.39331055 551.53918457]
[652.02722168 550.83831787]
[646.33984375 543.67535400]
[633.55334473 535.83276367]
[620.76684570 527.99023438]
[607.85693359 520.35253906]
[594.82690430 512.92169189]
[581.79681396 505.49084473]
[568.76672363 498.06002808]
[555.73669434 490.62918091]
[542.70660400 483.19833374]
[549.87768555 496.37313843]
[551.96527100 511.22717285]
[548.70355225 525.86822510]
[540.50787354 538.43133545]
[528.42236328 547.31616211]
[513.98638916 551.39086914]
[499.03894043 550.13647461]
[485.48400879 543.71276855]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 137]
[8 136]
[9 135]
[10 134]
[11 133]
[16 130]
[17 129]
[18 128]
[20 126]
[21 125]
[22 124]
[23 123]
[24 122]
[25 121]
[26 120]
[27 119]
[29 117]
[30 116]
[31 109]
[32 108]
[33 107]
[34 106]
[35 105]
[36 104]
[37 103]
[38 100]
[39 99]
[45 94]
[46 93]
[47 92]
[48 91]
[55 65]
[56 64]
[57 63]
[66 90]
[67 89]
[68 88]
[69 87]
[70 86]
[71 85]
[72 84]
[73 83]
[74 82]
[140 188]
[141 187]
[142 186]
[143 185]
[144 184]
[145 183]
[148 182]
[149 181]
[150 180]
[151 178]
[152 177]
[153 176]
[154 175]
[155 174]
[156 173]
[157 172]
[158 171]
[162 169]
[163 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
