%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:51:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCCCCGCGCUCCGCGCCCCCUUCUCUUUCAGCCUCGGGCACGGGGGAGGCUCGGCGGACCUGCUGAUUGGGAACCGAUAUGGCGGCGACUCUGGGCAGCGGGGAGCGCUGGACGGAAGCUUACAUUGACGCAGUUAGAAGAAACAAAUACCCAGAAGACACACCUCCUGAGAGUCAUG\
) } def
/len { sequence length } bind def

/coor [
[357.06182861 297.73406982]
[342.48110962 285.26690674]
[332.94769287 268.59460449]
[329.59078979 249.66290283]
[332.81796265 230.68688965]
[319.49447632 223.79595947]
[304.63522339 224.82164001]
[295.93194580 211.60939026]
[282.60845947 204.71847534]
[269.28497314 197.82754517]
[255.96148682 190.93663025]
[242.63801575 184.04570007]
[229.31452942 177.15478516]
[215.99104309 170.26385498]
[201.13179016 171.28953552]
[192.42851257 158.07728577]
[179.10502625 151.18635559]
[165.78155518 144.29544067]
[148.33326721 146.06233215]
[138.50552368 130.50476074]
[125.06445312 123.84612274]
[111.62337494 117.18747711]
[77.76950836 117.71855927]
[62.89642334 115.77141571]
[48.02333832 113.82427979]
[33.15025330 111.87714386]
[18.27716827 109.93000793]
[5.82402849 119.28720093]
[-9.23165703 117.10065460]
[-18.07556534 105.17082214]
[-32.94865036 103.22368622]
[-47.82173538 101.27655029]
[-62.69482040 99.32941437]
[-77.56790924 97.38227081]
[-95.79103851 105.95950317]
[-110.64554596 93.60527802]
[-125.57724762 92.17550659]
[-136.02032471 99.77548981]
[-148.44290161 98.26052094]
[-156.23634338 88.98703003]
[-171.14099121 87.29832458]
[-180.04788208 89.44542694]
[-186.28883362 85.44877625]
[-201.16192627 83.50164032]
[-216.03500366 81.55450439]
[-230.90809631 79.60736847]
[-244.45378113 88.20351410]
[-259.57254028 82.83666992]
[-264.66653442 67.62381744]
[-255.82809448 54.23496246]
[-239.83731079 52.94087982]
[-228.96095276 64.73428345]
[-214.08787537 66.68141937]
[-199.21478271 68.62855530]
[-184.34170532 70.57569122]
[-169.45228577 72.39368439]
[-154.54763794 74.08238983]
[-138.87550354 66.21166229]
[-124.14747620 77.24380493]
[-109.21577454 78.67356873]
[-101.92488861 71.46733856]
[-91.65283203 69.43538666]
[-81.76033020 73.48953247]
[-75.62076569 82.50919342]
[-60.74768448 84.45632935]
[-45.87459946 86.40346527]
[-31.00151443 88.35060120]
[-16.12842941 90.29773712]
[-4.51156998 81.04656982]
[10.59959126 82.80936432]
[20.22430611 95.05692291]
[35.09738922 97.00405884]
[49.97047424 98.95119476]
[64.84355927 100.89833069]
[79.71664429 102.84547424]
[89.31406403 91.31770325]
[84.70358276 77.04383087]
[80.09309387 62.76995850]
[65.91143799 55.79455185]
[60.89501190 40.80752563]
[68.01996613 26.70041466]
[83.05918884 21.84271622]
[97.09017944 29.11641884]
[101.78860474 44.20616150]
[94.36696625 58.15946960]
[98.97745514 72.43334198]
[103.58793640 86.70721436]
[105.44778442 71.82295990]
[116.02954865 61.19158173]
[130.90493774 59.26213455]
[143.84884644 66.84206390]
[149.44444275 80.75929260]
[145.35008240 95.18968201]
[133.27917480 104.09435272]
[118.28202057 103.74640656]
[131.72309875 110.40505219]
[145.16416931 117.06369019]
[157.63040161 113.68570709]
[168.69680786 119.52951050]
[172.67247009 130.97195435]
[185.99595642 137.86288452]
[199.31944275 144.75379944]
[215.13166809 144.22100830]
[222.88197327 156.94036865]
[236.20544434 163.83129883]
[249.52893066 170.72221375]
[262.85241699 177.61314392]
[276.17590332 184.50405884]
[289.49938965 191.39498901]
[302.82287598 198.28591919]
[318.63510132 197.75312805]
[326.38537598 210.47248840]
[339.70886230 217.36340332]
[347.04931641 208.88833618]
[355.91940308 202.04138184]
[365.96517944 197.09242249]
[376.78643799 194.23565674]
[387.95263672 193.58203125]
[399.02008057 195.15484619]
[409.54953003 198.88900757]
[419.12356567 204.63371277]
[427.36328125 212.15847778]
[433.94317627 221.16246033]
[438.60394287 231.28640747]
[441.16293335 242.12710571]
[441.52099609 253.25329590]
[439.66662598 264.22293091]
[435.67602539 274.60073853]
[448.06613159 283.05566406]
[460.45620728 291.51058960]
[472.84628296 299.96551514]
[483.90676880 295.51940918]
[495.61880493 296.96246338]
[505.07489014 303.81942749]
[509.98416138 314.28576660]
[509.22702026 325.70117188]
[521.31616211 334.58102417]
[533.40539551 343.46087646]
[545.49456787 352.34072876]
[561.19714355 354.27444458]
[566.87420654 368.04470825]
[578.96337891 376.92453003]
[590.62780762 367.36456299]
[604.30352783 361.00646973]
[619.13092041 358.24996948]
[634.17797852 359.26834106]
[648.49877930 363.99752808]
[661.19311523 372.14025879]
[671.46307373 383.18472290]
[678.66296387 396.43658447]
[682.34027100 411.06289673]
[682.26379395 426.14416504]
[678.43835449 440.73242188]
[671.10443115 453.91058350]
[660.72302246 464.85031128]
[647.94677734 472.86392212]
[633.57873535 477.44763184]
[618.52215576 478.31335449]
[603.72344971 475.40661621]
[590.11285400 468.91018677]
[578.54608154 459.23242188]
[569.75006104 446.98165894]
[564.27783203 432.92797852]
[562.47332764 417.95486450]
[564.44995117 403.00347900]
[570.08355713 389.01373291]
[557.99438477 380.13388062]
[543.15649414 378.83529663]
[536.61468506 364.42990112]
[524.52551270 355.55004883]
[512.43634033 346.67019653]
[500.34716797 337.79034424]
[482.47415161 341.65783691]
[467.17236328 331.07415771]
[464.39138794 312.35559082]
[452.00128174 303.90066528]
[439.61120605 295.44573975]
[427.22109985 286.99081421]
[412.23217773 298.82595825]
[394.10992432 304.92047119]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 113]
[6 112]
[8 110]
[9 109]
[10 108]
[11 107]
[12 106]
[13 105]
[14 104]
[16 102]
[17 101]
[18 100]
[20 97]
[21 96]
[22 95]
[23 75]
[24 74]
[25 73]
[26 72]
[27 71]
[30 68]
[31 67]
[32 66]
[33 65]
[34 64]
[36 60]
[37 59]
[40 57]
[41 56]
[43 55]
[44 54]
[45 53]
[46 52]
[76 87]
[77 86]
[78 85]
[128 178]
[129 177]
[130 176]
[131 175]
[136 172]
[137 171]
[138 170]
[139 169]
[141 167]
[142 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
