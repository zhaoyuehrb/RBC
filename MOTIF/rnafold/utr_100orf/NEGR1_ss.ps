%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:21:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCUGUGGCGCGCCGCCUGGUUCCCGGGAAGACUCGCCAGCACCAGGGGGUGGGGGAGUGCGAGCUGAAAGCUGCUGGAGAGUGAGCAGCCCUAGCAGGGAUGGACAUGAUGCUGUUGGUGCAGGGUGCUUGUUGCUCGAACCAGUGGCUGGCGGCGGUGCUCCUCAGCCUGUGCUGCCUGCUACCCUCCUGCCUCCCGG\
) } def
/len { sequence length } bind def

/coor [
[-2.49742579 250.62773132]
[-4.94215536 253.22583008]
[-7.77736235 254.67254639]
[-10.57036972 254.98931885]
[-20.44953537 266.27658081]
[-30.24019241 277.64068604]
[-39.94174194 289.08096313]
[-49.64328766 300.52124023]
[-59.34483719 311.96151733]
[-69.04638672 323.40179443]
[-62.31320572 338.20971680]
[-62.70833969 354.41357422]
[-70.10201263 368.77224731]
[-82.96968842 378.43588257]
[-98.70612335 381.51135254]
[-114.15278625 377.43304443]
[-123.67434692 389.02355957]
[-133.19590759 400.61407471]
[-142.71746826 412.20455933]
[-152.23902893 423.79507446]
[-157.62123108 439.87203979]
[-174.55982971 439.15069580]
[-178.55577087 422.67437744]
[-163.82954407 414.27352905]
[-154.30796814 402.68301392]
[-144.78640747 391.09249878]
[-135.26484680 379.50198364]
[-125.74329376 367.91149902]
[-132.19395447 355.62435913]
[-133.47683716 341.76275635]
[-129.36524963 328.41763306]
[-120.44872284 317.61462402]
[-108.04872131 311.00668335]
[-94.02285767 309.62118530]
[-80.48666382 313.70025635]
[-70.78511810 302.25997925]
[-61.08356857 290.81970215]
[-51.38201904 279.37942505]
[-41.68046951 267.93914795]
[-39.75043488 260.79861450]
[-31.73678970 256.39739990]
[-21.85762405 245.11015320]
[-12.33606148 233.51965332]
[-3.18140769 221.63720703]
[-1.54302192 206.83299255]
[13.00856400 200.62316895]
[22.16321754 188.74072266]
[31.31787109 176.85829163]
[40.47252655 164.97586060]
[49.62717819 153.09341431]
[58.78183365 141.21098328]
[67.93648529 129.32853699]
[77.09114075 117.44610596]
[86.24579620 105.56366730]
[93.02429962 92.18264008]
[97.18889618 77.77236176]
[101.35350037 63.36208725]
[105.51809692 48.95180893]
[109.68270111 34.54153061]
[113.84729767 20.13125420]
[118.01190186 5.72097635]
[112.47576141 -5.93451500]
[116.24691010 -17.85473824]
[126.78199768 -23.80966759]
[131.17131042 -38.15309525]
[135.56062317 -52.49652481]
[139.94993591 -66.83995056]
[132.79003906 -80.67373657]
[137.44575500 -95.15748596]
[150.67826843 -101.89810181]
[155.06758118 -116.24153137]
[159.45689392 -130.58496094]
[163.84620667 -144.92839050]
[168.23551941 -159.27182007]
[172.62483215 -173.61524963]
[177.01414490 -187.95867920]
[181.40345764 -202.30209351]
[185.79277039 -216.64552307]
[180.37486267 -236.05676270]
[195.06243896 -248.62583923]
[199.00129700 -263.09942627]
[202.94017029 -277.57305908]
[206.87904358 -292.04666138]
[210.47753906 -306.60861206]
[213.73365784 -321.25094604]
[216.98979187 -335.89328003]
[220.24592590 -350.53558350]
[223.50205994 -365.17791748]
[222.30989075 -374.24255371]
[226.92520142 -380.02279663]
[230.40977478 -394.61242676]
[233.89434814 -409.20208740]
[237.37893677 -423.79171753]
[236.32859802 -432.87390137]
[241.03366089 -438.58129883]
[244.74584961 -453.11468506]
[248.45802307 -467.64810181]
[240.65757751 -481.13107300]
[244.62928772 -495.81710815]
[257.53131104 -503.17056274]
[261.24349976 -517.70397949]
[264.95568848 -532.23736572]
[268.66784668 -546.77075195]
[272.38003540 -561.30413818]
[262.37084961 -573.16149902]
[261.27639771 -588.63989258]
[269.51748657 -601.78765869]
[283.92529297 -607.54919434]
[298.95968628 -603.70904541]
[308.83963013 -591.74389648]
[309.76611328 -576.25445557]
[301.38287354 -563.19689941]
[286.91342163 -557.59197998]
[283.20126343 -543.05859375]
[279.48907471 -528.52520752]
[275.77688599 -513.99176025]
[272.06472778 -499.45837402]
[279.85995483 -486.81835938]
[276.30230713 -472.02655029]
[262.99142456 -463.93591309]
[259.27923584 -449.40249634]
[255.56706238 -434.86911011]
[251.96858215 -420.30712891]
[248.48399353 -405.71749878]
[244.99942017 -391.12786865]
[241.51483154 -376.53820801]
[238.14437866 -361.92178345]
[234.88824463 -347.27944946]
[231.63211060 -332.63714600]
[228.37599182 -317.99481201]
[225.11985779 -303.35247803]
[226.70022583 -300.19201660]
[226.82353210 -296.10736084]
[225.07135010 -291.79385376]
[221.35264587 -288.10778809]
[217.41378784 -273.63418579]
[213.47491455 -259.16058350]
[209.53604126 -244.68696594]
[215.39228821 -236.30130005]
[215.66754150 -225.85710144]
[210.02917480 -216.80148315]
[200.13619995 -212.25621033]
[195.74688721 -197.91279602]
[191.35757446 -183.56936646]
[186.96826172 -169.22593689]
[182.57894897 -154.88250732]
[178.18963623 -140.53907776]
[173.80032349 -126.19564819]
[169.41101074 -111.85221863]
[165.02169800 -97.50878906]
[172.21589661 -84.51728058]
[167.96882629 -69.90847778]
[154.29336548 -62.45064163]
[149.90405273 -48.10721207]
[145.51473999 -33.76378250]
[141.12542725 -19.42035484]
[145.98707581 -2.56180954]
[132.42218018 9.88557625]
[128.25758362 24.29585457]
[124.09297943 38.70613098]
[119.92837524 53.11640930]
[115.76377869 67.52668762]
[111.59917450 81.93696594]
[107.43457794 96.34724426]
[118.38183594 95.65727997]
[129.49147034 99.78429413]
[141.44509888 108.84580994]
[153.39871216 117.90731812]
[165.35232544 126.96883392]
[181.68206787 128.47604370]
[188.29493713 143.48277283]
[178.38819885 156.55137634]
[162.15304565 154.23800659]
[156.29081726 138.92245483]
[144.33718872 129.86093140]
[132.38357544 120.79942322]
[120.42996216 111.73790741]
[126.57592773 125.42100525]
[138.21031189 134.88888550]
[143.64721680 148.86888123]
[141.46655273 163.70951843]
[132.23789978 175.53457642]
[118.37168884 181.25543213]
[103.48966217 179.37786865]
[91.47886658 170.39227295]
[85.47642517 156.64561462]
[87.05011749 141.72839355]
[95.79100800 129.53512573]
[98.12823486 114.71832275]
[88.97357941 126.60076141]
[79.81892395 138.48320007]
[70.66426849 150.36563110]
[61.50961685 162.24807739]
[52.35496140 174.13050842]
[43.20030975 186.01293945]
[34.04565430 197.89538574]
[24.89100075 209.77781677]
[22.59781265 225.43194580]
[8.70102978 230.79187012]
[-0.45362449 242.67430115]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 42]
[5 41]
[6 39]
[7 38]
[8 37]
[9 36]
[10 35]
[16 28]
[17 27]
[18 26]
[19 25]
[20 24]
[43 200]
[44 199]
[46 197]
[47 196]
[48 195]
[49 194]
[50 193]
[51 192]
[52 191]
[53 190]
[54 189]
[55 164]
[56 163]
[57 162]
[58 161]
[59 160]
[60 159]
[61 158]
[64 156]
[65 155]
[66 154]
[67 153]
[70 150]
[71 149]
[72 148]
[73 147]
[74 146]
[75 145]
[76 144]
[77 143]
[78 142]
[80 138]
[81 137]
[82 136]
[83 135]
[84 131]
[85 130]
[86 129]
[87 128]
[88 127]
[90 126]
[91 125]
[92 124]
[93 123]
[95 122]
[96 121]
[97 120]
[100 117]
[101 116]
[102 115]
[103 114]
[104 113]
[166 177]
[167 176]
[168 175]
[169 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
