%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:00:21 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (LTN1)
} def

/sequence { (\
AGUGGGGCAGCAAAUGGACAGGGUGGGUGGCGGAAAAGGGCCCGGGGGAAGUUAUUACAGGGUGUCCUCUUCCGCCGCCAGAAGCCGGAAGUUGUGUCCCGGACGUGUCAACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 11 0.003940702 ubox
2 104 0.271555596 ubox
2 106 0.012068525 ubox
2 108 0.007368248 ubox
2 112 0.050902378 ubox
3 10 0.003887001 ubox
3 101 0.729021199 ubox
3 103 0.230217020 ubox
3 105 0.007253925 ubox
3 107 0.003411922 ubox
3 110 0.010978189 ubox
3 111 0.048116871 ubox
4 11 0.003381225 ubox
4 98 0.021660913 ubox
4 99 0.018329463 ubox
4 100 0.995002029 ubox
4 104 0.005078935 ubox
4 109 0.012194778 ubox
4 113 0.019596900 ubox
5 97 0.021909672 ubox
5 98 0.018419251 ubox
5 99 0.995648213 ubox
5 100 0.066134535 ubox
5 108 0.011511635 ubox
5 109 0.005197026 ubox
5 112 0.019719096 ubox
5 113 0.005391816 ubox
6 97 0.014082753 ubox
6 98 0.995552844 ubox
6 99 0.066186513 ubox
6 108 0.003784891 ubox
6 109 0.055403921 ubox
6 112 0.005375639 ubox
7 95 0.139959562 ubox
7 97 0.984710212 ubox
7 98 0.065778128 ubox
7 106 0.011495794 ubox
7 108 0.056163770 ubox
8 94 0.159052178 ubox
8 96 0.981658973 ubox
8 105 0.011475115 ubox
8 107 0.056336646 ubox
9 93 0.179823969 ubox
9 95 0.808600384 ubox
9 106 0.055340706 ubox
10 92 0.268535142 ubox
10 95 0.544320434 ubox
10 97 0.013102840 ubox
10 106 0.008441502 ubox
10 108 0.005036102 ubox
11 91 0.272377042 ubox
11 94 0.924640774 ubox
11 96 0.013918420 ubox
11 105 0.013985695 ubox
11 107 0.005130325 ubox
12 93 0.885752954 ubox
12 95 0.014124615 ubox
12 106 0.005056513 ubox
13 92 0.819669999 ubox
13 93 0.302441609 ubox
14 24 0.004345425 ubox
14 92 0.406691421 ubox
14 95 0.008627708 ubox
15 23 0.004431593 ubox
15 87 0.349344249 ubox
15 91 0.480117344 ubox
15 94 0.012709103 ubox
15 101 0.016101978 ubox
16 86 0.375881906 ubox
16 93 0.014335569 ubox
16 99 0.055715075 ubox
16 100 0.013599472 ubox
17 85 0.375750883 ubox
17 92 0.022359381 ubox
17 93 0.043645000 ubox
17 98 0.056570824 ubox
17 99 0.009948500 ubox
17 109 0.008034802 ubox
18 24 0.021355252 ubox
18 92 0.066407621 ubox
18 95 0.006764622 ubox
18 97 0.057299524 ubox
18 108 0.008093658 ubox
19 23 0.021722213 ubox
19 25 0.033184123 ubox
19 91 0.071099290 ubox
19 94 0.008786449 ubox
19 96 0.057272047 ubox
19 107 0.008111228 ubox
20 24 0.026947896 ubox
20 93 0.008868016 ubox
20 95 0.055625074 ubox
20 106 0.007794373 ubox
21 86 0.804017612 ubox
21 92 0.008502333 ubox
21 93 0.004519880 ubox
22 79 0.016345924 ubox
22 85 0.803388269 ubox
22 86 0.397898066 ubox
22 93 0.026145173 ubox
23 78 0.015773068 ubox
23 85 0.399253477 ubox
23 92 0.022048833 ubox
23 104 0.006769396 ubox
24 77 0.014716258 ubox
24 80 0.208146931 ubox
24 84 0.370315197 ubox
24 87 0.008189268 ubox
24 91 0.004705344 ubox
24 103 0.006597907 ubox
25 76 0.005966209 ubox
25 79 0.177552465 ubox
25 86 0.008470158 ubox
26 75 0.004056373 ubox
26 78 0.129640899 ubox
26 79 0.982155068 ubox
26 85 0.005992699 ubox
27 78 0.991415760 ubox
28 77 0.998444181 ubox
29 76 0.999943493 ubox
30 75 0.999985605 ubox
31 74 0.999979734 ubox
32 73 0.999976724 ubox
33 72 0.999988407 ubox
34 70 0.004927159 ubox
34 71 0.998901628 ubox
35 70 0.935928681 ubox
35 71 0.019801188 ubox
36 70 0.027222036 ubox
36 71 0.003321830 ubox
37 68 0.982205225 ubox
37 70 0.008028597 ubox
38 66 0.009348099 ubox
38 67 0.999674714 ubox
38 68 0.015054756 ubox
38 69 0.009209618 ubox
39 65 0.008399477 ubox
39 66 0.999104695 ubox
39 67 0.016638672 ubox
39 68 0.007463237 ubox
40 63 0.381994736 ubox
40 65 0.916764009 ubox
40 66 0.016103482 ubox
40 67 0.006353510 ubox
41 61 0.003495502 ubox
41 62 0.432891586 ubox
41 64 0.901134291 ubox
42 48 0.010768424 ubox
42 60 0.004356911 ubox
42 61 0.452960494 ubox
42 62 0.890803671 ubox
43 47 0.010727040 ubox
43 60 0.454721811 ubox
43 61 0.889807376 ubox
44 53 0.026389029 ubox
44 56 0.029349568 ubox
45 52 0.025726360 ubox
45 53 0.010165458 ubox
45 55 0.028032769 ubox
45 56 0.061223993 ubox
45 69 0.003475683 ubox
46 52 0.015439066 ubox
46 53 0.052622644 ubox
46 55 0.081283336 ubox
46 56 0.176529985 ubox
46 68 0.003479524 ubox
47 52 0.050287045 ubox
47 53 0.036560945 ubox
47 55 0.175759653 ubox
47 56 0.252846561 ubox
47 67 0.003486038 ubox
48 52 0.025573245 ubox
48 55 0.177020515 ubox
48 56 0.438450819 ubox
48 66 0.003487103 ubox
49 55 0.420665349 ubox
49 56 0.398843670 ubox
49 65 0.003407555 ubox
50 55 0.390976061 ubox
50 56 0.038526033 ubox
51 55 0.030242818 ubox
51 58 0.112637987 ubox
52 57 0.110165684 ubox
52 60 0.009456326 ubox
53 59 0.009343769 ubox
53 60 0.007558911 ubox
54 63 0.004469452 ubox
55 62 0.004489353 ubox
56 61 0.003958817 ubox
83 93 0.009832307 ubox
84 92 0.013132179 ubox
85 91 0.013631755 ubox
85 102 0.010213193 ubox
86 101 0.010247736 ubox
87 93 0.003955387 ubox
87 100 0.010090440 ubox
88 99 0.009905651 ubox
89 97 0.003371951 ubox
96 104 0.005015484 ubox
97 103 0.005018631 ubox
98 102 0.004980199 ubox
100 107 0.006783995 ubox
101 106 0.018541896 ubox
101 109 0.088911397 ubox
101 113 0.134734475 ubox
102 108 0.076479325 ubox
102 109 0.230898215 ubox
102 112 0.136105114 ubox
103 108 0.205125086 ubox
105 112 0.446356870 ubox
106 111 0.443463049 ubox
3 101 0.9500000 lbox
4 100 0.9500000 lbox
5 99 0.9500000 lbox
6 98 0.9500000 lbox
7 97 0.9500000 lbox
8 96 0.9500000 lbox
9 95 0.9500000 lbox
11 94 0.9500000 lbox
12 93 0.9500000 lbox
13 92 0.9500000 lbox
21 86 0.9500000 lbox
22 85 0.9500000 lbox
26 79 0.9500000 lbox
27 78 0.9500000 lbox
28 77 0.9500000 lbox
29 76 0.9500000 lbox
30 75 0.9500000 lbox
31 74 0.9500000 lbox
32 73 0.9500000 lbox
33 72 0.9500000 lbox
34 71 0.9500000 lbox
35 70 0.9500000 lbox
37 68 0.9500000 lbox
38 67 0.9500000 lbox
39 66 0.9500000 lbox
40 65 0.9500000 lbox
41 64 0.9500000 lbox
42 62 0.9500000 lbox
43 61 0.9500000 lbox
showpage
end
%%EOF
