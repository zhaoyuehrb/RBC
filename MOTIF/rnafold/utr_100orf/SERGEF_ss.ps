%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:03:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUCUCCCGGCCUGCGGGCCGCUUCCCACCACAGACCCCGCCCCGCGCCCUACCCAUCACGCGUCCCCGGUCCGGCUCCGGCGCUCACCUACCCCCGGCAGGCGCCGCCCCCGUGCCGUCCCUCCCGGAAGCGCCGGCGGAGCGUCCUCGCAUGGAGCGCGAGCCCAGCGCCUCGGAGGCCGCCCCCGCGGCGGCCGCGCUCUUCGCCUGGGGUGCAAAUAGCUAUGGGCAACUUGGCCUCGGCCAUAAGG\
) } def
/len { sequence length } bind def

/coor [
[80.90265656 731.63360596]
[65.75481415 731.06909180]
[51.71475601 725.35479736]
[40.47788620 715.18090820]
[33.40111542 701.77587891]
[31.33899117 686.75842285]
[34.54053116 671.94201660]
[42.61912918 659.11578369]
[54.59925842 649.82861328]
[69.03425598 645.20184326]
[69.59291077 630.21228027]
[70.15156555 615.22265625]
[70.71021271 600.23309326]
[63.13491821 593.42462158]
[60.48805237 583.36242676]
[63.87209320 573.29211426]
[72.40303802 566.59936523]
[73.33374023 551.62823486]
[74.26445007 536.65716553]
[75.19515228 521.68609619]
[76.12585449 506.71496582]
[77.05655670 491.74386597]
[68.41204071 476.45852661]
[78.75325775 461.20733643]
[79.49799347 446.22583008]
[80.14970398 431.23999023]
[80.70835114 416.25039673]
[81.26700592 401.26080322]
[81.82566071 386.27120972]
[67.51371765 381.89883423]
[54.81153870 373.96463013]
[44.58817291 363.00436401]
[37.54490662 349.76107788]
[34.16715240 335.13467407]
[34.69101715 320.12088013]
[39.08678818 305.74328613]
[47.06056976 292.98376465]
[58.07390594 282.71527100]
[71.38014984 275.64212036]
[86.07508087 272.25180054]
[86.63373566 257.26223755]
[87.19239044 242.27262878]
[87.75103760 227.28303528]
[88.30969238 212.29344177]
[88.86834717 197.30384827]
[89.42699432 182.31425476]
[82.16907501 169.30764771]
[90.41497040 155.80522156]
[90.97362518 140.81562805]
[84.05188751 138.63998413]
[77.61061859 135.30023193]
[71.84387970 130.89698792]
[66.92540741 125.56290436]
[63.00337601 119.45867920]
[60.19594574 112.76822662]
[58.58769226 105.69310760]
[58.22707748 98.44646454]
[59.12495804 91.24662781]
[61.25428772 84.31050110]
[64.55091095 77.84706116]
[68.91551971 72.05101776]
[74.21660614 67.09700775]
[67.23307800 53.82182693]
[60.24954605 40.54665375]
[44.97041321 39.84278488]
[32.17950058 31.63977432]
[25.25790596 18.22493744]
[25.97552299 3.24691987]
[34.03960419 -9.27650547]
[27.05607224 -22.55168152]
[13.78354263 -31.16275024]
[14.70572472 -46.02878189]
[7.72219372 -59.30395508]
[0.73866266 -72.57913208]
[-6.24486828 -85.85430908]
[-10.61345291 -88.61215210]
[-13.24161243 -92.38572693]
[-14.03315639 -96.34912109]
[-13.23081875 -99.75650787]
[-19.71509171 -113.28256226]
[-26.19936371 -126.80862427]
[-32.68363571 -140.33467102]
[-39.16790771 -153.86073303]
[-45.65217972 -167.38679504]
[-52.13645172 -180.91284180]
[-58.62072372 -194.43890381]
[-62.92367172 -180.06933594]
[-74.05454254 -170.01429749]
[-88.78608704 -167.18911743]
[-102.84709167 -172.41293335]
[-112.16075134 -184.17115784]
[-114.02669525 -199.05464172]
[-107.90391541 -212.74813843]
[-95.56764221 -221.28137207]
[-80.59459686 -222.18026733]
[-67.32780457 -215.18588257]
[-72.43865204 -229.28833008]
[-77.54950714 -243.39077759]
[-82.66035461 -257.49322510]
[-94.63672638 -267.83139038]
[-91.69887543 -282.43338013]
[-96.80972290 -296.53582764]
[-101.92057037 -310.63827515]
[-113.89694214 -320.97644043]
[-110.95909119 -335.57843018]
[-116.06993866 -349.68087769]
[-128.04631042 -360.01901245]
[-125.10845947 -374.62100220]
[-130.21931458 -388.72348022]
[-144.63806152 -395.19454956]
[-150.17974854 -409.99542236]
[-143.55657959 -424.34494019]
[-128.69795227 -429.72982788]
[-114.41925049 -422.95532227]
[-109.19175720 -408.04061890]
[-116.11685944 -393.83432007]
[-111.00600433 -379.73187256]
[-99.39520264 -370.40243530]
[-101.96748352 -354.79171753]
[-96.85663605 -340.68927002]
[-85.24583435 -331.35983276]
[-87.81811523 -315.74914551]
[-82.70726776 -301.64666748]
[-77.59642029 -287.54421997]
[-65.98561096 -278.21478271]
[-68.55789948 -262.60409546]
[-63.44705200 -248.50163269]
[-58.33620071 -234.39918518]
[-53.22534943 -220.29672241]
[-44.69592285 -213.29005432]
[-45.09466934 -200.92317200]
[-38.61039734 -187.39712524]
[-32.12612534 -173.87106323]
[-25.64185143 -160.34500122]
[-19.15757942 -146.81895447]
[-12.67330742 -133.29289246]
[-6.18903446 -119.76683807]
[0.29523766 -106.24078369]
[7.03030777 -92.83783722]
[14.01383877 -79.56266022]
[20.99736977 -66.28749084]
[27.98089981 -53.01231003]
[40.75392151 -45.35077286]
[40.33124924 -29.53521156]
[47.31478119 -16.26003647]
[62.20316315 -15.81097031]
[74.95258331 -7.91741562]
[82.08628845 5.38583899]
[81.60018158 20.57335091]
[73.52471924 33.56312180]
[80.50824738 46.83829880]
[87.49178314 60.11347198]
[107.32030487 58.84415436]
[125.49497986 66.87302399]
[137.90966797 82.38614655]
[152.42630005 78.60891724]
[166.94291687 74.83168030]
[181.45954895 71.05444336]
[195.97618103 67.27720642]
[210.49281311 63.49997330]
[225.00942993 59.72274017]
[239.52606201 55.94550323]
[247.01879883 50.76931000]
[254.24641418 52.21268845]
[268.80880737 48.61599731]
[283.37121582 45.01930618]
[286.35336304 41.94730759]
[289.80664062 40.14870834]
[293.27810669 39.61626053]
[296.36267090 40.19794846]
[298.74591064 41.62472916]
[313.46893311 38.75548553]
[328.19195557 35.88623810]
[340.25729370 25.65207100]
[354.22958374 30.81199074]
[368.95260620 27.94274521]
[383.67562866 25.07349968]
[391.47506714 20.37217903]
[398.59921265 22.26122856]
[413.35671997 19.57502174]
[425.50393677 8.55789089]
[441.03384399 13.82607841]
[443.97061157 29.96012306]
[431.29315186 40.36270523]
[416.04293823 34.33253860]
[401.28543091 37.01874542]
[386.54486084 39.79652405]
[371.82183838 42.66576767]
[357.09881592 45.53501511]
[346.08657837 55.56395721]
[331.06121826 50.60926437]
[316.33816528 53.47850800]
[301.61514282 56.34775162]
[286.96792603 59.58171844]
[272.40551758 63.17840958]
[257.84310913 66.77510071]
[243.30329895 70.46213531]
[228.78666687 74.23936462]
[214.27003479 78.01660156]
[199.75341797 81.79383850]
[185.23678589 85.57107544]
[170.72015381 89.34830475]
[156.20353699 93.12554169]
[141.68690491 96.90277863]
[138.05813599 117.29071808]
[125.08932495 133.43525696]
[105.96321869 141.37426758]
[105.40456390 156.36386108]
[112.62252808 170.44262695]
[104.41658783 182.87290955]
[103.85794067 197.86250305]
[103.29928589 212.85209656]
[102.74063110 227.84169006]
[102.18198395 242.83128357]
[101.62332916 257.82086182]
[101.06467438 272.81045532]
[115.46648407 277.28518677]
[128.20932007 285.32916260]
[138.42776489 296.38897705]
[145.42967224 309.70663452]
[148.74305725 324.37152100]
[148.14790344 339.38265991]
[143.69079590 353.71707153]
[135.68130493 366.39935303]
[124.67047119 376.56823730]
[111.41294861 383.53491211]
[96.81524658 386.82986450]
[96.25659943 401.81945801]
[95.69794464 416.80905151]
[95.13929749 431.79864502]
[97.94112396 440.46374512]
[94.47949219 446.97058105]
[93.73475647 461.95208740]
[101.78842926 472.00424194]
[100.87569427 484.45086670]
[92.02765656 492.67456055]
[91.09695435 507.64566040]
[90.16625214 522.61676025]
[89.23554230 537.58789062]
[88.30484009 552.55895996]
[87.37413788 567.53009033]
[97.14094543 585.18444824]
[85.69980621 600.79174805]
[85.14115906 615.78131104]
[84.58250427 630.77093506]
[84.02384949 645.76049805]
[98.07441711 651.44885254]
[109.33001709 661.60205078]
[116.43148041 674.99401855]
[118.52127075 690.00762939]
[115.34704590 704.82995605]
[107.29209900 717.67102051]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 246]
[11 245]
[12 244]
[13 243]
[17 241]
[18 240]
[19 239]
[20 238]
[21 237]
[22 236]
[24 233]
[25 232]
[26 230]
[27 229]
[28 228]
[29 227]
[40 216]
[41 215]
[42 214]
[43 213]
[44 212]
[45 211]
[46 210]
[48 208]
[49 207]
[62 152]
[63 151]
[64 150]
[69 145]
[70 144]
[72 142]
[73 141]
[74 140]
[75 139]
[79 138]
[80 137]
[81 136]
[82 135]
[83 134]
[84 133]
[85 132]
[86 131]
[96 129]
[97 128]
[98 127]
[99 126]
[101 124]
[102 123]
[103 122]
[105 120]
[106 119]
[108 117]
[109 116]
[155 204]
[156 203]
[157 202]
[158 201]
[159 200]
[160 199]
[161 198]
[162 197]
[164 196]
[165 195]
[166 194]
[171 193]
[172 192]
[173 191]
[175 189]
[176 188]
[177 187]
[179 186]
[180 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
