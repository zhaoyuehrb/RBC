%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:08:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGGCCUUUCUCUGUUCGCGAUGUGACGUAACGCGCCUGCGGACUGGGCCCAGCUUGUCCUCUAUGACUUACCCAGAAGGCAACGCUUCUCUUUCUGGUCAAAAUGGCUGGUAAGCAGGCCGUUUCAGCAUCAGGCAAGUGGCUGGAUGGUAUUCGAAAAUGGUAUUACAAUGCUGCAGGAUUCAAUAAACUGGGGUUAAUGC\
) } def
/len { sequence length } bind def

/coor [
[193.00616455 163.05836487]
[189.39466858 138.71585083]
[175.35691833 133.42985535]
[161.31916809 128.14387512]
[147.28143311 122.85787964]
[133.24368286 117.57188416]
[119.20594025 112.28589630]
[105.16819000 106.99990082]
[104.36311340 113.93379974]
[99.40421295 120.49214172]
[90.66041565 124.69345856]
[78.73102570 133.78683472]
[66.80163574 142.88021851]
[60.51700211 157.39965820]
[45.70454407 158.96183777]
[33.77515030 168.05520630]
[21.84575844 177.14859009]
[9.91636562 186.24197388]
[-2.01302767 195.33535767]
[-13.94242096 204.42874146]
[-25.87181282 213.52212524]
[-28.36767769 226.17967224]
[-38.49489594 233.50765991]
[-50.50239182 232.01808167]
[-62.56973267 240.92759705]
[-74.63707733 249.83709717]
[-79.68525696 257.45565796]
[-86.95829773 258.78900146]
[-99.16075134 267.51251221]
[-108.52947998 281.64276123]
[-124.70101166 276.55178833]
[-124.28574371 259.60293579]
[-107.88429260 255.31007385]
[-95.68183136 246.58653259]
[-83.54657745 237.76976013]
[-71.47924042 228.86024475]
[-59.41189575 219.95074463]
[-53.27693939 203.51121521]
[-34.96519470 201.59272766]
[-23.03580093 192.49934387]
[-11.10640907 183.40596008]
[0.82298428 174.31257629]
[12.75237751 165.21920776]
[24.68177032 156.12582397]
[36.61116409 147.03244019]
[42.04252243 133.16342163]
[57.70825195 130.95082092]
[69.63764191 121.85744476]
[81.56703949 112.76406860]
[66.70592499 114.80057526]
[56.43881607 103.86501312]
[59.40739441 89.16169739]
[73.11305237 83.06620789]
[86.01995850 90.70909882]
[78.55316162 77.69960785]
[71.08636475 64.69010925]
[63.61957169 51.68061829]
[56.15277481 38.67112350]
[49.16341019 32.78252029]
[48.67298508 25.40455818]
[41.40642548 12.28216839]
[25.41134262 3.16307473]
[26.40386391 -14.35579586]
[18.93706703 -27.36528969]
[11.47027111 -40.37478638]
[4.00347471 -53.38428116]
[-9.07871056 -51.48868942]
[-21.99493027 -54.14662933]
[-33.21121216 -61.02027130]
[-41.40302658 -71.27243042]
[-45.61167526 -83.66849518]
[-45.35646439 -96.72509003]
[-40.68949890 -108.88757324]
[-32.18690109 -118.71514893]
[-39.25151825 -131.94735718]
[-46.31613159 -145.17955017]
[-53.38074875 -158.41175842]
[-60.44536209 -171.64396667]
[-67.50997925 -184.87617493]
[-74.57459259 -198.10836792]
[-81.63920593 -211.34057617]
[-96.99208832 -211.77024841]
[-110.06481934 -219.83247375]
[-117.34089661 -233.35853577]
[-116.86309052 -248.70999146]
[-108.75993347 -261.75738525]
[-95.21113586 -268.99102783]
[-79.86125183 -268.46511841]
[-66.83932495 -260.32110596]
[-59.64818192 -246.74969482]
[-60.22221375 -231.40153503]
[-68.40700531 -218.40519714]
[-61.34238815 -205.17298889]
[-54.27777481 -191.94078064]
[-47.21315765 -178.70857239]
[-40.14854431 -165.47637939]
[-33.08392715 -152.24417114]
[-26.01931381 -139.01196289]
[-18.95469856 -125.77976227]
[-2.10526848 -126.97200775]
[13.62259483 -120.66078186]
[25.04855156 -108.07016754]
[29.83942223 -91.69921112]
[26.98551559 -74.82595062]
[17.01296997 -60.85107422]
[24.47976494 -47.84157944]
[31.94656181 -34.83208847]
[39.41335678 -21.82259178]
[51.00646210 -18.35867691]
[57.33273315 -7.57729197]
[54.52881622 5.01560974]
[61.79537582 18.13800049]
[69.16226959 31.20432472]
[76.62906647 44.21382141]
[84.09586334 57.22331619]
[91.56266022 70.23281097]
[99.02945709 83.24230194]
[110.45418549 92.96215820]
[124.49192810 98.24814606]
[138.52967834 103.53414154]
[152.56741333 108.82012939]
[166.60516357 114.10612488]
[180.64291382 119.39211273]
[194.68066406 124.67810822]
[201.32019043 115.74282837]
[211.06434631 109.35417175]
[222.91726685 106.58596802]
[235.51678467 108.11809540]
[247.29087830 114.11444855]
[256.65325928 124.16291809]
[270.34082031 118.02688599]
[284.02838135 111.89086151]
[297.71591187 105.75482941]
[307.14355469 93.04929352]
[321.92230225 94.90328217]
[335.60986328 88.76725769]
[349.29742432 82.63122559]
[356.32916260 68.21130371]
[372.01806641 64.85903168]
[384.32894897 75.14598846]
[383.81796265 91.18090057]
[370.87707520 100.66315460]
[355.43344116 96.31877899]
[341.74591064 102.45481110]
[328.05834961 108.59083557]
[319.60974121 120.85748291]
[303.85195923 119.44238281]
[290.16439819 125.57841492]
[276.47683716 131.71444702]
[262.78927612 137.85047913]
[260.91299438 145.11198425]
[275.86669922 146.28927612]
[290.82043457 147.46655273]
[305.77416992 148.64384460]
[320.72848511 147.47387695]
[332.36724854 156.93637085]
[334.27404785 171.81468201]
[325.39767456 183.90640259]
[310.63162231 186.54537964]
[298.11706543 178.27764893]
[284.46484375 172.06343079]
[270.81262207 165.84921265]
[257.16036987 159.63499451]
[255.28407288 166.89649963]
[264.28576660 178.89521790]
[273.28747559 190.89393616]
[282.28918457 202.89265442]
[291.29089355 214.89137268]
[300.29260254 226.89009094]
[304.35446167 228.45501709]
[307.39849854 230.97901917]
[309.24801636 234.02342224]
[309.88720703 237.13728333]
[309.45129395 239.91099548]
[317.70104980 252.43862915]
[325.95080566 264.96627808]
[340.00265503 272.23645020]
[340.54043579 287.12133789]
[348.79019165 299.64898682]
[357.03994751 312.17663574]
[372.26403809 310.60006714]
[386.47265625 316.28982544]
[396.40075684 327.93847656]
[399.76696777 342.86923218]
[395.79772949 357.65112305]
[385.40515137 368.88732910]
[370.97735596 373.99591064]
[355.82977295 371.80294800]
[343.44317627 362.81231689]
[336.66394043 349.09005737]
[337.04989624 333.78942871]
[344.51229858 320.42636108]
[336.26254272 307.89874268]
[328.01281738 295.37109375]
[314.55102539 288.99697876]
[313.42315674 273.21600342]
[305.17340088 260.68838501]
[296.92367554 248.16075134]
[288.29388428 235.89179993]
[279.29217529 223.89308167]
[270.29046631 211.89436340]
[261.28875732 199.89564514]
[252.28706360 187.89692688]
[243.28535461 175.89820862]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 124]
[3 123]
[4 122]
[5 121]
[6 120]
[7 119]
[8 118]
[11 49]
[12 48]
[13 47]
[15 45]
[16 44]
[17 43]
[18 42]
[19 41]
[20 40]
[21 39]
[24 37]
[25 36]
[26 35]
[28 34]
[29 33]
[54 117]
[55 116]
[56 115]
[57 114]
[58 113]
[60 112]
[61 111]
[63 108]
[64 107]
[65 106]
[66 105]
[74 99]
[75 98]
[76 97]
[77 96]
[78 95]
[79 94]
[80 93]
[81 92]
[130 150]
[131 149]
[132 148]
[133 147]
[135 145]
[136 144]
[137 143]
[164 204]
[165 203]
[166 202]
[167 201]
[168 200]
[169 199]
[174 198]
[175 197]
[176 196]
[178 194]
[179 193]
[180 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
