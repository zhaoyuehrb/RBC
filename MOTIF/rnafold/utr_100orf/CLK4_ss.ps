%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:16:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGACGGCGCUGCCGCCAUUUUGUGGGGUGUUUGUCGCAGCGGCCGAGGAGGGAAGACGGCAGUUUGGCGACAUUUCUCGGCCGAAGGGCCAUUUGCUUUUGCGGAGAUGCGGCAUUCCAAAAGAACUCACUGUCCUGAUUGGGAUAGCAGAGAAAGCUGGGGACAUGAAAGCUAUCGUGGAAGUCACAAGCGGAAGAGGAGAUCUC\
) } def
/len { sequence length } bind def

/coor [
[107.76818848 125.52903748]
[91.31776428 125.23281860]
[82.64755249 137.47322083]
[73.97733307 149.71362305]
[65.30712128 161.95401001]
[56.63690567 174.19441223]
[47.96669006 186.43481445]
[39.29647446 198.67521667]
[30.71849823 210.98042297]
[22.23324776 223.34976196]
[13.74799633 235.71910095]
[5.26274586 248.08843994]
[2.98827791 256.93682861]
[-3.44416881 260.57861328]
[-12.11438465 272.81903076]
[-20.78459930 285.05941772]
[-29.45481491 297.29980469]
[-26.54822922 312.83453369]
[-35.54647446 325.82711792]
[-51.11104965 328.56930542]
[-64.00776672 319.43417358]
[-66.58523560 303.84149170]
[-57.31428909 291.04208374]
[-41.69521332 288.62960815]
[-33.02499771 276.38919067]
[-24.35478401 264.14880371]
[-15.68456745 251.90840149]
[-7.10659218 239.60319519]
[1.37865877 227.23385620]
[9.86390972 214.86451721]
[18.34916115 202.49517822]
[19.54086304 195.20004272]
[27.05607414 190.00500488]
[35.72629166 177.76460266]
[44.39650726 165.52420044]
[53.06672287 153.28379822]
[61.73693848 141.04339600]
[70.40715027 128.80300903]
[79.07736969 116.56260681]
[75.72927856 111.09092712]
[73.78373718 104.97833252]
[73.35314941 98.57805634]
[59.20289993 93.60107422]
[45.05264664 88.62409210]
[30.90239334 83.64710999]
[16.75214195 78.67012787]
[2.60188866 73.69314575]
[-11.54836369 68.71616364]
[-25.69861603 63.73918533]
[-39.84886932 58.76220322]
[-53.99912262 53.78522110]
[-68.14937592 48.80823898]
[-76.30807495 56.86494827]
[-86.83686066 61.27464294]
[-98.19934845 61.43537140]
[-108.75289917 57.36219788]
[-116.98613739 49.67950058]
[-121.73531342 39.52558136]
[-122.34879303 28.38409805]
[-136.26029968 22.77429199]
[-151.95269775 24.78903961]
[-160.86274719 12.85337067]
[-174.77426147 7.24356413]
[-191.72526550 6.92751360]
[-196.11407471 -9.44852734]
[-181.59295654 -18.19915581]
[-169.16445923 -6.66794443]
[-155.25294495 -1.05813825]
[-140.55558777 -3.47413754]
[-130.65049744 8.86278343]
[-116.73898315 14.47258949]
[-101.49850464 3.65766382]
[-82.66880798 4.21609879]
[-67.86185455 16.10316086]
[-63.17239380 34.65798569]
[-49.02214050 39.63496780]
[-34.87188721 44.61194992]
[-20.72163582 49.58893204]
[-6.57138252 54.56591415]
[7.57887030 59.54289627]
[21.72912216 64.51987457]
[35.87937546 69.49685669]
[50.02962875 74.47383881]
[64.17987823 79.45082092]
[78.33013153 84.42780304]
[92.34786224 74.43593597]
[109.55006409 75.08267975]
[122.77796173 86.09888458]
[137.26197815 82.19845581]
[151.74598694 78.29802704]
[156.67953491 73.89292908]
[162.25949097 72.80513763]
[166.72412109 74.50504303]
[181.31883240 71.04174805]
[195.91354370 67.57844543]
[210.50825500 64.11514282]
[222.14910889 53.40062332]
[236.31893921 57.99030685]
[250.91365051 54.52700806]
[265.50836182 51.06370544]
[280.10305786 47.60040665]
[294.69778442 44.13710403]
[306.33865356 33.42258453]
[320.50845337 38.01227188]
[335.10317993 34.54896927]
[339.25320435 23.40635109]
[348.17587280 15.72972393]
[359.57852173 13.33891106]
[370.60400391 16.71476936]
[378.54644775 24.90778923]
[393.23864746 21.88474846]
[405.19631958 11.52497768]
[419.22180176 16.53851318]
[433.91400146 13.51547337]
[448.60623169 10.49243355]
[456.38253784 5.69702959]
[463.54193115 7.53612185]
[478.27792358 4.73426199]
[493.01391602 1.93240190]
[507.74990845 -0.86945814]
[522.48590088 -3.67131829]
[525.07836914 -17.88056946]
[532.42962646 -30.27309227]
[543.60235596 -39.31633377]
[557.18847656 -43.90177155]
[571.48632812 -43.48075104]
[584.71429443 -38.13002777]
[595.23229980 -28.53916740]
[608.58203125 -35.37914276]
[621.93176270 -42.21911621]
[631.56341553 -57.91261673]
[649.04223633 -56.35239792]
[662.28765869 -63.39226151]
[675.53302002 -70.43212128]
[688.77844238 -77.47198486]
[702.02380371 -84.51184845]
[715.26916504 -91.55170441]
[728.51458740 -98.59156799]
[736.74359131 -112.77661896]
[753.13989258 -112.47205353]
[760.83642578 -97.99118042]
[751.91558838 -84.23068237]
[735.55444336 -85.34617615]
[722.30908203 -78.30631256]
[709.06365967 -71.26645660]
[695.81829834 -64.22659302]
[682.57287598 -57.18673325]
[669.32751465 -50.14686966]
[656.08209229 -43.10700989]
[652.24426270 -31.63438606]
[641.26562500 -25.66130066]
[628.77172852 -28.86940765]
[615.42199707 -22.02943230]
[602.07232666 -15.18945789]
[603.19183350 -10.26010704]
[603.68493652 -5.22933388]
[603.54382324 -0.17642155]
[617.96759033 3.94127846]
[632.39135742 8.05897903]
[646.81506348 12.17667866]
[657.32867432 1.05361688]
[671.81091309 -3.89847350]
[686.93389893 -1.54163849]
[699.22241211 7.58253860]
[705.85272217 21.37738800]
[705.30114746 36.67295456]
[697.69451904 49.95442963]
[684.78076172 58.16983032]
[669.52728271 59.43130875]
[655.43933105 53.44899750]
[645.75421143 41.59757996]
[642.69738770 26.60042763]
[628.27362061 22.48272705]
[613.84985352 18.36502838]
[599.42614746 14.24732780]
[587.71966553 28.47368240]
[570.85021973 36.03583908]
[552.31445312 35.30464172]
[535.98211670 26.37643051]
[525.28778076 11.06467819]
[510.55175781 13.86653805]
[495.81576538 16.66839790]
[481.07977295 19.47025871]
[466.34378052 22.27211761]
[451.62927246 25.18465042]
[436.93704224 28.20768929]
[422.24484253 31.23073006]
[411.33804321 41.37427139]
[396.26168823 36.57696533]
[381.56948853 39.60000610]
[372.43936157 55.46554947]
[354.30108643 59.69312286]
[338.56646729 49.14368057]
[323.97177124 52.60697937]
[313.37481689 63.07378006]
[298.16107178 58.73181534]
[283.56637573 62.19511414]
[268.97164917 65.65841675]
[254.37695312 69.12171936]
[239.78224182 72.58502197]
[229.18528748 83.05181885]
[213.97155762 78.70985413]
[199.37684631 82.17315674]
[184.78213501 85.63645172]
[170.18742371 89.09975433]
[155.64642334 92.78203583]
[141.16239929 96.68247223]
[126.67839050 100.58290100]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 39]
[3 38]
[4 37]
[5 36]
[6 35]
[7 34]
[8 33]
[9 31]
[10 30]
[11 29]
[12 28]
[14 27]
[15 26]
[16 25]
[17 24]
[42 85]
[43 84]
[44 83]
[45 82]
[46 81]
[47 80]
[48 79]
[49 78]
[50 77]
[51 76]
[52 75]
[59 71]
[60 70]
[62 68]
[63 67]
[88 208]
[89 207]
[90 206]
[93 205]
[94 204]
[95 203]
[96 202]
[98 200]
[99 199]
[100 198]
[101 197]
[102 196]
[104 194]
[105 193]
[110 190]
[111 189]
[113 187]
[114 186]
[115 185]
[117 184]
[118 183]
[119 182]
[120 181]
[121 180]
[128 154]
[129 153]
[130 152]
[132 149]
[133 148]
[134 147]
[135 146]
[136 145]
[137 144]
[138 143]
[157 175]
[158 174]
[159 173]
[160 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
