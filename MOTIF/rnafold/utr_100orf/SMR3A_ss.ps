%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:07:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUCAACUGGCAAGAGUCAUUUUGACCAGCAGGUUAAUCAACUCUAAGACAGAUCCUCACGCAAAGAGGCAACUGAAAGGAUGAAAUCACUGACUUGGAUCUUGGGCCUUUGGGCUCUUGCAGCGUGUUUCACACCUGGUGAGAGUCAAAGAGGCCCCAGGGGACCAUAUCCACCUGGAC\
) } def
/len { sequence length } bind def

/coor [
[97.93360901 163.05149841]
[88.67888641 174.85615540]
[73.74644470 173.43408203]
[66.88629913 160.09472656]
[74.41510010 147.12132263]
[76.74468231 132.30332947]
[79.07427216 117.48532867]
[71.60804749 116.77436066]
[62.45951462 128.66151428]
[53.31098557 140.54866028]
[44.16245651 152.43582153]
[35.11685944 164.40148926]
[26.17487335 176.44477844]
[17.23288536 188.48806763]
[8.29089832 200.53135681]
[-0.65108860 212.57464600]
[-1.99555361 228.91859436]
[-16.93565941 235.68063354]
[-30.10230827 225.90457153]
[-27.95077705 209.64717102]
[-12.69437981 203.63265991]
[-3.75239253 191.58937073]
[5.18959475 179.54608154]
[14.13158226 167.50279236]
[23.07357025 155.45950317]
[24.54041290 148.19592285]
[32.27530289 143.28729248]
[41.42383194 131.40013123]
[50.57236481 119.51298523]
[59.72089386 107.62583160]
[50.09281158 119.12800598]
[35.89574814 123.96984100]
[21.24595070 120.74750519]
[10.39093494 110.39527893]
[6.47796774 95.91464996]
[10.64156342 81.50408173]
[21.67454147 71.34172821]
[36.37803650 68.37403107]
[50.48896408 73.46144104]
[59.91508484 85.12667084]
[50.97309494 73.08337402]
[42.03110886 61.04008484]
[24.97398567 54.13392258]
[23.61213112 36.64892197]
[14.46360111 24.76177025]
[5.31507111 12.87461758]
[-3.83345866 0.98746467]
[-12.98198891 -10.89968777]
[-22.13051796 -22.78684044]
[-36.67890167 -29.00416183]
[-38.30966187 -43.80922699]
[-47.45819092 -55.69637680]
[-56.60671997 -67.58353424]
[-66.45629120 -78.89662170]
[-76.97095490 -89.59436798]
[-87.48561859 -100.29212189]
[-98.00028229 -110.98986816]
[-108.69802856 -121.50453186]
[-119.57567596 -131.83297729]
[-130.45332336 -142.16142273]
[-150.23435974 -145.95475769]
[-154.96899414 -164.68679810]
[-166.19665527 -174.63365173]
[-181.95500183 -173.42935181]
[-193.89482117 -183.78387451]
[-194.93243408 -199.55406189]
[-184.45225525 -211.38374329]
[-168.67198181 -212.25457764]
[-156.95376587 -201.64990234]
[-156.24981689 -185.86131287]
[-145.02215576 -175.91445923]
[-134.88742065 -177.44676208]
[-125.38893890 -173.04269409]
[-119.77917480 -163.94320679]
[-120.12487030 -153.03907776]
[-109.24723053 -142.71063232]
[-98.36958313 -132.38217163]
[-93.63253021 -131.61073303]
[-89.33809662 -127.83886719]
[-87.30253601 -121.50453186]
[-76.78787231 -110.80678558]
[-66.27320099 -100.10903168]
[-55.75854111 -89.41128540]
[-55.52273941 -104.40943146]
[-45.81196213 -115.84188080]
[-31.04955101 -118.50104523]
[-17.95990753 -111.17566681]
[-12.50547600 -97.20250702]
[-17.17079735 -82.94646454]
[-29.83077812 -74.90128326]
[-44.71956635 -76.73206329]
[-35.57103729 -64.84490967]
[-26.42250824 -52.95775604]
[-12.52848816 -47.59068298]
[-10.24336624 -31.93537140]
[-1.09483624 -20.04821777]
[8.05369377 -8.16106510]
[17.20222473 3.72608709]
[26.35075378 15.61324024]
[35.49928284 27.50039291]
[47.46543121 29.37948608]
[55.18255234 39.23061371]
[54.07439804 52.09809875]
[63.01638794 64.14138794]
[71.95837402 76.18467712]
[119.03730011 84.70040894]
[133.81439209 82.12402344]
[148.59147644 79.54763794]
[163.36856079 76.97125244]
[178.14564514 74.39486694]
[192.92272949 71.81848145]
[207.69981384 69.24209595]
[221.53436279 57.10761261]
[237.76649475 63.74824905]
[252.49690247 60.91718292]
[267.22732544 58.08612061]
[281.95773315 55.25505447]
[296.68814087 52.42399216]
[311.41854858 49.59292984]
[326.14895630 46.76186371]
[340.87939453 43.93080139]
[355.60980225 41.09973526]
[370.31521606 38.14164352]
[384.99456787 35.05674744]
[392.77316284 30.21763039]
[399.95385742 32.04759598]
[414.68426514 29.21652985]
[429.41467285 26.38546753]
[444.14508057 23.55440331]
[458.55838013 14.62729073]
[471.12661743 26.00603676]
[463.67178345 41.23304749]
[446.97616577 38.28481674]
[432.24572754 41.11587906]
[417.51531982 43.94694519]
[402.78491211 46.77800751]
[388.07946777 49.73609924]
[373.40011597 52.82099915]
[367.48553467 57.28516006]
[358.44085693 55.83015060]
[343.71044922 58.66121292]
[328.98004150 61.49227905]
[314.24963379 64.32334137]
[299.51919556 67.15440369]
[284.78878784 69.98546600]
[270.05838013 72.81653595]
[255.32797241 75.64759827]
[240.59754944 78.47866058]
[233.54164124 88.32415771]
[221.27333069 90.79140472]
[210.27619934 84.01918030]
[195.49911499 86.59556580]
[180.72203064 89.17195129]
[165.94494629 91.74833679]
[151.16786194 94.32472229]
[136.39077759 96.90110779]
[121.61368561 99.47749329]
[114.87313080 112.87767792]
[121.61368561 126.27785492]
[128.35424805 139.67803955]
[135.09480286 153.07821655]
[141.83535767 166.47840881]
[148.69131470 179.81991577]
[155.66215515 193.10176086]
[162.63301086 206.38359070]
[177.46023560 212.51000977]
[181.77642822 227.96154785]
[172.27058411 240.88511658]
[156.23477173 241.36685181]
[145.97029114 229.03721619]
[149.35116577 213.35444641]
[142.38032532 200.07260132]
[135.40946960 186.79075623]
[129.50166321 182.31764221]
[128.43516541 173.21896362]
[121.69461823 159.81878662]
[114.95406342 146.41859436]
[108.21350861 133.01841736]
[101.47294617 119.61823273]
[94.00672150 118.90726471]
[93.49772644 133.89862061]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 30]
[9 29]
[10 28]
[11 27]
[12 25]
[13 24]
[14 23]
[15 22]
[16 21]
[40 105]
[41 104]
[42 103]
[44 100]
[45 99]
[46 98]
[47 97]
[48 96]
[49 95]
[51 93]
[52 92]
[53 91]
[54 83]
[55 82]
[56 81]
[57 80]
[58 77]
[59 76]
[60 75]
[62 71]
[63 70]
[106 157]
[107 156]
[108 155]
[109 154]
[110 153]
[111 152]
[112 151]
[114 148]
[115 147]
[116 146]
[117 145]
[118 144]
[119 143]
[120 142]
[121 141]
[122 140]
[123 138]
[124 137]
[126 136]
[127 135]
[128 134]
[129 133]
[158 179]
[159 178]
[160 177]
[161 176]
[162 175]
[163 173]
[164 172]
[165 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
