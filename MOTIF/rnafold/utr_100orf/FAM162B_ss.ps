%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:03:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUGAGUGUGCGAGCGCCAGGGGUUCCAGCUGCACGUCCCAGGCUCUCCAGCGCGCGGCAGGCCGGGGCGGGACGAGGAGAGCUGCGGGGACAACGCCUGUGGCUGGGUCCGGAGGUGCGGGUGCGGCGCGGGACAAGCGGGCAGCAUGCUCAGGGCGGUCGGGAGCCUACUGCGCCUUGGCCGCGGGCUAACAGUCCGCUGCGGCCCCGGGGCGCCUCUCGAGGCCACGCGACGGCCCGCACCGG\
) } def
/len { sequence length } bind def

/coor [
[457.39254761 320.67492676]
[464.09921265 307.25775146]
[476.22686768 298.43048096]
[491.05502319 296.17251587]
[477.42492676 289.90988159]
[463.79483032 283.64724731]
[450.16473389 277.38461304]
[436.53463745 271.12197876]
[422.90454102 264.85934448]
[409.27447510 258.59671021]
[395.64437866 252.33407593]
[382.01428223 246.07144165]
[370.58139038 249.97628784]
[359.18295288 244.88990784]
[354.13885498 233.03619385]
[340.58917236 226.60140991]
[333.21685791 226.57109070]
[326.90942383 219.99832153]
[313.44235229 213.39241028]
[301.15161133 221.80688477]
[286.19982910 222.94714355]
[272.59490967 216.40707397]
[264.03399658 203.85289001]
[262.89901733 188.59971619]
[249.43193054 181.99380493]
[235.96487427 175.38789368]
[222.49780273 168.78198242]
[209.03073120 162.17607117]
[191.59945679 164.29243469]
[181.48368835 148.89228821]
[167.93402100 142.45750427]
[154.38435364 136.02270508]
[140.83468628 129.58792114]
[127.28501892 123.15312958]
[113.73535156 116.71833801]
[100.18568420 110.28354645]
[85.68862915 106.43186188]
[70.73193359 105.29286957]
[55.77524185 104.15386963]
[40.81855011 103.01486969]
[25.86185646 101.87587738]
[8.07606792 111.39759827]
[-7.37325478 99.74667358]
[-22.35400200 98.98693848]
[-37.33475113 98.22720337]
[-52.31549835 97.46746063]
[-67.29624176 96.70772552]
[-82.27699280 95.94799042]
[-97.25774384 95.18825531]
[-112.23848724 94.42851257]
[-126.93757629 109.49710083]
[-147.68011475 108.77277374]
[-160.91017151 93.16609192]
[-175.91017151 93.16609192]
[-190.91017151 93.16609192]
[-206.65431213 102.73769379]
[-221.49229431 93.34818268]
[-236.49108887 93.53819275]
[-251.48988342 93.72820282]
[-265.30282593 102.56758881]
[-279.73797607 94.78569031]
[-279.94570923 78.38786316]
[-265.71231079 70.24277496]
[-251.67988586 78.72940826]
[-236.68109131 78.53939819]
[-221.68229675 78.34938812]
[-213.02996826 69.91754150]
[-200.55166626 69.62236023]
[-190.91017151 78.16609192]
[-175.91017151 78.16609192]
[-160.91017151 78.16609192]
[-156.67857361 69.88362885]
[-149.68667603 63.66292572]
[-140.85981750 60.38336945]
[-131.38677979 60.53136826]
[-122.55966949 64.12866974]
[-115.59767151 70.72367859]
[-111.47875214 79.44776917]
[-96.49800110 80.20750427]
[-81.51725769 80.96723938]
[-66.53650665 81.72698212]
[-51.55575943 82.48671722]
[-36.57501221 83.24645233]
[-21.59426498 84.00619507]
[-6.61351728 84.76593018]
[0.29855832 77.28052521]
[10.39911366 74.77001190]
[20.42519569 78.29333496]
[27.00085258 86.91918182]
[41.95754623 88.05818176]
[56.91424179 89.19717407]
[71.87093353 90.33617401]
[86.82762909 91.47516632]
[91.15103912 85.34670258]
[99.79787445 73.08977509]
[104.12128448 66.96131134]
[98.03181458 53.25297928]
[91.94233704 39.54465103]
[85.85285950 25.83632088]
[79.76338959 12.12799072]
[67.08996582 2.65724373]
[68.99417114 -12.11513805]
[62.90469742 -25.82346725]
[56.81522369 -39.53179550]
[41.97727585 -44.97338104]
[35.40894318 -59.34810257]
[41.00709915 -74.12768555]
[55.45045853 -80.54367828]
[70.17003632 -74.78957367]
[76.43296051 -60.27918625]
[70.52355194 -45.62127304]
[76.61302948 -31.91294289]
[82.70249939 -18.20461273]
[94.94036102 -9.71437740]
[93.47171783 6.03851604]
[99.56119537 19.74684525]
[105.65066528 33.45517349]
[111.74014282 47.16350555]
[117.82961273 60.87183380]
[119.21741486 71.83717346]
[117.53656769 81.91587067]
[113.16435242 90.41103363]
[106.62047577 96.73387909]
[120.17014313 103.16867065]
[133.71980286 109.60346222]
[147.26947021 116.03825378]
[160.81913757 122.47304535]
[174.36880493 128.90783691]
[187.91847229 135.34262085]
[200.29287720 131.76103210]
[211.43804932 137.38069153]
[215.63664246 148.70899963]
[229.10371399 155.31491089]
[242.57078552 161.92082214]
[256.03784180 168.52673340]
[269.50491333 175.13264465]
[282.26150513 166.69363403]
[297.42922974 165.77888489]
[310.92858887 172.53411865]
[319.17898560 185.05558777]
[320.04827881 199.92535400]
[333.51531982 206.53126526]
[347.02398682 213.05174255]
[360.57363892 219.48652649]
[378.90158081 217.59440613]
[388.27691650 232.44134521]
[401.90701294 238.70397949]
[415.53710938 244.96661377]
[429.16717529 251.22924805]
[442.79727173 257.49188232]
[456.42736816 263.75451660]
[470.05746460 270.01715088]
[483.68756104 276.27978516]
[497.31765747 282.54241943]
[511.35064697 287.84100342]
[525.71844482 292.14978027]
[540.08630371 296.45855713]
[554.45410156 300.76736450]
[569.89526367 297.32028198]
[579.86358643 308.38745117]
[594.23138428 312.69622803]
[608.59918213 317.00500488]
[622.96704102 321.31381226]
[636.29229736 310.87710571]
[653.04644775 310.45263672]
[666.61108398 320.00964355]
[671.74584961 335.61334229]
[686.16711426 339.73977661]
[700.58831787 343.86624146]
[715.00958252 347.99267578]
[729.60278320 335.56881714]
[748.58679199 334.48858643]
[764.24499512 345.00878906]
[770.32244873 362.70782471]
[784.89007568 366.28338623]
[799.45770264 369.85891724]
[814.02532959 373.43444824]
[828.59295654 377.01000977]
[843.16058350 380.58554077]
[857.72814941 384.16107178]
[872.33990479 387.55181885]
[886.99346924 390.75717163]
[901.64697266 393.96252441]
[916.30047607 397.16787720]
[930.95397949 400.37322998]
[945.60754395 403.57858276]
[960.31933594 406.50494385]
[975.08404541 409.15124512]
[989.84875488 411.79754639]
[1004.61346436 414.44384766]
[1019.37823486 417.09011841]
[1036.03564453 413.93295288]
[1043.68066406 429.06539917]
[1031.25585938 440.60070801]
[1016.73193359 431.85485840]
[1001.96716309 429.20855713]
[987.20245361 426.56225586]
[972.43774414 423.91595459]
[957.67303467 421.26968384]
[954.60083008 422.95303345]
[950.56628418 423.24600220]
[946.22540283 421.71478271]
[942.40216064 418.23211670]
[927.74865723 415.02676392]
[913.09515381 411.82141113]
[898.44158936 408.61602783]
[883.78808594 405.41067505]
[869.13458252 402.20532227]
[864.71997070 403.96905518]
[859.15191650 402.99526978]
[854.15264893 398.72869873]
[839.58502197 395.15316772]
[825.01739502 391.57763672]
[810.44976807 388.00207520]
[795.88214111 384.42654419]
[781.31451416 380.85098267]
[766.74694824 377.27545166]
[759.76934814 385.92739868]
[750.02801514 391.38552856]
[738.90429688 392.83227539]
[727.99169922 390.02185059]
[718.86804199 383.32125854]
[712.86694336 373.66265869]
[710.88317871 362.41390991]
[696.46191406 358.28747559]
[682.04064941 354.16104126]
[667.61938477 350.03460693]
[657.92376709 359.19314575]
[644.86547852 362.39654541]
[631.82403564 358.70584106]
[622.22894287 348.98059082]
[618.65826416 335.68164062]
[604.29040527 331.37283325]
[589.92260742 327.06405640]
[575.55474854 322.75524902]
[561.14135742 326.51052856]
[550.14532471 315.13519287]
[535.77752686 310.82638550]
[521.40966797 306.51760864]
[507.04187012 302.20880127]
[516.67761230 313.70455933]
[519.94415283 328.34457397]
[516.10882568 342.84594727]
[506.03182983 353.95693970]
[491.97274780 359.18594360]
[477.08425903 357.36041260]
[464.70495605 348.88970947]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 154]
[5 153]
[6 152]
[7 151]
[8 150]
[9 149]
[10 148]
[11 147]
[12 146]
[15 144]
[16 143]
[18 142]
[19 141]
[24 136]
[25 135]
[26 134]
[27 133]
[28 132]
[30 129]
[31 128]
[32 127]
[33 126]
[34 125]
[35 124]
[36 123]
[37 93]
[38 92]
[39 91]
[40 90]
[41 89]
[43 85]
[44 84]
[45 83]
[46 82]
[47 81]
[48 80]
[49 79]
[50 78]
[53 71]
[54 70]
[55 69]
[57 66]
[58 65]
[59 64]
[96 119]
[97 118]
[98 117]
[99 116]
[100 115]
[102 113]
[103 112]
[104 111]
[155 240]
[156 239]
[157 238]
[158 237]
[160 235]
[161 234]
[162 233]
[163 232]
[167 227]
[168 226]
[169 225]
[170 224]
[174 217]
[175 216]
[176 215]
[177 214]
[178 213]
[179 212]
[180 211]
[181 208]
[182 207]
[183 206]
[184 205]
[185 204]
[186 203]
[187 199]
[188 198]
[189 197]
[190 196]
[191 195]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
