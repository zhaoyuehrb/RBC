%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:44:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUGCGUGCAGAAGGUGACUGUCUCAGUGGAGCUGGGUCAUCUCAGGCCUUGGCUCCUUGAACUUUUGGCCGCCAUGUGCUUCCCGAAGGUCCUCUCUGAUGACAUGAAGAAGCUGAAGGCCCGAAUGGUAAUGCUCCUCCCUACUUCUGCUCAGGGGUUGGGGGCCUGGGUCU\
) } def
/len { sequence length } bind def

/coor [
[101.52178955 142.17036438]
[84.45938873 139.23193359]
[70.01313019 129.68910217]
[60.61493683 115.14834595]
[45.88063049 117.95906067]
[31.14632034 120.76978302]
[23.27184677 125.46633148]
[16.12242889 123.49621582]
[1.34003901 126.04199219]
[-10.94676971 136.00918579]
[-24.80256271 130.54417419]
[-39.58495331 133.08995056]
[-54.36734009 135.63571167]
[-69.14973450 138.18148804]
[-83.93212128 140.72726440]
[-98.71450806 143.27302551]
[-86.55633545 152.05818176]
[-82.74316406 166.56541443]
[-89.01009369 180.19352722]
[-102.50549316 186.74136353]
[-117.08858490 183.22946167]
[-126.12365723 171.25584412]
[-125.49948883 156.26882935]
[-115.50038147 145.08808899]
[-130.48527527 145.76106262]
[-145.47016907 146.43403625]
[-160.45506287 147.10700989]
[-168.92065430 150.62818909]
[-175.71450806 147.65512085]
[-190.70906067 148.05899048]
[-205.70362854 148.46286011]
[-220.69819641 148.86672974]
[-235.69274902 149.27059937]
[-250.68731689 149.67446899]
[-265.68188477 150.07833862]
[-280.67221069 150.61679077]
[-295.65710449 151.28974915]
[-310.64199829 151.96272278]
[-325.62689209 152.63569641]
[-336.10324097 164.46878052]
[-351.88323975 165.34471130]
[-363.60488892 154.74385071]
[-364.31393433 138.95547485]
[-353.58975220 127.34654999]
[-337.79473877 126.80445862]
[-326.29986572 137.65080261]
[-311.31497192 136.97782898]
[-296.33007812 136.30485535]
[-281.34518433 135.63188171]
[-274.78213501 132.17904663]
[-266.08575439 135.08378601]
[-251.09118652 134.67990112]
[-236.09661865 134.27603149]
[-221.10206604 133.87216187]
[-206.10749817 133.46829224]
[-191.11293030 133.06442261]
[-176.11837769 132.66055298]
[-161.12803650 132.12211609]
[-146.14314270 131.44914246]
[-131.15824890 130.77616882]
[-116.17335510 130.10319519]
[-101.26028442 128.49064636]
[-86.47789001 125.94487000]
[-71.69550323 123.39910126]
[-56.91311264 120.85332489]
[-42.13072205 118.30755615]
[-27.34833336 115.76178741]
[-16.11886024 105.97668457]
[-1.20573235 111.25959778]
[13.57665730 108.71382904]
[28.33560181 106.03547668]
[43.06991196 103.22475433]
[57.80421829 100.41403198]
[59.41882706 88.43177795]
[64.36490631 77.39920807]
[72.23642731 68.22203064]
[82.38716888 61.65363693]
[93.98381805 58.23325729]
[106.07436371 58.24167633]
[110.83747864 44.01800919]
[115.60060120 29.79434204]
[120.36371613 15.57067490]
[125.12683105 1.34700727]
[114.61913300 -8.13108540]
[108.54165649 -20.86234665]
[107.78417206 -34.90604782]
[112.42826843 -48.13533401]
[121.73998260 -58.55932236]
[134.28561401 -64.62271881]
[148.15235901 -65.43778992]
[153.17004395 -79.57366180]
[158.18771362 -93.70954132]
[155.51248169 -109.30292511]
[167.06146240 -118.70877838]
[172.07914734 -132.84465027]
[171.67950439 -149.79388428]
[187.85572815 -154.86993408]
[197.21141052 -140.73106384]
[186.21501160 -127.82697296]
[181.19734192 -113.69110107]
[184.23147583 -99.10881042]
[172.32359314 -88.69186401]
[167.30592346 -74.55598450]
[162.28823853 -60.42011261]
[173.74420166 -49.30167007]
[179.23210144 -34.24839783]
[177.60806274 -18.25007439]
[169.14611816 -4.50772715]
[155.49359131 4.20685577]
[139.35049438 6.11012363]
[134.58738708 20.33379173]
[129.82426453 34.55746078]
[125.06114960 48.78112793]
[120.29803467 63.00479507]
[131.89070129 72.36598969]
[139.50706482 85.17275238]
[142.19746399 99.82825470]
[139.62644958 114.50517273]
[152.57171631 122.08277130]
[165.51698303 129.66036987]
[178.46224976 137.23797607]
[191.40751648 144.81556702]
[204.35279846 152.39317322]
[217.29806519 159.97076416]
[222.58482361 159.99711609]
[226.88862610 161.87940979]
[229.66310120 164.92405701]
[230.72047424 168.32083130]
[243.23905945 176.58428955]
[239.52453613 162.05149841]
[244.93232727 148.06021118]
[257.45529175 139.80339050]
[272.44549561 140.34556580]
[284.33923340 149.48551941]
[288.72213745 163.83090210]
[283.96740723 178.05738831]
[271.83984375 186.88473511]
[256.83914185 187.03617859]
[268.04617310 197.00625610]
[279.25323486 206.97633362]
[290.46026611 216.94641113]
[301.66729736 226.91647339]
[317.12063599 230.30825806]
[321.48687744 244.54852295]
[332.69390869 254.51860046]
[343.90093994 264.48867798]
[355.10797119 274.45874023]
[366.31503296 284.42883301]
[377.52206421 294.39889526]
[393.68353271 297.18069458]
[399.10052490 312.65933228]
[388.20046997 324.91171265]
[372.19644165 321.33364868]
[367.55197144 305.60592651]
[356.34494019 295.63586426]
[345.13790894 285.66577148]
[333.93087769 275.69570923]
[322.72384644 265.72561646]
[311.51681519 255.75555420]
[296.86505127 253.07690430]
[291.69720459 238.12351990]
[280.49017334 228.15344238]
[269.28314209 218.18336487]
[258.07611084 208.21328735]
[246.86907959 198.24320984]
[234.97561646 189.10289001]
[222.45701599 180.83943176]
[209.72045898 172.91603088]
[196.77519226 165.33843994]
[183.82992554 157.76083374]
[170.88465881 150.18324280]
[157.93939209 142.60563660]
[144.99411011 135.02804565]
[132.04884338 127.45043945]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 73]
[5 72]
[6 71]
[8 70]
[9 69]
[11 67]
[12 66]
[13 65]
[14 64]
[15 63]
[16 62]
[24 61]
[25 60]
[26 59]
[27 58]
[29 57]
[30 56]
[31 55]
[32 54]
[33 53]
[34 52]
[35 51]
[36 49]
[37 48]
[38 47]
[39 46]
[79 114]
[80 113]
[81 112]
[82 111]
[83 110]
[90 104]
[91 103]
[92 102]
[94 100]
[95 99]
[118 174]
[119 173]
[120 172]
[121 171]
[122 170]
[123 169]
[124 168]
[128 167]
[129 166]
[138 165]
[139 164]
[140 163]
[141 162]
[142 161]
[144 159]
[145 158]
[146 157]
[147 156]
[148 155]
[149 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
