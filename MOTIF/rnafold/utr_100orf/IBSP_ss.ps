%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:39:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGUGAGUGAGAGGGCAGAGGAAAUACUCAAUCUGUGCCACUCACUGCCUUGAGCCUGCUUCCUCACUCCAGGACUGCCAGAGGAAGCAAUCACCAAAAUGAAGACUGCUUUAAUUUUGCUCAGCAUUUUGGGAAUGGCCUGUGCUUUCUCAAUGAAAAAUUUGCAUCGAAGAGUCAAAAUAGAGGAUUCUGAAGAAA\
) } def
/len { sequence length } bind def

/coor [
[269.59381104 414.97900391]
[256.85159302 403.67507935]
[247.42594910 389.47506714]
[241.95051575 373.32440186]
[240.79582214 356.29989624]
[244.04409790 339.53811646]
[251.48345947 324.15933228]
[262.62176514 311.19277954]
[253.95893860 298.94714355]
[245.29612732 286.70150757]
[236.63330078 274.45587158]
[227.97048950 262.21023560]
[219.30766296 249.96459961]
[210.64485168 237.71896362]
[201.98204041 225.47332764]
[193.31921387 213.22769165]
[184.65640259 200.98205566]
[170.98959351 195.06027222]
[169.33624268 179.32568359]
[160.67341614 167.08004761]
[152.01060486 154.83441162]
[137.33232117 152.57974243]
[128.37254333 140.28433228]
[130.83697510 124.90367889]
[122.17416382 112.65804291]
[102.93042755 130.08004761]
[73.59086609 122.83459473]
[59.22606659 127.15344238]
[44.86126328 131.47229004]
[30.49646187 135.79113770]
[16.13165855 140.10998535]
[10.77173424 156.14773560]
[-2.95295167 165.73834229]
[-19.52366829 165.26690674]
[-32.41975784 155.11697388]
[-46.71459198 159.66204834]
[-61.00942612 164.20713806]
[-69.63027191 177.73712158]
[-85.59803772 179.28953552]
[-96.66362000 167.67349243]
[-94.33845520 151.79983521]
[-80.40620422 143.84545898]
[-65.55450439 149.91229248]
[-51.25967026 145.36721802]
[-36.96483612 140.82214355]
[-33.95071411 127.81053162]
[-24.82584190 117.90964508]
[-11.89664364 113.77996063]
[1.48994207 116.60285950]
[11.81280899 125.74518585]
[26.17761230 121.42633820]
[40.54241180 117.10749054]
[54.90721512 112.78864288]
[69.27201843 108.46978760]
[70.91617584 101.15222931]
[74.20450592 86.51709747]
[75.84866333 79.19953918]
[64.71205902 69.15084839]
[53.57545853 59.10216522]
[42.43885803 49.05348206]
[31.30225372 39.00479507]
[20.16565132 28.95611000]
[9.02904892 18.90742493]
[-2.10755396 8.85873890]
[-13.24415684 -1.18994677]
[-26.78276634 5.67084837]
[-41.88593674 7.17374802]
[-56.51108551 3.11549664]
[-68.68028259 -5.95506001]
[-76.74774933 -18.81120491]
[-79.62242126 -33.71424866]
[-76.91552734 -48.64867401]
[-68.99314880 -61.59473038]
[-56.92671967 -70.80155945]
[-42.34813309 -75.02402496]
[-27.22901726 -73.69107056]
[-13.61410999 -66.98295593]
[-3.34471679 -55.80690765]
[2.19031191 -41.67439651]
[2.24240899 -26.49672508]
[-3.19547129 -12.32654953]
[7.94113159 -2.27786398]
[19.07773399 7.77082157]
[30.21433640 17.81950760]
[41.35094070 27.86819267]
[52.48754120 37.91687775]
[63.62414551 47.96556473]
[74.76074982 58.01424789]
[85.89735413 68.06293488]
[106.46312714 70.47670746]
[119.12921143 83.08867645]
[125.11466980 69.33460999]
[125.67118073 60.20709229]
[131.30471802 55.41184235]
[137.50654602 41.75397873]
[143.70838928 28.09611511]
[149.91021729 14.43825340]
[156.11206055 0.78039038]
[162.31390381 -12.87747192]
[168.51573181 -26.53533554]
[174.71757507 -40.19319916]
[169.40087891 -54.83459473]
[175.88497925 -68.59725952]
[189.87608337 -73.57569122]
[196.07791138 -87.23355103]
[195.81568909 -93.85567474]
[198.53479004 -98.86006927]
[202.69717407 -101.21987915]
[209.32708740 -114.67514801]
[201.28388977 -127.83989716]
[201.65776062 -143.26272583]
[210.32940674 -156.02227783]
[224.53173828 -162.04701233]
[239.73281860 -159.41447449]
[251.08207703 -148.96469116]
[254.95797729 -134.03215027]
[250.12374878 -119.38175964]
[238.12196350 -109.68842316]
[222.78236389 -108.04524231]
[216.15245056 -94.58997345]
[209.73577881 -81.03171539]
[203.53395081 -67.37385559]
[208.99322510 -53.56328583]
[202.89823914 -39.62392426]
[188.37544250 -33.99135971]
[182.17359924 -20.33349800]
[175.97175598 -6.67563486]
[169.76992798 6.98222780]
[163.56808472 20.64009094]
[157.36625671 34.29795456]
[151.16441345 47.95581436]
[144.96257019 61.61367798]
[138.86874390 75.32006836]
[132.88328552 89.07413483]
[134.41979980 103.99523163]
[143.08261108 116.24086761]
[158.40628052 119.03784180]
[167.01716614 131.58006287]
[164.25624084 146.17160034]
[172.91905212 158.41723633]
[181.58187866 170.66287231]
[195.86831665 177.46054077]
[196.90203857 192.31922913]
[205.56484985 204.56486511]
[214.22767639 216.81050110]
[222.89048767 229.05613708]
[231.55329895 241.30177307]
[240.21612549 253.54740906]
[248.87893677 265.79306030]
[257.54174805 278.03869629]
[266.20455933 290.28433228]
[274.86740112 302.52996826]
[286.93603516 297.41729736]
[299.77029419 294.78552246]
[312.86587524 294.73574829]
[325.70867920 297.26773071]
[337.79504395 302.27987671]
[348.65133667 309.57339478]
[357.85260010 318.86013794]
[365.03924561 329.77395630]
[369.93099976 341.88525391]
[372.33792114 354.71771240]
[372.16766357 367.76721191]
[369.42916870 380.52151489]
[364.23208618 392.48037720]
[356.78250122 403.17529297]
[347.37460327 412.18765259]
[355.24740601 424.95556641]
[372.33575439 428.67623901]
[381.27438354 443.31387329]
[376.95220947 459.56222534]
[385.02557373 472.20425415]
[393.09893799 484.84628296]
[401.17227173 497.48831177]
[409.24563599 510.13034058]
[417.31900024 522.77233887]
[432.74624634 522.71380615]
[445.74383545 531.02441406]
[452.16427612 545.05230713]
[449.95883179 560.32122803]
[439.83126831 571.95892334]
[425.01321411 576.25183105]
[410.23309326 571.83007812]
[400.20718384 560.10473633]
[398.13470459 544.81719971]
[404.67697144 530.84570312]
[396.60360718 518.20367432]
[388.53024292 505.56167603]
[380.45690918 492.91964722]
[372.38354492 480.27761841]
[364.31018066 467.63558960]
[351.45724487 466.64651489]
[341.37219238 458.30841064]
[337.88250732 445.49484253]
[342.47949219 432.82833862]
[334.60671997 420.06042480]
[318.42794800 425.25903320]
[301.44720459 426.13879395]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 152]
[9 151]
[10 150]
[11 149]
[12 148]
[13 147]
[14 146]
[15 145]
[16 144]
[17 143]
[19 141]
[20 140]
[21 139]
[24 136]
[25 135]
[27 54]
[28 53]
[29 52]
[30 51]
[31 50]
[35 45]
[36 44]
[37 43]
[57 89]
[58 88]
[59 87]
[60 86]
[61 85]
[62 84]
[63 83]
[64 82]
[65 81]
[91 134]
[92 133]
[94 132]
[95 131]
[96 130]
[97 129]
[98 128]
[99 127]
[100 126]
[101 125]
[104 122]
[105 121]
[108 120]
[109 119]
[167 196]
[168 195]
[171 191]
[172 190]
[173 189]
[174 188]
[175 187]
[176 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
