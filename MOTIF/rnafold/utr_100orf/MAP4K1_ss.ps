%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:16:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGAGAGUGAGGAGGGGGGAGGCCACAGCCCGCGGAGGCAAGGCGGGUGCAGGGCUUCUGGGGACGGAGGGAGGUGCCAGAAGUUGAGCCCUGAGGCCCUGCUGGCCCCUGGGCGCAGGCCCAGCUCAGGCCCCCAGGGAUGGACGUCGUGGACCCUGACAUUUUCAAUAGAGACCCCCGGGACCACUAUGACCUGCUACAGCGGCUGGGUGGCGGCACGUAUGGGGAAGUCUUUAAGG\
) } def
/len { sequence length } bind def

/coor [
[242.70495605 295.49865723]
[238.80718994 287.63476562]
[237.65672302 278.88989258]
[239.40504456 270.20046997]
[227.53955078 261.02386475]
[215.67405701 251.84725952]
[203.80856323 242.67066956]
[191.94306946 233.49406433]
[180.07756042 224.31745911]
[168.21206665 215.14085388]
[155.79707336 218.54592896]
[143.50199890 214.11845398]
[135.88450623 203.26187134]
[135.90443420 189.80499268]
[124.15956116 180.47450256]
[112.41468811 171.14401245]
[100.66982269 161.81352234]
[85.88468933 164.34332275]
[77.91012573 177.04789734]
[77.84561920 193.44691467]
[63.47896576 201.35459900]
[49.58934784 192.63618469]
[50.46521378 176.26045227]
[65.20555115 169.07333374]
[73.18011475 156.36875916]
[67.89412689 151.04820251]
[53.39274216 154.88354492]
[57.32214737 140.40708923]
[52.03615570 135.08653259]
[39.27987289 142.97811890]
[26.52358818 150.86972046]
[13.76730537 158.76130676]
[1.01102138 166.65289307]
[-11.74526215 174.54449463]
[-11.90752411 189.97100830]
[-20.40331268 202.84831238]
[-34.52165222 209.06732178]
[-49.75742722 206.64356995]
[-61.24896622 196.35044861]
[-65.32935333 181.47248840]
[-60.69655609 166.75715637]
[-48.82888031 156.90008545]
[-33.51325989 155.04663086]
[-19.63685417 161.78820801]
[-6.88057089 153.89662170]
[5.87571287 146.00502014]
[18.63199615 138.11343384]
[31.38828087 130.22184753]
[44.14456177 122.33024597]
[43.16758347 107.36209869]
[29.49371719 101.19561768]
[15.81985378 95.02914429]
[2.14598966 88.86266327]
[-11.52787399 82.69618988]
[-25.20173836 76.52970886]
[-38.87560272 70.36323547]
[-52.54946518 64.19675446]
[-66.22332764 58.03028107]
[-79.89719391 51.86380005]
[-95.65809631 53.24382401]
[-104.07936859 40.95840836]
[-117.75323486 34.79193115]
[-131.42709351 28.62545586]
[-145.21891785 22.72751045]
[-159.12341309 17.10035515]
[-173.02792358 11.47319984]
[-187.26451111 20.62424660]
[-203.98377991 19.49014854]
[-216.60116577 8.71636772]
[-220.26622009 -7.29452419]
[-234.24290466 -12.73995209]
[-248.61015320 -6.15532351]
[-263.39608765 -11.73671818]
[-269.82846069 -26.17279243]
[-264.09103394 -40.89888382]
[-249.58776855 -47.17825699]
[-234.92315674 -41.28547668]
[-228.79747009 -26.71662331]
[-214.82080078 -21.27119446]
[-204.31594849 -29.49259377]
[-191.01451111 -31.47065544]
[-178.37010193 -26.58380318]
[-169.71917725 -16.00700951]
[-167.40075684 -2.43130016]
[-153.49626160 3.19585538]
[-139.59176636 8.82301140]
[-136.23587036 7.80496025]
[-132.22235107 8.34938526]
[-128.28532410 10.74684906]
[-125.26062012 14.95159054]
[-111.58676147 21.11806870]
[-97.91289520 27.28454590]
[-83.13003540 25.46345520]
[-73.73072052 38.18993759]
[-60.05685425 44.35641479]
[-46.38298798 50.52289200]
[-32.70912552 56.68936920]
[-19.03526115 62.85584641]
[-5.36139727 69.02232361]
[8.31246662 75.18880463]
[21.98633003 81.35527802]
[35.66019440 87.52175903]
[49.33406067 93.68823242]
[69.07593536 73.90528870]
[91.37540436 71.40444183]
[90.78894806 56.41591263]
[90.20249939 41.42737961]
[89.61604309 26.43884850]
[77.12277222 9.01236248]
[87.57780457 -8.79470825]
[86.40579224 -23.74885178]
[85.23377991 -38.70299530]
[84.06176758 -53.65713501]
[82.88975525 -68.61128235]
[81.71773529 -83.56542206]
[71.99259949 -96.76972961]
[78.81229401 -111.68360901]
[95.16130066 -112.96494293]
[104.22117615 -99.29560089]
[96.67188263 -84.73743439]
[97.84389496 -69.78329468]
[99.01590729 -54.82915115]
[100.18791962 -39.87500763]
[101.35993195 -24.92086411]
[102.53194427 -9.96672153]
[110.10206604 -5.39474297]
[114.80110168 2.25881696]
[115.47334290 11.35233498]
[111.84319305 19.86643028]
[104.60456848 25.85239410]
[105.19102478 40.84092712]
[105.77748108 55.82945633]
[106.36393738 70.81798553]
[108.44870758 71.35198212]
[110.48961639 72.03470612]
[119.11549377 59.76302338]
[127.74137115 47.49134064]
[129.34730530 31.75185013]
[142.99620056 25.78891373]
[151.62208557 13.51723099]
[147.42755127 -1.54729414]
[153.94467163 -15.76211643]
[168.09625244 -22.41543007]
[183.20036316 -18.36574554]
[192.12528992 -5.52519989]
[190.65696716 10.04329491]
[179.48869324 20.98877144]
[163.89376831 22.14311028]
[155.26788330 34.41479492]
[154.27894592 49.27653122]
[140.01306152 56.11721802]
[131.38717651 68.38890076]
[122.76129913 80.66058350]
[138.21766663 113.29067230]
[110.00031281 150.06864929]
[121.74518585 159.39913940]
[133.49005127 168.72962952]
[145.23492432 178.06011963]
[162.58560181 175.75556946]
[175.96487427 186.50878906]
[177.38867188 203.27536011]
[189.25416565 212.45196533]
[201.11965942 221.62857056]
[212.98515320 230.80516052]
[224.85066223 239.98176575]
[236.71615601 249.15837097]
[248.58164978 258.33496094]
[269.97607422 253.99772644]
[287.32257080 266.77386475]
[289.46875000 287.92297363]
[301.90673828 296.30728149]
[314.34475708 304.69155884]
[326.78274536 313.07586670]
[339.22073364 321.46014404]
[351.65872192 329.84445190]
[364.09671021 338.22872925]
[376.64294434 346.45016479]
[389.29528809 354.50738525]
[401.94760132 362.56457520]
[414.59994507 370.62179565]
[427.25225830 378.67898560]
[423.76971436 364.08886719]
[430.38162231 350.62472534]
[444.05630493 344.46005249]
[458.52374268 348.42144775]
[467.15048218 360.69253540]
[465.98098755 375.64688110]
[455.55154419 386.42770386]
[440.64334106 388.09170532]
[452.50885010 397.26831055]
[464.37432861 406.44491577]
[476.23983765 415.62152100]
[491.71151733 413.81451416]
[503.61407471 423.28991699]
[505.24142456 438.05093384]
[517.10693359 447.22750854]
[528.97241211 456.40411377]
[540.83789062 465.58071899]
[552.70343018 474.75732422]
[564.56890869 483.93392944]
[576.43438721 493.11053467]
[590.93719482 487.85006714]
[605.97668457 491.28775024]
[616.75378418 502.32666016]
[619.82958984 517.44427490]
[614.22265625 531.81665039]
[601.72204590 540.85760498]
[586.31677246 541.68225098]
[572.92248535 534.02734375]
[565.81335449 520.33563232]
[567.25781250 504.97601318]
[555.39233398 495.79940796]
[543.52679443 486.62283325]
[531.66131592 477.44622803]
[519.79583740 468.26962280]
[507.93032837 459.09301758]
[496.06481934 449.91641235]
[481.36892700 452.05325317]
[469.20489502 442.91589355]
[467.06323242 427.48699951]
[455.19772339 418.31039429]
[443.33224487 409.13378906]
[431.46673584 399.95721436]
[419.19506836 391.33132935]
[406.54272461 383.27410889]
[393.89041138 375.21691895]
[381.23806763 367.15969849]
[368.58575439 359.10250854]
[363.83016968 359.23855591]
[358.93481445 356.40234375]
[355.71243286 350.66671753]
[343.27444458 342.28244019]
[330.83642578 333.89813232]
[318.39843750 325.51385498]
[305.96044922 317.12954712]
[293.52246094 308.74526978]
[281.08447266 300.36099243]
[273.72564697 304.73388672]
[265.30557251 306.50048828]
[256.72366333 305.44348145]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 167]
[5 166]
[6 165]
[7 164]
[8 163]
[9 162]
[10 161]
[14 158]
[15 157]
[16 156]
[17 155]
[18 25]
[19 24]
[29 49]
[30 48]
[31 47]
[32 46]
[33 45]
[34 44]
[50 103]
[51 102]
[52 101]
[53 100]
[54 99]
[55 98]
[56 97]
[57 96]
[58 95]
[59 94]
[61 92]
[62 91]
[63 90]
[64 86]
[65 85]
[66 84]
[70 79]
[71 78]
[105 133]
[106 132]
[107 131]
[108 130]
[110 125]
[111 124]
[112 123]
[113 122]
[114 121]
[115 120]
[135 153]
[136 152]
[137 151]
[139 149]
[140 148]
[170 237]
[171 236]
[172 235]
[173 234]
[174 233]
[175 232]
[176 231]
[177 228]
[178 227]
[179 226]
[180 225]
[181 224]
[189 223]
[190 222]
[191 221]
[192 220]
[195 217]
[196 216]
[197 215]
[198 214]
[199 213]
[200 212]
[201 211]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
