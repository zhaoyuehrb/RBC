%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:26:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUUGACCCUGCACUCCAGUCCGGGCUGGCGGACAGAGGGCUGGAAACAAGACGCUCCAGAAUCAGGAGCUUCCCCUCAGGAAAUAGCAUCCUGUGUCCCCGCACUGCAGUUGUCUGGUCUCUCCAGCAGUUUGGUACUUCCGGCUGCUGCAAUGCGUGUGGUGGUGAUUGGAGCAGGAGUCAUCGGGCUGUCCACCGCCCUCUGCAUCCAUGAGCGCUACCACUCAGUCCUGCAGCCACUGGACAUAAAGG\
) } def
/len { sequence length } bind def

/coor [
[85.90242767 482.90374756]
[82.26461029 497.89608765]
[71.08306885 508.52511597]
[55.92578506 511.39920044]
[41.62939453 505.60119629]
[32.75582504 492.98123169]
[32.13660049 477.56631470]
[39.96931076 464.27526855]
[53.75457001 457.34921265]
[55.23636627 442.42257690]
[56.71816254 427.49594116]
[43.35642624 418.38635254]
[36.37895203 403.69332886]
[37.77931595 387.39376831]
[47.26913452 373.95266724]
[62.33108902 367.09991455]
[63.62815475 352.15609741]
[64.92522430 337.21228027]
[66.22229004 322.26846313]
[67.51936340 307.32464600]
[68.81642914 292.38082886]
[66.86435699 289.47567749]
[66.20723724 285.48846436]
[67.33500671 281.03121948]
[70.44890594 276.91018677]
[72.29945374 262.02474976]
[74.15000153 247.13934326]
[76.00054169 232.25393677]
[77.85108948 217.36853027]
[68.52469635 205.81196594]
[70.18936157 190.68968201]
[82.37418365 180.98565674]
[84.22472382 166.10025024]
[86.07527161 151.21484375]
[87.92581177 136.32942200]
[73.09752655 127.23728943]
[63.82268906 112.52259064]
[48.96130371 114.55709839]
[34.09991837 116.59160614]
[19.23853111 118.62611389]
[4.37714577 120.66062164]
[17.70411110 127.54480743]
[25.87264824 140.12554932]
[26.73860550 155.10052490]
[20.07468033 168.53898621]
[7.63007784 176.91346741]
[-7.32862568 178.02575684]
[-20.87493134 171.58389282]
[-29.45308304 159.27879333]
[-30.81140518 144.34042358]
[-24.59335327 130.68994141]
[-12.43055439 121.91023254]
[-27.42940712 122.09575653]
[-41.13282776 130.00314331]
[-53.95482254 122.42385101]
[-68.95367432 122.60937500]
[-83.95252991 122.79489136]
[-98.95137787 122.98041534]
[-113.95023346 123.16593933]
[-123.71225739 135.38218689]
[-139.05296326 138.41477966]
[-152.72895813 130.83180237]
[-158.28282166 116.21372223]
[-153.09222412 101.46273041]
[-139.60798645 93.54380798]
[-124.19695282 96.19602966]
[-114.13575745 108.16708374]
[-99.13690186 107.98156738]
[-84.13804626 107.79604340]
[-69.13919830 107.61051941]
[-54.14034653 107.42499542]
[-41.50974274 99.53087616]
[-27.61492920 107.09690094]
[-12.61607647 106.91137695]
[2.34263778 105.79924011]
[17.20402336 103.76473236]
[32.06540680 101.73022461]
[46.92679596 99.69570923]
[61.78818130 97.66120148]
[63.06230927 89.93917084]
[65.88019562 82.63761902]
[54.10331726 73.34756470]
[42.32643509 64.05751801]
[26.69957352 61.58531570]
[21.49906158 47.62809372]
[9.72218037 38.33804321]
[-2.05470204 29.04799271]
[-13.83158398 19.75794220]
[-30.12926483 17.93651199]
[-36.45190430 2.80521035]
[-26.29530716 -10.07017803]
[-10.10771561 -7.44455671]
[-4.54153252 7.98105955]
[7.23534918 17.27111053]
[19.01223183 26.56116295]
[30.78911400 35.85121155]
[45.57361221 37.65892792]
[51.61648560 52.28063583]
[63.39336777 61.57068634]
[75.17024994 70.86074066]
[84.58753967 64.95618439]
[95.30406952 62.00577164]
[96.41621399 47.04705811]
[97.52835083 32.08834076]
[98.64049530 17.12962723]
[91.94767761 2.79377317]
[100.60731506 -9.32480431]
[101.71945190 -24.28351784]
[102.83159637 -39.24223328]
[103.94374084 -54.20094681]
[105.05587769 -69.15966034]
[106.16802216 -84.11837769]
[99.47519684 -98.45423126]
[108.13483429 -110.57280731]
[109.24697876 -125.53152466]
[110.35912323 -140.49023438]
[107.87947083 -149.25239563]
[111.57864380 -155.62670898]
[112.87571716 -170.57052612]
[99.82397461 -178.40721130]
[91.50295258 -191.08189392]
[89.51829529 -206.05123901]
[94.21055603 -220.33912659]
[104.59815216 -231.12834167]
[118.58218384 -236.31605530]
[119.87924957 -251.25987244]
[121.17632294 -266.20367432]
[122.47338867 -281.14749146]
[115.04614258 -295.76831055]
[124.22004700 -309.36138916]
[140.55776978 -307.94332886]
[147.25245667 -292.97293091]
[137.41720581 -279.85043335]
[136.12013245 -264.90661621]
[134.82307434 -249.96279907]
[133.52600098 -235.01898193]
[146.40708923 -227.49948120]
[154.78042603 -215.08187866]
[156.94078064 -200.19921875]
[152.40666199 -185.79566956]
[142.02630615 -174.74420166]
[127.81952667 -169.27346802]
[126.52246094 -154.32965088]
[125.31783295 -139.37809753]
[124.20569611 -124.41938019]
[123.09355164 -109.46067047]
[129.86592102 -96.19476318]
[121.12673187 -83.00623322]
[120.01459503 -68.04752350]
[118.90245056 -53.08880615]
[117.79031372 -38.13009262]
[116.67816925 -23.17137718]
[115.56602478 -8.21266270]
[122.33839417 5.05324411]
[113.59921265 18.24176788]
[112.48706818 33.20048141]
[111.37493134 48.15919876]
[110.26278687 63.11791229]
[128.69168091 74.65438080]
[137.86645508 94.36574554]
[152.84809875 95.10755157]
[167.82974243 95.84935760]
[182.81138611 96.59116364]
[197.79304504 97.33296967]
[212.77468872 98.07477570]
[227.75633240 98.81657410]
[242.73797607 99.55838013]
[257.71963501 100.30018616]
[271.29437256 87.05448914]
[289.91894531 87.95101929]
[301.74523926 101.95026398]
[316.74063110 102.32128143]
[331.73605347 102.69229889]
[346.73147583 103.06330872]
[361.72888184 103.34158325]
[376.72772217 103.52710724]
[391.72659302 103.71263123]
[406.72543335 103.89815521]
[421.72430420 104.08367920]
[411.04125977 93.55404663]
[409.52191162 78.63119507]
[417.86361694 66.16459656]
[432.23757935 61.87632751]
[446.04626465 67.73468018]
[452.95156860 81.05070496]
[449.78405762 95.71244812]
[437.99734497 104.99034119]
[452.92398071 106.47213745]
[467.85058594 107.95393372]
[482.77722168 109.43572998]
[492.99246216 97.75546265]
[508.12969971 94.34313202]
[522.36834717 100.51084137]
[530.23333740 113.88698578]
[528.70043945 129.32815552]
[518.35913086 140.89692688]
[503.18576050 144.14485168]
[489.01486206 137.82302856]
[481.29544067 124.36235809]
[466.36880493 122.88056183]
[451.44216919 121.39876556]
[436.51553345 119.91696930]
[421.53875732 119.08252716]
[406.53991699 118.89700317]
[391.54107666 118.71148682]
[376.54220581 118.52596283]
[361.54336548 118.34043884]
[354.83477783 121.39182281]
[346.36044312 118.05872345]
[331.36502075 117.68770599]
[316.36962891 117.31668854]
[301.37420654 116.94567108]
[295.03247070 126.39111328]
[284.81851196 131.66809082]
[273.20608521 131.36878967]
[263.07077026 125.45201874]
[256.97781372 115.28183746]
[241.99617004 114.54003143]
[227.01452637 113.79822540]
[212.03288269 113.05641937]
[197.05123901 112.31461334]
[182.06958008 111.57280731]
[167.08793640 110.83100128]
[152.10629272 110.08919525]
[137.12464905 109.34738922]
[132.44961548 120.31342316]
[124.62819672 129.30981445]
[114.41874695 135.46424866]
[102.81122589 138.17997742]
[100.96067810 153.06538391]
[99.11013794 167.95079041]
[97.25959015 182.83621216]
[106.69743347 195.22833252]
[104.60866547 210.29789734]
[92.73649597 219.21907043]
[90.88595581 234.10447693]
[89.03540802 248.98989868]
[87.18486786 263.87530518]
[85.33432007 278.76071167]
[83.76024628 293.67788696]
[82.46317291 308.62170410]
[81.16610718 323.56552124]
[79.86904144 338.50933838]
[78.57196808 353.45315552]
[77.27490234 368.39697266]
[89.12774658 375.79656982]
[96.60545349 387.52197266]
[98.29949188 401.25863647]
[93.93637848 414.32400513]
[84.41994476 424.19119263]
[71.64479065 428.97775269]
[70.16299438 443.90435791]
[68.68119812 458.83099365]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 253]
[10 252]
[11 251]
[16 245]
[17 244]
[18 243]
[19 242]
[20 241]
[21 240]
[25 239]
[26 238]
[27 237]
[28 236]
[29 235]
[32 232]
[33 231]
[34 230]
[35 229]
[37 79]
[38 78]
[39 77]
[40 76]
[41 75]
[52 74]
[53 73]
[55 71]
[56 70]
[57 69]
[58 68]
[59 67]
[81 100]
[82 99]
[83 98]
[85 96]
[86 95]
[87 94]
[88 93]
[102 158]
[103 157]
[104 156]
[105 155]
[107 153]
[108 152]
[109 151]
[110 150]
[111 149]
[112 148]
[114 146]
[115 145]
[116 144]
[118 143]
[119 142]
[125 136]
[126 135]
[127 134]
[128 133]
[160 225]
[161 224]
[162 223]
[163 222]
[164 221]
[165 220]
[166 219]
[167 218]
[168 217]
[171 212]
[172 211]
[173 210]
[174 209]
[175 207]
[176 206]
[177 205]
[178 204]
[179 203]
[187 202]
[188 201]
[189 200]
[190 199]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
