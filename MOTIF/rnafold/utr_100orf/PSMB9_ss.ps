%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:25:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCGUUGUGCGCUGUCCCAGGUUGGAAACCAGUGCCCCAGGCGGCGAGGAGAGCGGUGCCUUGCAGGGAUGCUGCGGGCGGGAGCACCAACCGGGGACUUACCCCGGGCGGGAGAAGUCCACACCGGGACCACCAUCAUGGCAGUGGAGUUUGACGGGGGCGUUGUGA\
) } def
/len { sequence length } bind def

/coor [
[50.83441544 486.94949341]
[46.99677277 501.45028687]
[43.15913391 515.95104980]
[39.32149124 530.45184326]
[46.11030579 544.98767090]
[38.84967804 559.29376221]
[23.10934448 562.39556885]
[10.96393871 551.91375732]
[11.73037720 535.88903809]
[24.82071495 526.61419678]
[28.65835571 512.11340332]
[32.49599838 497.61264038]
[36.33364105 483.11184692]
[39.22600174 468.39337158]
[41.16099167 453.51867676]
[43.09597778 438.64401245]
[45.03096771 423.76934814]
[46.96595383 408.89468384]
[48.90094376 394.01998901]
[41.76430893 384.22253418]
[43.28095627 371.79226685]
[53.17801285 363.48126221]
[55.38753891 348.64486694]
[57.59706116 333.80850220]
[59.80658722 318.97213745]
[62.01611328 304.13574219]
[64.22563934 289.29937744]
[55.18109131 277.52093506]
[57.21051407 262.44326782]
[69.62615204 253.03637695]
[71.83567810 238.19999695]
[74.04520416 223.36363220]
[68.26705170 209.63546753]
[77.95274353 197.12554932]
[80.16226959 182.28918457]
[82.37179565 167.45280457]
[84.58131409 152.61642456]
[61.72864914 139.26229858]
[47.79481888 116.75839233]
[46.02700424 90.34907532]
[31.76115608 85.71382141]
[17.49530792 81.07856750]
[3.22946119 76.44331360]
[-11.03638649 71.80805969]
[-26.55208778 74.90218353]
[-36.26548386 63.61062622]
[-50.53133392 58.97537231]
[-63.69598770 67.41490936]
[-79.19884491 65.36663818]
[-89.71993256 53.79767609]
[-90.29150391 38.17054367]
[-80.64369202 25.86388779]
[-65.33189392 22.68854141]
[-51.58587265 30.14380074]
[-45.89608002 44.70952225]
[-31.63022995 49.34477997]
[-17.13491821 45.91911316]
[-6.40113163 57.54220963]
[7.86471605 62.17746353]
[22.13056374 66.81272125]
[36.39641190 71.44797516]
[50.66225815 76.08322906]
[55.09046173 64.95268250]
[62.06782150 54.67424011]
[54.17133713 41.92098236]
[46.27485657 29.16772461]
[38.37837219 16.41446686]
[23.15350723 11.35650539]
[17.75088501 -3.74949384]
[26.31493759 -17.31550217]
[42.27605438 -18.93483734]
[53.39023590 -7.36528444]
[51.13162994 8.51798534]
[59.02811432 21.27124214]
[66.92459869 34.02449799]
[74.82107544 46.77775574]
[89.08692932 42.14250183]
[87.97914124 27.18346405]
[86.73317719 12.23530006]
[85.34915161 -2.70071220]
[75.43768311 -15.76573277]
[82.04512787 -30.77485275]
[98.37432098 -32.28797531]
[107.62718201 -18.74852943]
[100.28516388 -4.08473730]
[101.66918945 10.85127544]
[105.43221283 17.24657059]
[102.93817902 26.07567596]
[104.04596710 41.03471375]
[117.48183441 45.03411102]
[129.27632141 51.96448517]
[138.82348633 61.28357315]
[150.79374695 52.24405289]
[162.76400757 43.20453262]
[174.73425293 34.16501617]
[186.44937134 24.79719543]
[197.90034485 15.10827446]
[209.35131836 5.41935349]
[220.80229187 -4.26956749]
[232.25326538 -13.95848846]
[243.70425415 -23.64740944]
[245.16615295 -39.15549088]
[256.91708374 -48.81830978]
[271.69265747 -47.32902908]
[283.14364624 -57.01795197]
[294.59463501 -66.70687103]
[299.62789917 -82.31450653]
[315.71578979 -85.49436188]
[326.30847168 -72.97528076]
[320.50906372 -57.63581848]
[304.28353882 -55.25589752]
[292.83258057 -45.56697845]
[281.38159180 -35.87805557]
[280.40417480 -21.05981636]
[268.92926025 -11.07074928]
[253.39317322 -12.19643497]
[241.94219971 -2.50751424]
[230.49122620 7.18140650]
[219.04023743 16.87032700]
[207.58926392 26.55924797]
[196.13829041 36.24816895]
[195.49244690 39.75215149]
[193.09358215 43.10989761]
[189.03277588 45.49002457]
[183.77377319 46.13527298]
[171.80351257 55.17479324]
[159.83326721 64.21430969]
[147.86300659 73.25382996]
[151.52868652 81.26448059]
[153.86410522 89.75879669]
[154.80900574 98.51750183]
[154.33895874 107.31447601]
[152.46612549 115.92262268]
[149.23884583 124.11971283]
[144.74043274 131.69413757]
[139.08700562 138.45036316]
[132.42453003 144.21395874]
[124.92498779 148.83615112]
[116.78199768 152.19760132]
[108.20576477 154.21153259]
[99.41769409 154.82595825]
[97.20816803 169.66232300]
[94.99864197 184.49870300]
[92.78911591 199.33508301]
[98.40922546 214.12443542]
[88.88157654 225.57315063]
[86.67205048 240.40953064]
[84.46252441 255.24589539]
[93.59831238 267.86236572]
[91.14618683 282.87707520]
[79.06201172 291.50891113]
[76.85248566 306.34527588]
[74.64295959 321.18164062]
[72.43343353 336.01803589]
[70.22391510 350.85440063]
[68.01438904 365.69076538]
[75.17611694 382.63549805]
[63.77561569 395.95498657]
[61.84062576 410.82965088]
[59.90563583 425.70434570]
[57.97064972 440.57901001]
[56.03565979 455.45367432]
[54.10067368 470.32833862]
[66.11145782 461.34274292]
[81.09596252 462.02432251]
[92.24142456 472.06317139]
[94.48050690 486.89511108]
[86.79520416 499.77673340]
[72.67967224 504.85134888]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 13]
[2 12]
[3 11]
[4 10]
[14 163]
[15 162]
[16 161]
[17 160]
[18 159]
[19 158]
[22 156]
[23 155]
[24 154]
[25 153]
[26 152]
[27 151]
[30 148]
[31 147]
[32 146]
[34 144]
[35 143]
[36 142]
[37 141]
[40 62]
[41 61]
[42 60]
[43 59]
[44 58]
[46 56]
[47 55]
[64 76]
[65 75]
[66 74]
[67 73]
[77 89]
[78 88]
[79 86]
[80 85]
[92 128]
[93 127]
[94 126]
[95 125]
[96 121]
[97 120]
[98 119]
[99 118]
[100 117]
[101 116]
[104 113]
[105 112]
[106 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
