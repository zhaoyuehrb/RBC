%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:20:45 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR1L8)
} def

/sequence { (\
AUGGAAAGAAUCAACCACACCAGCAGUGUCUCCGAGUUUAUCCUCCUGGGACUCUCCUCCCGGCCUGAGGACCAAAAGACACUCUUUGUUCUCUUCCUCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 13 0.005530922 ubox
2 17 0.011455300 ubox
2 22 0.004043526 ubox
2 100 0.029452744 ubox
3 12 0.006124225 ubox
3 16 0.014630270 ubox
3 21 0.005268750 ubox
3 43 0.015106783 ubox
3 92 0.005756955 ubox
3 93 0.003435905 ubox
3 94 0.011406160 ubox
3 96 0.072481121 ubox
3 97 0.994163168 ubox
3 98 0.020114161 ubox
3 99 0.023911003 ubox
4 11 0.004144259 ubox
4 12 0.004333537 ubox
4 15 0.014578982 ubox
4 20 0.005253857 ubox
4 42 0.015133313 ubox
4 91 0.006492584 ubox
4 93 0.012322315 ubox
4 95 0.073679202 ubox
4 96 0.995975652 ubox
4 97 0.024407564 ubox
4 98 0.011362658 ubox
4 99 0.011306745 ubox
5 11 0.004253343 ubox
5 41 0.014931585 ubox
5 90 0.006430914 ubox
5 92 0.009585108 ubox
5 94 0.086626827 ubox
5 95 0.988793222 ubox
5 98 0.011041353 ubox
6 89 0.004862477 ubox
6 94 0.953872169 ubox
6 95 0.098077481 ubox
7 39 0.013382064 ubox
7 89 0.003811798 ubox
7 92 0.969152213 ubox
7 94 0.136470972 ubox
8 38 0.013875378 ubox
8 39 0.004118734 ubox
8 87 0.003448843 ubox
8 90 0.006463059 ubox
8 91 0.983883811 ubox
8 93 0.166312877 ubox
8 96 0.009602897 ubox
8 99 0.005556253 ubox
9 37 0.013164714 ubox
9 38 0.004331939 ubox
9 86 0.003607608 ubox
9 87 0.004185340 ubox
9 89 0.008507840 ubox
9 90 0.982754812 ubox
9 92 0.161888311 ubox
9 95 0.009643146 ubox
9 98 0.005427949 ubox
10 37 0.004286180 ubox
10 86 0.005318546 ubox
10 89 0.921964867 ubox
10 94 0.008981108 ubox
11 35 0.016700462 ubox
11 36 0.003316210 ubox
11 88 0.379932214 ubox
12 34 0.018130773 ubox
12 88 0.862988763 ubox
13 86 0.196513735 ubox
13 87 0.879060045 ubox
13 90 0.092671800 ubox
14 37 0.003464518 ubox
14 85 0.118455976 ubox
14 86 0.860108946 ubox
14 89 0.093654475 ubox
15 36 0.003512570 ubox
15 88 0.088961085 ubox
16 28 0.015536297 ubox
16 88 0.066633250 ubox
17 27 0.015816201 ubox
17 29 0.040726471 ubox
17 87 0.072390230 ubox
17 89 0.232182066 ubox
18 26 0.015845683 ubox
18 28 0.043305474 ubox
18 88 0.260971169 ubox
19 27 0.043326932 ubox
19 87 0.256795960 ubox
19 89 0.087686548 ubox
20 26 0.043259454 ubox
20 88 0.097739442 ubox
21 88 0.097029132 ubox
22 83 0.003717979 ubox
22 85 0.939120735 ubox
22 86 0.128655855 ubox
22 87 0.098840250 ubox
22 90 0.012197240 ubox
23 84 0.955714975 ubox
23 85 0.160519136 ubox
23 86 0.086345808 ubox
23 89 0.021431111 ubox
24 88 0.022555736 ubox
25 83 0.992892158 ubox
25 85 0.008598936 ubox
25 87 0.016102686 ubox
26 82 0.998826381 ubox
26 84 0.006421418 ubox
27 81 0.998698848 ubox
28 80 0.998891604 ubox
29 35 0.003575468 ubox
29 79 0.998735164 ubox
30 34 0.004514037 ubox
30 36 0.005780624 ubox
30 78 0.998629465 ubox
31 35 0.006536958 ubox
31 51 0.004178465 ubox
31 71 0.011204774 ubox
31 77 0.958691119 ubox
31 79 0.008843291 ubox
32 50 0.006576858 ubox
32 70 0.014242013 ubox
32 78 0.011582501 ubox
33 49 0.006582907 ubox
33 69 0.014200170 ubox
34 42 0.014709053 ubox
34 45 0.060218683 ubox
34 54 0.053226611 ubox
34 84 0.025120794 ubox
35 41 0.017825173 ubox
35 44 0.060350507 ubox
35 47 0.006234087 ubox
35 53 0.053295916 ubox
35 83 0.025139173 ubox
36 43 0.060004332 ubox
36 46 0.006251621 ubox
36 52 0.053308516 ubox
36 72 0.535567272 ubox
36 80 0.006942107 ubox
36 82 0.024995247 ubox
37 51 0.052045784 ubox
37 69 0.004053693 ubox
37 70 0.004941036 ubox
37 71 0.370587817 ubox
37 75 0.334354096 ubox
37 76 0.485142653 ubox
37 77 0.090105474 ubox
37 79 0.007350178 ubox
37 81 0.022992008 ubox
38 50 0.040965323 ubox
38 51 0.003351322 ubox
38 68 0.004728551 ubox
38 69 0.005692100 ubox
38 70 0.168999338 ubox
38 71 0.033734865 ubox
38 74 0.346156152 ubox
38 75 0.483203147 ubox
38 76 0.182276362 ubox
38 77 0.013197456 ubox
38 78 0.008013358 ubox
38 79 0.006506043 ubox
39 48 0.003834827 ubox
39 49 0.013204098 ubox
39 50 0.003509045 ubox
39 67 0.005132525 ubox
39 68 0.005534462 ubox
39 69 0.110327532 ubox
39 70 0.018065614 ubox
39 74 0.452968307 ubox
39 75 0.179599388 ubox
39 76 0.022534172 ubox
39 77 0.007937740 ubox
39 78 0.006308398 ubox
40 47 0.004267836 ubox
40 66 0.005088919 ubox
41 50 0.030319613 ubox
41 51 0.010458671 ubox
41 68 0.151455294 ubox
41 70 0.005346135 ubox
41 71 0.907806737 ubox
42 48 0.003670761 ubox
42 49 0.049453818 ubox
42 50 0.013503700 ubox
42 67 0.152360114 ubox
42 69 0.006130428 ubox
42 70 0.980849629 ubox
43 48 0.049613619 ubox
43 49 0.013585947 ubox
43 69 0.983178668 ubox
44 48 0.012243229 ubox
44 68 0.983026792 ubox
45 63 0.039641369 ubox
45 67 0.981777761 ubox
46 62 0.041368501 ubox
46 63 0.993420893 ubox
47 62 0.994730267 ubox
47 74 0.048723626 ubox
48 58 0.004061038 ubox
48 60 0.003295915 ubox
48 61 0.997016240 ubox
48 65 0.004162588 ubox
48 66 0.010516127 ubox
48 73 0.052631176 ubox
49 57 0.005317955 ubox
49 59 0.003576444 ubox
49 60 0.997043800 ubox
49 64 0.004044964 ubox
49 65 0.011346961 ubox
49 72 0.052639295 ubox
50 56 0.006188090 ubox
50 57 0.003621917 ubox
50 59 0.996975916 ubox
50 64 0.011350744 ubox
51 55 0.006567049 ubox
51 58 0.932651283 ubox
52 63 0.010446221 ubox
52 69 0.052569775 ubox
53 62 0.010038937 ubox
53 68 0.052560506 ubox
54 67 0.052529274 ubox
55 71 0.049652557 ubox
56 63 0.049869733 ubox
56 70 0.053653914 ubox
57 62 0.049857749 ubox
57 63 0.005257808 ubox
57 69 0.053674716 ubox
58 62 0.004776281 ubox
58 68 0.053654910 ubox
58 71 0.003622013 ubox
59 67 0.053534282 ubox
59 70 0.003924796 ubox
60 69 0.003918316 ubox
61 67 0.003312231 ubox
62 73 0.018607177 ubox
63 72 0.018659964 ubox
64 70 0.022343329 ubox
65 69 0.022208191 ubox
66 74 0.006661442 ubox
66 100 0.008257437 ubox
67 73 0.007188635 ubox
67 93 0.017356178 ubox
67 99 0.010840129 ubox
68 92 0.017405464 ubox
68 98 0.010844159 ubox
69 91 0.017432947 ubox
69 97 0.010845059 ubox
70 90 0.017417749 ubox
70 96 0.010838549 ubox
71 89 0.017464594 ubox
71 95 0.010425885 ubox
72 88 0.016679333 ubox
73 88 0.011178015 ubox
74 87 0.011245182 ubox
75 86 0.009819999 ubox
75 87 0.029912447 ubox
75 94 0.003178396 ubox
76 85 0.008065446 ubox
76 86 0.033371703 ubox
77 83 0.003253982 ubox
77 85 0.034719836 ubox
77 92 0.006769197 ubox
77 94 0.003349790 ubox
78 82 0.003268672 ubox
78 84 0.035278941 ubox
78 90 0.005914385 ubox
78 91 0.007098675 ubox
78 93 0.003376738 ubox
79 83 0.030694282 ubox
79 89 0.007116883 ubox
79 90 0.006280275 ubox
79 92 0.003259084 ubox
80 88 0.007904185 ubox
81 87 0.007318404 ubox
81 89 0.006313943 ubox
82 88 0.006481200 ubox
3 97 0.9500000 lbox
4 96 0.9500000 lbox
5 95 0.9500000 lbox
6 94 0.9500000 lbox
7 92 0.9500000 lbox
8 91 0.9500000 lbox
9 90 0.9500000 lbox
10 89 0.9500000 lbox
12 88 0.9500000 lbox
13 87 0.9500000 lbox
14 86 0.9500000 lbox
22 85 0.9500000 lbox
23 84 0.9500000 lbox
25 83 0.9500000 lbox
26 82 0.9500000 lbox
27 81 0.9500000 lbox
28 80 0.9500000 lbox
29 79 0.9500000 lbox
30 78 0.9500000 lbox
31 77 0.9500000 lbox
41 71 0.9500000 lbox
42 70 0.9500000 lbox
43 69 0.9500000 lbox
44 68 0.9500000 lbox
45 67 0.9500000 lbox
46 63 0.9500000 lbox
47 62 0.9500000 lbox
48 61 0.9500000 lbox
49 60 0.9500000 lbox
50 59 0.9500000 lbox
51 58 0.9500000 lbox
showpage
end
%%EOF
