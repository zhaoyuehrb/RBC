%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:58:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCGGUCAGCCCGCGCGAGGGGUCGGCGUUCAUUCCUGCCGCUGCCGCCGCCGCCGCCGAGGUCCCGCACCAGCCAUGGCGCAGAUCCUCCCUGUUCGCUUUCAGGAGCACUUCCAGCUCCAAAACCUUGGAAUUAAUCCAGCUAACAUUGGAUUCAGCACACUGACCAUGGAAU\
) } def
/len { sequence length } bind def

/coor [
[98.38040161 271.04922485]
[108.21605682 258.37484741]
[107.68067169 243.38441467]
[106.87780762 228.40591431]
[105.80772400 213.44413757]
[104.73763275 198.48234558]
[103.66754150 183.52056885]
[102.59745789 168.55879211]
[101.52736664 153.59700012]
[87.23839569 150.02842712]
[74.98949432 142.88139343]
[65.60805511 132.98602295]
[59.62829971 121.34149933]
[45.39590836 126.07849121]
[31.16352081 130.81549072]
[16.97397614 135.67930603]
[2.82840514 140.66958618]
[-8.79925823 154.92890930]
[-25.90653229 151.07859802]
[-39.96077728 156.32055664]
[-53.96767807 161.68774414]
[-67.92612457 167.17971802]
[-81.88456726 172.67170715]
[-95.74275970 178.41195679]
[-109.49628448 184.39865112]
[-123.24981689 190.38534546]
[-137.00334167 196.37203979]
[-150.75686646 202.35871887]
[-153.97775269 217.53784180]
[-165.52807617 227.89976501]
[-180.96650696 229.46014404]
[-194.35662842 221.61897278]
[-200.54969788 207.39134216]
[-197.16433716 192.24806213]
[-185.50228882 182.01203918]
[-170.04783630 180.61923218]
[-156.74356079 188.60519409]
[-142.99003601 182.61849976]
[-129.23651123 176.63180542]
[-115.48297882 170.64512634]
[-101.72945404 164.65843201]
[-99.16944122 160.59181213]
[-94.01276398 158.10774231]
[-87.37654877 158.71325684]
[-73.41810608 153.22128296]
[-59.45966339 147.72929382]
[-54.37001801 142.33683777]
[-45.20273972 142.26631165]
[-31.14849472 137.02435303]
[-25.82586098 126.13918304]
[-14.13368225 121.66764832]
[-2.16186810 126.52401733]
[11.98370266 121.53374481]
[17.26257133 116.32638550]
[26.42652702 116.58309937]
[40.65891647 111.84609985]
[54.89130402 107.10910797]
[57.07258224 78.53627777]
[76.44161987 55.53174591]
[69.48901367 42.24034882]
[62.53641129 28.94894791]
[55.58380508 15.65754890]
[48.51285553 2.42872977]
[41.32411957 -10.73645496]
[29.17255402 -15.12372017]
[23.46235275 -26.26352501]
[26.77659607 -37.91826630]
[19.82399178 -51.20966721]
[6.57154560 -59.85161591]
[7.52833700 -74.71545410]
[0.57573277 -88.00685883]
[-6.37687111 -101.29825592]
[-20.50749969 -109.62036133]
[-20.09511185 -126.01432037]
[-5.56393719 -133.61543274]
[8.13759708 -124.60433197]
[6.91452789 -108.25086212]
[13.86713219 -94.95945740]
[20.81973648 -81.66806030]
[33.57488632 -73.97680664]
[33.11539078 -58.16226959]
[40.06799316 -44.87087250]
[55.36774826 -36.30341721]
[54.48930740 -17.92518997]
[61.67803955 -4.76000500]
[67.66275024 -0.38207561]
[68.87520599 8.70494461]
[75.82781219 21.99634361]
[82.78041077 35.28774261]
[89.73301697 48.57914352]
[104.71151733 47.77627945]
[110.20349884 33.81783676]
[115.69548035 19.85939217]
[121.18746185 5.90094900]
[112.73171997 -7.10981798]
[113.57203674 -22.60412216]
[123.38529205 -34.62408829]
[138.39810181 -38.54779434]
[152.83770752 -32.86649704]
[161.15180969 -19.76476669]
[160.14346313 -4.28048849]
[150.20039368 7.63231611]
[135.14590454 11.39293098]
[129.65393066 25.35137367]
[124.16194153 39.30981827]
[118.66996002 53.26826096]
[125.20741272 56.20219040]
[131.28805542 60.04944611]
[142.96768188 50.63740921]
[143.09689331 35.00035858]
[153.28643799 23.13835907]
[168.72514343 20.65228081]
[182.12330627 28.71597481]
[187.15473938 43.52201080]
[181.44374084 58.07943344]
[167.68687439 65.51467133]
[152.37971497 62.31703186]
[140.70008850 71.72906494]
[147.29437256 85.20183563]
[161.89233398 81.75225067]
[176.49028015 78.30265808]
[191.08824158 74.85307312]
[205.68620300 71.40348816]
[217.24438477 59.76990128]
[233.02713013 64.22381592]
[236.79847717 80.18341827]
[224.67880249 91.23084259]
[209.13578796 86.00144196]
[194.53782654 89.45102692]
[179.93986511 92.90061951]
[165.34191895 96.35020447]
[150.74395752 99.79978943]
[151.16973877 105.48583221]
[150.95162964 111.26258850]
[150.07498169 117.05645752]
[148.53359985 122.79170227]
[161.82499695 129.74430847]
[175.11639404 136.69691467]
[188.40780640 143.64950562]
[201.69920349 150.60211182]
[214.99060059 157.55471802]
[228.28199768 164.50732422]
[243.28742981 159.54620361]
[257.36816406 166.72312927]
[262.17037964 181.78016663]
[254.84497070 195.78424072]
[239.73799133 200.42698669]
[225.81214905 192.95393372]
[221.32939148 177.79872131]
[208.03799438 170.84611511]
[194.74659729 163.89350891]
[181.45520020 156.94091797]
[168.16380310 149.98831177]
[154.87239075 143.03570557]
[141.58099365 136.08309937]
[135.30802917 140.19406128]
[143.63908386 152.66777039]
[155.26377869 162.14756775]
[149.91113281 176.16003418]
[134.92675781 175.47537231]
[130.87426758 161.03314209]
[122.76211548 148.41596985]
[116.48915100 152.52691650]
[117.55924225 167.48870850]
[118.62932587 182.45048523]
[119.69941711 197.41226196]
[120.76950073 212.37405396]
[121.83959198 227.33583069]
[125.24990082 233.06083679]
[125.23464203 238.78462219]
[122.67111206 242.84902954]
[123.20649719 257.83947754]
[133.92127991 269.77987671]
[131.12445068 285.57723999]
[116.96152496 293.11322021]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 172]
[3 171]
[4 168]
[5 167]
[6 166]
[7 165]
[8 164]
[9 163]
[13 57]
[14 56]
[15 55]
[16 53]
[17 52]
[19 49]
[20 48]
[21 46]
[22 45]
[23 44]
[24 41]
[25 40]
[26 39]
[27 38]
[28 37]
[59 90]
[60 89]
[61 88]
[62 87]
[63 85]
[64 84]
[67 82]
[68 81]
[70 79]
[71 78]
[72 77]
[91 106]
[92 105]
[93 104]
[94 103]
[108 118]
[109 117]
[119 132]
[120 131]
[121 130]
[122 129]
[123 128]
[136 155]
[137 154]
[138 153]
[139 152]
[140 151]
[141 150]
[142 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
