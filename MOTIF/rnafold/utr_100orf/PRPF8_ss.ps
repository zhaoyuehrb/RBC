%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:27:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAACUCGGGUUGCGCACUUCCCGGCGCUGGGAACGCGGAGCGGACGCAGUCUGGCCGCCAUUGCGCUGCGGGGAAAGCGGCCUCUUGUGUGAGGGCCUGUGGGAUUCUCCGGAUAUGGCCGGAGUGUUUCCUUAUCGAGGGCCGGGUAACCCGGUGCCUGGCCCUCUAGCCCCGCUACCGGACUACAUGUCGGAGGAGAAGCUGCAGGAGAAAG\
) } def
/len { sequence length } bind def

/coor [
[97.67079926 635.41241455]
[92.72441101 620.70489502]
[97.39971924 605.90887451]
[109.89895630 596.71386719]
[109.67977905 581.71545410]
[109.46060944 566.71704102]
[98.63011932 556.55651855]
[98.19419098 541.34912109]
[108.92490387 530.05804443]
[108.70573425 515.05963135]
[100.78329468 502.44677734]
[108.31813049 488.53500366]
[108.09895325 473.53662109]
[97.69162750 465.94241333]
[93.49501038 453.55596924]
[97.25302887 440.82647705]
[107.80889893 432.46350098]
[107.80889893 417.46350098]
[107.80889893 402.46350098]
[107.80889893 387.46350098]
[107.69931030 372.46389771]
[107.48014069 357.46548462]
[107.26096344 342.46710205]
[107.04179382 327.46868896]
[106.82261658 312.47030640]
[106.60344696 297.47189331]
[105.72721863 282.49752808]
[104.19562531 267.57592773]
[102.66403198 252.65431213]
[101.13244629 237.73271179]
[90.93588257 232.62234497]
[84.40366364 223.12687683]
[83.25312042 211.53865051]
[87.88500977 200.72375488]
[97.25549316 193.41314697]
[96.16056061 178.45317078]
[95.06563568 163.49317932]
[93.97070312 148.53320312]
[85.32501221 136.40466309]
[92.03432465 122.07652283]
[90.93939209 107.11653900]
[85.88927460 92.99222565]
[77.25074768 80.72943878]
[68.61222839 68.46665192]
[54.33929443 61.64066696]
[53.33502960 46.77995682]
[44.69650650 34.51717377]
[36.05798340 22.25438499]
[21.78505325 15.42840481]
[20.78078842 0.56769425]
[12.14226627 -11.69509220]
[3.50374341 -23.95787811]
[-5.13477945 -36.22066498]
[-13.77330208 -48.48345184]
[-22.41182518 -60.74623489]
[-31.05034828 -73.00902557]
[-43.49951172 -81.37671661]
[-58.11643219 -84.74504852]
[-71.38124084 -76.15316772]
[-86.81857300 -79.53908539]
[-95.26972198 -92.89399719]
[-91.72078705 -108.29466248]
[-78.27727509 -116.60414886]
[-62.91498566 -112.89257812]
[-54.74810028 -99.36196899]
[-40.13117981 -95.99363708]
[-35.63460541 -101.99620056]
[-26.64145088 -114.00133514]
[-22.14487457 -120.00389862]
[-29.48614311 -133.08464050]
[-36.82741165 -146.16537476]
[-44.16867828 -159.24612427]
[-51.50994492 -172.32685852]
[-58.85121536 -185.40760803]
[-66.19248199 -198.48834229]
[-85.24960327 -208.29252625]
[-84.10859680 -228.90147400]
[-92.01603699 -241.64793396]
[-100.01639557 -254.33628845]
[-108.10923767 -266.96585083]
[-116.20207977 -279.59542847]
[-124.29492188 -292.22497559]
[-131.55752563 -297.75994873]
[-132.41218567 -305.09872437]
[-140.31962585 -317.84521484]
[-148.22706604 -330.59167480]
[-162.92927551 -337.85644531]
[-163.71875000 -354.23657227]
[-149.78334045 -362.88159180]
[-135.45860291 -354.89825439]
[-135.48059082 -338.49911499]
[-127.57315826 -325.75265503]
[-119.66571808 -313.00616455]
[-111.66535950 -300.31781006]
[-103.57251740 -287.68826294]
[-95.47967529 -275.05868530]
[-87.38683319 -262.42913818]
[-81.13329315 -258.49450684]
[-79.26957703 -249.55537415]
[-71.36213684 -236.80891418]
[-62.50820541 -236.21929932]
[-54.80007935 -231.55194092]
[-50.03083420 -223.74481201]
[-49.37719345 -214.48171997]
[-53.11174011 -205.82962036]
[-45.77047348 -192.74887085]
[-38.42920685 -179.66813660]
[-31.08793831 -166.58738708]
[-23.74666977 -153.50665283]
[-16.40540123 -140.42590332]
[-9.06413460 -127.34516907]
[-4.42803144 -117.28787994]
[-2.91364145 -107.23316956]
[-4.20341158 -98.04763031]
[-7.75885582 -90.43562317]
[-12.88194561 -84.88739777]
[-18.78756142 -81.64754486]
[-10.14903927 -69.38475800]
[-1.51051605 -57.12197495]
[7.12800694 -44.85918808]
[15.76653004 -32.59640121]
[24.40505219 -20.33361435]
[33.04357529 -8.07082844]
[46.69861984 -2.12196398]
[48.32077026 13.61586285]
[56.95929337 25.87864876]
[65.59781647 38.14143372]
[79.25286102 44.09030151]
[80.87501526 59.82812881]
[89.51353455 72.09091187]
[98.15205383 84.35369873]
[95.62201691 69.56861115]
[104.83140564 57.72854233]
[119.78440094 56.54202652]
[130.74578857 66.78154755]
[130.57911682 81.78062439]
[119.39331055 91.77389526]
[133.78851318 87.55746460]
[148.18370056 83.34104156]
[162.57890320 79.12461090]
[176.97410583 74.90818024]
[191.36929321 70.69174957]
[205.76449585 66.47532654]
[220.15969849 62.25889587]
[234.55490112 58.04246902]
[248.95008850 53.82604218]
[263.34527588 49.60961151]
[277.74047852 45.39318466]
[285.10302734 31.40860748]
[300.22229004 26.80599022]
[314.12823486 34.31598282]
[318.57073975 49.48304367]
[310.91415405 63.30881882]
[295.70095825 67.59072113]
[281.95690918 59.78838348]
[267.56170654 64.00481415]
[253.16651917 68.22123718]
[238.77131653 72.43766785]
[224.37612915 76.65409851]
[209.98092651 80.87052155]
[195.58572388 85.08695221]
[181.19052124 89.30338287]
[166.79533386 93.51980591]
[152.40013123 97.73623657]
[138.00492859 101.95266724]
[123.60973358 106.16909027]
[117.29660797 108.05020142]
[111.22895050 107.94255829]
[105.89937592 106.02160645]
[106.99430847 120.98159027]
[115.71831512 134.18016052]
[108.93068695 147.43826294]
[110.02561951 162.39825439]
[111.12054443 177.35823059]
[112.21547699 192.31822205]
[127.01634216 204.14775085]
[128.44274902 222.72091675]
[116.05404663 236.20111084]
[117.58563995 251.12272644]
[119.11723328 266.04431152]
[120.64882660 280.96591187]
[130.91769409 270.03201294]
[145.90547180 269.42651367]
[157.02288818 279.49639893]
[157.89874268 294.47082520]
[148.03109741 305.76812744]
[133.07493591 306.91406250]
[121.60184479 297.25274658]
[121.82101440 312.25112915]
[122.04019165 327.24954224]
[122.25936127 342.24792480]
[122.47853851 357.24633789]
[122.69770813 372.24472046]
[125.95137024 380.77673340]
[122.80889893 387.46350098]
[122.80889893 402.46350098]
[122.80889893 417.46350098]
[122.80889893 432.46350098]
[135.40348816 444.60623169]
[135.31947327 461.76303101]
[123.09735107 473.31744385]
[123.31652832 488.31582642]
[131.25463867 502.00149536]
[123.70413208 514.84045410]
[123.92330933 529.83886719]
[134.97937012 540.81158447]
[134.98797607 556.02520752]
[124.45900726 566.49786377]
[124.67818451 581.49627686]
[124.89735413 596.49468994]
[137.65994263 605.32055664]
[142.76557922 619.97363281]
[138.25105286 634.81945801]
[125.85230255 644.14953613]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 210]
[5 209]
[6 208]
[9 205]
[10 204]
[12 202]
[13 201]
[17 198]
[18 197]
[19 196]
[20 195]
[21 193]
[22 192]
[23 191]
[24 190]
[25 189]
[26 188]
[27 181]
[28 180]
[29 179]
[30 178]
[35 175]
[36 174]
[37 173]
[38 172]
[40 170]
[41 169]
[42 131]
[43 130]
[44 129]
[46 127]
[47 126]
[48 125]
[50 123]
[51 122]
[52 121]
[53 120]
[54 119]
[55 118]
[56 117]
[57 66]
[58 65]
[69 111]
[70 110]
[71 109]
[72 108]
[73 107]
[74 106]
[75 105]
[77 100]
[78 99]
[79 97]
[80 96]
[81 95]
[82 94]
[84 93]
[85 92]
[86 91]
[137 166]
[138 165]
[139 164]
[140 163]
[141 162]
[142 161]
[143 160]
[144 159]
[145 158]
[146 157]
[147 156]
[148 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
