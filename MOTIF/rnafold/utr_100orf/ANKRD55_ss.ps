%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:33:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUGCUCUGUCUGGCCCUGUGAAUCCUCACUCACCCAUUCAGAUUUCUGUUGGUGUAAAGCGACAUUCCAGCUGCUGAAGCUCCGUGAUCUGCUGUGUUUUUCCAGCCCAGAUCCAAGAGACCUGGAUGCUUUUUGCCAUUCUGAUGGUAAAUGAUGAGACAGGCUACCAUGGAUUUCAGCACCCCUUCUGUGUUUGAUCAGCAAAGAGGUGACUCAUCUGAGGAAGUUGACCUGACCAUGGUUUAUCAAG\
) } def
/len { sequence length } bind def

/coor [
[159.46089172 205.93475342]
[164.24746704 191.71896362]
[174.24826050 180.53933716]
[187.84507751 174.20478821]
[202.84043884 173.74073792]
[190.07278442 165.86756897]
[182.74972534 165.03411865]
[177.19633484 157.81651306]
[164.52742004 149.78541565]
[151.85850525 141.75430298]
[139.18960571 133.72319031]
[126.52069092 125.69207764]
[113.85178375 117.66096497]
[99.12876129 120.53021240]
[90.40263367 132.73081970]
[95.71710205 145.43223572]
[94.08158112 158.99424744]
[86.02842712 169.89408875]
[73.74294281 175.35366821]
[60.47129059 174.04722595]
[51.59434509 186.13854980]
[42.71739960 198.22985840]
[33.84045410 210.32116699]
[32.58410263 226.67211914]
[17.68066025 233.51458740]
[4.46151114 223.80963135]
[6.52538395 207.54087830]
[21.74914169 201.44422913]
[30.62608719 189.35290527]
[39.50303268 177.26159668]
[48.37997818 165.17028809]
[42.88789749 149.68740845]
[47.76486969 133.82575989]
[61.27508926 123.90606689]
[78.20202637 124.00469971]
[86.92815399 111.80409241]
[83.60330963 97.17721558]
[70.46050262 89.94764709]
[57.31769943 82.71807861]
[44.17489624 75.48851013]
[31.03208923 68.25894165]
[17.88928413 61.02936935]
[4.74647903 53.79980087]
[-11.07420921 53.92783737]
[-18.49652290 41.01433563]
[-31.63932800 33.78476334]
[-44.78213501 26.55519485]
[-57.92493820 19.32562637]
[-71.06774139 12.09605694]
[-85.82525635 9.40984917]
[-100.67258453 11.54457188]
[-115.51990509 13.67929459]
[-130.36721802 15.81401730]
[-137.48916626 29.60015678]
[-151.36930847 36.53710938]
[-166.67045593 33.95747757]
[-177.50900269 22.85317802]
[-179.71731567 7.49404383]
[-172.44624329 -6.21402502]
[-158.49166870 -12.99999714]
[-143.21940613 -10.25452709]
[-132.50195312 0.96669549]
[-117.65462494 -1.16802704]
[-102.80730438 -3.30274963]
[-87.95998383 -5.43747234]
[-87.21616364 -12.90049648]
[-102.14221191 -14.38813114]
[-114.32492065 -23.13923073]
[-100.65457916 -29.31418037]
[-85.72853088 -27.82654572]
[-84.98471832 -35.28956985]
[-99.11862946 -40.31276321]
[-113.25254059 -45.33596039]
[-127.38645935 -50.35915375]
[-142.43376160 -44.79516220]
[-156.09065247 -53.21352768]
[-157.88073730 -69.15640259]
[-146.43080139 -80.39377594]
[-130.52426147 -78.30529785]
[-122.36325836 -64.49306488]
[-108.22934723 -59.46987152]
[-94.09543610 -54.44667816]
[-79.96151733 -49.42348480]
[-75.44831848 -55.41356277]
[-87.42832947 -64.44016266]
[-78.40152740 -76.42001343]
[-66.42192078 -67.39371490]
[-61.90872192 -73.38379669]
[-70.63484192 -85.58440399]
[-79.36096954 -97.78501129]
[-88.08708954 -109.98561096]
[-96.81320953 -122.18621826]
[-105.69015503 -134.27752686]
[-114.71655273 -146.25769043]
[-123.74295044 -158.23783875]
[-132.76934814 -170.21800232]
[-148.28115845 -169.81362915]
[-161.04905701 -178.63180542]
[-166.16352844 -193.28178406]
[-161.65795898 -208.13034058]
[-149.26483154 -217.46789551]
[-133.74954224 -217.70396423]
[-121.07805634 -208.74778748]
[-116.12281036 -194.04319763]
[-120.78919983 -179.24440002]
[-111.76280212 -167.26423645]
[-102.73639679 -155.28408813]
[-93.70999908 -143.30392456]
[-89.21465302 -141.76519775]
[-85.62702179 -137.40150452]
[-84.61260223 -130.91233826]
[-75.88648224 -118.71173859]
[-67.16036224 -106.51113129]
[-58.43423843 -94.31052399]
[-49.70811462 -82.10991669]
[-36.28458023 -46.29054642]
[-43.62928772 -16.16321754]
[-63.83817291 -1.04674840]
[-50.69536972 6.18282080]
[-37.55256271 13.41238976]
[-24.40975952 20.64196014]
[-11.26695347 27.87152863]
[3.61367345 27.22638702]
[11.97604847 40.65699387]
[25.11885452 47.88656616]
[38.26165771 55.11613464]
[51.40446472 62.34570312]
[64.54727173 69.57527161]
[77.69007111 76.80484009]
[90.83287811 84.03440857]
[92.91344452 81.83341217]
[95.45362091 79.91873169]
[98.41105652 78.37918854]
[101.72708893 77.29684448]
[107.87348175 63.61394119]
[114.01987457 49.93103790]
[120.16626740 36.24813461]
[126.31266022 22.56522942]
[132.45904541 8.88232517]
[138.60543823 -4.80057955]
[144.75183105 -18.48348427]
[142.55426025 -34.73472214]
[155.69317627 -44.54803848]
[170.65237427 -37.82833099]
[172.04312134 -21.48826408]
[158.43473816 -12.33709240]
[152.28834534 1.34581184]
[146.14195251 15.02871609]
[139.99555969 28.71162033]
[133.84916687 42.39452362]
[127.70278168 56.07743073]
[121.55638885 69.76033020]
[115.40999603 83.44323730]
[125.88891602 72.71047211]
[140.88066101 73.20809937]
[150.62478638 84.61213684]
[148.77732849 99.49793243]
[136.54109192 108.17401886]
[121.88288879 104.99205780]
[134.55180359 113.02317047]
[147.22071838 121.05427551]
[159.88961792 129.08538818]
[172.55853271 137.11650085]
[185.22743225 145.14761353]
[197.94596863 153.09991455]
[210.71362305 160.97308350]
[222.53950500 161.75085449]
[228.70834351 170.29719543]
[242.50334167 176.18768311]
[256.29837036 182.07817078]
[270.09335327 187.96864319]
[283.88836670 193.85913086]
[297.68338013 199.74960327]
[311.47839355 205.64009094]
[316.60757446 205.02241516]
[321.02774048 206.29103088]
[324.14300537 208.86593628]
[325.67098999 212.01542664]
[339.23703003 218.41560364]
[352.80310059 224.81576538]
[366.36914062 231.21594238]
[405.10809326 204.67910767]
[419.83111572 207.54835510]
[434.55413818 210.41760254]
[449.27716064 213.28684998]
[464.30255127 208.33215332]
[475.31478882 218.36109924]
[490.03781128 221.23034668]
[504.76083374 224.09957886]
[519.51837158 226.78579712]
[534.30810547 229.28854370]
[549.09783936 231.79130554]
[560.09063721 220.83967590]
[575.42633057 218.47430420]
[589.20812988 225.60470581]
[596.13653564 239.48910522]
[593.54748535 254.78866577]
[582.43652344 265.62039185]
[567.07604980 267.81927490]
[553.37243652 260.53976440]
[546.59503174 246.58103943]
[531.80529785 244.07827759]
[517.01562500 241.57553101]
[512.69213867 243.54615784]
[507.08718872 242.84054565]
[501.89160156 238.82260132]
[487.16857910 235.95336914]
[472.44552612 233.08412170]
[458.47326660 238.24403381]
[446.40792847 228.00987244]
[431.68490601 225.14062500]
[416.96188354 222.27137756]
[402.23886108 219.40213013]
[395.50347900 232.80567932]
[388.76870728 246.20802307]
[399.85754395 256.30941772]
[410.94635010 266.41079712]
[427.07397461 269.38275146]
[432.30825806 284.92413330]
[421.26464844 297.04727173]
[405.30386353 293.28094482]
[400.84497070 277.49960327]
[389.75616455 267.39822388]
[378.66732788 257.29684448]
[382.99490356 271.65902710]
[379.24725342 286.18331909]
[368.51092529 296.65859985]
[353.89880371 300.04769897]
[339.64749146 295.36798096]
[329.88891602 283.97631836]
[327.45251465 269.17550659]
[333.04461670 255.25686646]
[345.04394531 246.25595093]
[359.96896362 244.78199768]
[346.40292358 238.38182068]
[332.83685303 231.98165894]
[319.27081299 225.58148193]
[305.58789062 219.43510437]
[291.79290771 213.54461670]
[277.99789429 207.65412903]
[264.20288086 201.76365662]
[250.40786743 195.87316895]
[236.61286926 189.98269653]
[222.81785583 184.09220886]
[231.08531189 196.60816956]
[233.75222778 211.36918640]
[230.38708496 225.98683167]
[221.53437805 238.09590149]
[208.62652588 245.73706055]
[193.75209045 247.67395020]
[179.31787109 243.59313965]
[167.65937805 234.15493774]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 166]
[6 165]
[8 164]
[9 163]
[10 162]
[11 161]
[12 160]
[13 159]
[14 36]
[15 35]
[20 31]
[21 30]
[22 29]
[23 28]
[37 130]
[38 129]
[39 128]
[40 127]
[41 126]
[42 125]
[43 124]
[45 122]
[46 121]
[47 120]
[48 119]
[49 118]
[50 65]
[51 64]
[52 63]
[53 62]
[71 83]
[72 82]
[73 81]
[74 80]
[88 115]
[89 114]
[90 113]
[91 112]
[92 111]
[93 108]
[94 107]
[95 106]
[96 105]
[134 153]
[135 152]
[136 151]
[137 150]
[138 149]
[139 148]
[140 147]
[141 146]
[168 244]
[169 243]
[170 242]
[171 241]
[172 240]
[173 239]
[174 238]
[178 237]
[179 236]
[180 235]
[181 234]
[182 213]
[183 212]
[184 211]
[185 210]
[187 208]
[188 207]
[189 206]
[190 203]
[191 202]
[192 201]
[215 224]
[216 223]
[217 222]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
