%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:18:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUGGGCGCGGCCGCAGCAGUCGCAGCGGGGCCAUCUUCGGCGGGCGAGUGGGCUCGGCCUGUGCAACCCGCACCUGCGUCCCUCGCCCGGCCCGAUGGCGCCGCGGCCGCUGGGCCCCUUGGUGCUGGCGCUGGGCGGCGCCGCGGCGGUGCUGGGCUCGGUGCUCUUCAUCCUCUGGAAGACCUACUUCGGCC\
) } def
/len { sequence length } bind def

/coor [
[233.99150085 441.76904297]
[229.06150818 427.60235596]
[224.13153076 413.43566895]
[219.20153809 399.26898193]
[214.27154541 385.10226440]
[209.00411987 371.05755615]
[203.40228271 357.14285278]
[197.80043030 343.22811890]
[192.19859314 329.31341553]
[186.59675598 315.39868164]
[180.77372742 301.57507324]
[174.73100281 287.84606934]
[168.68827820 274.11706543]
[162.64556885 260.38806152]
[157.06710815 255.52684021]
[156.61788940 246.39161682]
[150.79486084 232.56799316]
[144.97184753 218.74438477]
[139.14881897 204.92076111]
[133.32579041 191.09713745]
[127.28307343 177.36813354]
[121.02219391 163.73724365]
[114.76131439 150.10635376]
[108.50042725 136.47544861]
[102.23954773 122.84455109]
[82.82797241 115.23189545]
[77.58586884 95.05066681]
[64.79939270 87.20809174]
[52.01291656 79.36550903]
[39.22644043 71.52293396]
[23.41737556 70.90319824]
[16.61360168 57.65336990]
[3.82712555 49.81079102]
[-8.95935154 41.96821594]
[-21.74582863 34.12563705]
[-34.53230667 26.28306007]
[-47.31878281 18.44048309]
[-57.74632645 21.58561897]
[-67.97112274 18.52929306]
[-74.67980194 10.51430702]
[-75.83815765 0.34769824]
[-88.36803436 -7.89863729]
[-100.89791870 -16.14497185]
[-113.49315643 -24.29113770]
[-126.15294647 -32.33661652]
[-138.81272888 -40.38209534]
[-151.47251892 -48.42757416]
[-164.13230896 -56.47305679]
[-176.79209900 -64.51853180]
[-189.45188904 -72.56401062]
[-198.38447571 -74.52946472]
[-202.24798584 -80.84008789]
[-214.77786255 -89.08641815]
[-227.30775452 -97.33275604]
[-239.83763123 -105.57909393]
[-255.61889648 -106.70265198]
[-261.99667358 -120.16270447]
[-274.52655029 -128.40904236]
[-287.05645752 -136.65538025]
[-292.29058838 -136.95881653]
[-296.46270752 -139.03793335]
[-299.07299805 -142.18792725]
[-299.97528076 -145.60775757]
[-312.09646606 -154.44387817]
[-324.21765137 -163.27998352]
[-336.33883667 -172.11610413]
[-352.34722900 -171.06222534]
[-363.04531860 -183.01756287]
[-360.22644043 -198.81103516]
[-346.05300903 -206.32722473]
[-331.39764404 -199.80035400]
[-327.50271606 -184.23728943]
[-315.38153076 -175.40116882]
[-303.26034546 -166.56504822]
[-291.13916016 -157.72892761]
[-278.81011963 -149.18525696]
[-266.28024292 -140.93891907]
[-253.75035095 -132.69258118]
[-238.86531067 -132.15885925]
[-231.59129333 -118.10897827]
[-219.06141663 -109.86264038]
[-206.53152466 -101.61630249]
[-194.00164795 -93.36997223]
[-181.40641785 -85.22380066]
[-168.74662781 -77.17832184]
[-156.08683777 -69.13284302]
[-143.42704773 -61.08736420]
[-130.76725769 -53.04188538]
[-118.10746765 -44.99640656]
[-105.44767761 -36.95092773]
[-98.10767365 -36.01550674]
[-92.65158844 -28.67485428]
[-80.12170410 -20.42852020]
[-67.59181976 -12.18218422]
[-48.26462555 -12.47944260]
[-39.47620392 5.65400743]
[-26.68972778 13.49658394]
[-13.90325165 21.33916092]
[-1.11677456 29.18173790]
[11.66970253 37.02431488]
[24.45617867 44.86688995]
[39.35066986 44.92567825]
[47.06901550 58.73645782]
[59.85549164 66.57903290]
[72.64196777 74.42161560]
[85.42844391 82.26419067]
[97.80703735 77.15093231]
[110.93219757 79.81643677]
[121.99360657 69.68503571]
[133.05500793 59.55363083]
[144.11640930 49.42222977]
[155.17781067 39.29082489]
[166.23922729 29.15942192]
[171.18986511 14.13271999]
[185.80126953 11.24207211]
[196.86268616 1.11066914]
[207.92408752 -9.02073383]
[212.87472534 -24.04743576]
[227.48612976 -26.93808365]
[238.54754639 -37.06948853]
[236.66062927 -52.47140884]
[244.21653748 -66.02455902]
[258.30987549 -72.51747131]
[273.52142334 -69.45349884]
[284.00207520 -58.01078796]
[285.72180176 -42.58930206]
[278.01928711 -29.11891556]
[263.85638428 -22.77926826]
[248.67893982 -26.00808334]
[237.61753845 -15.87667942]
[233.45808411 -1.57464373]
[218.05548096 2.04066992]
[206.99407959 12.17207336]
[195.93267822 22.30347633]
[191.77322388 36.60551071]
[176.37062073 40.22082520]
[165.30921936 50.35223007]
[154.24781799 60.48363113]
[143.18641663 70.61503601]
[132.12501526 80.74643707]
[121.06360626 90.87784576]
[122.82842255 97.60164642]
[122.49951935 104.54541016]
[120.10704803 111.07229614]
[115.87044525 116.58367157]
[122.13132477 130.21456909]
[128.39221191 143.84545898]
[134.65309143 157.47636414]
[140.91397095 171.10725403]
[146.09266663 175.24729919]
[148.09391785 180.58184814]
[147.14941406 185.27412415]
[152.97244263 199.09773254]
[158.79545593 212.92135620]
[164.61848450 226.74497986]
[170.44151306 240.56858826]
[176.37457275 254.34533691]
[182.41728210 268.07434082]
[188.46000671 281.80334473]
[194.50273132 295.53234863]
[199.61474609 299.75442505]
[201.53068542 305.12023926]
[200.51145935 309.79684448]
[206.11331177 323.71154785]
[211.71514893 337.62628174]
[217.31700134 351.54098511]
[222.91883850 365.45571899]
[227.04815674 368.68637085]
[229.29313660 372.77160645]
[229.64447021 376.84750366]
[228.43824768 380.17230225]
[233.36822510 394.33898926]
[238.29821777 408.50567627]
[243.22821045 422.67236328]
[248.15818787 436.83908081]
[264.42526245 439.77041626]
[276.92498779 450.44161987]
[282.30975342 465.87033081]
[279.20028687 481.81753540]
[268.53756714 493.95205688]
[273.69284058 508.03833008]
[278.84811401 522.12463379]
[284.00338745 536.21087646]
[297.89138794 544.24224854]
[300.12866211 560.12854004]
[288.99896240 571.68316650]
[273.04000854 570.04235840]
[264.49420166 556.46490479]
[269.91708374 541.36614990]
[264.76184082 527.27990723]
[259.60656738 513.19360352]
[254.45129395 499.10733032]
[240.86595154 497.64984131]
[229.17913818 490.44445801]
[221.70333862 478.84994507]
[219.94656372 465.09985352]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 175]
[2 174]
[3 173]
[4 172]
[5 171]
[6 167]
[7 166]
[8 165]
[9 164]
[10 163]
[11 160]
[12 159]
[13 158]
[14 157]
[16 156]
[17 155]
[18 154]
[19 153]
[20 152]
[21 149]
[22 148]
[23 147]
[24 146]
[25 145]
[27 106]
[28 105]
[29 104]
[30 103]
[32 101]
[33 100]
[34 99]
[35 98]
[36 97]
[37 96]
[41 94]
[42 93]
[43 92]
[44 90]
[45 89]
[46 88]
[47 87]
[48 86]
[49 85]
[50 84]
[52 83]
[53 82]
[54 81]
[55 80]
[57 78]
[58 77]
[59 76]
[63 75]
[64 74]
[65 73]
[66 72]
[108 141]
[109 140]
[110 139]
[111 138]
[112 137]
[113 136]
[115 134]
[116 133]
[117 132]
[119 130]
[120 129]
[180 192]
[181 191]
[182 190]
[183 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
