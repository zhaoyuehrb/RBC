%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:29:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCCGCCAGGUGCUCCUGGAGUGCAGCGCCUAUCGCCGGGGCGUGUGGGGGCCACACCGAGCACCAGCUUCUCCGACGCCGGGAAGCCGCUGUCGCCGCCGCUACCUCUCCCUGUUGCCGCCGCCUCAGAUCUCUUCAUGCCGCUGUAAGCUCGGAGGCCAAGGAUGCGGAGUAGGCUUCCCCCAGCGCUUGCCGCCCUGGGCGCGGCCCUGCUCCUGUCUUCCAUUGAGGCAGAAGUUGACCCACCUUCAGA\
CUUGAAUUUUA\
) } def
/len { sequence length } bind def

/coor [
[77.60887909 132.79714966]
[63.82788467 138.72032166]
[50.04688644 144.64350891]
[36.26588821 150.56669617]
[22.48489189 156.48988342]
[12.86151314 169.04779053]
[-1.88675082 166.96501160]
[-15.66774750 172.88819885]
[-20.78444672 188.28363037]
[-34.63943100 196.12448120]
[-49.87925339 192.71693420]
[-61.79296875 201.83084106]
[-73.70668793 210.94474792]
[-85.62040710 220.05865479]
[-97.53412628 229.17257690]
[-109.44783783 238.28648376]
[-121.36155701 247.40039062]
[-124.22507477 253.29856873]
[-128.92240906 256.42065430]
[-133.66453552 256.58465576]
[-145.78941345 265.41567993]
[-152.38920593 279.79461670]
[-167.23220825 281.03338623]
[-179.35708618 289.86444092]
[-191.48194885 298.69546509]
[-194.48345947 304.52462769]
[-199.25296021 307.53533936]
[-203.99763489 307.58770752]
[-216.32695007 316.13101196]
[-223.26325989 330.35064697]
[-238.13130188 331.23980713]
[-250.46060181 339.78311157]
[-262.78991699 348.32641602]
[-275.11923218 356.86972046]
[-287.44854736 365.41302490]
[-299.72738647 374.02871704]
[-311.95532227 382.71649170]
[-324.18325806 391.40426636]
[-330.51599121 406.53134155]
[-346.81491089 408.34188843]
[-356.31304932 394.97335815]
[-349.23956299 380.17816162]
[-332.87103271 379.17633057]
[-320.64309692 370.48855591]
[-308.41516113 361.80078125]
[-304.79510498 355.38687134]
[-295.99185181 353.08370972]
[-283.66253662 344.54040527]
[-271.33322144 335.99710083]
[-259.00390625 327.45379639]
[-246.67460632 318.91049194]
[-240.62017822 305.30191040]
[-224.87025452 303.80169678]
[-212.54093933 295.25839233]
[-200.31300354 286.57061768]
[-188.18812561 277.73956299]
[-176.06326294 268.90850830]
[-170.33071899 255.16123962]
[-154.62046814 253.29081726]
[-142.49559021 244.45977783]
[-130.47546387 235.48666382]
[-118.56175232 226.37275696]
[-106.64803314 217.25885010]
[-94.73431396 208.14494324]
[-82.82059479 199.03103638]
[-70.90687561 189.91712952]
[-58.99316025 180.80322266]
[-59.57987213 178.40347290]
[-59.88779831 175.95230103]
[-74.26883698 171.68783569]
[-88.64987946 167.42338562]
[-103.03092194 163.15892029]
[-117.41196442 158.89445496]
[-126.49413300 159.45642090]
[-131.93658447 154.49429321]
[-146.26644897 150.06092834]
[-160.59632874 145.62754822]
[-176.45870972 149.78890991]
[-187.79983521 137.94361877]
[-182.95294189 122.27710724]
[-166.90408325 118.90573883]
[-156.16294861 131.29768372]
[-141.83308411 135.73104858]
[-127.50321198 140.16442871]
[-113.14750671 144.51341248]
[-98.76646423 148.77787781]
[-84.38542175 153.04234314]
[-70.00437927 157.30679321]
[-55.62333679 161.57125854]
[-39.48341370 152.36189270]
[-21.59093285 159.10720825]
[-7.80993557 153.18402100]
[0.82773364 141.04977417]
[16.56170654 142.70889282]
[30.34270287 136.78570557]
[44.12369919 130.86251831]
[57.90469742 124.93933105]
[71.68569183 119.01614380]
[69.67391968 97.29586792]
[80.75710297 81.36751556]
[73.33365631 68.33323669]
[59.78065872 60.17071152]
[60.20532227 45.28215790]
[52.78187561 32.24787903]
[39.22887802 24.08535576]
[39.65353775 9.19680500]
[32.23009109 -3.83747435]
[16.79354477 -5.41630363]
[5.25561571 -15.79203510]
[2.05287004 -30.97498703]
[8.41683006 -45.12700653]
[21.90042305 -52.80635071]
[37.31893158 -51.06015778]
[48.74362564 -40.55987167]
[51.78147888 -25.34307098]
[45.26436996 -11.26092052]
[52.68781662 1.77335858]
[65.70983887 9.00358391]
[65.81615448 24.82443428]
[73.23960114 37.85871124]
[86.26162720 45.08893967]
[86.36793518 60.90978622]
[93.79138184 73.94406891]
[107.46381378 74.27549744]
[119.19038391 81.31343842]
[132.43736267 74.27655792]
[145.68434143 67.23967743]
[158.93130493 60.20280457]
[172.17828369 53.16592407]
[185.42526245 46.12904739]
[193.37904358 33.41144180]
[193.90841675 18.42078781]
[184.06767273 5.75037479]
[187.97808838 -9.80880737]
[202.63993835 -16.32108498]
[216.80589294 -8.79079723]
[219.60905457 7.00546408]
[208.89906311 18.95015907]
[208.36968994 33.94081497]
[215.67314148 35.64657211]
[230.28004456 39.05808640]
[237.58349609 40.76384354]
[243.74897766 27.08952904]
[249.91444397 13.41521454]
[248.53326416 -2.34558916]
[260.81808472 -10.76776218]
[266.98355103 -24.44207764]
[273.14901733 -38.11639404]
[267.32107544 -52.80688477]
[273.66445923 -67.28227997]
[288.41574097 -72.95458984]
[302.82327271 -66.45852661]
[308.33929443 -51.64809036]
[301.69125366 -37.31005478]
[286.82333374 -31.95091820]
[280.65786743 -18.27660179]
[274.49237061 -4.60228634]
[276.31454468 10.18043804]
[263.58877563 19.58069038]
[257.42327881 33.25500488]
[251.25781250 46.92932129]
[255.67333984 52.99175644]
[270.58926392 51.40597153]
[264.50439453 65.11663055]
[268.91992188 71.17906952]
[283.82629395 69.50585938]
[298.73269653 67.83265686]
[313.31704712 56.56515503]
[329.10864258 64.25282288]
[343.99432373 62.40434265]
[358.86886597 60.46832657]
[373.73175049 58.44483566]
[388.59463501 56.42134094]
[403.45751953 54.39785004]
[418.32040405 52.37435532]
[433.18331909 50.35086441]
[448.04620361 48.32736969]
[462.90908813 46.30387878]
[477.75982666 44.19298172]
[492.59786987 41.99475098]
[499.84466553 28.40100098]
[513.54620361 21.75859451]
[528.35656738 24.42626572]
[538.63317871 35.17470169]
[553.47125244 32.97647476]
[568.30932617 30.77824402]
[583.14733887 28.58001518]
[597.98541260 26.38178635]
[610.50268555 16.70562553]
[624.22644043 22.49422646]
[639.06451416 20.29599762]
[649.73999023 8.32045650]
[665.75036621 9.34409428]
[674.81384277 22.58166313]
[669.97766113 37.87843323]
[654.95178223 43.50003052]
[641.26275635 35.13404846]
[626.42468262 37.33227921]
[614.96868896 46.85120773]
[600.18365479 41.21983719]
[585.34558105 43.41806793]
[570.50756836 45.61629868]
[555.66949463 47.81452560]
[540.83142090 50.01275635]
[534.11254883 63.27904892]
[520.71173096 70.12615204]
[505.67291260 67.74157715]
[494.79608154 56.83280182]
[479.95803833 59.03103256]
[473.82308960 63.10598373]
[464.93258667 61.16676712]
[450.06970215 63.19026184]
[435.20678711 65.21375275]
[420.34390259 67.23724365]
[405.48101807 69.26073456]
[390.61813354 71.28423309]
[375.75524902 73.30772400]
[360.89236450 75.33121490]
[354.70986938 79.33370209]
[345.84280396 77.29001617]
[330.95712280 79.13848877]
[323.29617310 88.47226715]
[310.93420410 90.15135193]
[300.40588379 82.73904419]
[285.49951172 84.41224670]
[270.59310913 86.08545685]
[230.06027222 96.87264252]
[200.42221069 82.78620148]
[192.46214294 59.37602234]
[179.21516418 66.41290283]
[165.96818542 73.44977570]
[152.72122192 80.48665619]
[139.47424316 87.52353668]
[126.22726440 94.56040955]
[126.64203644 114.73719788]
[111.87995148 131.97155762]
[119.60803986 144.82754517]
[127.33613586 157.68354797]
[135.06422424 170.53953552]
[148.80554199 178.38090515]
[148.73132324 193.27531433]
[156.45942688 206.13131714]
[169.80195618 216.59138489]
[163.44424438 232.30812073]
[146.58172607 230.54969788]
[143.60342407 213.85940552]
[135.87533569 201.00341797]
[122.68678284 194.08160400]
[122.20822906 178.26763916]
[114.48014069 165.41163635]
[106.75204468 152.55564880]
[99.02395630 139.69964600]
[99.64250183 154.68688965]
[100.26104736 169.67413330]
[106.25355530 183.42512512]
[106.16281891 198.42485046]
[100.00440216 212.10235596]
[88.83386230 222.11329651]
[74.56581879 226.74180603]
[59.64583588 225.19454956]
[46.63119125 217.73672485]
[37.75260544 205.64662170]
[34.53186798 190.99647522]
[37.52101517 176.29731750]
[46.20770645 164.06860352]
[59.10040665 156.40724182]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 98]
[2 97]
[3 96]
[4 95]
[5 94]
[7 92]
[8 91]
[11 67]
[12 66]
[13 65]
[14 64]
[15 63]
[16 62]
[17 61]
[20 60]
[21 59]
[23 57]
[24 56]
[25 55]
[28 54]
[29 53]
[31 51]
[32 50]
[33 49]
[34 48]
[35 47]
[36 45]
[37 44]
[38 43]
[69 89]
[70 88]
[71 87]
[72 86]
[73 85]
[75 84]
[76 83]
[77 82]
[100 123]
[101 122]
[103 120]
[104 119]
[106 117]
[107 116]
[125 234]
[126 233]
[127 232]
[128 231]
[129 230]
[130 229]
[131 139]
[132 138]
[142 161]
[143 160]
[144 159]
[146 157]
[147 156]
[148 155]
[165 226]
[166 225]
[167 224]
[169 221]
[170 220]
[171 218]
[172 217]
[173 216]
[174 215]
[175 214]
[176 213]
[177 212]
[178 211]
[179 209]
[180 208]
[184 204]
[185 203]
[186 202]
[187 201]
[188 200]
[190 198]
[191 197]
[236 252]
[237 251]
[238 250]
[239 249]
[241 247]
[242 246]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
