%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:21:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGACCCAGAACCUCGGACGAGCGGCGGGCACCCGCGAGCGGACGGCGGCCGCGUAGUGAGCAAUGGCCUGAGCCCCCAUGGCUGCCCCUCAGGACCUGGACAUCGCUGUGUGGCUGGCCACGGUGCACCUGGAGCAGUAUGCAGACACGUUCCGACGGCAUGGCCUGGCUACAGCAG\
) } def
/len { sequence length } bind def

/coor [
[71.58929443 222.86447144]
[66.43479919 208.58876038]
[66.78926849 193.41514587]
[72.60475159 179.39570618]
[83.09475708 168.42646790]
[96.84060669 161.99093628]
[95.78842163 147.02787781]
[94.73623657 132.06483459]
[93.68405914 117.10178375]
[87.07158661 113.56267548]
[79.99317932 126.78750610]
[66.76845551 119.70889282]
[73.84664917 106.48447418]
[67.23417664 102.94537354]
[54.20014191 110.36924744]
[41.16610718 117.79312134]
[36.88412476 132.76985168]
[23.56000328 140.11303711]
[9.30837059 135.93852234]
[-3.72566509 143.36239624]
[-8.00764847 158.33912659]
[-21.33176994 165.68231201]
[-35.58340073 161.50781250]
[-48.61743927 168.93168640]
[-54.54710770 175.91893005]
[-61.94600677 176.36917114]
[-75.10832214 183.56315613]
[-88.27063751 190.75714111]
[-96.33350372 205.03727722]
[-112.73226166 204.92411804]
[-120.59727478 190.53405762]
[-111.83769226 176.67037964]
[-95.46462250 177.59483337]
[-82.30230713 170.40084839]
[-69.13999176 163.20686340]
[-56.04131317 155.89764404]
[-43.00727844 148.47377014]
[-39.32810593 134.08630371]
[-26.21549606 126.37175751]
[-11.14953995 130.32836914]
[1.88449550 122.90448761]
[5.56366682 108.51702118]
[18.67627716 100.80248260]
[33.74223328 104.75908661]
[46.77626801 97.33521271]
[59.81030273 89.91133118]
[65.58094025 76.06576538]
[61.67747116 61.58257294]
[57.77399826 47.09938049]
[53.87052536 32.61618805]
[49.96705246 18.13299370]
[46.06358337 3.64979959]
[42.16011047 -10.83339405]
[38.25663757 -25.31658745]
[34.35316467 -39.79978180]
[30.44969177 -54.28297424]
[26.54621887 -68.76616669]
[22.64274597 -83.24936676]
[18.73927498 -97.73255920]
[14.83580208 -112.21575165]
[-1.16640627 -115.08249664]
[-14.27372169 -124.60093689]
[-21.89677620 -138.82807922]
[-22.55695915 -154.89709473]
[-16.17296028 -169.59497070]
[-4.06690407 -180.00491333]
[-8.22395420 -194.41735840]
[-12.50731754 -208.79278564]
[-16.91666412 -223.13006592]
[-21.32601166 -237.46734619]
[-25.73535728 -251.80464172]
[-30.14470482 -266.14190674]
[-35.30248260 -280.22726440]
[-41.19440079 -294.02166748]
[-47.08631897 -307.81607056]
[-61.37905502 -315.10284424]
[-64.45210266 -330.84881592]
[-53.94807434 -342.97503662]
[-37.92476654 -342.17929077]
[-28.67389107 -329.07202148]
[-33.29192352 -313.70797729]
[-27.40000725 -299.91357422]
[-21.50808907 -286.11920166]
[-14.75666618 -299.51391602]
[-0.56294823 -304.36553955]
[12.97495747 -297.90603638]
[18.13311195 -283.82083130]
[11.96857452 -270.14608765]
[-2.00153041 -264.68383789]
[-15.80742168 -270.55126953]
[-11.39807510 -256.21398926]
[-6.98872852 -241.87669373]
[-2.57938170 -227.53941345]
[1.82996500 -213.20213318]
[6.81603670 -207.71710205]
[6.18850374 -198.57441711]
[10.34555340 -184.16195679]
[24.13580894 -182.51370239]
[36.29199982 -175.70774841]
[44.95904160 -164.74481201]
[48.79989624 -151.26277161]
[47.20172119 -137.29206848]
[40.37342072 -124.94986725]
[29.31899452 -116.11922455]
[33.22246933 -101.63603210]
[37.12594223 -87.15283203]
[41.02941132 -72.66963959]
[44.93288422 -58.18644714]
[48.83635712 -43.70325470]
[52.73983002 -29.22006035]
[56.64330292 -14.73686695]
[60.54677582 -0.25367299]
[64.45024872 14.22952080]
[68.35372162 28.71271515]
[72.25719452 43.19590759]
[76.16066742 57.67910385]
[80.06414032 72.16229248]
[123.96086884 91.94702911]
[138.47776794 95.72325897]
[152.99465942 99.49948120]
[167.51153564 103.27571106]
[172.59831238 101.86776733]
[177.24476624 102.50691986]
[180.73954773 104.67662811]
[182.68276978 107.65161133]
[196.98080444 112.18660736]
[211.27883911 116.72159576]
[223.75523376 107.68578339]
[238.98190308 107.72856140]
[251.12011719 116.62393188]
[255.63876343 130.79148865]
[269.93679810 135.32647705]
[284.23483276 139.86148071]
[298.53286743 144.39646912]
[312.83093262 148.93145752]
[327.12896729 153.46644592]
[336.28500366 153.07978821]
[341.63687134 158.20852661]
[355.85311890 162.99374390]
[368.42355347 153.89630127]
[383.94052124 153.95869446]
[396.43737793 163.15695190]
[401.10888672 177.95414734]
[396.15869141 192.66044617]
[383.49029541 201.62098694]
[367.97494507 201.39025879]
[355.57858276 192.05699158]
[351.06790161 177.20999146]
[336.85165405 172.42477417]
[322.59396362 167.76448059]
[308.29592896 163.22949219]
[293.99789429 158.69450378]
[279.69985962 154.15951538]
[265.40182495 149.62452698]
[251.10377502 145.08952332]
[239.24545288 154.06271362]
[224.19920349 154.33583069]
[211.73147583 145.59460449]
[206.74385071 131.01963806]
[192.44581604 126.48464203]
[178.14776611 121.94965363]
[163.73532104 117.79260254]
[149.21842957 114.01637268]
[134.70153809 110.24014282]
[120.18464661 106.46392059]
[108.64710999 116.04959869]
[109.69928741 131.01264954]
[110.75147247 145.97570801]
[111.80365753 160.93875122]
[126.31485748 165.38728333]
[138.23672485 174.78054810]
[145.95693970 187.84817505]
[148.43139648 202.82287598]
[145.32545471 217.67942810]
[137.05914307 230.40863037]
[124.75043488 239.28895569]
[110.06398010 243.11941528]
[94.98599243 241.38195801]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 169]
[7 168]
[8 167]
[9 166]
[14 46]
[15 45]
[16 44]
[19 41]
[20 40]
[23 37]
[24 36]
[26 35]
[27 34]
[28 33]
[47 117]
[48 116]
[49 115]
[50 114]
[51 113]
[52 112]
[53 111]
[54 110]
[55 109]
[56 108]
[57 107]
[58 106]
[59 105]
[60 104]
[66 97]
[67 96]
[68 94]
[69 93]
[70 92]
[71 91]
[72 90]
[73 83]
[74 82]
[75 81]
[118 165]
[119 164]
[120 163]
[121 162]
[125 161]
[126 160]
[127 159]
[131 155]
[132 154]
[133 153]
[134 152]
[135 151]
[136 150]
[138 149]
[139 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
