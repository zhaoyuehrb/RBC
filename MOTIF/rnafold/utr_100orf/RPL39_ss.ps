%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:45:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCUUCUAAGCUCGUUCUUCCGCCAGCUUCCCUCCUCUUCCUUUCUCCGCCAUCGUGGUGUGUUCUUGACUCCGCUGCUCGCCAUGUCUUCUCACAAGACUUUCAGGAUUAAGCGAUUCCUGGCCAAGAAACAAAAGCAAAAUCGUCCCAUUCCCCAGUGGAUUCGGAUGAAAACUGGAAAUA\
) } def
/len { sequence length } bind def

/coor [
[152.21739197 364.71444702]
[146.04473877 376.36532593]
[137.25695801 386.18084717]
[126.37417603 393.58758545]
[114.03872681 398.15441895]
[100.97721100 399.61776733]
[87.95769501 397.89660645]
[75.74459076 393.09704590]
[66.88642120 405.20211792]
[58.02825546 417.30718994]
[49.17008972 429.41229248]
[40.31192398 441.51736450]
[38.40634918 457.22338867]
[24.64628792 462.92514038]
[15.78812218 475.03021240]
[18.45451546 490.60794067]
[9.25674629 503.46005249]
[-6.34831095 505.96160889]
[-19.10245323 496.62847900]
[-21.43887329 480.99783325]
[-11.97141647 468.34307861]
[3.68304491 466.17205811]
[12.54121113 454.06698608]
[13.81318951 439.22677612]
[28.20684624 432.65917969]
[37.06501389 420.55410767]
[45.92317963 408.44903564]
[54.78134537 396.34396362]
[63.63951111 384.23889160]
[53.47735596 370.78964233]
[47.93831635 354.84991455]
[47.56975555 337.96133423]
[52.41839981 321.76086426]
[62.02476501 307.82217407]
[75.46665955 297.50268555]
[91.44771576 291.81155396]
[108.42240143 291.31085205]
[124.74549103 296.06008911]
[132.97227478 283.51736450]
[141.19905090 270.97463989]
[149.42582703 258.43191528]
[152.35218811 243.72012329]
[149.55152893 228.98390198]
[146.75086975 214.24766541]
[143.95021057 199.51144409]
[141.14955139 184.77522278]
[128.73008728 176.63320923]
[125.67990112 161.72846985]
[134.30419922 148.75700378]
[131.50355530 134.02078247]
[128.70289612 119.28455353]
[110.40685272 132.32196045]
[88.37599182 131.23994446]
[72.06156158 117.00921631]
[68.14868164 96.13238525]
[57.91038513 85.16984558]
[47.67208862 74.20730591]
[37.43378830 63.24476624]
[27.19549370 52.28222656]
[16.95719528 41.31968689]
[1.88314736 36.51514435]
[-1.14919484 21.93247604]
[-11.38749218 10.96993637]
[-25.76912498 15.97878361]
[-40.94413757 14.69858646]
[-54.28336334 7.35114717]
[-63.47570801 -4.79054546]
[-66.92853546 -19.62286949]
[-64.04363251 -34.57603836]
[-55.32081223 -47.05931854]
[-42.27136612 -54.90991211]
[-27.15618515 -56.76765442]
[-12.59406757 -52.31068039]
[-1.10798788 -42.31118774]
[5.31202126 -28.50164986]
[5.55365467 -13.27464962]
[-0.42495248 0.73163944]
[9.81334496 11.69417858]
[24.15508080 15.71460819]
[27.91973495 31.08138847]
[38.15803146 42.04393005]
[48.39632797 53.00646973]
[58.63462830 63.96900940]
[68.87292480 74.93154907]
[79.11122131 85.89408875]
[93.15731049 80.63031769]
[93.66943359 65.63906097]
[94.18154907 50.64780426]
[94.69366455 35.65655136]
[95.20578003 20.66529465]
[85.35046387 8.00621700]
[89.24297333 -7.55745506]
[103.89731598 -14.08660507]
[118.07192993 -6.57262850]
[120.89326477 9.22039604]
[110.19703674 21.17741013]
[109.68492126 36.16866684]
[109.17280579 51.15991974]
[108.66068268 66.15117645]
[108.14856720 81.14243317]
[115.12565613 83.89383698]
[120.62870026 69.93975067]
[134.58270264 75.44303131]
[129.07983398 89.39665222]
[136.05691528 92.14805603]
[145.91497803 80.84236145]
[155.77302551 69.53666687]
[165.63108826 58.23097229]
[161.23200989 43.44409561]
[165.54760742 28.63264275]
[177.20077515 18.52289009]
[192.47305298 16.34082603]
[206.49108887 22.78273582]
[214.78178406 35.79303360]
[214.69961548 51.22018051]
[206.27079773 64.14142609]
[192.18493652 70.43364716]
[176.93678284 68.08902740]
[167.07873535 79.39472198]
[157.22067261 90.70041656]
[147.36260986 102.00611115]
[143.43911743 116.48389435]
[146.23977661 131.22012329]
[149.04043579 145.95634460]
[161.82206726 154.85957336]
[164.45240784 169.84408569]
[155.88578796 181.97456360]
[158.68643188 196.71078491]
[161.48709106 211.44702148]
[164.28775024 226.18324280]
[167.08840942 240.91946411]
[171.69552612 226.64450073]
[172.33787537 211.65826416]
[179.50953674 198.48377991]
[191.74705505 189.80947876]
[206.55316162 187.40550232]
[220.90646362 191.76239014]
[231.87797546 201.99107361]
[237.22880554 216.00424194]
[235.86701965 230.94229126]
[228.07052612 243.75692749]
[215.43011475 251.83317566]
[200.59588623 249.60929871]
[212.54797363 258.67285156]
[224.50004578 267.73638916]
[236.45211792 276.79992676]
[248.40419006 285.86346436]
[260.35626221 294.92703247]
[275.13903809 290.59384155]
[289.47122192 295.73599243]
[297.92733765 308.18420410]
[297.43783569 323.04684448]
[309.38989258 332.11038208]
[321.34197998 341.17395020]
[337.36743164 340.42266846]
[347.83773804 352.57800293]
[344.72097778 368.31539917]
[330.40808105 375.56246948]
[315.87863159 368.75988770]
[312.27844238 353.12600708]
[300.32635498 344.06246948]
[288.37426758 334.99893188]
[274.19485474 339.48016357]
[259.92681885 334.69613647]
[251.10856628 322.28274536]
[251.29272461 306.87908936]
[239.34065247 297.81555176]
[227.38858032 288.75201416]
[215.43649292 279.68844604]
[203.48442078 270.62490845]
[191.53234863 261.56137085]
[184.14140320 262.83569336]
[191.13301086 276.10662842]
[180.67199707 286.85684204]
[167.21537781 280.22967529]
[169.35951233 265.38433838]
[161.96855164 266.65869141]
[153.74177551 279.20141602]
[145.51499939 291.74414062]
[137.28822327 304.28686523]
[146.09429932 314.17013550]
[152.25865173 325.87268066]
[155.42350769 338.70452881]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 29]
[9 28]
[10 27]
[11 26]
[12 25]
[14 23]
[15 22]
[38 180]
[39 179]
[40 178]
[41 177]
[42 131]
[43 130]
[44 129]
[45 128]
[46 127]
[49 124]
[50 123]
[51 122]
[55 85]
[56 84]
[57 83]
[58 82]
[59 81]
[60 80]
[62 78]
[63 77]
[86 100]
[87 99]
[88 98]
[89 97]
[90 96]
[105 121]
[106 120]
[107 119]
[108 118]
[143 171]
[144 170]
[145 169]
[146 168]
[147 167]
[148 166]
[152 162]
[153 161]
[154 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
