%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:01:23 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR7G3)
} def

/sequence { (\
AUGAAAGCAGGAAACUUCUCAGACACUCCAGAAUUCUUUCUCUUGGGAUUGUCAGGGGAUCCGGAGCUGCAGCCCAUCCUCUUCAUGCUGUUCCUGUCCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 86 0.017132614 ubox
1 97 0.008553583 ubox
2 9 0.035183355 ubox
2 21 0.020396655 ubox
2 85 0.018309313 ubox
2 96 0.008889606 ubox
2 100 0.305210447 ubox
3 8 0.038987729 ubox
3 18 0.009424050 ubox
3 20 0.022619315 ubox
3 84 0.018677939 ubox
3 92 0.016054681 ubox
3 93 0.076419062 ubox
3 95 0.004959495 ubox
3 98 0.097621998 ubox
3 99 0.375892114 ubox
4 17 0.008772360 ubox
4 19 0.021007973 ubox
4 83 0.016062917 ubox
4 91 0.016888185 ubox
4 92 0.076190543 ubox
4 97 0.067508794 ubox
5 16 0.006806858 ubox
5 17 0.016611743 ubox
5 82 0.011755681 ubox
5 83 0.009493640 ubox
5 91 0.065002427 ubox
6 16 0.017649799 ubox
6 17 0.005469068 ubox
6 19 0.019830136 ubox
6 68 0.012596272 ubox
6 82 0.013351480 ubox
6 89 0.086881192 ubox
6 92 0.016038111 ubox
6 95 0.004581614 ubox
7 15 0.018014215 ubox
7 16 0.004149422 ubox
7 18 0.023124415 ubox
7 67 0.012989297 ubox
7 81 0.016327550 ubox
7 88 0.088328468 ubox
7 91 0.019522770 ubox
7 97 0.947814405 ubox
8 66 0.012960761 ubox
8 87 0.088323892 ubox
8 90 0.019930667 ubox
8 96 0.980164226 ubox
9 16 0.028627498 ubox
9 17 0.006241635 ubox
9 19 0.013735128 ubox
9 80 0.017471166 ubox
9 86 0.082942918 ubox
9 89 0.019878473 ubox
9 95 0.979918884 ubox
10 15 0.030723864 ubox
10 16 0.007398863 ubox
10 18 0.016747334 ubox
10 19 0.031966741 ubox
10 20 0.012442621 ubox
10 62 0.170440070 ubox
10 79 0.017744122 ubox
10 84 0.028852608 ubox
10 88 0.019675621 ubox
10 94 0.978438079 ubox
10 99 0.047571443 ubox
11 15 0.007499000 ubox
11 17 0.016240926 ubox
11 18 0.037201511 ubox
11 19 0.005461166 ubox
11 20 0.023989392 ubox
11 61 0.170664475 ubox
11 78 0.017740411 ubox
11 83 0.024190695 ubox
11 84 0.069152573 ubox
11 93 0.978334513 ubox
11 98 0.047602076 ubox
12 16 0.014088403 ubox
12 17 0.035125108 ubox
12 19 0.023644311 ubox
12 60 0.169399132 ubox
12 77 0.016821565 ubox
12 82 0.017570730 ubox
12 83 0.067678133 ubox
12 91 0.014181345 ubox
12 92 0.898797635 ubox
12 97 0.044295347 ubox
13 82 0.041048987 ubox
13 83 0.005363901 ubox
13 91 0.737592345 ubox
13 92 0.364835634 ubox
14 52 0.010875524 ubox
14 82 0.003768774 ubox
14 91 0.517366359 ubox
14 97 0.005408588 ubox
15 22 0.022378825 ubox
15 51 0.011504478 ubox
15 55 0.007114266 ubox
15 56 0.007860507 ubox
15 57 0.026870713 ubox
15 58 0.054879887 ubox
15 64 0.013225292 ubox
15 66 0.009789533 ubox
15 90 0.633923133 ubox
15 96 0.008294544 ubox
16 21 0.039250866 ubox
16 22 0.004136267 ubox
16 23 0.005589749 ubox
16 33 0.008482739 ubox
16 48 0.004726650 ubox
16 54 0.008057718 ubox
16 55 0.007936601 ubox
16 56 0.020779904 ubox
16 57 0.054816392 ubox
16 58 0.009190203 ubox
16 59 0.170581933 ubox
16 63 0.012654159 ubox
16 65 0.009660730 ubox
17 21 0.024437450 ubox
17 22 0.005908891 ubox
17 23 0.012618227 ubox
17 32 0.009885479 ubox
17 47 0.004968031 ubox
17 48 0.025964113 ubox
17 54 0.009419160 ubox
17 55 0.010077440 ubox
17 56 0.058788364 ubox
17 57 0.009471612 ubox
17 58 0.175954262 ubox
17 59 0.085419936 ubox
17 64 0.007741544 ubox
18 22 0.014127407 ubox
18 31 0.010134375 ubox
18 46 0.005443676 ubox
18 47 0.027515673 ubox
18 55 0.065554567 ubox
18 56 0.017509921 ubox
18 57 0.179116877 ubox
18 58 0.088241882 ubox
18 63 0.006420577 ubox
18 66 0.004267415 ubox
18 72 0.008989457 ubox
19 30 0.009757775 ubox
19 45 0.005192601 ubox
19 46 0.027516721 ubox
19 54 0.061624117 ubox
19 55 0.014480749 ubox
19 56 0.180007649 ubox
19 57 0.088086704 ubox
19 65 0.004338692 ubox
19 71 0.008998050 ubox
20 45 0.027647319 ubox
20 51 0.006011304 ubox
20 55 0.181749701 ubox
20 56 0.089082076 ubox
20 64 0.004339550 ubox
20 69 0.026632813 ubox
20 87 0.250865244 ubox
20 90 0.101321135 ubox
21 27 0.005786108 ubox
21 43 0.015112645 ubox
21 44 0.023527878 ubox
21 50 0.006034858 ubox
21 68 0.027573435 ubox
21 82 0.011156035 ubox
21 83 0.048206840 ubox
21 86 0.226826695 ubox
21 89 0.097332705 ubox
22 26 0.006094590 ubox
22 28 0.008814053 ubox
22 42 0.020717847 ubox
22 43 0.015820916 ubox
22 49 0.005726929 ubox
22 53 0.993566141 ubox
22 61 0.004332214 ubox
22 67 0.027620233 ubox
22 81 0.004246732 ubox
22 84 0.016072486 ubox
22 88 0.061777698 ubox
23 27 0.007709555 ubox
23 41 0.017080742 ubox
23 52 0.995684641 ubox
23 60 0.004288002 ubox
23 80 0.003985626 ubox
23 83 0.012132602 ubox
23 91 0.003585300 ubox
24 45 0.005170449 ubox
24 51 0.996021044 ubox
24 69 0.029238030 ubox
24 87 0.039210293 ubox
24 90 0.003957514 ubox
25 44 0.005042308 ubox
25 50 0.981140272 ubox
25 52 0.005700586 ubox
25 68 0.029543699 ubox
25 86 0.033924662 ubox
25 89 0.003462281 ubox
26 46 0.013482123 ubox
26 47 0.204702915 ubox
26 51 0.006345031 ubox
26 58 0.004138128 ubox
26 66 0.054629461 ubox
27 45 0.012150392 ubox
27 46 0.186263537 ubox
27 47 0.305598157 ubox
27 48 0.903334697 ubox
27 57 0.004150482 ubox
27 65 0.054823075 ubox
28 45 0.185830091 ubox
28 46 0.364193765 ubox
28 47 0.909751802 ubox
28 56 0.004492996 ubox
28 64 0.054860834 ubox
29 45 0.384801718 ubox
29 46 0.900180618 ubox
29 55 0.004490330 ubox
29 63 0.054810955 ubox
29 69 0.005661323 ubox
30 37 0.027900298 ubox
30 38 0.004212433 ubox
30 39 0.014307206 ubox
30 41 0.780628224 ubox
30 43 0.487855497 ubox
30 44 0.293610836 ubox
30 68 0.005799533 ubox
31 36 0.028565148 ubox
31 37 0.004008634 ubox
31 38 0.015858339 ubox
31 39 0.013259392 ubox
31 40 0.804520636 ubox
31 42 0.564130592 ubox
31 43 0.093267975 ubox
31 44 0.078311498 ubox
31 53 0.005410079 ubox
31 61 0.053782894 ubox
31 67 0.005791264 ubox
32 37 0.015572754 ubox
32 38 0.020899595 ubox
32 39 0.801657853 ubox
32 41 0.558898682 ubox
32 43 0.086031591 ubox
32 44 0.031088914 ubox
32 50 0.011357619 ubox
32 52 0.005052318 ubox
32 60 0.053441488 ubox
33 37 0.021159940 ubox
33 38 0.764745596 ubox
33 43 0.029017172 ubox
33 49 0.015626533 ubox
33 60 0.004558383 ubox
34 48 0.015899828 ubox
34 59 0.003963133 ubox
34 66 0.004967693 ubox
35 47 0.015882147 ubox
35 48 0.006473680 ubox
35 65 0.006461608 ubox
36 45 0.016279595 ubox
36 46 0.015974343 ubox
36 47 0.006953386 ubox
36 64 0.006615368 ubox
37 45 0.015918449 ubox
37 46 0.006933267 ubox
37 48 0.003562301 ubox
37 63 0.006414097 ubox
38 45 0.007548477 ubox
38 47 0.003820831 ubox
38 59 0.006598906 ubox
39 46 0.004359213 ubox
39 58 0.005717058 ubox
39 59 0.054517125 ubox
40 45 0.013108893 ubox
40 57 0.005825971 ubox
40 58 0.054987531 ubox
41 56 0.004426616 ubox
41 57 0.054986682 ubox
42 55 0.004458083 ubox
42 56 0.055335609 ubox
42 66 0.005424808 ubox
43 54 0.003234592 ubox
43 55 0.055301744 ubox
43 65 0.005518601 ubox
44 54 0.055408233 ubox
44 64 0.005503130 ubox
45 53 0.055530063 ubox
45 89 0.005942672 ubox
46 52 0.052857295 ubox
46 62 0.006899045 ubox
46 88 0.006261005 ubox
46 89 0.014409930 ubox
47 53 0.006912020 ubox
47 61 0.006907994 ubox
47 84 0.004960659 ubox
47 88 0.023768210 ubox
48 52 0.006064371 ubox
48 60 0.006903042 ubox
48 83 0.004978243 ubox
48 86 0.008557311 ubox
49 59 0.006874426 ubox
49 85 0.006642837 ubox
50 58 0.006798028 ubox
50 85 0.045936310 ubox
50 87 0.004077071 ubox
51 84 0.050112219 ubox
51 86 0.007187461 ubox
51 88 0.007897449 ubox
52 85 0.007356846 ubox
52 87 0.007406111 ubox
53 87 0.005538971 ubox
54 82 0.905697654 ubox
54 83 0.068192363 ubox
54 86 0.008154959 ubox
54 89 0.006228004 ubox
55 62 0.010897468 ubox
55 80 0.005967039 ubox
55 81 0.969950578 ubox
55 82 0.065107917 ubox
55 83 0.003549751 ubox
55 84 0.021903346 ubox
55 88 0.005590795 ubox
55 99 0.003732703 ubox
56 61 0.010879196 ubox
56 62 0.005269186 ubox
56 79 0.006863915 ubox
56 80 0.971472054 ubox
56 81 0.066557642 ubox
56 83 0.020553192 ubox
56 98 0.003717092 ubox
56 99 0.006047458 ubox
57 61 0.005196533 ubox
57 78 0.006136526 ubox
57 79 0.974783842 ubox
57 80 0.013340997 ubox
57 82 0.020194334 ubox
57 97 0.003624774 ubox
57 98 0.005801692 ubox
57 99 0.044447959 ubox
58 77 0.004832823 ubox
58 78 0.974873845 ubox
58 79 0.012085396 ubox
58 81 0.020675682 ubox
58 84 0.009799559 ubox
58 97 0.005410678 ubox
58 98 0.045115262 ubox
59 77 0.973163396 ubox
59 80 0.020334194 ubox
59 83 0.009788335 ubox
59 86 0.003280832 ubox
59 97 0.045079248 ubox
60 76 0.864963050 ubox
60 85 0.003456599 ubox
60 96 0.043604756 ubox
62 69 0.008601110 ubox
62 90 0.004756948 ubox
62 96 0.012885833 ubox
63 68 0.007079495 ubox
63 74 0.150288572 ubox
63 75 0.961832669 ubox
63 79 0.038019034 ubox
63 82 0.013417881 ubox
63 84 0.006608453 ubox
63 89 0.003719515 ubox
63 94 0.178371221 ubox
63 95 0.003931082 ubox
63 99 0.043434883 ubox
64 73 0.150035842 ubox
64 74 0.964684848 ubox
64 78 0.038065032 ubox
64 81 0.014338580 ubox
64 83 0.006595445 ubox
64 88 0.003287809 ubox
64 93 0.178688037 ubox
64 98 0.043472848 ubox
65 77 0.037666954 ubox
65 80 0.014339987 ubox
65 82 0.006599645 ubox
65 89 0.042090178 ubox
65 92 0.178668439 ubox
65 95 0.008392022 ubox
65 97 0.042539517 ubox
66 73 0.963174619 ubox
66 79 0.014176160 ubox
66 81 0.006492977 ubox
66 88 0.043269639 ubox
66 91 0.177669388 ubox
66 94 0.012539187 ubox
67 72 0.960212527 ubox
67 87 0.043274785 ubox
67 90 0.177488219 ubox
67 96 0.005307308 ubox
68 76 0.013002840 ubox
68 85 0.040058576 ubox
69 75 0.013475381 ubox
69 84 0.040930464 ubox
69 88 0.177502198 ubox
69 91 0.080258254 ubox
70 87 0.177912497 ubox
70 90 0.097918744 ubox
71 80 0.014415311 ubox
71 82 0.040177669 ubox
71 83 0.005383246 ubox
71 86 0.173483265 ubox
71 89 0.098597435 ubox
72 79 0.016214765 ubox
72 81 0.042287641 ubox
72 82 0.005795712 ubox
72 88 0.098645578 ubox
73 87 0.097907967 ubox
75 87 0.010590796 ubox
76 86 0.021372529 ubox
77 85 0.022602565 ubox
84 90 0.145428245 ubox
85 89 0.119602286 ubox
85 91 0.022694622 ubox
86 90 0.024802365 ubox
87 97 0.005929704 ubox
88 96 0.006276868 ubox
90 99 0.004432095 ubox
7 97 0.9500000 lbox
8 96 0.9500000 lbox
9 95 0.9500000 lbox
10 94 0.9500000 lbox
11 93 0.9500000 lbox
12 92 0.9500000 lbox
13 91 0.9500000 lbox
22 53 0.9500000 lbox
23 52 0.9500000 lbox
24 51 0.9500000 lbox
25 50 0.9500000 lbox
27 48 0.9500000 lbox
28 47 0.9500000 lbox
29 46 0.9500000 lbox
30 41 0.9500000 lbox
31 40 0.9500000 lbox
32 39 0.9500000 lbox
33 38 0.9500000 lbox
54 82 0.9500000 lbox
55 81 0.9500000 lbox
56 80 0.9500000 lbox
57 79 0.9500000 lbox
58 78 0.9500000 lbox
59 77 0.9500000 lbox
60 76 0.9500000 lbox
63 75 0.9500000 lbox
64 74 0.9500000 lbox
66 73 0.9500000 lbox
67 72 0.9500000 lbox
showpage
end
%%EOF
