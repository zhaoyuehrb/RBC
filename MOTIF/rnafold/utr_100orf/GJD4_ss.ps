%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:39:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAAAACCCACCUCCUACUCCUGGCUCAGACCUUUGCUUUCUUAUCUCCAGCUCACACCUUUAAGUCUUAUGUAGUUAAAGGACAUUUAUCCGCCUCCUUGGAGAACACAGCCCUCCAGUGUCUCCUGCAGCCUGGAGCCUGGGACAUUCUGGAAGCAUGGAAGGCGUGGACUUGCUAGGGUUUCUCAUCAUCACAUUAAACUGCAACGUGACCAUGGUGGGAAAGCUCUGGUUCGUCCUCACGAUGCUGCUGC\
GGA\
) } def
/len { sequence length } bind def

/coor [
[394.07174683 195.66641235]
[388.53277588 199.93991089]
[382.27441406 203.08808899]
[375.52273560 204.99308777]
[368.52249146 205.58203125]
[361.52819824 204.82980347]
[354.79473877 202.76013184]
[348.56835938 199.44482422]
[343.07733154 195.00131226]
[338.52389526 189.58845520]
[335.07653809 183.40089417]
[332.86398315 176.66206360]
[331.97021484 169.61605835]
[332.43145752 162.51887512]
[318.44631958 157.09526062]
[304.46115112 151.67164612]
[290.47601318 146.24803162]
[276.49087524 140.82441711]
[262.44094849 135.57084656]
[248.32835388 130.48805237]
[234.21575928 125.40528107]
[220.10316467 120.32249451]
[205.50704956 123.28939819]
[195.14509583 111.33361816]
[181.03250122 106.25083923]
[166.91990662 101.16806030]
[152.80731201 96.08527374]
[138.66415405 91.08818054]
[124.49094391 86.17694855]
[137.75151062 93.18816376]
[146.81201172 105.14256287]
[149.97807312 119.80461884]
[146.65763855 134.43249512]
[137.47166443 146.29072571]
[124.13792419 153.16178894]
[109.14988708 153.76077271]
[95.31159973 147.97653198]
[82.00061035 154.89155579]
[68.68961334 161.80656433]
[68.68913269 177.11207581]
[61.56561661 190.65881348]
[48.95599365 199.33383179]
[33.75786972 201.14369202]
[19.46365738 195.67248535]
[9.35806465 184.17745972]
[5.76328087 169.30009460]
[9.50536251 154.45909119]
[19.72440529 143.06480408]
[34.07215118 137.73556519]
[49.25158691 139.69598389]
[61.77459717 148.49557495]
[75.08558655 141.58055115]
[88.39658356 134.66554260]
[87.17392731 127.26586914]
[73.85446930 134.16456604]
[63.17761230 123.62870026]
[69.89865875 110.21871948]
[84.72863007 112.46652985]
[83.50597382 105.06685638]
[68.67806244 102.80123901]
[53.85015106 100.53562927]
[39.02223969 98.27001190]
[24.19432640 96.00439453]
[9.36641312 93.73877716]
[-5.46149921 91.47316742]
[-14.48825359 103.83343506]
[-28.23026085 110.57256317]
[-43.52970886 110.14193726]
[-56.87089920 102.64051819]
[-65.18811798 89.79208374]
[-66.57013702 74.54909515]
[-60.69937134 60.41429138]
[-48.92488480 50.63574219]
[-33.95236588 47.46048737]
[-19.22238922 51.61817551]
[-8.11979771 62.15340424]
[-3.19588423 76.64525604]
[11.63202858 78.91086578]
[26.45993996 81.17648315]
[41.28785324 83.44210052]
[56.11576462 85.70771027]
[70.94367981 87.97332764]
[85.77159119 90.23894501]
[90.48323822 84.40367126]
[78.55671692 75.30653381]
[66.63019562 66.20938873]
[54.70367050 57.11224365]
[42.77714539 48.01509857]
[30.85062218 38.91795349]
[18.92409897 29.82081032]
[4.51364660 25.65681267]
[0.00755102 11.34964275]
[9.43086052 -0.32088590]
[24.36624718 1.06987214]
[31.47274780 14.27960205]
[42.87837982 24.02185822]
[54.28401184 33.76411438]
[65.68964386 43.50637054]
[77.09527588 53.24862671]
[88.50090790 62.99088287]
[99.90653992 72.73313904]
[104.61818695 66.89787292]
[99.27949524 52.88008499]
[93.94079590 38.86230087]
[88.60209656 24.84451485]
[83.26339722 10.82672882]
[77.30238342 3.94619727]
[77.94609070 -3.39359713]
[72.77781677 -17.47510719]
[67.60953522 -31.55661583]
[52.53007126 -34.81441498]
[41.62186432 -45.72379303]
[38.36568451 -60.80360794]
[43.80056381 -75.24194336]
[56.19226074 -84.43158722]
[71.58661652 -85.44014740]
[85.07136536 -77.94580078]
[92.34355927 -64.33996582]
[91.08267212 -48.96421432]
[81.69104767 -36.72489166]
[86.85932159 -22.64338493]
[92.02760315 -8.56187439]
[97.28118896 5.48803139]
[102.61988068 19.50581741]
[107.95858002 33.52360153]
[113.29727936 47.54138565]
[118.63597870 61.55917358]
[129.40217590 72.00374603]
[143.57537842 76.91497040]
[152.67774963 76.76515198]
[157.89009094 81.97267914]
[172.00268555 87.05546570]
[186.11528015 92.13824463]
[200.22787476 97.22102356]
[215.83341980 94.61768341]
[225.18594360 106.20989990]
[239.29853821 111.29268646]
[253.41113281 116.37546539]
[267.52374268 121.45824432]
[274.03936768 120.67192841]
[279.21093750 122.93547058]
[281.91448975 126.83927155]
[295.89962769 132.26289368]
[309.88476562 137.68650818]
[323.86993408 143.11012268]
[337.85507202 148.53373718]
[356.53494263 133.85749817]
[380.16592407 133.47601318]
[399.11386108 147.39768982]
[405.74282837 169.82965088]
[420.32516479 173.34458923]
[434.90753174 176.85954285]
[449.48989868 180.37449646]
[465.29373169 169.88461304]
[483.42755127 174.23376465]
[492.43899536 190.19316101]
[507.10232544 193.35334778]
[521.76562500 196.51353455]
[536.42895508 199.67372131]
[551.09228516 202.83392334]
[543.71423340 189.77388000]
[547.62347412 175.29223633]
[560.57128906 167.71899414]
[575.10998535 171.41040039]
[582.87670898 184.24310303]
[579.40393066 198.83555603]
[566.68884277 206.79408264]
[581.08355713 211.01214600]
[595.47827148 215.23019409]
[609.92309570 219.27333069]
[624.41589355 223.14097595]
[638.90869141 227.00860596]
[653.40148926 230.87625122]
[666.96728516 223.22067261]
[681.60992432 227.34945679]
[688.82476807 240.32951355]
[703.31756592 244.19715881]
[717.81036377 248.06478882]
[732.30316162 251.93243408]
[746.79595947 255.80006409]
[761.28875732 259.66769409]
[775.78155518 263.53533936]
[790.27441406 267.40298462]
[804.76721191 271.27062988]
[819.26000977 275.13824463]
[833.77600098 278.91793823]
[848.31463623 282.60949707]
[862.85327148 286.30105591]
[877.39196777 289.99261475]
[891.93060303 293.68417358]
[906.46923828 297.37576294]
[921.00787354 301.06732178]
[935.61126709 304.49377441]
[950.27459717 307.65396118]
[964.93792725 310.81414795]
[979.60125732 313.97433472]
[988.55334473 301.65441895]
[1001.74566650 294.04635620]
[1016.89257812 292.46832275]
[1031.36987305 297.19366455]
[1042.66918945 307.40377808]
[1048.83276367 321.32962036]
[1048.79296875 336.55847168]
[1042.55651855 350.45187378]
[1031.20385742 360.60266113]
[1016.70214844 365.25219727]
[1001.56365967 363.59490967]
[988.41131592 355.91790771]
[979.52386475 343.55130005]
[976.44110107 328.63766479]
[961.77777100 325.47747803]
[947.11444092 322.31729126]
[932.45111084 319.15710449]
[929.32586670 320.72750854]
[925.29107666 320.87976074]
[921.01354980 319.20547485]
[917.31634521 315.60595703]
[902.77764893 311.91439819]
[888.23901367 308.22283936]
[873.70037842 304.53128052]
[859.16174316 300.83972168]
[844.62304688 297.14813232]
[830.08441162 293.45657349]
[822.84985352 294.85229492]
[815.39233398 289.63107300]
[800.89953613 285.76342773]
[786.40673828 281.89578247]
[771.91394043 278.02813721]
[757.42114258 274.16052246]
[742.92834473 270.29287720]
[728.43554688 266.42523193]
[713.94274902 262.55758667]
[699.44995117 258.68997192]
[684.95709229 254.82231140]
[672.23431396 262.48168945]
[657.48144531 258.76580811]
[649.53387451 245.36904907]
[635.04107666 241.50141907]
[620.54827881 237.63377380]
[606.05548096 233.76614380]
[601.56982422 235.32440186]
[596.05847168 234.10250854]
[591.26019287 229.62490845]
[576.86547852 225.40686035]
[562.47076416 221.18881226]
[547.93212891 217.49723816]
[533.26879883 214.33705139]
[518.60546875 211.17686462]
[503.94213867 208.01667786]
[489.27880859 204.85649109]
[481.28973389 212.95211792]
[470.27441406 216.23298645]
[458.92379761 213.77738953]
[450.06893921 206.07987976]
[445.97494507 194.95684814]
[431.39257812 191.44189453]
[416.81024170 187.92695618]
[402.22787476 184.41200256]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 146]
[15 145]
[16 144]
[17 143]
[18 142]
[19 139]
[20 138]
[21 137]
[22 136]
[24 134]
[25 133]
[26 132]
[27 131]
[28 129]
[29 128]
[37 53]
[38 52]
[39 51]
[59 83]
[60 82]
[61 81]
[62 80]
[63 79]
[64 78]
[65 77]
[102 127]
[103 126]
[104 125]
[105 124]
[106 123]
[108 122]
[109 121]
[110 120]
[150 258]
[151 257]
[152 256]
[153 255]
[156 250]
[157 249]
[158 248]
[159 247]
[160 246]
[167 245]
[168 244]
[169 243]
[170 240]
[171 239]
[172 238]
[173 237]
[176 234]
[177 233]
[178 232]
[179 231]
[180 230]
[181 229]
[182 228]
[183 227]
[184 226]
[185 225]
[186 223]
[187 222]
[188 221]
[189 220]
[190 219]
[191 218]
[192 217]
[193 213]
[194 212]
[195 211]
[196 210]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
