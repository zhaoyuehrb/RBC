%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:27:43 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FGF16)
} def

/sequence { (\
GGAAUCCUGGAGUUUAUCAGCCUGGCUGUGGGGCUGAUCAGCAUCCGGGGAGUGGACUCUGGCCUGUACCUAGGAAUGAAUGAGCGAGGAGAACUCUAUG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.014726729 ubox
1 8 0.003843733 ubox
1 58 0.005563206 ubox
1 59 0.003721876 ubox
1 60 0.015107002 ubox
1 64 0.009664127 ubox
1 70 0.010478145 ubox
1 95 0.005949931 ubox
1 96 0.009026134 ubox
1 97 0.032806762 ubox
2 6 0.015932497 ubox
2 7 0.004533440 ubox
2 57 0.008609053 ubox
2 59 0.015963801 ubox
2 63 0.009658114 ubox
2 69 0.010454627 ubox
2 94 0.007295571 ubox
2 95 0.006493617 ubox
2 96 0.032784583 ubox
3 58 0.015572493 ubox
3 95 0.029382382 ubox
4 53 0.028238544 ubox
4 67 0.004805948 ubox
4 77 0.012978739 ubox
4 81 0.007633092 ubox
4 99 0.025206383 ubox
5 49 0.019266743 ubox
5 50 0.319063321 ubox
5 51 0.089976037 ubox
5 52 0.021719038 ubox
5 56 0.006245284 ubox
5 66 0.004559265 ubox
5 75 0.055272968 ubox
5 76 0.010401021 ubox
5 79 0.005306555 ubox
5 80 0.007190754 ubox
5 83 0.005240606 ubox
5 90 0.012718335 ubox
5 92 0.004082649 ubox
5 98 0.023441779 ubox
6 48 0.068222382 ubox
6 49 0.963730854 ubox
6 50 0.083732049 ubox
6 55 0.005304560 ubox
6 62 0.003467051 ubox
6 74 0.059531045 ubox
6 78 0.005253207 ubox
6 82 0.005092343 ubox
6 89 0.013275167 ubox
6 91 0.004067841 ubox
7 47 0.067425725 ubox
7 48 0.992768666 ubox
7 49 0.068755508 ubox
7 54 0.004639053 ubox
7 61 0.003456000 ubox
7 62 0.007663104 ubox
7 73 0.059537028 ubox
7 88 0.013238583 ubox
7 89 0.003736098 ubox
8 47 0.993485000 ubox
8 48 0.048311268 ubox
8 61 0.007746334 ubox
8 72 0.059428073 ubox
8 87 0.012517258 ubox
8 88 0.003715426 ubox
8 98 0.018485595 ubox
9 45 0.012156964 ubox
9 46 0.997771104 ubox
9 60 0.008630808 ubox
9 70 0.010178195 ubox
9 71 0.058314554 ubox
9 97 0.020304587 ubox
10 44 0.012535441 ubox
10 45 0.997798642 ubox
10 59 0.008804414 ubox
10 69 0.010244680 ubox
10 70 0.058173608 ubox
10 96 0.020489168 ubox
11 44 0.993980140 ubox
11 58 0.008811852 ubox
11 95 0.020486615 ubox
12 42 0.990846734 ubox
12 44 0.003897244 ubox
12 57 0.008811018 ubox
12 69 0.035398570 ubox
12 85 0.012366973 ubox
12 94 0.020481558 ubox
13 41 0.991261448 ubox
13 43 0.007195108 ubox
13 56 0.008804598 ubox
13 68 0.032781611 ubox
13 84 0.012394210 ubox
13 93 0.020426128 ubox
14 40 0.929189116 ubox
14 41 0.050679756 ubox
14 55 0.008785933 ubox
14 83 0.012391618 ubox
14 92 0.020193568 ubox
15 40 0.061472452 ubox
15 54 0.008745909 ubox
15 66 0.003946430 ubox
15 82 0.012380694 ubox
15 91 0.019427740 ubox
16 38 0.970159090 ubox
16 53 0.008655572 ubox
16 81 0.012160081 ubox
17 37 0.999109438 ubox
17 52 0.007946941 ubox
17 79 0.008563636 ubox
17 80 0.008643496 ubox
18 36 0.999860903 ubox
18 78 0.011997472 ubox
19 35 0.999636912 ubox
19 77 0.011935705 ubox
20 34 0.999866387 ubox
21 32 0.063497943 ubox
21 33 0.997844578 ubox
21 49 0.008760620 ubox
21 74 0.012169334 ubox
22 30 0.004034329 ubox
22 31 0.089726242 ubox
22 32 0.995778950 ubox
22 33 0.004680271 ubox
22 48 0.008773668 ubox
22 73 0.012188475 ubox
23 30 0.107835696 ubox
23 31 0.986386802 ubox
23 32 0.006594305 ubox
23 47 0.008771483 ubox
23 72 0.012175698 ubox
24 29 0.100556416 ubox
24 46 0.008788601 ubox
24 71 0.012010903 ubox
25 45 0.008755857 ubox
25 70 0.011941570 ubox
27 31 0.003294728 ubox
27 43 0.008569261 ubox
27 68 0.007103164 ubox
28 42 0.008656774 ubox
28 67 0.007092961 ubox
28 69 0.007325461 ubox
29 40 0.004148582 ubox
29 41 0.007417683 ubox
29 66 0.003490146 ubox
29 68 0.007363441 ubox
30 39 0.005075248 ubox
30 65 0.004379899 ubox
30 67 0.006103764 ubox
31 38 0.004743137 ubox
31 39 0.006185534 ubox
31 64 0.004339955 ubox
31 65 0.010873202 ubox
32 38 0.006007845 ubox
32 63 0.004245588 ubox
32 64 0.011355923 ubox
33 42 0.004402297 ubox
33 63 0.011395439 ubox
34 41 0.004409774 ubox
34 62 0.011338321 ubox
35 40 0.004125714 ubox
35 61 0.005854895 ubox
38 62 0.006721637 ubox
38 83 0.004174099 ubox
39 61 0.017104904 ubox
39 66 0.036080153 ubox
39 82 0.005501234 ubox
40 60 0.017653313 ubox
40 65 0.036399943 ubox
40 81 0.005465790 ubox
41 59 0.017672365 ubox
41 64 0.036382532 ubox
41 67 0.026128771 ubox
41 85 0.004436980 ubox
42 66 0.026778845 ubox
42 78 0.005887066 ubox
42 84 0.004432897 ubox
43 65 0.026108807 ubox
43 67 0.004880441 ubox
43 77 0.005864857 ubox
44 56 0.017979506 ubox
44 66 0.004973753 ubox
44 75 0.004467293 ubox
44 76 0.004395400 ubox
45 55 0.018163984 ubox
45 62 0.059873805 ubox
45 74 0.005906538 ubox
46 54 0.018163241 ubox
46 61 0.060252665 ubox
46 66 0.009495105 ubox
46 73 0.005903292 ubox
47 53 0.017153573 ubox
47 59 0.003319288 ubox
47 60 0.060183481 ubox
47 64 0.004408593 ubox
47 65 0.009724815 ubox
47 71 0.004650831 ubox
48 58 0.003366005 ubox
48 59 0.060217225 ubox
48 63 0.004402047 ubox
48 64 0.009760512 ubox
48 70 0.005140340 ubox
48 71 0.004090654 ubox
49 57 0.005513012 ubox
49 58 0.060015198 ubox
49 60 0.030714834 ubox
49 63 0.009570711 ubox
49 69 0.005142486 ubox
49 70 0.004557378 ubox
49 96 0.003278054 ubox
49 97 0.233126366 ubox
50 57 0.060657362 ubox
50 59 0.134405172 ubox
50 69 0.004696704 ubox
50 95 0.003194913 ubox
50 96 0.851467512 ubox
51 58 0.135347885 ubox
51 60 0.033794508 ubox
51 71 0.004182083 ubox
51 95 0.855161673 ubox
51 97 0.047269731 ubox
52 57 0.134746384 ubox
52 59 0.034643131 ubox
52 63 0.006856741 ubox
52 69 0.005498821 ubox
52 70 0.003779321 ubox
52 77 0.006894928 ubox
52 81 0.012530561 ubox
52 85 0.308755374 ubox
52 94 0.855761160 ubox
52 96 0.048475758 ubox
52 99 0.258833079 ubox
53 61 0.005529549 ubox
53 62 0.007276489 ubox
53 68 0.005483894 ubox
53 72 0.006894691 ubox
53 76 0.007232839 ubox
53 78 0.005737269 ubox
53 80 0.013178180 ubox
53 82 0.007037796 ubox
53 84 0.307750189 ubox
53 86 0.008860015 ubox
53 93 0.848912271 ubox
53 98 0.273953074 ubox
54 60 0.009269201 ubox
54 64 0.011903923 ubox
54 65 0.005053619 ubox
54 67 0.003877537 ubox
54 70 0.044543123 ubox
54 71 0.004950483 ubox
54 77 0.008655783 ubox
54 81 0.012034530 ubox
54 85 0.037474204 ubox
54 95 0.027700363 ubox
54 96 0.017053678 ubox
54 97 0.277894628 ubox
55 59 0.009405915 ubox
55 63 0.011914247 ubox
55 64 0.005274443 ubox
55 69 0.044593273 ubox
55 70 0.004875839 ubox
55 94 0.030096426 ubox
55 95 0.015800366 ubox
55 96 0.278114577 ubox
56 67 0.045281001 ubox
56 95 0.275296486 ubox
57 66 0.045515525 ubox
57 73 0.015929657 ubox
57 74 0.028396180 ubox
57 84 0.146869522 ubox
57 88 0.269681654 ubox
57 89 0.242839973 ubox
57 91 0.700313074 ubox
58 72 0.015740187 ubox
58 73 0.022060158 ubox
58 74 0.054601067 ubox
58 75 0.021180674 ubox
58 79 0.328792846 ubox
58 83 0.147633969 ubox
58 87 0.268666567 ubox
58 88 0.040425182 ubox
58 89 0.405486471 ubox
58 90 0.694136772 ubox
58 92 0.080444950 ubox
59 73 0.068873002 ubox
59 74 0.021516178 ubox
59 78 0.339172281 ubox
59 82 0.147473411 ubox
59 84 0.027197061 ubox
59 86 0.266091162 ubox
59 88 0.552315112 ubox
59 89 0.651221790 ubox
59 91 0.081592887 ubox
60 72 0.069694936 ubox
60 73 0.019418510 ubox
60 78 0.048470194 ubox
60 82 0.011313086 ubox
60 83 0.038258743 ubox
60 86 0.022425815 ubox
60 87 0.601268003 ubox
60 88 0.598578969 ubox
60 90 0.076483517 ubox
60 98 0.004189887 ubox
61 67 0.003349965 ubox
61 70 0.068630776 ubox
61 71 0.058308260 ubox
61 77 0.069871256 ubox
61 81 0.007767873 ubox
61 85 0.064500286 ubox
61 97 0.004443104 ubox
62 69 0.068708580 ubox
62 70 0.057710283 ubox
62 85 0.710465495 ubox
63 74 0.690984932 ubox
63 84 0.667804832 ubox
63 89 0.083328131 ubox
64 73 0.717494407 ubox
64 74 0.097614294 ubox
64 84 0.216160243 ubox
64 88 0.083921451 ubox
65 72 0.710733783 ubox
65 73 0.096319220 ubox
65 78 0.037572224 ubox
65 82 0.384396449 ubox
65 83 0.270269172 ubox
65 86 0.038427896 ubox
65 87 0.077069964 ubox
66 71 0.630234234 ubox
66 77 0.062255283 ubox
66 81 0.459218586 ubox
66 85 0.072641869 ubox
67 76 0.063466211 ubox
67 78 0.107594745 ubox
67 80 0.453907127 ubox
67 82 0.112009590 ubox
67 84 0.071407996 ubox
68 77 0.113421723 ubox
68 81 0.110444743 ubox
69 89 0.012481976 ubox
70 84 0.023455767 ubox
70 88 0.012560071 ubox
71 78 0.257343444 ubox
71 82 0.060345422 ubox
71 83 0.022862256 ubox
71 87 0.012258982 ubox
72 77 0.258824199 ubox
72 81 0.063961131 ubox
76 99 0.009748837 ubox
77 86 0.034045041 ubox
77 98 0.010049216 ubox
78 85 0.091762567 ubox
78 97 0.009863864 ubox
80 99 0.039208754 ubox
81 98 0.040270540 ubox
81 100 0.005677967 ubox
82 96 0.041409919 ubox
82 97 0.036618892 ubox
82 99 0.007906917 ubox
83 95 0.041549638 ubox
83 97 0.012646478 ubox
84 94 0.041376395 ubox
84 96 0.008876712 ubox
85 100 0.019656751 ubox
86 96 0.417933757 ubox
86 99 0.019255414 ubox
87 95 0.418677060 ubox
87 97 0.025495586 ubox
88 94 0.418739677 ubox
88 95 0.009655664 ubox
88 96 0.026120820 ubox
88 97 0.049821533 ubox
89 94 0.014824397 ubox
89 95 0.022059531 ubox
89 96 0.051616496 ubox
90 95 0.048354197 ubox
90 97 0.017256873 ubox
91 96 0.017735940 ubox
6 49 0.9500000 lbox
7 48 0.9500000 lbox
8 47 0.9500000 lbox
9 46 0.9500000 lbox
10 45 0.9500000 lbox
11 44 0.9500000 lbox
12 42 0.9500000 lbox
13 41 0.9500000 lbox
14 40 0.9500000 lbox
16 38 0.9500000 lbox
17 37 0.9500000 lbox
18 36 0.9500000 lbox
19 35 0.9500000 lbox
20 34 0.9500000 lbox
21 33 0.9500000 lbox
22 32 0.9500000 lbox
23 31 0.9500000 lbox
50 96 0.9500000 lbox
51 95 0.9500000 lbox
52 94 0.9500000 lbox
53 93 0.9500000 lbox
57 91 0.9500000 lbox
58 90 0.9500000 lbox
59 89 0.9500000 lbox
60 88 0.9500000 lbox
63 74 0.9500000 lbox
64 73 0.9500000 lbox
65 72 0.9500000 lbox
66 71 0.9500000 lbox
showpage
end
%%EOF
