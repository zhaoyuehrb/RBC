%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:42:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUGAGCCAGACCCAGUCCAGCUCUGGUGCCUGCCCUCUGGUGCGAGCUGACCUGAGAUGCACUUCCCUCCUCUGUGAGCUGUCUCGGCACCCACUUGCAGUCACUGCCGCCUGAUGUUGUUACUCUUCCACUCCAAAAGGAUGCCCGUGGCCGAGGCCCCCCAGGUGGCUGGCGGGCAGGGGGACGGAGGUGAUGGCGAGGAAGCGGAGCCGG\
) } def
/len { sequence length } bind def

/coor [
[60.40199661 382.97119141]
[66.02523041 397.01519775]
[67.03137970 412.10968018]
[63.32186890 426.77578735]
[55.26012421 439.57669067]
[43.63595581 449.25833130]
[29.58817101 454.87213135]
[14.49303627 455.86816406]
[-0.17058359 452.14883423]
[-12.96609592 444.07852173]
[-22.63992691 432.44787598]
[-28.24433327 418.39633179]
[-29.23025322 403.30053711]
[-25.50109482 388.63940430]
[-17.42220306 375.84930420]
[-5.78506708 366.18325806]
[8.27022648 360.58828735]
[23.36668205 359.61245728]
[27.05455589 345.07287598]
[22.68385124 330.83398438]
[33.57654572 319.35968018]
[37.26441956 304.82009888]
[40.95229340 290.28051758]
[44.64016724 275.74090576]
[48.32804108 261.20132446]
[52.01591492 246.66174316]
[42.36212158 235.35058594]
[41.20625687 220.34632874]
[49.20054626 207.38697815]
[63.45761108 201.55239868]
[67.14548492 187.01281738]
[70.83335876 172.47322083]
[74.41490936 157.90707397]
[77.88994598 143.31515503]
[81.36497498 128.72323608]
[70.87524414 118.00103760]
[56.21067047 121.15544128]
[41.54609680 124.30983734]
[29.68161964 134.77619934]
[15.61184978 129.88838196]
[0.94727385 133.04277039]
[-13.71730137 136.19717407]
[-19.87073135 150.44198608]
[-33.23897934 158.32041931]
[-48.68168640 156.80302429]
[-60.26081085 146.47328186]
[-63.52394867 131.30319214]
[-57.21635056 117.12596893]
[-43.76342010 109.39302826]
[-28.33808517 111.07785797]
[-16.87170029 121.53260040]
[-2.20712399 118.37819672]
[12.45745182 115.22380066]
[23.27301979 104.98306274]
[38.39169693 109.64526367]
[53.05627441 106.49085999]
[67.72084808 103.33646393]
[71.53356171 88.53088379]
[81.32382202 77.90734100]
[94.18279266 73.46221161]
[106.78191376 75.51507568]
[114.87475586 62.88550949]
[122.96759796 50.25594711]
[131.06044006 37.62638092]
[139.15328979 24.99681664]
[147.24612427 12.36725330]
[155.33897400 -0.26231146]
[156.26989746 -16.05610657]
[169.65113831 -22.59764862]
[177.74397278 -35.22721481]
[185.83682251 -47.85677719]
[193.92965698 -60.48634338]
[202.02250671 -73.11590576]
[210.11534119 -85.74546814]
[209.45802307 -100.73106384]
[200.29040527 -112.60350800]
[191.12280273 -124.47595978]
[172.14799500 -131.28762817]
[170.40760803 -150.54704285]
[160.89700317 -162.14654541]
[151.38641357 -173.74604797]
[141.87580872 -185.34555054]
[127.15752411 -193.76033020]
[131.16902161 -210.23286438]
[148.10829163 -210.93818665]
[153.47531128 -194.85615540]
[162.98590088 -183.25665283]
[172.49650574 -171.65715027]
[182.00711060 -160.05764771]
[192.22131348 -159.97071838]
[200.88441467 -154.15512085]
[205.00292969 -144.32977295]
[202.99525452 -133.64355469]
[212.16285706 -121.77111816]
[221.33045959 -109.89866638]
[222.51019287 -105.22524261]
[223.32908630 -100.49288940]
[234.99777222 -109.91848755]
[246.66644287 -119.34409332]
[252.88755798 -136.67703247]
[270.31857300 -138.71951294]
[281.84829712 -148.31460571]
[293.37799072 -157.90969849]
[304.90768433 -167.50480652]
[307.54666138 -173.56144714]
[312.15536499 -176.88011169]
[316.91735840 -177.20585632]
[328.72253418 -186.45994568]
[340.52767944 -195.71405029]
[352.33282471 -204.96815491]
[364.13796997 -214.22225952]
[375.94311523 -223.47634888]
[387.74829102 -232.73045349]
[399.55343628 -241.98455811]
[395.18679810 -253.95307922]
[394.35946655 -266.64846802]
[397.12805176 -279.04754639]
[403.25976562 -290.15386963]
[412.25192261 -299.07775879]
[423.37319946 -305.10757446]
[435.72308350 -307.76651001]
[448.30471802 -306.85021973]
[460.10549927 -302.44256592]
[470.17849731 -294.90792847]
[482.37783813 -303.63583374]
[494.57720947 -312.36370850]
[497.29257202 -327.70205688]
[509.78875732 -336.37957764]
[524.39477539 -333.69638062]
[536.59411621 -342.42425537]
[548.79345703 -351.15213013]
[560.99279785 -359.88000488]
[572.86529541 -369.04763794]
[584.39495850 -378.64273071]
[595.92468262 -388.23782349]
[601.08526611 -403.80383301]
[617.19854736 -406.85220337]
[627.68865967 -394.24703979]
[621.76422119 -378.95544434]
[605.51977539 -376.70809937]
[593.99005127 -367.11300659]
[582.46038818 -357.51791382]
[596.93652344 -353.58840942]
[603.02770996 -339.88085938]
[596.24218750 -326.50335693]
[581.58374023 -323.32070923]
[569.86169434 -332.67980957]
[569.72070312 -347.68066406]
[557.52136230 -338.95278931]
[545.32202148 -330.22491455]
[533.12268066 -321.49700928]
[530.94616699 -306.80694580]
[518.69860840 -297.78182983]
[503.30508423 -300.16436768]
[491.10574341 -291.43649292]
[478.90637207 -282.70858765]
[483.35159302 -265.91879272]
[481.00128174 -248.67465210]
[472.18930054 -233.62597656]
[458.24444580 -223.09571838]
[441.29025269 -218.72138977]
[423.92160034 -221.20046997]
[408.80752563 -230.17939758]
[397.00238037 -220.92530823]
[385.19723511 -211.67120361]
[373.39208984 -202.41709900]
[361.58691406 -193.16299438]
[349.78176880 -183.90890503]
[337.97662354 -174.65480042]
[326.17147827 -165.40069580]
[314.50280762 -155.97509766]
[302.97308350 -146.38000488]
[291.44338989 -136.78489685]
[279.91366577 -127.18981171]
[278.49935913 -115.17813110]
[268.97494507 -107.08981323]
[256.09204102 -107.67542267]
[244.42337036 -98.24981689]
[232.75469971 -88.82421112]
[222.74491882 -77.65262604]
[214.65206909 -65.02306366]
[206.55921936 -52.39350128]
[198.46638489 -39.76393509]
[190.37353516 -27.13437080]
[182.28070068 -14.50480652]
[181.92863464 0.38563716]
[167.96853638 7.83053112]
[159.87568665 20.46009636]
[151.78285217 33.08966064]
[143.69000244 45.71922302]
[135.59716797 58.34878922]
[127.50432587 70.97835541]
[119.41148376 83.60791779]
[127.62248230 102.70809174]
[118.78959656 123.51898956]
[95.95689392 132.19827271]
[92.48186493 146.79019165]
[89.00682831 161.38211060]
[90.06295776 170.45216370]
[85.37294769 176.16110229]
[81.68507385 190.70068359]
[77.99720001 205.24026489]
[87.74979401 217.16474915]
[88.60090637 232.36767578]
[80.43338776 245.00712585]
[66.55550385 250.34962463]
[62.86762619 264.88919067]
[59.17975235 279.42880249]
[55.49188232 293.96838379]
[51.80400848 308.50796509]
[48.11613464 323.04754639]
[52.22305679 338.32641602]
[41.59414291 348.76077271]
[37.90626907 363.30035400]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 214]
[19 213]
[21 211]
[22 210]
[23 209]
[24 208]
[25 207]
[26 206]
[30 202]
[31 201]
[32 200]
[33 198]
[34 197]
[35 196]
[36 57]
[37 56]
[38 55]
[40 53]
[41 52]
[42 51]
[61 193]
[62 192]
[63 191]
[64 190]
[65 189]
[66 188]
[67 187]
[69 185]
[70 184]
[71 183]
[72 182]
[73 181]
[74 180]
[75 95]
[76 94]
[77 93]
[79 89]
[80 88]
[81 87]
[82 86]
[97 179]
[98 178]
[99 177]
[101 174]
[102 173]
[103 172]
[104 171]
[107 170]
[108 169]
[109 168]
[110 167]
[111 166]
[112 165]
[113 164]
[114 163]
[124 156]
[125 155]
[126 154]
[129 151]
[130 150]
[131 149]
[132 148]
[133 142]
[134 141]
[135 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
