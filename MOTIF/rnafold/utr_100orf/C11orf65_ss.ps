%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:48:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGUCAUUUCCGCCUGCGACGUUACCUAGGAGUCCAGCGGCGCCCGGGCCAGCAGCGAUUGGAAUUUCAAAUGCCUUGGAAAGAGGAAUCAGAAUUUACAAAGCAGGAUAAGGCUGCCAGAGUCAUUCAGCAGGCCUGGAAAAGUUUCCUUGCAGAGCUUCUAGAUGCUG\
) } def
/len { sequence length } bind def

/coor [
[-29.73513031 548.70196533]
[-35.88648987 562.38262939]
[-42.03784943 576.06329346]
[-48.18920898 589.74395752]
[-54.34056473 603.42462158]
[-44.47492218 615.07073975]
[-40.64765167 629.84619141]
[-43.61866379 644.81738281]
[-52.79805756 657.01171875]
[-66.36326599 664.00799561]
[-81.62089539 664.41711426]
[-95.54154205 658.15783691]
[-105.36125183 646.47296143]
[-109.13030243 631.68255615]
[-106.10036469 616.72320557]
[-96.87301636 604.56512451]
[-83.28036499 597.62231445]
[-68.02124023 597.27325439]
[-61.86988068 583.59259033]
[-55.71852112 569.91192627]
[-49.56716156 556.23126221]
[-43.41580200 542.55059814]
[-54.26652145 526.32672119]
[-53.16849136 506.69607544]
[-40.39129639 491.56451416]
[-20.94266510 487.12957764]
[-15.81236267 473.03417969]
[-10.68206120 458.93881226]
[-5.55175877 444.84341431]
[-0.42145649 430.74801636]
[4.70884562 416.65261841]
[9.83914757 402.55725098]
[14.96945000 388.46185303]
[6.50119495 376.23782349]
[6.85897207 361.19335938]
[16.11509323 349.10296631]
[30.88631058 344.73065186]
[36.01661301 330.63525391]
[41.14691544 316.53985596]
[45.62463760 302.22378540]
[49.44033432 287.71722412]
[39.27339554 272.52706909]
[43.47253418 254.41036987]
[59.83611679 244.92231750]
[63.11633301 230.28536987]
[66.39655304 215.64843750]
[69.67676544 201.01148987]
[72.95698547 186.37454224]
[76.23719788 171.73759460]
[79.51741791 157.10064697]
[74.75060272 142.98942566]
[85.31846619 131.21527100]
[88.59867859 116.57831573]
[79.87959290 100.00000000]
[88.59867859 83.42168427]
[85.31846619 68.78473663]
[74.84498596 61.21432114]
[72.42992401 48.92772293]
[78.83551788 38.63830948]
[75.82475281 23.94357491]
[72.81398010 9.24883842]
[58.33515549 4.31824017]
[48.33431625 -7.12204027]
[45.42192078 -21.93366814]
[50.28187561 -36.11946487]
[61.51424026 -45.90208054]
[58.50347137 -60.59681702]
[55.49270248 -75.29154968]
[42.58524323 -84.01137543]
[39.74123001 -98.95681763]
[48.13379288 -111.20836639]
[45.12302017 -125.90309906]
[34.77323914 -137.86941528]
[39.79848480 -151.89068604]
[36.78771591 -166.58541870]
[33.77694702 -181.28016663]
[30.76617813 -195.97489929]
[18.22176552 -205.97575378]
[18.36352921 -222.01818848]
[31.08271980 -231.79580688]
[46.62226486 -227.80805969]
[53.06155396 -213.11399841]
[45.46091461 -198.98567200]
[48.47168350 -184.29092407]
[51.48245239 -169.59619141]
[54.49322128 -154.90145874]
[64.62765503 -143.98620605]
[59.81775665 -128.91387939]
[62.82852554 -114.21913910]
[75.36297607 -106.25527191]
[78.62565613 -91.39560699]
[70.18743896 -78.30232239]
[73.19820404 -63.60758591]
[76.20897675 -48.91284943]
[90.38346100 -44.33578110]
[100.43062592 -33.20426941]
[103.57781219 -18.44074821]
[98.88186646 -3.98928022]
[87.50872040 6.23806906]
[90.51948547 20.93280411]
[93.53025818 35.62754059]
[105.86846924 48.08414459]
[99.95541382 65.50451660]
[103.23562622 80.14146423]
[109.08503723 82.04748535]
[114.08506012 85.63191986]
[127.82166290 79.60649109]
[141.55825806 73.58105469]
[155.29486084 67.55562592]
[159.55062866 62.41580963]
[164.95614624 60.51191711]
[169.64852905 61.57148743]
[183.59719849 56.05474472]
[197.54586792 50.53800201]
[211.49455261 45.02125931]
[219.16516113 30.93079185]
[234.98847961 28.28466415]
[246.82621765 39.11275864]
[245.59747314 55.10868454]
[232.24482727 64.00173950]
[217.01129150 58.96993256]
[203.06262207 64.48667908]
[189.11393738 70.00341797]
[175.16526794 75.52016449]
[161.32029724 81.29222870]
[147.58369446 87.31765747]
[133.84709167 93.34308624]
[120.11049652 99.36852264]
[115.53127289 112.79101562]
[103.23562622 119.85853577]
[99.95541382 134.49548340]
[104.48760223 149.65364075]
[94.15435791 160.38085938]
[90.87414551 175.01780701]
[87.59392548 189.65475464]
[84.31371307 204.29170227]
[81.03349304 218.92864990]
[77.75328064 233.56559753]
[74.47306061 248.20254517]
[82.69843292 256.84890747]
[85.68074036 268.28002930]
[82.78720093 279.60998535]
[74.85350800 288.03631592]
[63.94689941 291.53292847]
[60.13120270 306.03948975]
[74.27925873 301.05627441]
[87.09547424 308.85015869]
[89.17966461 323.70465088]
[79.00316620 334.72457886]
[64.03002930 333.82730103]
[55.24230576 321.67016602]
[50.11200333 335.76556396]
[44.98170090 349.86093140]
[53.48662567 362.70510864]
[52.80567169 377.91659546]
[43.40934753 389.67129517]
[29.06483841 393.59216309]
[23.93453789 407.68753052]
[18.80423546 421.78292847]
[13.67393303 435.87832642]
[8.54363060 449.97372437]
[3.41332841 464.06909180]
[-1.71697366 478.16448975]
[-6.84727573 492.25988770]
[0.83125097 499.70349121]
[5.56079006 509.25228882]
[6.81951618 519.79498291]
[4.48789835 530.11407471]
[-1.14046335 539.02655029]
[-9.39553642 545.51940918]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 22]
[2 21]
[3 20]
[4 19]
[5 18]
[26 164]
[27 163]
[28 162]
[29 161]
[30 160]
[31 159]
[32 158]
[33 157]
[37 153]
[38 152]
[39 151]
[40 145]
[41 144]
[44 139]
[45 138]
[46 137]
[47 136]
[48 135]
[49 134]
[50 133]
[52 131]
[53 130]
[55 104]
[56 103]
[59 101]
[60 100]
[61 99]
[66 94]
[67 93]
[68 92]
[71 89]
[72 88]
[74 86]
[75 85]
[76 84]
[77 83]
[106 128]
[107 127]
[108 126]
[109 125]
[112 124]
[113 123]
[114 122]
[115 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
