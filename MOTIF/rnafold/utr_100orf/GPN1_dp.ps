%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:53:14 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GPN1)
} def

/sequence { (\
AUUGCGGAAGUUUCUCUACCCAUGCGGUGUCUCUAUGGUCGGGUGGGUGGGGCCAGGAGGAAGAUGGCGGCGUCCGCAGCUGCCGCUGAGCUCCAGGCUUCUGGGGGUCCGCGGCACCCAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 79 0.736234381 ubox
2 114 0.010919104 ubox
2 121 0.007880541 ubox
3 78 0.965527806 ubox
3 113 0.014806922 ubox
3 120 0.010615565 ubox
4 11 0.005267494 ubox
4 77 0.999426409 ubox
4 80 0.003184514 ubox
4 112 0.017124084 ubox
4 119 0.010579127 ubox
5 10 0.005538273 ubox
5 76 0.999487776 ubox
5 103 0.017475137 ubox
5 111 0.017128867 ubox
6 15 0.006141462 ubox
6 75 0.999485509 ubox
6 102 0.017782494 ubox
6 110 0.017128988 ubox
6 118 0.010970857 ubox
6 119 0.006335418 ubox
7 14 0.007308719 ubox
7 74 0.999372136 ubox
7 101 0.017931318 ubox
7 109 0.017111394 ubox
7 117 0.010922998 ubox
7 118 0.006324331 ubox
8 13 0.007496099 ubox
8 73 0.943730662 ubox
8 100 0.017917490 ubox
8 108 0.016839538 ubox
9 15 0.018535782 ubox
9 99 0.017747602 ubox
10 14 0.021375158 ubox
10 68 0.007978444 ubox
10 71 0.970986645 ubox
10 98 0.017514747 ubox
11 58 0.003719352 ubox
11 59 0.004564329 ubox
11 62 0.005814684 ubox
11 67 0.007696124 ubox
11 70 0.957095397 ubox
11 72 0.018060215 ubox
11 97 0.015742298 ubox
11 106 0.006472607 ubox
11 107 0.005166941 ubox
12 51 0.010954097 ubox
12 56 0.004899990 ubox
12 57 0.004373892 ubox
12 58 0.006895113 ubox
12 59 0.004740480 ubox
12 61 0.008060144 ubox
12 62 0.004772578 ubox
12 64 0.003862774 ubox
12 66 0.006297157 ubox
12 67 0.005153177 ubox
12 69 0.772300617 ubox
12 70 0.046417008 ubox
12 96 0.014510381 ubox
12 105 0.006554646 ubox
12 106 0.006224119 ubox
12 107 0.007331694 ubox
13 49 0.003173813 ubox
13 50 0.012444849 ubox
13 51 0.026826995 ubox
13 52 0.022199882 ubox
13 55 0.004885691 ubox
13 56 0.004693042 ubox
13 57 0.007372084 ubox
13 58 0.005969706 ubox
13 60 0.008538102 ubox
13 61 0.005479883 ubox
13 63 0.004196589 ubox
13 64 0.012026497 ubox
13 66 0.006620874 ubox
13 67 0.012589412 ubox
13 69 0.052687529 ubox
13 70 0.081144169 ubox
13 95 0.012090045 ubox
13 104 0.006719667 ubox
13 105 0.006571937 ubox
13 106 0.007622654 ubox
13 107 0.009869884 ubox
14 49 0.013681140 ubox
14 50 0.026543821 ubox
14 51 0.381985140 ubox
14 52 0.198865203 ubox
14 56 0.005685384 ubox
14 57 0.005544453 ubox
14 59 0.008098762 ubox
14 60 0.004828353 ubox
14 63 0.011824107 ubox
14 66 0.010948760 ubox
14 67 0.022772711 ubox
14 69 0.128273756 ubox
14 70 0.030960172 ubox
14 103 0.006716147 ubox
14 104 0.006647927 ubox
14 105 0.007925491 ubox
14 106 0.010091148 ubox
14 107 0.003400961 ubox
15 47 0.015271031 ubox
15 49 0.019510214 ubox
15 50 0.194017869 ubox
15 51 0.773832933 ubox
15 55 0.004820552 ubox
15 56 0.004695260 ubox
15 58 0.007906194 ubox
15 59 0.004042228 ubox
15 62 0.010007734 ubox
15 66 0.018330804 ubox
15 69 0.027078203 ubox
15 103 0.006019221 ubox
15 104 0.007813834 ubox
15 105 0.010072073 ubox
15 106 0.003392756 ubox
16 46 0.018059238 ubox
16 49 0.191468744 ubox
16 50 0.978620664 ubox
16 51 0.033628261 ubox
16 57 0.007348748 ubox
16 103 0.007360965 ubox
16 104 0.010034973 ubox
16 105 0.003392984 ubox
17 45 0.018126598 ubox
17 49 0.980002395 ubox
17 50 0.024384368 ubox
17 56 0.006233926 ubox
17 103 0.009630006 ubox
17 104 0.003271779 ubox
18 44 0.018211990 ubox
18 48 0.998645760 ubox
18 102 0.005160557 ubox
19 43 0.018224956 ubox
19 47 0.999809575 ubox
19 51 0.004366416 ubox
20 42 0.018222780 ubox
20 46 0.999815984 ubox
20 50 0.004379967 ubox
21 41 0.018191786 ubox
21 45 0.999809426 ubox
21 49 0.004384879 ubox
22 44 0.999526359 ubox
22 48 0.004388111 ubox
23 41 0.011105579 ubox
23 43 0.995819263 ubox
23 47 0.004369341 ubox
24 39 0.081647041 ubox
24 40 0.020258983 ubox
25 38 0.084597314 ubox
25 41 0.996084325 ubox
25 43 0.003738026 ubox
25 45 0.004342907 ubox
26 33 0.004535879 ubox
26 34 0.011165660 ubox
26 40 0.994396484 ubox
26 44 0.004146011 ubox
27 31 0.006428910 ubox
27 32 0.005499537 ubox
27 33 0.023351564 ubox
27 36 0.137557908 ubox
27 39 0.862136703 ubox
28 35 0.158481512 ubox
28 37 0.142296140 ubox
28 38 0.354731728 ubox
28 41 0.008091499 ubox
29 34 0.141799072 ubox
29 36 0.184655720 ubox
29 39 0.099967905 ubox
29 40 0.029139270 ubox
30 35 0.177004437 ubox
30 38 0.661895650 ubox
31 37 0.746469253 ubox
31 38 0.233989717 ubox
32 37 0.209616934 ubox
32 38 0.073081995 ubox
33 37 0.078846435 ubox
49 101 0.012969857 ubox
50 100 0.013405723 ubox
51 99 0.019825729 ubox
52 68 0.977379815 ubox
52 71 0.031896817 ubox
52 98 0.021783049 ubox
53 60 0.098055809 ubox
53 67 0.993372232 ubox
53 70 0.032671494 ubox
53 97 0.023139567 ubox
54 59 0.098237639 ubox
54 66 0.993486890 ubox
54 69 0.032663116 ubox
54 96 0.023257756 ubox
55 65 0.974692148 ubox
56 94 0.028007094 ubox
57 93 0.028049098 ubox
58 92 0.028043049 ubox
59 91 0.028010544 ubox
62 87 0.026396526 ubox
63 74 0.010637222 ubox
63 80 0.003482069 ubox
63 86 0.026703486 ubox
64 73 0.015442718 ubox
65 72 0.018042740 ubox
65 85 0.027562187 ubox
66 71 0.020275546 ubox
66 84 0.028110161 ubox
67 77 0.011065765 ubox
67 80 0.003784941 ubox
67 83 0.028113992 ubox
68 72 0.003350608 ubox
68 76 0.011287990 ubox
68 79 0.003782228 ubox
68 82 0.028114223 ubox
69 75 0.011423213 ubox
69 81 0.028386534 ubox
70 74 0.011244238 ubox
70 77 0.004795367 ubox
70 80 0.028545361 ubox
71 76 0.004802969 ubox
71 79 0.028541855 ubox
79 115 0.005732606 ubox
80 114 0.005551056 ubox
80 121 0.048145523 ubox
81 113 0.005307778 ubox
81 116 0.885211184 ubox
81 120 0.036830747 ubox
82 112 0.005243678 ubox
82 115 0.999203245 ubox
82 119 0.017138974 ubox
83 111 0.004487939 ubox
83 114 0.999579401 ubox
84 113 0.999565775 ubox
85 110 0.003728401 ubox
85 112 0.999566580 ubox
86 111 0.998917113 ubox
87 111 0.006904343 ubox
88 109 0.997326914 ubox
88 110 0.024035677 ubox
89 108 0.996912721 ubox
90 108 0.009866548 ubox
91 106 0.999308317 ubox
91 107 0.012465290 ubox
92 105 0.998882981 ubox
92 106 0.010979452 ubox
93 104 0.999527999 ubox
93 105 0.009665507 ubox
94 103 0.999565090 ubox
94 104 0.007514916 ubox
95 102 0.998671394 ubox
96 101 0.994303272 ubox
96 102 0.009799923 ubox
97 101 0.018667432 ubox
101 121 0.012792406 ubox
102 120 0.013406641 ubox
103 119 0.013718084 ubox
104 118 0.013731490 ubox
104 119 0.017202485 ubox
105 117 0.013658686 ubox
105 118 0.017234108 ubox
105 119 0.003963573 ubox
106 117 0.017229814 ubox
106 118 0.003982973 ubox
107 115 0.021629508 ubox
107 117 0.003982271 ubox
108 114 0.021685055 ubox
108 116 0.003838093 ubox
109 113 0.020935271 ubox
113 119 0.004545125 ubox
114 118 0.004485661 ubox
2 79 0.9500000 lbox
3 78 0.9500000 lbox
4 77 0.9500000 lbox
5 76 0.9500000 lbox
6 75 0.9500000 lbox
7 74 0.9500000 lbox
8 73 0.9500000 lbox
10 71 0.9500000 lbox
11 70 0.9500000 lbox
12 69 0.9500000 lbox
15 51 0.9500000 lbox
16 50 0.9500000 lbox
17 49 0.9500000 lbox
18 48 0.9500000 lbox
19 47 0.9500000 lbox
20 46 0.9500000 lbox
21 45 0.9500000 lbox
22 44 0.9500000 lbox
23 43 0.9500000 lbox
25 41 0.9500000 lbox
26 40 0.9500000 lbox
27 39 0.9500000 lbox
30 38 0.9500000 lbox
31 37 0.9500000 lbox
52 68 0.9500000 lbox
53 67 0.9500000 lbox
54 66 0.9500000 lbox
55 65 0.9500000 lbox
81 116 0.9500000 lbox
82 115 0.9500000 lbox
83 114 0.9500000 lbox
84 113 0.9500000 lbox
85 112 0.9500000 lbox
86 111 0.9500000 lbox
88 109 0.9500000 lbox
89 108 0.9500000 lbox
91 106 0.9500000 lbox
92 105 0.9500000 lbox
93 104 0.9500000 lbox
94 103 0.9500000 lbox
95 102 0.9500000 lbox
96 101 0.9500000 lbox
showpage
end
%%EOF
