%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:53:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGUCCUAUCUGCAGUCGGCUACUUUCAGUGGCAGAAGAGGCCACAUCUGCUUCCUGUAGGCCCUCUGGGCAGAAGCAUGCGCUGGUGUCUCCUCCUGAUCUGGGCCCAGGGGCUGAGGCAGGCUCCCCUCGCCUCAGGAAUGAUGACAGGCACAAUAGAAACAACGGGGAACAUUU\
) } def
/len { sequence length } bind def

/coor [
[136.22871399 432.22375488]
[140.93650818 417.89590454]
[149.06028748 405.18939209]
[160.08938599 394.90301514]
[173.33050537 387.68331909]
[169.64141846 373.14404297]
[165.95234680 358.60476685]
[162.26327515 344.06549072]
[149.36064148 332.19021606]
[154.46846008 314.51367188]
[150.52192688 300.04214478]
[146.57537842 285.57064819]
[133.46400452 273.92623901]
[138.25729370 256.16183472]
[134.05453491 241.76263428]
[129.85177612 227.36343384]
[125.64901733 212.96424866]
[113.70700073 210.59436035]
[103.85488129 203.31909180]
[98.00737762 192.47583008]
[97.33343506 180.10237122]
[102.02304077 168.55416870]
[111.23928833 160.05583191]
[107.55020905 145.51655579]
[103.86113739 130.97726440]
[100.17206573 116.43798828]
[92.89698792 132.67803955]
[78.58106995 145.67007446]
[64.21974182 150.00045776]
[49.85840988 154.33084106]
[35.49708176 158.66122437]
[21.13574982 162.99159241]
[15.13703632 177.43284607]
[1.23535562 184.59365845]
[-14.00534344 181.09292603]
[-23.38887024 168.58358765]
[-22.48460770 152.97218323]
[-11.71952343 141.62991333]
[3.82344007 139.91226196]
[16.80537033 148.63026428]
[31.16670036 144.29988098]
[45.52803040 139.96951294]
[59.88936234 135.63912964]
[74.25069427 131.30874634]
[74.31725311 123.80904388]
[74.45037079 108.80963898]
[74.51692963 101.30992889]
[60.23471451 96.72534943]
[45.95250320 92.14076233]
[31.67028999 87.55617523]
[16.80187035 93.58192444]
[2.89166713 85.58906555]
[0.61039943 69.70903015]
[11.70805931 58.12363434]
[27.67147255 59.72019196]
[36.25487518 73.27396393]
[50.53708649 77.85855103]
[64.81929779 82.44313812]
[79.10150909 87.02771759]
[90.89978027 77.76484680]
[89.83573151 62.80263901]
[88.77168274 47.84042740]
[87.70762634 32.87821198]
[83.96729279 24.50963020]
[86.75987244 17.64142799]
[85.96154022 2.66268754]
[85.16320801 -12.31605244]
[84.36487579 -27.29479408]
[83.56653595 -42.27353287]
[82.76820374 -57.25227356]
[68.84470367 -48.49206161]
[49.98781967 -47.53463364]
[29.83201218 -56.21945572]
[12.55936813 -74.86923218]
[7.34576321 -88.93402100]
[2.13215756 -102.99880981]
[-10.83093357 -113.04322815]
[-8.34596729 -129.25300598]
[7.03073692 -134.95291138]
[19.48094368 -124.27938080]
[16.19694710 -108.21241760]
[21.41055298 -94.14762878]
[26.62415886 -80.08283234]
[41.36442184 -82.86216736]
[41.09819794 -97.85980225]
[30.59947586 -109.99060822]
[33.67940521 -125.73524475]
[47.97532654 -133.01577759]
[62.52063370 -126.24720001]
[66.15740967 -110.62179565]
[56.09583664 -98.12602997]
[56.36205673 -83.12838745]
[63.75569153 -81.86975098]
[85.93659210 -78.09382629]
[91.15019989 -92.15861511]
[84.32893372 -106.41505432]
[89.66510773 -121.29123688]
[103.99285889 -127.96138763]
[118.81179810 -122.46823883]
[125.33010101 -108.07076263]
[119.68057251 -93.31072998]
[105.21498871 -86.94501495]
[100.00138092 -72.88022614]
[97.74694824 -58.05060577]
[98.54528046 -43.07186508]
[99.34361267 -28.09312630]
[100.14194489 -13.11438560]
[100.94027710 1.86435497]
[101.73860931 16.84309578]
[102.66983795 31.81416130]
[103.73389435 46.77637482]
[104.79794312 61.73858643]
[105.86199951 76.70079803]
[118.13653564 85.32260895]
[132.57246399 81.24780273]
[147.00839233 77.17298889]
[161.44430542 73.09818268]
[175.88023376 69.02336884]
[190.31616211 64.94856262]
[204.71536255 60.74580002]
[219.07669067 56.41542053]
[233.43801880 52.08504105]
[244.26783752 39.77053070]
[260.29208374 43.25704193]
[265.02636719 58.95794678]
[253.60049438 70.72150421]
[237.76840210 66.44637299]
[223.40707397 70.77674866]
[209.04573059 75.10713196]
[203.53216553 80.06407166]
[194.39097595 79.38448334]
[179.95504761 83.45929718]
[165.51911926 87.53410339]
[151.08319092 91.60891724]
[136.64727783 95.68372345]
[122.21134949 99.75853729]
[114.71134949 112.74891663]
[118.40042114 127.28820038]
[122.08949280 141.82748413]
[125.77857208 156.36676025]
[142.79168701 162.56146240]
[152.61486816 177.58377075]
[151.48808289 195.34016418]
[140.04821777 208.76148987]
[144.25097656 223.16067505]
[148.45373535 237.55987549]
[152.65649414 251.95906067]
[163.58615112 258.84619141]
[166.77879333 270.94955444]
[161.04690552 281.62408447]
[164.99343872 296.09561157]
[168.93997192 310.56713867]
[179.74568176 317.64715576]
[182.72300720 329.80526733]
[176.80256653 340.37640381]
[180.49163818 354.91567993]
[184.18070984 369.45498657]
[187.86978149 383.99426270]
[202.95121765 384.02761841]
[217.55033875 387.81130981]
[230.74943542 395.10754395]
[241.71879578 405.45761108]
[249.76889038 418.21090698]
[254.39366150 432.56576538]
[255.30239868 447.61984253]
[252.43800354 462.42681885]
[245.98049927 476.05587769]
[236.33583069 487.65032959]
[224.11026001 496.48129272]
[210.07229614 501.99371338]
[195.10438538 503.84100342]
[180.14743042 501.90707397]
[166.14161682 496.31350708]
[153.96737671 487.41189575]
[144.38998413 475.76181030]
[138.01148987 462.09561157]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 158]
[6 157]
[7 156]
[8 155]
[10 152]
[11 151]
[12 150]
[14 147]
[15 146]
[16 145]
[17 144]
[23 140]
[24 139]
[25 138]
[26 137]
[28 44]
[29 43]
[30 42]
[31 41]
[32 40]
[47 59]
[48 58]
[49 57]
[50 56]
[60 113]
[61 112]
[62 111]
[63 110]
[65 109]
[66 108]
[67 107]
[68 106]
[69 105]
[70 104]
[74 83]
[75 82]
[76 81]
[84 92]
[85 91]
[94 103]
[95 102]
[114 136]
[115 135]
[116 134]
[117 133]
[118 132]
[119 131]
[120 129]
[121 128]
[122 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
