%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:42:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGCUACACAAGUUUGAUGUUUGUGUCUUCUUCUCCAAGGCCAAGAAAUUAUCUCCAUAGGAGGCAACAGUACUAUGCAUGUUAUGAAUUGUGUCUCCUUGGUCAGUGAUAAAGAAAAUGGGAAUAUUGCCACAGCACCUGGAUUCAUGAUUGGGCAGACACCUCCUCCAGCAC\
) } def
/len { sequence length } bind def

/coor [
[92.89864349 214.43624878]
[95.43286896 195.22094727]
[95.70059967 180.22332764]
[95.96833801 165.22572327]
[96.23607635 150.22811890]
[96.50380707 135.23049927]
[82.22971344 130.62072754]
[73.67487335 142.94203186]
[65.12003326 155.26335144]
[56.56518936 167.58465576]
[48.01035309 179.90596008]
[39.45551300 192.22727966]
[30.90067291 204.54858398]
[35.18216324 219.58863831]
[28.74727440 233.84086609]
[14.63436031 240.57582092]
[-0.49289089 236.61346436]
[-9.49185371 223.82469177]
[-8.11349392 208.24797058]
[2.99137020 197.23815918]
[18.57936096 195.99374390]
[27.13420105 183.67243958]
[35.68904114 171.35112000]
[44.24388123 159.02981567]
[52.79871750 146.70851135]
[61.35355759 134.38719177]
[69.90840149 122.06587982]
[66.31713867 97.43526459]
[78.59841156 78.62764740]
[70.94435883 65.72743225]
[63.29030991 52.82721710]
[55.63625717 39.92700195]
[47.98220825 27.02678871]
[31.72842407 18.40440559]
[32.16730118 0.87468255]
[24.28421211 -11.88685894]
[8.93314266 -13.17171669]
[-2.58323050 -23.13296890]
[-5.98556376 -37.79203033]
[-0.17321697 -51.47978592]
[-8.05630398 -64.24132538]
[-15.93939114 -77.00286865]
[-23.82247925 -89.76441193]
[-31.70556641 -102.52594757]
[-31.61043739 -87.52625275]
[-36.85869217 -73.47435760]
[-46.76338577 -62.20949936]
[-60.02811050 -55.20613098]
[-74.91664886 -53.38091660]
[-89.48025513 -56.97275543]
[-101.81271362 -65.51152039]
[-110.29984283 -77.87957001]
[-113.83075714 -92.45806885]
[-111.94331360 -107.33884430]
[-104.88454437 -120.57417297]
[-93.57837677 -130.43168640]
[-79.50466156 -135.62113953]
[-64.50549316 -135.46330261]
[-50.54409790 -129.97882080]
[-39.44562149 -119.88259888]
[-43.67160797 -134.27499390]
[-47.89759827 -148.66738892]
[-52.12358475 -163.05978394]
[-56.34957504 -177.45217896]
[-60.57556152 -191.84457397]
[-64.80155182 -206.23696899]
[-69.02754211 -220.62936401]
[-74.46482086 -228.01042175]
[-73.19804382 -235.31646729]
[-77.16647339 -249.78199768]
[-81.13489532 -264.24752808]
[-85.10332489 -278.71304321]
[-95.92024231 -285.77725220]
[-98.91554260 -297.93167114]
[-93.00986481 -308.51184082]
[-96.71945953 -323.04589844]
[-100.42905426 -337.57995605]
[-104.13865662 -352.11401367]
[-117.14667511 -361.50396729]
[-117.77175140 -377.53482056]
[-105.53437042 -387.90911865]
[-89.82200623 -384.66857910]
[-82.68784332 -370.29904175]
[-89.60459137 -355.82363892]
[-85.89499664 -341.28958130]
[-82.18540192 -326.75549316]
[-78.47579956 -312.22143555]
[-65.55640411 -300.36511230]
[-70.63778687 -282.68148804]
[-66.66936493 -268.21594238]
[-62.70093918 -253.75041199]
[-58.73251343 -239.28488159]
[-54.63514328 -224.85534668]
[-50.40915680 -210.46295166]
[-46.18316650 -196.07055664]
[-41.95718002 -181.67816162]
[-37.73118973 -167.28576660]
[-33.50520325 -152.89337158]
[-29.27921486 -138.50097656]
[-25.05322647 -124.10858917]
[-18.94402504 -110.40903473]
[-11.06093693 -97.64749908]
[-3.17785001 -84.88595581]
[4.70523691 -72.12441254]
[12.58832455 -59.36287308]
[27.42996597 -58.43354416]
[39.01552963 -48.82944489]
[42.76820374 -34.07238388]
[37.04575348 -19.76994514]
[44.92884064 -7.00840473]
[56.64324570 -3.91163492]
[63.30989075 6.68352890]
[60.88241959 19.37273979]
[68.53646851 32.27295303]
[76.19052124 45.17316437]
[83.84457397 58.07337952]
[91.49861908 70.97359467]
[106.83434296 70.53650665]
[120.41161346 77.68023682]
[128.73707581 90.56674194]
[129.66862488 105.88037872]
[143.19970703 112.35414886]
[156.73078918 118.82792664]
[170.26187134 125.30169678]
[185.91122437 116.19758606]
[203.73960876 118.26676178]
[216.65998840 130.49752808]
[219.64976501 147.87661743]
[233.40328979 153.86331177]
[247.15681458 159.84999084]
[260.91033936 165.83668518]
[274.66387939 171.82337952]
[283.81423950 172.38449097]
[288.60797119 178.04162598]
[302.25244141 184.27285767]
[315.89691162 190.50408936]
[329.59646606 196.61328125]
[343.35000610 202.59997559]
[350.00360107 202.23170471]
[355.06832886 204.89823914]
[357.48156738 209.05364990]
[371.01263428 215.52742004]
[387.31204224 213.72143555]
[396.80642700 227.09260559]
[389.72882080 241.88583374]
[373.36001587 242.88308716]
[364.53887939 229.05850220]
[351.00778198 222.58473206]
[337.36331177 216.35350037]
[323.60977173 210.36680603]
[316.19781494 210.58093262]
[309.66567993 204.14855957]
[296.02120972 197.91734314]
[282.37673950 191.68611145]
[268.67718506 185.57690430]
[254.92366028 179.59022522]
[241.17012024 173.60353088]
[227.41659546 167.61683655]
[213.66307068 161.63014221]
[204.19787598 169.28965759]
[192.30093384 172.20289612]
[180.22592163 169.75457764]
[170.28730774 162.35110474]
[164.41682434 151.35464478]
[163.78810120 138.83277893]
[150.25701904 132.35900879]
[136.72593689 125.88523865]
[123.19484711 119.41146088]
[120.67911530 125.20466614]
[116.76635742 130.67558289]
[111.50141907 135.49824524]
[111.23368073 150.49584961]
[110.96595001 165.49345398]
[110.69821167 180.49107361]
[110.43048096 195.48867798]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 175]
[3 174]
[4 173]
[5 172]
[6 171]
[7 27]
[8 26]
[9 25]
[10 24]
[11 23]
[12 22]
[13 21]
[29 117]
[30 116]
[31 115]
[32 114]
[33 113]
[35 110]
[36 109]
[40 105]
[41 104]
[42 103]
[43 102]
[44 101]
[60 100]
[61 99]
[62 98]
[63 97]
[64 96]
[65 95]
[66 94]
[67 93]
[69 92]
[70 91]
[71 90]
[72 89]
[75 87]
[76 86]
[77 85]
[78 84]
[121 168]
[122 167]
[123 166]
[124 165]
[128 159]
[129 158]
[130 157]
[131 156]
[132 155]
[134 154]
[135 153]
[136 152]
[137 150]
[138 149]
[141 148]
[142 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
