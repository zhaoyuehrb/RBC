%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:23:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUUCCUUCCGCCGGCUGCGCACUCACAGUGAUCCCUGCGCGCGUCUCCUGCUCGGGUCAGUGCGCCGCGCUGCGCUGGGCGCCAUGGCGCUCCCCGGAGCCCGGGCUCGCGGCUGGGCGGCAGCAGCCAGAGCGGCCCAGAGGCGCCGCCGCGUGGAGAACGCAGGAGGGUCCCCGAGUCCUG\
) } def
/len { sequence length } bind def

/coor [
[209.90521240 448.54501343]
[222.68051147 440.35012817]
[219.66104126 425.65716553]
[216.64155579 410.96423340]
[213.62208557 396.27127075]
[210.60260010 381.57833862]
[207.58312988 366.88537598]
[204.56364441 352.19244385]
[200.80386353 337.67126465]
[196.31341553 323.35919189]
[191.82296753 309.04708862]
[187.33251953 294.73501587]
[182.84207153 280.42291260]
[178.23092651 266.14926147]
[173.49938965 251.91505432]
[168.76786804 237.68084717]
[164.03633118 223.44664001]
[152.67941284 213.80975342]
[155.66864014 198.27349854]
[150.93710327 184.03929138]
[146.20558167 169.80508423]
[141.47404480 155.57087708]
[136.36943054 150.20352173]
[136.78501892 141.05613708]
[132.29457092 126.74405670]
[127.80412292 112.43196869]
[99.10800171 126.57206726]
[78.68631744 107.86109924]
[63.68845749 108.11444092]
[50.02093124 116.08371735]
[37.16479874 108.56247711]
[22.16693687 108.81581879]
[7.16907597 109.06916046]
[-7.82878447 109.32250214]
[-22.82664490 109.57584381]
[-37.82450485 109.82918549]
[-48.77203751 120.91021729]
[-63.98561096 120.95349121]
[-74.48221588 110.44840240]
[-89.48007202 110.70174408]
[-104.47793579 110.95508575]
[-112.51059723 124.12626648]
[-126.39894867 130.84321594]
[-141.71125793 128.96258545]
[-153.56141663 119.08446503]
[-158.16810608 104.36094666]
[-154.06132507 89.49024200]
[-142.55154419 79.21753693]
[-127.31148529 76.82081604]
[-113.20420837 83.06486511]
[-104.73127747 95.95722961]
[-89.73342133 95.70388794]
[-74.73555756 95.45054626]
[-64.59973907 84.59693146]
[-49.39338684 84.12635803]
[-38.07784653 94.83132935]
[-23.07998657 94.57798004]
[-8.08212662 94.32463837]
[6.91573381 94.07129669]
[21.91359520 93.81795502]
[36.91145325 93.56461334]
[49.50623322 85.61346436]
[63.43511581 93.11657715]
[78.43297577 92.86323547]
[90.66077423 75.10723877]
[115.48554230 73.77365875]
[114.22027588 58.82711792]
[112.95500946 43.88057709]
[111.68974304 28.93403625]
[110.42447662 13.98749542]
[109.15921021 -0.95904619]
[99.81509399 -9.87079144]
[99.08006287 -22.36052704]
[106.80357361 -31.68820190]
[105.79093170 -46.65398026]
[102.08235168 -55.02617645]
[104.88973999 -61.88068771]
[104.12999725 -76.86143494]
[103.37026215 -91.84217834]
[102.61052704 -106.82292938]
[101.85078430 -121.80368042]
[101.09104919 -136.78442383]
[92.66471100 -150.17500305]
[99.74745941 -163.27781677]
[98.98771667 -178.25857544]
[87.54326630 -188.82560730]
[86.98619080 -204.02903748]
[97.13076782 -214.87445068]
[96.37103271 -229.85519409]
[87.01322174 -243.32232666]
[94.24105072 -258.04272461]
[110.61914825 -258.87335205]
[119.29913330 -244.95967102]
[111.35178375 -230.61492920]
[112.11151886 -215.63418579]
[123.30126190 -205.87072754]
[124.28515625 -190.68893433]
[113.96846771 -179.01831055]
[114.72820282 -164.03755188]
[123.10019684 -151.71850586]
[116.07180023 -137.54415894]
[116.83153534 -122.56341553]
[117.59127045 -107.58266449]
[118.35100555 -92.60192108]
[119.11074829 -77.62117004]
[119.87048340 -62.64042282]
[120.75670624 -47.66662598]
[121.76935577 -32.70084763]
[132.32342529 -18.69184303]
[124.10575104 -2.22431207]
[125.37101746 12.72222900]
[126.63628387 27.66876984]
[127.90155029 42.61531067]
[129.16682434 57.56185532]
[130.43208313 72.50839233]
[143.16174316 80.44285583]
[157.13803101 74.99644470]
[171.11431885 69.55004120]
[185.09060669 64.10363007]
[199.06690979 58.65722275]
[209.11587524 46.43721771]
[223.78392029 49.02527237]
[237.76020813 43.57886505]
[240.00662231 28.38514137]
[249.56150818 16.36017990]
[263.85464478 10.73863029]
[279.04125977 13.03266335]
[291.03619385 22.62519455]
[296.61291504 36.93588257]
[294.27130127 52.11522293]
[284.64120483 64.08004761]
[270.31311035 69.61188507]
[255.14118958 67.22269440]
[243.20661926 57.55515289]
[229.23033142 63.00156021]
[220.18101501 74.83200073]
[204.51330566 72.63351440]
[190.53701782 78.07991791]
[176.56072998 83.52632904]
[162.58444214 88.97273254]
[148.60815430 94.41914368]
[142.11621094 107.94152069]
[146.60665894 122.25360870]
[151.09710693 136.56568909]
[155.70825195 150.83935547]
[160.43978882 165.07356262]
[165.17131042 179.30776978]
[169.90284729 193.54197693]
[181.59819031 204.19699097]
[178.27053833 218.71511841]
[183.00207520 232.94932556]
[187.73359680 247.18351746]
[192.46513367 261.41772461]
[198.15382385 268.59310913]
[197.15415955 275.93246460]
[201.64460754 290.24456787]
[206.13505554 304.55664062]
[210.62550354 318.86874390]
[215.11595154 333.18081665]
[223.12594604 320.49856567]
[237.72233582 317.04232788]
[250.56890869 324.78610229]
[254.32878113 339.30722046]
[246.85464478 352.31250000]
[232.41510010 356.37442017]
[219.25660706 349.17294312]
[222.27607727 363.86590576]
[225.29556274 378.55883789]
[228.31503296 393.25180054]
[231.33451843 407.94473267]
[234.35398865 422.63769531]
[237.37347412 437.33065796]
[252.34513855 439.82336426]
[265.40332031 447.55953979]
[274.78204346 459.49285889]
[279.21286011 474.00946045]
[278.09655762 489.14611816]
[271.58413696 502.85571289]
[260.55630493 513.28411865]
[246.50453186 519.02099609]
[231.32916260 519.29046631]
[217.08255005 514.05609131]
[205.69145203 504.02575684]
[198.69639587 490.55603027]
[197.04342651 475.46853638]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 172]
[3 171]
[4 170]
[5 169]
[6 168]
[7 167]
[8 166]
[9 159]
[10 158]
[11 157]
[12 156]
[13 155]
[14 153]
[15 152]
[16 151]
[17 150]
[19 148]
[20 147]
[21 146]
[22 145]
[24 144]
[25 143]
[26 142]
[28 64]
[29 63]
[31 61]
[32 60]
[33 59]
[34 58]
[35 57]
[36 56]
[39 53]
[40 52]
[41 51]
[66 115]
[67 114]
[68 113]
[69 112]
[70 111]
[71 110]
[74 108]
[75 107]
[77 106]
[78 105]
[79 104]
[80 103]
[81 102]
[82 101]
[84 99]
[85 98]
[88 95]
[89 94]
[116 141]
[117 140]
[118 139]
[119 138]
[120 137]
[122 135]
[123 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
