%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:52:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGUUGGGCCGCGGUCGCGGGGCCGUCUCAGGCUGCCGUCCCGCCCCUCCCGUCCGGCCGCCGCCGCCGCCACCGCCGCCACCGCCUGGGGGUUGGUUGAGGCGGACGGCGGGGUCCGGGCCGGAGUACGUCGUUCCCGCUGCGCUAGGGGAAGCGGGCAGUCAGAAAAAUGGGUAAGAAGAGUCGAGUAAAAACUCAGAAAUCUGGCACUGGUGCUACAGCAACUGUGUCACCAAAGGAAAUCUUGAACCUGA\
CCAGUGAGCUGCUGC\
) } def
/len { sequence length } bind def

/coor [
[71.99019623 399.36614990]
[74.40413666 380.13537598]
[74.57801819 365.13638306]
[74.75190735 350.13739014]
[64.55954742 342.28842163]
[60.68033600 329.81918335]
[64.74007416 317.20324707]
[75.47349548 309.10217285]
[75.82124329 294.10620117]
[76.16899109 279.11022949]
[76.42980957 264.11251831]
[76.60369110 249.11351013]
[76.77758026 234.11451721]
[76.86452484 219.11477661]
[76.86452484 204.11477661]
[76.86452484 189.11477661]
[76.86452484 174.11477661]
[62.70422363 169.16644287]
[53.36159134 180.90165710]
[44.01895905 192.63687134]
[34.67632675 204.37208557]
[25.40186882 216.16125488]
[16.19590187 228.00398254]
[6.98993587 239.84671021]
[-2.21603084 251.68943787]
[-0.00314631 267.33804321]
[-9.57026577 279.91760254]
[-25.24138832 281.96493530]
[-37.71911240 272.26535034]
[-39.60062790 256.57345581]
[-29.76966476 244.19897461]
[-14.05875778 242.48345947]
[-4.85279083 230.64073181]
[4.35317564 218.79801941]
[13.55914211 206.95529175]
[15.17727280 199.77171326]
[22.94111252 195.02944946]
[32.28374481 183.29423523]
[41.62637711 171.55902100]
[50.96901321 159.82380676]
[49.83980179 144.86637878]
[38.84120941 134.66682434]
[27.84261513 124.46726990]
[16.84402275 114.26770782]
[5.84542799 104.06815338]
[-4.83020782 111.79006195]
[-20.78920364 112.15635681]
[-36.78244019 102.22514343]
[-50.23713303 95.59406281]
[-63.69182587 88.96298218]
[-77.14651489 82.33190155]
[-92.94543457 83.17142487]
[-100.94109344 70.60485840]
[-114.39578247 63.97377396]
[-127.85047913 57.34269333]
[-141.30517578 50.71161270]
[-154.75985718 44.08053207]
[-168.21455383 37.44945145]
[-181.70745850 30.89646912]
[-195.23811340 24.42180443]
[-204.29364014 23.54776192]
[-208.88743591 17.79285622]
[-222.34213257 11.16177464]
[-235.79682922 4.53069353]
[-249.25151062 -2.10038733]
[-262.70620728 -8.73146820]
[-276.16088867 -15.36254978]
[-289.65380859 -21.91553307]
[-303.18447876 -28.39019585]
[-316.71511841 -34.86486053]
[-330.24578857 -41.33952332]
[-343.77642822 -47.81418991]
[-357.41763306 -54.05260468]
[-371.16525269 -60.05287933]
[-384.91284180 -66.05316162]
[-398.66046143 -72.05343628]
[-412.44259644 -77.97393036]
[-426.25885010 -83.81443787]
[-441.98260498 -82.06108093]
[-450.69281006 -94.14334869]
[-464.50906372 -99.98385620]
[-478.32528687 -105.82437134]
[-493.67202759 -101.14915466]
[-506.81365967 -110.35115814]
[-507.66906738 -126.37139130]
[-495.58206177 -136.92050171]
[-479.82473755 -133.90611267]
[-472.48477173 -119.64060974]
[-458.66854858 -113.80010223]
[-444.85229492 -107.95959473]
[-430.11679077 -110.13069916]
[-420.41833496 -97.63067627]
[-406.60211182 -91.79016876]
[-399.24423218 -92.07930756]
[-392.66018677 -85.80104065]
[-378.91256714 -79.80076599]
[-365.16494751 -73.80048370]
[-351.41735840 -67.80020905]
[-348.04772949 -68.71709442]
[-344.06991577 -68.06946564]
[-340.21411133 -65.59042358]
[-337.30178833 -61.34484863]
[-323.77111816 -54.87018204]
[-310.24044800 -48.39551926]
[-296.70980835 -41.92085648]
[-283.17913818 -35.44618988]
[-275.81576538 -35.39395905]
[-269.52981567 -28.81724167]
[-256.07513428 -22.18616104]
[-242.62043762 -15.55508041]
[-229.16574097 -8.92399883]
[-215.71104431 -2.29291821]
[-202.25636292 4.33816290]
[-188.76345825 10.89114571]
[-175.23278809 17.36581039]
[-167.86943054 17.41804314]
[-161.58348083 23.99475861]
[-148.12878418 30.62583923]
[-134.67408752 37.25691986]
[-121.21939850 43.88800049]
[-107.76470184 50.51908112]
[-94.31001282 57.15016174]
[-79.47346497 55.83633423]
[-70.51543427 68.87720490]
[-57.06074524 75.50828552]
[-43.60605240 82.13936615]
[-30.15135765 88.77044678]
[-23.40490723 85.49395752]
[-32.03340149 73.22411346]
[-40.84817123 61.08739853]
[-33.18255997 48.19404984]
[-18.30941772 50.14074707]
[-14.22044849 64.57305145]
[-9.91200352 78.94097137]
[-3.16555285 75.66448212]
[-0.05821759 60.98986435]
[3.04911757 46.31524277]
[6.15645266 31.64062309]
[9.26378822 16.96600342]
[7.98143768 7.95923471]
[12.49313641 2.13973737]
[15.77037525 -12.49787521]
[19.04761505 -27.13548851]
[16.60792542 -43.91297913]
[32.05437469 -50.90179825]
[43.04606628 -37.99370193]
[33.68522644 -23.85824776]
[30.40798759 -9.22063541]
[27.13074875 5.41697693]
[23.93840790 20.07333946]
[20.83107185 34.74795914]
[17.72373772 49.42258072]
[14.61640263 64.09719849]
[11.50906754 78.77182007]
[16.04498291 93.06956482]
[27.04357719 103.26911926]
[38.04217148 113.46867371]
[49.04076385 123.66822815]
[60.03936005 133.86778259]
[57.92908478 84.31281281]
[94.26297760 63.02358246]
[123.56255341 81.53264618]
[137.31016541 75.53237152]
[151.05776978 69.53208923]
[164.80537415 63.53181458]
[178.55297852 57.53153610]
[192.30058289 51.53125763]
[194.11302185 36.34368896]
[203.22392273 24.18276024]
[217.10632324 18.25440407]
[231.99258423 20.05866623]
[243.89682007 29.01157379]
[257.64443970 23.01129723]
[271.39202881 17.01101875]
[285.13964844 11.01074123]
[298.88723755 5.01046371]
[297.39828491 -10.04404354]
[300.63629150 -24.82141113]
[308.28399658 -37.87390137]
[319.59222412 -47.92276764]
[333.45303345 -53.98352051]
[348.50854492 -55.46239090]
[363.28372192 -52.21449280]
[376.33108521 -44.55802536]
[386.37237549 -33.24309158]
[392.42385864 -19.37820816]
[393.89263916 -4.32171965]
[390.63482666 10.45129490]
[382.96963501 23.49352455]
[371.64794922 33.52722549]
[357.77902222 39.56939697]
[342.72155762 41.02809143]
[327.95071411 37.76039886]
[314.91363525 30.08645248]
[304.88751221 18.75806999]
[291.13992310 24.75834656]
[277.39230347 30.75862503]
[263.64471436 36.75890350]
[249.89709473 42.75918198]
[248.36720276 57.57555389]
[239.56793213 69.71759033]
[225.78141785 75.86560822]
[210.66938782 74.27701569]
[198.30085754 65.27886200]
[184.55325317 71.27914429]
[170.80564880 77.27941895]
[157.05804443 83.27970123]
[143.31044006 89.27997589]
[129.56283569 95.28025055]
[137.33816528 102.45562744]
[143.02993774 112.82477570]
[145.62254333 125.73834991]
[158.91989136 132.67956543]
[172.21723938 139.62078857]
[185.51458740 146.56201172]
[198.81193542 153.50323486]
[214.62606812 153.03019714]
[222.32824707 165.77874756]
[235.62559509 172.71997070]
[248.92294312 179.66119385]
[262.22030640 186.60241699]
[275.51763916 193.54364014]
[292.35681152 195.51315308]
[295.12579346 212.23944092]
[279.81973267 219.53053284]
[268.57641602 206.84098816]
[255.27906799 199.89976501]
[241.98171997 192.95854187]
[228.68437195 186.01731873]
[215.38702393 179.07609558]
[200.52401733 180.04562378]
[191.87072754 166.80058289]
[178.57337952 159.85935974]
[165.27603149 152.91813660]
[151.97868347 145.97691345]
[138.68133545 139.03570557]
[133.67794800 144.62283325]
[118.66778564 161.38426208]
[127.02843475 173.83816528]
[135.38906860 186.29206848]
[150.70722961 185.17419434]
[164.52508545 191.87960815]
[173.12568665 204.60458374]
[174.19554138 219.92617798]
[167.44685364 233.72293091]
[154.69497681 242.28361511]
[139.37010193 243.30543518]
[125.59456635 236.51353455]
[117.07389832 223.73487854]
[116.10012054 208.40689087]
[122.93517303 194.65270996]
[114.57453156 182.19880676]
[106.21389008 169.74490356]
[91.86452484 174.11477661]
[91.86452484 189.11477661]
[91.86452484 204.11477661]
[91.86452484 219.11477661]
[94.98486328 227.66052246]
[91.77657318 234.28840637]
[91.60268402 249.28739929]
[91.42880249 264.28637695]
[94.44986725 272.86773682]
[91.16495514 279.45797729]
[90.81721497 294.45394897]
[90.46946716 309.44992065]
[102.78363037 321.89907837]
[102.27601624 339.06384277]
[89.75090027 350.31127930]
[89.57701111 365.31027222]
[89.40312958 380.30926514]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 270]
[3 269]
[4 268]
[8 265]
[9 264]
[10 263]
[11 261]
[12 260]
[13 259]
[14 257]
[15 256]
[16 255]
[17 254]
[18 40]
[19 39]
[20 38]
[21 37]
[22 35]
[23 34]
[24 33]
[25 32]
[41 159]
[42 158]
[43 157]
[44 156]
[45 155]
[48 127]
[49 126]
[50 125]
[51 124]
[53 122]
[54 121]
[55 120]
[56 119]
[57 118]
[58 117]
[59 115]
[60 114]
[62 113]
[63 112]
[64 111]
[65 110]
[66 109]
[67 108]
[68 106]
[69 105]
[70 104]
[71 103]
[72 102]
[73 98]
[74 97]
[75 96]
[76 95]
[77 93]
[78 92]
[80 90]
[81 89]
[82 88]
[135 154]
[136 153]
[137 152]
[138 151]
[139 150]
[141 149]
[142 148]
[143 147]
[162 209]
[163 208]
[164 207]
[165 206]
[166 205]
[167 204]
[172 199]
[173 198]
[174 197]
[175 196]
[176 195]
[212 236]
[213 235]
[214 234]
[215 233]
[216 232]
[218 230]
[219 229]
[220 228]
[221 227]
[222 226]
[238 253]
[239 252]
[240 251]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
