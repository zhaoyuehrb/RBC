%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:57:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGCUGUCAAGAUGCUUCUGGCCAUGGUCCUUACCUCUGCCCUGCUCCUGUGCUCCGUGGCAGGCCAGGGGUGUCCAACCUUGGCGGGGAUCCUGGACAUCAACUUCCUCA\
) } def
/len { sequence length } bind def

/coor [
[102.04252625 335.01202393]
[102.41387939 319.87463379]
[107.68254852 305.67886353]
[117.27703857 293.96456909]
[130.15660095 286.00244141]
[126.81879425 271.37850952]
[123.48097992 256.75460815]
[120.14316559 242.13069153]
[109.76776886 231.44422913]
[114.24025726 216.26834106]
[110.90244293 201.64442444]
[100.00637054 197.73449707]
[92.32154083 188.91596985]
[89.88854218 177.35119629]
[93.44055176 165.95310974]
[102.18791199 157.65156555]
[99.67531586 142.86351013]
[97.16271973 128.07543945]
[94.65013123 113.28737640]
[85.87844086 102.39935303]
[90.56180573 89.22521973]
[88.04920959 74.43715668]
[85.53662109 59.64908981]
[83.02402496 44.86102295]
[73.08442688 32.55187988]
[78.58051300 18.70838547]
[76.06791687 3.92032075]
[73.55532837 -10.86774445]
[58.34807587 -18.11400795]
[50.48712540 -32.82567596]
[52.86775970 -49.16807556]
[64.36666870 -60.79067230]
[61.44031143 -75.50244904]
[58.51395798 -90.21423340]
[55.58760452 -104.92601013]
[52.66124725 -119.63778687]
[49.73489380 -134.34956360]
[46.80854034 -149.06135559]
[43.88218307 -163.77313232]
[33.60127258 -175.79866028]
[38.70693588 -189.79084778]
[35.78058243 -204.50263977]
[32.85422516 -219.21441650]
[29.92787170 -233.92619324]
[27.00151634 -248.63796997]
[24.07516289 -263.34976196]
[9.28304768 -267.11221313]
[-2.40619755 -276.92669678]
[-8.67166519 -290.84457397]
[-8.26934147 -306.10238647]
[-1.27910948 -319.67068481]
[10.91111660 -328.85552979]
[25.88095665 -331.83322144]
[40.65814209 -328.01254272]
[52.30864716 -318.15206909]
[58.51925659 -304.20965576]
[58.05685043 -288.95355225]
[51.01324081 -275.41287231]
[38.78694153 -266.27609253]
[41.71329498 -251.56433105]
[44.63965225 -236.85253906]
[47.56600571 -222.14076233]
[50.49235916 -207.42898560]
[53.41871643 -192.71720886]
[63.49031448 -181.74395752]
[58.59396362 -166.69947815]
[61.52031708 -151.98770142]
[64.44667053 -137.27592468]
[67.37302399 -122.56414795]
[70.29938507 -107.85236359]
[73.22573853 -93.14058685]
[76.15209198 -78.42881012]
[79.07844543 -63.71702576]
[91.73838043 -59.23481750]
[100.57347107 -48.97629929]
[103.17038727 -35.57824707]
[98.73784637 -22.55581856]
[88.34339142 -13.38033772]
[90.85598755 1.40772736]
[93.36857605 16.19579315]
[103.12845612 27.44719505]
[97.81208801 42.34843063]
[100.32468414 57.13649750]
[102.83728027 71.92456055]
[105.34986877 86.71262360]
[114.12155914 97.60064697]
[109.43819427 110.77478027]
[111.95079041 125.56284332]
[114.46337891 140.35090637]
[116.97597504 155.13897705]
[132.78968811 165.36373901]
[136.19828796 183.56320190]
[125.52635956 198.30661011]
[128.86416626 212.93052673]
[139.47831726 224.66299438]
[134.76708984 238.79287720]
[138.10490417 253.41679382]
[141.44271851 268.04071045]
[144.78053284 282.66464233]
[159.83924866 284.25003052]
[173.56622314 290.64132690]
[184.47245789 301.14529419]
[191.37489319 314.62249756]
[193.52484131 329.61102295]
[190.68907166 344.48507690]
[183.17518616 357.63119507]
[171.79824829 367.62338257]
[157.79234314 373.37777710]
[142.67669678 374.27020264]
[128.09098816 370.20379639]
[115.61732483 361.61972046]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 99]
[6 98]
[7 97]
[8 96]
[10 94]
[11 93]
[16 90]
[17 89]
[18 88]
[19 87]
[21 85]
[22 84]
[23 83]
[24 82]
[26 80]
[27 79]
[28 78]
[32 73]
[33 72]
[34 71]
[35 70]
[36 69]
[37 68]
[38 67]
[39 66]
[41 64]
[42 63]
[43 62]
[44 61]
[45 60]
[46 59]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
