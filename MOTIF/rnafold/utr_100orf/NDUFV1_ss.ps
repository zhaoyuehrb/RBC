%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:09:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGUUGAAGGGGCGCAGCGAUACCGGUGCGCGGCGCUGGCGUCGGGCGCGUGACGUCUUUCCUGCGCGCCACCUAGCGUCUCUAUCGCGCCAGUUCCUCAGCCUCAGUGCUAUGAAGGUGACAGCGUGAGGUGACCCAUCUGGCCCGCCGCGAUGCUGGCAACACGGCGGCUGCUCGGCUGGUCGCUUCCCGCGCGGGUAUCUGUGCGUUUCAGCGGCGACACGACAGCACCCAAGAAAACCUCAUUUGGCU\
) } def
/len { sequence length } bind def

/coor [
[106.76880646 306.43521118]
[105.28701019 291.50860596]
[96.33027649 279.60791016]
[102.66645813 265.11090088]
[101.18466187 250.18428040]
[99.70286560 235.25764465]
[84.04918671 227.03596497]
[76.41613770 210.91239929]
[80.04217529 193.28477478]
[93.65587616 181.27450562]
[91.80533600 166.38908386]
[89.95478821 151.50367737]
[75.30479431 148.28224182]
[67.38049316 161.01823425]
[59.45619202 173.75422668]
[51.53189468 186.49021912]
[43.60759354 199.22621155]
[42.88662720 215.03097534]
[29.59350014 221.74975586]
[21.66919899 234.48574829]
[21.66949654 250.88490295]
[7.33420563 258.84927368]
[-6.58975410 250.18583679]
[-5.77860689 233.80676270]
[8.93320847 226.56144714]
[16.85750771 213.82545471]
[17.01167679 198.93165588]
[30.87160301 191.30191040]
[38.79590225 178.56591797]
[46.72020340 165.82992554]
[54.64450073 153.09393311]
[62.56880188 140.35794067]
[54.25453949 127.87303162]
[39.44802475 130.27450562]
[24.64150810 132.67597961]
[9.83499241 135.07745361]
[-4.97152424 137.47892761]
[-19.77803993 139.88040161]
[-34.58455658 142.28187561]
[-49.39107132 144.68334961]
[-57.33502197 149.13505554]
[-64.39546967 147.02177429]
[-79.23055267 149.23992920]
[-84.59735107 153.02470398]
[-90.22721100 153.48312378]
[-94.45955658 151.32476807]
[-109.34497070 153.17530823]
[-124.23037720 155.02586365]
[-139.11579895 156.87640381]
[-154.00120544 158.72694397]
[-168.88661194 160.57749939]
[-183.77203369 162.42803955]
[-198.63340759 164.46253967]
[-213.46850586 166.68070984]
[-222.66571045 179.53320312]
[-238.27066040 182.03543091]
[-251.02520752 172.70285034]
[-253.36230469 157.07231140]
[-243.89538574 144.41714478]
[-228.24102783 142.24543762]
[-215.68666077 151.84562683]
[-200.85157776 149.62745667]
[-197.35502625 146.41102600]
[-191.80911255 145.33949280]
[-185.62257385 147.54261780]
[-170.73716736 145.69207764]
[-155.85174561 143.84153748]
[-140.96633911 141.99099731]
[-126.08092499 140.14044189]
[-111.19551086 138.28990173]
[-96.31010437 136.43936157]
[-81.44871521 134.40484619]
[-66.61363220 132.18669128]
[-51.79254532 129.87683105]
[-36.98603058 127.47535706]
[-22.17951393 125.07388306]
[-7.37299776 122.67240906]
[7.43351841 120.27093506]
[22.24003410 117.86946106]
[37.04655075 115.46798706]
[51.85306931 113.06651306]
[52.37533188 92.37219238]
[61.10936356 74.37320709]
[75.97534943 62.04684067]
[93.94111633 57.16522598]
[91.35669708 42.38954544]
[88.77227783 27.61386299]
[86.18785858 12.83818054]
[83.60343933 -1.93750167]
[80.56344604 -16.62622070]
[77.07079315 -31.21393204]
[73.57813263 -45.80164337]
[70.08547211 -60.38935471]
[66.59281158 -74.97706604]
[51.55729675 -76.75433350]
[38.06237030 -83.55572510]
[27.72809410 -94.54312897]
[21.78768921 -108.37720490]
[20.94038963 -123.38065338]
[25.26918983 -137.74157715]
[34.23315048 -149.73225403]
[46.73492050 -157.91706848]
[43.24225998 -172.50477600]
[39.74959946 -187.09248352]
[36.25693893 -201.68020630]
[32.76427841 -216.26791382]
[29.27161980 -230.85562134]
[24.24317932 -238.44764709]
[25.82715797 -245.64533997]
[22.51518822 -260.27514648]
[19.20322037 -274.90493774]
[15.89124966 -289.53472900]
[1.08656526 -293.41799927]
[-10.20985889 -303.74511719]
[-15.40218639 -318.14297485]
[-13.29725838 -333.30307007]
[-4.37877274 -345.74166870]
[9.30386829 -352.60052490]
[24.60649490 -352.30352783]
[38.01267242 -344.91888428]
[46.44176483 -332.14355469]
[47.95682526 -316.91320801]
[42.20970154 -302.72769165]
[30.52104378 -292.84667969]
[33.83301163 -278.21688843]
[37.14498138 -263.58709717]
[40.45695114 -248.95732117]
[43.85933304 -234.34828186]
[47.35198975 -219.76057434]
[50.84465027 -205.17286682]
[54.33731079 -190.58514404]
[57.82997131 -175.99743652]
[61.32263184 -161.40972900]
[76.17559814 -159.77432251]
[89.59801483 -153.14349365]
[99.96131897 -142.30021667]
[106.00077820 -128.53990173]
[106.96979523 -113.51555634]
[102.73215485 -99.03927612]
[93.78079224 -86.86368561]
[81.18051910 -78.46972656]
[84.67317963 -63.88201523]
[88.16584015 -49.29430389]
[91.65850067 -34.70659256]
[95.15116119 -20.11887932]
[104.98200226 -31.44824409]
[119.97383118 -30.95315361]
[129.03579712 -18.99987602]
[125.46391296 -4.43135929]
[111.90063477 1.97470558]
[98.37912750 -4.52192068]
[100.96354675 10.25376129]
[103.54796600 25.02944374]
[106.13238525 39.80512619]
[108.71680450 54.58080673]
[122.79447937 59.75950623]
[134.33798218 50.18100357]
[145.88146973 40.60250092]
[157.42497253 31.02399635]
[158.63919067 15.26641941]
[170.69425964 5.04629898]
[186.43811035 6.42705059]
[196.53021240 18.58949852]
[194.98307800 34.31787872]
[182.71461487 44.28082275]
[167.00346375 42.56748962]
[155.45997620 52.14599228]
[143.91647339 61.72449875]
[132.37298584 71.30300140]
[138.38314819 86.50868225]
[138.06288147 101.87699890]
[152.60629272 105.54981995]
[167.14968872 109.22263336]
[181.69308472 112.89544678]
[190.75143433 111.96255493]
[196.39308167 116.70467377]
[210.88993835 120.55708313]
[225.38679504 124.40949249]
[236.25242615 113.64448547]
[250.95045471 109.78897095]
[265.50811768 113.78153229]
[276.04226685 124.45334625]
[279.79507446 138.86799622]
[294.29193115 142.72041321]
[308.78878784 146.57281494]
[323.28564453 150.42523193]
[337.78250122 154.27763367]
[352.27935791 158.13005066]
[365.26962280 147.27680969]
[382.00366211 146.32467651]
[395.86322021 155.45144653]
[401.48526001 170.88786316]
[416.02865601 174.56068420]
[430.57205200 178.23350525]
[445.11544800 181.90631104]
[459.65884399 185.57913208]
[474.20223999 189.25195312]
[488.74566650 192.92475891]
[504.36697388 187.93408203]
[516.31597900 199.16587830]
[512.30053711 215.06584167]
[496.45144653 219.27745056]
[485.07284546 207.46815491]
[470.52944946 203.79534912]
[455.98605347 200.12252808]
[441.44265747 196.44970703]
[426.89923096 192.77690125]
[412.35583496 189.10408020]
[397.81243896 185.43125916]
[388.40991211 194.88790894]
[375.46041870 198.49934387]
[362.31103516 195.22126770]
[352.41549683 185.80465698]
[348.42697144 172.62690735]
[333.93008423 168.77449036]
[319.43322754 164.92208862]
[304.93637085 161.06967163]
[290.43951416 157.21726990]
[275.94265747 153.36485291]
[265.52914429 164.01493835]
[251.08689880 168.04949951]
[236.46766663 164.28857422]
[225.62260437 153.64520264]
[221.53439331 138.90635681]
[207.03753662 135.05393982]
[192.54067993 131.20153809]
[178.02026367 127.43884277]
[163.47686768 123.76602936]
[148.93347168 120.09321594]
[134.39007568 116.42040253]
[125.25061798 136.03195190]
[104.84020233 149.65313721]
[106.69074249 164.53854370]
[108.54129028 179.42395020]
[120.15693665 183.95811462]
[128.70100403 192.94078064]
[132.60284424 204.63194275]
[131.18296814 216.80241394]
[124.77049255 227.15882874]
[114.62949371 233.77584839]
[116.11128998 248.70248413]
[117.59308624 263.62911987]
[126.65581512 276.59744263]
[120.21363831 290.02679443]
[121.69543457 304.95343018]
[135.48069763 311.87948608]
[143.31340027 325.17053223]
[142.69418335 340.58547974]
[133.82061768 353.20541382]
[119.52422333 359.00341797]
[104.36694336 356.12936401]
[93.18539429 345.50030518]
[89.54758453 330.50796509]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 245]
[2 244]
[4 242]
[5 241]
[6 240]
[10 234]
[11 233]
[12 232]
[13 32]
[14 31]
[15 30]
[16 29]
[17 28]
[19 26]
[20 25]
[33 81]
[34 80]
[35 79]
[36 78]
[37 77]
[38 76]
[39 75]
[40 74]
[42 73]
[43 72]
[46 71]
[47 70]
[48 69]
[49 68]
[50 67]
[51 66]
[52 65]
[53 62]
[54 61]
[85 155]
[86 154]
[87 153]
[88 152]
[89 151]
[90 145]
[91 144]
[92 143]
[93 142]
[94 141]
[102 133]
[103 132]
[104 131]
[105 130]
[106 129]
[107 128]
[109 127]
[110 126]
[111 125]
[112 124]
[156 169]
[157 168]
[158 167]
[159 166]
[171 230]
[172 229]
[173 228]
[174 227]
[176 226]
[177 225]
[178 224]
[183 219]
[184 218]
[185 217]
[186 216]
[187 215]
[188 214]
[192 209]
[193 208]
[194 207]
[195 206]
[196 205]
[197 204]
[198 203]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
