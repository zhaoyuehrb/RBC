%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:53:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCACAGUGGUGUCCGAGAAGUCAGGCACGUAGCUCAGCGGCGGCCGCGGCGCGUGCGUCUGUGCCUCUGCGCGGGUCUCCUGGUCCUUCUGCCAUCAUGCCGAUGUUCAUCGUAAACACCAACGUGCCCCGCGCCUCCGUGCCGGACGGGUUCCUCUCCGAGCUCACCCAGCAGCUGGCGCAGGCCACCGGCAAGC\
) } def
/len { sequence length } bind def

/coor [
[186.66107178 246.37602234]
[179.32391357 233.29298401]
[176.76179504 218.51341248]
[179.26712036 203.72412109]
[186.55398560 190.61299133]
[197.79072571 180.67640686]
[211.69488525 175.04841614]
[226.68209839 174.37167358]
[213.46029663 167.28759766]
[200.23849487 160.20353699]
[187.01669312 153.11947632]
[173.79490662 146.03540039]
[160.57310486 138.95133972]
[141.35066223 140.98757935]
[130.96617126 123.71784210]
[117.52626038 117.05684662]
[104.08634949 110.39584351]
[90.59402466 103.84167480]
[77.05012512 97.39475250]
[63.50622940 90.94783020]
[49.91161346 84.60855865]
[36.26713181 78.37733459]
[22.62265205 72.14610291]
[13.50570202 71.42578888]
[8.81233692 65.70625305]
[-4.73156118 59.25932693]
[-18.27545929 52.81240082]
[-31.81935692 46.36547852]
[-42.11725235 56.21237946]
[-55.13116074 61.93913651]
[-69.28852844 62.87602997]
[-82.88622284 58.93080521]
[-94.29540253 50.59729385]
[-102.15666199 38.89370346]
[-105.54196930 25.23824310]
[-104.06420135 11.27728558]
[-117.50411224 4.61628580]
[-130.94401550 -2.04471326]
[-146.74476624 -1.24033618]
[-154.71244812 -13.82466602]
[-168.15234375 -20.48566437]
[-177.24185181 -21.49487877]
[-181.75138855 -27.36045074]
[-195.08392334 -34.23384857]
[-208.41645813 -41.10724640]
[-221.74897766 -47.98064423]
[-235.08151245 -54.85404205]
[-255.14537048 -52.97700119]
[-264.90277100 -69.66356659]
[-278.44668579 -76.11048889]
[-291.99057007 -82.55741119]
[-307.77658081 -81.50244141]
[-315.94290161 -93.95877075]
[-329.48681641 -100.40569305]
[-343.03070068 -106.85262299]
[-356.57461548 -113.29954529]
[-370.11849976 -119.74646759]
[-383.66241455 -126.19338989]
[-396.26748657 -117.41800690]
[-411.57284546 -116.13684082]
[-425.46142578 -122.69451141]
[-434.19726562 -135.32704163]
[-435.43045044 -150.63635254]
[-428.82928467 -164.50430298]
[-416.16943359 -173.20048523]
[-400.85632324 -174.38568115]
[-387.00912476 -167.74107361]
[-378.35266113 -155.05403137]
[-377.21548462 -139.73728943]
[-363.67156982 -133.29035950]
[-350.12768555 -126.84344482]
[-336.58377075 -120.39651489]
[-323.03988647 -113.94959259]
[-309.49600220 -107.50267029]
[-294.67874146 -109.01876831]
[-285.54367065 -96.10131073]
[-271.99975586 -89.65438843]
[-258.45587158 -83.20746613]
[-249.16032410 -87.48213196]
[-238.83042908 -85.89567566]
[-230.92008972 -78.73392487]
[-228.20811462 -68.18657684]
[-214.87557983 -61.31317520]
[-201.54306030 -54.43977737]
[-188.21052551 -47.56637955]
[-174.87799072 -40.69298172]
[-161.49134827 -33.92557144]
[-148.05143738 -27.26457214]
[-133.21200562 -28.54538918]
[-124.28302002 -15.48462009]
[-110.84310913 -8.82362080]
[-97.40320587 -2.16262150]
[-85.63428497 -12.76749039]
[-70.66122437 -18.05900764]
[-54.76533127 -17.19960213]
[-40.38058853 -10.29126644]
[-29.72092819 1.63553643]
[-24.43952179 16.77547264]
[-25.37243271 32.82157898]
[-11.82853508 39.26850510]
[1.71536255 45.71542740]
[15.25926018 52.16235352]
[28.85387802 58.50162506]
[42.49835587 64.73284912]
[56.14283752 70.96407318]
[63.54109955 70.88294983]
[69.95315552 77.40393066]
[83.49704742 83.85085297]
[97.04094696 90.29778290]
[105.10334015 90.64463806]
[110.74735260 96.95594025]
[124.18725586 103.61693573]
[137.62716675 110.27793884]
[147.72857666 106.20819092]
[158.18583679 108.33190155]
[165.58804321 115.70964050]
[167.65716553 125.72953796]
[180.87896729 132.81361389]
[194.10076904 139.89767456]
[207.32257080 146.98173523]
[220.54437256 154.06581116]
[233.76617432 161.14987183]
[241.57031250 160.16758728]
[248.02941895 163.06636047]
[251.56748962 168.27644348]
[266.02511597 172.27354431]
[280.48275757 176.27066040]
[295.84573364 172.49050903]
[306.05102539 183.33952332]
[320.50866699 187.33663940]
[335.87164307 183.55648804]
[346.07693481 194.40550232]
[360.53454590 198.40261841]
[374.99218750 202.39971924]
[389.44982910 206.39682007]
[403.90744019 210.39393616]
[414.02407837 201.02316284]
[427.34487915 197.90234375]
[440.36334229 201.74302673]
[449.70675659 211.43862915]
[453.00976562 224.38041687]
[467.40216064 228.60639954]
[481.79455566 232.83238220]
[497.21557617 229.29646301]
[507.24746704 240.30603027]
[521.63983154 244.53201294]
[535.39135742 237.21533203]
[549.92706299 241.70611572]
[556.81768799 254.86116028]
[571.21008301 259.08715820]
[585.60247803 263.31314087]
[599.99487305 267.53912354]
[614.38726807 271.76510620]
[628.77966309 275.99111938]
[642.52886963 268.19790649]
[657.73919678 272.48989868]
[665.38665771 286.32077026]
[660.93402100 301.48486328]
[647.02313232 308.98562622]
[631.90692139 304.37295532]
[624.55364990 290.38351440]
[610.16125488 286.15750122]
[595.76885986 281.93151855]
[581.37646484 277.70553589]
[566.98406982 273.47955322]
[552.59167480 269.25357056]
[539.68280029 276.59494019]
[525.02667236 272.51422119]
[517.41387939 258.92440796]
[503.02145386 254.69842529]
[488.62988281 258.53662109]
[477.56857300 247.22477722]
[463.17617798 242.99879456]
[448.78378296 238.77281189]
[436.11706543 249.20697021]
[419.56137085 250.04736328]
[405.62664795 240.76533508]
[399.91033936 224.85156250]
[385.45269775 220.85446167]
[370.99508667 216.85734558]
[356.53744507 212.86024475]
[342.07980347 208.86314392]
[327.75094604 212.92918396]
[316.51153564 201.79426575]
[302.05392456 197.79716492]
[287.72503662 201.86320496]
[276.48565674 190.72828674]
[262.02801514 186.73118591]
[247.57037354 182.73406982]
[257.94869995 193.56413269]
[264.12866211 207.23191833]
[265.40487671 222.17753601]
[261.63174438 236.69522095]
[253.23986816 249.12809753]
[241.18701172 258.05718994]
[226.84877014 262.46343994]
[211.86157227 261.84393311]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 122]
[9 121]
[10 120]
[11 119]
[12 118]
[13 117]
[15 113]
[16 112]
[17 111]
[18 109]
[19 108]
[20 107]
[21 105]
[22 104]
[23 103]
[25 102]
[26 101]
[27 100]
[28 99]
[36 92]
[37 91]
[38 90]
[40 88]
[41 87]
[43 86]
[44 85]
[45 84]
[46 83]
[47 82]
[49 78]
[50 77]
[51 76]
[53 74]
[54 73]
[55 72]
[56 71]
[57 70]
[58 69]
[125 189]
[126 188]
[127 187]
[129 185]
[130 184]
[132 182]
[133 181]
[134 180]
[135 179]
[136 178]
[141 174]
[142 173]
[143 172]
[145 170]
[146 169]
[149 166]
[150 165]
[151 164]
[152 163]
[153 162]
[154 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
