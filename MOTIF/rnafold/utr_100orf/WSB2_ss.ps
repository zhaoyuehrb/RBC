%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:28:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCUCCGCCCGCGCCCACCGCCAUGUGACGGGAAGCAGCUGAUGGCCUCUCCGGGCGGCGGCGGCGGCCUGGCCGGGGCGGGCGGCGCGGGGGCGGCAUGAGGGCCCGCGGCCCGGGGGGCUGAGGCGCCCGCCGCCUGCCGCGGGGGCCGCUCGCGUCCUCCAUGGAGGCCGGAGAGGAACCGCUGCUGCUGGCCGAACUCAAGCCCGGGCGCCCCCACCAGUUUGAUUGGAAGUCCAGCUGUGAAACCUGGAG\
CGUCGCCU\
) } def
/len { sequence length } bind def

/coor [
[67.70627594 556.68212891]
[68.61029816 571.74353027]
[65.58438873 586.52551270]
[58.83486176 600.02014160]
[48.82191849 611.30749512]
[36.22824860 619.61779785]
[21.91251564 624.38458252]
[6.85078764 625.28277588]
[-7.93000126 622.25115967]
[-21.42207146 615.49645996]
[-32.70551300 605.47912598]
[-41.01100159 592.88226318]
[-45.77225494 578.56469727]
[-46.66463852 563.50262451]
[-43.62731552 548.72302246]
[-36.86737442 535.23352051]
[-26.84571457 523.95397949]
[-14.24563217 515.65338135]
[0.07377741 510.89764404]
[15.13619423 510.01104736]
[18.15003204 495.31695557]
[13.12771225 481.29461670]
[23.47999191 469.33047485]
[26.49382973 454.63638306]
[29.50766754 439.94226074]
[32.52150345 425.24816895]
[24.13150024 412.99484253]
[26.97863579 398.05001831]
[39.88791275 389.33288574]
[42.90175247 374.63876343]
[45.91558838 359.94467163]
[48.92942429 345.25054932]
[37.95202255 330.57165527]
[41.28011703 312.22106934]
[57.25254822 301.98614502]
[59.91584778 287.22448730]
[62.57914352 272.46279907]
[65.24243927 257.70114136]
[67.90573883 242.93946838]
[70.56903839 228.17781067]
[73.23233795 213.41613770]
[75.80775452 198.63888550]
[78.29520416 183.84657288]
[69.47319794 171.90052795]
[71.78510284 156.86358643]
[84.37502289 147.69125366]
[86.86247253 132.89894104]
[73.29496765 123.27608490]
[65.61515045 108.52153778]
[65.51618195 91.88823700]
[73.01988220 77.04335022]
[86.47191620 67.25972748]
[83.80861664 52.49805832]
[81.14531708 37.73638916]
[71.08068848 25.52926826]
[76.43528748 11.63043594]
[73.77198792 -3.13123226]
[71.10868835 -17.89290047]
[68.44539642 -32.65456772]
[65.78209686 -47.41623688]
[63.11879730 -62.17790604]
[60.45549774 -76.93957520]
[57.79220200 -91.70124054]
[55.12890244 -106.46290588]
[52.46560669 -121.22457886]
[49.80230713 -135.98625183]
[47.13900757 -150.74790955]
[44.30023956 -165.47683716]
[41.28640366 -180.17094421]
[38.27256393 -194.86505127]
[25.36328888 -203.58218384]
[22.51615143 -218.52703857]
[30.90615654 -230.78033447]
[27.89231873 -245.47444153]
[24.87848091 -260.16854858]
[21.86464500 -274.86267090]
[0.56293994 -277.40200806]
[-13.35340214 -303.70898438]
[-18.59536362 -317.76324463]
[-23.83732796 -331.81747437]
[-29.07929039 -345.87173462]
[-34.32125092 -359.92596436]
[-39.56321716 -373.98022461]
[-44.80517960 -388.03445435]
[-50.04714203 -402.08871460]
[-55.28910446 -416.14294434]
[-60.86404037 -430.06848145]
[-66.76879120 -443.85739136]
[-72.67354584 -457.64627075]
[-78.57830048 -471.43518066]
[-84.56499481 -485.18872070]
[-90.63340759 -498.90637207]
[-96.70182800 -512.62402344]
[-102.77024841 -526.34173584]
[-108.83866882 -540.05938721]
[-114.90708923 -553.77703857]
[-120.97550201 -567.49468994]
[-124.50725555 -569.89239502]
[-126.87284851 -572.97149658]
[-128.00117493 -576.28796387]
[-127.97052765 -579.41967773]
[-126.98896790 -582.01245117]
[-132.39779663 -596.00335693]
[-137.80662537 -609.99420166]
[-143.21546936 -623.98510742]
[-148.70744324 -637.94354248]
[-154.28237915 -651.86907959]
[-166.59445190 -661.80505371]
[-164.14163208 -676.49627686]
[-169.71656799 -690.42181396]
[-175.29151917 -704.34735107]
[-180.86645508 -718.27282715]
[-186.44139099 -732.19836426]
[-192.01632690 -746.12390137]
[-203.51635742 -758.58123779]
[-194.72938538 -773.08038330]
[-178.36437988 -768.65057373]
[-178.09080505 -751.69879150]
[-172.51586914 -737.77331543]
[-166.94093323 -723.84777832]
[-161.36599731 -709.92224121]
[-155.79106140 -695.99676514]
[-150.21612549 -682.07122803]
[-138.30281067 -673.13128662]
[-140.35685730 -657.44396973]
[-134.78192139 -643.51849365]
[-129.39608765 -638.49334717]
[-129.22459412 -629.39392090]
[-123.81575775 -615.40307617]
[-118.40692902 -601.41217041]
[-112.99809265 -587.42132568]
[-107.25784302 -573.56311035]
[-101.18942261 -559.84545898]
[-95.12100220 -546.12780762]
[-89.05258179 -532.41009521]
[-82.98416901 -518.69244385]
[-76.91574860 -504.97479248]
[-70.84732819 -491.25714111]
[-65.28556824 -486.42742920]
[-64.78939819 -477.33993530]
[-58.88464355 -463.55102539]
[-52.97988892 -449.76214600]
[-47.07513428 -435.97323608]
[-44.56143188 -434.80392456]
[-42.35154724 -432.58468628]
[-40.84179306 -429.42352295]
[-40.38312912 -425.56784058]
[-41.23485565 -421.38491821]
[-35.99289322 -407.33065796]
[-30.75093269 -393.27642822]
[-25.50897026 -379.22216797]
[-20.26700592 -365.16793823]
[-15.02504444 -351.11367798]
[-9.78308105 -337.05944824]
[-4.54111862 -323.00518799]
[0.70084405 -308.95095825]
[8.03880119 -307.40032959]
[22.71471596 -304.29913330]
[30.05267334 -302.74853516]
[40.53231049 -313.48059082]
[51.01194382 -324.21264648]
[61.49158096 -334.94473267]
[65.02071381 -350.95962524]
[80.73415375 -355.65213013]
[92.46726990 -344.19500732]
[88.15003204 -328.37432861]
[72.22364807 -324.46508789]
[61.74401093 -313.73303223]
[51.26437378 -303.00094604]
[40.78474045 -292.26889038]
[36.55875015 -277.87649536]
[39.57258987 -263.18237305]
[42.58642578 -248.48828125]
[45.60026169 -233.79417419]
[58.13637543 -225.83293152]
[61.40216064 -210.97393799]
[52.96667099 -197.87889099]
[55.98051071 -183.18478394]
[58.99434662 -168.49067688]
[62.39020920 -165.17474365]
[63.75920105 -159.70127869]
[61.90067673 -153.41120911]
[64.56397247 -138.64953613]
[67.22727203 -123.88787842]
[69.89057159 -109.12620544]
[72.55387115 -94.36454010]
[75.21716309 -79.60286713]
[77.88046265 -64.84120178]
[80.54376221 -50.07953262]
[83.20706177 -35.31786728]
[85.87036133 -20.55619812]
[88.53365326 -5.79453039]
[91.19695282 8.96713734]
[101.07108307 20.11840630]
[95.90699005 35.07309341]
[98.57028198 49.83476257]
[101.23358154 64.59642792]
[115.84307098 68.31512451]
[127.58341980 77.77187347]
[134.32846069 91.25409698]
[134.85670471 106.32017517]
[148.71490479 112.06043243]
[162.57308960 117.80068207]
[176.43128967 123.54093170]
[190.28947449 129.28118896]
[204.14767456 135.02143860]
[221.39317322 127.11798096]
[238.62997437 134.23928833]
[245.04383850 151.41007996]
[259.03469849 156.81892395]
[273.02557373 162.22775269]
[289.13668823 159.16766357]
[299.63592529 171.76521301]
[293.72259521 187.06109619]
[277.47979736 189.32025146]
[267.61672974 176.21862793]
[253.62586975 170.80979919]
[239.63499451 165.40095520]
[230.48347473 172.14985657]
[219.09436035 173.67343140]
[208.26751709 169.48092651]
[200.72068787 160.50119019]
[198.40742493 148.87962341]
[184.54922485 143.13937378]
[170.69104004 137.39912415]
[156.83283997 131.65887451]
[142.97463989 125.91862488]
[129.11645508 120.17837524]
[121.68484497 128.01252747]
[112.23838806 133.24389648]
[101.65478516 135.38638306]
[99.16733551 150.17869568]
[108.06484222 162.96432495]
[105.33148956 177.93040466]
[93.08752441 186.33401489]
[90.60007477 201.12632751]
[92.26034546 210.07464600]
[87.99400330 216.07943726]
[85.33070374 230.84109497]
[82.66741180 245.60276794]
[80.00411224 260.36444092]
[77.34081268 275.12609863]
[74.67751312 289.88778687]
[72.01421356 304.64944458]
[80.54024506 312.87857056]
[84.01435852 324.08218384]
[81.68788910 335.45693970]
[74.24874878 344.21438599]
[63.62353134 348.26440430]
[60.60969543 362.95849609]
[57.59585953 377.65261841]
[54.58201981 392.34671021]
[63.01750565 405.44177246]
[59.75172424 420.30075073]
[47.21561050 428.26199341]
[44.20177460 442.95611572]
[41.18793488 457.65020752]
[38.17409897 472.34432983]
[42.98085022 487.41766357]
[32.84413910 498.33078003]
[29.83030128 513.02490234]
[43.32758331 519.76922607]
[54.61875916 529.77777100]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 261]
[21 260]
[23 258]
[24 257]
[25 256]
[26 255]
[29 252]
[30 251]
[31 250]
[32 249]
[35 244]
[36 243]
[37 242]
[38 241]
[39 240]
[40 239]
[41 238]
[42 236]
[43 235]
[46 232]
[47 231]
[52 197]
[53 196]
[54 195]
[56 193]
[57 192]
[58 191]
[59 190]
[60 189]
[61 188]
[62 187]
[63 186]
[64 185]
[65 184]
[66 183]
[67 182]
[68 179]
[69 178]
[70 177]
[73 174]
[74 173]
[75 172]
[76 171]
[78 156]
[79 155]
[80 154]
[81 153]
[82 152]
[83 151]
[84 150]
[85 149]
[86 148]
[87 143]
[88 142]
[89 141]
[90 140]
[91 138]
[92 137]
[93 136]
[94 135]
[95 134]
[96 133]
[97 132]
[102 131]
[103 130]
[104 129]
[105 128]
[106 126]
[107 125]
[109 123]
[110 122]
[111 121]
[112 120]
[113 119]
[114 118]
[159 170]
[160 169]
[161 168]
[162 167]
[201 228]
[202 227]
[203 226]
[204 225]
[205 224]
[206 223]
[209 218]
[210 217]
[211 216]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
