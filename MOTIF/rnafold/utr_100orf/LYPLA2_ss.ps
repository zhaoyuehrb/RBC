%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:08:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAGUUCCGGCGGGGGCGGCCGAGGGGGAAGAGUGUGUCUGCGGGAGAAAGAGGAGAAUCGCCCAAGCGGCCUCGGAAGUCCCAGGGAGUGGAGGCCCCCGCCGUGGAGCCGUGUGGUGUAUGUGUGGUAACACCAUGUCUGUGCCCCUGCUCACCGAUGCUGCCACCGUGUCUGGAGCUGAGCGGGAAACGGCCGCGGUUAUUUUUUUACAUGGACUUG\
) } def
/len { sequence length } bind def

/coor [
[97.87262726 137.54246521]
[85.26537323 134.59556580]
[74.40492249 127.54730988]
[66.57881165 117.23328400]
[62.71482468 104.87622833]
[47.75235748 103.81576538]
[32.78989029 102.75530243]
[17.82742310 101.69483948]
[2.86495566 100.63437653]
[-12.11102009 99.78575134]
[-27.09750366 99.14913177]
[-42.08398819 98.51251221]
[-57.07047272 97.87589264]
[-72.05696106 97.23928070]
[-87.04344177 96.60266113]
[-102.02993011 95.96604156]
[-117.01641083 95.32942200]
[-132.00289917 94.69280243]
[-143.58836365 105.10504150]
[-158.77772522 104.24593353]
[-168.63279724 93.13678741]
[-183.61927795 92.50016785]
[-198.60577393 91.86354828]
[-209.86547852 107.35160828]
[-228.04409790 112.87102509]
[-245.73207092 106.36159515]
[-255.83363342 90.62785339]
[-270.83364868 90.62785339]
[-285.83364868 90.62785339]
[-300.83364868 90.62785339]
[-308.57003784 103.82236481]
[-321.78485107 111.32340240]
[-336.87963867 111.20356750]
[-349.80123901 103.59517670]
[-357.13024902 90.62785339]
[-372.13024902 90.62785339]
[-381.29095459 103.01282501]
[-395.81799316 107.57557678]
[-410.07751465 102.76626587]
[-418.66802979 90.62785339]
[-433.66802979 90.62785339]
[-448.66802979 90.62785339]
[-463.66802979 90.62785339]
[-478.66653442 90.84011078]
[-493.66052246 91.26459503]
[-508.65451050 91.68907928]
[-522.23022461 99.81381226]
[-535.17132568 92.43977356]
[-550.16534424 92.86425781]
[-557.39459229 106.41539764]
[-570.43939209 114.52276611]
[-585.79064941 115.00552368]
[-599.31909180 107.73381805]
[-607.38549805 94.66368866]
[-607.82012939 79.31095123]
[-600.50610352 65.80540466]
[-587.41076660 57.77997208]
[-572.05670166 57.39345551]
[-558.57415771 64.74983215]
[-550.58978271 77.87026978]
[-535.59582520 77.44578552]
[-523.09259033 69.35141754]
[-509.07901001 76.69508362]
[-494.08499146 76.27060699]
[-479.09100342 75.84612274]
[-475.22274780 73.05762482]
[-469.56347656 72.66416168]
[-463.66802979 75.62785339]
[-448.66802979 75.62785339]
[-433.66802979 75.62785339]
[-418.66802979 75.62785339]
[-410.07751465 63.48943329]
[-395.81799316 58.68012238]
[-381.29095459 63.24287415]
[-372.13024902 75.62785339]
[-357.13024902 75.62785339]
[-349.80123901 62.66053009]
[-336.87963867 55.05213165]
[-321.78485107 54.93229675]
[-308.57003784 62.43334198]
[-300.83364868 75.62785339]
[-285.83364868 75.62785339]
[-270.83364868 75.62785339]
[-255.83363342 75.62785339]
[-251.10595703 65.53835297]
[-242.91983032 57.90412521]
[-232.42971802 53.85411072]
[-221.13470459 54.00805664]
[-210.66424561 58.38199234]
[-202.54304504 66.38040924]
[-197.96914673 76.87706757]
[-182.98266602 77.51368713]
[-167.99618530 78.15029907]
[-157.23448181 67.91694641]
[-142.02699280 68.34908295]
[-131.36627197 79.70632172]
[-116.37979126 80.34294128]
[-101.39331055 80.97956085]
[-86.40682220 81.61617279]
[-71.42034149 82.25279236]
[-56.43385315 82.88941193]
[-41.44737244 83.52603149]
[-26.46088600 84.16265106]
[-11.47440147 84.79926300]
[-7.41866970 82.29122162]
[-1.74575567 82.29884338]
[3.92541909 85.67190552]
[18.88788605 86.73237610]
[33.85035324 87.79283905]
[48.81282043 88.85330200]
[63.77528763 89.91376495]
[71.81716919 75.10642242]
[85.51828003 65.29781342]
[102.12737274 62.45753860]
[118.30928040 67.15594482]
[130.81462097 78.44956207]
[137.13224792 94.07059479]
[152.11874390 94.70721436]
[167.10522461 95.34383392]
[181.22134399 88.19919586]
[193.60876465 96.46968842]
[208.59524536 97.10630798]
[223.58172607 97.74291992]
[238.56822205 98.37953949]
[253.55470276 99.01615906]
[268.54119873 99.65277863]
[274.54528809 84.89101410]
[285.22424316 73.09844971]
[299.27255249 65.68928528]
[314.98223877 63.54354095]
[330.45043945 66.90255737]
[343.80987549 75.34204102]
[353.45428467 87.82551575]
[358.23150635 102.83162689]
[373.22552490 103.25611115]
[388.21951294 103.68058777]
[402.23309326 96.33692169]
[414.73632812 104.43128967]
[429.73031616 104.85577393]
[443.74392700 97.51210022]
[456.24713135 105.60646820]
[471.24111938 106.03095245]
[486.23510742 106.45542908]
[501.22912598 106.87991333]
[509.88507080 96.56687164]
[522.71240234 93.16924286]
[534.97363281 97.71017456]
[542.27294922 108.32286072]
[557.25939941 108.95948029]
[572.24591064 109.59609985]
[587.23242188 110.23271179]
[602.21887207 110.86933136]
[617.20538330 111.50595093]
[632.19183350 112.14257050]
[647.17834473 112.77919006]
[662.17492676 113.09756470]
[677.17492676 113.09756470]
[692.17456055 112.99143219]
[707.17309570 112.77916718]
[722.17156982 112.56690979]
[737.17004395 112.35464478]
[752.16857910 112.14237976]
[761.90881348 99.90874481]
[777.24407959 96.84880829]
[790.93353271 104.40738678]
[796.51348877 119.01555634]
[791.34918213 133.77577209]
[777.87908936 141.71871948]
[762.46337891 139.09397888]
[752.38085938 127.14088440]
[737.38232422 127.35314178]
[722.38385010 127.56540680]
[707.38531494 127.77767181]
[692.38684082 127.98992920]
[685.74853516 131.22494507]
[677.17492676 128.09756470]
[662.17492676 128.09756470]
[659.44036865 130.31140137]
[655.50036621 131.31498718]
[650.93334961 130.55729675]
[646.54168701 127.76567078]
[631.55523682 127.12905121]
[616.56872559 126.49243164]
[601.58227539 125.85581970]
[586.59576416 125.21920013]
[571.60931396 124.58258057]
[556.62280273 123.94596100]
[541.63629150 123.30934143]
[529.74346924 135.20561218]
[512.58874512 134.80790710]
[500.80462646 121.87390900]
[485.81063843 121.44942474]
[470.81665039 121.02494049]
[455.82266235 120.60045624]
[442.88153076 127.97449493]
[429.30584717 119.84976196]
[414.31182861 119.42527771]
[401.37069702 126.79931641]
[387.79501343 118.67458344]
[372.80102539 118.25009918]
[357.80703735 117.82561493]
[352.99395752 131.13476562]
[344.29360962 142.32449341]
[332.54568481 150.29324341]
[318.89074707 154.25137329]
[304.65942383 153.79936218]
[291.24282837 148.96817017]
[279.95648193 140.21740723]
[271.91134644 128.39172363]
[267.90457153 114.63925934]
[252.91809082 114.00264740]
[237.93159485 113.36602783]
[222.94511414 112.72940826]
[207.95863342 112.09278870]
[192.97215271 111.45616913]
[179.92796326 118.64633942]
[166.46859741 110.33031464]
[151.48211670 109.69369507]
[136.49563599 109.05708313]
[131.26042175 120.89852142]
[122.31924438 130.26240540]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 111]
[6 110]
[7 109]
[8 108]
[9 107]
[10 104]
[11 103]
[12 102]
[13 101]
[14 100]
[15 99]
[16 98]
[17 97]
[18 96]
[21 93]
[22 92]
[23 91]
[27 84]
[28 83]
[29 82]
[30 81]
[35 76]
[36 75]
[40 71]
[41 70]
[42 69]
[43 68]
[44 65]
[45 64]
[46 63]
[48 61]
[49 60]
[117 219]
[118 218]
[119 217]
[121 215]
[122 214]
[123 213]
[124 212]
[125 211]
[126 210]
[134 201]
[135 200]
[136 199]
[138 197]
[139 196]
[141 194]
[142 193]
[143 192]
[144 191]
[148 188]
[149 187]
[150 186]
[151 185]
[152 184]
[153 183]
[154 182]
[155 181]
[156 177]
[157 176]
[158 174]
[159 173]
[160 172]
[161 171]
[162 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
