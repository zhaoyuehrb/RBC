%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:05:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUGGUGAAGUGAGAUUCAGACUGAGUGGGGUCACAGCACAGGGCACUGUCUUGCCUGGCUUUAUCUGAGCCAAUCACACCUCUCCUGGCCACUAUCUGUGGUCUAGCCCCCUUUGUGCAGAAAGAGAAAGAAGAGCCUUGAGGACCAGCCUAGUCAGGCUGAAGAAAUGUCAACAAUUGGGAGUUUUGAAGGAUUCCAGGCUGUGUCUCUGAAGCAAGAGGGAGAUGACCAACCCUCUGAGACUGACCACCUAU\
CGAUGGAGGAAG\
) } def
/len { sequence length } bind def

/coor [
[130.19143677 212.09831238]
[134.75680542 205.20147705]
[129.09786987 191.30987549]
[123.43894958 177.41827393]
[117.78002167 163.52667236]
[112.12109375 149.63507080]
[97.88408661 151.04981995]
[83.81298828 148.46176147]
[71.01111603 142.07382202]
[60.48225784 132.38687134]
[47.61067963 140.08898926]
[34.73910522 147.79110718]
[21.86753082 155.49320984]
[17.92734909 174.05133057]
[1.92956614 183.64012146]
[-15.67904186 178.54487610]
[-28.36652374 186.54661560]
[-41.05400467 194.54835510]
[-53.74148560 202.55009460]
[-66.42896271 210.55183411]
[-79.11644745 218.55357361]
[-82.72151184 233.70748901]
[-95.70240784 241.64164734]
[-110.12713623 238.11138916]
[-122.81461334 246.11312866]
[-135.50209045 254.11486816]
[-148.18957520 262.11660767]
[-155.73475647 276.02276611]
[-170.62733459 276.26763916]
[-183.31481934 284.26937866]
[-196.00230408 292.27111816]
[-208.68978882 300.27285767]
[-210.46467590 310.95986938]
[-217.66519165 318.75827026]
[-227.75183105 321.27191162]
[-237.35607910 317.90896606]
[-250.22764587 325.61108398]
[-255.95960999 332.67770386]
[-263.29556274 333.32702637]
[-276.25653076 340.87771606]
[-289.21749878 348.42840576]
[-302.17849731 355.97912598]
[-309.84841919 370.47409058]
[-326.24414062 370.80874634]
[-334.49914551 356.63879395]
[-326.12139893 342.54110718]
[-309.72918701 343.01815796]
[-296.76821899 335.46743774]
[-283.80725098 327.91674805]
[-270.84625244 320.36602783]
[-257.92974854 312.73950195]
[-245.05818176 305.03738403]
[-236.87217712 287.49765015]
[-216.69152832 287.58538818]
[-204.00404358 279.58364868]
[-191.31655884 271.58190918]
[-178.62907410 263.58016968]
[-171.99140930 250.24635315]
[-156.19131470 249.42912292]
[-143.50382996 241.42738342]
[-130.81636047 233.42564392]
[-118.12887573 225.42390442]
[-115.09955597 210.88572693]
[-102.34663391 202.59008789]
[-87.11818695 205.86608887]
[-74.43070221 197.86434937]
[-61.74322510 189.86260986]
[-49.05574417 181.86087036]
[-36.36826324 173.85913086]
[-23.68078041 165.85739136]
[-23.63792992 154.48881531]
[-18.06840706 144.44085693]
[-8.24773693 138.25225830]
[3.45878649 137.54965210]
[14.16541767 142.62164307]
[27.03699303 134.91952515]
[39.90856934 127.21741486]
[52.78014374 119.51529694]
[50.82453156 113.86849213]
[49.54161072 108.03197479]
[48.94892502 102.08558655]
[49.05458832 96.11066437]
[49.85715485 90.18894958]
[51.34563828 84.40144348]
[53.49968719 78.82731628]
[56.28982925 73.54281616]
[44.73661423 63.97603607]
[33.18339920 54.40925980]
[21.63018608 44.84247971]
[10.02109718 35.34358215]
[-1.64346540 25.91288948]
[-13.30802822 16.48219681]
[-24.97259140 7.05150318]
[-41.01365280 7.30425215]
[-51.10106659 -5.17067003]
[-47.49662781 -20.80357170]
[-32.96535492 -27.60222626]
[-18.65439987 -20.35128975]
[-15.54189873 -4.61305952]
[-3.87733531 4.81763315]
[7.78722763 14.24832630]
[19.45178986 23.67901993]
[26.60415077 25.43441200]
[31.19696426 33.28926849]
[42.75017929 42.85604477]
[54.30339050 52.42282486]
[65.85660553 61.98960114]
[85.73143768 50.93912125]
[108.43270874 49.60703278]
[129.46356201 58.25720978]
[139.81860352 47.40487671]
[150.17362976 36.55254364]
[160.52867126 25.70020866]
[170.88371277 14.84787655]
[181.23875427 3.99554372]
[184.88137817 -4.34255934]
[191.77935791 -6.92241096]
[202.26089478 -17.65261459]
[212.74244690 -28.38282013]
[209.42353821 -41.74081421]
[213.10055542 -54.89245605]
[222.71269226 -64.43978882]
[235.68023682 -67.97092438]
[248.59640503 -64.66876984]
[259.20300293 -75.27537537]
[269.80960083 -85.88197327]
[280.41619873 -96.48857880]
[291.02282715 -107.09517670]
[287.30303955 -117.87625122]
[287.85592651 -129.21633911]
[292.56417847 -139.49136353]
[300.71810913 -147.24392700]
[311.12243652 -151.39004517]
[322.27120972 -151.37060547]
[332.56604004 -147.22644043]
[343.53900146 -157.45356750]
[354.51196289 -167.68067932]
[365.48495483 -177.90780640]
[376.45791626 -188.13491821]
[365.20526123 -231.02656555]
[373.20700073 -243.71405029]
[369.93099976 -258.94250488]
[378.22662354 -271.69540405]
[392.76480103 -274.72473145]
[400.76654053 -287.41220093]
[408.76828003 -300.09970093]
[416.24288940 -313.10470581]
[423.17779541 -326.40536499]
[430.11267090 -339.70599365]
[437.04757690 -353.00665283]
[443.98248291 -366.30731201]
[450.91735840 -379.60794067]
[449.67251587 -395.95977783]
[463.36203003 -404.98913574]
[477.90332031 -397.40737915]
[478.33755493 -381.01397705]
[464.21801758 -372.67306519]
[457.28311157 -359.37240601]
[450.34823608 -346.07174683]
[443.41333008 -332.77111816]
[436.47845459 -319.47045898]
[429.54354858 -306.16979980]
[443.74432373 -311.00073242]
[457.76354980 -305.66577148]
[465.15994263 -292.61611938]
[462.53518677 -277.84756470]
[451.09527588 -268.14559937]
[436.09631348 -267.96789551]
[424.42974854 -277.39608765]
[421.45578003 -292.09796143]
[413.45404053 -279.41046143]
[405.45230103 -266.72299194]
[408.98257446 -252.29826355]
[401.04840088 -239.31736755]
[385.89447021 -235.71231079]
[377.89273071 -223.02482605]
[382.36489868 -217.00404358]
[394.40661621 -225.94815063]
[403.35052490 -213.90629578]
[391.30920410 -204.96247864]
[395.78137207 -198.94169617]
[410.23947144 -202.93708801]
[424.69757080 -206.93249512]
[439.15567017 -210.92788696]
[453.61380005 -214.92327881]
[468.07189941 -218.91867065]
[482.52999878 -222.91407776]
[493.64312744 -234.97352600]
[509.58200073 -231.11549377]
[513.95007324 -215.30879211]
[502.25384521 -203.81399536]
[486.52539062 -208.45596313]
[472.06729126 -204.46057129]
[457.60919189 -200.46517944]
[443.15109253 -196.46977234]
[428.69296265 -192.47438049]
[414.23486328 -188.47898865]
[399.77676392 -184.48359680]
[386.68502808 -177.16194153]
[375.71206665 -166.93482971]
[364.73907471 -156.70771790]
[353.76611328 -146.48059082]
[342.79315186 -136.25347900]
[346.11453247 -117.82685852]
[337.55383301 -101.00547791]
[320.43041992 -92.71385193]
[301.62942505 -96.48857880]
[291.02282715 -85.88197327]
[280.41619873 -75.27537537]
[269.80960083 -64.66876984]
[259.20300293 -54.06217194]
[262.28463745 -37.92216110]
[255.05499268 -22.98143005]
[240.19114685 -15.22826004]
[223.47264099 -17.90127945]
[212.99110413 -7.17107391]
[202.50956726 3.55913043]
[192.09109497 14.35058498]
[181.73605347 25.20291710]
[171.38101196 36.05525208]
[161.02597046 46.90758514]
[150.67092896 57.75991440]
[140.31588745 68.61225128]
[147.47734070 81.11975098]
[150.86099243 95.12957001]
[150.19760132 109.52692413]
[145.53996277 123.16622162]
[137.25866699 134.96217346]
[126.01268768 143.97615051]
[131.67161560 157.86775208]
[137.33055115 171.75935364]
[142.98947144 185.65095520]
[148.64840698 199.54254150]
[167.27172852 212.03390503]
[163.30227661 233.32107544]
[169.60612488 246.93215942]
[175.90995789 260.54324341]
[182.21379089 274.15432739]
[188.51763916 287.76541138]
[194.82147217 301.37649536]
[210.12484741 311.64660645]
[207.82829285 329.05947876]
[214.29124451 342.59573364]
[229.58807373 343.11151123]
[242.88729858 350.68707275]
[251.13287354 363.58160400]
[252.43002319 378.83203125]
[246.48068237 392.93395996]
[234.65194702 402.64682007]
[219.66198730 405.73867798]
[204.95536804 401.49905396]
[193.91159058 390.90219116]
[189.06842041 376.38317871]
[191.53877258 361.27835083]
[200.75498962 349.05868530]
[194.29203796 335.52243042]
[183.01423645 331.20812988]
[177.51026917 320.01275635]
[181.21038818 307.68032837]
[174.90655518 294.06924438]
[168.60270691 280.45816040]
[162.29887390 266.84707642]
[155.99504089 253.23599243]
[149.69119263 239.62490845]
[141.96125793 238.56153870]
[135.19042969 234.49842834]
[130.50552368 228.02600098]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 233]
[3 232]
[4 231]
[5 230]
[6 229]
[10 78]
[11 77]
[12 76]
[13 75]
[16 70]
[17 69]
[18 68]
[19 67]
[20 66]
[21 65]
[24 62]
[25 61]
[26 60]
[27 59]
[29 57]
[30 56]
[31 55]
[32 54]
[36 52]
[37 51]
[39 50]
[40 49]
[41 48]
[42 47]
[86 107]
[87 106]
[88 105]
[89 104]
[90 102]
[91 101]
[92 100]
[93 99]
[110 223]
[111 222]
[112 221]
[113 220]
[114 219]
[115 218]
[117 217]
[118 216]
[119 215]
[124 211]
[125 210]
[126 209]
[127 208]
[128 207]
[135 203]
[136 202]
[137 201]
[138 200]
[139 199]
[140 176]
[141 175]
[144 172]
[145 171]
[146 170]
[147 162]
[148 161]
[149 160]
[150 159]
[151 158]
[152 157]
[181 198]
[182 197]
[183 196]
[184 195]
[185 194]
[186 193]
[187 192]
[235 264]
[236 263]
[237 262]
[238 261]
[239 260]
[240 259]
[242 256]
[243 255]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
