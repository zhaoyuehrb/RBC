%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:32:11 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NAGS)
} def

/sequence { (\
AUGGCGACGGCGCUGAUGGCUGUGGUUCUGCGGGCAGCUGCUGUAGCCCCGAGGCUGAGAGGCCGGGGAGGCACUGGGGGCGCCCGAAGGCUGAGCUGUG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 17 0.064354641 ubox
1 99 0.093989771 ubox
2 9 0.009497107 ubox
2 12 0.010125485 ubox
2 15 0.426413723 ubox
2 16 0.064090878 ubox
2 30 0.005953511 ubox
2 93 0.007418075 ubox
2 98 0.097601460 ubox
2 100 0.005043142 ubox
3 8 0.013428221 ubox
3 11 0.011404218 ubox
3 14 0.918105517 ubox
3 21 0.003405856 ubox
3 27 0.150585309 ubox
3 28 0.027080772 ubox
3 29 0.007113990 ubox
3 92 0.015854891 ubox
3 97 0.105611550 ubox
4 11 0.145925626 ubox
4 13 0.955443673 ubox
4 20 0.003453356 ubox
4 26 0.214838990 ubox
4 27 0.019834798 ubox
4 28 0.006536300 ubox
4 91 0.016436357 ubox
4 96 0.106726359 ubox
4 99 0.010645065 ubox
5 10 0.146287073 ubox
5 12 0.955570710 ubox
5 15 0.003927619 ubox
5 19 0.003442993 ubox
5 24 0.010534341 ubox
5 25 0.220032712 ubox
5 90 0.016070024 ubox
5 95 0.106356361 ubox
5 98 0.010978450 ubox
5 100 0.004346359 ubox
6 11 0.937503974 ubox
6 14 0.003510497 ubox
6 23 0.007597679 ubox
6 27 0.021281878 ubox
6 28 0.003800301 ubox
6 97 0.006222493 ubox
7 23 0.243240896 ubox
7 26 0.024114417 ubox
7 99 0.019526038 ubox
8 15 0.005599956 ubox
8 22 0.245641247 ubox
8 25 0.024552597 ubox
8 93 0.049093977 ubox
8 98 0.020184576 ubox
9 14 0.004333197 ubox
9 21 0.245524133 ubox
9 92 0.049519750 ubox
9 97 0.020143636 ubox
10 20 0.245697717 ubox
10 23 0.024559497 ubox
10 91 0.049582338 ubox
10 96 0.020134284 ubox
11 18 0.011607217 ubox
11 19 0.245391715 ubox
11 22 0.024608125 ubox
11 24 0.005703939 ubox
11 90 0.049191321 ubox
11 95 0.020090801 ubox
11 100 0.008072271 ubox
12 17 0.010643924 ubox
12 20 0.054498360 ubox
12 21 0.006414646 ubox
12 23 0.013010455 ubox
12 26 0.009686588 ubox
12 31 0.005251548 ubox
12 96 0.004905846 ubox
12 99 0.013976806 ubox
13 19 0.054801713 ubox
13 22 0.013356637 ubox
13 25 0.010101360 ubox
13 30 0.005437755 ubox
13 89 0.007128789 ubox
13 95 0.004935308 ubox
13 98 0.014236872 ubox
14 18 0.049441531 ubox
14 24 0.009835504 ubox
14 88 0.006859407 ubox
14 94 0.004869733 ubox
14 100 0.012400803 ubox
15 23 0.006615487 ubox
15 27 0.003885044 ubox
15 28 0.006245482 ubox
15 99 0.012758976 ubox
16 23 0.004592374 ubox
16 26 0.004267598 ubox
16 27 0.006015594 ubox
16 99 0.905839235 ubox
17 22 0.004432519 ubox
17 25 0.004371864 ubox
17 93 0.003715904 ubox
17 98 0.919767914 ubox
17 100 0.008824583 ubox
18 27 0.005917168 ubox
18 92 0.007516612 ubox
18 97 0.959790918 ubox
18 99 0.003936456 ubox
19 26 0.008157159 ubox
19 31 0.003831260 ubox
19 91 0.007785794 ubox
19 96 0.967322775 ubox
19 99 0.010106766 ubox
20 25 0.008329859 ubox
20 30 0.003940138 ubox
20 90 0.007774705 ubox
20 95 0.967328505 ubox
20 98 0.010418278 ubox
21 89 0.007210603 ubox
21 93 0.013708661 ubox
21 94 0.961151812 ubox
22 31 0.003583398 ubox
22 91 0.015930982 ubox
22 92 0.009123690 ubox
22 96 0.009925350 ubox
22 99 0.003782337 ubox
23 30 0.003607372 ubox
23 90 0.014869140 ubox
23 93 0.619465740 ubox
23 95 0.009674664 ubox
23 98 0.010373693 ubox
24 92 0.954876245 ubox
24 97 0.051248846 ubox
25 91 0.965827934 ubox
25 96 0.054475401 ubox
26 88 0.008757417 ubox
26 89 0.017469319 ubox
26 90 0.710762086 ubox
26 95 0.054616394 ubox
27 87 0.011923864 ubox
27 88 0.019447589 ubox
27 89 0.199265989 ubox
27 90 0.660844906 ubox
27 93 0.003470729 ubox
27 94 0.055780116 ubox
28 86 0.010339575 ubox
28 89 0.945949497 ubox
28 90 0.044528822 ubox
28 93 0.055576398 ubox
29 88 0.844181374 ubox
29 89 0.048573426 ubox
30 91 0.045349463 ubox
30 99 0.004407868 ubox
31 86 0.992340376 ubox
31 90 0.041525469 ubox
31 98 0.004488370 ubox
32 85 0.999943851 ubox
32 97 0.003992784 ubox
33 84 0.999978065 ubox
33 96 0.003983128 ubox
34 83 0.999971062 ubox
35 82 0.996727267 ubox
35 93 0.003972933 ubox
36 92 0.003978799 ubox
37 81 0.998855562 ubox
37 91 0.003964024 ubox
38 77 0.004343363 ubox
38 79 0.036263288 ubox
38 80 0.999286785 ubox
38 90 0.003954945 ubox
39 76 0.004487348 ubox
39 78 0.036098509 ubox
39 79 0.995858557 ubox
39 89 0.003717396 ubox
40 75 0.005875112 ubox
41 77 0.995481265 ubox
41 78 0.035311199 ubox
41 79 0.008245971 ubox
42 73 0.095116628 ubox
42 76 0.944919031 ubox
42 77 0.034204093 ubox
42 78 0.009071274 ubox
43 72 0.133812018 ubox
43 74 0.796493140 ubox
43 75 0.430750641 ubox
44 57 0.003966347 ubox
44 71 0.133205904 ubox
44 73 0.799442568 ubox
44 76 0.014000181 ubox
45 56 0.004360873 ubox
45 75 0.019226709 ubox
46 55 0.004401135 ubox
46 72 0.989122960 ubox
46 74 0.011775261 ubox
46 81 0.003515727 ubox
47 54 0.004400065 ubox
47 68 0.142785105 ubox
47 71 0.989619890 ubox
47 80 0.003518580 ubox
48 53 0.004384527 ubox
48 67 0.143418254 ubox
48 68 0.063932065 ubox
48 70 0.987420020 ubox
48 79 0.003519088 ubox
49 66 0.143973537 ubox
49 67 0.089654106 ubox
49 68 0.985136192 ubox
49 78 0.003518849 ubox
50 65 0.143370640 ubox
50 66 0.091666332 ubox
50 67 0.984629432 ubox
50 77 0.003517848 ubox
51 64 0.062404759 ubox
52 75 0.003432641 ubox
53 64 0.997485217 ubox
53 74 0.003398019 ubox
54 63 0.999943523 ubox
55 61 0.019059604 ubox
55 62 0.999679395 ubox
56 60 0.024064869 ubox
56 61 0.973649648 ubox
61 74 0.003260435 ubox
62 72 0.004544160 ubox
63 71 0.004551974 ubox
64 70 0.004553285 ubox
75 86 0.003641427 ubox
76 85 0.004587661 ubox
77 84 0.004590185 ubox
78 83 0.004585249 ubox
88 97 0.034115266 ubox
89 96 0.034935265 ubox
89 97 0.056118825 ubox
90 96 0.084561582 ubox
90 99 0.093856453 ubox
91 95 0.084221237 ubox
91 98 0.098251365 ubox
3 14 0.9500000 lbox
4 13 0.9500000 lbox
5 12 0.9500000 lbox
6 11 0.9500000 lbox
16 99 0.9500000 lbox
17 98 0.9500000 lbox
18 97 0.9500000 lbox
19 96 0.9500000 lbox
20 95 0.9500000 lbox
21 94 0.9500000 lbox
24 92 0.9500000 lbox
25 91 0.9500000 lbox
26 90 0.9500000 lbox
28 89 0.9500000 lbox
29 88 0.9500000 lbox
31 86 0.9500000 lbox
32 85 0.9500000 lbox
33 84 0.9500000 lbox
34 83 0.9500000 lbox
35 82 0.9500000 lbox
37 81 0.9500000 lbox
38 80 0.9500000 lbox
39 79 0.9500000 lbox
41 77 0.9500000 lbox
42 76 0.9500000 lbox
43 74 0.9500000 lbox
44 73 0.9500000 lbox
46 72 0.9500000 lbox
47 71 0.9500000 lbox
48 70 0.9500000 lbox
49 68 0.9500000 lbox
50 67 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
55 62 0.9500000 lbox
56 61 0.9500000 lbox
showpage
end
%%EOF
