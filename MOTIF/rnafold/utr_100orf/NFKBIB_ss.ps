%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:01:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCGUGGUGGGGAAUUUCCCGCAGGGCGGAAGCUCCAGAACUCCCGGCAAAGCCCAGCUACAGGCGGGCGACUGCGGGGGGCCCCUGAGGCGGCGGGGGCCAUGGCUGGGGUCGCGUGCUUGGGAAAAGCUGCCGACGCAGAUGAAUGGUGCGACAGCGGCCUGGGCUCCCUGGGUCCGGACGCAGCGGCCCCCGGAGGAC\
) } def
/len { sequence length } bind def

/coor [
[80.90399933 117.31410980]
[73.44154358 116.56461334]
[63.16660309 127.49281311]
[52.89166260 138.42102051]
[49.07558441 153.77511597]
[34.72047043 157.74749756]
[24.44552994 168.67570496]
[24.75657463 184.24943542]
[14.18064785 195.18582153]
[-0.66843820 195.38636780]
[-10.94337845 206.31457520]
[-21.21831894 217.24278259]
[-31.49325943 228.17097473]
[-41.76819992 239.09918213]
[-42.15264893 251.99526978]
[-50.94033051 260.88626099]
[-63.03001022 261.38714600]
[-73.47201538 272.15582275]
[-83.91402435 282.92449951]
[-94.35603333 293.69317627]
[-104.71482086 304.54193115]
[-114.98976135 315.47012329]
[-118.21559143 331.54888916]
[-133.83755493 336.53750610]
[-145.78509521 325.30416870]
[-141.76762390 309.40472412]
[-125.91796112 305.19519043]
[-115.64302063 294.26699829]
[-113.35021210 287.23654175]
[-105.12471771 283.25115967]
[-94.68270874 272.48248291]
[-84.24069977 261.71380615]
[-73.79869080 250.94512939]
[-70.44458008 233.72206116]
[-52.69639969 228.82423401]
[-42.42146301 217.89604187]
[-32.14652252 206.96783447]
[-21.87158012 196.03964233]
[-11.59664059 185.11143494]
[-12.31058502 170.27816772]
[-2.04601073 159.04904175]
[13.51732731 158.40077209]
[23.79226685 147.47256470]
[26.87341309 132.90013123]
[41.96346283 128.14607239]
[52.23840332 117.21787262]
[62.51334000 106.28967285]
[67.29405212 96.15017700]
[74.35210419 89.13876343]
[82.34880829 85.60944366]
[89.95896912 85.42974854]
[96.03141785 88.02429962]
[99.72427368 92.46781158]
[104.05090332 78.10534668]
[108.37753296 63.74288940]
[112.70416260 49.38042831]
[117.03079224 35.01796722]
[121.35742950 20.65550804]
[125.68405914 6.29304695]
[119.67057037 1.68543816]
[115.39125824 -5.10852814]
[113.63722992 -13.40888309]
[114.92588806 -22.25408554]
[111.04360199 -36.74297333]
[107.16131592 -51.23186111]
[103.27902985 -65.72074890]
[99.39674377 -80.20963287]
[95.51445770 -94.69852448]
[84.46905518 -106.02590179]
[88.64865112 -120.32206726]
[84.76636505 -134.81095886]
[80.88407898 -149.29983521]
[77.00179291 -163.78872681]
[73.11950684 -178.27761841]
[69.23722076 -192.76651001]
[58.19181824 -204.09388733]
[62.37141418 -218.39004517]
[58.48912811 -232.87893677]
[54.60684586 -247.36781311]
[37.85263443 -256.20220947]
[32.95457458 -274.16790771]
[42.57128525 -289.73989868]
[38.24465179 -304.10235596]
[33.91802216 -318.46481323]
[29.59139252 -332.82727051]
[25.26476097 -347.18975830]
[20.93813133 -361.55221558]
[16.61149979 -375.91467285]
[12.28487015 -390.27713013]
[-1.75572324 -397.53228760]
[-6.47408009 -412.61581421]
[0.92911625 -426.57891846]
[16.06168175 -431.13754272]
[29.94573212 -423.58712769]
[34.34410858 -408.40719604]
[26.64732933 -394.60375977]
[30.97396088 -380.24130249]
[35.30059052 -365.87884521]
[39.62722015 -351.51638794]
[43.95385361 -337.15393066]
[48.28048325 -322.79144287]
[52.60711288 -308.42898560]
[56.93374252 -294.06652832]
[67.92221832 -290.97326660]
[76.13619232 -282.87405396]
[79.45198822 -271.70028687]
[76.93418884 -260.19735718]
[69.09573364 -251.25010681]
[72.97801971 -236.76121521]
[76.86030579 -222.27233887]
[87.62802124 -211.98129272]
[83.72611237 -196.64878845]
[87.60839844 -182.15989685]
[91.49068451 -167.67102051]
[95.37297058 -153.18212891]
[99.25525665 -138.69323730]
[103.13754272 -124.20435333]
[113.90525818 -113.91331482]
[110.00334930 -98.58081055]
[113.88563538 -84.09191895]
[117.76792145 -69.60303497]
[121.65020752 -55.11414719]
[125.53248596 -40.62525940]
[129.41477966 -26.13636971]
[128.33460999 -41.09742737]
[137.56568909 -52.92059326]
[152.34197998 -55.50153351]
[165.03445435 -47.50771332]
[169.08995056 -33.06634903]
[162.41462708 -19.63355637]
[148.45289612 -14.14470005]
[163.19749451 -16.90094185]
[177.94207764 -19.65718460]
[192.68667603 -22.41342735]
[207.43127441 -25.16967010]
[214.16026306 -39.02704620]
[227.60154724 -46.18144226]
[242.50199890 -44.07420349]
[253.17666626 -33.72096634]
[267.92126465 -36.47721100]
[282.66586304 -39.23345184]
[297.41046143 -41.98969650]
[303.12896729 -56.31806564]
[315.69946289 -65.26158905]
[331.11071777 -65.96641541]
[344.44506836 -58.20764542]
[351.44757080 -44.46106720]
[349.88375854 -29.11316681]
[340.25262451 -17.06140327]
[325.62744141 -12.15145016]
[310.67504883 -15.95005608]
[300.16668701 -27.24509811]
[285.42211914 -24.48885536]
[270.67752075 -21.73261261]
[255.93290710 -18.97636986]
[249.71910095 -5.46613073]
[236.58605957 1.88147569]
[221.46798706 0.06574970]
[210.18751526 -10.42507458]
[195.44291687 -7.66883183]
[180.69833374 -4.91258907]
[165.95373535 -2.15634608]
[151.20913696 0.59989667]
[140.04652405 10.61967754]
[135.71987915 24.98213768]
[131.39324951 39.34459686]
[127.06662750 53.70705795]
[122.73999786 68.06951904]
[118.41336823 82.43197632]
[114.08673096 96.79444122]
[116.04462433 111.66611481]
[123.94110870 124.41937256]
[131.93556213 137.11145020]
[140.02749634 149.74159241]
[148.11943054 162.37173462]
[156.21136475 175.00187683]
[164.30331421 187.63201904]
[180.84931946 195.70767212]
[180.98158264 213.25378418]
[189.26705933 225.75782776]
[197.55253601 238.26185608]
[213.10984802 239.84420776]
[223.97320557 251.09239197]
[225.01325989 266.69534302]
[215.73892212 279.28585815]
[200.52925110 282.91903687]
[186.56579590 275.87942505]
[180.44168091 261.49093628]
[185.04850769 246.54733276]
[176.76303101 234.04330444]
[168.47755432 221.53926086]
[156.68576050 218.82545471]
[149.68141174 208.47111511]
[151.67317200 195.72395325]
[143.58122253 183.09381104]
[135.48928833 170.46366882]
[127.39735413 157.83352661]
[119.30541229 145.20338440]
[113.04656219 141.26501465]
[111.18785095 132.31585693]
[103.29136658 119.56259155]
[95.82891083 118.81310272]
[94.32968903 133.73799133]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 47]
[3 46]
[4 45]
[6 43]
[7 42]
[10 39]
[11 38]
[12 37]
[13 36]
[14 35]
[17 33]
[18 32]
[19 31]
[20 30]
[21 28]
[22 27]
[53 170]
[54 169]
[55 168]
[56 167]
[57 166]
[58 165]
[59 164]
[63 124]
[64 123]
[65 122]
[66 121]
[67 120]
[68 119]
[70 117]
[71 116]
[72 115]
[73 114]
[74 113]
[75 112]
[77 110]
[78 109]
[79 108]
[82 103]
[83 102]
[84 101]
[85 100]
[86 99]
[87 98]
[88 97]
[89 96]
[131 163]
[132 162]
[133 161]
[134 160]
[135 159]
[139 155]
[140 154]
[141 153]
[142 152]
[171 201]
[172 200]
[173 198]
[174 197]
[175 196]
[176 195]
[177 194]
[179 191]
[180 190]
[181 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
