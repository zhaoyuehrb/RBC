%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:38:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCUGGGGAGCUCCGGCAGCGCAAGAGGGCAAAGCACAGCUGGAAGCUCAGAGCUGCAGUCCCAGGUCCUGGGCCAGGGCCCCCAUCCAGCAUCAAUGAAAGCAGAAGCCACAGUUAUUCCCAGCCGUUGUGCUAGGGGGCUCCCAUCAUGGCAAGUCCUCAGCCCAGUCCAGCCCUGGCAGACAAGUGCACCCC\
) } def
/len { sequence length } bind def

/coor [
[109.16391754 186.91419983]
[94.16564178 191.33978271]
[79.85232544 185.04191589]
[72.98229218 170.99426270]
[76.79934692 155.82968140]
[89.50119781 146.70845032]
[90.45738220 131.73895264]
[91.41355896 116.76947021]
[78.26665497 109.54735565]
[66.14547729 118.38347626]
[54.02429581 127.21959686]
[41.90311813 136.05570984]
[29.78193855 144.89183044]
[17.73159981 153.82432556]
[5.75286674 162.85260010]
[-6.22586584 171.88088989]
[-18.20459938 180.90917969]
[-30.18333244 189.93746948]
[-37.19913483 208.82759094]
[-56.46632385 210.37815857]
[-68.15106201 219.78384399]
[-79.60749054 229.46632385]
[-90.82904816 239.42004395]
[-91.52330780 255.20907593]
[-103.23501587 265.82092285]
[-119.01582336 264.95977783]
[-129.50326538 253.13652039]
[-128.47531128 237.36570740]
[-116.54184723 227.00386047]
[-100.78276825 228.19848633]
[-89.56121063 218.24475098]
[-88.98976898 214.75437927]
[-86.69235229 211.36941528]
[-82.73796844 208.90119934]
[-77.55674744 208.09910583]
[-65.87200928 198.69342041]
[-65.69023895 188.46264648]
[-59.77798080 179.84339905]
[-49.89194489 175.82420349]
[-39.21161652 177.95874023]
[-27.23288536 168.93045044]
[-15.25415230 159.90216064]
[-3.27541995 150.87387085]
[8.70331287 141.84558105]
[12.15668678 135.30151367]
[20.94581795 132.77066040]
[33.06699753 123.93453217]
[45.18817902 115.09841156]
[57.30935669 106.26229858]
[69.43053436 97.42617798]
[75.24484253 89.83261871]
[82.45929718 85.36232758]
[89.79016113 84.05921173]
[96.08292389 85.50567627]
[100.46344757 88.91122437]
[102.44591522 93.24666595]
[113.34435272 82.94016266]
[124.24279022 72.63365936]
[135.14123535 62.32715225]
[145.79003906 51.76292038]
[156.18310547 40.94700623]
[166.57618713 30.13109589]
[176.79547119 19.15082550]
[186.83834839 8.00899029]
[196.88122559 -3.13284540]
[206.92411804 -14.27468109]
[216.96699524 -25.41651726]
[217.08103943 -38.32173920]
[225.68482971 -47.39607239]
[237.76539612 -48.14570999]
[247.98466492 -59.12598038]
[258.20394897 -70.10624695]
[268.42321777 -81.08651733]
[278.64251709 -92.06678772]
[288.86178589 -103.04705811]
[283.14004517 -125.29250336]
[297.32745361 -146.53256226]
[325.15701294 -150.55787659]
[330.98001099 -164.38148499]
[336.80303955 -178.20510864]
[342.62606812 -192.02873230]
[348.44909668 -205.85234070]
[354.27212524 -219.67596436]
[360.09512329 -233.49957275]
[365.91815186 -247.32319641]
[361.22137451 -255.52291870]
[360.83679199 -264.82690430]
[364.72430420 -273.13677979]
[371.89440918 -278.63668823]
[380.65670776 -280.18975830]
[387.13418579 -293.71908569]
[393.61163330 -307.24841309]
[400.08908081 -320.77774048]
[400.97467041 -329.88101196]
[406.77920532 -334.46990967]
[413.47158813 -347.89419556]
[420.16394043 -361.31851196]
[426.85632324 -374.74282837]
[433.54870605 -388.16714478]
[433.22543335 -393.40011597]
[434.79190063 -397.79049683]
[437.60794067 -400.75799561]
[440.89566040 -402.06188965]
[448.22238159 -415.15078735]
[447.03384399 -435.26660156]
[464.04382324 -444.44750977]
[470.94943237 -457.76339722]
[477.85501099 -471.07928467]
[469.51510620 -483.97665405]
[468.75726318 -499.31683350]
[475.78530884 -512.97338867]
[488.70874023 -521.27282715]
[504.05123901 -521.98260498]
[517.68572998 -514.91180420]
[525.94458008 -501.96240234]
[526.60626221 -486.61776733]
[519.49273682 -473.00552368]
[506.51751709 -464.78726196]
[491.17089844 -464.17370605]
[484.26528931 -450.85781860]
[477.35971069 -437.54193115]
[481.31478882 -428.10482788]
[479.37573242 -417.83416748]
[471.94650269 -410.17294312]
[461.31127930 -407.82406616]
[453.98455811 -394.73516846]
[446.97302246 -381.47476196]
[440.28063965 -368.05044556]
[433.58825684 -354.62615967]
[426.89590454 -341.20184326]
[420.20352173 -327.77752686]
[413.61840820 -314.30026245]
[407.14096069 -300.77096558]
[400.66348267 -287.24163818]
[394.18603516 -273.71231079]
[397.58059692 -253.36064148]
[379.74179077 -241.50016785]
[373.91876221 -227.67655945]
[368.09573364 -213.85293579]
[362.27270508 -200.02932739]
[356.44967651 -186.20570374]
[350.62667847 -172.38208008]
[344.80364990 -158.55847168]
[338.98062134 -144.73484802]
[341.94714355 -137.84648132]
[349.01892090 -151.07485962]
[363.77041626 -153.79385376]
[375.09371948 -143.95603943]
[374.46234131 -128.96932983]
[362.35168457 -120.11879730]
[347.88021851 -124.06972504]
[350.84674072 -117.18135071]
[364.89144897 -111.91393280]
[378.93618774 -106.64650726]
[391.24142456 -115.95161438]
[406.62567139 -117.10407257]
[420.17990112 -109.73613739]
[427.57897949 -96.19889069]
[426.46191406 -80.81202698]
[417.18515015 -68.48542786]
[402.70886230 -63.15246964]
[387.65237427 -66.51487732]
[376.82015991 -77.49972534]
[373.66876221 -92.60178375]
[359.62405396 -97.86920929]
[345.57931519 -103.13663483]
[331.55496216 -90.05688477]
[314.39849854 -86.87977600]
[299.84204102 -92.82778168]
[289.62277222 -81.84751129]
[279.40350342 -70.86724091]
[269.18420410 -59.88697052]
[258.96493530 -48.90670013]
[248.74565125 -37.92642975]
[245.74819946 -20.64031792]
[228.10882568 -15.37363338]
[218.06594849 -4.23179770]
[208.02307129 6.91003752]
[197.98017883 18.05187225]
[187.93730164 29.19370842]
[187.28715515 33.93573380]
[183.64378357 38.31619263]
[177.39210510 40.52417374]
[166.99902344 51.34008408]
[156.60594177 62.15599442]
[156.31433105 65.68080139]
[154.29382324 69.23800659]
[150.54859924 72.01334381]
[145.44773865 73.22558594]
[134.54930115 83.53209686]
[123.65085602 93.83860016]
[112.75241852 104.14510345]
[106.38304901 117.72564697]
[105.42687225 132.69514465]
[104.47068787 147.66462708]
[115.90880585 158.32781982]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 195]
[7 194]
[8 193]
[9 50]
[10 49]
[11 48]
[12 47]
[13 46]
[14 44]
[15 43]
[16 42]
[17 41]
[18 40]
[20 36]
[21 35]
[22 31]
[23 30]
[56 192]
[57 191]
[58 190]
[59 189]
[60 185]
[61 184]
[62 183]
[63 180]
[64 179]
[65 178]
[66 177]
[67 176]
[70 174]
[71 173]
[72 172]
[73 171]
[74 170]
[75 169]
[78 144]
[79 143]
[80 142]
[81 141]
[82 140]
[83 139]
[84 138]
[85 137]
[90 135]
[91 134]
[92 133]
[93 132]
[95 131]
[96 130]
[97 129]
[98 128]
[99 127]
[103 126]
[104 125]
[106 121]
[107 120]
[108 119]
[152 166]
[153 165]
[154 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
