%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:36:49 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (KBTBD13)
} def

/sequence { (\
AUGGCACGGGGUCCACAGACCCUGGUGCAGGUGUGGGUGGGCGGCCAGCUCUUCCAAGCCGACCGCGCCCUGCUGGUGGAGCACUGUGGCUUCUUCCGAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 26 0.017480897 ubox
1 32 0.023562526 ubox
1 34 0.003653228 ubox
2 25 0.017312635 ubox
2 29 0.039510352 ubox
2 31 0.024280867 ubox
2 33 0.003614816 ubox
2 98 0.035576057 ubox
3 26 0.043334092 ubox
3 28 0.034874240 ubox
3 32 0.003555789 ubox
3 69 0.016269157 ubox
3 70 0.005355631 ubox
3 74 0.019463478 ubox
3 77 0.006145739 ubox
3 91 0.006720169 ubox
3 96 0.008712208 ubox
3 97 0.056686621 ubox
4 26 0.815523537 ubox
4 28 0.255135203 ubox
4 68 0.016350403 ubox
4 73 0.021223595 ubox
4 77 0.006496952 ubox
4 90 0.007302510 ubox
4 95 0.004082714 ubox
4 96 0.051493691 ubox
5 24 0.021275375 ubox
5 25 0.841291236 ubox
5 27 0.260632810 ubox
5 67 0.016364245 ubox
5 72 0.021037884 ubox
5 75 0.008263383 ubox
5 76 0.006703324 ubox
5 88 0.003539476 ubox
5 89 0.006773612 ubox
6 23 0.014949990 ubox
6 26 0.264908526 ubox
6 71 0.018455950 ubox
6 74 0.007597943 ubox
6 87 0.004435987 ubox
7 24 0.973769688 ubox
7 25 0.199223584 ubox
7 86 0.004410572 ubox
7 98 0.010318575 ubox
8 22 0.006653534 ubox
8 23 0.994106659 ubox
8 85 0.003978435 ubox
8 93 0.020929420 ubox
8 94 0.008407237 ubox
8 97 0.010153622 ubox
9 21 0.005746245 ubox
9 22 0.999403448 ubox
9 23 0.021192929 ubox
9 84 0.003941444 ubox
9 92 0.021107101 ubox
9 93 0.008528114 ubox
9 96 0.010005949 ubox
10 20 0.004649235 ubox
10 21 0.999497436 ubox
10 22 0.017473410 ubox
10 91 0.021828230 ubox
10 92 0.008172576 ubox
10 94 0.004435057 ubox
10 95 0.007280316 ubox
11 20 0.999571172 ubox
11 21 0.012586962 ubox
11 90 0.022185297 ubox
11 91 0.007631943 ubox
11 93 0.006116859 ubox
11 94 0.004172348 ubox
12 19 0.999140310 ubox
12 80 0.003741063 ubox
12 89 0.003484811 ubox
13 18 0.995447585 ubox
13 79 0.003939042 ubox
13 89 0.024831969 ubox
14 78 0.003939251 ubox
14 88 0.024960583 ubox
15 77 0.003899063 ubox
15 87 0.025076283 ubox
16 76 0.003442903 ubox
16 86 0.025082104 ubox
17 85 0.025065894 ubox
18 84 0.024971086 ubox
19 34 0.009172242 ubox
20 33 0.009401781 ubox
20 79 0.012035250 ubox
21 31 0.010082389 ubox
21 78 0.012044063 ubox
21 79 0.018125247 ubox
22 30 0.010111445 ubox
22 76 0.011407831 ubox
22 78 0.018144996 ubox
22 79 0.006454131 ubox
23 29 0.010124357 ubox
23 75 0.011188421 ubox
23 78 0.006423392 ubox
24 28 0.009964828 ubox
24 64 0.003568833 ubox
24 69 0.015028241 ubox
24 74 0.007188292 ubox
24 77 0.006276894 ubox
25 63 0.003680894 ubox
25 66 0.016950970 ubox
25 68 0.018122702 ubox
25 73 0.006196134 ubox
26 62 0.003504593 ubox
26 65 0.016951501 ubox
26 67 0.018157078 ubox
26 72 0.004763569 ubox
26 75 0.007350475 ubox
27 34 0.003906342 ubox
27 64 0.016778076 ubox
27 66 0.018263373 ubox
27 73 0.962673542 ubox
27 74 0.006201225 ubox
27 77 0.007072887 ubox
28 33 0.004034091 ubox
28 65 0.018130431 ubox
28 72 0.965493049 ubox
28 75 0.006726141 ubox
28 76 0.007406402 ubox
29 71 0.968638875 ubox
29 74 0.029390898 ubox
30 60 0.052612539 ubox
30 64 0.008797502 ubox
30 69 0.228852667 ubox
30 70 0.949792885 ubox
30 71 0.004428916 ubox
30 73 0.031709489 ubox
30 74 0.146746344 ubox
30 97 0.004076830 ubox
31 59 0.052682593 ubox
31 63 0.008790068 ubox
31 68 0.299488112 ubox
31 69 0.929840909 ubox
31 70 0.005374892 ubox
31 73 0.178090567 ubox
31 96 0.003942972 ubox
32 58 0.051652168 ubox
32 61 0.003627558 ubox
32 62 0.007715248 ubox
32 67 0.356125445 ubox
32 72 0.177731734 ubox
33 59 0.003824046 ubox
33 60 0.006091769 ubox
33 66 0.357174564 ubox
33 68 0.908469901 ubox
33 71 0.136149694 ubox
33 73 0.070455059 ubox
34 56 0.050162893 ubox
34 58 0.003256121 ubox
34 65 0.350065339 ubox
34 67 0.907962496 ubox
34 72 0.068162188 ubox
34 98 0.008067169 ubox
35 55 0.053819471 ubox
35 64 0.296270835 ubox
35 66 0.901211544 ubox
35 69 0.017691320 ubox
35 70 0.204500092 ubox
35 71 0.012571983 ubox
35 97 0.010580485 ubox
36 54 0.053837992 ubox
36 55 0.005569671 ubox
36 60 0.008282156 ubox
36 63 0.229998505 ubox
36 64 0.926808073 ubox
36 68 0.018921582 ubox
36 69 0.204776760 ubox
36 70 0.010843438 ubox
36 96 0.010567470 ubox
36 97 0.008173852 ubox
37 53 0.046007787 ubox
37 54 0.007152517 ubox
37 59 0.011397695 ubox
37 63 0.946163299 ubox
37 66 0.072872353 ubox
37 68 0.204932706 ubox
37 69 0.008498717 ubox
37 95 0.009133284 ubox
37 96 0.008194339 ubox
38 47 0.011872768 ubox
38 56 0.004204985 ubox
38 58 0.011113852 ubox
38 61 0.032087826 ubox
38 62 0.961663507 ubox
38 65 0.077889896 ubox
38 67 0.204850843 ubox
39 46 0.013736482 ubox
39 51 0.060720150 ubox
39 52 0.004817252 ubox
39 55 0.005629704 ubox
39 60 0.043868277 ubox
39 64 0.080589560 ubox
39 66 0.203036472 ubox
39 92 0.005545602 ubox
39 93 0.005480100 ubox
39 94 0.007716198 ubox
39 95 0.004607719 ubox
40 45 0.013731945 ubox
40 50 0.060990498 ubox
40 51 0.005006163 ubox
40 54 0.005589889 ubox
40 55 0.004757289 ubox
40 59 0.039615972 ubox
40 60 0.971252378 ubox
40 63 0.080008936 ubox
40 64 0.203829909 ubox
40 91 0.006682824 ubox
40 92 0.004336993 ubox
40 93 0.008020886 ubox
40 94 0.006828842 ubox
41 49 0.064064611 ubox
41 53 0.004578803 ubox
41 54 0.005189953 ubox
41 59 0.971522149 ubox
41 63 0.204028577 ubox
41 66 0.018929428 ubox
41 90 0.007375821 ubox
41 92 0.007481507 ubox
41 93 0.007003660 ubox
42 48 0.064124672 ubox
42 58 0.970577147 ubox
42 61 0.222325263 ubox
42 65 0.019660115 ubox
42 89 0.007387664 ubox
43 50 0.079614118 ubox
43 51 0.048925377 ubox
43 52 0.094217194 ubox
43 53 0.020761853 ubox
43 54 0.126984424 ubox
43 55 0.447038168 ubox
43 60 0.223459201 ubox
43 64 0.019694877 ubox
43 91 0.011258077 ubox
44 49 0.081719858 ubox
44 50 0.038379364 ubox
44 51 0.093942539 ubox
44 52 0.018132049 ubox
44 53 0.119441711 ubox
44 54 0.445515954 ubox
44 59 0.223355000 ubox
44 63 0.019667773 ubox
44 87 0.007359379 ubox
44 90 0.011620465 ubox
45 58 0.222865634 ubox
45 86 0.007249490 ubox
45 89 0.011621774 ubox
46 88 0.011619820 ubox
47 53 0.155332770 ubox
47 87 0.011498414 ubox
48 52 0.122229865 ubox
48 59 0.025592756 ubox
48 82 0.013764158 ubox
49 58 0.026898408 ubox
49 81 0.013798002 ubox
50 57 0.029433340 ubox
50 80 0.013796301 ubox
51 58 0.005871475 ubox
51 79 0.013796531 ubox
52 57 0.009911118 ubox
52 78 0.013379863 ubox
53 57 0.005113649 ubox
53 62 0.007644861 ubox
54 61 0.008522000 ubox
54 76 0.013735567 ubox
55 75 0.013729376 ubox
56 74 0.009871779 ubox
57 74 0.009482952 ubox
58 66 0.003998780 ubox
58 73 0.013425221 ubox
59 65 0.004010464 ubox
59 72 0.013349096 ubox
60 67 0.011034514 ubox
61 66 0.010954955 ubox
61 92 0.006597902 ubox
61 93 0.012891582 ubox
61 96 0.004040215 ubox
62 77 0.032813347 ubox
62 91 0.007363307 ubox
62 92 0.012172764 ubox
62 95 0.003821126 ubox
63 76 0.033738509 ubox
63 89 0.025469815 ubox
64 75 0.033735226 ubox
64 88 0.025567140 ubox
65 73 0.030925060 ubox
65 74 0.020684371 ubox
65 87 0.025548025 ubox
66 72 0.031441691 ubox
66 86 0.025551544 ubox
66 88 0.005039371 ubox
67 71 0.019400763 ubox
67 73 0.020278092 ubox
67 77 0.003631175 ubox
67 82 0.005005084 ubox
67 85 0.024168240 ubox
67 87 0.005506484 ubox
67 90 0.003861563 ubox
68 72 0.020137957 ubox
68 76 0.003659073 ubox
68 81 0.005048084 ubox
68 86 0.005571533 ubox
68 89 0.003857210 ubox
69 75 0.003617588 ubox
69 79 0.004993695 ubox
69 88 0.003838908 ubox
70 75 0.003903513 ubox
70 78 0.005000086 ubox
70 100 0.025153598 ubox
71 83 0.027681927 ubox
71 98 0.004956158 ubox
71 99 0.024835674 ubox
72 82 0.028613332 ubox
72 87 0.003380143 ubox
72 90 0.005294855 ubox
72 97 0.006067237 ubox
73 81 0.028615527 ubox
73 86 0.003424231 ubox
73 89 0.005305972 ubox
73 100 0.054985194 ubox
74 80 0.028488018 ubox
74 86 0.005948291 ubox
74 88 0.004974665 ubox
74 98 0.787204557 ubox
74 99 0.080086873 ubox
75 85 0.011357169 ubox
75 94 0.005833863 ubox
75 95 0.016678384 ubox
75 96 0.113670965 ubox
75 97 0.985049940 ubox
76 84 0.011868914 ubox
76 93 0.005505241 ubox
76 94 0.019853587 ubox
76 95 0.099612947 ubox
76 96 0.984784934 ubox
77 83 0.011859065 ubox
77 98 0.013731697 ubox
78 82 0.011671330 ubox
78 92 0.004117689 ubox
78 93 0.888308541 ubox
78 94 0.435314732 ubox
78 95 0.009280750 ubox
78 97 0.018302389 ubox
79 92 0.891740468 ubox
79 93 0.447477848 ubox
79 94 0.004283632 ubox
79 96 0.018180519 ubox
80 91 0.946266324 ubox
80 92 0.318167892 ubox
80 95 0.014733567 ubox
81 87 0.004837444 ubox
81 90 0.997573800 ubox
81 91 0.051159534 ubox
81 94 0.005359213 ubox
82 86 0.005273101 ubox
82 88 0.068175730 ubox
82 89 0.995377885 ubox
83 87 0.076984436 ubox
84 100 0.003770175 ubox
85 99 0.003810203 ubox
87 98 0.006774752 ubox
88 97 0.008683240 ubox
89 96 0.008601179 ubox
90 100 0.004470264 ubox
91 99 0.004376075 ubox
91 100 0.005680562 ubox
92 98 0.003997003 ubox
92 99 0.009759566 ubox
93 98 0.010294404 ubox
4 26 0.9500000 lbox
5 25 0.9500000 lbox
7 24 0.9500000 lbox
8 23 0.9500000 lbox
9 22 0.9500000 lbox
10 21 0.9500000 lbox
11 20 0.9500000 lbox
12 19 0.9500000 lbox
13 18 0.9500000 lbox
27 73 0.9500000 lbox
28 72 0.9500000 lbox
29 71 0.9500000 lbox
30 70 0.9500000 lbox
31 69 0.9500000 lbox
33 68 0.9500000 lbox
34 67 0.9500000 lbox
35 66 0.9500000 lbox
36 64 0.9500000 lbox
37 63 0.9500000 lbox
38 62 0.9500000 lbox
40 60 0.9500000 lbox
41 59 0.9500000 lbox
42 58 0.9500000 lbox
74 98 0.9500000 lbox
75 97 0.9500000 lbox
76 96 0.9500000 lbox
78 93 0.9500000 lbox
79 92 0.9500000 lbox
80 91 0.9500000 lbox
81 90 0.9500000 lbox
82 89 0.9500000 lbox
showpage
end
%%EOF
