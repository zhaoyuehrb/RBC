%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:10:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAAGCCAUGUCCUACUUCAGGACUCCACAAACUCAUCCAGGUCCUCUGCCUUCCGGCCAAGGUGGGGCUGCUUCUCCAGGCUUGUCCCUUGGCCUCUGUAGUCCUG\
) } def
/len { sequence length } bind def

/coor [
[294.20520020 300.66323853]
[283.15408325 290.52059937]
[272.10296631 280.37799072]
[261.05184937 270.23535156]
[250.00073242 260.09274292]
[238.94961548 249.95010376]
[227.89849854 239.80747986]
[216.84738159 229.66485596]
[206.53523254 231.01754761]
[197.01850891 226.29969788]
[191.63134766 216.88916016]
[192.41281128 205.85189819]
[181.95874023 195.09492493]
[171.50468445 184.33795166]
[161.05061340 173.58096313]
[150.59655762 162.82398987]
[140.14248657 152.06701660]
[129.68843079 141.31004333]
[119.23436737 130.55305481]
[108.78030396 119.79608154]
[87.52244568 117.69998169]
[78.40455627 98.38278198]
[64.76007843 92.15155792]
[51.11559677 85.92033386]
[37.47111511 79.68910980]
[23.82663536 73.45788574]
[10.18215561 67.22665405]
[-0.66401315 77.84386444]
[-14.61468220 83.82243347]
[-29.78313828 84.35380554]
[-44.11797333 79.36612701]
[-55.68051910 69.53393555]
[-62.90703201 56.18695068]
[-64.82019043 41.13024902]
[-61.16125107 26.40012169]
[-52.42506027 13.98870087]
[-39.79311371 5.57452631]
[-24.97377586 2.29554653]
[-9.97124481 4.59521723]
[3.18551302 12.16252613]
[12.71715260 23.97405815]
[17.33460045 38.43239975]
[16.41338158 53.58217621]
[30.05786133 59.81340408]
[43.70233917 66.04462433]
[57.34682083 72.27585602]
[70.99130249 78.50708008]
[84.63578033 84.73830414]
[87.16825104 82.55509186]
[90.00660706 80.78774261]
[93.08319855 79.47839355]
[93.51153564 64.48450470]
[93.93988037 49.49062347]
[85.67731476 35.32509995]
[94.04756165 21.22293472]
[110.44001770 21.69122887]
[117.99153900 36.24824142]
[108.93376160 49.91896439]
[108.50541687 64.91284943]
[108.07707977 79.90673065]
[117.32196045 87.00275421]
[121.55020905 97.86293030]
[119.53727722 109.34201813]
[129.99134827 120.09899902]
[140.44540405 130.85597229]
[150.89947510 141.61294556]
[161.35353088 152.36993408]
[171.80760193 163.12690735]
[182.26165771 173.88388062]
[192.71572876 184.64085388]
[203.16978455 195.39784241]
[222.72959900 199.84361267]
[226.99000549 218.61373901]
[238.04112244 228.75636292]
[249.09223938 238.89898682]
[260.14337158 249.04161072]
[271.19448853 259.18423462]
[282.24560547 269.32687378]
[293.29672241 279.46948242]
[304.34783936 289.61212158]
[316.96664429 297.72171021]
[330.78347778 303.56076050]
[344.60034180 309.39981079]
[358.41720581 315.23886108]
[372.23403931 321.07794189]
[385.45205688 312.94992065]
[400.92050171 314.17715454]
[412.69152832 324.28768921]
[416.23886108 339.39382935]
[410.19854736 353.68698120]
[396.89315796 361.67111206]
[381.43890381 360.27615356]
[369.77825928 350.03854370]
[366.39498901 334.89477539]
[352.57815552 329.05572510]
[338.76129150 323.21667480]
[324.94442749 317.37762451]
[311.12759399 311.53857422]
[318.12255859 324.80773926]
[318.83160400 339.79095459]
[313.12097168 353.66137695]
[302.06805420 363.80206299]
[287.75823975 368.29971313]
[272.89135742 366.30581665]
[260.27233887 358.19653320]
[252.28202820 345.50186157]
[250.42796326 330.61688232]
[255.05995178 316.34997559]
[265.30407715 305.39288330]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 80]
[2 79]
[3 78]
[4 77]
[5 76]
[6 75]
[7 74]
[8 73]
[12 71]
[13 70]
[14 69]
[15 68]
[16 67]
[17 66]
[18 65]
[19 64]
[20 63]
[22 48]
[23 47]
[24 46]
[25 45]
[26 44]
[27 43]
[51 60]
[52 59]
[53 58]
[81 98]
[82 97]
[83 96]
[84 95]
[85 94]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
