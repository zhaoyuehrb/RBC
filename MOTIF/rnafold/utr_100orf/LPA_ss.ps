%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:11:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUACCUUUGGGGCUGGCUUUCUCAAGGAAGCCCAGCUCCCUGUGAUUGAGAAUGAAGUGUGCAAUCGCUAUGACUGGGAUUGGGACACACUUUCUGGGCACUGCUGGCCAGUCCCAAAAUGGAACAUAAGGAAGUGGUUCUUCUACUUCUUUUAUUUCUGAAAUCAGCAGCACCUGAGCAAAGCCAUGUGGUCCAGGAUUGCUACCAUGGUGAUGGAC\
) } def
/len { sequence length } bind def

/coor [
[170.74591064 309.31323242]
[162.13740540 297.02932739]
[153.52891541 284.74545288]
[144.92041016 272.46157837]
[137.43574524 271.98214722]
[144.09007263 285.42535400]
[135.77516174 297.90982056]
[120.80581665 296.95120239]
[114.15124512 283.50811768]
[122.46643066 271.02325439]
[114.98177338 270.54382324]
[104.87633514 281.62893677]
[94.77090454 292.71408081]
[84.66546631 303.79922485]
[74.56003571 314.88433838]
[64.45459747 325.96948242]
[54.34916306 337.05462646]
[44.24372864 348.13973999]
[34.21733856 359.29641724]
[24.27049828 370.52407837]
[14.32365894 381.75173950]
[4.37681866 392.97940063]
[-5.57002115 404.20706177]
[-8.31833649 420.37429810]
[-23.78572464 425.82330322]
[-36.06066132 414.94866943]
[-32.51574707 398.93725586]
[-16.79768181 394.26022339]
[-6.85084248 383.03256226]
[3.09599733 371.80490112]
[13.04283714 360.57723999]
[22.98967743 349.34957886]
[25.07083321 342.26376343]
[33.15859604 338.03430176]
[43.26403046 326.94918823]
[53.36946487 315.86404419]
[63.47489929 304.77890015]
[73.58032990 293.69378662]
[83.68576813 282.60864258]
[93.79120636 271.52349854]
[103.89663696 260.43838501]
[108.61293793 246.19911194]
[107.12278748 231.27331543]
[105.63263702 216.34751892]
[104.03643799 201.43269348]
[102.33426666 186.52958679]
[100.63210297 171.62648010]
[98.92993164 156.72335815]
[97.22776794 141.82025146]
[86.11459351 139.54510498]
[76.01858521 134.37310791]
[67.67929840 126.68317413]
[61.70763016 117.03858948]
[58.54101562 106.14586639]
[58.41142273 94.80293274]
[61.32835007 83.84071350]
[48.74635696 75.67410278]
[36.16436386 67.50749969]
[23.58236885 59.34089661]
[11.00037479 51.17428970]
[-1.58161902 43.00768661]
[-14.16361237 34.84107971]
[-26.74560738 26.67447662]
[-39.49886322 18.77799416]
[-52.41758728 11.15522385]
[-65.33631134 3.53245401]
[-78.25502777 -4.09031582]
[-91.17375183 -11.71308613]
[-100.14772797 -13.37681389]
[-104.22083282 -19.53714561]
[-117.02989197 -27.34278488]
[-129.83895874 -35.14842224]
[-146.23739624 -34.99577332]
[-154.33460999 -49.25645447]
[-145.80088806 -63.26029968]
[-129.41499329 -62.60135269]
[-122.03331757 -47.95748138]
[-109.22425842 -40.15184402]
[-96.41519928 -32.34620667]
[-83.55097961 -24.63180733]
[-70.63226318 -17.00903702]
[-57.71353912 -9.38626766]
[-44.79481506 -1.76349795]
[-31.87609291 5.85927200]
[-28.39530945 5.34188366]
[-24.49112129 6.48014212]
[-20.94232559 9.45469761]
[-18.57900238 14.09248257]
[-5.99700785 22.25908661]
[6.58498573 30.42569160]
[19.16697884 38.59229660]
[31.74897385 46.75890350]
[44.33096695 54.92550659]
[56.91296005 63.09210968]
[69.49495697 71.25871277]
[78.44492340 64.05563354]
[89.01445770 59.55327988]
[87.73663330 44.60780716]
[86.45880127 29.66233444]
[85.18096924 14.71686268]
[81.33435059 6.44016075]
[83.99274445 -0.44989151]
[82.92749023 -15.41201782]
[81.86223602 -30.37414551]
[80.79698181 -45.33627319]
[69.66658020 -56.89022446]
[71.90290833 -72.77664185]
[85.79043579 -80.80883789]
[100.67584991 -74.82518005]
[105.14032745 -59.41583633]
[95.75910950 -46.40152359]
[96.82436371 -31.43939781]
[97.88961792 -16.47727203]
[98.95487213 -1.51514542]
[100.12644196 13.43903160]
[101.40427399 28.38450432]
[102.68210602 43.32997513]
[103.95993042 58.27544785]
[109.09854126 59.08746338]
[114.09696960 60.52982330]
[118.87819672 62.58031464]
[123.36856842 65.20733643]
[127.49888611 68.37042236]
[139.20735168 58.99427795]
[150.91580200 49.61813354]
[162.62425232 40.24198914]
[162.03321838 24.84858704]
[170.52041626 12.20656586]
[184.65708923 7.04723883]
[198.94996643 11.15232563]
[210.65841675 1.77618170]
[222.36688232 -7.59996176]
[234.07533264 -16.97610474]
[245.78378296 -26.35224915]
[257.49224854 -35.72839355]
[269.20068359 -45.10453415]
[280.90914917 -54.48067856]
[292.61761475 -63.85682297]
[304.32608032 -73.23296356]
[307.51199341 -88.95649719]
[321.85662842 -96.14055634]
[336.35601807 -89.27414703]
[339.88745117 -73.62458801]
[329.74191284 -61.19688797]
[313.70220947 -61.52450943]
[301.99374390 -52.14836502]
[290.28530884 -42.77222443]
[278.57684326 -33.39608002]
[266.86837769 -24.01993561]
[255.15992737 -14.64379311]
[243.45147705 -5.26764965]
[231.74301147 4.10849380]
[220.03456116 13.48463726]
[208.32611084 22.86078072]
[209.20809937 37.70531082]
[201.08381653 50.37258530]
[186.89247131 55.89157104]
[172.00039673 51.95044708]
[160.29194641 61.32658768]
[148.58348083 70.70273590]
[136.87503052 80.07887268]
[141.72102356 103.99694061]
[132.42207336 126.55989838]
[112.13087463 140.11808777]
[113.83303833 155.02119446]
[115.53520966 169.92430115]
[117.23737335 184.82740784]
[118.93954468 199.73051453]
[123.01988983 207.89453125]
[120.55843353 214.85737610]
[122.04858398 229.78317261]
[123.53873444 244.70896912]
[141.56053162 245.64852905]
[157.20429993 263.85308838]
[165.81278992 276.13696289]
[174.42129517 288.42083740]
[183.02978516 300.70471191]
[199.94755554 300.76464844]
[213.36122131 310.79913330]
[218.10057068 326.69296265]
[212.48681641 342.12261963]
[221.26905823 354.28286743]
[236.61935425 356.92974854]
[245.35256958 369.38711548]
[242.73457336 384.00497437]
[251.51681519 396.16525269]
[260.29907227 408.32550049]
[269.08129883 420.48577881]
[277.86355591 432.64605713]
[286.64578247 444.80633545]
[295.51425171 456.90386963]
[304.46844482 468.93807983]
[313.42266846 480.97229004]
[322.37686157 493.00650024]
[337.89083862 492.69537354]
[350.60546875 501.59017944]
[355.63177490 516.27062988]
[351.03701782 531.09179688]
[338.58798218 540.35467529]
[323.07156372 540.49749756]
[310.45416260 531.46533203]
[305.58740234 516.73120117]
[310.34265137 501.96069336]
[301.38845825 489.92651367]
[292.43423462 477.89230347]
[283.48004150 465.85809326]
[276.97015381 462.37075806]
[274.48550415 453.58856201]
[265.70327759 441.42831421]
[256.92102051 429.26803589]
[248.13879395 417.10775757]
[239.35655212 404.94747925]
[230.57431030 392.78720093]
[215.87466431 390.67630005]
[206.79498291 378.46914673]
[209.10877991 363.06512451]
[200.32653809 350.90484619]
[187.03407288 352.10635376]
[174.78465271 346.53985596]
[166.82041931 335.56130981]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 177]
[2 176]
[3 175]
[4 174]
[11 41]
[12 40]
[13 39]
[14 38]
[15 37]
[16 36]
[17 35]
[18 34]
[19 32]
[20 31]
[21 30]
[22 29]
[23 28]
[42 172]
[43 171]
[44 170]
[45 168]
[46 167]
[47 166]
[48 165]
[49 164]
[56 95]
[57 94]
[58 93]
[59 92]
[60 91]
[61 90]
[62 89]
[63 88]
[64 84]
[65 83]
[66 82]
[67 81]
[68 80]
[70 79]
[71 78]
[72 77]
[97 118]
[98 117]
[99 116]
[100 115]
[102 114]
[103 113]
[104 112]
[105 111]
[123 161]
[124 160]
[125 159]
[126 158]
[130 154]
[131 153]
[132 152]
[133 151]
[134 150]
[135 149]
[136 148]
[137 147]
[138 146]
[139 145]
[181 217]
[182 216]
[185 213]
[186 212]
[187 211]
[188 210]
[189 209]
[190 208]
[191 206]
[192 205]
[193 204]
[194 203]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
