%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:15:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUGAGUAGAAAAGCAGCCGCAGGCUGUGGCGCUCCACCACGCCGUCCGGGUGGGCCUAGCAGUCGCUCCAUUUAUCGCUUGAGAUCUCCAGCCUUACCGCGGCUCGAAAUGGACCCCAACUGCUCCUGCACCACUGGUGUCUCCUGCGCCUGCACCGGCUCCUGCACGUGCAAAGAGUGCAAAUGCACCUCCUGCAAGAAGAGCUGCU\
) } def
/len { sequence length } bind def

/coor [
[75.66989136 347.74163818]
[78.70155334 362.63717651]
[75.79725647 377.55810547]
[67.39988708 390.22903442]
[54.78997421 398.71777344]
[39.89044571 401.72982788]
[24.97337151 398.80590820]
[12.31349564 390.39187622]
[3.84135604 377.77081299]
[0.84889352 362.86734009]
[3.79243660 347.95410156]
[12.22311687 335.30532837]
[24.85531616 326.84979248]
[39.76271439 323.87692261]
[42.64798737 309.15704346]
[45.53326035 294.43716431]
[48.41853333 279.71725464]
[51.30380630 264.99737549]
[54.18907928 250.27748108]
[44.20615005 229.42080688]
[59.94207382 211.50012207]
[61.50259781 196.58152771]
[63.06311798 181.66291809]
[64.62364197 166.74430847]
[66.18416595 151.82569885]
[57.49258804 128.44903564]
[60.28823471 107.51131439]
[71.00659943 93.64031219]
[84.56416321 89.00823212]
[95.71150970 92.99165344]
[89.43415070 79.36833954]
[83.15678406 65.74501801]
[76.87942505 52.12170410]
[70.60206604 38.49839020]
[56.47205734 38.79766083]
[43.33502960 33.70425797]
[33.16246414 24.01795959]
[27.46743011 11.22510433]
[27.07960129 -2.72942758]
[32.02452469 -15.73787308]
[41.52475357 -25.84795761]
[35.45092010 -39.56322479]
[29.37708664 -53.27849197]
[23.30325317 -66.99375916]
[17.22941971 -80.70902252]
[11.15558529 -94.42429352]
[-1.88420856 -97.79747772]
[-10.47497845 -107.91721344]
[-11.65126228 -120.94405365]
[-5.20676470 -132.10191345]
[-11.07572556 -145.90609741]
[-17.04728889 -159.66619873]
[-23.12112236 -173.38145447]
[-29.19495583 -187.09672546]
[-35.26879120 -200.81199646]
[-41.34262466 -214.52726746]
[-45.56053162 -217.60238647]
[-47.93923950 -221.58923340]
[-48.43944931 -225.63458252]
[-47.36618805 -228.99322510]
[-52.82154465 -242.96601868]
[-58.27690125 -256.93881226]
[-63.73226166 -270.91162109]
[-69.18761444 -284.88442993]
[-74.64297485 -298.85720825]
[-92.31246948 -302.92495728]
[-103.90140533 -316.66455078]
[-104.91385651 -334.45291138]
[-95.13288879 -349.15679932]
[-101.00185394 -362.96096802]
[-106.87081146 -376.76516724]
[-112.73977661 -390.56933594]
[-118.60873413 -404.37350464]
[-124.47769928 -418.17767334]
[-141.86909485 -406.92590332]
[-168.08346558 -412.51058960]
[-177.91404724 -423.84017944]
[-187.74462891 -435.16976929]
[-203.52514648 -436.03640747]
[-214.00845337 -447.86331177]
[-212.97502136 -463.63378906]
[-201.03793335 -473.99148560]
[-185.27928162 -472.79135132]
[-175.04837036 -460.74545288]
[-176.41503906 -445.00036621]
[-166.58445740 -433.67074585]
[-156.75387573 -422.34115601]
[-150.01400757 -425.63119507]
[-129.79440308 -435.50122070]
[-132.67968750 -450.22109985]
[-142.92698669 -462.27529907]
[-137.78227234 -476.25317383]
[-140.66754150 -490.97308350]
[-143.55282593 -505.69296265]
[-146.43809509 -520.41284180]
[-160.21348572 -527.81372070]
[-165.96081543 -542.35681152]
[-160.96638489 -557.17541504]
[-147.58839417 -565.27252197]
[-132.14353943 -562.82501221]
[-121.92439270 -550.98846436]
[-121.75613403 -535.35180664]
[-131.71820068 -523.29815674]
[-128.83293152 -508.57824707]
[-125.94765472 -493.85833740]
[-123.06238556 -479.13845825]
[-113.02146149 -468.13714600]
[-117.95979309 -453.10638428]
[-115.07451630 -438.38650513]
[-110.67352295 -424.04666138]
[-104.80455780 -410.24246216]
[-98.93560028 -396.43829346]
[-93.06663513 -382.63412476]
[-87.19767761 -368.82992554]
[-81.32871246 -355.02575684]
[-69.22534180 -354.08575439]
[-58.60733414 -348.05328369]
[-51.52003479 -338.01977539]
[-49.35854340 -325.85394287]
[-52.59347153 -313.85379028]
[-60.67017746 -304.31256104]
[-55.21482086 -290.33978271]
[-49.75946045 -276.36697388]
[-44.30410385 -262.39416504]
[-38.84874725 -248.42138672]
[-33.39339066 -234.44857788]
[-27.62735748 -220.60108948]
[-21.55352402 -206.88583374]
[-15.47968960 -193.17056274]
[-9.40585613 -179.45529175]
[-3.33202171 -165.74003601]
[2.25068998 -160.89698792]
[2.72845125 -151.77505493]
[8.59741211 -137.97087097]
[24.44882393 -132.35202026]
[31.47011375 -116.69902039]
[24.87085152 -100.49812317]
[30.94468689 -86.78285980]
[37.01852036 -73.06758881]
[43.09235382 -59.35232544]
[49.16618729 -45.63705826]
[55.24002075 -31.92179108]
[71.21841431 -31.71801567]
[85.56052399 -24.54043388]
[95.37229919 -11.78063011]
[98.64918518 4.03778648]
[94.68542480 19.75823021]
[84.22537994 32.22102737]
[90.50273895 45.84434509]
[96.78010559 59.46765900]
[103.05746460 73.09098053]
[109.33482361 86.71429443]
[121.29715729 95.76428986]
[136.11422729 98.09977722]
[150.93128967 100.43526459]
[165.74836731 102.77075195]
[180.56542969 105.10623932]
[193.25904846 96.07797241]
[208.25239563 98.65756226]
[216.78125000 110.81462860]
[231.59831238 113.15011597]
[246.70124817 106.75999451]
[259.62185669 116.85901642]
[257.06851196 133.05816650]
[241.66789246 138.69314575]
[229.26283264 127.96718597]
[214.44575500 125.63169861]
[202.59091187 134.57585144]
[187.53102112 132.41841125]
[178.22994995 119.92330933]
[163.41287231 117.58782196]
[148.59580994 115.25233459]
[133.77874756 112.91684723]
[118.96166992 110.58135986]
[112.28118896 124.01233673]
[105.60128784 137.44210815]
[116.40344238 147.84948730]
[124.75472260 151.55001831]
[127.28749847 158.49313354]
[137.93350220 169.06018066]
[148.57951355 179.62722778]
[159.22552490 190.19427490]
[175.21102905 193.85424805]
[179.77488708 209.60554504]
[168.22218323 221.24458313]
[152.43734741 216.79811096]
[148.65847778 200.84028625]
[138.01246643 190.27323914]
[127.36645508 179.70619202]
[116.72044373 169.13914490]
[105.99607086 158.65164185]
[95.19390869 148.24426270]
[81.10276794 153.38623047]
[79.54224396 168.30484009]
[77.98172760 183.22343445]
[76.42120361 198.14204407]
[74.86067963 213.06065369]
[80.38058472 217.11227417]
[84.34864807 222.62919617]
[86.40247345 229.05303955]
[86.37142944 235.74563599]
[84.29036713 242.05227661]
[80.39314270 247.36587524]
[75.08673859 251.18533325]
[68.90897369 253.16275024]
[66.02369690 267.88262939]
[63.13842392 282.60253906]
[60.25315094 297.32241821]
[57.36787796 312.04232788]
[54.48260880 326.76220703]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 210]
[15 209]
[16 208]
[17 207]
[18 206]
[19 205]
[21 197]
[22 196]
[23 195]
[24 194]
[25 193]
[30 152]
[31 151]
[32 150]
[33 149]
[34 148]
[41 142]
[42 141]
[43 140]
[44 139]
[45 138]
[46 137]
[50 134]
[51 133]
[52 131]
[53 130]
[54 129]
[55 128]
[56 127]
[60 126]
[61 125]
[62 124]
[63 123]
[64 122]
[65 121]
[69 115]
[70 114]
[71 113]
[72 112]
[73 111]
[74 110]
[76 87]
[77 86]
[78 85]
[89 109]
[90 108]
[92 106]
[93 105]
[94 104]
[95 103]
[153 174]
[154 173]
[155 172]
[156 171]
[157 170]
[160 167]
[161 166]
[176 192]
[177 191]
[179 190]
[180 189]
[181 188]
[182 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
