%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:37:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGAGUUGCUUGGAGGAGCUUGGAGAAACCAGAAGUGAGAUCCAGGAGAAGUAAGGCCCUGGAGUGCCAGGAGCCCUUCUCCCAAAGAUGGAGAAAUAAAUGAAGAAAUACAGGAAAAUAAGCAUUGGGUGUUUUGCAAUGGCUACACAAACUAGUCAUGUCUUCCAUGGUCAAGAAAAUAUGUUUCUGGAAAACCAUU\
) } def
/len { sequence length } bind def

/coor [
[107.43785095 231.05955505]
[104.87161255 245.83839417]
[114.17406464 258.61492920]
[111.63500977 274.21392822]
[98.76083374 283.38079834]
[83.18955231 280.67694092]
[74.15933228 267.70657349]
[77.02764130 252.16474915]
[90.09276581 243.27217102]
[92.65899658 228.49331665]
[103.20509338 214.82084656]
[116.46020508 208.28172302]
[129.16650391 208.91239929]
[124.33103943 194.71316528]
[119.49557495 180.51393127]
[114.66011047 166.31469727]
[109.82464600 152.11544800]
[104.98918152 137.91621399]
[83.49951172 139.54743958]
[62.20088577 128.70028687]
[49.21050262 136.20028687]
[36.22012329 143.70028687]
[23.22974205 151.20028687]
[10.23936081 158.70028687]
[-2.75102043 166.20028687]
[-4.28802967 183.04080200]
[-15.44689655 195.52493286]
[-31.68469048 198.86729431]
[-46.56559753 191.94525146]
[-59.43717575 199.64736938]
[-64.72550964 214.79376221]
[-79.91172791 219.96661377]
[-93.34626007 211.19775391]
[-94.72328949 195.21389771]
[-82.98646545 184.27650452]
[-67.13928986 186.77578735]
[-54.26771164 179.07368469]
[-54.31799698 165.71856689]
[-47.70784378 153.98950195]
[-36.07162857 147.00445557]
[-22.39543724 146.68072510]
[-10.25102043 153.20989990]
[2.73936057 145.70989990]
[15.72974110 138.20989990]
[28.72012329 130.70989990]
[41.71050262 123.20990753]
[54.70088577 115.70990753]
[54.58366776 108.21082306]
[39.58784103 108.56477356]
[24.59201813 108.91872406]
[9.59202003 108.91411591]
[9.35753441 93.91594696]
[24.35010910 93.44248199]
[39.34966660 93.32756805]
[54.34922791 93.21265411]
[54.23200989 85.71356964]
[41.01356506 78.62324524]
[27.79512215 71.53291321]
[14.52167225 64.54610443]
[1.19402695 57.66323471]
[-12.13361835 50.78036880]
[-25.46126366 43.89749908]
[-38.78890991 37.01463318]
[-55.13574982 38.32336807]
[-64.21852112 24.66923714]
[-56.69364166 10.09843540]
[-40.30206680 9.60015678]
[-31.90604019 23.68698692]
[-18.57839584 30.56985474]
[-5.25075006 37.45272446]
[8.07689476 44.33559036]
[21.40454102 51.21846008]
[28.79613495 51.49468994]
[34.88544846 58.31447220]
[48.10389328 65.40480042]
[61.32233810 72.49512482]
[71.58715820 58.95349121]
[86.61877441 49.35629654]
[80.47492218 35.67225647]
[74.33106232 21.98821068]
[68.18721008 8.30416775]
[62.04335403 -5.37987518]
[55.89949799 -19.06391907]
[40.80596542 -23.15284729]
[31.91444206 -36.01654816]
[33.42322922 -51.58117294]
[44.61992645 -62.49758530]
[60.21779251 -63.61138535]
[72.85199738 -54.39667130]
[76.55705261 -39.20435333]
[69.58354187 -25.20777321]
[75.72739410 -11.52373028]
[81.87125397 2.16031265]
[88.01510620 15.84435558]
[94.15896606 29.52839851]
[100.30281830 43.21244431]
[107.76414490 43.97308731]
[104.59964752 29.31068802]
[117.56654358 21.77015877]
[128.74497986 31.77227783]
[122.68680573 45.49437332]
[130.14813232 46.25501633]
[138.92692566 34.09225845]
[137.64416504 21.25271797]
[145.21310425 11.30161190]
[157.13900757 9.24686146]
[166.10682678 -2.77720380]
[175.07466125 -14.80126953]
[184.04248047 -26.82533455]
[193.01029968 -38.84939957]
[201.97811890 -50.87346649]
[210.94595337 -62.89752960]
[202.38766479 -75.38890839]
[198.35142517 -89.98300171]
[199.27508545 -105.09675598]
[205.05841064 -119.09074402]
[215.07411194 -130.44700623]
[228.23571777 -137.93370056]
[243.11560059 -140.73870850]
[258.09967041 -138.55778503]
[271.56256104 -131.62750244]
[282.04394531 -120.69959259]
[288.40689087 -106.95943451]
[289.96115112 -91.89746094]
[286.53814697 -77.14748383]
[278.50918579 -64.30947113]
[266.74520874 -54.77598953]
[252.52224731 -49.58116150]
[237.38311768 -49.28848648]
[222.97001648 -53.92970657]
[214.00219727 -41.90564346]
[205.03436279 -29.88157654]
[196.06654358 -17.85751152]
[187.09872437 -5.83344603]
[178.13090515 6.19061899]
[169.16307068 18.21468544]
[168.05677795 35.72531891]
[151.08969116 42.87105942]
[142.31088257 55.03381729]
[149.29769897 68.30726624]
[164.29357910 67.95562744]
[179.28945923 67.60398865]
[194.28533936 67.25234985]
[209.28120422 66.90071106]
[224.27708435 66.54907227]
[239.27296448 66.19743347]
[248.89907837 53.87380600]
[264.20526123 50.67148972]
[277.96438599 58.10252380]
[283.67984009 72.65820312]
[278.65292358 87.46577454]
[265.25723267 95.53356171]
[249.81777954 93.05220032]
[239.62460327 81.19331360]
[224.62872314 81.54495239]
[209.63284302 81.89659119]
[194.63697815 82.24822998]
[179.64109802 82.59986877]
[164.64521790 82.95150757]
[149.64933777 83.30314636]
[142.40162659 115.97855377]
[119.18841553 133.08074951]
[124.02388000 147.27998352]
[128.85934448 161.47923279]
[133.69480896 175.67846680]
[138.53027344 189.87770081]
[143.36573792 204.07693481]
[149.72271729 217.66328430]
[157.52517700 230.47427368]
[165.32765198 243.28526306]
[173.13011169 256.09625244]
[180.93258667 268.90725708]
[200.67459106 272.59939575]
[211.18559265 289.35467529]
[206.07788086 308.14724731]
[214.47224426 320.57846069]
[222.86662292 333.00964355]
[231.26098633 345.44082642]
[239.65536499 357.87203979]
[255.06823730 362.32427979]
[261.06369019 377.20495605]
[253.04251099 391.09884644]
[237.15786743 393.34774780]
[225.59509277 382.22653198]
[227.22416687 366.26638794]
[218.82980347 353.83520508]
[210.43542480 341.40402222]
[202.04106140 328.97280884]
[193.64668274 316.54162598]
[183.40161133 317.37506104]
[173.66036987 313.84912109]
[166.20689392 306.53814697]
[162.43562317 296.71594238]
[163.09103394 286.13406372]
[168.12159729 276.70971680]
[160.31912231 263.89871216]
[152.51666260 251.08772278]
[144.71418762 238.27673340]
[136.91172791 225.46574402]
[129.54325867 226.86419678]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 10]
[2 9]
[13 167]
[14 166]
[15 165]
[16 164]
[17 163]
[18 162]
[20 47]
[21 46]
[22 45]
[23 44]
[24 43]
[25 42]
[29 37]
[30 36]
[56 76]
[57 75]
[58 74]
[59 72]
[60 71]
[61 70]
[62 69]
[63 68]
[78 96]
[79 95]
[80 94]
[81 93]
[82 92]
[83 91]
[102 139]
[103 138]
[106 136]
[107 135]
[108 134]
[109 133]
[110 132]
[111 131]
[112 130]
[140 160]
[141 159]
[142 158]
[143 157]
[144 156]
[145 155]
[146 154]
[168 199]
[169 198]
[170 197]
[171 196]
[172 195]
[175 189]
[176 188]
[177 187]
[178 186]
[179 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
