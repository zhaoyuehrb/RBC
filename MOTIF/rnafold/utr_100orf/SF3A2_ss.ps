%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:26:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAGUGCUUUCUUUGCCCGCCGUUCGCCAAACGAAGUCGUGGAGGUGGCGAAACGAGGAGGAGAUAACGCGGCCUUGGGCUCUGGUGUCUCCCAGUCUGCUAAAGCCCUAAGGCCAUCACCAUGGACUUCCAGCAUCGCCCCGGGGGCAAGACCGGGAGCGGGGGCGUGGCCUCCUCCUCCGAGAGCAACCGUGACCGCAGGGAGCGCCUCCGGCAGCUGG\
) } def
/len { sequence length } bind def

/coor [
[102.80357361 491.77816772]
[96.65109253 478.09799194]
[86.82029724 475.35025024]
[79.97743988 467.48269653]
[78.56047821 456.93093872]
[83.27550507 447.14126587]
[77.51086426 433.29321289]
[71.74621582 419.44515991]
[65.98156738 405.59707642]
[60.21692276 391.74902344]
[54.45227432 377.90097046]
[48.68762970 364.05288696]
[34.22177887 360.08563232]
[22.19928551 369.05557251]
[10.17679214 378.02548218]
[-1.84570169 386.99542236]
[-13.86819553 395.96536255]
[-25.89068985 404.93527222]
[-30.89182281 412.56829834]
[-38.14632416 413.94546509]
[-50.29398727 422.74514771]
[-62.44165039 431.54483032]
[-67.54981995 439.10662842]
[-74.82299805 440.38146973]
[-87.09342194 449.00912476]
[-99.36384583 457.63681030]
[-111.63426971 466.26449585]
[-123.90469360 474.89215088]
[-121.86493683 490.06112671]
[-127.11908722 504.43655396]
[-138.45979309 514.71502686]
[-153.28102112 518.53466797]
[-168.17698669 515.01770020]
[-179.72468567 504.97235107]
[-185.27055359 490.70693970]
[-183.54019165 475.49954224]
[-174.93121338 462.84475708]
[-161.42190552 455.65051270]
[-146.11660767 455.57000732]
[-132.53236389 462.62173462]
[-120.26194000 453.99404907]
[-107.99151611 445.36639404]
[-95.72109222 436.73870850]
[-83.45066833 428.11105347]
[-71.24132538 419.39715576]
[-59.09366226 410.59747314]
[-46.94599915 401.79782104]
[-34.86061859 392.91278076]
[-22.83812523 383.94284058]
[-10.81563187 374.97293091]
[1.20686245 366.00299072]
[13.22935677 357.03308105]
[25.25185013 348.06314087]
[23.16084290 330.27062988]
[31.85840034 316.16540527]
[46.17913818 310.98449707]
[49.11844635 296.27529907]
[52.05775452 281.56610107]
[54.99705887 266.85690308]
[57.93636703 252.14770508]
[60.87567520 237.43850708]
[63.81498337 222.72930908]
[66.75428772 208.02011108]
[69.69359589 193.31091309]
[59.47384644 182.50837708]
[57.55198669 167.58288574]
[64.87290955 154.23156738]
[78.81285095 147.67533875]
[81.75215912 132.96615601]
[84.69146729 118.25695038]
[87.63077545 103.54775238]
[85.42002106 88.71156311]
[78.31996918 75.49834442]
[71.21991730 62.28511810]
[64.11985779 49.07189560]
[57.01980591 35.85867691]
[49.91975403 22.64545250]
[42.72680283 9.48257065]
[35.44131470 -3.62931919]
[28.15582657 -16.74120903]
[20.87033653 -29.85309792]
[13.58484840 -42.96498871]
[5.57244110 -55.64573288]
[-3.14144826 -67.85507965]
[-11.85533714 -80.06443024]
[-20.56922722 -92.27377319]
[-36.19682312 -94.63043213]
[-45.51343536 -107.39664459]
[-42.99168777 -122.99845123]
[-30.12768555 -132.17956543]
[-14.55341339 -129.49301147]
[-5.50881100 -116.53266144]
[-8.35988045 -100.98766327]
[0.35400885 -88.77831268]
[9.06789780 -76.56896973]
[17.78178787 -64.35962677]
[19.18821335 -79.29354095]
[29.02186012 -90.62047577]
[43.61026001 -94.11026764]
[57.50522995 -88.45961761]
[65.51756287 -75.77882385]
[64.65496826 -60.80364990]
[55.23960114 -49.12671280]
[40.78771591 -45.10888290]
[26.69673729 -50.25047684]
[33.98222733 -37.13858795]
[41.26771545 -24.02669716]
[48.55320358 -10.91480827]
[55.83869171 2.19708180]
[61.82979584 6.51345587]
[63.13297653 15.54539967]
[70.23303223 28.75862122]
[77.33308411 41.97184372]
[84.43313599 55.18506622]
[91.53318787 68.39828491]
[98.63323975 81.61151123]
[106.13305664 81.55867767]
[106.02739716 66.55905151]
[101.29179382 52.32620239]
[113.36467743 43.42420197]
[125.56169128 52.15534210]
[121.02702332 66.45339203]
[121.13268280 81.45302582]
[128.63249207 81.40019226]
[135.54571533 68.08826447]
[142.45892334 54.77632904]
[141.18742371 38.42654800]
[154.86221313 29.37490654]
[169.41583252 36.93295670]
[169.87677002 53.32562256]
[155.77084351 61.68953705]
[148.85763550 75.00147247]
[141.94442749 88.31340027]
[147.26637268 93.59799194]
[161.74150085 89.66467285]
[157.91026306 104.16717529]
[163.23220825 109.45176697]
[176.49511719 102.44496155]
[189.75802612 95.43815613]
[203.02093506 88.43135071]
[216.23416138 81.33129120]
[229.39703369 74.13834381]
[242.55992126 66.94539642]
[255.72280884 59.75244522]
[268.88568115 52.55949402]
[270.73590088 37.15312195]
[281.31301880 25.79954529]
[296.54998779 22.86445045]
[310.58782959 29.47644043]
[318.02874756 43.09307098]
[316.01150513 58.47846603]
[305.31182861 69.71662903]
[290.04394531 72.48625946]
[276.07864380 65.72238159]
[262.91574097 72.91532898]
[249.75286865 80.10827637]
[236.58998108 87.30122375]
[223.42710876 94.49417877]
[219.06863403 100.45472717]
[210.02774048 101.69425201]
[196.76483154 108.70105743]
[183.50192261 115.70786285]
[170.23901367 122.71466827]
[142.02279663 129.79287720]
[117.67711639 123.24675751]
[102.33997345 106.48706055]
[99.40066528 121.19625854]
[96.46135712 135.90545654]
[93.52204895 150.61465454]
[103.87184906 162.02464294]
[105.49951172 177.16413879]
[97.98922729 190.20481873]
[84.40279388 196.25021362]
[81.46348572 210.95941162]
[78.52417755 225.66860962]
[75.58486938 240.37780762]
[72.64556122 255.08700562]
[69.70626068 269.79620361]
[66.76695251 284.50540161]
[63.82764435 299.21459961]
[60.88833618 313.92379761]
[74.78585815 333.78817749]
[62.53569031 358.28823853]
[68.30033875 372.13632202]
[74.06498718 385.98437500]
[79.82963562 399.83242798]
[85.59427643 413.68051147]
[91.35892487 427.52856445]
[97.12357330 441.37661743]
[113.67384338 452.89532471]
[110.33125305 471.94549561]
[116.48374176 485.62567139]
[123.01918030 499.12707520]
[129.93238831 512.43902588]
[144.73193359 517.29815674]
[151.55328369 530.89685059]
[146.82963562 544.97595215]
[153.74284363 558.28790283]
[160.65605164 571.59985352]
[173.88284302 580.28100586]
[172.88203430 595.14196777]
[179.79524231 608.45385742]
[186.70845032 621.76580811]
[201.50898743 627.95642090]
[205.75816345 643.42651367]
[196.19638062 656.30877686]
[180.15863037 656.72100830]
[169.94769287 644.34698486]
[173.39651489 628.67901611]
[166.48330688 615.36706543]
[159.57009888 602.05517578]
[146.83778381 594.32617188]
[147.34411621 578.51306152]
[140.43090820 565.20111084]
[133.51770020 551.88922119]
[119.28360748 547.65527344]
[112.08300018 534.25354004]
[116.62046051 519.35223389]
[109.70725250 506.04028320]
[107.08782959 505.06542969]
[104.69494629 502.99877930]
[102.94468689 499.92083740]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 192]
[2 191]
[6 189]
[7 188]
[8 187]
[9 186]
[10 185]
[11 184]
[12 183]
[13 53]
[14 52]
[15 51]
[16 50]
[17 49]
[18 48]
[20 47]
[21 46]
[22 45]
[24 44]
[25 43]
[26 42]
[27 41]
[28 40]
[56 181]
[57 180]
[58 179]
[59 178]
[60 177]
[61 176]
[62 175]
[63 174]
[64 173]
[68 169]
[69 168]
[70 167]
[71 166]
[72 116]
[73 115]
[74 114]
[75 113]
[76 112]
[77 111]
[78 109]
[79 108]
[80 107]
[81 106]
[82 105]
[83 96]
[84 95]
[85 94]
[86 93]
[124 133]
[125 132]
[126 131]
[137 163]
[138 162]
[139 161]
[140 160]
[141 158]
[142 157]
[143 156]
[144 155]
[145 154]
[193 219]
[194 218]
[197 215]
[198 214]
[199 213]
[201 211]
[202 210]
[203 209]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
