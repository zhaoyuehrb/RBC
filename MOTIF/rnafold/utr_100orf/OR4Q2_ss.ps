%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:45:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAGCAGAGUCUUGUAUUUGAUAUGAAUUACCUCAUUCAUUUUAAAUGUCACUAAUGCCCUAUUGUUUAAUCUCUUUGAUCUAGGUAGAGCCAGAUCAAAUGGAUAAAAACCAAACAGAAGUGAUGAGAGAAUUUUUCUUGUCAGGGUUCUCACAGACACCAUCUAUUGAAGCAGGGCUAUUUGUACUAUUUCUUUUCU\
) } def
/len { sequence length } bind def

/coor [
[61.39301300 346.27468872]
[61.44400406 331.16928101]
[65.74994659 316.69046021]
[73.96176910 304.01205444]
[85.41378784 294.16177368]
[99.17762756 287.93814087]
[97.08489227 273.08483887]
[94.99216461 258.23156738]
[92.89943695 243.37825012]
[90.57596588 228.55929565]
[88.02230835 213.77827454]
[85.46865845 198.99723816]
[82.91500092 184.21620178]
[80.36135101 169.43518066]
[77.80769348 154.65414429]
[75.25404358 139.87312317]
[72.70038605 125.09208679]
[59.10029984 118.76456451]
[46.14897537 126.33180237]
[33.19765091 133.89904785]
[20.24632263 141.46629333]
[7.29499817 149.03353882]
[-5.65632772 156.60078430]
[-13.66836071 170.24328613]
[-28.56069946 169.98341370]
[-41.51202393 177.55065918]
[-54.46334839 185.11790466]
[-67.41467285 192.68515015]
[-80.36599731 200.25239563]
[-93.31732941 207.81962585]
[-97.08565521 223.16809082]
[-110.64636230 231.28491211]
[-125.95412445 227.35452271]
[-133.92710876 213.70875549]
[-129.83509827 198.44340515]
[-116.10580444 190.61512756]
[-100.88456726 194.86830139]
[-87.93324280 187.30107117]
[-74.98191833 179.73382568]
[-62.03059387 172.16658020]
[-49.07926559 164.59933472]
[-36.12794113 157.03208923]
[-29.04227448 143.93084717]
[-13.22357082 143.64944458]
[-0.27224499 136.08221436]
[12.67908096 128.51496887]
[25.63040543 120.94772339]
[38.58172989 113.38047791]
[51.53305817 105.81324005]
[59.79373169 93.29280090]
[61.65521240 78.40875244]
[63.51669312 63.52470398]
[49.49247742 55.66844559]
[39.57945251 43.06312180]
[35.27159882 27.65629387]
[37.19977570 11.81398296]
[45.03952408 -2.04266691]
[57.56521225 -11.80740833]
[72.84156799 -16.00903320]
[74.47134399 -30.92022896]
[76.10112762 -45.83142853]
[77.73091125 -60.74262619]
[79.36069489 -75.65382385]
[70.55686188 -77.16395569]
[62.00634003 -82.79513550]
[55.55637741 -92.41004181]
[52.93606567 -105.08296204]
[47.90331650 -119.21347809]
[42.87056732 -133.34399414]
[37.83781433 -147.47450256]
[23.54137230 -159.07493591]
[27.37039566 -176.19793701]
[22.11849976 -190.24847412]
[16.86660385 -204.29901123]
[11.61470604 -218.34954834]
[-0.46464726 -228.56716919]
[2.32674623 -243.19787598]
[-2.92515039 -257.24841309]
[-8.17704678 -271.29895020]
[-13.42894363 -285.34948730]
[-18.68084145 -299.40002441]
[-23.93273735 -313.45056152]
[-29.18463326 -327.50109863]
[-34.43653107 -341.55163574]
[-40.37675858 -348.50051880]
[-39.65898895 -355.86172485]
[-44.69173813 -369.99224854]
[-49.72448730 -384.12277222]
[-60.73463821 -397.01510620]
[-51.39403534 -411.16394043]
[-35.21240616 -406.10516357]
[-35.59397507 -389.15551758]
[-30.56122398 -375.02499390]
[-25.52847290 -360.89447021]
[-20.38599396 -346.80352783]
[-15.13409710 -332.75299072]
[-9.88220024 -318.70245361]
[-4.63030386 -304.65191650]
[0.62159276 -290.60137939]
[5.87348938 -276.55084229]
[11.12538624 -262.50030518]
[16.37728310 -248.44976807]
[28.08098602 -239.23713684]
[25.66524315 -223.60145569]
[30.91713905 -209.55091858]
[36.16903687 -195.50038147]
[41.42093277 -181.44984436]
[52.29766083 -176.14576721]
[56.78571701 -164.47712708]
[51.96833038 -152.50724792]
[57.00107956 -138.37673950]
[62.03382874 -124.24622345]
[67.06658173 -110.11571503]
[74.09185028 -107.48976135]
[76.44972229 -122.30328369]
[78.80760193 -137.11680603]
[78.02392578 -152.09631348]
[88.13859558 -163.17301941]
[103.12750244 -163.74983215]
[114.06351471 -153.48321533]
[114.43335724 -138.48777771]
[104.01605225 -127.69423676]
[96.07921600 -114.96604919]
[88.14238739 -102.23786926]
[95.16765594 -99.61191559]
[108.23509979 -106.97682953]
[121.30254364 -114.34174347]
[134.36997986 -121.70664978]
[147.43742371 -129.07156372]
[160.50486755 -136.43647766]
[173.57231140 -143.80139160]
[186.63975525 -151.16629028]
[199.70719910 -158.53120422]
[210.53695679 -171.57546997]
[226.06941223 -164.77996826]
[223.83929443 -147.97334290]
[207.07211304 -145.46376038]
[194.00466919 -138.09884644]
[180.93722534 -130.73394775]
[167.86978149 -123.36903381]
[154.80233765 -116.00411987]
[141.73489380 -108.63920593]
[128.66744995 -101.27429962]
[115.60000610 -93.90938568]
[102.53256226 -86.54447174]
[94.27188873 -74.02404022]
[92.64211273 -59.11284256]
[91.01232910 -44.20164490]
[89.38254547 -29.29044724]
[87.75276184 -14.37925053]
[100.30879974 -8.10318184]
[109.98812866 2.10432076]
[115.61271667 15.03057384]
[116.48789978 29.13026237]
[112.48813629 42.71017456]
[104.07454681 54.13253784]
[92.24184418 62.01253510]
[78.40074158 65.38618469]
[76.53926086 80.27023315]
[74.67778015 95.15428162]
[82.93240356 82.00368500]
[96.76724243 76.39679718]
[110.68435669 79.80804443]
[119.57984924 90.26727295]
[120.61457825 103.35838318]
[133.56590271 110.92562866]
[149.95870972 110.46952057]
[158.31846619 124.57790375]
[150.04537964 138.73727417]
[133.65008545 138.38169861]
[125.99866486 123.87695312]
[113.04733276 116.30970764]
[101.95449829 123.25202179]
[87.48142242 122.53843689]
[90.03507233 137.31945801]
[92.58872986 152.10049438]
[95.14237976 166.88153076]
[97.69602966 181.66255188]
[100.24968719 196.44358826]
[102.80333710 211.22460938]
[105.35699463 226.00564575]
[109.29582977 231.33030701]
[109.86354065 236.99407959]
[107.75273132 241.28552246]
[109.84546661 256.13882446]
[111.93819427 270.99212646]
[114.03092194 285.84542847]
[128.97854614 288.02377319]
[142.70639038 294.32638550]
[154.10160828 304.24230957]
[162.24044800 316.96774292]
[166.46310425 331.47103882]
[166.42729187 346.57650757]
[162.13589478 361.05963135]
[153.93681335 373.74630737]
[142.49470520 383.60806274]
[128.73712158 389.84552002]
[113.77933502 391.95297241]
[98.83390808 389.75958252]
[85.11239624 383.44320679]
[73.72714233 373.51583862]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 187]
[7 186]
[8 185]
[9 184]
[10 181]
[11 180]
[12 179]
[13 178]
[14 177]
[15 176]
[16 175]
[17 174]
[18 49]
[19 48]
[20 47]
[21 46]
[22 45]
[23 44]
[25 42]
[26 41]
[27 40]
[28 39]
[29 38]
[30 37]
[50 160]
[51 159]
[52 158]
[59 150]
[60 149]
[61 148]
[62 147]
[63 146]
[67 113]
[68 112]
[69 111]
[70 110]
[72 107]
[73 106]
[74 105]
[75 104]
[77 102]
[78 101]
[79 100]
[80 99]
[81 98]
[82 97]
[83 96]
[84 95]
[86 94]
[87 93]
[88 92]
[125 145]
[126 144]
[127 143]
[128 142]
[129 141]
[130 140]
[131 139]
[132 138]
[133 137]
[165 172]
[166 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
