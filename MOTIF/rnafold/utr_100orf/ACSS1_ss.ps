%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:40:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCCGCGGAGACUCCACGGGGCGCCCCGGGCGUGAGGCACCCACUCUGGGAGCACAGAGAGCUCAGGUAGCCUGCCUAGAUGGCGGCGCGCACCCUGGGCCGCGGCGUCGGGAGGCUGCUGGGCAGCCUGCGAGGGCUCUCGGGGCAGCCCGCGCGGCCGCCGUGCGGGGUGAGCGCGC\
) } def
/len { sequence length } bind def

/coor [
[115.39731598 137.34403992]
[104.95452881 141.11364746]
[93.60865784 141.94430542]
[87.53933716 155.66157532]
[81.47001648 169.37882996]
[75.40069580 183.09609985]
[76.89249420 198.84681702]
[64.66712952 207.35502625]
[58.59780502 221.07229614]
[52.52848434 234.78956604]
[51.64891434 251.72067261]
[35.13598633 255.56248474]
[26.87308502 240.75839233]
[38.81122208 228.72024536]
[44.88054276 215.00297546]
[50.94986343 201.28570557]
[49.02394867 186.51614380]
[61.68343353 177.02677917]
[67.75275421 163.30950928]
[73.82207489 149.59225464]
[79.89139557 135.87498474]
[68.36362457 126.27756500]
[55.97353745 134.73248291]
[43.58344650 143.18740845]
[31.19335938 151.64233398]
[18.80327034 160.09724426]
[9.12814236 174.01947021]
[-6.92833471 168.57650757]
[-6.14295673 151.64076233]
[10.34834862 147.70716858]
[22.73843765 139.25224304]
[35.12852478 130.79731750]
[47.51861572 122.34239960]
[59.90870285 113.88747406]
[57.81975555 101.84706879]
[59.25130463 89.77132416]
[45.10229111 84.79081726]
[30.95327950 79.81031036]
[16.80426788 74.82980347]
[2.61256528 69.97227478]
[-11.62075806 65.23809052]
[-25.85408020 60.50390244]
[-43.96162415 71.14371490]
[-63.77052307 65.10218811]
[-72.60513306 46.69519806]
[-87.13258362 42.95980835]
[-101.66003418 39.22441483]
[-116.18748474 35.48902512]
[-130.71493530 31.75363350]
[-144.19192505 40.00871277]
[-159.53907776 36.23508072]
[-167.65121460 22.67156601]
[-163.71553040 7.36516285]
[-150.06701660 -0.60311192]
[-134.80307007 3.49417710]
[-126.97954559 17.22618103]
[-112.45209503 20.96157265]
[-97.92464447 24.69696426]
[-83.39719391 28.43235588]
[-68.86974335 32.16774750]
[-62.63013077 25.11781311]
[-54.19287872 20.81167030]
[-44.70755386 19.88365364]
[-35.48405838 22.50455093]
[-27.81175613 28.35208893]
[-22.77922249 36.64993668]
[-21.11989403 46.27058029]
[-6.88657093 51.00476456]
[7.34675169 55.73895264]
[14.70593262 54.86419296]
[21.78477478 60.68079376]
[35.93378830 65.66130066]
[50.08279800 70.64180756]
[64.23181152 75.62231445]
[74.69944763 64.87854004]
[69.35229492 50.86397934]
[64.00514221 36.84941483]
[50.00875092 29.00846100]
[47.55474091 13.15420532]
[58.52562332 1.44867885]
[74.50547028 2.87135839]
[83.23591614 16.33088684]
[78.01970673 31.50226402]
[83.36685944 45.51682663]
[88.71400452 59.53139114]
[118.39979553 65.42216492]
[134.47129822 88.54638672]
[149.37594604 86.85768127]
[164.28057861 85.16897583]
[179.18522644 83.48027039]
[192.02659607 74.23853302]
[205.54402161 80.49379730]
[220.44865417 78.80509186]
[235.35330200 77.11638641]
[250.25793457 75.42768097]
[265.16256714 73.73897552]
[280.06719971 72.05026245]
[294.97186279 70.36155701]
[307.81323242 61.11981964]
[321.33065796 67.37508392]
[336.23529053 65.68637848]
[349.07666016 56.44464111]
[362.59408569 62.69990921]
[377.49871826 61.01120377]
[392.40338135 59.32249451]
[407.30801392 57.63378906]
[422.21264648 55.94508362]
[437.10208130 54.12709045]
[451.97515869 52.17995453]
[466.83078003 50.10381699]
[481.66784668 47.89883804]
[496.50488281 45.69385529]
[511.34191895 43.48887634]
[520.75262451 31.07611656]
[535.83093262 29.05131340]
[547.60656738 38.09946823]
[562.44366455 35.89448929]
[577.28070068 33.68950653]
[585.33471680 29.32193565]
[592.39416504 31.57733536]
[607.26727295 29.63019753]
[622.14031982 27.68306160]
[637.01342773 25.73592377]
[651.88647461 23.78878593]
[660.01513672 19.56165886]
[667.03436279 21.93924141]
[681.93896484 20.25053596]
[696.84362793 18.56182861]
[711.74829102 16.87312126]
[726.65289307 15.18441486]
[739.51281738 5.00824308]
[754.65374756 11.30785179]
[756.49993896 27.60274315]
[743.15228271 37.13013077]
[728.34161377 30.08905411]
[713.43695068 31.77776146]
[698.53234863 33.46646881]
[683.62768555 35.15517426]
[668.72308350 36.84387970]
[653.83361816 38.66187286]
[638.96057129 40.60900879]
[624.08746338 42.55614471]
[609.21435547 44.50328445]
[594.34130859 46.45042038]
[579.48565674 48.52655792]
[564.64862061 50.73153687]
[549.81158447 52.93651962]
[541.17602539 65.01805115]
[526.16058350 67.46556854]
[513.54693604 58.32592392]
[498.70986938 60.53090668]
[483.87280273 62.73588562]
[469.03576660 64.94086456]
[462.86511230 69.04523468]
[453.92230225 67.05303955]
[439.04919434 69.00017548]
[432.80825806 72.99682617]
[423.90136719 70.84972382]
[408.99670410 72.53842926]
[394.09207153 74.22713470]
[379.18743896 75.91584015]
[364.28280640 77.60454559]
[352.50750732 86.72550201]
[337.92401123 80.59101868]
[323.01934814 82.27972412]
[311.24407959 91.40068054]
[296.66055298 85.26619720]
[281.75592041 86.95490265]
[266.85128784 88.64360809]
[251.94664001 90.33232117]
[237.04200745 92.02102661]
[222.13735962 93.70973206]
[207.23272705 95.39843750]
[195.45742798 104.51939392]
[180.87393188 98.38491058]
[165.96928406 100.07361603]
[151.06465149 101.76232147]
[136.16000366 103.45102692]
[134.86448669 113.37417603]
[130.82623291 122.82888794]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 21]
[4 20]
[5 19]
[6 18]
[8 16]
[9 15]
[10 14]
[22 34]
[23 33]
[24 32]
[25 31]
[26 30]
[36 74]
[37 73]
[38 72]
[39 71]
[40 69]
[41 68]
[42 67]
[45 60]
[46 59]
[47 58]
[48 57]
[49 56]
[75 85]
[76 84]
[77 83]
[87 178]
[88 177]
[89 176]
[90 175]
[92 173]
[93 172]
[94 171]
[95 170]
[96 169]
[97 168]
[98 167]
[100 165]
[101 164]
[103 162]
[104 161]
[105 160]
[106 159]
[107 158]
[108 156]
[109 155]
[110 153]
[111 152]
[112 151]
[113 150]
[116 147]
[117 146]
[118 145]
[120 144]
[121 143]
[122 142]
[123 141]
[124 140]
[126 139]
[127 138]
[128 137]
[129 136]
[130 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
