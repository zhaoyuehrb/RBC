%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:35:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGGGAGGGCGGGCCUGUUUCCGGGAGGCGCGUGGGGCUUGAGGCCGAGAACGGCCCUUGCUGCCACCAACAUGGAGACUUUGUACCGUGUCCCGUUCUUAGUGCUCGAAUGUCCCAACCUGAAGCUGAAGAAGCCGCCCUGGUUGCACAUGCCGUCGGCCAUGACUGUGU\
) } def
/len { sequence length } bind def

/coor [
[86.26660919 112.15496063]
[88.23286438 105.35903168]
[92.54348755 100.97641754]
[80.18676758 92.47280121]
[67.83005524 83.96918488]
[55.47333527 75.46556091]
[39.62300491 81.31943512]
[23.56224632 76.63201141]
[13.54964542 63.43573380]
[13.36406994 47.03790665]
[0.85410291 38.76139069]
[-11.65586472 30.48487282]
[-24.16583252 22.20835686]
[-36.67580032 13.93184090]
[-49.26082993 5.76991606]
[-61.91987228 -2.27673650]
[-74.57891846 -10.32338905]
[-88.18606567 -3.33821511]
[-103.36241150 -4.09681129]
[-116.03714752 -12.29543495]
[-122.86069489 -25.64815521]
[-122.08966064 -40.52333832]
[-134.74870300 -48.56999207]
[-147.40774536 -56.61664581]
[-160.06678772 -64.66329956]
[-172.72583008 -72.70995331]
[-188.52291870 -73.58317566]
[-195.11331177 -86.94042969]
[-207.77235413 -94.98707581]
[-220.43139648 -103.03372955]
[-244.04032898 -93.77901459]
[-268.36599731 -113.80228424]
[-282.94512939 -117.33060455]
[-297.52426147 -120.85891724]
[-312.10339355 -124.38722992]
[-326.71411133 -127.78225708]
[-341.35525513 -131.04371643]
[-355.99639893 -134.30516052]
[-365.63882446 -124.42640686]
[-378.80163574 -120.64141083]
[-392.00802612 -123.83840942]
[-401.82455444 -133.07594299]
[-405.75378418 -145.85668945]
[-420.33291626 -149.38500977]
[-434.91204834 -152.91331482]
[-449.49118042 -156.44163513]
[-464.07031250 -159.96995544]
[-479.64132690 -154.82450867]
[-491.70120239 -165.93717957]
[-487.84378052 -181.87619019]
[-472.03723145 -186.24487305]
[-460.54199219 -174.54907227]
[-445.96286011 -171.02076721]
[-431.38372803 -167.49244690]
[-416.80459595 -163.96412659]
[-402.22546387 -160.43582153]
[-390.08837891 -171.46369934]
[-373.60595703 -173.11402893]
[-359.23828125 -164.54141235]
[-352.73495483 -148.94630432]
[-338.09381104 -145.68484497]
[-323.45266724 -142.42340088]
[-316.21340942 -144.04423523]
[-308.57507324 -138.96635437]
[-293.99594116 -135.43804932]
[-279.41680908 -131.90972900]
[-264.83767700 -128.38140869]
[-259.78198242 -133.92126465]
[-249.67059326 -145.00097656]
[-244.61489868 -150.54081726]
[-249.45811462 -164.73742676]
[-254.30131531 -178.93402100]
[-266.08001709 -189.49682617]
[-262.86651611 -204.04064941]
[-267.70971680 -218.23724365]
[-278.54635620 -231.27578735]
[-269.01724243 -245.29835510]
[-252.90476990 -240.02348328]
[-253.51312256 -223.08044434]
[-248.66990662 -208.88385010]
[-237.23764038 -199.33647156]
[-240.10472107 -183.77722168]
[-235.26150513 -169.58062744]
[-230.41830444 -155.38403320]
[-215.02287292 -144.71931458]
[-209.08973694 -129.41847229]
[-212.38473511 -115.69277191]
[-199.72569275 -107.64612579]
[-187.06665039 -99.59947205]
[-172.17501831 -99.30179596]
[-164.67918396 -85.36899567]
[-152.02014160 -77.32234192]
[-139.36109924 -69.27568817]
[-126.70204926 -61.22903442]
[-114.04300690 -53.18238449]
[-100.90157318 -60.19438553]
[-85.91506958 -59.68366623]
[-73.11176300 -51.68730927]
[-65.98319244 -38.26791000]
[-66.53226471 -22.98243332]
[-53.87321854 -14.93577957]
[-41.21417618 -6.88912725]
[-33.85522842 -5.95117474]
[-28.39928246 1.42187381]
[-15.88931561 9.69839001]
[-3.37934828 17.97490692]
[9.13061905 26.25142288]
[21.64058685 34.52793884]
[33.67704010 28.70469093]
[47.12635040 29.60589790]
[58.45906067 37.10249710]
[64.64808655 49.32059860]
[63.97695160 63.10884476]
[76.33367157 71.61246490]
[88.69039154 80.11608124]
[101.04710388 88.61969757]
[115.19888306 93.59235382]
[130.15885925 94.68728638]
[145.11885071 95.78221130]
[160.07882690 96.87714386]
[169.58146667 82.13163757]
[185.15388489 74.24990082]
[202.48596191 75.31288147]
[216.83103943 84.93954468]
[224.30603027 100.41593933]
[239.29602051 100.96376801]
[254.28601074 101.51159668]
[266.96853638 91.68646240]
[282.52288818 95.61604309]
[289.01712036 110.28590393]
[281.46939087 124.44257355]
[265.66967773 127.22628021]
[253.73818970 116.50158691]
[238.74818420 115.95375824]
[223.75819397 115.40592957]
[218.21463013 126.80344391]
[208.72882080 135.27944946]
[196.69354248 139.54183960]
[183.89401245 138.92073059]
[172.24316406 133.47340393]
[163.49571228 123.98109436]
[158.98390198 111.83712769]
[144.02392578 110.74219513]
[129.06393433 109.64727020]
[114.10395050 108.55233765]
[105.94202423 121.13736725]
[113.04315948 134.35000610]
[120.14429474 147.56265259]
[127.24542999 160.77528381]
[134.34657288 173.98793030]
[138.19447327 176.17521667]
[140.85743713 179.18199158]
[142.22293091 182.52746582]
[142.34880066 185.74444580]
[141.44351196 188.43450928]
[147.56124878 202.13024902]
[153.67898560 215.82598877]
[159.79670715 229.52172852]
[173.38591003 238.70137024]
[171.96095276 255.03849792]
[156.98771667 261.72686768]
[143.86938477 251.88606262]
[146.10096741 235.63946533]
[139.98323059 221.94372559]
[133.86550903 208.24798584]
[127.74777222 194.55224609]
[121.13392639 181.08906555]
[114.03279114 167.87641907]
[106.93165588 154.66378784]
[99.83052063 141.45114136]
[92.72938538 128.23851013]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 116]
[4 115]
[5 114]
[6 113]
[10 108]
[11 107]
[12 106]
[13 105]
[14 104]
[15 102]
[16 101]
[17 100]
[22 95]
[23 94]
[24 93]
[25 92]
[26 91]
[28 89]
[29 88]
[30 87]
[32 67]
[33 66]
[34 65]
[35 64]
[36 62]
[37 61]
[38 60]
[43 56]
[44 55]
[45 54]
[46 53]
[47 52]
[70 84]
[71 83]
[72 82]
[74 80]
[75 79]
[117 145]
[118 144]
[119 143]
[120 142]
[125 135]
[126 134]
[127 133]
[146 171]
[147 170]
[148 169]
[149 168]
[150 167]
[155 166]
[156 165]
[157 164]
[158 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
