%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:25:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUUGCGUCGGGUCACGUGGGCGCGCAGGCGCAGCGCGGUGCAGCCCGUUCGCUCACACAAAGCCCAGACGCGGAGAAAAUGGCGGCAGGGGUCGAAGCGGCGGCGGAGGUGGCGGCGACGGAGAUCAAAAUGGAGGAAGAGAGCGGCGCGCCCGGCGUGCCGAGCGGCAACGGGGCUC\
) } def
/len { sequence length } bind def

/coor [
[107.86894226 464.86645508]
[114.42470551 450.97698975]
[127.05603790 442.23941040]
[125.75591278 427.29586792]
[124.45578003 412.35232544]
[123.15564728 397.40875244]
[121.85551453 382.46520996]
[120.42575073 367.53350830]
[118.86645508 352.61477661]
[107.17089081 343.46331787]
[105.37702179 328.35580444]
[115.05522919 316.15048218]
[113.49593353 301.23175049]
[109.66310883 294.88885498]
[112.04135132 286.04086304]
[110.74121857 271.09732056]
[109.44108582 256.15377808]
[108.14095306 241.21022034]
[106.84082031 226.26667786]
[105.41105652 211.33497620]
[103.85176086 196.41624451]
[102.29246521 181.49751282]
[100.73316956 166.57878113]
[99.17387390 151.66003418]
[97.61457825 136.74130249]
[96.05528259 121.82257843]
[94.49598694 106.90383911]
[89.55340576 111.62188721]
[84.04978943 115.76216125]
[69.52233887 119.49755096]
[54.99488449 123.23294067]
[40.50039673 127.09426880]
[26.03996658 131.08123779]
[11.57953358 135.06820679]
[3.99551558 148.93392944]
[-11.19500923 153.29551697]
[-24.97977257 145.56532288]
[-29.18051910 130.32952881]
[-21.30501747 116.62727356]
[-6.02566767 112.58784485]
[7.59256649 120.60777283]
[22.05299759 116.62080383]
[36.51343155 112.63383484]
[42.14114761 107.81185150]
[51.25949478 108.70549011]
[65.78694153 104.97010040]
[80.31439972 101.23471069]
[67.01197815 94.30320740]
[64.95846558 79.44443512]
[75.88227081 69.16481781]
[90.58897400 72.11657715]
[96.70014191 85.81533051]
[101.31063080 71.54145813]
[105.92111206 57.26758194]
[110.53160095 42.99371338]
[115.14208984 28.71984100]
[104.45991516 39.25032806]
[89.56688690 41.03852844]
[76.69549561 33.33611298]
[71.23220062 19.36641502]
[75.46331787 4.97552633]
[87.61817932 -3.81419873]
[102.61018372 -3.32440305]
[114.16606903 6.24101925]
[108.33573914 -7.57951784]
[102.50540924 -21.40005493]
[96.67507935 -35.22059250]
[80.16334534 -38.82942963]
[69.15785980 -51.43718338]
[67.83909607 -67.95407867]
[76.52876282 -81.86673737]
[70.45944214 -95.58399963]
[64.39012146 -109.30126190]
[49.11075974 -110.86225128]
[36.66833878 -119.86679077]
[30.40980911 -133.89271545]
[32.01868057 -149.16709900]
[41.06217575 -161.58123779]
[55.10764313 -167.79577637]
[70.37691498 -166.13903809]
[82.76264191 -157.05667114]
[88.93312836 -142.99179077]
[87.22853088 -127.72778320]
[78.10738373 -115.37058258]
[84.17670441 -101.65332031]
[90.24602509 -87.93605804]
[103.51703644 -86.34850311]
[114.35346985 -78.34104919]
[119.85567474 -65.92313385]
[118.48575592 -52.30121994]
[110.49562073 -41.05092239]
[116.32595062 -27.23038483]
[122.15628052 -13.40984821]
[127.98661041 0.41068956]
[142.89125061 2.09939623]
[151.66584778 -10.06639194]
[149.34237671 -25.46896362]
[158.41436768 -37.68180466]
[173.11268616 -39.80196381]
[181.88728333 -51.96775055]
[183.68466187 -67.68653107]
[197.40513611 -73.48290253]
[206.17973328 -85.64868927]
[207.97711182 -101.36746979]
[221.69758606 -107.16384125]
[230.47218323 -119.32962799]
[231.59051514 -135.69059753]
[246.43569946 -142.65858459]
[259.73626709 -133.06552124]
[257.80975342 -116.77993011]
[242.63796997 -110.55503082]
[233.86337280 -98.38923645]
[232.69361877 -83.54064178]
[218.34552002 -76.87409210]
[209.57092285 -64.70829773]
[208.40116882 -49.85969925]
[194.05308533 -43.19314957]
[185.27847290 -31.02736282]
[187.90565491 -16.41115570]
[179.18026733 -3.94831824]
[163.83163452 -1.29179204]
[155.05703735 10.87399578]
[168.59005737 4.40427971]
[183.30126953 1.47507381]
[198.25682068 2.62902594]
[212.34455872 7.78032351]
[224.51684570 16.54589653]
[233.86853027 28.27390099]
[239.70416260 42.09220123]
[241.58979797 56.97320557]
[239.38519287 71.81031799]
[233.25431824 85.50017548]
[223.65307617 97.02476501]
[211.29544067 105.52705383]
[197.10038757 110.37480164]
[182.12351990 111.20748901]
[167.47857666 107.96320343]
[154.25459290 100.88320923]
[143.43498230 90.49398804]
[135.82431030 77.56813049]
[131.98854065 63.06686020]
[132.21313477 48.06721497]
[129.41595459 33.33032608]
[124.80547333 47.60419846]
[120.19498444 61.87807083]
[115.58450317 76.15193939]
[110.97401428 90.42581177]
[109.41471863 105.34454346]
[110.97401428 120.26328278]
[112.53330994 135.18200684]
[114.09260559 150.10073853]
[115.65190125 165.01948547]
[117.21119690 179.93821716]
[118.77049255 194.85694885]
[120.32978821 209.77568054]
[124.34387970 218.01156616]
[121.78437042 224.96655273]
[123.08450317 239.91009521]
[124.38463593 254.85363770]
[125.68476868 269.79718018]
[126.98490143 284.74075317]
[128.41467285 299.67245483]
[129.97396851 314.59118652]
[141.96681213 324.53146362]
[143.33563232 339.68338013]
[133.78518677 351.05548096]
[135.34448242 365.97421265]
[139.35856628 374.21011353]
[136.79907227 381.16510010]
[138.09919739 396.10864258]
[139.39932251 411.05218506]
[140.69946289 425.99572754]
[141.99958801 440.93927002]
[155.95010376 447.36413574]
[164.80604553 459.91275024]
[166.18524170 475.20959473]
[159.71669006 489.13989258]
[147.14038086 497.95648193]
[131.83927917 499.28771973]
[117.92932892 492.77551270]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 173]
[4 172]
[5 171]
[6 170]
[7 169]
[8 167]
[9 166]
[12 163]
[13 162]
[15 161]
[16 160]
[17 159]
[18 158]
[19 157]
[20 155]
[21 154]
[22 153]
[23 152]
[24 151]
[25 150]
[26 149]
[27 148]
[29 47]
[30 46]
[31 45]
[32 43]
[33 42]
[34 41]
[52 147]
[53 146]
[54 145]
[55 144]
[56 143]
[64 94]
[65 93]
[66 92]
[67 91]
[71 86]
[72 85]
[73 84]
[95 122]
[96 121]
[99 118]
[100 117]
[102 115]
[103 114]
[105 112]
[106 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
