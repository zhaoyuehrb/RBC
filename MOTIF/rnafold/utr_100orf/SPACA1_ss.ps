%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:53:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCACGGGAUUCGGAGCCGGGCGGCUACGGGCGGGGUGUCGCAGCUCUCUUCGACGUACCUGUCCUCAGGAGCCGCGGCGGCGACUGCGCCUCGGACGGCCGUCGGGGCCGAGAACCAUGAGCCCCAGGGGCACGGGCUGCUCCGCCGGGCUGCUGAUGACUGUCGGCUGGCUGCUUCUGGCGGGCCUCCAGUCCGCGCGCGGGACCAACGUCACCG\
) } def
/len { sequence length } bind def

/coor [
[69.29341888 105.43558502]
[75.37066650 85.11824036]
[60.67491531 82.11241913]
[45.97916794 79.10660553]
[30.90844727 83.92158508]
[19.98978615 73.79083252]
[5.29403687 70.78501892]
[-7.79640579 79.22764587]
[-22.65716743 75.96997833]
[-30.62525558 63.43821335]
[-45.32100677 60.43239594]
[-60.01675797 57.42658234]
[-74.71250916 54.42076492]
[-89.40825653 51.41494751]
[-100.57830811 57.85736465]
[-112.75392914 55.05480576]
[-119.53314209 45.04033279]
[-134.18405151 41.82305527]
[-149.32258606 46.42035675]
[-160.09413147 36.13331604]
[-174.74504089 32.91603851]
[-189.39595032 29.69876099]
[-204.04685974 26.48148537]
[-218.69776917 23.26420784]
[-233.34867859 20.04693222]
[-247.99958801 16.82965469]
[-266.92294312 23.78707695]
[-280.61871338 10.13317013]
[-295.35626221 7.33943939]
[-310.11355591 4.65197134]
[-324.88980103 2.07090545]
[-339.66607666 -0.51016057]
[-354.44235229 -3.09122658]
[-369.36804199 2.15605807]
[-380.57412720 -7.65583181]
[-395.35040283 -10.23689747]
[-410.12664795 -12.81796360]
[-424.92114258 -15.29249382]
[-439.73306274 -17.66035843]
[-454.54501343 -20.02822304]
[-469.35693359 -22.39608765]
[-484.16885376 -24.76395226]
[-499.01739502 -19.30212593]
[-510.36370850 -28.95151329]
[-525.17559814 -31.31937790]
[-542.22210693 -24.34887123]
[-555.40002441 -35.94138336]
[-570.24456787 -38.09555435]
[-585.08905029 -40.24972916]
[-599.93359375 -42.40390015]
[-614.77807617 -44.55807114]
[-633.15148926 -36.25636292]
[-647.79467773 -48.88884735]
[-662.69512939 -50.61433411]
[-677.59552002 -52.33982468]
[-692.49597168 -54.06531143]
[-707.32397461 -47.06081390]
[-720.64807129 -56.62111664]
[-718.76165771 -72.91139984]
[-703.60522461 -79.17362213]
[-690.77050781 -68.96573639]
[-675.87005615 -67.24024963]
[-660.96960449 -65.51476288]
[-646.06921387 -63.78927231]
[-638.66912842 -70.82643127]
[-628.40197754 -72.67020416]
[-618.61218262 -68.47488403]
[-612.62390137 -59.40258408]
[-597.77941895 -57.24841309]
[-582.93487549 -55.09423828]
[-568.09039307 -52.94006729]
[-553.24591064 -50.78589630]
[-543.37145996 -57.76755524]
[-530.98956299 -56.09790802]
[-522.80773926 -46.13130569]
[-507.99581909 -43.76344299]
[-494.20675659 -49.39463425]
[-481.80099487 -39.57588196]
[-466.98907471 -37.20801544]
[-452.17712402 -34.84015274]
[-437.36520386 -32.47228622]
[-422.55328369 -30.10442162]
[-415.45584106 -32.15142441]
[-407.54559326 -27.59423256]
[-392.76931763 -25.01316643]
[-377.99307251 -22.43210030]
[-364.12426758 -27.86400032]
[-351.86129761 -17.86749458]
[-337.08502197 -15.28642845]
[-322.30874634 -12.70536232]
[-307.53247070 -10.12429714]
[-300.40628052 -12.06881046]
[-292.56253052 -7.39809990]
[-277.82498169 -4.60436869]
[-269.93750000 -11.09051991]
[-259.56427002 -12.19034863]
[-250.10185242 -7.30112314]
[-244.78230286 2.17874670]
[-230.13139343 5.39602327]
[-215.48048401 8.61329937]
[-200.82957458 11.83057594]
[-186.17866516 15.04785252]
[-171.52775574 18.26512909]
[-156.87684631 21.48240662]
[-142.78623962 16.65498352]
[-130.96676636 27.17214775]
[-116.31586456 30.38942337]
[-99.89721680 24.18678665]
[-86.40244293 36.71920013]
[-71.70668793 39.72501373]
[-57.01094055 42.73083115]
[-42.31518936 45.73664474]
[-27.61944008 48.74246216]
[-15.37071991 40.34577179]
[-0.42432070 43.18474960]
[8.29985237 56.08926392]
[22.99560356 59.09508133]
[37.01518250 54.06510925]
[48.98498154 64.41085815]
[63.68073273 67.41667175]
[78.37648010 70.42248535]
[92.04129791 64.23598480]
[99.47881317 51.20972443]
[106.91632080 38.18346786]
[114.35383606 25.15720940]
[116.95667267 8.40425110]
[133.77545166 6.26768875]
[140.48442078 21.83772659]
[127.38009644 32.59472275]
[119.94258118 45.62097931]
[112.50506592 58.64723969]
[105.06755829 71.67350006]
[122.93274689 77.12947845]
[135.45393372 93.75672150]
[150.43991089 94.40501404]
[165.42590332 95.05330658]
[180.41188049 95.70159912]
[195.39787292 96.34989166]
[210.38385010 96.99818420]
[225.36984253 97.64647675]
[243.74372864 86.61215210]
[260.65811157 98.44353485]
[275.65811157 98.44353485]
[290.65811157 98.44353485]
[305.65811157 98.44353485]
[320.65811157 98.44353485]
[335.65811157 98.44353485]
[350.65811157 98.44353485]
[365.65811157 98.44353485]
[380.64837646 97.90323639]
[395.60943604 96.82334900]
[410.57052612 95.74346161]
[425.52343750 94.55580139]
[440.46740723 93.26042938]
[455.41134644 91.96505737]
[470.35531616 90.66968536]
[485.29928589 89.37431335]
[500.24325562 88.07894135]
[513.36682129 78.24517059]
[528.33648682 84.94156647]
[529.75268555 101.27944946]
[516.15856934 110.45180511]
[501.53860474 103.02290344]
[486.59466553 104.31827545]
[471.65069580 105.61364746]
[456.70672607 106.90901947]
[441.76275635 108.20439148]
[426.81881714 109.49976349]
[420.42977905 113.20707703]
[411.65042114 110.70453644]
[396.68933105 111.78443146]
[381.72827148 112.86431885]
[391.21313477 124.48486328]
[388.18643188 139.17631531]
[374.88076782 146.10159302]
[361.11102295 140.15226746]
[357.03442383 125.71685028]
[365.65811157 113.44353485]
[350.65811157 113.44353485]
[335.65811157 113.44353485]
[320.65811157 113.44353485]
[305.65811157 113.44353485]
[290.65811157 113.44353485]
[275.65811157 113.44353485]
[260.65811157 113.44353485]
[255.49203491 120.65350342]
[247.46656799 124.74276733]
[238.32202148 124.68276215]
[230.10746765 120.36058807]
[224.72154236 112.63246155]
[209.73556519 111.98416901]
[194.74957275 111.33587646]
[179.76359558 110.68758392]
[164.77760315 110.03929138]
[149.79162598 109.39099884]
[134.80564880 108.74270630]
[130.10536194 114.58714294]
[141.79406738 123.98789215]
[132.39312744 135.67643738]
[120.70481110 126.27600861]
[116.00453186 132.12043762]
[119.85200500 146.61860657]
[123.69947815 161.11677551]
[127.65132141 175.58685303]
[131.70732117 190.02807617]
[135.76332092 204.46928406]
[147.86927795 215.53173828]
[144.07814026 231.48664856]
[128.28988647 235.92098999]
[116.74613953 224.27307129]
[121.32210541 208.52529907]
[117.26609802 194.08407593]
[113.21009827 179.64285278]
[108.37770844 174.05610657]
[109.20130920 164.96424866]
[105.35383606 150.46607971]
[101.50636292 135.96791077]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 121]
[3 120]
[4 119]
[6 117]
[7 116]
[10 113]
[11 112]
[12 111]
[13 110]
[14 109]
[17 107]
[18 106]
[20 104]
[21 103]
[22 102]
[23 101]
[24 100]
[25 99]
[26 98]
[28 94]
[29 93]
[30 91]
[31 90]
[32 89]
[33 88]
[35 86]
[36 85]
[37 84]
[38 82]
[39 81]
[40 80]
[41 79]
[42 78]
[44 76]
[45 75]
[47 72]
[48 71]
[49 70]
[50 69]
[51 68]
[53 64]
[54 63]
[55 62]
[56 61]
[122 132]
[123 131]
[124 130]
[125 129]
[134 196]
[135 195]
[136 194]
[137 193]
[138 192]
[139 191]
[140 190]
[142 185]
[143 184]
[144 183]
[145 182]
[146 181]
[147 180]
[148 179]
[149 178]
[150 172]
[151 171]
[152 170]
[153 168]
[154 167]
[155 166]
[156 165]
[157 164]
[158 163]
[201 217]
[202 216]
[203 215]
[204 213]
[205 212]
[206 211]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
