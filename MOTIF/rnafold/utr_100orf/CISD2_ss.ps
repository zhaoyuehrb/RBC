%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:15:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCCGAGGCCGCCAGUGCCCGCCGGCCGCUUCCGCUCCCGGCGCAGGCGCGGCAGCUUGGCCAGAGCGGAGGGGGCUCGGGAGAGGAGUGGACGCCGCUGGCCAGGAUGGUGCUGGAGAGCGUGGCCCGUAUCGUGAAGGUGCAGCUCCCUGCAUAUCUGAAGCGGCUCCCAGUCCCUGAAAGCAUUACCGGGUUCGCUAGGCUCA\
) } def
/len { sequence length } bind def

/coor [
[-108.46810913 267.14871216]
[-118.27296448 264.26141357]
[-130.74501038 272.59497070]
[-143.21705627 280.92852783]
[-155.68910217 289.26208496]
[-168.16114807 297.59564209]
[-180.63317871 305.92919922]
[-186.03157043 313.30068970]
[-193.35713196 314.29275513]
[-205.95361328 322.43698120]
[-213.34156799 336.42730713]
[-228.23045349 336.84002686]
[-240.82693481 344.98428345]
[-253.42341614 353.12850952]
[-258.93252563 360.41763306]
[-266.27221680 361.29895020]
[-278.99026489 369.25201416]
[-291.70834351 377.20507812]
[-304.42639160 385.15811157]
[-317.14443970 393.11117554]
[-329.74093628 401.25543213]
[-342.21298218 409.58895874]
[-354.68499756 417.92251587]
[-367.15704346 426.25607300]
[-379.62908936 434.58963013]
[-392.10113525 442.92318726]
[-395.30529785 458.16690063]
[-408.07244873 466.44064331]
[-422.58526611 463.29202271]
[-435.05731201 471.62557983]
[-441.82122803 486.56481934]
[-458.16534424 487.90725708]
[-467.27621460 474.27185059]
[-459.78137207 459.68557739]
[-443.39086914 459.15353394]
[-430.91882324 450.81997681]
[-428.27395630 436.20697021]
[-415.74423218 427.57788086]
[-400.43469238 430.45114136]
[-387.96264648 422.11758423]
[-375.49060059 413.78402710]
[-363.01855469 405.45046997]
[-350.54650879 397.11691284]
[-338.07446289 388.78338623]
[-336.28042603 384.35498047]
[-331.68414307 381.00759888]
[-325.09750366 380.39312744]
[-312.37945557 372.44006348]
[-299.66137695 364.48699951]
[-286.94332886 356.53396606]
[-274.22528076 348.58090210]
[-261.56765747 340.53201294]
[-248.97117615 332.38778687]
[-236.37467957 324.24356079]
[-229.88771057 310.83578491]
[-214.09783936 309.84051514]
[-201.50135803 301.69625854]
[-188.96673584 293.45715332]
[-176.49468994 285.12359619]
[-164.02264404 276.79003906]
[-151.55061340 268.45648193]
[-139.07856750 260.12292480]
[-126.60652161 251.78936768]
[-119.34864807 233.86848450]
[-99.21732330 232.85319519]
[-87.00267029 224.14674377]
[-74.78801727 215.44030762]
[-62.57336044 206.73385620]
[-60.37105942 192.04762268]
[-48.10768890 183.04405212]
[-32.71834946 185.45359802]
[-20.50369263 176.74714661]
[-14.63070107 163.05929565]
[1.09788120 161.34983826]
[13.31253719 152.64338684]
[25.52719307 143.93695068]
[37.74184799 135.23049927]
[49.95650482 126.52405548]
[62.17115784 117.81761169]
[74.38581848 109.11116791]
[86.60047150 100.40472412]
[91.50154114 90.02245331]
[102.41824341 87.42341614]
[113.34035492 77.14199829]
[117.44532013 68.97922516]
[124.50593567 66.78932953]
[135.58207703 56.67404938]
[146.65823364 46.55876923]
[151.63075256 31.53929710]
[166.24636841 28.66993523]
[177.32252502 18.55465698]
[188.39866638 8.43937778]
[189.27272034 -7.11291504]
[200.64961243 -17.21346283]
[215.47094727 -16.28434753]
[226.54710388 -26.39962769]
[237.62326050 -36.51490784]
[248.69940186 -46.63018417]
[259.77554321 -56.74546432]
[270.85171509 -66.86074066]
[268.66146851 -77.30650330]
[270.98822021 -87.63993073]
[277.34649658 -96.01018524]
[286.53500366 -100.94667816]
[296.86309814 -101.61724091]
[306.46176147 -97.96771240]
[317.98474121 -107.57089996]
[329.50769043 -117.17409515]
[341.03067017 -126.77729034]
[352.55361938 -136.38047791]
[357.14395142 -144.28051758]
[364.32391357 -146.04010010]
[375.99060059 -155.46817017]
[387.65728760 -164.89622498]
[393.52758789 -179.58807373]
[408.28979492 -181.56971741]
[419.95648193 -190.99778748]
[424.66558838 -198.82759094]
[431.87130737 -200.47854614]
[443.67904663 -209.72932434]
[455.48681641 -218.98010254]
[467.29455566 -228.23089600]
[472.12139893 -235.98867798]
[479.35122681 -237.53060913]
[491.29736328 -246.60200500]
[493.57528687 -262.01138306]
[505.81958008 -271.04089355]
[520.49603271 -268.77426147]
[532.44213867 -277.84564209]
[530.43450928 -293.07278442]
[536.32421875 -307.25750732]
[548.52703857 -316.58422852]
[563.76031494 -318.54412842]
[577.92657471 -312.60995483]
[587.21496582 -300.37802124]
[589.12713623 -285.13861084]
[583.14855957 -270.99108887]
[570.88757324 -261.74102783]
[555.64227295 -259.87667847]
[541.51354980 -265.89953613]
[529.56738281 -256.82815552]
[527.80969238 -242.08209229]
[515.82385254 -232.71223450]
[500.36874390 -234.65588379]
[488.42260742 -225.58448792]
[476.54534912 -216.42314148]
[464.73757935 -207.17234802]
[452.92984009 -197.92156982]
[441.12210083 -188.67079163]
[429.38452148 -179.33110046]
[417.71783447 -169.90303040]
[412.68200684 -155.88555908]
[397.08535767 -153.22953796]
[385.41867065 -143.80148315]
[373.75198364 -134.37341309]
[362.15679932 -124.85751343]
[350.63385010 -115.25432587]
[339.11090088 -105.65113068]
[327.58792114 -96.04793549]
[316.06497192 -86.44474792]
[315.73315430 -66.96841431]
[300.95928955 -53.80960083]
[280.96697998 -55.78459167]
[269.89083862 -45.66931534]
[258.81469727 -35.55403519]
[247.73854065 -25.43875504]
[236.66238403 -15.32347584]
[225.58622742 -5.20819664]
[225.17022705 9.63641644]
[214.08152771 20.05253220]
[198.51394653 19.51552773]
[187.43778992 29.63080788]
[176.36164856 39.74608612]
[172.18136597 54.04204941]
[156.77351379 57.63492203]
[145.69735718 67.75019836]
[134.62121582 77.86547852]
[123.62176514 88.06411743]
[112.69965363 98.34552765]
[127.67722321 97.52553558]
[141.20263672 104.01113129]
[149.94082642 116.20310211]
[151.73710632 131.09516907]
[146.14855957 145.01522827]
[134.55320740 154.53089905]
[119.81023407 157.29579163]
[105.55494690 152.62815857]
[95.30241394 141.67892456]
[91.58069611 127.14796448]
[95.30691528 112.61937714]
[83.09226227 121.32582092]
[70.87760162 130.03227234]
[58.66294861 138.73870850]
[46.44829178 147.44515991]
[34.23363876 156.15159607]
[22.01898193 164.85804749]
[9.80432606 173.56449890]
[3.05766153 187.87509155]
[-11.79724693 188.96180725]
[-24.01190186 197.66825867]
[-26.75419998 213.00180054]
[-39.26562500 221.65736389]
[-53.86691666 218.94851685]
[-66.08157349 227.65495300]
[-78.29622650 236.36140442]
[-90.51087952 245.06784058]
[-91.68727112 255.88398743]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 63]
[3 62]
[4 61]
[5 60]
[6 59]
[7 58]
[9 57]
[10 56]
[12 54]
[13 53]
[14 52]
[16 51]
[17 50]
[18 49]
[19 48]
[20 47]
[21 44]
[22 43]
[23 42]
[24 41]
[25 40]
[26 39]
[29 36]
[30 35]
[65 206]
[66 205]
[67 204]
[68 203]
[71 200]
[72 199]
[74 197]
[75 196]
[76 195]
[77 194]
[78 193]
[79 192]
[80 191]
[81 190]
[83 179]
[84 178]
[86 177]
[87 176]
[88 175]
[90 173]
[91 172]
[92 171]
[95 168]
[96 167]
[97 166]
[98 165]
[99 164]
[100 163]
[106 160]
[107 159]
[108 158]
[109 157]
[110 156]
[112 155]
[113 154]
[114 153]
[116 151]
[117 150]
[119 149]
[120 148]
[121 147]
[122 146]
[124 145]
[125 144]
[128 141]
[129 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
