%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:58:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUACUGGACGCGGUAACUGUCCUCUUGAGAGCCAUCUUGCCUAGCUGGGCCAAGCCGAGAUAGCACACUCAACGCCCAGCAUGCCGAGGAGGAGGAGACGCCGAGGGUCCUCCGGUGCUGGCGGCCGGGGGCGGACCUGCUCUCGCACCGUCCGAGCGGAGCUUUCGUUUUCAGUGAGCC\
) } def
/len { sequence length } bind def

/coor [
[103.58617401 480.23657227]
[105.89633942 464.77056885]
[117.64157867 454.44662476]
[117.12384033 439.45556641]
[116.60609436 424.46450806]
[116.08835602 409.47344971]
[115.57061005 394.48239136]
[115.05287170 379.49133301]
[114.53512573 364.50027466]
[106.36314392 352.04763794]
[113.61950684 337.98861694]
[113.10176086 322.99755859]
[112.58402252 308.00650024]
[112.06627655 293.01544189]
[100.31448364 288.30081177]
[91.19134521 279.45281982]
[86.08171844 267.76510620]
[85.77989197 254.96609497]
[90.36629486 242.96313477]
[99.19024658 233.55842590]
[110.96201324 228.17839050]
[110.96201324 213.17839050]
[110.96201324 198.17839050]
[103.22471619 185.45112610]
[110.96201324 171.65095520]
[110.96201324 156.65095520]
[110.96201324 141.65095520]
[110.96201324 126.65095520]
[98.34860229 127.80979919]
[86.89493561 123.49211884]
[78.77281952 114.91233063]
[75.34751129 104.05108643]
[76.95581818 93.20693207]
[64.61106110 84.68595886]
[48.85845184 83.21424103]
[42.77939987 69.61665344]
[30.43464279 61.09568024]
[18.08988380 52.57471085]
[5.74512672 44.05373764]
[-6.59963131 35.53276825]
[-20.46191406 41.99684906]
[-35.59856415 40.66321945]
[-47.95324326 31.98979378]
[-54.26546478 18.38788795]
[-52.93083191 3.55264902]
[-65.27558899 -4.96832228]
[-77.62034607 -13.48929310]
[-89.96510315 -22.01026535]
[-102.30986023 -30.53123665]
[-114.65461731 -39.05220795]
[-126.99938202 -47.57317734]
[-137.02601624 -41.92581940]
[-148.38642883 -40.44708252]
[-159.42514038 -43.31366348]
[-168.54804993 -50.07186508]
[-174.45260620 -59.70889664]
[-176.31376648 -70.80453491]
[-173.89901733 -81.74034882]
[-185.78617859 -90.88887787]
[-197.67332458 -100.03740692]
[-212.51910400 -95.52272034]
[-227.17222595 -100.62818909]
[-235.99824524 -113.39067078]
[-235.60340881 -128.90272522]
[-226.13951111 -141.19964600]
[-211.24562073 -145.55302429]
[-196.64875793 -140.28889465]
[-187.96170044 -127.43141937]
[-188.52479553 -111.92456055]
[-176.63764954 -102.77603149]
[-164.75048828 -93.62750244]
[-147.19036865 -99.94935608]
[-129.21583557 -94.39530182]
[-118.10767365 -79.02671051]
[-118.47840881 -59.91793442]
[-106.13365173 -51.39696503]
[-93.78889465 -42.87599564]
[-81.44412994 -34.35502243]
[-69.09937286 -25.83405113]
[-56.75461960 -17.31307983]
[-44.40985870 -8.79210854]
[-31.01193810 -15.30066299]
[-16.05559158 -14.22193241]
[-3.56476617 -5.74574995]
[3.04972959 7.93435431]
[1.92133987 23.18800926]
[14.26609802 31.70898056]
[26.61085510 40.22994995]
[38.95561218 48.75092316]
[51.30037308 57.27189255]
[66.16999817 58.13413620]
[73.13202667 72.34120178]
[85.47679138 80.86216736]
[94.96143341 75.53023529]
[106.24230957 74.82055664]
[117.10428619 79.23786926]
[125.25709534 88.24452972]
[128.81576538 100.30177307]
[142.74710083 94.74140167]
[156.67845154 89.18103790]
[170.60978699 83.62067413]
[182.32913208 67.23970032]
[201.32424927 70.77413940]
[215.05535889 64.73622894]
[228.78648376 58.69832230]
[242.51760864 52.66041565]
[256.24871826 46.62250519]
[269.97985840 40.58459854]
[283.71096802 34.54668808]
[297.05245972 27.69073105]
[309.95568848 20.04174232]
[322.85891724 12.39275265]
[335.76211548 4.74376392]
[348.66534424 -2.90522504]
[361.56854248 -10.55421448]
[374.47177124 -18.20320320]
[387.37496948 -25.85219193]
[389.73431396 -41.31076813]
[401.51232910 -51.59728622]
[417.14779663 -51.85477066]
[429.25811768 -41.96164322]
[432.12518311 -26.58913612]
[424.39526367 -12.99567890]
[409.71813965 -7.59968424]
[395.02395630 -12.94897652]
[382.12075806 -5.29998779]
[369.21752930 2.34900117]
[356.31433105 9.99799061]
[343.41110229 17.64698029]
[330.50790405 25.29596901]
[317.60467529 32.94495773]
[304.70147705 40.59394836]
[319.20736694 44.41218567]
[327.98367310 56.57674789]
[327.03268433 71.54656982]
[316.78759766 82.50277710]
[301.91516113 84.45471191]
[289.18984985 76.51326752]
[284.40817261 62.29582214]
[289.74887085 48.27780914]
[276.01776123 54.31571579]
[262.28662109 60.35362625]
[248.55551147 66.39153290]
[234.82438660 72.42944336]
[221.09327698 78.46735382]
[207.36215210 84.50525665]
[204.51493835 94.35179138]
[196.54170227 101.13740540]
[185.93005371 102.42687225]
[176.17015076 97.55201721]
[162.23881531 103.11238098]
[148.30746460 108.67274475]
[134.37612915 114.23311615]
[125.96201324 126.65095520]
[125.96201324 141.65095520]
[125.96201324 156.65095520]
[125.96201324 171.65095520]
[133.69931030 185.45112610]
[125.96201324 198.17839050]
[125.96201324 213.17839050]
[125.96201324 228.17839050]
[141.36813354 236.58732605]
[150.36116028 251.55636597]
[150.54893494 268.92916870]
[141.96980286 283.93478394]
[127.05734253 292.49771118]
[127.57508087 307.48876953]
[128.09281921 322.47982788]
[128.61056519 337.47088623]
[136.81958008 350.99578857]
[129.52618408 363.98251343]
[130.04393005 378.97357178]
[130.56167603 393.96466064]
[131.07942200 408.95571899]
[131.59715271 423.94677734]
[132.11489868 438.93783569]
[132.63264465 453.92889404]
[145.06214905 463.41790771]
[148.43383789 478.68768311]
[141.15568542 492.52828979]
[126.66421509 498.40463257]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 177]
[4 176]
[5 175]
[6 174]
[7 173]
[8 172]
[9 171]
[11 169]
[12 168]
[13 167]
[14 166]
[21 161]
[22 160]
[23 159]
[25 157]
[26 156]
[27 155]
[28 154]
[33 93]
[34 92]
[36 90]
[37 89]
[38 88]
[39 87]
[40 86]
[45 81]
[46 80]
[47 79]
[48 78]
[49 77]
[50 76]
[51 75]
[58 71]
[59 70]
[60 69]
[98 153]
[99 152]
[100 151]
[101 150]
[103 146]
[104 145]
[105 144]
[106 143]
[107 142]
[108 141]
[109 140]
[110 132]
[111 131]
[112 130]
[113 129]
[114 128]
[115 127]
[116 126]
[117 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
