%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:19:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGGCCGCGACGCCCGACGCCAACGCAGGCGCAGCGCUCCGAUUCGGCGCGGCUCAUGGUCCGGUUCGGGCUCGCGAGUCUCCGUCUGGGGUAGGGCAGGUUCUUAGACUCUGUGAGUAAAGACAGCUUCAUCUUCCCAGUUCAUCAUGGCUUCAACAUCCAGAGAUGUCAUUGCUGGGAGAGGUAUCCACUCAAAGGUGAAGUCUGCAAAGCUGCUUGAGGUUCUGAAUGCUAUGGAGGAGGAAG\
) } def
/len { sequence length } bind def

/coor [
[-206.79991150 348.60476685]
[-221.35006714 344.95880127]
[-229.16102600 332.15298462]
[-225.74348450 317.54757690]
[-238.94984436 324.66040039]
[-252.15620422 331.77319336]
[-265.31723022 338.96951294]
[-278.43243408 346.24905396]
[-291.54763794 353.52856445]
[-304.66284180 360.80810547]
[-317.77804565 368.08764648]
[-323.74447632 374.97143555]
[-331.10580444 375.37512207]
[-344.31216431 382.48791504]
[-357.51852417 389.60073853]
[-370.72488403 396.71353149]
[-383.93124390 403.82635498]
[-397.13760376 410.93917847]
[-403.19076538 417.74682617]
[-410.55661011 418.05722046]
[-423.85198975 425.00216675]
[-437.14739990 431.94711304]
[-446.67074585 447.72048950]
[-464.16986084 446.26794434]
[-477.37622070 453.38073730]
[-483.42938232 460.18841553]
[-490.79522705 460.49880981]
[-504.09063721 467.44375610]
[-506.47610474 482.66268921]
[-517.23974609 493.43289185]
[-532.10552979 495.77221680]
[-545.33984375 488.99060059]
[-558.63525391 495.93554688]
[-567.28485107 509.18301392]
[-582.14813232 508.21768188]
[-595.44354248 515.16259766]
[-608.73895264 522.10754395]
[-622.03430176 529.05249023]
[-635.32971191 535.99743652]
[-638.51593018 551.30700684]
[-650.82940674 560.94610596]
[-666.45611572 560.36346436]
[-678.01763916 549.83422852]
[-680.05493164 534.32989502]
[-671.60607910 521.17126465]
[-656.66033936 516.57128906]
[-642.27465820 522.70208740]
[-628.97924805 515.75714111]
[-615.68389893 508.81216431]
[-602.38848877 501.86721802]
[-589.09307861 494.92227173]
[-581.39447021 482.17153931]
[-565.58020020 482.64013672]
[-552.28479004 475.69519043]
[-550.29058838 460.95880127]
[-539.87817383 450.09390259]
[-524.88946533 447.41220093]
[-511.03558350 454.14834595]
[-497.74017334 447.20339966]
[-484.48901367 440.17437744]
[-471.28265381 433.06158447]
[-467.51751709 421.58193970]
[-456.59390259 415.54287720]
[-444.09234619 418.65173340]
[-430.79696655 411.70678711]
[-417.50155640 404.76181030]
[-404.25039673 397.73281860]
[-391.04403687 390.61999512]
[-377.83767700 383.50717163]
[-364.63131714 376.39437866]
[-351.42495728 369.28155518]
[-338.21859741 362.16876221]
[-325.05755615 354.97244263]
[-311.94235229 347.69290161]
[-298.82717896 340.41339111]
[-285.71197510 333.13385010]
[-272.59677124 325.85430908]
[-268.28421021 319.87484741]
[-259.26901245 318.56683350]
[-246.06265259 311.45404053]
[-232.85629272 304.34121704]
[-219.92970276 296.73178101]
[-207.30157471 288.63671875]
[-194.67344666 280.54162598]
[-190.74801636 274.30120850]
[-181.83367920 272.42517090]
[-169.10400391 264.49072266]
[-156.37434387 256.55627441]
[-155.50485229 241.71099854]
[-145.94752502 230.08682251]
[-131.20570374 226.27468872]
[-116.88031769 231.93945312]
[-104.15065765 224.00498962]
[-91.42098999 216.07052612]
[-78.69132996 208.13606262]
[-75.61492920 190.07257080]
[-60.03084564 179.83908081]
[-41.61057663 184.34687805]
[-29.08599854 176.09248352]
[-16.56142044 167.83810425]
[-4.03684378 159.58370972]
[2.33228946 146.11955261]
[18.11282349 144.98585510]
[30.63740158 136.73146057]
[43.16197968 128.47706604]
[55.68655777 120.22267914]
[68.21113586 111.96828461]
[80.73571014 103.71389771]
[86.12305450 89.71473694]
[82.36326599 75.19358063]
[78.60347748 60.67242050]
[74.84368896 46.15126419]
[65.02024841 32.33329391]
[75.57881165 19.06855965]
[91.24805450 25.54244423]
[89.36484528 42.39147568]
[93.12463379 56.91263199]
[96.88442230 71.43379211]
[100.64421082 85.95494843]
[107.53639221 88.91261292]
[111.19868469 74.36656189]
[114.58325958 59.75339508]
[129.34762573 57.10512924]
[137.60009766 69.63097382]
[129.34043884 82.15180206]
[121.32076263 94.82794952]
[128.21295166 97.78562164]
[141.32814026 90.50609589]
[154.44334412 83.22656250]
[167.55854797 75.94703674]
[180.67373657 68.66750336]
[193.78894043 61.38797379]
[206.90414429 54.10844421]
[220.01933289 46.82891464]
[233.13453674 39.54938507]
[245.50001526 31.05851364]
[257.00424194 21.43288231]
[268.50848389 11.80725098]
[280.01269531 2.18161964]
[291.51693726 -7.44401169]
[303.02114868 -17.06964302]
[314.52539062 -26.69527435]
[320.71746826 -48.24311066]
[342.19094849 -51.00984192]
[353.19287109 -61.20579529]
[364.19479370 -71.40175629]
[375.19674683 -81.59770966]
[380.23834229 -99.31988525]
[397.50378418 -102.51885986]
[408.37567139 -112.85336304]
[419.24755859 -123.18786621]
[416.25024414 -138.32125854]
[421.93173218 -152.66435242]
[434.47906494 -161.64031982]
[449.88842773 -162.38496399]
[463.24279785 -154.66065979]
[470.28079224 -140.93222046]
[468.75662231 -125.58032990]
[459.15667725 -113.50372314]
[444.54421997 -108.55600739]
[429.58206177 -112.31597137]
[418.71017456 -101.98146820]
[407.83828735 -91.64696503]
[407.22351074 -79.58128357]
[398.27178955 -70.88288116]
[385.39270020 -70.59577942]
[374.39077759 -60.39982224]
[363.38882446 -50.20386505]
[352.38690186 -40.00790787]
[353.76397705 -32.30481339]
[351.97683716 -24.59016228]
[347.24218750 -18.12595177]
[340.26480103 -13.99921417]
[332.13342285 -12.93952942]
[324.15100098 -15.19104767]
[312.64678955 -5.56541634]
[301.14254761 4.06021500]
[289.63833618 13.68584633]
[278.13409424 23.31147766]
[266.62988281 32.93710709]
[255.12565613 42.56274033]
[259.88720703 56.78692627]
[274.86798096 57.54666138]
[289.84872437 58.30640030]
[300.36093140 46.72939301]
[315.86224365 44.66925812]
[329.03332520 53.09872437]
[333.65527344 68.03765869]
[327.54571533 82.43235016]
[313.58938599 89.48606873]
[298.37603760 85.86826324]
[289.08898926 73.28714752]
[274.10824585 72.52741241]
[259.12747192 71.76766968]
[249.32141113 67.26084900]
[242.95089722 60.36851501]
[240.41406250 52.66458511]
[227.29887390 59.94411469]
[214.18367004 67.22364807]
[201.06846619 74.50317383]
[187.95327759 81.78269958]
[174.83807373 89.06223297]
[161.72286987 96.34175873]
[148.60768127 103.62129211]
[135.49247742 110.90081787]
[127.99353790 109.33718109]
[120.59403229 107.42189026]
[113.30647278 105.15893555]
[125.05084991 114.49004364]
[136.79522705 123.82115173]
[153.08644104 125.69946289]
[159.35621643 140.85275269]
[149.15473938 153.69259644]
[132.97640991 151.01048279]
[127.46411896 135.56552124]
[115.71973419 126.23442078]
[103.97535706 116.90331268]
[88.99010468 116.23847198]
[76.46552277 124.49286652]
[63.94094849 132.74725342]
[51.41637039 141.00164795]
[38.89179230 149.25604248]
[26.36721420 157.51042175]
[19.10223961 171.56498718]
[4.21754694 172.10829163]
[-8.30703068 180.36267090]
[-20.83160782 188.61706543]
[-33.35618591 196.87145996]
[-33.43384933 208.73075867]
[-39.15792847 218.98059082]
[-49.01106644 225.14041138]
[-60.49349976 225.78346252]
[-70.75686646 220.86572266]
[-83.48653412 228.80018616]
[-96.21619415 236.73464966]
[-108.94586182 244.66911316]
[-110.16883087 260.02523804]
[-120.08358765 271.58166504]
[-134.72882080 275.04306030]
[-148.43988037 269.28591919]
[-161.16955566 277.22039795]
[-173.89921570 285.15484619]
[-186.57836914 293.16976929]
[-199.20649719 301.26486206]
[-211.83464050 309.35992432]
[-197.40583801 313.45989990]
[-189.99986267 326.50411987]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 81]
[5 80]
[6 79]
[7 77]
[8 76]
[9 75]
[10 74]
[11 73]
[13 72]
[14 71]
[15 70]
[16 69]
[17 68]
[18 67]
[20 66]
[21 65]
[22 64]
[24 61]
[25 60]
[27 59]
[28 58]
[32 54]
[33 53]
[35 51]
[36 50]
[37 49]
[38 48]
[39 47]
[82 245]
[83 244]
[84 243]
[86 242]
[87 241]
[88 240]
[92 236]
[93 235]
[94 234]
[95 233]
[98 228]
[99 227]
[100 226]
[101 225]
[103 223]
[104 222]
[105 221]
[106 220]
[107 219]
[108 218]
[109 119]
[110 118]
[111 117]
[112 116]
[127 205]
[128 204]
[129 203]
[130 202]
[131 201]
[132 200]
[133 199]
[134 198]
[135 197]
[136 181]
[137 180]
[138 179]
[139 178]
[140 177]
[141 176]
[142 175]
[144 169]
[145 168]
[146 167]
[147 166]
[149 163]
[150 162]
[151 161]
[182 194]
[183 193]
[184 192]
[208 217]
[209 216]
[210 215]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
