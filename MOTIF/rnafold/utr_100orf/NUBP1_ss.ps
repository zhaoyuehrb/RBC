%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:44:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAAUCAGAUUGUGCCCACAAGGCGGAAAUGUACGACAGCGGGUUCCGGUGACCACGAAGGCGGCAAAGGCGACGGAAUGGAGGAGGUGCCUCACGACUGUCCAGGGGCCGACAGCGCCCAGGCGGGCAGAGGGGCUUCAUGUCAGGGAUGCCCCAACCAGCGGCUGUGCGCUUCUG\
) } def
/len { sequence length } bind def

/coor [
[144.08564758 122.08767700]
[149.53704834 136.06201172]
[148.14608765 150.99737549]
[140.20788574 163.72471619]
[127.40682983 171.54347229]
[112.45909882 172.79463196]
[98.53638458 167.21270752]
[88.59286499 155.98210144]
[84.73841095 141.48577881]
[87.79087830 126.79965210]
[97.10242462 115.04000092]
[87.41587067 126.49298096]
[84.41179657 142.02636719]
[70.28523254 146.74752808]
[60.59867477 158.20050049]
[50.91211700 169.65347290]
[41.22556305 181.10644531]
[41.12321091 197.14916992]
[28.42807770 206.95800781]
[12.87878323 203.00843811]
[6.40341616 188.33026123]
[13.96932220 174.18328857]
[29.77258682 171.41989136]
[39.45914459 159.96691895]
[49.14569855 148.51394653]
[58.83225632 137.06095886]
[61.14347839 122.34677124]
[75.96289825 116.80641937]
[85.64945221 105.35344696]
[73.56600952 114.24110413]
[58.64215088 112.73164368]
[48.58309937 101.60440826]
[48.58236313 86.60440826]
[58.64031982 75.47617340]
[73.56403351 73.96524811]
[85.64945221 82.85344696]
[75.96289825 71.40047455]
[66.27633667 59.94749832]
[56.58978271 48.49452209]
[46.90322495 37.04154968]
[37.11653900 25.67401886]
[27.23047638 14.39280510]
[8.20554161 10.09656143]
[2.61649585 -7.82396221]
[-9.71674728 -16.36159134]
[-22.04998970 -24.89922142]
[-34.38323212 -33.43685150]
[-46.71647644 -41.97447968]
[-59.04971695 -50.51211166]
[-74.80032349 -52.00509262]
[-80.86101532 -65.61087799]
[-93.19425964 -74.14850616]
[-102.05943298 -76.47041321]
[-105.66723633 -82.94577026]
[-117.84874725 -91.69853210]
[-130.74920654 -83.65821075]
[-145.74537659 -81.17164612]
[-160.55047607 -84.61802673]
[-172.90682983 -93.47178650]
[-180.93016052 -106.38280487]
[-183.39700317 -121.38224792]
[-179.93115234 -136.18280029]
[-171.06114197 -148.52748108]
[-158.13957214 -156.53384399]
[-143.13690186 -158.98094177]
[-128.34092712 -155.49562073]
[-116.00791931 -146.60939026]
[-108.01856995 -133.67729187]
[-105.59120941 -118.67142487]
[-109.09598541 -103.88004303]
[-96.91447449 -95.12728119]
[-84.65662384 -86.48175049]
[-72.32338715 -77.94412231]
[-57.45493317 -77.06180573]
[-50.51208878 -62.84535217]
[-38.17884445 -54.30772400]
[-25.84560394 -45.77009201]
[-13.51236057 -37.23246384]
[-1.17911756 -28.69483376]
[11.15412521 -20.15720558]
[11.74592209 -20.50201035]
[12.35012341 -20.82458496]
[11.56070232 -35.80379868]
[10.77128124 -50.78301239]
[9.98186016 -65.76222229]
[-0.93378645 -77.51927185]
[1.59483862 -93.36180115]
[15.62799072 -101.13677216]
[30.40063667 -94.87989807]
[34.58046722 -79.39091492]
[24.96107292 -66.55164337]
[25.75049400 -51.57243347]
[26.53991508 -36.59321976]
[27.32933617 -21.61400604]
[38.59230423 -11.33539104]
[38.51168823 4.50674248]
[48.39775085 15.78795528]
[55.19067764 18.75487137]
[58.35620117 27.35499191]
[68.04275513 38.80796814]
[77.72931671 50.26094055]
[87.41587067 61.71391678]
[97.10242462 73.16689301]
[122.00983429 93.46865082]
[136.59075928 96.98952484]
[151.17169189 100.51039886]
[165.75262451 104.03128052]
[180.33354187 107.55215454]
[194.91447449 111.07302856]
[209.49539185 114.59391022]
[222.87471008 106.61695099]
[237.61169434 110.39533234]
[245.13404846 123.19962311]
[259.71496582 126.72049713]
[274.29589844 130.24137878]
[288.87683105 133.76225281]
[303.45776367 137.28312683]
[318.42080688 136.23094177]
[332.36550903 130.70417786]
[346.31021118 125.17741394]
[360.25491333 119.65065002]
[370.00698853 106.46622467]
[386.26828003 108.58815765]
[392.31057739 123.83357239]
[381.91806030 136.51931763]
[365.78167725 133.59536743]
[351.83697510 139.12213135]
[337.89227295 144.64889526]
[323.94757080 150.17564392]
[324.01336670 157.67536926]
[337.06909180 165.06105042]
[324.14501953 172.67478943]
[324.21081543 180.17449951]
[338.25036621 185.45567322]
[352.28994751 190.73686218]
[366.32949829 196.01805115]
[380.36904907 201.29922485]
[396.00973511 198.91609192]
[405.19793701 210.63899231]
[419.23748779 215.92016602]
[432.11947632 207.26948547]
[447.62466431 207.87640381]
[459.79104614 217.50756836]
[463.94033813 232.45957947]
[458.47711182 246.98309326]
[445.50204468 255.49353027]
[430.00433350 254.71844482]
[417.94317627 244.95587158]
[413.95629883 229.95973206]
[399.91674805 224.67854309]
[385.28027344 227.43942261]
[375.08786011 215.33879089]
[361.04830933 210.05760193]
[347.00875854 204.77641296]
[332.96920776 199.49523926]
[318.92962646 194.21405029]
[309.16961670 205.60449219]
[295.12826538 210.88090515]
[280.28231812 208.73684692]
[268.30761719 199.70318604]
[262.16921997 186.01669312]
[263.38699341 171.06620789]
[271.65942383 158.55354309]
[284.93823242 151.57687378]
[299.93685913 151.86405945]
[285.35595703 148.34317017]
[270.77502441 144.82229614]
[256.19409180 141.30142212]
[241.61315918 137.78054810]
[229.07667542 145.74119568]
[214.23937988 142.37823486]
[205.97451782 129.17483521]
[191.39360046 125.65396118]
[176.81266785 122.13307953]
[162.23173523 118.61220551]
[147.65081787 115.09133148]
[133.06988525 111.57044983]
[118.48896027 108.04957581]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 29]
[12 28]
[14 26]
[15 25]
[16 24]
[17 23]
[36 103]
[37 102]
[38 101]
[39 100]
[40 99]
[41 97]
[42 96]
[44 80]
[45 79]
[46 78]
[47 77]
[48 76]
[49 75]
[51 73]
[52 72]
[54 71]
[55 70]
[82 94]
[83 93]
[84 92]
[85 91]
[104 178]
[105 177]
[106 176]
[107 175]
[108 174]
[109 173]
[110 172]
[113 169]
[114 168]
[115 167]
[116 166]
[117 165]
[118 129]
[119 128]
[120 127]
[121 126]
[133 156]
[134 155]
[135 154]
[136 153]
[137 152]
[139 150]
[140 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
