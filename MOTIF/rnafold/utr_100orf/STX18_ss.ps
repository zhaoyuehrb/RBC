%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:48:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGUGUGGGGCAGGACCAGUCCUUCAGCGGCCGGGUUCGCGCCGCGGUCGCCGGCUGCUUACGUGGGCGGGCCUAGUGUGGGGCUGAGGGUGCGGGUCGCUAUGGCGGUGGACAUCACGCUGCUAUUCCGGGCCAGCGUCAAGACCGUGAAGACGCGGAACAAGGCGCUGGGAGUGGCGGUGGGCGGCGGGGUCGAUGGCA\
) } def
/len { sequence length } bind def

/coor [
[119.74836731 128.45901489]
[112.55510712 132.28440857]
[104.66732788 134.32389832]
[96.52136230 134.46466064]
[88.56782532 132.69891357]
[81.24668884 129.12434387]
[74.96295166 123.93866730]
[70.06420135 117.42876434]
[66.82143402 109.95474243]
[65.41403961 101.93003845]
[50.61164093 99.50331116]
[35.80924225 97.07657623]
[29.48971939 99.05448914]
[23.95315170 97.73724365]
[20.58924675 94.33888245]
[5.86903858 91.45523071]
[-8.85117054 88.57157135]
[-23.57137871 85.68791962]
[-38.60158539 90.62790680]
[-49.60401154 80.58818817]
[-64.32421875 77.70453644]
[-79.06629944 74.93487549]
[-93.82937622 72.27936554]
[-108.59244537 69.62385559]
[-123.35551453 66.96834564]
[-138.11859131 64.31283569]
[-152.88165283 61.65732574]
[-167.64472961 59.00181580]
[-182.40780640 56.34630585]
[-193.42880249 63.05514145]
[-205.67364502 60.53517532]
[-212.68447876 50.67251587]
[-227.40467834 47.78886414]
[-242.22541809 45.47674561]
[-257.12448120 43.73962021]
[-272.02355957 42.00249863]
[-286.92263794 40.26537323]
[-301.82171631 38.52824783]
[-316.72079468 36.79112625]
[-331.61987305 35.05400085]
[-346.51892090 33.31687927]
[-355.41177368 35.43227005]
[-361.63449097 31.43585396]
[-376.50488281 29.46837044]
[-391.37530518 27.50088882]
[-406.24569702 25.53340721]
[-421.11611938 23.56592369]
[-431.82214355 34.64233398]
[-446.82214355 37.26021957]
[-460.32766724 30.62209892]
[-467.25183105 17.46177292]
[-482.12222290 15.49429131]
[-495.67968750 24.07189941]
[-510.79107666 18.68437767]
[-515.86425781 3.46457386]
[-507.00750732 -9.91218185]
[-491.01498413 -11.18438816]
[-480.15475464 0.62388420]
[-465.28433228 2.59136629]
[-455.17590332 -8.31540298]
[-440.40875244 -11.21280384]
[-426.60571289 -4.78402805]
[-419.14862061 8.69551754]
[-404.27822876 10.66299915]
[-389.40780640 12.63048172]
[-374.53741455 14.59796333]
[-359.66699219 16.56544495]
[-344.78179932 18.41780472]
[-329.88272095 20.15492821]
[-314.98367310 21.89205170]
[-300.08459473 23.62917519]
[-285.18551636 25.36630058]
[-270.28643799 27.10342407]
[-255.38735962 28.84054756]
[-240.48829651 30.57767105]
[-247.57351685 17.35649109]
[-241.80075073 3.51180840]
[-227.42175293 -0.75952160]
[-215.02690125 7.68841171]
[-213.74522400 22.63355446]
[-224.52102661 33.06865692]
[-209.80082703 35.95230865]
[-193.53393555 29.37509155]
[-179.75228882 41.58323669]
[-164.98922729 44.23874664]
[-150.22615051 46.89425659]
[-135.46307373 49.54976654]
[-120.70000458 52.20527267]
[-105.93693542 54.86078262]
[-91.17386627 57.51629257]
[-76.41079712 60.17180252]
[-69.26649475 58.26071548]
[-61.44056702 62.98432922]
[-46.72035980 65.86798096]
[-32.74304199 60.72174072]
[-20.68772507 70.96771240]
[-5.96751690 73.85136414]
[8.75269127 76.73501587]
[23.47290039 79.61867523]
[38.23597336 82.27418518]
[53.03836823 84.70091248]
[67.84076691 87.12763977]
[82.05004120 70.37377930]
[103.47863770 65.53533936]
[123.50815582 74.55829620]
[134.08288574 93.81369019]
[149.07167053 94.39389038]
[163.16078186 87.19617462]
[175.57925415 95.41997528]
[190.56803894 96.00016785]
[204.65715027 88.80245209]
[217.07562256 97.02625275]
[232.06440735 97.60644531]
[247.05317688 98.18664551]
[255.75588989 95.39015198]
[262.26889038 98.89358521]
[277.24688721 99.70566559]
[285.99185181 97.04418182]
[292.44985962 100.64798737]
[307.41351318 101.69175720]
[322.37713623 102.73553467]
[337.34078979 103.77930450]
[352.30441284 104.82308197]
[367.26806641 105.86685181]
[382.23168945 106.91062927]
[391.31353760 96.95883942]
[404.28002930 94.09850311]
[416.34683228 99.15545654]
[423.19302368 110.07586670]
[438.13870239 111.35108185]
[453.08441162 112.62628937]
[468.23925781 98.05760193]
[488.92532349 99.37870789]
[501.73556519 115.29950714]
[516.73150635 115.64768219]
[531.72747803 115.99585724]
[546.72344971 116.34403229]
[561.71942139 116.69220734]
[576.71533203 117.04038239]
[591.71130371 117.38855743]
[606.70727539 117.73673248]
[615.15625000 103.52735138]
[629.53485107 95.56169128]
[645.87451172 95.93016052]
[659.71942139 104.43759918]
[667.34210205 118.68234253]
[682.34161377 118.79840851]
[697.34118652 118.91447449]
[712.34075928 119.03054810]
[727.34027100 119.14661407]
[741.33068848 110.59091187]
[755.60406494 118.66572571]
[755.47717285 135.06437683]
[741.08056641 142.91734314]
[727.22424316 134.14616394]
[712.22467041 134.03009033]
[697.22509766 133.91403198]
[682.22558594 133.79795837]
[667.22601318 133.68190002]
[661.09527588 145.88945007]
[650.24993896 154.30386353]
[636.77258301 157.23727417]
[623.28234863 154.06123352]
[612.42608643 145.34030151]
[606.35906982 132.73268127]
[591.36315918 132.38450623]
[576.36718750 132.03634644]
[561.37121582 131.68817139]
[546.37524414 131.33999634]
[531.37927246 130.99182129]
[516.38336182 130.64364624]
[501.38739014 130.29547119]
[496.92990112 138.53608704]
[489.73068237 144.62187195]
[480.75338745 147.68286133]
[471.22015381 147.25776672]
[462.44506836 143.36289978]
[455.65310669 136.49580383]
[451.80920410 127.57199097]
[436.86349487 126.29677582]
[421.91778564 125.02156067]
[409.53613281 136.39855957]
[392.41992188 135.28153992]
[381.18792725 121.87426758]
[366.22427368 120.83049774]
[351.26065063 119.78672028]
[336.29699707 118.74294281]
[321.33337402 117.69917297]
[306.36972046 116.65539551]
[291.40609741 115.61162567]
[276.43481445 114.68367004]
[261.45681763 113.87158203]
[246.47297668 113.17542267]
[231.48420715 112.59522247]
[216.49542236 112.01502228]
[203.47840881 119.25424194]
[189.98783875 110.98894501]
[174.99905396 110.40874481]
[161.98204041 117.64796448]
[148.49147034 109.38266754]
[133.50268555 108.80246735]
[130.52009583 116.38407135]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 102]
[11 101]
[12 100]
[15 99]
[16 98]
[17 97]
[18 96]
[20 94]
[21 93]
[22 91]
[23 90]
[24 89]
[25 88]
[26 87]
[27 86]
[28 85]
[29 84]
[32 82]
[33 81]
[34 75]
[35 74]
[36 73]
[37 72]
[38 71]
[39 70]
[40 69]
[41 68]
[43 67]
[44 66]
[45 65]
[46 64]
[47 63]
[51 59]
[52 58]
[106 201]
[107 200]
[109 198]
[110 197]
[112 195]
[113 194]
[114 193]
[116 192]
[117 191]
[119 190]
[120 189]
[121 188]
[122 187]
[123 186]
[124 185]
[125 184]
[129 181]
[130 180]
[131 179]
[134 172]
[135 171]
[136 170]
[137 169]
[138 168]
[139 167]
[140 166]
[141 165]
[146 159]
[147 158]
[148 157]
[149 156]
[150 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
