%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:30:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAGGCCGGCGUCUCUCCCCCAGUUUGCCGUUCACCCGGAGCGCUCGGGACUUGCCGAUAGUGGUGACGGCGGCAACAUGUCUGUGGCUUUCGCGGCCCCGAGGCAGCGAGGCAAGGGGGAGAUCACUCCCGCUGCGAUUCAGAAGAUGUUGGAUGACAAUAACCAUCUUAUUCAGU\
) } def
/len { sequence length } bind def

/coor [
[73.84074402 122.23780060]
[68.93095398 136.41149902]
[64.02116394 150.58520508]
[59.11137772 164.75892639]
[54.20158768 178.93263245]
[49.29179764 193.10633850]
[44.38201141 207.28004456]
[48.01093292 223.27262878]
[35.79325485 234.21156311]
[20.29747391 228.84381104]
[17.46432114 212.69125366]
[30.20830345 202.37025452]
[35.11809158 188.19654846]
[40.02788162 174.02284241]
[44.93766785 159.84913635]
[49.84745789 145.67543030]
[54.75724792 131.50170898]
[59.66703415 117.32801056]
[55.89805222 110.84381866]
[50.45894623 124.82294464]
[36.13843918 129.28646851]
[23.71993637 120.87334442]
[22.55462646 105.91867828]
[33.51999283 95.68340302]
[48.36008453 97.87542725]
[44.59110260 91.39123535]
[29.84508514 88.64260101]
[15.09906769 85.89397430]
[0.35305041 83.14533997]
[-14.39296722 80.39671326]
[-29.13898468 77.64807892]
[-43.88500214 74.89944458]
[-52.92464828 76.40522766]
[-58.86470032 71.97100830]
[-73.56020355 68.96401215]
[-88.25571442 65.95701599]
[-102.95122528 62.95001602]
[-107.07907867 64.49710083]
[-111.07851410 64.61961365]
[-114.51264954 63.53642273]
[-117.06234741 61.58702850]
[-118.55556488 59.18201065]
[-133.00395203 55.15159607]
[-146.65496826 62.65409851]
[-161.25025940 58.36085892]
[-168.31861877 45.30046844]
[-182.76701355 41.27005386]
[-197.21539307 37.23963547]
[-211.66377258 33.20922089]
[-225.30604553 41.18817520]
[-240.57319641 37.10283661]
[-248.40747070 23.37696075]
[-244.16094971 8.15386772]
[-230.35301208 0.46514773]
[-215.17565918 4.87238264]
[-207.63336182 18.76083755]
[-193.18496704 22.79125404]
[-178.73658752 26.82167053]
[-164.28820801 30.85208702]
[-151.48007202 23.33630180]
[-136.76994324 27.21789360]
[-128.97352600 40.70321274]
[-114.52515411 44.73363113]
[-99.94422150 48.25450516]
[-85.24871826 51.26150513]
[-70.55320740 54.26850510]
[-55.85770035 57.27550507]
[-41.13637161 60.15343094]
[-26.39035225 62.90206146]
[-11.64433575 65.65069580]
[3.10168171 68.39932251]
[17.84769821 71.14795685]
[32.59371567 73.89658356]
[47.33973312 76.64521790]
[107.85488129 83.13943481]
[119.22241211 73.35274506]
[130.58995056 63.56605911]
[141.95747375 53.77937317]
[153.32501221 43.99268341]
[164.69253540 34.20599747]
[170.34970093 16.69648552]
[187.68922424 14.07469654]
[198.88325500 4.09001827]
[210.07727051 -5.89466000]
[221.27130127 -15.87933826]
[215.87684631 -29.43438530]
[216.18273926 -44.35380936]
[222.39933777 -58.28590012]
[233.78533936 -68.93475342]
[248.72758484 -74.43761444]
[264.96719360 -73.68701172]
[271.10031128 -87.37588501]
[277.23339844 -101.06475067]
[283.36648560 -114.75361633]
[289.49960327 -128.44248962]
[288.08111572 -144.19998169]
[300.34594727 -152.65119934]
[306.47906494 -166.34005737]
[312.61215210 -180.02893066]
[310.39880371 -196.27803040]
[323.52819824 -206.10409546]
[338.49389648 -199.39892578]
[339.90051270 -183.06021118]
[326.30102539 -173.89582825]
[320.16793823 -160.20695496]
[314.03482056 -146.51809692]
[315.89196777 -131.73971558]
[303.18847656 -122.30938721]
[297.05535889 -108.62051392]
[290.92227173 -94.93164825]
[284.78915405 -81.24278259]
[278.65606689 -67.55391693]
[288.73858643 -56.44793701]
[302.95483398 -61.23316193]
[310.11492920 -66.95291901]
[317.46276855 -65.97523499]
[331.76080322 -70.51022339]
[342.57589722 -82.05768585]
[357.04681396 -78.53034210]
[371.34484863 -83.06533051]
[385.64288330 -87.60031891]
[399.94091797 -92.13531494]
[414.23895264 -96.67030334]
[424.89184570 -109.13819122]
[440.96423340 -105.88082886]
[445.92224121 -90.24912262]
[434.66546631 -78.32362366]
[418.77395630 -82.37226868]
[404.47592163 -77.83728027]
[390.17788696 -73.30228424]
[375.87985229 -68.76729584]
[361.58181763 -64.23230743]
[351.78936768 -53.00922012]
[336.29577637 -56.21218872]
[321.99774170 -51.67720032]
[307.74005127 -47.01691437]
[293.52380371 -42.23169327]
[291.74102783 -22.76223564]
[281.39215088 -6.74645472]
[265.21408081 2.40277815]
[247.11991882 2.98543477]
[231.25598145 -4.68531322]
[220.06195068 5.29936504]
[208.86793518 15.28404331]
[197.67390442 25.26872253]
[196.66485596 37.34139633]
[187.39518738 45.75105286]
[174.47921753 45.57352829]
[163.11169434 55.36021805]
[151.74415588 65.14690399]
[140.37663269 74.93358612]
[129.00909424 84.72027588]
[117.64157104 94.50696564]
[115.80336761 109.39390564]
[124.44889832 121.65174866]
[133.09442139 133.90960693]
[141.73995972 146.16744995]
[157.25680542 146.25065613]
[169.74133301 155.46565247]
[174.39297485 170.26908875]
[169.42309570 184.96873474]
[156.74270630 193.91229248]
[141.22766113 193.66076660]
[128.84384155 184.31088257]
[124.35305023 169.45785522]
[129.48210144 154.81297302]
[120.83657837 142.55513000]
[112.19104767 130.29728699]
[103.54551697 118.03942871]
[96.11932373 119.08901978]
[98.21850586 133.94140625]
[100.31768799 148.79379272]
[102.41687012 163.64619446]
[104.51580811 178.49861145]
[89.66335297 180.59730530]
[87.56448364 165.74537659]
[85.46530151 150.89297485]
[83.36611938 136.04058838]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 18]
[2 17]
[3 16]
[4 15]
[5 14]
[6 13]
[7 12]
[26 74]
[27 73]
[28 72]
[29 71]
[30 70]
[31 69]
[32 68]
[34 67]
[35 66]
[36 65]
[37 64]
[42 63]
[43 62]
[46 59]
[47 58]
[48 57]
[49 56]
[75 153]
[76 152]
[77 151]
[78 150]
[79 149]
[80 148]
[82 145]
[83 144]
[84 143]
[85 142]
[91 112]
[92 111]
[93 110]
[94 109]
[95 108]
[97 106]
[98 105]
[99 104]
[113 137]
[114 136]
[116 135]
[117 134]
[119 132]
[120 131]
[121 130]
[122 129]
[123 128]
[154 169]
[155 168]
[156 167]
[157 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
