%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:39:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCACGGCUUCCUGUUCUGAGGCGGCCCGGCGGUAGGCGGUGGCGACUCUGCCCGCUCCCGUUUCGGCGCGGUGACCGAGCGCCCGGGAGGCUCGAGGACCGCAUCGUGUGCCGUUGCGCCAAGCCCGGUCCUGCGCCGCCAUGGCCCCAGUGCAGCUGGAGAACCACCAGCUGGUCCCGCCCGGAGGCGGCGGCGGGGGCAGCGGCGGACCCCCGUCAGCCCCAGCCCCUCCUCCCCCGG\
) } def
/len { sequence length } bind def

/coor [
[310.16744995 275.68646240]
[296.57513428 269.34225464]
[282.98281860 262.99807739]
[269.39050293 256.65386963]
[255.37863159 262.00808716]
[249.48068237 275.79989624]
[243.58273315 289.59173584]
[237.68479919 303.38354492]
[239.37271118 319.11444092]
[227.25430298 327.77432251]
[221.35635376 341.56613159]
[215.45841980 355.35797119]
[221.57141113 369.93212891]
[215.51119995 384.52835083]
[200.87321472 390.48693848]
[186.34188843 384.27273560]
[180.53840637 369.57257080]
[186.90588379 355.10775757]
[201.66659546 349.46002197]
[207.56454468 335.66821289]
[213.46247864 321.87637329]
[211.35270691 307.13195801]
[223.89297485 297.48559570]
[229.79092407 283.69378662]
[235.68885803 269.90197754]
[241.58680725 256.11013794]
[226.22868347 239.53514099]
[228.00408936 219.07789612]
[216.50643921 209.44441223]
[205.00878906 199.81092834]
[190.28405762 197.56776428]
[184.67524719 182.77412415]
[173.17759705 173.14064026]
[166.04655457 171.25784302]
[161.59393311 163.30586243]
[150.22283936 153.52331543]
[138.85174561 143.74076843]
[127.48064423 133.95822144]
[116.10955048 124.17567444]
[104.73845673 114.39312744]
[89.97013092 111.76701355]
[75.92366791 117.02979279]
[61.87720108 122.29256439]
[47.83073425 127.55534363]
[37.83172989 140.55349731]
[21.61335373 138.12524414]
[15.85968494 122.76857758]
[26.48960304 110.28110504]
[42.56795883 113.50887299]
[56.61442566 108.24610138]
[70.66088867 102.98332214]
[84.70735168 97.72055054]
[84.51184082 90.22309875]
[84.12081909 75.22819519]
[83.92530060 67.73074341]
[69.62364197 63.20720673]
[55.32197189 58.68367386]
[41.02030945 54.16013718]
[26.71864319 49.63660049]
[12.41697788 45.11306763]
[8.25620937 46.18453598]
[4.35903025 45.91532135]
[1.11161852 44.55023956]
[-1.21781099 42.43369675]
[-2.50114608 39.96304703]
[-16.54761124 34.70027161]
[-30.59407616 29.43749619]
[-44.64054108 24.17472076]
[-58.68700790 18.91194344]
[-70.98915863 28.22111893]
[-86.37303162 29.37866592]
[-99.92969513 22.01521683]
[-107.33326721 8.48042297]
[-106.22129822 -6.90681410]
[-96.94860077 -19.23648262]
[-82.47407532 -24.57422829]
[-67.41647339 -21.21679878]
[-56.58063507 -10.23553658]
[-53.42423248 4.86547852]
[-39.37776566 10.12825489]
[-25.33130074 15.39103031]
[-11.28483582 20.65380669]
[2.76162982 25.91658211]
[16.94051361 30.81140137]
[31.24217796 35.33493805]
[45.54384232 39.85847092]
[59.84550858 44.38200760]
[74.14717102 48.90554428]
[88.44883728 53.42907715]
[99.49514771 43.28121948]
[96.19819641 28.64803314]
[92.68598938 24.84105873]
[91.12738800 20.50299072]
[91.39946747 16.46187019]
[93.07027435 13.37854767]
[90.34795380 -1.37235069]
[87.62564087 -16.12324905]
[84.90332031 -30.87414742]
[82.18100739 -45.62504578]
[79.45868683 -60.37594223]
[76.73637390 -75.12683868]
[61.90946579 -78.35771179]
[49.48260498 -86.99577332]
[41.33167267 -99.69915771]
[38.67253494 -114.51525116]
[41.87974930 -129.18081665]
[50.43416595 -141.46768188]
[63.00667191 -149.52134705]
[60.28435516 -164.27224731]
[57.56203842 -179.02314758]
[54.83972168 -193.77404785]
[43.79289246 -205.89425659]
[49.02305984 -221.43701172]
[65.14987183 -224.41326904]
[75.58344269 -211.76129150]
[69.59062195 -196.49635315]
[72.31293488 -181.74545288]
[75.03525543 -166.99456787]
[77.75756836 -152.24366760]
[92.37658691 -149.20826721]
[104.75325012 -140.78428650]
[112.98402405 -128.22962952]
[115.78862762 -113.44038391]
[112.70909119 -98.66439056]
[104.18419647 -86.15962219]
[91.48727417 -77.84915924]
[94.20958710 -63.09825897]
[96.93190765 -48.34736252]
[99.65422058 -33.59646225]
[102.37654114 -18.84556580]
[105.09885406 -4.09466743]
[107.82117462 10.65622997]
[110.83138275 25.35108185]
[114.12833405 39.98426819]
[114.52100372 103.02203369]
[125.89209747 112.80458069]
[137.26319885 122.58712769]
[148.63429260 132.36967468]
[160.00538635 142.15222168]
[171.37648010 151.93476868]
[182.81109619 161.64299011]
[194.30873108 171.27648926]
[209.85585022 174.20869446]
[214.64227295 188.31327820]
[226.13992310 197.94676208]
[237.63757324 207.58026123]
[253.18919373 202.75932312]
[269.16357422 208.93577576]
[278.29034424 224.41812134]
[275.73468018 243.06155396]
[289.32699585 249.40574646]
[302.91934204 255.74993896]
[316.51165771 262.09414673]
[331.51037598 261.89862061]
[344.93267822 255.20223999]
[358.35501099 248.50587463]
[371.77734375 241.80950928]
[385.19964600 235.11312866]
[398.62197876 228.41676331]
[402.09243774 213.16914368]
[414.58312988 203.76081848]
[430.19631958 204.63410950]
[441.55990601 215.37666321]
[443.30841064 230.91618347]
[434.61618042 243.91539001]
[419.58746338 248.23645020]
[405.31832886 241.83908081]
[391.89602661 248.53544617]
[378.47369385 255.23182678]
[365.05139160 261.92819214]
[351.62905884 268.62457275]
[338.20675659 275.32092285]
[337.23184204 282.75729370]
[352.10455322 284.70736694]
[350.15423584 299.58001709]
[335.28201294 297.63003540]
[334.30712891 305.06640625]
[345.54971313 314.99633789]
[356.79232788 324.92626953]
[370.03787231 322.55072021]
[382.06042480 328.14984131]
[388.57205200 339.47988892]
[387.39312744 352.29928589]
[398.50534058 362.37493896]
[409.61755371 372.45056152]
[420.72976685 382.52621460]
[431.84197998 392.60186768]
[447.26257324 396.13967896]
[451.49389648 410.42062378]
[462.60610962 420.49627686]
[471.04721069 423.93255615]
[473.79641724 430.77639771]
[484.77636719 440.99606323]
[495.75628662 451.21569824]
[511.12945557 454.95422363]
[515.17425537 469.28909302]
[526.15417480 479.50872803]
[537.13409424 489.72836304]
[548.11407471 499.94802856]
[559.09399414 510.16766357]
[569.89770508 509.15060425]
[579.28942871 514.13433838]
[584.29223633 523.26666260]
[583.47125244 533.42706299]
[594.18103027 543.92950439]
[604.89086914 554.43188477]
[615.60064697 564.93426514]
[626.31042480 575.43670654]
[642.31781006 578.99981689]
[646.97692871 594.72320557]
[635.49493408 606.43194580]
[619.68347168 602.08111572]
[615.80804443 586.14648438]
[605.09826660 575.64404297]
[594.38842773 565.14166260]
[583.67864990 554.63928223]
[572.96887207 544.13690186]
[553.93341064 540.67443848]
[548.87432861 521.14758301]
[537.89440918 510.92794800]
[526.91448975 500.70831299]
[515.93457031 490.48867798]
[504.95462036 480.26901245]
[490.36682129 477.26147461]
[485.53665161 462.19561768]
[474.55670166 451.97598267]
[463.57678223 441.75634766]
[452.53048706 431.60848999]
[441.41824341 421.53283691]
[426.79248047 418.71569824]
[421.76635742 403.71408081]
[410.65414429 393.63842773]
[399.54193115 383.56277466]
[388.42968750 373.48715210]
[377.31747437 363.41149902]
[360.56060791 364.94509888]
[347.63107300 353.65505981]
[346.86239624 336.16888428]
[335.61978149 326.23895264]
[324.37716675 316.30902100]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 153]
[2 152]
[3 151]
[4 150]
[5 26]
[6 25]
[7 24]
[8 23]
[10 21]
[11 20]
[12 19]
[28 146]
[29 145]
[30 144]
[32 142]
[33 141]
[35 140]
[36 139]
[37 138]
[38 137]
[39 136]
[40 135]
[41 52]
[42 51]
[43 50]
[44 49]
[55 89]
[56 88]
[57 87]
[58 86]
[59 85]
[60 84]
[65 83]
[66 82]
[67 81]
[68 80]
[69 79]
[90 134]
[91 133]
[95 132]
[96 131]
[97 130]
[98 129]
[99 128]
[100 127]
[101 126]
[108 119]
[109 118]
[110 117]
[111 116]
[154 172]
[155 171]
[156 170]
[157 169]
[158 168]
[159 167]
[177 240]
[178 239]
[179 238]
[183 235]
[184 234]
[185 233]
[186 232]
[187 231]
[189 229]
[190 228]
[192 227]
[193 226]
[194 225]
[196 223]
[197 222]
[198 221]
[199 220]
[200 219]
[204 217]
[205 216]
[206 215]
[207 214]
[208 213]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
