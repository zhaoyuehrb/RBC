%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:25:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCCCGCCUGGAGUCCAGACCCGACGGCCGGCCCAGUUCCACGCACCCAGCGAGCCCAAGCGCCUUCUCCGCACCAGGGAAGCCCCACCCACCAGAAGCCAAGAUGUCCAGCAAGCGGGCCAAAGCCAAGACCACCAAGAAGCGGCCACAGCGGGCCACAUCCAAUGUCUUCGCAAUGUUUGACCAGUCCCAGAUCCAGGAGU\
) } def
/len { sequence length } bind def

/coor [
[96.59280396 398.07165527]
[81.53661346 400.82293701]
[66.92988586 396.25106812]
[56.12914658 385.40658569]
[51.61632919 370.78149414]
[54.42844009 355.73654175]
[63.91928101 343.72894287]
[77.90792084 337.51794434]
[78.82683563 322.54611206]
[79.74575043 307.57431030]
[80.66466522 292.60247803]
[81.58358002 277.63064575]
[82.50249481 262.65881348]
[69.43544769 255.46731567]
[60.75090790 243.26533508]
[58.21504593 228.44203186]
[62.38362885 213.92848206]
[72.48132324 202.61816406]
[86.54527283 196.79005432]
[87.46418762 181.81823730]
[88.38310242 166.84640503]
[66.23928833 158.85243225]
[48.16029358 143.77258301]
[36.32283401 123.42247772]
[32.15215302 100.25229645]
[36.15040207 77.05173492]
[47.83618927 56.61416245]
[37.43470383 45.80633545]
[27.03321648 34.99851227]
[7.43453979 30.29433823]
[3.59706903 11.34560204]
[-7.13073778 0.86160624]
[-17.85854530 -9.62238884]
[-28.58635139 -20.10638428]
[-39.31415939 -30.59037971]
[-47.64311981 -34.35272217]
[-50.12448120 -41.31818771]
[-60.69036865 -51.96534729]
[-71.25625610 -62.61250687]
[-96.03124237 -52.35200119]
[-122.64572144 -55.06726456]
[-144.73397827 -70.04877472]
[-157.04138184 -93.66033173]
[-171.96702576 -92.16863251]
[-186.89266968 -90.67692566]
[-198.12435913 -79.22142029]
[-214.06811523 -81.00357819]
[-222.49325562 -94.65628815]
[-216.93673706 -109.70635986]
[-201.66104126 -114.60866547]
[-188.38436890 -105.60256958]
[-173.45872498 -107.09427643]
[-158.53308105 -108.58597565]
[-158.47193909 -109.80664062]
[-158.38334656 -111.02561188]
[-173.01454163 -114.33140564]
[-188.50535583 -108.94933319]
[-200.73313904 -119.87697601]
[-197.11900330 -135.87290955]
[-181.38084412 -140.48188782]
[-169.70875549 -128.96260071]
[-155.07756042 -125.65680695]
[-151.69842529 -132.93745422]
[-147.28393555 -139.64108276]
[-141.93032837 -145.62150574]
[-150.74711609 -157.75675964]
[-159.56388855 -169.89201355]
[-168.38067627 -182.02726746]
[-177.19744873 -194.16252136]
[-190.87835693 -189.89595032]
[-205.18669128 -190.06355286]
[-218.72325134 -194.63568115]
[-230.16841125 -203.15261841]
[-238.41076660 -214.77079773]
[-242.65501404 -228.34629822]
[-242.49873352 -242.54748535]
[-237.97044373 -255.98562622]
[-229.52558899 -267.35070801]
[-238.15536499 -279.61965942]
[-246.78514099 -291.88861084]
[-261.88208008 -298.29290771]
[-263.61541748 -314.60018921]
[-250.20207214 -324.03491211]
[-235.44053650 -316.89144897]
[-234.51620483 -300.51837158]
[-225.88642883 -288.24942017]
[-217.25665283 -275.98049927]
[-202.11254883 -280.27896118]
[-186.38525391 -279.13079834]
[-171.97706604 -272.65646362]
[-160.63702393 -261.62173462]
[-153.74861145 -247.34725952]
[-152.16098022 -231.55035400]
[-156.08432007 -216.13859558]
[-165.06219482 -202.97929382]
[-156.24542236 -190.84403992]
[-147.42863464 -178.70878601]
[-138.61186218 -166.57353210]
[-129.79507446 -154.43827820]
[-121.34552002 -158.09667969]
[-112.39450073 -160.27813721]
[-103.19829559 -160.91827393]
[-94.02052307 -159.99691772]
[-85.12457275 -157.53866577]
[-76.76605988 -153.61221313]
[-69.18548584 -148.32853699]
[-62.60130310 -141.83764648]
[-57.20363617 -134.32438660]
[-53.14877319 -126.00315094]
[-50.55466461 -117.11178589]
[-49.49747086 -107.90476990]
[-50.00933838 -98.64594269]
[-52.07742310 -89.60094452]
[-55.64420700 -81.02958679]
[-60.60910034 -73.17839813]
[-50.04320908 -62.53123474]
[-39.47732162 -51.88407516]
[-28.83016205 -41.31818771]
[-18.10235596 -30.83419228]
[-7.37454939 -20.35019684]
[3.35325766 -9.86620045]
[14.08106422 0.61779487]
[24.25254250 -0.41801235]
[33.50823593 4.41966772]
[38.67753983 13.74624634]
[37.84103775 24.59702492]
[48.24252701 35.40485001]
[58.64401627 46.21267319]
[65.40287781 41.63534164]
[72.66253662 37.90283966]
[80.31790924 35.06919479]
[88.25817871 33.17542648]
[96.36840820 32.24894333]
[104.53120422 32.30315781]
[112.62841034 33.33728790]
[120.54282379 35.33636093]
[128.15988159 38.27143860]
[135.36932373 42.10004044]
[142.06678772 46.76674652]
[148.15533447 52.20400238]
[153.54684448 58.33310699]
[158.16325378 65.06534576]
[161.93774414 72.30325317]
[164.81568909 79.94207764]
[166.75543213 87.87124634]
[181.71977234 86.83763885]
[196.68412781 85.80403137]
[211.64846802 84.77042389]
[221.83685303 72.68851471]
[237.59117126 71.43285370]
[249.56468201 81.74839783]
[250.65371704 97.51512146]
[240.21215820 109.37890625]
[224.43479919 110.30117798]
[212.68206787 99.73477173]
[197.71772766 100.76837921]
[182.75338745 101.80198669]
[167.78903198 102.83559418]
[165.94320679 115.96522522]
[161.57913208 128.48518372]
[174.41355896 136.24902344]
[189.57829285 132.68972778]
[202.48362732 140.74621582]
[205.78341675 155.22540283]
[218.61785889 162.98924255]
[234.43041992 163.51182556]
[241.31549072 176.71958923]
[254.14993286 184.48344421]
[266.98437500 192.24728394]
[283.38220215 192.04119873]
[291.52587891 206.27540588]
[283.03784180 220.30699158]
[266.64987183 219.70146179]
[259.22052002 205.08172607]
[246.38607788 197.31787109]
[233.55165100 189.55401611]
[218.65707397 189.58677673]
[210.85400391 175.82368469]
[198.01957703 168.05982971]
[183.66314697 171.85836792]
[170.53662109 164.16754150]
[166.64970398 149.08346558]
[153.81527710 141.31961060]
[145.88398743 149.98052979]
[136.57801819 157.14405823]
[126.17617798 162.59553528]
[114.99010468 166.17167664]
[103.35493469 167.76531982]
[102.43601990 182.73715210]
[101.51710510 197.70896912]
[114.76275635 205.21322632]
[123.40150452 217.67353821]
[125.76390839 232.58793640]
[121.43431091 246.98985291]
[111.32275391 258.03820801]
[97.47431946 263.57772827]
[96.55540466 278.54956055]
[95.63648987 293.52139282]
[94.71757507 308.49322510]
[93.79866028 323.46502686]
[92.87974548 338.43685913]
[106.00384521 346.31195068]
[113.95500946 359.39007568]
[114.90614319 374.66598511]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 201]
[9 200]
[10 199]
[11 198]
[12 197]
[13 196]
[19 190]
[20 189]
[21 188]
[27 128]
[28 127]
[29 126]
[31 122]
[32 121]
[33 120]
[34 119]
[35 118]
[37 117]
[38 116]
[39 115]
[43 53]
[44 52]
[45 51]
[55 62]
[56 61]
[65 99]
[66 98]
[67 97]
[68 96]
[69 95]
[78 87]
[79 86]
[80 85]
[145 158]
[146 157]
[147 156]
[148 155]
[160 183]
[161 182]
[164 179]
[165 178]
[167 176]
[168 175]
[169 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
