%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:25:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUCCUGGGCUGCAGAGAGCUGGGCGGAGUGUGGAAUUCUUCUCGGGAGGCAGUGCUGGGUCCUUUCCACCAUGGCACCUAAGAAAGCAAAGAAGAGAGCCGGGGGCGCCAACUCCAACGUGUUCUCCAUGUUCGAACAGACCCAAAUCCAGGAAUUUAAGGAGGCCUUCA\
) } def
/len { sequence length } bind def

/coor [
[120.50969696 235.60404968]
[116.45127869 221.16351318]
[112.39285278 206.72297668]
[108.33443451 192.28242493]
[104.27601624 177.84188843]
[100.21759796 163.40135193]
[96.15917206 148.96081543]
[92.10075378 134.52026367]
[78.51902771 128.15341187]
[64.82328796 134.27114868]
[51.12754440 140.38888550]
[37.43180084 146.50660706]
[23.73605919 152.62434387]
[23.34772301 164.14407349]
[18.69316292 174.63247681]
[10.48545551 182.57775879]
[-0.05328207 186.85047913]
[-11.37378311 186.86413574]
[-21.82735443 182.65524292]
[-29.90599632 174.87252808]
[-43.91623688 180.23098755]
[-57.92647934 185.58944702]
[-71.93672180 190.94790649]
[-85.94696045 196.30638123]
[-96.07254028 208.46298218]
[-110.72402191 205.78279114]
[-124.73426819 211.14126587]
[-138.74450684 216.49972534]
[-152.75474548 221.85818481]
[-166.76498413 227.21665955]
[-174.59465027 241.21937561]
[-190.44691467 243.68617249]
[-202.16128540 232.72474670]
[-200.75151062 216.74375916]
[-187.29904175 208.00245667]
[-172.12345886 213.20640564]
[-158.11320496 207.84794617]
[-144.10296631 202.48948669]
[-130.09272766 197.13102722]
[-116.08248901 191.77255249]
[-106.95901489 179.99922180]
[-91.30542755 182.29612732]
[-77.29518127 176.93766785]
[-63.28494263 171.57920837]
[-49.27470016 166.22074890]
[-35.26445770 160.86227417]
[-31.49446487 142.59487915]
[-17.39289284 130.15893555]
[1.50046825 128.67926025]
[17.61832809 138.92860413]
[31.31407166 132.81086731]
[45.00981522 126.69313812]
[58.70555496 120.57540894]
[72.40129852 114.45767212]
[72.10912323 91.91450500]
[86.53136444 76.68907928]
[105.91522980 75.91049194]
[113.72933197 63.10659409]
[121.54344177 50.30269623]
[129.35754395 37.49880219]
[137.17164612 24.69490433]
[144.98574829 11.89100742]
[141.48593140 -3.28756285]
[149.59294128 -16.16121864]
[164.08496094 -19.40422440]
[171.89906311 -32.20811844]
[179.71316528 -45.01201630]
[173.91362000 -59.28336716]
[177.58660889 -74.06046295]
[189.12016296 -83.72694397]
[203.95657349 -84.73635101]
[211.77069092 -97.54024506]
[219.58479309 -110.34414673]
[227.39889526 -123.14804077]
[230.25804138 -137.87303162]
[227.80334473 -152.67080688]
[213.39674377 -157.99485779]
[203.59463501 -169.81915283]
[201.03372192 -184.96304321]
[206.40289307 -199.35289001]
[218.25785828 -209.11788940]
[233.40969849 -211.63131714]
[247.78263855 -206.21707153]
[257.51043701 -194.33154297]
[259.97634888 -179.17190552]
[254.51708984 -164.81599426]
[242.60113525 -155.12550354]
[245.05583191 -140.32772827]
[252.03619385 -137.58462524]
[249.80691528 -152.41804504]
[261.53833008 -161.76544189]
[275.49914551 -156.27951050]
[277.72869873 -141.44613647]
[265.99691772 -132.09843445]
[272.97726440 -129.35534668]
[284.84973145 -138.52294922]
[296.72216797 -147.69056702]
[308.59460449 -156.85816956]
[320.46707153 -166.02577209]
[332.33950806 -175.19337463]
[344.12774658 -184.46902466]
[355.83078003 -193.85194397]
[357.70199585 -209.31596375]
[369.70419312 -218.66487122]
[384.43527222 -216.78562927]
[396.13830566 -226.16853333]
[395.26718140 -241.66114807]
[403.69705200 -254.68869019]
[418.18646240 -260.24182129]
[433.16390991 -256.18524170]
[442.87026978 -244.07878113]
[443.57324219 -228.57763672]
[435.00253296 -215.64230347]
[420.45376587 -210.24668884]
[405.52120972 -214.46551514]
[393.81817627 -205.08259583]
[392.44949341 -190.29536438]
[380.71459961 -180.61303711]
[365.21368408 -182.14891052]
[353.51065063 -172.76599121]
[350.24688721 -166.10403442]
[341.50711060 -163.32092285]
[329.63467407 -154.15332031]
[317.76220703 -144.98571777]
[305.88977051 -135.81811523]
[294.01733398 -126.65050507]
[282.14486694 -117.48290253]
[240.20278931 -115.33393097]
[232.38868713 -102.53003693]
[224.57458496 -89.72614288]
[216.76048279 -76.92224884]
[222.64660645 -63.26605606]
[219.32342529 -48.58884811]
[207.86097717 -38.56559372]
[192.51705933 -37.19791031]
[184.70295715 -24.39401436]
[176.88885498 -11.59011841]
[180.63107300 2.78108025]
[172.88885498 15.87736702]
[157.78964233 19.70511246]
[149.97554016 32.50901031]
[142.16143799 45.31290436]
[134.34733582 58.11680222]
[126.53322601 70.92070007]
[118.71912384 83.72459412]
[125.88272095 94.83566284]
[126.54441833 108.84947205]
[119.72411346 122.02848816]
[106.54129791 130.46185303]
[110.59971619 144.90238953]
[114.65813446 159.34292603]
[118.71655273 173.78346252]
[122.77497864 188.22401428]
[126.83339691 202.66455078]
[130.89181519 217.10508728]
[134.95024109 231.54563904]
[150.34893799 239.80895996]
[154.93470764 256.32254028]
[146.34634399 270.76272583]
[150.66783142 285.12673950]
[154.98931885 299.49075317]
[159.31080627 313.85476685]
[169.66401672 327.28039551]
[159.62913513 340.94558716]
[143.72004700 335.08575439]
[144.94679260 318.17623901]
[140.62530518 303.81225586]
[136.30381775 289.44824219]
[131.98233032 275.08422852]
[119.87231445 270.62005615]
[112.44322968 259.82852173]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 156]
[2 155]
[3 154]
[4 153]
[5 152]
[6 151]
[7 150]
[8 149]
[9 54]
[10 53]
[11 52]
[12 51]
[13 50]
[20 46]
[21 45]
[22 44]
[23 43]
[24 42]
[26 40]
[27 39]
[28 38]
[29 37]
[30 36]
[57 145]
[58 144]
[59 143]
[60 142]
[61 141]
[62 140]
[65 137]
[66 136]
[67 135]
[71 131]
[72 130]
[73 129]
[74 128]
[75 88]
[76 87]
[95 127]
[96 126]
[97 125]
[98 124]
[99 123]
[100 122]
[101 120]
[102 119]
[105 116]
[106 115]
[159 169]
[160 168]
[161 167]
[162 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
