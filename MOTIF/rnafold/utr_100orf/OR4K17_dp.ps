%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:19:54 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR4K17)
} def

/sequence { (\
AUGGCUCUUUAUUUUUCACUCAUACUCCAUGGUAUGAGUGAUCUUUUCUUUCUCUCUACAGGUCAUCCAAGAGCGAGCUGUAGGAUGGAGGCCAUGAAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 95 0.917099984 ubox
2 94 0.979962556 ubox
2 96 0.003417691 ubox
3 93 0.999749182 ubox
4 92 0.999786533 ubox
5 90 0.073984970 ubox
5 91 0.990851908 ubox
6 88 0.004544578 ubox
6 89 0.104490917 ubox
6 90 0.211850873 ubox
6 91 0.105668625 ubox
7 87 0.009227507 ubox
7 88 0.110416891 ubox
7 90 0.950047355 ubox
8 87 0.098934505 ubox
8 88 0.017884617 ubox
8 89 0.954937852 ubox
8 90 0.005850669 ubox
9 85 0.015839140 ubox
9 87 0.014668289 ubox
9 88 0.952899719 ubox
9 89 0.014092964 ubox
9 97 0.003334143 ubox
10 84 0.015272354 ubox
10 87 0.947136593 ubox
10 88 0.015049601 ubox
10 89 0.003938415 ubox
10 96 0.003366706 ubox
11 42 0.006853755 ubox
11 86 0.938890412 ubox
11 95 0.003308400 ubox
12 41 0.003784533 ubox
12 84 0.015712826 ubox
12 85 0.902093696 ubox
12 89 0.004107273 ubox
13 41 0.004609550 ubox
13 83 0.004593225 ubox
13 84 0.752438555 ubox
13 85 0.044171161 ubox
13 88 0.004088203 ubox
13 89 0.003207358 ubox
14 41 0.009735327 ubox
14 82 0.003318397 ubox
14 83 0.122865191 ubox
14 84 0.050664796 ubox
14 85 0.019199741 ubox
14 87 0.003484277 ubox
14 88 0.003175539 ubox
15 40 0.003594949 ubox
15 41 0.043260357 ubox
15 82 0.068152872 ubox
15 83 0.008676132 ubox
15 84 0.020671645 ubox
15 85 0.008028960 ubox
16 40 0.007830807 ubox
16 41 0.932701866 ubox
16 84 0.004941427 ubox
17 40 0.999148901 ubox
17 80 0.003709036 ubox
18 39 0.999713201 ubox
19 38 0.999976068 ubox
20 37 0.999848623 ubox
21 36 0.999982029 ubox
22 35 0.999594278 ubox
23 34 0.999503430 ubox
24 33 0.999713231 ubox
25 32 0.999314192 ubox
26 31 0.892928708 ubox
26 32 0.016150663 ubox
27 31 0.128397175 ubox
40 47 0.004388471 ubox
40 48 0.025421121 ubox
40 51 0.004488837 ubox
40 52 0.014066041 ubox
40 54 0.005670936 ubox
41 45 0.007299665 ubox
41 46 0.024641500 ubox
41 47 0.033567087 ubox
41 49 0.008398262 ubox
41 50 0.025914343 ubox
41 51 0.018457864 ubox
41 53 0.007247739 ubox
41 55 0.003606898 ubox
41 86 0.016543344 ubox
42 84 0.005912275 ubox
42 85 0.025438978 ubox
42 89 0.013641246 ubox
42 97 0.013106878 ubox
43 83 0.020088446 ubox
43 84 0.032332987 ubox
43 88 0.014926612 ubox
43 90 0.009129656 ubox
43 96 0.014003527 ubox
44 82 0.019884076 ubox
44 83 0.031629802 ubox
44 87 0.014161052 ubox
44 89 0.008427646 ubox
44 99 0.003195389 ubox
45 82 0.030320403 ubox
45 83 0.003772782 ubox
45 88 0.007435716 ubox
45 89 0.003533588 ubox
45 90 0.008887455 ubox
45 91 0.004225639 ubox
45 98 0.003734098 ubox
45 99 0.004846401 ubox
46 82 0.004904336 ubox
46 85 0.012939807 ubox
46 87 0.005675483 ubox
46 88 0.003314284 ubox
46 89 0.018317989 ubox
46 90 0.048605306 ubox
46 97 0.003834771 ubox
46 98 0.005684743 ubox
47 76 0.003322641 ubox
47 84 0.013860217 ubox
47 85 0.011450780 ubox
47 88 0.018791285 ubox
47 89 0.104446209 ubox
47 91 0.013657300 ubox
47 96 0.003769152 ubox
47 97 0.005868449 ubox
48 75 0.003366279 ubox
48 77 0.014621788 ubox
48 83 0.016817812 ubox
48 84 0.014085832 ubox
48 87 0.020416405 ubox
48 88 0.110307339 ubox
48 90 0.152625215 ubox
48 91 0.029100832 ubox
48 96 0.005822750 ubox
49 76 0.014295591 ubox
49 77 0.005030407 ubox
49 82 0.016371139 ubox
49 83 0.008150062 ubox
49 85 0.005531322 ubox
49 87 0.107065477 ubox
49 88 0.006658601 ubox
49 89 0.155545333 ubox
49 90 0.069463478 ubox
49 91 0.003593630 ubox
50 75 0.013707602 ubox
50 76 0.004967745 ubox
50 77 0.065616569 ubox
50 82 0.005084274 ubox
50 84 0.005436384 ubox
50 85 0.013195556 ubox
50 87 0.012662689 ubox
50 88 0.154081653 ubox
50 89 0.140568470 ubox
50 90 0.037058502 ubox
51 75 0.003244839 ubox
51 76 0.080733738 ubox
51 84 0.013074442 ubox
51 85 0.067968422 ubox
51 87 0.143804825 ubox
51 88 0.150647668 ubox
51 89 0.079609038 ubox
51 91 0.008137195 ubox
52 73 0.009907803 ubox
52 75 0.082117750 ubox
52 77 0.018356643 ubox
52 83 0.012602135 ubox
52 84 0.070966697 ubox
52 87 0.165764377 ubox
52 88 0.083941915 ubox
52 90 0.071070565 ubox
53 72 0.009910212 ubox
53 76 0.018555969 ubox
53 82 0.009950873 ubox
53 83 0.028719027 ubox
53 84 0.013066449 ubox
53 85 0.305606654 ubox
53 87 0.077766382 ubox
53 88 0.009956679 ubox
53 89 0.073216437 ubox
54 71 0.009899880 ubox
54 73 0.083217762 ubox
54 75 0.018350979 ubox
54 83 0.023211381 ubox
54 84 0.361609726 ubox
54 87 0.021078539 ubox
54 88 0.073436901 ubox
55 70 0.009549504 ubox
55 72 0.083364321 ubox
55 82 0.018100810 ubox
55 83 0.041592495 ubox
55 84 0.448971108 ubox
55 85 0.049826115 ubox
55 87 0.061618510 ubox
56 71 0.083383923 ubox
56 73 0.017911253 ubox
56 83 0.986043727 ubox
56 84 0.043341801 ubox
57 70 0.082375559 ubox
57 72 0.017772909 ubox
57 82 0.993965418 ubox
57 83 0.026885051 ubox
58 81 0.995887017 ubox
59 80 0.996271394 ubox
60 79 0.996037979 ubox
61 67 0.005259713 ubox
61 68 0.084909676 ubox
61 78 0.995853709 ubox
61 79 0.004319009 ubox
62 66 0.003455650 ubox
62 67 0.084736723 ubox
62 74 0.014914338 ubox
62 78 0.008705632 ubox
63 72 0.013691160 ubox
63 73 0.010207469 ubox
63 76 0.992296138 ubox
63 77 0.009481949 ubox
64 71 0.017765882 ubox
64 75 0.993101825 ubox
66 72 0.734234046 ubox
66 76 0.008472696 ubox
67 71 0.730343201 ubox
67 75 0.010504171 ubox
1 95 0.9500000 lbox
2 94 0.9500000 lbox
3 93 0.9500000 lbox
4 92 0.9500000 lbox
5 91 0.9500000 lbox
7 90 0.9500000 lbox
8 89 0.9500000 lbox
9 88 0.9500000 lbox
10 87 0.9500000 lbox
11 86 0.9500000 lbox
12 85 0.9500000 lbox
13 84 0.9500000 lbox
16 41 0.9500000 lbox
17 40 0.9500000 lbox
18 39 0.9500000 lbox
19 38 0.9500000 lbox
20 37 0.9500000 lbox
21 36 0.9500000 lbox
22 35 0.9500000 lbox
23 34 0.9500000 lbox
24 33 0.9500000 lbox
25 32 0.9500000 lbox
26 31 0.9500000 lbox
56 83 0.9500000 lbox
57 82 0.9500000 lbox
58 81 0.9500000 lbox
59 80 0.9500000 lbox
60 79 0.9500000 lbox
61 78 0.9500000 lbox
63 76 0.9500000 lbox
64 75 0.9500000 lbox
66 72 0.9500000 lbox
67 71 0.9500000 lbox
showpage
end
%%EOF
