%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:48:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAACAACAGGAAGCAGCUUACAAACUCGGUGAACAACUGAGGGAACCAAACCAGAGACGCGCUGAACAGAGAGAAUCAGGCUCAAAGCAAGUGGAAGUGGGCAGAGAUUCCACCAGGACUGGUGCAAGGCGCAGAGCCAGCCAGAUUUGAGAAGAAGGCAAAAAGAUGCUGGGGAGCAGAGCUGUAAUGCUGCUGUUGCUGCUGCCCUGGACAGCUCAGGGCAGAGCUGUGCCUGGGGGCAGCAGCCCUGCCUG\
GACUCAGUGCC\
) } def
/len { sequence length } bind def

/coor [
[-152.94822693 142.11286926]
[-160.61032104 149.55718994]
[-170.11405945 154.65081787]
[-180.75047302 156.95150757]
[-191.70869446 156.22778320]
[-202.13783264 152.48081970]
[-211.21298218 145.94871521]
[-218.20045471 137.09197998]
[-222.51695251 126.56135559]
[-223.77803040 115.15013885]
[-238.64091492 117.17362976]
[-253.50379944 119.19712067]
[-268.36669922 121.22061920]
[-276.49499512 137.45965576]
[-292.61444092 145.47439575]
[-310.15786743 142.21142578]
[-322.10455322 129.16950989]
[-336.91571045 131.54216003]
[-351.72686768 133.91482544]
[-366.53802490 136.28749084]
[-381.34918213 138.66014099]
[-396.16036987 141.03280640]
[-398.08996582 154.42436218]
[-406.78247070 166.43951416]
[-421.20855713 173.66424561]
[-438.64855957 173.42739868]
[-449.41000366 183.87684631]
[-460.17144775 194.32630920]
[-470.93289185 204.77577209]
[-481.69436646 215.22523499]
[-492.45581055 225.67469788]
[-494.12850952 241.63031006]
[-507.72308350 250.14892578]
[-522.81091309 244.69581604]
[-527.81793213 229.45411682]
[-518.90319824 216.11595154]
[-502.90527344 214.91323853]
[-492.14382935 204.46379089]
[-481.38235474 194.01432800]
[-470.62091064 183.56486511]
[-459.85946655 173.11540222]
[-449.09802246 162.66593933]
[-451.56619263 155.58369446]
[-465.73074341 160.51982117]
[-470.66662598 146.35517883]
[-456.50253296 141.41921997]
[-458.97067261 134.33697510]
[-473.89572144 132.83927917]
[-488.82077026 131.34158325]
[-495.67160034 145.74333191]
[-507.02487183 156.90538025]
[-521.49200439 163.48829651]
[-537.31243896 164.71121216]
[-552.56762695 160.44430542]
[-565.41412354 151.22233582]
[-574.30603027 138.17771912]
[-578.18115234 122.90144348]
[-593.12280273 121.57945251]
[-601.91223145 123.93479919]
[-608.23211670 120.15299988]
[-623.15716553 118.65529633]
[-631.97369385 120.90706635]
[-638.24859619 117.05116272]
[-653.15502930 115.37796021]
[-668.06140137 113.70475769]
[-682.96777344 112.03155518]
[-692.01831055 124.44056702]
[-706.06726074 130.64715576]
[-721.33563232 128.98176575]
[-733.71618652 119.89239502]
[-739.87872314 105.82402039]
[-738.16546631 90.56098175]
[-729.03735352 78.20895386]
[-714.94970703 72.09056091]
[-699.69213867 73.85163116]
[-687.36877441 83.01844788]
[-681.29455566 97.12516785]
[-666.38818359 98.79837036]
[-651.48181152 100.47157288]
[-636.57543945 102.14477539]
[-621.65942383 103.73025513]
[-606.73437500 105.22795868]
[-591.80078125 106.63782501]
[-576.85919189 107.95980835]
[-571.26422119 94.97422791]
[-561.92193604 84.33198547]
[-549.73382568 77.07998657]
[-535.88201904 73.93703461]
[-521.71490479 75.22264099]
[-508.61569214 80.82455444]
[-497.86749268 90.20844269]
[-490.52749634 102.46884918]
[-487.32305908 116.41653442]
[-472.39804077 117.91423035]
[-457.47299194 119.41193390]
[-434.96096802 104.80786896]
[-411.24313354 109.05210876]
[-398.53302002 126.22164917]
[-383.72186279 123.84899139]
[-368.91070557 121.47632599]
[-354.09954834 119.10366821]
[-339.28836060 116.73100281]
[-324.47720337 114.35834503]
[-320.66751099 102.87219238]
[-312.29583740 94.03423309]
[-300.89871216 89.55543518]
[-288.60601807 90.33843231]
[-277.74295044 96.29635620]
[-270.39019775 106.35772705]
[-255.52729797 104.33423615]
[-240.66441345 102.31074524]
[-225.80151367 100.28724670]
[-218.07342529 87.43125153]
[-223.25897217 73.35609436]
[-228.44451904 59.28093719]
[-233.63006592 45.20577621]
[-246.57308960 35.13552856]
[-244.05580139 18.93073654]
[-228.66777039 13.26150131]
[-216.23887634 23.95984650]
[-219.55490112 40.02022934]
[-214.36935425 54.09539032]
[-209.18380737 68.17054749]
[-203.99826050 82.24571228]
[-189.56343079 77.59028625]
[-174.71382141 78.47817993]
[-161.46520996 84.57775879]
[-151.53950500 94.86428833]
[-146.14149475 107.78576660]
[-131.17289734 106.81572723]
[-116.20429230 105.84568787]
[-101.23569489 104.87564850]
[-86.26708984 103.90560913]
[-74.06682587 95.36144257]
[-59.79517746 102.19010162]
[-44.82657623 101.22006226]
[-29.85797501 100.25002289]
[-14.89533901 99.19193268]
[0.06081215 98.04584503]
[15.01696396 96.89974976]
[29.97311592 95.75365448]
[42.07200623 87.06653595]
[56.42301559 93.72679901]
[71.37916565 92.58070374]
[86.33531952 91.43460846]
[71.39014435 90.15331268]
[58.36091232 82.72100067]
[49.65113068 70.50872803]
[46.86748886 55.76927567]
[50.52348709 41.22164154]
[59.94469833 29.54942131]
[73.39319611 22.90578842]
[88.38813782 22.51629257]
[102.16341400 28.45278740]
[112.17788696 39.62016296]
[116.58419037 53.95838165]
[114.56950378 68.82246399]
[106.50762939 81.46827698]
[116.50518036 70.28574371]
[126.50272369 59.10321426]
[136.50027466 47.92068100]
[135.36730957 32.15705490]
[145.77575684 20.26421547]
[161.55049133 19.29797173]
[173.33261108 29.83158112]
[174.13201904 45.61563873]
[163.47444153 57.28574371]
[147.68280029 57.91823196]
[137.68525696 69.10076141]
[127.68771362 80.28329468]
[117.69016266 91.46582794]
[121.77865601 97.75344849]
[134.35403442 89.57666016]
[142.53062439 102.15216064]
[129.95564270 110.32870483]
[134.04412842 116.61632538]
[148.32084656 112.01465607]
[162.59756470 107.41298676]
[176.87428284 102.81131744]
[191.15100098 98.20964050]
[205.40039062 93.52406311]
[219.62197876 88.75473022]
[233.84356689 83.98539734]
[240.66043091 69.72686005]
[255.59060669 64.54365540]
[269.77627563 71.51089478]
[274.80133057 86.49503326]
[267.68450928 100.60624695]
[252.64807129 105.47260284]
[238.61289978 98.20697784]
[224.39131165 102.97631073]
[210.16972351 107.74564362]
[204.84555054 112.83446503]
[195.75267029 112.48635864]
[181.47595215 117.08802795]
[167.19923401 121.68970490]
[152.92251587 126.29137421]
[138.64579773 130.89303589]
[136.97259521 145.79943848]
[149.87384033 153.45175171]
[162.77507019 161.10408020]
[175.67631531 168.75640869]
[188.57754517 176.40873718]
[201.47879028 184.06106567]
[214.38002014 191.71337891]
[227.28126526 199.36570740]
[240.18249512 207.01803589]
[253.08372498 214.67036438]
[265.98495483 222.32269287]
[278.97534180 229.82269287]
[292.05307007 237.16932678]
[305.17379761 244.43888855]
[318.33706665 251.63114929]
[331.50033569 258.82339478]
[344.66357422 266.01565552]
[357.82684326 273.20791626]
[370.99011230 280.40017700]
[384.15338135 287.59243774]
[399.24621582 282.90396118]
[413.19461060 290.33480835]
[417.72326660 305.47637939]
[410.14535522 319.34542847]
[394.95675659 323.71371460]
[381.16857910 315.98962402]
[376.96112061 300.75567627]
[363.79785156 293.56344604]
[350.63458252 286.37118530]
[337.47134399 279.17892456]
[324.30807495 271.98666382]
[311.14480591 264.79440308]
[297.98153687 257.60214233]
[290.63018799 257.15435791]
[284.70645142 250.24705505]
[271.62872314 242.90040588]
[266.90011597 243.29426575]
[261.86874390 240.74516296]
[258.33264160 235.22392273]
[245.43141174 227.57159424]
[232.53016663 219.91926575]
[219.62893677 212.26695251]
[206.72769165 204.61462402]
[193.82646179 196.96229553]
[180.92521667 189.30996704]
[168.02398682 181.65763855]
[155.12274170 174.00532532]
[142.22151184 166.35299683]
[129.32028198 158.70066833]
[87.55328369 137.84127808]
[87.48140717 106.39076233]
[72.52526093 107.53685760]
[57.56910706 108.68294525]
[44.40045166 117.45204926]
[31.11920738 110.70980835]
[16.16305733 111.85590363]
[1.20690489 113.00199127]
[-13.74924660 114.14808655]
[-22.03344917 117.91287231]
[-28.88793564 115.21862030]
[-43.85653687 116.18865967]
[-58.82513809 117.15869904]
[-72.09605408 125.77225494]
[-85.29705048 118.87421417]
[-100.26565552 119.84425354]
[-115.23425293 120.81429291]
[-130.20285034 121.78433228]
[-145.17146301 122.75437164]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 112]
[11 111]
[12 110]
[13 109]
[17 103]
[18 102]
[19 101]
[20 100]
[21 99]
[22 98]
[26 42]
[27 41]
[28 40]
[29 39]
[30 38]
[31 37]
[47 95]
[48 94]
[49 93]
[57 84]
[58 83]
[60 82]
[61 81]
[63 80]
[64 79]
[65 78]
[66 77]
[113 124]
[114 123]
[115 122]
[116 121]
[129 266]
[130 265]
[131 264]
[132 263]
[133 262]
[135 260]
[136 259]
[137 258]
[138 256]
[139 255]
[140 254]
[141 253]
[143 251]
[144 250]
[145 249]
[158 171]
[159 170]
[160 169]
[161 168]
[176 198]
[177 197]
[178 196]
[179 195]
[180 194]
[181 192]
[182 191]
[183 190]
[199 247]
[200 246]
[201 245]
[202 244]
[203 243]
[204 242]
[205 241]
[206 240]
[207 239]
[208 238]
[209 237]
[210 234]
[211 233]
[212 231]
[213 230]
[214 229]
[215 228]
[216 227]
[217 226]
[218 225]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
