%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:04:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUCAGAGGCCGCCGGAUGGCGUAGGAUCGGCCGCUGGUGGUGGUGAUACCGGGUACCCGGGCUAUGGCGCCGGCGCAGCGCUGCCCUCUGUGCCGCCAGACCUUCUUCUGUGGUCGCGGGCACGUUUACAGCCGCAAGCACCAGCGGCAGCUGAAGGAGGCUU\
) } def
/len { sequence length } bind def

/coor [
[69.94095612 104.12061310]
[55.03755569 102.42099762]
[40.13415527 100.72138214]
[31.20819855 102.86431122]
[24.96577644 98.84599304]
[10.09720993 96.86464691]
[-4.77135658 94.88330078]
[-15.49910545 102.09595490]
[-27.86644554 100.11132812]
[-35.30534744 90.53749847]
[-50.13375854 88.27513123]
[-65.00232697 86.29378510]
[-79.90572357 84.59416962]
[-94.80912018 82.89455414]
[-109.71252441 81.19493866]
[-124.61592102 79.49532318]
[-139.51931763 77.79570770]
[-148.44528198 79.93863678]
[-154.68769836 75.92031860]
[-169.55625916 73.93897247]
[-184.25753784 79.78561401]
[-195.85127258 70.43496704]
[-210.71983337 68.45362854]
[-225.58840942 66.47228241]
[-240.45697021 64.49093628]
[-255.32553101 62.50959396]
[-268.15606689 79.03484344]
[-295.25909424 77.21949005]
[-310.16250610 78.91910553]
[-325.06588745 80.61872101]
[-339.96929932 82.31833649]
[-348.18356323 86.41596985]
[-355.17044067 83.90634918]
[-370.10333252 85.32362366]
[-385.03622437 86.74089813]
[-399.96911621 88.15818024]
[-414.90200806 89.57545471]
[-430.09899902 97.09130859]
[-441.52807617 84.56882477]
[-432.65887451 70.11983490]
[-416.31930542 74.64256287]
[-401.38641357 73.22528076]
[-386.45352173 71.80800629]
[-371.52062988 70.39073181]
[-356.58773804 68.97344971]
[-341.66891479 67.41493988]
[-326.76550293 65.71532440]
[-311.86212158 64.01570892]
[-296.95870972 62.31608963]
[-295.27005005 55.00867081]
[-290.20404053 33.08641052]
[-302.85067749 25.02026558]
[-315.49728394 16.95412254]
[-328.14392090 8.88797760]
[-344.54205322 8.70499611]
[-352.34573364 -5.71841002]
[-343.52722168 -19.54467583]
[-327.15823364 -18.55052567]
[-320.07778931 -3.75865507]
[-307.43115234 4.30748844]
[-294.78451538 12.37363243]
[-282.13787842 20.43977547]
[-259.13693237 29.41175842]
[-253.34419250 47.64102554]
[-238.47563171 49.62237167]
[-223.60705566 51.60371399]
[-208.73849487 53.58506012]
[-193.86991882 55.56640244]
[-180.23216248 49.57804108]
[-167.57492065 59.07040405]
[-152.70635986 61.05175018]
[-137.81970215 62.89231110]
[-122.91630554 64.59192657]
[-108.01290894 66.29154205]
[-93.10950470 67.99115753]
[-78.20610809 69.69077301]
[-63.30270767 71.39038849]
[-59.04314423 69.14309692]
[-53.32105255 69.57871246]
[-47.87139130 73.44672394]
[-33.04298401 75.70908356]
[-17.08890915 68.44441986]
[-2.79001188 80.01473236]
[12.07855511 81.99607849]
[26.94712067 83.97742462]
[41.83377075 85.81798553]
[56.73717117 87.51760101]
[71.64057159 89.21721649]
[84.43626404 67.46006775]
[112.95807648 60.25846863]
[141.84197998 77.45124817]
[154.17431641 68.91231537]
[166.50665283 60.37338257]
[178.83898926 51.83444977]
[191.17134094 43.29551697]
[203.50367737 34.75658417]
[202.79360962 20.96620369]
[208.95179749 8.72799206]
[220.26881409 1.20045578]
[233.71990967 0.26671255]
[245.77310181 6.06443930]
[258.26483154 -2.23958635]
[270.75656128 -10.54361153]
[283.24826050 -18.84763718]
[282.90658569 -34.27121735]
[290.97723389 -47.41914368]
[304.88491821 -54.09596634]
[320.19174194 -52.17113113]
[332.01333618 -42.25885010]
[336.57748413 -27.52209091]
[332.42779541 -12.66330242]
[320.88839722 -2.42387128]
[305.64147949 -0.07116131]
[291.55230713 -6.35591412]
[279.06057739 1.94811165]
[266.56884766 10.25213718]
[254.07711792 18.55616379]
[253.92921448 34.95106506]
[243.95106506 48.16920090]
[227.90586853 52.89762878]
[212.04260254 47.08892441]
[199.71026611 55.62785721]
[187.37792969 64.16678619]
[175.04559326 72.70572662]
[162.71324158 81.24465942]
[150.38090515 89.78359222]
[150.23898315 97.28224945]
[163.36891174 90.02934265]
[176.21513367 97.77367401]
[175.93154907 112.77098846]
[162.80174255 120.02413940]
[149.95510864 112.27956390]
[149.81318665 119.77822113]
[161.81356812 128.77770996]
[173.81394958 137.77720642]
[185.81433105 146.77668762]
[197.81471252 155.77618408]
[212.60299683 151.07659912]
[227.31867981 155.99884033]
[236.30326843 168.65019226]
[236.10200500 184.16596985]
[226.79228210 196.58001709]
[211.95388794 201.11889648]
[197.29246521 196.03732300]
[188.44564819 183.28924561]
[188.81521606 167.77656555]
[176.81483459 158.77706909]
[164.81445312 149.77758789]
[152.81407166 140.77809143]
[140.81369019 131.77859497]
[128.64515686 140.54937744]
[133.38825989 154.77973938]
[138.13137817 169.01008606]
[142.87449646 183.24043274]
[157.12045288 190.08357239]
[162.27612305 205.02326965]
[155.28276062 219.19606018]
[140.28938293 224.19349670]
[126.19131470 217.05068970]
[121.35267639 202.00531006]
[128.64414978 187.98355103]
[123.90103149 173.75320435]
[119.15792084 159.52284241]
[114.41480255 145.29249573]
[88.73883820 140.25527954]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 88]
[2 87]
[3 86]
[5 85]
[6 84]
[7 83]
[10 81]
[11 80]
[12 77]
[13 76]
[14 75]
[15 74]
[16 73]
[17 72]
[19 71]
[20 70]
[22 68]
[23 67]
[24 66]
[25 65]
[26 64]
[28 49]
[29 48]
[30 47]
[31 46]
[33 45]
[34 44]
[35 43]
[36 42]
[37 41]
[51 62]
[52 61]
[53 60]
[54 59]
[91 126]
[92 125]
[93 124]
[94 123]
[95 122]
[96 121]
[101 117]
[102 116]
[103 115]
[104 114]
[133 150]
[134 149]
[135 148]
[136 147]
[137 146]
[151 164]
[152 163]
[153 162]
[154 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
