%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:21:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAGCGCUGCUCCCCGGGCGCUCCUCCCCGGGCGCUCCUCCCCAGGCCUCCCGGGCGCUUGGAUCCCGGCCAUCUCCGCACCCUUCAAGUGGGUGUGGGUGAUUUCCUGGCGGGGGGAGCAGCCAGGUGAGCCCAAGAUGCUGCUGCGCUCGAAGCCUGCGCUGCCGCCGCCGCUGAUGCUGCUGCUCCUGGGGCCGCUGGGUCCCCUCUCCCCUGGCGCCCUGCCCCGACCUGCGC\
) } def
/len { sequence length } bind def

/coor [
[249.46934509 180.39700317]
[235.40495300 175.18231201]
[226.31719971 163.24862671]
[225.02981567 148.30398560]
[231.94279480 134.99192810]
[244.90773010 127.44889832]
[230.03822327 125.47464752]
[215.16871643 123.50039673]
[200.29919434 121.52614594]
[185.42968750 119.55189514]
[170.56018066 117.57764435]
[155.69067383 115.60339355]
[140.82116699 113.62914276]
[125.95165253 111.65489197]
[111.08213806 109.68064117]
[97.09505463 115.09926605]
[87.43640137 126.57578278]
[77.77774048 138.05229187]
[68.11908722 149.52880859]
[58.46043015 161.00532532]
[48.80177307 172.48182678]
[39.14311600 183.95834351]
[29.48445892 195.43486023]
[31.08834076 211.15754700]
[21.04020500 223.35633850]
[5.30143309 224.79389954]
[-6.79044199 214.61735535]
[-8.06152439 198.86427307]
[2.24229574 186.88066101]
[18.00794601 185.77619934]
[27.66660309 174.29968262]
[37.32526016 162.82318115]
[46.98391724 151.34666443]
[56.64257431 139.87014771]
[66.30123138 128.39363098]
[75.95988464 116.91712189]
[85.61854553 105.44061279]
[81.79732513 98.98706055]
[68.89009857 106.62928772]
[61.24809265 93.72193146]
[74.15488434 86.07996368]
[70.33367157 79.62641907]
[55.62673569 82.57704163]
[40.91980743 85.52766418]
[26.21287537 88.47829437]
[11.50594521 91.42891693]
[-3.20098543 94.37953949]
[-17.88812256 97.42716980]
[-32.55482483 100.57166290]
[-44.35304642 111.96174622]
[-60.03949356 107.17975616]
[-63.47729492 91.14499664]
[-51.12993240 80.35264587]
[-35.69931793 85.90496063]
[-21.03261566 82.76046753]
[-15.16221428 78.29336548]
[-6.15161085 79.67260742]
[8.55531979 76.72198486]
[23.26225090 73.77136230]
[37.96918106 70.82073212]
[52.67611313 67.87010956]
[67.38304138 64.91948700]
[69.57793427 57.74784470]
[59.35115433 46.77455902]
[73.96772003 43.40456009]
[76.16261292 36.23291779]
[65.62624359 25.55654335]
[55.08987427 14.88016891]
[46.85076523 10.98011780]
[44.48605347 3.99264717]
[34.09152603 -6.82187176]
[23.69700050 -17.63639069]
[12.95132065 -28.10206604]
[1.86618638 -38.20750046]
[-9.28540134 -48.23955536]
[-20.50295639 -58.19778824]
[-31.72051239 -68.15602112]
[-42.93806839 -78.11425781]
[-54.15562439 -88.07249451]
[-65.37317657 -98.03073120]
[-76.59073639 -107.98896790]
[-87.80828857 -117.94719696]
[-99.02584839 -127.90543365]
[-114.46806335 -125.44130707]
[-127.85475159 -133.52403259]
[-132.86512756 -148.33721924]
[-127.13344574 -162.88650513]
[-113.36602783 -170.30216980]
[-98.06343079 -167.08277893]
[-88.45107269 -154.74841309]
[-89.06761169 -139.12298584]
[-77.85005188 -129.16474915]
[-66.63249969 -119.20652008]
[-55.41494370 -109.24828339]
[-44.19738770 -99.29004669]
[-32.97983170 -89.33181763]
[-21.76227760 -79.37358093]
[-10.54472160 -69.41534424]
[0.67283398 -59.45711136]
[7.74844503 -57.37088013]
[11.97162151 -49.29263306]
[23.05675507 -39.18719864]
[24.87652779 -54.07640457]
[37.58042908 -62.05204773]
[51.78103256 -57.22060776]
[56.98494339 -43.15222931]
[49.34678268 -30.24260139]
[34.51152039 -28.03091812]
[44.90604782 -17.21639824]
[55.30057144 -6.40187883]
[65.76625061 4.34380150]
[76.30261230 15.02017498]
[86.83898163 25.69654846]
[113.05638885 94.81113434]
[127.92590332 96.78538513]
[142.79541016 98.75963593]
[157.66491699 100.73387909]
[172.53442383 102.70812988]
[187.40394592 104.68238068]
[202.27345276 106.65663147]
[217.14295959 108.63088226]
[232.01246643 110.60513306]
[246.88198853 112.57938385]
[261.84246826 113.66742706]
[276.84115601 113.86541748]
[291.83984375 114.06341553]
[306.83856201 114.26140594]
[321.83724976 114.45940399]
[336.34307861 110.64090729]
[349.30032349 103.08381653]
[362.25756836 95.52673340]
[375.21484375 87.96965027]
[372.91546631 80.74128723]
[372.71447754 72.74948120]
[374.84802246 64.62062836]
[379.36199951 57.04938889]
[386.09353638 50.74046707]
[394.67074585 46.34583282]
[404.53070068 44.40287399]
[414.95602417 45.27906418]
[426.92626953 36.23954391]
[433.27627563 21.74858284]
[448.09564209 20.25318718]
[460.06588745 11.21366787]
[466.41589355 -3.27729321]
[481.23526001 -4.77268887]
[493.20550537 -13.81220818]
[505.17578125 -22.85172844]
[517.14605713 -31.89124680]
[515.87829590 -47.26643753]
[523.14447021 -60.87549591]
[536.62591553 -68.37582397]
[552.02069092 -67.37408447]
[564.41650391 -58.18994141]
[569.85778809 -43.75401306]
[566.60827637 -28.67275620]
[555.70489502 -17.75854301]
[540.62689209 -14.49405861]
[526.18554688 -19.92098999]
[514.21527100 -10.88146973]
[502.24502563 -1.84195018]
[490.27478027 7.19756937]
[484.78094482 21.04196358]
[469.10540771 23.18392563]
[457.13516235 32.22344589]
[451.64132690 46.06784058]
[435.96578979 48.20980072]
[423.99554443 57.24932098]
[429.13641357 71.34156799]
[434.27682495 85.43257141]
[449.25592041 84.64093781]
[462.62850952 76.18611145]
[475.74639893 83.24094391]
[490.72549438 82.44931030]
[504.17263794 73.06285095]
[518.90844727 80.25932312]
[519.77386475 96.63562012]
[505.87875366 105.34520721]
[491.51712036 97.42840576]
[476.53802490 98.22003937]
[464.23681641 106.61824036]
[450.04754639 99.62003326]
[435.06845093 100.41166687]
[406.07116699 113.94570160]
[382.77191162 100.92690277]
[369.81466675 108.48399353]
[356.85742188 116.04107666]
[343.90014648 123.59815979]
[345.13690186 124.36318970]
[346.31195068 125.26603699]
[356.56280518 136.21681213]
[366.81369019 147.16760254]
[377.06454468 158.11837769]
[387.31542969 169.06915283]
[397.56631470 180.01994324]
[408.10266113 190.69631958]
[418.91717529 201.09083557]
[429.73171997 211.48536682]
[440.54623413 221.87989807]
[451.36074829 232.27441406]
[462.17526245 242.66894531]
[472.98977661 253.06347656]
[487.72122192 248.71833801]
[502.64782715 252.33665466]
[513.75439453 262.94512939]
[518.05334473 277.69009399]
[514.38824463 292.60528564]
[503.74502563 303.67855835]
[488.98663330 307.93124390]
[474.08300781 304.21942139]
[463.04315186 293.54156494]
[458.83673096 278.76989746]
[462.59524536 263.87799072]
[451.78073120 253.48345947]
[440.96621704 243.08894348]
[430.15170288 232.69441223]
[419.33718872 222.29988098]
[408.52267456 211.90536499]
[397.70816040 201.51083374]
[394.92379761 201.42170715]
[392.00646973 200.23454285]
[389.37084961 197.89306641]
[387.44436646 194.49072266]
[386.61550903 190.27081299]
[376.36465454 179.32003784]
[366.11376953 168.36924744]
[355.86291504 157.41847229]
[345.61203003 146.46769714]
[335.36114502 135.51690674]
[321.63925171 129.45809937]
[306.64056396 129.26010132]
[291.64187622 129.06210327]
[276.64315796 128.86412048]
[261.64447021 128.66612244]
[273.38183594 138.00604248]
[278.29571533 152.17832947]
[274.85928345 166.77938843]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 123]
[7 122]
[8 121]
[9 120]
[10 119]
[11 118]
[12 117]
[13 116]
[14 115]
[15 114]
[16 37]
[17 36]
[18 35]
[19 34]
[20 33]
[21 32]
[22 31]
[23 30]
[42 62]
[43 61]
[44 60]
[45 59]
[46 58]
[47 57]
[48 55]
[49 54]
[66 113]
[67 112]
[68 111]
[70 110]
[71 109]
[72 108]
[73 102]
[74 101]
[75 99]
[76 98]
[77 97]
[78 96]
[79 95]
[80 94]
[81 93]
[82 92]
[83 91]
[124 234]
[125 233]
[126 232]
[127 231]
[128 230]
[129 188]
[130 187]
[131 186]
[132 185]
[140 168]
[141 167]
[143 165]
[144 164]
[146 162]
[147 161]
[148 160]
[149 159]
[170 183]
[171 182]
[173 180]
[174 179]
[190 229]
[191 228]
[192 227]
[193 226]
[194 225]
[195 224]
[196 219]
[197 218]
[198 217]
[199 216]
[200 215]
[201 214]
[202 213]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
