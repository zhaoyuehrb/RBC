%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:57:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCACCAGCUUCUUGGUCUUAGAGAUCCUGAGCUCUCGGCUGACGCGGAAGCGCAGCCAUCCCCACCACCGCCGCCACGGCCAACACGGGUGCCACGCGCCGCCACCGCCGCCGGGCCGCCGCCGCCGCCGCCGCCGCCGCCGCCGCUGCUGCAGAUCGCCCGCCGCCCACCAUGGCCCAGCAGCAAACAGGUAGCAGGAAACGGAAAGCGCCCGCGGUCGAGGCGGGAGCCGGGAGCUCGUCGUCGCAGGGUU\
UAGCGGCGGCGGACGGAG\
) } def
/len { sequence length } bind def

/coor [
[21.62844086 751.65704346]
[15.80445004 763.34417725]
[4.48845291 769.46124268]
[2.26091743 784.29492188]
[8.76083946 799.35089111]
[-1.24382925 812.34472656]
[-17.46114349 809.90936279]
[-23.20812035 794.55023193]
[-12.57276344 782.06738281]
[-10.34522820 767.23370361]
[-20.91004944 754.12689209]
[-18.66432762 737.10144043]
[-4.51578712 726.78338623]
[-2.45847225 711.92510986]
[-0.40115765 697.06689453]
[-6.31973791 683.39868164]
[3.23719573 670.79016113]
[5.29451036 655.93188477]
[7.35182476 641.07366943]
[9.40913963 626.21539307]
[15.09301090 614.40039062]
[23.98363113 607.65753174]
[33.20854568 606.34851074]
[31.49246407 591.44702148]
[29.77637863 576.54553223]
[20.63381004 564.78698730]
[26.74148941 550.19226074]
[25.02540588 535.29071045]
[23.30932236 520.38922119]
[21.59323692 505.48770142]
[19.87715340 490.58618164]
[16.00457573 484.32443237]
[18.22782898 475.50411987]
[16.68270874 460.58392334]
[15.13758945 445.66369629]
[13.59247017 430.74349976]
[7.04769993 427.08071899]
[-6.04184055 419.75515747]
[-12.58661079 416.09237671]
[-26.11178589 422.57846069]
[-39.63695908 429.06457520]
[-53.16213608 435.55068970]
[-66.68730927 442.03680420]
[-73.04247284 448.54467773]
[-80.40494537 448.51873779]
[-94.00360107 454.84936523]
[-107.60224915 461.17999268]
[-116.56880951 474.91070557]
[-132.92616272 473.74075317]
[-139.84727478 458.87365723]
[-130.21229553 445.60342407]
[-113.93286133 447.58132935]
[-100.33421326 441.25070190]
[-86.73555756 434.92010498]
[-73.17342377 428.51162720]
[-59.64824677 422.02551270]
[-46.12307358 415.53939819]
[-32.59789658 409.05328369]
[-19.07272148 402.56719971]
[-33.18772507 407.64328003]
[-48.16091919 406.74694824]
[-61.56955719 400.02322388]
[-71.24404144 388.56005859]
[-75.61898041 374.21221924]
[-73.98648071 359.30133057]
[-66.61070251 346.24002075]
[-54.68507767 337.14169312]
[-40.13924789 333.47851562]
[-25.32681274 335.84323120]
[-12.64451313 343.85317993]
[-4.14441919 356.21231079]
[-1.20189559 370.92086792]
[-4.29409456 385.60128784]
[0.27568465 371.31433105]
[4.84546423 357.02737427]
[9.41524315 342.74041748]
[13.98502254 328.45346069]
[10.49291325 313.97399902]
[22.06665993 303.18701172]
[26.63644028 288.90005493]
[31.20621872 274.61309814]
[35.77599716 260.32614136]
[40.34577942 246.03919983]
[35.08283615 238.96917725]
[33.61993790 230.13850403]
[36.40581131 221.48782349]
[42.94129562 214.97666931]
[51.86373520 212.13983154]
[56.92214203 198.01847839]
[61.98054886 183.89714050]
[67.03895569 169.77578735]
[72.09736633 155.65443420]
[77.15577698 141.53308105]
[82.21417999 127.41173553]
[69.10652924 116.25138092]
[62.87507629 99.00836945]
[66.18580627 79.83747864]
[56.39839172 68.47057343]
[48.45893478 64.03147888]
[46.56483078 56.91677475]
[36.90838623 45.43840027]
[22.10357094 39.85915375]
[19.83099937 25.13893890]
[10.17455482 13.66056538]
[-5.41875553 8.58309460]
[-8.55302811 -7.51374865]
[3.99600840 -18.07091331]
[19.31898117 -12.22809219]
[21.65292931 4.00412035]
[31.30937386 15.48249435]
[45.42349625 20.24073219]
[48.38676071 35.78195572]
[58.04320526 47.26033020]
[67.76529694 58.68315506]
[77.55271149 70.05006409]
[91.11484528 63.64159393]
[88.54776764 48.86288834]
[85.98069763 34.08418274]
[75.99580383 21.81175423]
[81.44082642 7.94809914]
[78.87375641 -6.83060598]
[68.88886261 -19.10303497]
[74.33389282 -32.96669006]
[71.76681519 -47.74539566]
[61.78192139 -60.01782608]
[67.22695160 -73.88147736]
[64.65987396 -88.66018677]
[53.74108887 -100.89588165]
[59.13438034 -116.38278961]
[75.29158783 -119.18931580]
[85.59156799 -106.42833710]
[79.43857574 -91.22726440]
[82.00565338 -76.44855499]
[91.80693054 -65.23320007]
[86.54551697 -50.31247330]
[89.11259460 -35.53376770]
[98.91387177 -24.31840897]
[93.65245819 -9.39768219]
[96.21953583 5.38102293]
[106.02081299 16.59638023]
[100.75939941 31.51710701]
[103.32647705 46.29581451]
[105.89355469 61.07451630]
[114.05330658 66.83165741]
[119.80818939 74.01203156]
[131.39651489 64.48783112]
[142.98486328 54.96362305]
[154.35176086 45.17620850]
[165.49125671 35.13072968]
[176.63075256 25.08525276]
[187.77024841 15.03977680]
[198.90974426 4.99429941]
[210.04924011 -5.05117750]
[221.18875122 -15.09665394]
[216.48838806 -30.69191170]
[219.05938721 -46.71690750]
[228.33554077 -59.96363068]
[242.41351318 -67.80275726]
[258.44323730 -68.70550537]
[273.20480347 -62.54149246]
[284.22839355 -72.71402740]
[285.51727295 -85.52304840]
[294.87680054 -93.76833344]
[306.94573975 -93.45189667]
[318.08523560 -103.49736786]
[323.47076416 -122.94821167]
[342.57492065 -126.07016754]
[353.48117065 -136.36842346]
[364.38739014 -146.66667175]
[364.58975220 -162.46966553]
[375.96542358 -173.44099426]
[391.76538086 -173.07156372]
[402.61581421 -161.58055115]
[402.07937622 -145.78536987]
[390.47427368 -135.05702209]
[374.68563843 -135.76045227]
[363.77941895 -125.46218872]
[352.87316895 -115.16393280]
[353.50372314 -105.01091766]
[348.35049438 -95.98699951]
[338.89538574 -91.17147064]
[328.13070679 -92.35787201]
[316.99121094 -82.31239319]
[312.46734619 -65.34011841]
[294.40093994 -61.69043732]
[283.37734985 -51.51790237]
[288.07446289 -38.48466110]
[287.45422363 -24.60142136]
[281.57717896 -11.96047401]
[271.29849243 -2.47943211]
[258.14379883 2.38964820]
[244.08279419 1.88259196]
[231.23422241 -3.95715690]
[220.09472656 6.08831978]
[208.95523071 16.13379669]
[197.81573486 26.17927361]
[186.67623901 36.22475052]
[175.53672791 46.27022552]
[164.39723206 56.31570435]
[164.10128784 59.06772614]
[162.71786499 61.87088776]
[160.22129822 64.31778717]
[156.73115540 65.99885559]
[152.50906372 66.55195618]
[140.92073059 76.07616425]
[129.33239746 85.60036469]
[132.57556152 102.56346893]
[126.71899414 118.81047821]
[113.39867401 129.80291748]
[96.33553314 132.47013855]
[91.27712250 146.59149170]
[86.21871948 160.71284485]
[81.16030884 174.83419800]
[76.10189819 188.95555115]
[71.04349518 203.07688904]
[65.98508453 217.19824219]
[71.03385925 238.04853821]
[54.63273621 250.60897827]
[50.06295395 264.89593506]
[45.49317551 279.18289185]
[40.92339706 293.46984863]
[36.35361862 307.75680542]
[39.51886368 323.25814819]
[28.27197838 333.02322388]
[23.70219994 347.31018066]
[19.13241959 361.59713745]
[14.56264114 375.88409424]
[9.99286175 390.17105103]
[28.51267815 429.19836426]
[30.05779839 444.11859131]
[31.60291672 459.03878784]
[33.14803696 473.95901489]
[34.77866364 488.87011719]
[36.49475098 503.77160645]
[38.21083450 518.67315674]
[39.92691803 533.57464600]
[41.64300156 548.47613525]
[50.90831757 561.30053711]
[44.67789078 574.82940674]
[46.39397430 589.73095703]
[48.11005783 604.63244629]
[52.43346024 618.99584961]
[59.22798920 632.36877441]
[66.02252197 645.74169922]
[72.81704712 659.11456299]
[79.61157990 672.48748779]
[86.40610504 685.86035156]
[93.20063782 699.23327637]
[99.99516296 712.60614014]
[115.33905029 714.91802979]
[126.36995697 725.83129883]
[128.84628296 741.14947510]
[121.81582642 754.98248291]
[107.98194122 762.01129150]
[92.66403961 759.53302002]
[81.75216675 748.50079346]
[79.44216156 733.15661621]
[86.62226868 719.40069580]
[79.82773590 706.02777100]
[73.03321075 692.65490723]
[66.23867798 679.28198242]
[59.44414902 665.90911865]
[52.64962006 652.53619385]
[45.85509109 639.16333008]
[39.06056213 625.79040527]
[24.26738548 628.27270508]
[22.21006966 643.13098145]
[20.15275574 657.98919678]
[18.09544182 672.84747314]
[23.86686897 687.57843018]
[14.45708752 699.12420654]
[12.39977264 713.98242188]
[10.34245872 728.84069824]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 10]
[4 9]
[13 273]
[14 272]
[15 271]
[17 269]
[18 268]
[19 267]
[20 266]
[23 241]
[24 240]
[25 239]
[27 237]
[28 236]
[29 235]
[30 234]
[31 233]
[33 232]
[34 231]
[35 230]
[36 229]
[39 59]
[40 58]
[41 57]
[42 56]
[43 55]
[45 54]
[46 53]
[47 52]
[73 228]
[74 227]
[75 226]
[76 225]
[77 224]
[79 222]
[80 221]
[81 220]
[82 219]
[83 218]
[88 216]
[89 215]
[90 214]
[91 213]
[92 212]
[93 211]
[94 210]
[97 115]
[98 114]
[100 113]
[101 112]
[103 110]
[104 109]
[116 143]
[117 142]
[118 141]
[120 139]
[121 138]
[123 136]
[124 135]
[126 133]
[127 132]
[145 206]
[146 205]
[147 204]
[148 199]
[149 198]
[150 197]
[151 196]
[152 195]
[153 194]
[154 193]
[160 186]
[161 185]
[164 183]
[165 182]
[167 178]
[168 177]
[169 176]
[242 265]
[243 264]
[244 263]
[245 262]
[246 261]
[247 260]
[248 259]
[249 258]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
