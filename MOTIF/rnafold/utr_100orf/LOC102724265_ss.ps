%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:04:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAAGUCAUGGGAAGACUCACAGGAAGCUGAAAUGCAUAUUGCUAGAUAGAAGAACCAAUCCGAAAAGGCUACUUUCUCUAUGAUUCCAACUACGUGACUUUCUGGAAAAGGCAAAACUAUGGAGAUGGUAAAAAGAGAAAAGGAUUUCUGCUUUCAAAUCCGCUGUUUCCUGAGGCUGGGUGCUGAGUUCAGCUGCCCCUGGAGGAGCAGCAGCUCUG\
) } def
/len { sequence length } bind def

/coor [
[55.87935257 574.58709717]
[41.07276917 576.98815918]
[26.20842361 574.97540283]
[12.57358646 568.72308350]
[1.34904754 558.77270508]
[-6.49313593 545.98602295]
[-10.27382374 531.47027588]
[-9.66560364 516.48260498]
[-4.72114897 502.32095337]
[4.13134670 490.21173096]
[16.12524605 481.20361328]
[30.22186852 476.07669067]
[45.20042801 475.27499390]
[59.76376724 478.86791992]
[72.65068817 486.54431152]
[82.74517059 497.63943481]
[89.17353821 511.19409180]
[89.60187531 496.20022583]
[90.03022003 481.20632935]
[87.08114624 474.43502808]
[90.57324982 466.00183105]
[91.21565247 451.01559448]
[91.85805511 436.02935791]
[92.50045013 421.04312134]
[82.33229828 404.59185791]
[93.42740631 387.75631714]
[93.64160156 372.75784302]
[93.85578918 357.75936890]
[94.06998444 342.76089478]
[94.28417969 327.76242065]
[94.49836731 312.76397705]
[94.71256256 297.76550293]
[81.18675232 285.42272949]
[80.98146057 266.79330444]
[94.69441986 253.71411133]
[94.48022461 238.71563721]
[94.26602936 223.71717834]
[94.05184174 208.71870422]
[81.79199219 200.30239868]
[76.77955627 186.11299133]
[81.13439941 171.52227783]
[93.38730621 162.18565369]
[93.17311096 147.18719482]
[92.95892334 132.18872070]
[79.25417328 125.59885406]
[69.96818542 113.55656433]
[67.07881165 98.62679291]
[52.62753677 94.60675049]
[38.17626572 90.58671570]
[23.72499466 86.56667328]
[9.27372169 82.54663086]
[0.17416269 83.26181793]
[-5.35442591 78.36463165]
[-19.74682045 74.13864136]
[-34.13921356 69.91265869]
[-44.40164566 81.15737915]
[-58.47127914 86.80825806]
[-73.53752899 85.79416656]
[-86.61568451 78.36968994]
[-95.13820648 66.05401611]
[-97.45875549 51.32036209]
[-111.85115051 47.09437180]
[-126.56423187 53.49005890]
[-140.66996765 45.84755707]
[-143.34764099 30.02953911]
[-132.54316711 18.17023849]
[-116.54482269 19.36709213]
[-107.62516022 32.70197678]
[-93.23276520 36.92796707]
[-83.31498718 25.78780937]
[-69.48702240 20.03482819]
[-54.47100067 20.85954666]
[-41.24820709 28.15186691]
[-32.46717453 40.51230621]
[-29.91322708 55.52025986]
[-15.52083206 59.74625015]
[-1.12843752 63.97223663]
[13.29376316 68.09535980]
[27.74503517 72.11540222]
[42.19630814 76.13543701]
[56.64757919 80.15547943]
[71.09885406 84.17552185]
[73.81916809 79.99363708]
[77.13965607 76.27037811]
[80.98419189 73.09109497]
[75.34303284 59.19226837]
[69.70187378 45.29344177]
[64.06071472 31.39461708]
[58.41955566 17.49579239]
[43.21879578 17.42225266]
[29.20520592 11.53262234]
[18.51575470 0.72502935]
[12.78050613 -13.35244751]
[12.87404251 -28.55309486]
[18.78210068 -42.55892563]
[29.60374641 -53.23414993]
[43.68875504 -58.95087814]
[58.88926697 -58.83734512]
[72.88731384 -52.91086578]
[83.54829407 -42.07518768]
[89.24649048 -27.98266983]
[89.11296082 -12.78232098]
[83.16807556 1.20791674]
[72.31838226 11.85463428]
[77.95953369 25.75345802]
[83.60069275 39.65228271]
[89.24185181 53.55110931]
[94.88301086 67.44993591]
[108.14870453 68.07369232]
[120.09066010 73.88380432]
[131.70278931 64.38861084]
[143.31491089 54.89342880]
[146.00369263 48.86514282]
[150.63578796 45.58708954]
[155.39689636 45.29861450]
[167.27543640 36.13889694]
[179.15397644 26.97917747]
[191.03250122 17.81945992]
[193.19610596 2.39361906]
[205.37312317 -6.72642374]
[220.06596375 -4.56868696]
[231.94450378 -13.72840500]
[243.82302856 -22.88812256]
[255.70156860 -32.04784012]
[257.86517334 -47.47368240]
[270.04217529 -56.59372330]
[284.73504639 -54.43598938]
[296.61355591 -63.59570694]
[308.49209595 -72.75542450]
[305.91644287 -86.50051880]
[309.49575806 -99.95058441]
[318.47674561 -110.49668884]
[331.06423950 -116.11861420]
[344.77957153 -115.77176666]
[356.94885254 -109.58078003]
[368.95697021 -118.56993866]
[380.96508789 -127.55910492]
[392.97320557 -136.54827881]
[404.98132324 -145.53742981]
[406.98214722 -161.21456909]
[419.53329468 -170.81895447]
[435.18838501 -168.65249634]
[444.65954590 -156.00051880]
[442.32769775 -140.36920166]
[429.57629395 -131.03233337]
[413.97048950 -133.52931213]
[401.96237183 -124.54015350]
[389.95425415 -115.55098724]
[377.94613647 -106.56182098]
[365.93801880 -97.57266235]
[368.24737549 -81.57646942]
[362.13769531 -66.51235199]
[349.18945312 -56.52928925]
[332.88043213 -54.42824554]
[317.65182495 -60.87689209]
[305.77328491 -51.71717072]
[293.89474487 -42.55745316]
[292.24639893 -27.79877663]
[280.33038330 -18.34030533]
[264.86129761 -20.16930771]
[252.98275757 -11.00959015]
[241.10421753 -1.84987152]
[229.22567749 7.30984640]
[227.57734680 22.06852341]
[215.66130066 31.52699471]
[200.19221497 29.69799232]
[188.31369019 38.85771179]
[176.43515015 48.01742935]
[164.55662537 57.17714691]
[152.81008911 66.50555420]
[141.19796753 76.00074005]
[129.58584595 85.49592590]
[132.63464355 104.54648590]
[124.49494934 122.03832245]
[107.95738983 131.97453308]
[108.17158508 146.97299194]
[108.38577271 161.97146606]
[120.90029907 170.95439148]
[125.67002106 185.41477966]
[121.06481934 199.74154663]
[109.05030823 208.50451660]
[109.26450348 223.50297546]
[109.47869873 238.50144958]
[109.69288635 253.49992371]
[119.66194916 259.96255493]
[125.21939850 270.32742310]
[125.08790588 281.96759033]
[119.41567993 291.99563599]
[109.71102905 297.97967529]
[109.49684143 312.97814941]
[109.28264618 327.97662354]
[109.06845093 342.97509766]
[108.85426331 357.97357178]
[108.64006805 372.97204590]
[108.42588043 387.97052002]
[116.43887329 395.31341553]
[119.03801727 405.64047241]
[115.60009766 415.48718262]
[107.48669434 421.68551636]
[106.84429169 436.67175293]
[106.20188904 451.65798950]
[105.55948639 466.64422607]
[105.02410126 481.63467407]
[104.59575653 496.62857056]
[104.16741943 511.62243652]
[105.77084351 526.53649902]
[109.37657928 541.09667969]
[112.98230743 555.65686035]
[116.58803558 570.21704102]
[128.34474182 581.64996338]
[124.06011200 597.47949219]
[108.14181519 601.42156982]
[96.96522522 589.42089844]
[102.02786255 573.82275391]
[98.42213440 559.26257324]
[94.81639862 544.70239258]
[91.21067047 530.14221191]
[87.81112671 544.75195312]
[80.30622864 557.73950195]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 205]
[18 204]
[19 203]
[21 202]
[22 201]
[23 200]
[24 199]
[26 195]
[27 194]
[28 193]
[29 192]
[30 191]
[31 190]
[32 189]
[35 184]
[36 183]
[37 182]
[38 181]
[42 177]
[43 176]
[44 175]
[47 82]
[48 81]
[49 80]
[50 79]
[51 78]
[53 77]
[54 76]
[55 75]
[61 69]
[62 68]
[85 108]
[86 107]
[87 106]
[88 105]
[89 104]
[110 172]
[111 171]
[112 170]
[115 169]
[116 168]
[117 167]
[118 166]
[121 163]
[122 162]
[123 161]
[124 160]
[127 157]
[128 156]
[129 155]
[135 150]
[136 149]
[137 148]
[138 147]
[139 146]
[206 217]
[207 216]
[208 215]
[209 214]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
