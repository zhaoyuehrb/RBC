%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:22:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGGCUGGCAAAAAGGAGACCAGACAGGAGGCGUCUGUAGAGAUAUCAUGAACUUCAACUUAGCUUUGUUUUCCAGAGACUGGAGCUAAACUGGGCUUUCAACAUCAUCAUGAAGUUUAUCCUCCUCUGGGCUCUCUUGAAUCUGACUGUUGCUUUGGCCUUUAAUCCAGAUUACACAGUCAGCUCCACUCCCCCUUACUUGGUCUAUU\
) } def
/len { sequence length } bind def

/coor [
[96.08171844 246.76037598]
[105.99047089 234.14308167]
[105.54174042 219.14979553]
[105.09300995 204.15650940]
[104.64427948 189.16322327]
[104.19554138 174.16993713]
[103.74681091 159.17665100]
[103.29808044 144.18336487]
[85.43361664 139.96163940]
[71.51992798 129.16072083]
[63.69473267 114.21350861]
[62.83239746 98.10685730]
[68.47968292 83.79236603]
[56.89342880 74.26563263]
[45.30717468 64.73889160]
[33.64998245 55.29908752]
[21.92251205 45.94673920]
[10.19503975 36.59439468]
[-5.41849709 34.03939056]
[-10.54495144 20.05480194]
[-22.27242279 10.70245552]
[-33.99989700 1.35010874]
[-45.72736740 -8.00223827]
[-57.45484161 -17.35458565]
[-63.92587280 -18.71612740]
[-68.10940552 -22.56400108]
[-69.38774109 -27.16635132]
[-80.83018494 -36.86534500]
[-92.27262878 -46.56433868]
[-103.71507263 -56.26333237]
[-115.15751648 -65.96232605]
[-118.18052673 -50.61243820]
[-129.45988464 -36.90281296]
[-143.16307068 -30.80176353]
[-156.86625671 -24.70071411]
[-170.56944275 -18.59966469]
[-179.76560974 -5.02165651]
[-196.10099792 -6.46650410]
[-202.77111816 -21.44787025]
[-192.91435242 -34.55421066]
[-176.67048645 -32.30284500]
[-162.96730042 -38.40389633]
[-149.26411438 -44.50494385]
[-135.56094360 -50.60599518]
[-133.61979675 -57.85043716]
[-144.22662354 -68.45681763]
[-129.73751831 -72.33932495]
[-127.79637146 -79.58377075]
[-136.61314392 -91.71902466]
[-145.42993164 -103.85427856]
[-154.24670410 -115.98953247]
[-163.06347656 -128.12478638]
[-171.88026428 -140.26004028]
[-180.69703674 -152.39529419]
[-189.51382446 -164.53054810]
[-198.33059692 -176.66580200]
[-207.14736938 -188.80107117]
[-228.80363464 -184.88558960]
[-249.40779114 -192.41557312]
[-263.34637451 -209.26387024]
[-266.86013794 -230.77499390]
[-259.05780029 -251.05148315]
[-269.42376709 -261.89340210]
[-279.78970337 -272.73532104]
[-290.15563965 -283.57727051]
[-300.52157593 -294.41918945]
[-315.65084839 -299.04690552]
[-318.85369873 -313.59307861]
[-329.21963501 -324.43499756]
[-339.58557129 -335.27691650]
[-349.95150757 -346.11883545]
[-360.55810547 -356.72546387]
[-371.40005493 -367.09140015]
[-382.24197388 -377.45733643]
[-393.08389282 -387.82327271]
[-403.92581177 -398.18920898]
[-419.55264282 -404.76477051]
[-417.55999756 -421.60122681]
[-400.82992554 -424.34722900]
[-393.55987549 -409.03112793]
[-382.71795654 -398.66519165]
[-371.87603760 -388.29925537]
[-361.03408813 -377.93331909]
[-350.19216919 -367.56738281]
[-346.67715454 -367.28082275]
[-343.12640381 -365.27703857]
[-340.34570312 -361.55776978]
[-339.10958862 -356.48480225]
[-328.74365234 -345.64285278]
[-318.37771606 -334.80093384]
[-308.01177979 -323.95901489]
[-293.62396240 -320.10678101]
[-289.67965698 -304.78512573]
[-279.31372070 -293.94320679]
[-268.94778442 -283.10128784]
[-258.58181763 -272.25933838]
[-248.21589661 -261.41741943]
[-240.57575989 -265.41934204]
[-232.26370239 -267.75793457]
[-223.63775635 -268.32812500]
[-215.07041931 -267.10116577]
[-206.93247986 -264.12600708]
[-199.57699585 -259.52731323]
[-193.32403564 -253.50030518]
[-188.44664001 -246.30245972]
[-185.15901184 -238.24247742]
[-183.60704041 -229.66708374]
[-183.86183167 -220.94613647]
[-185.91653442 -212.45657349]
[-189.68635559 -204.56622314]
[-195.01211548 -197.61784363]
[-186.19534302 -185.48258972]
[-177.37857056 -173.34733582]
[-168.56178284 -161.21208191]
[-159.74501038 -149.07682800]
[-150.92822266 -136.94157410]
[-142.11145020 -124.80631256]
[-133.29467773 -112.67105865]
[-124.47789001 -100.53580475]
[-115.66110992 -88.40055084]
[-105.45851898 -77.40476990]
[-94.01607513 -67.70577240]
[-82.57363129 -58.00678253]
[-71.13118744 -48.30778885]
[-59.68874741 -38.60879517]
[-48.10249329 -29.08205795]
[-36.37501907 -19.72970963]
[-24.64754868 -10.37736320]
[-12.92007637 -1.02501643]
[-1.19260418 8.32733059]
[13.58210564 10.21339035]
[19.54738617 24.86692238]
[31.27485847 34.21926880]
[43.00233078 43.57161713]
[50.19236755 45.28445053]
[54.83391190 53.15263748]
[66.42016602 62.67937469]
[78.00641632 72.20611572]
[93.35385895 63.38246918]
[111.90583801 62.87390137]
[129.24580383 71.60730743]
[140.86866760 88.21591949]
[143.34077454 109.19911194]
[158.13813782 111.65637970]
[172.93550110 114.11364746]
[187.73284912 116.57091522]
[202.53021240 119.02818298]
[217.32757568 121.48545074]
[232.12493896 123.94271851]
[246.92228699 126.39998627]
[261.73760986 128.74650574]
[276.57006836 130.98214722]
[291.36929321 125.38806915]
[302.80123901 134.93585205]
[317.63369751 137.17147827]
[332.46615601 139.40711975]
[347.29861450 141.64274597]
[362.13107300 143.87838745]
[372.92459106 132.73030090]
[388.21517944 130.08874512]
[402.12329102 136.96945190]
[409.30096436 150.72663879]
[406.98828125 166.07040405]
[396.07446289 177.10075378]
[380.75613403 179.57627869]
[366.92346191 172.54510498]
[359.89544678 158.71084595]
[345.06298828 156.47521973]
[330.23052979 154.23957825]
[315.39807129 152.00395203]
[300.56561279 149.76831055]
[286.82730103 155.52229309]
[274.33444214 145.81460571]
[259.50198364 143.57896423]
[252.41880798 145.69062805]
[244.46502686 141.19734192]
[229.66766357 138.74008179]
[214.87030029 136.28280640]
[200.07295227 133.82554626]
[185.27558899 131.36827087]
[170.47822571 128.91101074]
[155.68086243 126.45373535]
[140.88351440 123.99646759]
[135.23547363 128.93101501]
[147.04330444 138.18170166]
[158.85113525 147.43238831]
[170.65895081 156.68307495]
[185.39717102 159.47326660]
[196.41113281 169.65621948]
[200.34657288 184.13075256]
[196.00498962 198.48869324]
[184.70857239 208.35739136]
[169.89761353 210.73133850]
[156.08274841 204.88757324]
[147.47125244 192.60580444]
[146.68528748 177.62823486]
[139.10333252 164.68551636]
[131.52136230 151.74279785]
[123.93939972 138.80009460]
[118.29136658 143.73463440]
[118.74009705 158.72792053]
[119.18882751 173.72120667]
[119.63756561 188.71449280]
[120.08629608 203.70777893]
[120.53502655 218.70106506]
[120.98375702 233.69435120]
[131.62934875 245.69647217]
[128.74125671 261.47744751]
[114.53500366 268.93142700]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 206]
[3 205]
[4 204]
[5 203]
[6 202]
[7 201]
[8 200]
[13 138]
[14 137]
[15 136]
[16 134]
[17 133]
[18 132]
[20 130]
[21 129]
[22 128]
[23 127]
[24 126]
[27 125]
[28 124]
[29 123]
[30 122]
[31 121]
[33 44]
[34 43]
[35 42]
[36 41]
[48 120]
[49 119]
[50 118]
[51 117]
[52 116]
[53 115]
[54 114]
[55 113]
[56 112]
[57 111]
[62 97]
[63 96]
[64 95]
[65 94]
[66 93]
[68 91]
[69 90]
[70 89]
[71 88]
[72 84]
[73 83]
[74 82]
[75 81]
[76 80]
[143 183]
[144 182]
[145 181]
[146 180]
[147 179]
[148 178]
[149 177]
[150 176]
[151 174]
[152 173]
[154 171]
[155 170]
[156 169]
[157 168]
[158 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
