%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:52:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUUUCCGCCAUCUUUCCGCGCCGGUGAGUAGCACUCUCUGAGAGCUCCAAUUUCAUCCGUCUGCCAUCGGCGCCAUCCUGCAAUCUAAGCCACAAUGGUGCGCAUGAAUGUCCUGGCAGAUGCUCUCAAGAGUAUCAACAAUGCCGAAAAGAGAGGCAAACGCCAGGUGCUUAUUAGGCCGUGCUCCAAAGUCA\
) } def
/len { sequence length } bind def

/coor [
[191.22753906 211.59753418]
[182.71078491 199.24986267]
[178.31488037 184.90846252]
[178.44923401 169.90905762]
[183.10133362 155.64869690]
[191.83790588 143.45556641]
[203.84523010 134.46533203]
[218.00569153 129.51519775]
[203.25723267 126.77970886]
[188.50877380 124.04421234]
[173.76031494 121.30872345]
[159.01185608 118.57322693]
[144.26339722 115.83773804]
[135.57618713 130.73136902]
[122.10347748 141.49118042]
[105.65753174 146.66984558]
[88.45056915 145.57073975]
[72.79716492 138.34172058]
[60.80293274 125.95520020]
[54.08126831 110.07732391]
[39.10462952 110.91411591]
[24.12798691 111.75090790]
[9.15134621 112.58769989]
[-5.82529497 113.42449188]
[-20.80193710 114.26127625]
[-35.77857590 115.09806824]
[-50.75521851 115.93486023]
[-65.73185730 116.77165222]
[-74.13691711 120.37847900]
[-80.95362854 117.50044250]
[-95.94171143 118.09830475]
[-110.92978668 118.69616699]
[-125.91786957 119.29402924]
[-134.37937927 122.76635742]
[-141.14932251 119.77999115]
[-156.14503479 120.13876343]
[-163.11654663 132.03704834]
[-174.96435547 138.87997437]
[-188.53775024 138.97137451]
[-200.28764343 132.39437866]
[-207.19470215 120.96173859]
[-222.19422913 121.08133698]
[-237.19374084 121.20094299]
[-252.19326782 121.32054138]
[-267.19277954 121.44014740]
[-277.00842285 133.61338806]
[-292.36230469 136.57852173]
[-306.00482178 128.93551636]
[-311.49441528 114.29315948]
[-306.23901367 99.56512451]
[-292.72012329 91.70554352]
[-277.32089233 94.42546082]
[-267.31240845 106.44062805]
[-252.31286621 106.32102203]
[-237.31335449 106.20141602]
[-222.31382751 106.08181763]
[-207.31430054 105.96221161]
[-198.20928955 92.30928040]
[-182.60565186 86.71370697]
[-166.58126831 91.56533813]
[-156.50381470 105.14305878]
[-141.50810242 104.78427887]
[-126.51573181 104.30594635]
[-111.52764893 103.70808411]
[-96.53956604 103.11022186]
[-81.55149078 102.51235962]
[-66.56864929 101.79501343]
[-51.59201050 100.95822144]
[-36.61536789 100.12142944]
[-21.63872719 99.28463745]
[-6.66208696 98.44784546]
[8.31455421 97.61105347]
[23.29119492 96.77426147]
[38.26783752 95.93746948]
[53.24447632 95.10067749]
[54.32036591 88.88904572]
[56.21767044 82.87720490]
[58.90227509 77.17327881]
[62.32590485 71.87981415]
[66.42699432 67.09201813]
[71.13179016 62.89597321]
[76.35570526 59.36713791]
[70.97646332 45.36486053]
[56.13161469 40.44911957]
[47.96361542 27.11428642]
[50.32914734 11.65665722]
[62.11127472 1.37485445]
[77.74684143 1.12362957]
[89.85321045 11.02160358]
[92.71411896 26.39525604]
[84.97874451 39.98561859]
[90.35798645 53.98789597]
[107.18990326 53.54154968]
[123.09949493 59.05496979]
[136.04583740 69.82087708]
[144.36817932 84.45821381]
[146.99888611 101.08927155]
[161.74734497 103.82476807]
[176.49580383 106.56026459]
[191.24427795 109.29575348]
[205.99273682 112.03125000]
[220.74119568 114.76673889]
[230.78251648 111.39862823]
[239.16600037 115.64888000]
[254.10833740 114.33493042]
[269.05068970 113.02097321]
[283.99301147 111.70701599]
[298.93536377 110.39305878]
[295.84655762 97.71396637]
[299.40710449 85.56890869]
[308.28390503 77.10881805]
[319.82113647 74.32223511]
[330.82550049 77.57640076]
[338.44891357 85.61959839]
[353.15188599 82.64926147]
[367.85485840 79.67893219]
[382.55780029 76.70860291]
[397.26077271 73.73826599]
[411.96374512 70.76793671]
[420.27175903 47.98412323]
[449.43051147 40.69802856]
[461.96038818 32.45169067]
[474.49026489 24.20535660]
[487.02014160 15.95902061]
[499.55001831 7.71268559]
[512.07989502 -0.53364980]
[524.60980225 -8.77998543]
[531.47778320 -23.67168617]
[547.83087158 -24.90003395]
[556.84637451 -11.20140743]
[549.24993896 3.33221912]
[532.85614014 3.74989724]
[520.32623291 11.99623299]
[507.79635620 20.24256706]
[495.26647949 28.48890305]
[482.73660278 36.73523712]
[470.20672607 44.98157501]
[457.67681885 53.22790909]
[459.33740234 60.54176331]
[472.22290039 52.86296844]
[483.50769043 62.74494934]
[477.59655762 76.53111267]
[462.65856934 75.16947937]
[464.31915283 82.48332977]
[479.18154907 84.51037598]
[494.04394531 86.53742218]
[508.90634155 88.56446075]
[518.84594727 76.76580048]
[533.59320068 72.23571777]
[548.44238281 76.41973877]
[558.65509033 87.98275757]
[560.97259521 103.23506927]
[554.65527344 117.30970001]
[541.71905518 125.71549988]
[526.29174805 125.77020264]
[513.29626465 117.45635223]
[506.87930298 103.42686462]
[492.01690674 101.39982605]
[477.15451050 99.37277985]
[462.29208374 97.34573364]
[447.19332886 104.29081726]
[432.13980103 103.31259918]
[420.69168091 96.04777527]
[414.93408203 85.47090149]
[400.23110962 88.44123077]
[385.52813721 91.41156769]
[370.82519531 94.38189697]
[356.12222290 97.35222626]
[341.41925049 100.32255554]
[337.45629883 113.05548859]
[325.78543091 121.95624542]
[335.09765625 133.71560669]
[344.40985107 145.47497559]
[353.72207642 157.23432922]
[368.29531860 165.89788818]
[364.00460815 182.29991150]
[347.05581665 182.71740723]
[341.96270752 166.54655457]
[332.65048218 154.78718567]
[323.33828735 143.02783203]
[314.02606201 131.26846313]
[300.24932861 125.33540344]
[285.30697632 126.64936066]
[270.36462402 127.96331024]
[255.42228699 129.27726746]
[240.47994995 130.59121704]
[254.10209656 136.87113953]
[265.19573975 146.96722412]
[272.72766113 159.93913269]
[275.99633789 174.57865906]
[274.69729614 189.52230835]
[268.95156860 203.37823486]
[259.29428101 214.85589600]
[246.62493896 222.88630676]
[232.12350464 226.72149658]
[217.14067078 226.00425720]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 102]
[9 101]
[10 100]
[11 99]
[12 98]
[13 97]
[20 75]
[21 74]
[22 73]
[23 72]
[24 71]
[25 70]
[26 69]
[27 68]
[28 67]
[30 66]
[31 65]
[32 64]
[33 63]
[35 62]
[36 61]
[41 57]
[42 56]
[43 55]
[44 54]
[45 53]
[82 92]
[83 91]
[104 186]
[105 185]
[106 184]
[107 183]
[108 182]
[114 169]
[115 168]
[116 167]
[117 166]
[118 165]
[119 164]
[121 138]
[122 137]
[123 136]
[124 135]
[125 134]
[126 133]
[127 132]
[144 160]
[145 159]
[146 158]
[147 157]
[171 181]
[172 180]
[173 179]
[174 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
