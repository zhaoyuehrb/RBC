%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:08:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCUGUGACAAGCAGGGAACAAGGCAACGGACGGCGCAACCCAGCCCCGGCUGACGGACGCUGGCGACUCAGACAUGGACAGUAGCUGCCACAACGCGACUACCAAAAUGUUAGCGACUGCUCCAGCUCGGGGCAACAUGAUGAGCACGUCCAAACCCUUGGCUUUCUCCAUUG\
) } def
/len { sequence length } bind def

/coor [
[60.45869446 846.96093750]
[53.41231918 846.68768311]
[48.64920425 860.91131592]
[43.88608551 875.13500977]
[39.12297058 889.35864258]
[34.35985184 903.58233643]
[40.19889450 918.52508545]
[32.03242874 932.33404541]
[16.12507057 934.41625977]
[4.67958212 923.17431641]
[6.47596455 907.23217773]
[20.13618660 898.81921387]
[24.89930153 884.59552002]
[29.66241837 870.37188721]
[34.42553329 856.14819336]
[39.18865204 841.92456055]
[23.15068436 824.36285400]
[20.60685921 800.60180664]
[32.67819595 779.84613037]
[54.79763794 770.21667480]
[56.41019440 755.30358887]
[58.02274704 740.39050293]
[59.63529968 725.47741699]
[61.24785614 710.56439209]
[49.14357758 701.88378906]
[42.96839523 688.21917725]
[44.47199631 673.19897461]
[53.35020447 660.86712646]
[67.29994202 654.59399414]
[68.91249847 639.68096924]
[70.52504730 624.76788330]
[72.13760376 609.85479736]
[73.75016022 594.94171143]
[75.22879028 580.01477051]
[76.57337952 565.07519531]
[70.00809479 551.70556641]
[78.95127869 538.65454102]
[80.29586792 523.71490479]
[65.56673431 515.49542236]
[55.86679840 501.62875366]
[53.17867661 484.86511230]
[58.08842468 468.55508423]
[69.65862274 455.97979736]
[85.60692596 449.69107056]
[86.41437531 434.71279907]
[87.22182465 419.73455811]
[88.02927399 404.75628662]
[88.83672333 389.77804565]
[89.64416504 374.79980469]
[90.31713867 359.81491089]
[90.85558319 344.82455444]
[91.39402771 329.83422852]
[91.93247223 314.84390259]
[81.62663269 298.50601196]
[92.50000000 281.55758667]
[92.50000000 266.55758667]
[92.50000000 251.55760193]
[84.76270294 238.83032227]
[92.50000000 225.03015137]
[92.50000000 210.03015137]
[92.50000000 195.03015137]
[92.50000000 180.03015137]
[92.50000000 165.03015137]
[92.50000000 150.03015137]
[92.50000000 135.03015137]
[74.31282043 128.55976868]
[61.03911591 112.76981354]
[57.32305527 91.13322449]
[65.48072815 69.32948303]
[58.25442123 56.18488312]
[51.02811813 43.04028320]
[36.72821426 35.01253128]
[36.80108261 18.61354446]
[51.17176819 10.71319485]
[65.05693817 19.43868446]
[64.17271423 35.81397629]
[71.39902496 48.95857620]
[78.62532806 62.10317612]
[86.02764893 60.89668274]
[91.33997345 46.86888504]
[100.83229828 58.48369980]
[108.23461914 57.27721024]
[110.91297150 42.51826477]
[113.59132385 27.75932121]
[116.26967621 13.00037670]
[111.12083435 -1.95956933]
[121.00633240 -13.10076046]
[123.68469238 -27.85970497]
[126.36304474 -42.61864853]
[117.15785217 -55.46544266]
[119.81525421 -71.04471588]
[132.75865173 -80.11356354]
[148.30895996 -77.29159546]
[157.24046326 -64.25304413]
[154.25424194 -48.73344040]
[141.12197876 -39.94029617]
[138.44363403 -25.18135071]
[135.76527405 -10.42240715]
[141.10569763 3.48188066]
[131.02862549 15.67873001]
[128.35026550 30.43767357]
[125.67191315 45.19661713]
[122.99356079 59.95556259]
[134.03179932 71.02236938]
[140.43060303 84.72867584]
[141.73368835 99.29277039]
[138.12397766 112.94186401]
[130.36268616 124.12757111]
[119.66043854 131.70137024]
[107.50000000 135.03015137]
[107.50000000 150.03015137]
[107.50000000 165.03015137]
[107.50000000 180.03015137]
[107.50000000 195.03015137]
[107.50000000 210.03015137]
[107.50000000 225.03015137]
[115.23729706 238.83032227]
[107.50000000 251.55760193]
[107.50000000 266.55758667]
[107.50000000 281.55758667]
[115.65203857 288.82199097]
[118.38566589 299.16598511]
[115.02756500 309.09246826]
[106.92279816 315.38235474]
[106.38436127 330.37268066]
[105.84591675 345.36300659]
[105.30747223 360.35333252]
[108.13403320 369.07546997]
[104.62242126 375.60723877]
[103.81497192 390.58551025]
[103.00752258 405.56375122]
[102.20007324 420.54199219]
[101.39263153 435.52026367]
[100.58518219 450.49850464]
[112.62176514 456.03686523]
[122.02981567 465.32098389]
[127.69977570 477.22528076]
[128.97340393 490.31713867]
[125.72011566 503.02911377]
[118.34999084 513.84674072]
[107.76222992 521.48889160]
[95.23548889 525.05950928]
[93.89089203 539.99908447]
[100.36000824 554.43731689]
[91.51299286 566.41973877]
[90.16840363 581.35937500]
[92.52135468 590.22100830]
[88.66323090 596.55426025]
[87.05067444 611.46734619]
[85.43811798 626.38043213]
[83.82556915 641.29351807]
[82.21301270 656.20654297]
[94.49936676 665.31658936]
[100.53630066 679.26123047]
[98.79441833 694.25561523]
[89.84098816 706.28442383]
[76.16092682 712.17694092]
[74.54837036 727.08996582]
[72.93582153 742.00305176]
[71.32326508 756.91613770]
[69.71070862 771.82922363]
[76.31948853 774.63189697]
[82.29177856 778.59948730]
[87.42485809 783.59350586]
[91.54518890 789.44073486]
[94.51427460 795.93927002]
[96.23329926 802.86541748]
[96.64645386 809.98120117]
[95.74269867 817.04290771]
[93.55606079 823.80926514]
[90.16436005 830.04949951]
[85.68643951 835.55151367]
[80.27800751 840.12896729]
[74.12620544 843.62756348]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 16]
[3 15]
[4 14]
[5 13]
[6 12]
[20 161]
[21 160]
[22 159]
[23 158]
[24 157]
[29 152]
[30 151]
[31 150]
[32 149]
[33 148]
[34 146]
[35 145]
[37 143]
[38 142]
[44 134]
[45 133]
[46 132]
[47 131]
[48 130]
[49 129]
[50 127]
[51 126]
[52 125]
[53 124]
[55 120]
[56 119]
[57 118]
[59 116]
[60 115]
[61 114]
[62 113]
[63 112]
[64 111]
[65 110]
[69 78]
[70 77]
[71 76]
[82 103]
[83 102]
[84 101]
[85 100]
[87 98]
[88 97]
[89 96]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
