%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:13:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGUGAACAUUCCACACAGGGAGCUCUACCAUCAAGUGAGGGGAAUGCCCACCAUCGCUAUCAUCACCAUCACCACUACUUCUGCCACAGCCAUCACAUUCACCUCUACCUCCACCAUCACCAUCACUACUCAAGUUGGAGAAAUAGAGGCCAGGGGAAGGGGAUAAAGGGAGGGCAAAGAAAGGUAAUUCCAAAGGAACAUGAGCACCAAUAAUGCUUUAAGAGUGUUUUGGAAAUCAAGAGAAUGGAAUAUG\
AAAACAUCAACAUUUGAUUCAGAUGAGGAUAUUCUACUUUUACCCA\
) } def
/len { sequence length } bind def

/coor [
[90.90115356 187.50459290]
[87.95567322 202.21255493]
[89.33649445 211.19131470]
[84.90229034 217.05783081]
[81.80397034 231.73435974]
[78.70565033 246.41088867]
[88.49196625 258.60769653]
[88.09708405 274.24029541]
[77.70745087 285.92742920]
[62.22873688 288.15084839]
[48.96952057 279.86065674]
[44.19039154 264.97125244]
[50.14791107 250.51298523]
[64.02912140 243.31256104]
[67.12744141 228.63603210]
[70.22576904 213.95951843]
[73.24771118 199.26707458]
[76.19319153 184.55911255]
[69.69998169 168.23323059]
[82.03484344 154.53053284]
[84.82717133 139.79272461]
[87.61949158 125.05492401]
[74.61721802 111.69361877]
[72.91116333 93.12825012]
[59.89485168 85.67333984]
[46.87854385 78.21842957]
[33.86223221 70.76351929]
[20.84592438 63.30860519]
[5.02537727 63.16407394]
[-2.17337132 50.12462616]
[-15.18968105 42.66971588]
[-24.17220306 51.34484482]
[-36.29864120 56.33251953]
[-50.03446198 56.51142883]
[-63.45749283 51.40285873]
[-74.52674866 41.29787827]
[-87.13787842 49.41942215]
[-99.74900818 57.54096603]
[-112.36013794 65.66250610]
[-124.97126007 73.78404999]
[-137.53997803 81.97107697]
[-150.06593323 90.22336578]
[-162.54881287 98.54069519]
[-174.98825073 106.92283630]
[-179.45567322 122.33132935]
[-194.34222412 128.31214905]
[-208.22821045 120.27730560]
[-210.46151733 104.39045715]
[-199.32891846 92.83863068]
[-183.37039185 94.48339844]
[-170.93095398 86.10124969]
[-167.15852356 79.78880310]
[-158.31822205 77.69740295]
[-145.79226685 69.44511414]
[-141.95437622 63.17224503]
[-133.09280396 61.17292023]
[-120.48167419 53.05137634]
[-107.87055206 44.92983627]
[-95.25942230 36.80829239]
[-82.64829254 28.68675232]
[-81.48274231 21.27787209]
[-96.44371796 22.35910034]
[-110.45474243 27.71552467]
[-123.81708527 20.90026474]
[-127.70741272 6.41353369]
[-119.55687714 -6.17887688]
[-104.74739838 -8.56201935]
[-93.05798340 0.83752978]
[-79.15163422 6.46011448]
[-77.98608398 -0.94876438]
[-87.49444580 -12.55010605]
[-97.00279999 -24.15144730]
[-104.82247162 -28.77503586]
[-106.54897308 -35.92328262]
[-115.93613434 -47.62290573]
[-123.70728302 -52.32759094]
[-125.35932922 -59.49341202]
[-134.62428284 -71.29004669]
[-149.23307800 -77.36405182]
[-151.00930786 -92.15236664]
[-160.27426147 -103.94900513]
[-169.53921509 -115.74564362]
[-178.80415344 -127.54228210]
[-188.06910706 -139.33892822]
[-197.33406067 -151.13555908]
[-194.45381165 -136.41468811]
[-196.14770508 -121.51063538]
[-202.25798035 -107.81156158]
[-212.21549988 -96.59338379]
[-225.09286499 -88.90094757]
[-239.69067383 -85.45072937]
[-254.64929199 -86.56406403]
[-268.57550049 -92.13727570]
[-280.17224121 -101.65126801]
[-288.35934448 -114.21991730]
[-292.37432861 -128.67259216]
[-291.84323120 -143.66319275]
[-286.81552124 -157.79548645]
[-277.75942993 -169.75323486]
[-265.51849365 -178.42266846]
[-251.23277283 -182.99635315]
[-236.23286438 -183.04829407]
[-221.91583252 -178.57363892]
[-209.61459351 -169.98863220]
[-216.65972900 -183.23121643]
[-223.70486450 -196.47380066]
[-230.75000000 -209.71640015]
[-237.79513550 -222.95898438]
[-244.84027100 -236.20156860]
[-262.40588379 -246.15594482]
[-260.77389526 -265.45120239]
[-268.09301758 -278.54434204]
[-275.41210938 -291.63751221]
[-282.73123169 -304.73065186]
[-290.05032349 -317.82382202]
[-290.86773682 -302.84609985]
[-298.49639893 -289.93084717]
[-311.21908569 -281.98522949]
[-326.17202759 -280.79776001]
[-339.98931885 -286.63571167]
[-349.56079102 -298.18505859]
[-352.73196411 -312.84600830]
[-348.78894043 -327.31848145]
[-338.61935425 -338.34478760]
[-324.51232910 -343.44296265]
[-309.64324951 -341.46539307]
[-297.35882568 -332.85690308]
[-303.13510132 -346.70010376]
[-308.91134644 -360.54333496]
[-323.14260864 -367.94946289]
[-326.08377075 -383.72061157]
[-315.47863770 -395.75851440]
[-299.46255493 -394.82867432]
[-290.32168579 -381.64443970]
[-295.06814575 -366.31961060]
[-289.29187012 -352.47637939]
[-283.51559448 -338.63317871]
[-276.95718384 -325.14291382]
[-269.63806152 -312.04974365]
[-262.31896973 -298.95660400]
[-254.99986267 -285.86343384]
[-247.68075562 -272.77029419]
[-237.69531250 -270.90377808]
[-230.20983887 -263.71655273]
[-227.84089661 -253.38847351]
[-231.59768677 -243.24670410]
[-224.55255127 -230.00411987]
[-217.50741577 -216.76153564]
[-210.46228027 -203.51893616]
[-203.41714478 -190.27635193]
[-196.37200928 -177.03376770]
[-187.54396057 -171.78601074]
[-185.53741455 -160.40051270]
[-176.27246094 -148.60386658]
[-167.00752258 -136.80723572]
[-157.74256897 -125.01059723]
[-148.47761536 -113.21395111]
[-139.21267700 -101.41731262]
[-125.26655579 -96.18708801]
[-122.82764435 -80.55500031]
[-113.56269073 -68.75836182]
[-104.23651123 -57.01007080]
[-94.84934998 -45.31044388]
[-85.40145874 -33.65980530]
[-75.89310455 -22.05846405]
[-66.38474274 -10.45712280]
[-42.14673233 -18.57773018]
[-19.21987152 -10.79259109]
[-6.45590448 8.17637062]
[-7.73477030 29.65340424]
[5.28153896 37.10831451]
[20.17107201 36.71961975]
[28.30083466 50.29229736]
[41.31714249 57.74720764]
[54.33345413 65.20211792]
[67.34976196 72.65702820]
[80.36607361 80.11193848]
[91.43888092 73.39674377]
[104.34991455 72.39376068]
[116.32695007 77.31835938]
[124.79827881 87.11312866]
[127.94495392 99.67494965]
[142.44055176 103.53210449]
[156.93614197 107.38926697]
[171.43174744 111.24642181]
[185.92733765 115.10358429]
[200.42294312 118.96074677]
[214.91853333 122.81790161]
[245.70030212 94.67229462]
[260.58358765 92.80467987]
[275.46685791 90.93706512]
[290.35015869 89.06945801]
[305.23342896 87.20184326]
[320.11669922 85.33422852]
[322.92849731 72.24351501]
[329.61398315 60.66899872]
[339.51467896 51.72281647]
[351.66400146 46.25958633]
[364.88150024 44.79481125]
[377.88766479 47.45623779]
[389.42779541 53.97287369]
[398.39297485 63.70248413]
[403.92663574 75.69488525]
[418.84552002 74.13729858]
[433.76443481 72.57971954]
[441.58959961 59.31045914]
[455.56430054 53.26390457]
[470.24615479 56.56652451]
[480.05065918 67.74729919]
[494.96957397 66.18971252]
[509.88848877 64.63213348]
[524.80737305 63.07455444]
[532.97039795 59.08831024]
[539.88946533 61.57919693]
[554.82379150 60.17689133]
[569.75811768 58.77458954]
[584.69238281 57.37228394]
[599.62670898 55.96998215]
[614.56103516 54.56767654]
[629.49530029 53.16537476]
[644.69982910 45.66476440]
[656.11633301 58.19869995]
[647.23266602 72.63878632]
[630.89764404 68.09967804]
[615.96331787 69.50198364]
[601.02899170 70.90428925]
[586.09472656 72.30659485]
[571.16040039 73.70889282]
[556.22607422 75.11119843]
[541.29180908 76.51350403]
[526.36499023 77.99346924]
[511.44607544 79.55104828]
[496.52716064 81.10862732]
[481.60824585 82.66620636]
[474.32461548 95.63103485]
[460.64154053 101.89504242]
[445.71923828 98.86542511]
[435.32202148 87.49863434]
[420.40310669 89.05621338]
[405.48419189 90.61379242]
[401.09869385 106.72005463]
[390.82421875 119.92280579]
[376.22433472 128.16645813]
[359.53887939 130.15368652]
[343.34024048 125.54949188]
[330.13671875 115.03725433]
[321.98431396 100.21750641]
[307.10104370 102.08512115]
[292.21777344 103.95273590]
[277.33447266 105.82035065]
[262.45120239 107.68796539]
[247.56791687 109.55557251]
[244.57214355 116.43127441]
[238.58056641 130.18267822]
[235.58477783 137.05838013]
[244.35099792 149.23022461]
[253.11720276 161.40205383]
[263.87515259 162.51362610]
[272.09326172 169.20269775]
[275.23284912 179.09368896]
[272.49465942 188.87608337]
[281.00573730 201.22764587]
[289.51684570 213.57922363]
[304.80484009 216.56503296]
[313.26034546 229.21252441]
[310.31961060 243.76889038]
[318.83068848 256.12045288]
[327.34179688 268.47204590]
[335.85287476 280.82360840]
[344.36398315 293.17517090]
[352.87506104 305.52673340]
[366.84106445 315.13858032]
[361.47106934 331.21960449]
[344.53192139 330.51110840]
[340.52349854 314.03784180]
[332.01239014 301.68627930]
[323.50131226 289.33468628]
[314.99020386 276.98312378]
[306.47912598 264.63156128]
[297.96804810 252.27998352]
[283.31869507 249.84439087]
[274.51126099 237.43939209]
[277.16525269 222.09031677]
[268.65417480 209.73873901]
[260.14309692 197.38716125]
[242.11283875 190.32458496]
[240.94535828 170.16825867]
[232.17915344 157.99642944]
[223.41294861 145.82458496]
[211.06137085 137.31349182]
[196.56578064 133.45634460]
[182.07017517 129.59918213]
[167.57458496 125.74201965]
[153.07899475 121.88486481]
[138.58338928 118.02770233]
[124.08779907 114.17053986]
[114.88619995 123.65221405]
[102.35729980 127.84725189]
[99.56497955 142.58505249]
[96.77265167 157.32286072]
[103.36677551 168.37066650]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 18]
[2 17]
[4 16]
[5 15]
[6 14]
[20 300]
[21 299]
[22 298]
[24 177]
[25 176]
[26 175]
[27 174]
[28 173]
[30 171]
[31 170]
[36 60]
[37 59]
[38 58]
[39 57]
[40 56]
[41 54]
[42 53]
[43 51]
[44 50]
[70 166]
[71 165]
[72 164]
[74 163]
[75 162]
[77 161]
[78 160]
[80 158]
[81 157]
[82 156]
[83 155]
[84 154]
[85 153]
[104 151]
[105 150]
[106 149]
[107 148]
[108 147]
[109 146]
[111 142]
[112 141]
[113 140]
[114 139]
[115 138]
[127 137]
[128 136]
[129 135]
[182 296]
[183 295]
[184 294]
[185 293]
[186 292]
[187 291]
[188 290]
[189 252]
[190 251]
[191 250]
[192 249]
[193 248]
[194 247]
[203 240]
[204 239]
[205 238]
[209 234]
[210 233]
[211 232]
[212 231]
[214 230]
[215 229]
[216 228]
[217 227]
[218 226]
[219 225]
[220 224]
[255 289]
[256 288]
[257 287]
[261 285]
[262 284]
[263 283]
[266 280]
[267 279]
[268 278]
[269 277]
[270 276]
[271 275]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
