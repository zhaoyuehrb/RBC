%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:14:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUUGUUUCUAUUAGGGCCCGUGGCCAUCAGCGAAGGGUCCGUCCUUCAGCCGUCUUGGGGAGCAAAGCCCGCAAUUUAUGUUUUCCAAGCCACAAAUGGACCAUGGCUCCCUGGCCUGAAUUGGGAGAUGCCCAGCCCAACCCCGAUAAGUACCUCGAAGGGGCCGCAGGUCAGCAGCCCACUGCCCCUGAUAAAAGCAAAG\
) } def
/len { sequence length } bind def

/coor [
[97.47865295 392.07598877]
[89.73514557 377.62020874]
[98.61119843 363.83081055]
[98.84106445 348.83255005]
[99.07093048 333.83432007]
[99.30078888 318.83609009]
[99.53065491 303.83782959]
[99.76052094 288.83959961]
[99.99037933 273.84136963]
[92.44902802 260.99700928]
[100.39689636 247.31703186]
[100.62675476 232.31880188]
[100.85662079 217.32055664]
[101.08648682 202.32232666]
[101.31634521 187.32408142]
[101.54621124 172.32583618]
[101.77607727 157.32760620]
[102.00594330 142.32936096]
[73.17783356 124.44842529]
[70.08670044 95.78810883]
[56.21753693 90.07440948]
[42.34837341 84.36071777]
[28.47920990 78.64702606]
[14.61004639 72.93332672]
[0.74088305 67.21963501]
[-13.17165375 61.61238098]
[-27.12674713 56.11189270]
[-41.08184052 50.61140060]
[-55.03693390 45.11091232]
[-73.72473907 58.62193298]
[-96.56855774 57.37432861]
[-113.40299988 42.15330124]
[-127.80419922 46.34920120]
[-142.17282104 50.65533066]
[-156.50802612 55.07142639]
[-170.84323120 59.48752213]
[-185.17843628 63.90362167]
[-199.51364136 68.31971741]
[-206.68110657 82.40527344]
[-221.73492432 87.21759033]
[-235.74391174 79.90159607]
[-240.39678955 64.79774475]
[-232.93310547 50.86688995]
[-217.78089905 46.37395096]
[-203.92973328 53.98451233]
[-189.59452820 49.56841660]
[-175.25932312 45.15232086]
[-160.92411804 40.73622131]
[-146.58891296 36.32012558]
[-141.11943054 31.34422112]
[-132.00010681 31.94800758]
[-117.59890747 27.75210571]
[-117.57846832 23.36238670]
[-116.99040222 19.01218605]
[-115.84458160 14.77459717]
[-114.16027069 10.72081566]
[-125.80539703 1.26613092]
[-137.45051575 -8.18855476]
[-149.09564209 -17.64323997]
[-160.74076843 -27.09792519]
[-172.38589478 -36.55260849]
[-184.03102112 -46.00729370]
[-195.67614746 -55.46197891]
[-207.32125854 -64.91666412]
[-218.96638489 -74.37135315]
[-230.61151123 -83.82603455]
[-243.96292114 -76.55908966]
[-259.07946777 -74.95963287]
[-273.65600586 -79.27158356]
[-285.46972656 -88.83738708]
[-292.71911621 -102.19833374]
[-294.29867554 -117.31697845]
[-289.96755981 -131.88783264]
[-280.38619995 -143.68894958]
[-267.01574707 -150.92074585]
[-251.89503479 -152.48042297]
[-237.32987976 -148.13014221]
[-225.54138184 -138.53329468]
[-218.32717896 -125.15332031]
[-216.78739929 -110.03057098]
[-221.15682983 -95.47116089]
[-209.51170349 -86.01647186]
[-197.86657715 -76.56179047]
[-186.22145081 -67.10710144]
[-174.57632446 -57.65242004]
[-162.93121338 -48.19773483]
[-151.28608704 -38.74304962]
[-139.64096069 -29.28836441]
[-127.99583435 -19.83367920]
[-116.35070801 -10.37899399]
[-104.70558167 -0.92430854]
[-94.59854126 -6.50562716]
[-83.16563416 -8.38040447]
[-71.72688293 -6.30507278]
[-61.61208725 -0.49370620]
[-54.00623322 8.40372658]
[-49.81069183 19.37396622]
[-49.53644562 31.15582085]
[-35.58135223 36.65630722]
[-21.62625885 42.15679932]
[-7.67116499 47.65728760]
[-0.29200667 47.18521118]
[6.45457697 53.35047150]
[20.32374001 59.06416702]
[34.19290543 64.77786255]
[48.06206894 70.49155426]
[61.93123245 76.20524597]
[75.80039215 81.91894531]
[84.04855347 71.98678589]
[96.36940765 65.92835236]
[110.90953827 65.38589478]
[125.17573547 71.10954285]
[136.46221924 82.72194672]
[142.35646057 98.68477631]
[156.75764465 94.48887634]
[171.15884399 90.29297638]
[185.56004333 86.09706879]
[199.96122742 81.90116882]
[214.36242676 77.70526886]
[228.76362610 73.50936127]
[230.62734985 59.89931107]
[239.46777344 48.27683258]
[253.67192078 42.15108490]
[269.91662598 43.87141418]
[281.11492920 33.89152908]
[292.31323242 23.91164398]
[303.51153564 13.93175793]
[305.86477661 -1.93776596]
[319.81106567 -9.86747456]
[334.65203857 -3.77437353]
[339.00289917 11.66743088]
[329.52612305 24.61230850]
[313.49142456 25.13005638]
[302.29312134 35.10994339]
[291.09481812 45.08982849]
[279.89651489 55.06971359]
[285.71630859 68.89469147]
[300.68066406 67.86108398]
[315.64501953 66.82747650]
[330.60934448 65.79386902]
[335.79086304 54.41160202]
[345.26629639 46.36057281]
[357.19653320 43.12290192]
[369.29989624 45.25417328]
[379.28851318 52.28918076]
[385.30087280 62.84173965]
[400.28988647 62.26719666]
[415.27886963 61.69265747]
[423.79983521 48.72450638]
[438.32775879 43.27305222]
[453.27642822 47.43448639]
[462.89770508 59.60865784]
[463.49206543 75.11434937]
[454.83093262 87.98929596]
[440.24468994 93.28283691]
[425.34207153 88.95948029]
[415.85342407 76.68164825]
[400.86441040 77.25618744]
[385.87542725 77.83073425]
[376.74685669 92.94393158]
[360.22946167 99.61405945]
[342.86212158 94.99709320]
[331.64297485 80.75821686]
[316.67861938 81.79182434]
[301.71426392 82.82542419]
[286.74993896 83.85903168]
[270.10064697 100.71974945]
[248.11195374 101.42842865]
[232.95951843 87.91056061]
[218.55833435 92.10646057]
[204.15713501 96.30236053]
[189.75593567 100.49826813]
[175.35475159 104.69416809]
[160.95355225 108.89006805]
[146.55235291 113.08597565]
[142.35646057 127.48716736]
[152.25024414 138.76161194]
[162.14402771 150.03604126]
[172.03781128 161.31048584]
[187.73365784 166.06156921]
[191.20303345 182.08952332]
[178.87695312 192.90617371]
[163.43542480 187.38426208]
[160.76338196 171.20426941]
[150.86958313 159.92984009]
[140.97579956 148.65539551]
[131.08201599 137.38095093]
[117.00418091 142.55923462]
[116.77431488 157.55746460]
[116.54444885 172.55570984]
[116.31459045 187.55393982]
[116.08472443 202.55218506]
[115.85485840 217.55041504]
[115.62500000 232.54866028]
[115.39513397 247.54690552]
[122.92004395 261.46401978]
[114.98861694 274.07122803]
[114.75875854 289.06945801]
[114.52889252 304.06771851]
[114.29902649 319.06594849]
[114.06916809 334.06417847]
[113.83930206 349.06240845]
[113.60943604 364.06066895]
[122.05875397 378.11560059]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 203]
[4 202]
[5 201]
[6 200]
[7 199]
[8 198]
[9 197]
[11 195]
[12 194]
[13 193]
[14 192]
[15 191]
[16 190]
[17 189]
[18 188]
[20 108]
[21 107]
[22 106]
[23 105]
[24 104]
[25 103]
[26 101]
[27 100]
[28 99]
[29 98]
[32 52]
[33 51]
[34 49]
[35 48]
[36 47]
[37 46]
[38 45]
[56 91]
[57 90]
[58 89]
[59 88]
[60 87]
[61 86]
[62 85]
[63 84]
[64 83]
[65 82]
[66 81]
[114 175]
[115 174]
[116 173]
[117 172]
[118 171]
[119 170]
[120 169]
[124 136]
[125 135]
[126 134]
[127 133]
[137 166]
[138 165]
[139 164]
[140 163]
[146 159]
[147 158]
[148 157]
[176 187]
[177 186]
[178 185]
[179 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
