%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:24:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACAAAGACCUGCGCCGGCGCGCGGGACUCUGCGUGAGGCGAGCGCCGGGGCUCCCGGAGCGGAUCCCUACCUGUUUCAAGGACCUGCCAGUCUGAGAAGCUUCUUGUCAUAAGGCCAUCCAGGGGCCACGCACCCCUACCUUGCCAGCCUCCAGCAUGCAGGAUACCGUAACGACAUCAGCAUUGUUGGACCCCAGCCACUCCUCAGUCUCCACCCAGGACAAUUCCUCCACUGGAGGACACACUUCAAGCACA\
A\
) } def
/len { sequence length } bind def

/coor [
[218.00735474 81.19284821]
[203.38929749 84.55619049]
[188.77122498 87.91954041]
[174.15315247 91.28289032]
[159.53509521 94.64623260]
[153.73826599 99.19543457]
[144.71780396 97.96018982]
[130.05970764 101.14459991]
[134.41729736 114.94275665]
[131.92671204 131.65690613]
[121.27558136 147.88693237]
[102.78428650 159.77531433]
[78.51683044 163.75767517]
[69.31887817 175.60662842]
[60.12092972 187.45558167]
[50.92297745 199.30453491]
[51.76024246 212.15641785]
[43.87941742 221.83166504]
[31.91690636 223.50007629]
[22.57480431 235.23570251]
[13.23270035 246.97134399]
[3.89059639 258.70697021]
[-5.45150709 270.44259644]
[-14.79361057 282.17825317]
[-24.13571548 293.91387939]
[-26.02928543 310.20333862]
[-41.18843460 316.45892334]
[-54.01872635 306.24542236]
[-51.32145691 290.06961060]
[-35.87134933 284.57177734]
[-26.52924538 272.83615112]
[-17.18714142 261.10049438]
[-7.84503746 249.36486816]
[1.49706614 237.62924194]
[10.83916950 225.89360046]
[20.18127251 214.15797424]
[21.85752678 196.67681885]
[39.07402420 190.10658264]
[48.27197647 178.25762939]
[57.46992874 166.40867615]
[66.66787720 154.55972290]
[62.40159225 148.39135742]
[49.60272980 129.88624573]
[35.27042389 134.31175232]
[24.36730003 145.77615356]
[9.92379665 142.13822937]
[-4.40850830 146.56372070]
[-18.74081230 150.98922729]
[-33.07311630 155.41471863]
[-47.40542221 159.84022522]
[-60.75563431 170.29049683]
[-74.49320984 160.35493469]
[-68.74887848 144.40379333]
[-51.83092117 145.50791931]
[-37.49861526 141.08241272]
[-23.16631126 136.65692139]
[-8.83400726 132.23141479]
[5.49829721 127.80592346]
[15.37627888 116.65806580]
[30.84492493 119.97943878]
[45.17723083 115.55393982]
[43.43920898 100.65497589]
[28.47309685 99.64724731]
[17.77058411 111.04856873]
[2.23730683 112.85170746]
[-10.79239655 104.20527649]
[-15.16629791 89.19184875]
[-8.81917572 74.90030670]
[5.25205421 68.07868958]
[20.40338707 71.94794464]
[29.48082542 84.68113708]
[44.44693756 85.68886566]
[49.13467789 71.43947601]
[53.82201767 57.19135666]
[41.18073273 49.11683273]
[28.53944778 41.04230881]
[15.89816284 32.96778488]
[3.25687861 24.89326286]
[-11.99014282 28.08169365]
[-24.69517899 19.71289825]
[-27.64089775 5.15754509]
[-40.28218079 -2.91697836]
[-52.92346573 -10.99150181]
[-65.56475067 -19.06602478]
[-80.94257355 -15.41936207]
[-94.35087585 -23.78554344]
[-97.83474731 -39.20106125]
[-89.32727814 -52.52016068]
[-73.87578583 -55.84085846]
[-60.64737701 -47.19304276]
[-57.49022675 -31.70730972]
[-44.84894180 -23.63278580]
[-32.20766068 -15.55826283]
[-19.56637383 -7.48373938]
[-5.12159443 -10.93104458]
[7.81349039 -2.92241001]
[11.33140182 12.25197792]
[23.97268677 20.32650185]
[36.61397171 28.40102577]
[49.25525665 36.47554779]
[61.89653778 44.55007172]
[112.11054230 52.84982681]
[126.87530518 86.48651123]
[141.53338623 83.30210114]
[156.17173767 80.02816772]
[170.78981018 76.66481781]
[185.40788269 73.30147552]
[200.02593994 69.93812561]
[214.64401245 66.57478333]
[216.05317688 56.56204224]
[220.17506409 47.37746811]
[226.66148376 39.73664093]
[234.98114014 34.22731018]
[244.46307373 31.26421356]
[245.01303101 16.27429962]
[245.56298828 1.28438473]
[232.13656616 -5.89143133]
[223.19360352 -18.13522720]
[220.46464539 -32.98692703]
[224.43829346 -47.49110413]
[234.27473450 -58.78508759]
[247.98254395 -64.66395569]
[248.53251648 -79.65386963]
[249.08247375 -94.64378357]
[249.63243103 -109.63369751]
[250.18238831 -124.62361145]
[238.45936584 -134.97276306]
[236.18244934 -150.44367981]
[244.42671204 -163.73150635]
[259.29949951 -168.56210327]
[273.77828979 -162.65463257]
[281.02667236 -148.79840088]
[277.62219238 -133.53591919]
[265.17230225 -124.07365417]
[264.62234497 -109.08374023]
[264.07238770 -94.09382629]
[263.52243042 -79.10390472]
[262.97247314 -64.11399078]
[276.21264648 -57.24644089]
[285.19500732 -45.26201630]
[288.09512329 -30.50565147]
[284.28518677 -15.89385319]
[274.46908569 -4.33830500]
[260.55291748 1.83434570]
[260.00292969 16.82426071]
[259.45297241 31.81417465]
[278.15173340 43.84349060]
[285.93722534 64.66978455]
[300.70220947 67.31462097]
[303.34289551 32.02497482]
[347.10223389 7.22728109]
[360.03106689 -0.37833241]
[372.95989990 -7.98394585]
[385.88873291 -15.58955956]
[398.81756592 -23.19517326]
[411.74639893 -30.80078697]
[424.67523193 -38.40639877]
[437.55734253 -46.09089279]
[450.39221191 -53.85397720]
[463.22711182 -61.61706161]
[467.05368042 -73.91459656]
[477.87960815 -80.12078094]
[489.64492798 -77.38899231]
[502.57376099 -84.99460602]
[515.50256348 -92.60021973]
[519.57446289 -107.63542175]
[532.79449463 -115.16442108]
[547.10321045 -111.18982697]
[560.03204346 -118.79544067]
[570.61834717 -132.03799438]
[586.27398682 -125.53127289]
[584.35546875 -108.68622589]
[567.63763428 -105.86660767]
[554.70880127 -98.26099396]
[551.23138428 -83.82343292]
[538.22808838 -75.92607880]
[523.10821533 -79.67138672]
[510.17938232 -72.06577301]
[497.25054932 -64.46015930]
[489.41772461 -48.74241257]
[470.99020386 -48.78216934]
[458.15530396 -41.01908112]
[445.32040405 -33.25599670]
[441.23556519 -27.12311363]
[432.28085327 -25.47756958]
[419.35202026 -17.87195587]
[406.42318726 -10.26634312]
[393.49435425 -2.66072965]
[380.56552124 4.94488382]
[367.63668823 12.55049706]
[354.70785522 20.15611076]
[354.98284912 27.65106773]
[369.97274780 27.10110664]
[384.96267700 26.55114555]
[399.95257568 26.00118446]
[414.94250488 25.45147324]
[415.49197388 40.44140625]
[400.50253296 40.99110031]
[385.51263428 41.54106140]
[370.52270508 42.09102249]
[355.53280640 42.64098358]
[355.80776978 50.13594055]
[369.25918579 56.77369690]
[382.71057129 63.41145325]
[396.16198730 70.04920959]
[410.96676636 65.20600891]
[424.51382446 72.12925720]
[429.03985596 86.27318573]
[442.49124146 92.91094208]
[458.81140137 91.30319977]
[468.14257812 104.78878784]
[460.88568115 119.49488831]
[444.50595093 120.29312897]
[435.85348511 106.36234283]
[422.40209961 99.72458649]
[408.42312622 104.73701477]
[394.68695068 98.19700623]
[389.52423096 83.50061035]
[376.07281494 76.86285400]
[362.62142944 70.22509766]
[349.17001343 63.58734131]
[344.21774292 69.21984100]
[355.48257446 79.12456512]
[345.57766724 90.38922882]
[334.31320190 80.48483276]
[329.36096191 86.11733246]
[337.66589355 98.60844421]
[345.97082520 111.09955597]
[354.27578735 123.59066772]
[362.58071899 136.08177185]
[370.88568115 148.57289124]
[384.69024658 158.41514587]
[379.05410767 174.40484619]
[362.12905884 173.41535950]
[358.39456177 156.87783813]
[350.08963013 144.38671875]
[341.78466797 131.89561462]
[333.47973633 119.40450287]
[325.17477417 106.91339111]
[316.86984253 94.42227936]
[322.12054443 108.47325134]
[319.96511841 123.31758118]
[310.93502808 135.29495239]
[297.25689697 141.45199585]
[282.30349731 140.27049255]
[269.76202393 132.04179382]
[262.72494507 118.79492950]
[262.92749023 103.79629517]
[270.31964111 90.74425507]
[283.07873535 82.85717773]
[298.05737305 82.07961273]
[283.29238892 79.43476868]
[275.92742920 90.80242157]
[264.78518677 98.59239197]
[251.48152161 101.62868500]
[237.96334839 99.42806244]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 109]
[2 108]
[3 107]
[4 106]
[5 105]
[7 104]
[8 103]
[13 41]
[14 40]
[15 39]
[16 38]
[19 36]
[20 35]
[21 34]
[22 33]
[23 32]
[24 31]
[25 30]
[43 61]
[44 60]
[46 58]
[47 57]
[48 56]
[49 55]
[50 54]
[62 72]
[63 71]
[74 101]
[75 100]
[76 99]
[77 98]
[78 97]
[81 94]
[82 93]
[83 92]
[84 91]
[114 146]
[115 145]
[116 144]
[122 138]
[123 137]
[124 136]
[125 135]
[126 134]
[148 252]
[149 251]
[151 191]
[152 190]
[153 189]
[154 188]
[155 187]
[156 186]
[157 185]
[158 183]
[159 182]
[160 181]
[163 179]
[164 178]
[165 177]
[168 174]
[169 173]
[202 221]
[203 220]
[204 219]
[205 218]
[208 215]
[209 214]
[226 240]
[227 239]
[228 238]
[229 237]
[230 236]
[231 235]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
