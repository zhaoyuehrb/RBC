%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:31:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGAGGGAGGCAGGGAAUCUGGCUUGAUUGGCGUGCUGAGACGCACCUGGCGCAACCCUCCCUUCUGAAUCGAAGUUCAAGUCCCGCGGACACUGCAACCAUGAAGGAGAGACGGGCCCCCCAGCCAGUCGUGGCCAGAUGUAAGCUCGUUCUGGUCGGGGACGUGCAGUGUGGGAAGACCGCGAUGUUGCAAGUGUUAG\
) } def
/len { sequence length } bind def

/coor [
[-74.91230011 258.53912354]
[-72.31777191 243.76521301]
[-63.71607208 231.47657776]
[-50.72391129 223.98173523]
[-41.95722198 211.81025696]
[-55.48603821 218.28875732]
[-69.01485443 224.76727295]
[-82.54367828 231.24577332]
[-96.07249451 237.72428894]
[-109.60131073 244.20280457]
[-123.13013458 250.68130493]
[-136.65895081 257.15982056]
[-150.18777466 263.63833618]
[-163.34791565 270.83627319]
[-176.10118103 278.73275757]
[-188.85443115 286.62924194]
[-201.60768127 294.52572632]
[-199.66250610 313.54104614]
[-217.99620056 330.66827393]
[-228.60281372 341.27487183]
[-239.20941162 351.88146973]
[-249.81600952 362.48806763]
[-249.56538391 378.29037476]
[-260.62191772 389.58322144]
[-276.42599487 389.66677856]
[-287.60131836 378.49145508]
[-287.51776123 362.68737793]
[-276.22491455 351.63082886]
[-260.42260742 351.88146973]
[-249.81600952 341.27487183]
[-239.20941162 330.66827393]
[-228.60281372 320.06167603]
[-236.49964905 307.30783081]
[-244.39576721 294.55514526]
[-258.61819458 299.32202148]
[-272.84060669 304.08889771]
[-287.06298828 308.85577393]
[-293.88232422 323.11312866]
[-308.81341553 328.29373169]
[-322.99786377 321.32403564]
[-328.02032471 306.33905029]
[-320.90106201 292.22906494]
[-305.86380005 287.36529541]
[-291.82986450 294.63336182]
[-277.60745239 289.86648560]
[-263.38504028 285.09960938]
[-249.16264343 280.33273315]
[-225.65893555 271.55535889]
[-209.50416565 281.77246094]
[-196.75091553 273.87597656]
[-183.99765015 265.97949219]
[-171.24440002 258.08300781]
[-185.85641479 254.69346619]
[-194.97465515 242.78306580]
[-194.43367004 227.79283142]
[-184.48059082 216.57070923]
[-169.66224670 214.24328613]
[-156.74809265 221.87379456]
[-151.63768005 235.97640991]
[-156.66627502 250.10949707]
[-143.13745117 243.63099670]
[-129.60864258 237.15248108]
[-116.07981873 230.67398071]
[-102.55100250 224.19546509]
[-89.02218628 217.71696472]
[-75.49336243 211.23844910]
[-61.96454620 204.75994873]
[-48.43572998 198.28143311]
[-46.13485336 183.45895386]
[-57.06305695 173.18402100]
[-67.99125671 162.90907288]
[-78.91945648 152.63414001]
[-89.84766388 142.35919189]
[-105.92640686 139.13336182]
[-110.91504669 123.51139832]
[-99.68169403 111.56385040]
[-83.78226471 115.58132935]
[-79.57272339 131.43098450]
[-68.64452362 141.70593262]
[-57.71631622 151.98086548]
[-46.78811646 162.25581360]
[-35.85991287 172.53074646]
[-18.25255775 149.54885864]
[7.29251862 151.04444885]
[17.05179405 139.65336609]
[26.81106758 128.26229858]
[36.57034302 116.87122345]
[46.32961655 105.48014832]
[49.76387405 90.87857819]
[46.10516739 76.33162689]
[42.44646454 61.78467178]
[38.78775787 47.23771667]
[29.06065369 33.35176086]
[39.71121216 20.16078186]
[55.33505249 26.74348450]
[53.33471298 43.57901382]
[56.99341583 58.12596512]
[60.65212250 72.67292023]
[64.31082916 87.21987152]
[71.79660034 86.75817108]
[86.76815033 85.83475494]
[94.25392914 85.37304688]
[96.09725189 70.48674011]
[87.40681458 57.00134659]
[92.66804504 41.84552383]
[107.84498596 36.64551926]
[121.29518127 45.39033127]
[122.70079803 61.37168884]
[110.98355865 72.33006287]
[109.14023590 87.21636963]
[116.06933594 90.08649445]
[127.96961212 80.95505524]
[129.92752075 95.82675171]
[136.85662842 98.69687653]
[146.07940674 86.86724091]
[155.30218506 75.03760529]
[157.68528748 59.39690399]
[171.61264038 54.11693573]
[180.83541870 42.28729630]
[190.05821228 30.45766258]
[187.86755371 14.80593395]
[197.45252991 2.23996067]
[213.12655640 0.21491152]
[225.59048462 9.93221188]
[227.44970703 25.62676048]
[217.60116577 37.98725891]
[201.88784790 39.68044281]
[192.66505432 51.51007843]
[183.44227600 63.33971786]
[181.71885681 78.13427734]
[167.13182068 84.26038361]
[157.90904236 96.09001923]
[148.68626404 107.91965485]
[156.28640747 120.85247040]
[163.88586426 133.78414917]
[178.70834351 131.48327637]
[193.53082275 129.18240356]
[208.35331726 126.88152313]
[223.17579651 124.58065033]
[237.99827576 122.27977753]
[252.82075500 119.97889709]
[267.64324951 117.67802429]
[282.44757080 115.26308441]
[297.23284912 112.73423004]
[306.15844727 99.69162750]
[321.70748901 96.86262512]
[334.65496826 105.92561340]
[337.31942749 121.50367737]
[328.12005615 134.35464478]
[312.51470947 136.85424805]
[299.76171875 127.51952362]
[284.97640991 130.04838562]
[278.90994263 134.27706909]
[269.94412231 132.50050354]
[255.12162781 134.80137634]
[240.29914856 137.10226440]
[225.47666931 139.40313721]
[210.65419006 141.70401001]
[195.83169556 144.00488281]
[181.00921631 146.30575562]
[166.18673706 148.60662842]
[57.72069168 115.23942566]
[47.96141434 126.63050079]
[38.20214081 138.02157593]
[28.44286728 149.41264343]
[18.68359184 160.80372620]
[21.44750404 190.74406433]
[-8.43812370 207.04104614]
[1.14457858 218.58105469]
[10.72728062 230.12106323]
[20.30998230 241.66107178]
[29.89268494 253.20108032]
[39.73937988 264.51666260]
[49.84481430 275.60180664]
[59.95024872 286.68695068]
[70.05568695 297.77206421]
[80.16111755 308.85720825]
[96.05615234 311.03149414]
[104.14250183 324.88754272]
[98.21701813 339.79620361]
[82.82521820 344.32083130]
[69.77438354 334.99047852]
[69.07598877 318.96264648]
[58.97055054 307.87750244]
[48.86511612 296.79238892]
[38.75968170 285.70724487]
[28.65424728 274.62210083]
[25.16237259 274.09649658]
[21.75253105 271.85009766]
[19.23226547 267.94030762]
[18.35267448 262.78378296]
[8.76997280 251.24377441]
[-0.81272888 239.70376587]
[-10.39543056 228.16375732]
[-19.97813225 216.62374878]
[-17.10109520 231.34524536]
[-8.43029690 243.58523560]
[-5.75257254 258.34429932]
[-9.57089138 272.85015869]
[-19.16804314 284.37817383]
[-32.74135590 290.76293945]
[-47.74129486 290.80517578]
[-61.35036469 284.49700928]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 68]
[6 67]
[7 66]
[8 65]
[9 64]
[10 63]
[11 62]
[12 61]
[13 60]
[14 52]
[15 51]
[16 50]
[17 49]
[19 32]
[20 31]
[21 30]
[22 29]
[34 47]
[35 46]
[36 45]
[37 44]
[69 82]
[70 81]
[71 80]
[72 79]
[73 78]
[84 166]
[85 165]
[86 164]
[87 163]
[88 162]
[89 99]
[90 98]
[91 97]
[92 96]
[102 110]
[103 109]
[114 133]
[115 132]
[116 131]
[118 129]
[119 128]
[120 127]
[135 161]
[136 160]
[137 159]
[138 158]
[139 157]
[140 156]
[141 155]
[142 154]
[143 152]
[144 151]
[168 195]
[169 194]
[170 193]
[171 192]
[172 191]
[173 187]
[174 186]
[175 185]
[176 184]
[177 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
