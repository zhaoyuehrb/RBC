%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:53:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCAUUUCCUGGAGCAAUGUCACAGGGUGGCUCCAUUUUCCAUUUGAGCUCAAAUAUUUUGCUGCUUCCUCUGUAGCUGCCAGACCUGCUCUUGCUGCUGCUCAGGUAGAACAUCUGGGAGGUCCCUUGCUGACCACUGGAAGAAGAUGAGCUCGAGCUAUUGGAGUGAGACGAGCAGCAGCAGCUGUGGAACCCAGCAGCUCCCAGAGGUGCUGCAGUGCCAGCCCCAGCAUUACCACUGCUACC\
) } def
/len { sequence length } bind def

/coor [
[-121.22200775 1044.93579102]
[-121.27875519 1060.24121094]
[-128.45202637 1073.76159668]
[-141.09344482 1082.39025879]
[-156.29812622 1084.14416504]
[-170.57212830 1078.62048340]
[-180.63539124 1067.08837891]
[-184.17546082 1052.19787598]
[-180.37884521 1037.37072754]
[-170.11799622 1026.01416016]
[-155.75074768 1020.73767090]
[-153.84803772 1005.85882568]
[-152.03999329 990.96820068]
[-150.32667542 976.06634521]
[-148.61335754 961.16455078]
[-146.90003967 946.26269531]
[-145.75643921 931.30633545]
[-145.18421936 916.31726074]
[-144.61201477 901.32818604]
[-144.03979492 886.33911133]
[-155.24458313 879.10412598]
[-161.46647644 867.18450928]
[-160.98838806 853.63897705]
[-153.82826233 842.00341797]
[-141.76219177 835.36785889]
[-140.99938965 820.38726807]
[-148.07943726 807.28295898]
[-139.65036011 793.89410400]
[-138.88754272 778.91351318]
[-138.12474060 763.93292236]
[-137.36192322 748.95233154]
[-143.36727905 744.45953369]
[-151.21879578 757.24047852]
[-159.07029724 770.02148438]
[-162.88093567 784.52941895]
[-177.04301453 789.47259521]
[-189.05392456 780.48718262]
[-188.31011963 765.50561523]
[-175.46762085 757.75402832]
[-165.42282104 746.61389160]
[-155.37800598 735.47381592]
[-161.38336182 730.98095703]
[-175.53935242 735.94158936]
[-189.69535828 740.90222168]
[-203.85134888 745.86279297]
[-218.00735474 750.82342529]
[-228.28256226 763.60437012]
[-244.44517517 760.82922363]
[-249.86849976 745.35278320]
[-238.97348022 733.09594727]
[-222.96797180 736.66741943]
[-208.81196594 731.70684814]
[-194.65597534 726.74621582]
[-180.49996948 721.78558350]
[-166.34397888 716.82495117]
[-180.57693481 712.08972168]
[-186.68063354 698.38769531]
[-180.68122864 684.63970947]
[-166.48466492 679.79644775]
[-153.33366394 687.01110840]
[-149.79019165 701.58612061]
[-143.67752075 687.88812256]
[-137.56484985 674.19012451]
[-131.45219421 660.49212646]
[-125.33952332 646.79412842]
[-132.89486694 630.10113525]
[-125.70342255 612.90069580]
[-107.91436768 606.33105469]
[-102.15209198 592.48199463]
[-96.38981628 578.63293457]
[-90.62754059 564.78393555]
[-84.86526489 550.93487549]
[-79.10298157 537.08581543]
[-82.29121399 519.81866455]
[-67.54528046 508.77139282]
[-61.95960999 494.85018921]
[-56.37393951 480.92895508]
[-50.78826904 467.00775146]
[-45.20259857 453.08654785]
[-39.61692810 439.16531372]
[-50.62596130 427.56790161]
[-55.48758698 412.27316284]
[-53.17855072 396.33248901]
[-44.11153412 382.94943237]
[-30.06250000 374.83599854]
[-13.82302761 373.66305542]
[-8.41486835 359.67190552]
[-3.00671005 345.68078613]
[2.40144849 331.68963623]
[-3.84107494 318.21499634]
[1.44425797 303.94894409]
[15.62004852 297.49258423]
[21.02820778 283.50143433]
[26.43636513 269.51031494]
[31.84452438 255.51918030]
[37.25268173 241.52804565]
[42.66084290 227.53691101]
[48.06900024 213.54577637]
[53.47715759 199.55464172]
[58.88531876 185.56350708]
[64.29347992 171.57237244]
[69.70163727 157.58123779]
[75.10979462 143.59010315]
[65.10199738 137.04510498]
[56.80247116 128.20904541]
[50.73351669 117.52517700]
[47.30298233 105.55510712]
[46.77767181 92.94942474]
[49.26424408 80.41233063]
[54.69894028 68.66232300]
[62.84697723 58.39102554]
[73.31181335 50.22262192]
[85.55405426 44.67613983]
[98.91903687 42.13299942]
[100.44268799 27.21058464]
[101.96633148 12.28816891]
[103.48998260 -2.63424754]
[105.01363373 -17.55666351]
[97.49328613 -28.01646233]
[99.05479431 -40.40056992]
[108.32250214 -48.15148926]
[110.03582001 -63.05331802]
[111.74913788 -77.95514679]
[113.46245575 -92.85697937]
[102.57922363 -104.08592987]
[101.51159668 -119.68702698]
[110.76365662 -132.29389954]
[125.96688080 -135.95397949]
[139.94276428 -128.93907166]
[146.09231567 -114.56142426]
[141.51191711 -99.60970306]
[128.36428833 -91.14366150]
[126.65096283 -76.24182892]
[124.93764496 -61.34000015]
[123.22432709 -46.43817139]
[131.05741882 -30.72311974]
[119.93604279 -16.03301620]
[118.41239929 -1.11059999]
[116.88874817 13.81181622]
[115.36510468 28.73423195]
[113.84145355 43.65664673]
[120.41467285 47.26812744]
[127.63763428 34.12168884]
[134.86059570 20.97525215]
[137.66758728 6.24023390]
[152.54884338 4.35649824]
[158.93891907 17.92730904]
[148.00703430 28.19821358]
[140.78407288 41.34465027]
[133.56111145 54.49108887]
[140.13433838 58.10256958]
[151.91261292 48.81428909]
[163.69088745 39.52600479]
[175.46916199 30.23772430]
[181.51423645 15.61692715]
[196.29901123 13.81143188]
[208.07728577 4.52315044]
[216.77044678 -10.03243637]
[233.16371155 -5.70838308]
[233.54675293 11.24123669]
[217.36557007 16.30142784]
[205.58728027 25.58971024]
[200.38467407 39.54614639]
[184.75744629 42.01600266]
[172.97917175 51.30428314]
[161.20089722 60.59256744]
[149.42260742 69.88084412]
[155.89350891 91.10494232]
[153.83872986 112.70134735]
[143.94213867 131.44880676]
[128.02882385 144.69458008]
[108.74047089 150.72854614]
[89.10092926 148.99826050]
[83.69277191 162.98939514]
[78.28460693 176.98052979]
[72.87644958 190.97166443]
[67.46829224 204.96279907]
[62.06013489 218.95393372]
[56.65197372 232.94506836]
[51.24381638 246.93620300]
[45.83565903 260.92733765]
[40.42749786 274.91845703]
[35.01934052 288.90960693]
[29.61118126 302.90072632]
[35.75901031 317.21304321]
[30.07505989 331.32498169]
[16.39258194 337.09780884]
[10.98442364 351.08892822]
[5.57626486 365.08007812]
[0.16810620 379.07119751]
[10.21336365 388.99520874]
[15.70493412 401.95727539]
[15.84538269 415.99066162]
[10.64650726 428.97964478]
[0.92258573 438.97857666]
[-11.83697510 444.50320435]
[-25.69571304 444.75097656]
[-31.28138161 458.67221069]
[-36.86705017 472.59341431]
[-42.45272064 486.51464844]
[-48.03839111 500.43585205]
[-53.62406158 514.35705566]
[-49.28500748 526.48699951]
[-54.20603180 537.95819092]
[-65.25393677 542.84808350]
[-71.01621246 556.69714355]
[-76.77848816 570.54620361]
[-82.54076385 584.39526367]
[-88.30303955 598.24426270]
[-94.06532288 612.09332275]
[-87.49399567 621.96667480]
[-86.50365448 633.66534424]
[-91.22451019 644.28399658]
[-100.38267517 651.24127197]
[-111.64151764 652.90679932]
[-117.75418854 666.60479736]
[-123.86685181 680.30279541]
[-129.97952271 694.00079346]
[-136.09219360 707.69879150]
[-122.38134003 749.71514893]
[-123.14414978 764.69573975]
[-123.90695953 779.67633057]
[-124.66976929 794.65692139]
[-117.64427185 808.83270264]
[-126.01879883 821.15008545]
[-126.78160858 836.13067627]
[-113.47168732 846.58648682]
[-109.06885529 862.75708008]
[-115.11957550 878.20751953]
[-129.05070496 886.91131592]
[-129.62292480 901.90039062]
[-130.19514465 916.88952637]
[-130.76736450 931.87860107]
[-119.15570831 922.38281250]
[-104.21920776 923.76153564]
[-94.54199219 935.22241211]
[-95.68565369 950.17877197]
[-106.99291229 960.03503418]
[-121.96538544 959.12670898]
[-131.99821472 947.97601318]
[-133.71153259 962.87786865]
[-135.42485046 977.77966309]
[-137.13816833 992.68151855]
[-135.01266479 1001.54028320]
[-138.96920776 1007.76153564]
[-140.87191772 1022.64038086]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 246]
[12 245]
[13 243]
[14 242]
[15 241]
[16 240]
[17 233]
[18 232]
[19 231]
[20 230]
[25 226]
[26 225]
[28 223]
[29 222]
[30 221]
[31 220]
[42 55]
[43 54]
[44 53]
[45 52]
[46 51]
[61 219]
[62 218]
[63 217]
[64 216]
[65 215]
[68 210]
[69 209]
[70 208]
[71 207]
[72 206]
[73 205]
[75 202]
[76 201]
[77 200]
[78 199]
[79 198]
[80 197]
[86 190]
[87 189]
[88 188]
[89 187]
[92 184]
[93 183]
[94 182]
[95 181]
[96 180]
[97 179]
[98 178]
[99 177]
[100 176]
[101 175]
[102 174]
[103 173]
[114 141]
[115 140]
[116 139]
[117 138]
[118 137]
[121 135]
[122 134]
[123 133]
[124 132]
[151 167]
[152 166]
[153 165]
[154 164]
[156 162]
[157 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
