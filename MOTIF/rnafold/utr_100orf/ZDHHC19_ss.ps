%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:47:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUCACCCUGGGCUGCGGCUCUGAGGCUGCCGUGGCCAUGGAGCUCUGGAAGCUGGGCUGGGGGAGGAAGCCUGGUGGCUCUGACCUCCCCUGGAGGCGAAGGAGGCCCAGCCAUGACACUCUUAACGGAUGCCACGCCGCUGGUGAAGGAGCCCCAUCCCCUGCCUCUGGUCCCACGUCCCUGGUUCCUCCCUAGCCUCUUUGCUGCCUUCA\
) } def
/len { sequence length } bind def

/coor [
[164.85002136 194.95968628]
[149.85209656 195.20925903]
[135.30014038 191.57051086]
[122.18482971 184.29118347]
[111.39904785 173.86683655]
[103.67709351 161.00715637]
[99.54476929 146.58833313]
[102.97323608 131.98539734]
[92.96345520 143.15698242]
[93.64807129 158.71876526]
[83.33758545 169.90574646]
[68.49758911 170.46252441]
[58.48780441 181.63409424]
[48.47802353 192.80567932]
[38.46823883 203.97726440]
[28.45845795 215.14884949]
[18.44867516 226.32043457]
[8.43889332 237.49201965]
[-1.57088900 248.66360474]
[-11.58067131 259.83517456]
[-7.38161802 274.68008423]
[-11.89677238 289.43194580]
[-23.68536377 299.38345337]
[-38.98569489 301.35916138]
[-52.91548920 294.72857666]
[-61.02979660 281.60754395]
[-60.73937225 266.18292236]
[-52.13689041 253.37663269]
[-37.96736908 247.27514648]
[-22.75225449 249.82539368]
[-12.74247169 238.65380859]
[-2.73268962 227.48223877]
[7.27709246 216.31065369]
[17.28687477 205.13906860]
[27.29665756 193.96748352]
[37.30643845 182.79589844]
[47.31622314 171.62431335]
[57.32600403 160.45274353]
[56.25637054 145.64086914]
[66.24856567 134.16870117]
[81.79187012 133.14720154]
[91.80165100 121.97561646]
[85.23703766 108.48837280]
[70.26944733 109.47397614]
[55.30186462 110.45957947]
[40.33428192 111.44518280]
[25.36669540 112.43078613]
[17.20477867 125.62786102]
[2.83188200 131.47589111]
[-12.22532177 127.72618866]
[-22.17703056 115.82060242]
[-23.19660950 100.33705902]
[-14.89200974 87.22930145]
[-0.45651859 81.53753662]
[14.55912209 85.45035553]
[24.38109207 97.46320343]
[39.34867859 96.47760010]
[54.31626129 95.49199677]
[69.28384399 94.50639343]
[84.25143433 93.52079010]
[88.78233337 79.22145844]
[77.11366272 69.79585266]
[65.44498444 60.37024689]
[53.77630997 50.94464111]
[42.10763550 41.51903915]
[30.43895912 32.09343338]
[18.77028465 22.66782951]
[7.10160875 13.24222565]
[-14.23246002 11.20425987]
[-20.81543732 -8.35832500]
[-32.88595581 -17.26352692]
[-44.95647049 -26.16873169]
[-57.02698517 -35.07393265]
[-73.37495422 -36.36853027]
[-80.18254852 -51.28793716]
[-70.44670105 -64.48434448]
[-54.18281174 -62.38242722]
[-48.12178421 -47.14445114]
[-36.05126572 -38.23924637]
[-23.98075104 -29.33404350]
[-11.91023540 -20.42884064]
[-3.46896744 -23.16465759]
[5.42038536 -21.68858719]
[12.74476528 -16.20676422]
[16.78692818 -7.84654379]
[16.52721214 1.57355070]
[28.19588852 10.99915504]
[39.86456299 20.42475891]
[51.53323746 29.85036278]
[63.20191574 39.27596664]
[74.87059021 48.70157242]
[86.53926849 58.12717438]
[98.20793915 67.55278015]
[113.04808807 69.73680115]
[126.93753052 64.07257080]
[140.82696533 58.40834045]
[154.71640015 52.74411011]
[168.60585022 47.07987976]
[182.49528503 41.41564941]
[186.30099487 26.48840332]
[198.02952576 16.77783585]
[213.04939270 15.84645653]
[225.58753967 23.84226990]
[239.47697449 18.17804146]
[253.36640930 12.51381111]
[267.25585938 6.84958220]
[281.14529419 1.18535280]
[292.09625244 -13.62037659]
[309.37661743 -10.55440235]
[323.18182373 -16.42097282]
[336.98699951 -22.28754425]
[350.79220581 -28.15411377]
[335.86767578 -29.65676498]
[322.32775879 -36.11205673]
[311.76391602 -46.76125336]
[305.41778564 -60.35267639]
[304.03530884 -75.28883362]
[307.77893066 -89.81416321]
[316.20864868 -102.22140503]
[328.33367920 -111.05224609]
[342.72885132 -115.26873779]
[357.70223999 -114.37527466]
[371.49386597 -108.47688293]
[382.48272705 -98.26683807]
[389.37719727 -84.94520569]
[391.36697388 -70.07775879]
[388.21813965 -55.41198730]
[380.30081177 -42.67166138]
[368.54522705 -33.35406876]
[383.33395386 -35.86280441]
[398.12268066 -38.37154007]
[412.91140747 -40.88027573]
[427.70013428 -43.38900757]
[433.12078857 -57.69157791]
[444.89492798 -67.29712677]
[459.79711914 -69.70356750]
[473.80923462 -64.36346436]
[483.20376587 -52.80455780]
[497.99249268 -55.31329346]
[512.78118896 -57.82202911]
[527.56994629 -60.33076096]
[536.72412109 -72.93386841]
[551.75775146 -75.26741028]
[563.71649170 -66.46260071]
[578.50518799 -68.97133636]
[593.29388428 -71.48007202]
[608.08264160 -73.98880768]
[617.23681641 -86.59191132]
[632.27044678 -88.92545319]
[644.22918701 -80.12064362]
[659.01788330 -82.62937927]
[673.80657959 -85.13811493]
[682.74993896 -98.16855621]
[698.30279541 -100.97639465]
[711.23797607 -91.89579773]
[713.88122559 -76.31411743]
[704.66436768 -63.47568893]
[689.05560303 -60.99732208]
[676.31530762 -70.34939575]
[661.52661133 -67.84066010]
[646.73791504 -65.33192444]
[638.35192871 -53.07587433]
[623.38977051 -50.32098770]
[610.59136963 -59.20008469]
[595.80261230 -56.69134903]
[581.01391602 -54.18261719]
[566.22521973 -51.67388153]
[557.83923340 -39.41783142]
[542.87707520 -36.66294479]
[530.07867432 -45.54204178]
[515.28997803 -43.03330612]
[500.50122070 -40.52457428]
[485.71252441 -38.01583862]
[480.65551758 -24.00539780]
[469.18838501 -14.34304142]
[454.32629395 -11.70030880]
[440.04306030 -16.88553429]
[430.20886230 -28.60028839]
[415.42013550 -26.09155273]
[400.63140869 -23.58281898]
[385.84268188 -21.07408524]
[371.05398560 -18.56534958]
[356.65878296 -14.34892178]
[342.85357666 -8.48235035]
[329.04840088 -2.61577988]
[315.24319458 3.25079083]
[310.42828369 14.34571362]
[298.97747803 19.34711456]
[286.80950928 15.07479095]
[272.92007446 20.73902130]
[259.03063965 26.40324974]
[245.14120483 32.06747818]
[231.25177002 37.73170853]
[227.88092041 52.21533585]
[216.49319458 62.05319977]
[201.31874084 63.31389236]
[188.15951538 55.30508804]
[174.27008057 60.96931839]
[160.38063049 66.63354492]
[146.49119568 72.29777527]
[132.60176086 77.96200562]
[118.71231842 83.62623596]
[133.61701965 85.31436157]
[148.04643250 81.21655273]
[163.04473877 80.99097443]
[177.59086609 84.65299988]
[190.69450378 91.95330048]
[201.46359253 102.39488983]
[209.16496277 115.26691437]
[213.27432251 129.69303894]
[213.51188660 144.69116211]
[209.86151123 159.24020386]
[202.57168579 172.34968567]
[192.13871765 183.12712097]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 42]
[9 41]
[12 38]
[13 37]
[14 36]
[15 35]
[16 34]
[17 33]
[18 32]
[19 31]
[20 30]
[43 60]
[44 59]
[45 58]
[46 57]
[47 56]
[61 93]
[62 92]
[63 91]
[64 90]
[65 89]
[66 88]
[67 87]
[68 86]
[70 81]
[71 80]
[72 79]
[73 78]
[94 202]
[95 201]
[96 200]
[97 199]
[98 198]
[99 197]
[103 193]
[104 192]
[105 191]
[106 190]
[107 189]
[109 186]
[110 185]
[111 184]
[112 183]
[129 182]
[130 181]
[131 180]
[132 179]
[133 178]
[138 173]
[139 172]
[140 171]
[141 170]
[144 167]
[145 166]
[146 165]
[147 164]
[150 161]
[151 160]
[152 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
