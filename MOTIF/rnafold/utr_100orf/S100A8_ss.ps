%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:48:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAAACCAGAGACUGUAGCAACUCUGGCAGGGAGAAGCUGUCUCUGAUGGCCUGAAGCUGUGGGCAGCUGGCCAAGCCUAACCGCUAUAAAAAGGAGCUGCCUCUCAGCCCUGCAUGUCUCUUGUCAGCUGUCUUUCAGAAGACCUGAAGGUUCUGUUUUUCAGGUGGGGCAAGUCCGUGGGCAUCAUGUUGACCGAGCUGGAGAAAGCCUUGA\
) } def
/len { sequence length } bind def

/coor [
[132.88427734 199.44012451]
[121.43543243 209.13156128]
[106.44177246 208.69558716]
[95.57538605 198.35528564]
[94.39649963 183.40168762]
[103.50905609 171.48594666]
[107.94103241 157.15563965]
[100.44420624 156.93750000]
[89.68446350 167.38871765]
[78.92472839 177.83995056]
[68.16498566 188.29116821]
[57.40524292 198.74238586]
[46.64550018 209.19360352]
[35.88576126 219.64482117]
[34.46493912 224.65980530]
[31.55511475 228.26940918]
[27.93996429 230.14195251]
[24.42130661 230.30445862]
[13.21593094 240.27639771]
[2.01055479 250.24833679]
[0.93648535 265.78808594]
[-10.56941319 275.74142456]
[-25.37758064 274.62170410]
[-36.58295441 284.59365845]
[-47.78833389 294.56558228]
[-58.99370956 304.53753662]
[-61.35821152 320.40536499]
[-75.31013489 328.32519531]
[-90.14675140 322.22155762]
[-94.48668671 306.77667236]
[-85.00070953 293.83853149]
[-68.96564484 293.33215332]
[-57.76026917 283.36019897]
[-46.55489349 273.38827515]
[-35.34951782 263.41632080]
[-34.74254990 248.57830811]
[-23.52075958 238.30570984]
[-7.96138334 239.04296875]
[3.24399281 229.07102966]
[14.44936943 219.09909058]
[25.43454170 208.88507080]
[36.19428253 198.43385315]
[46.95402527 187.98263550]
[57.71376419 177.53141785]
[68.47350311 167.08020020]
[79.23324585 156.62898254]
[89.99298859 146.17776489]
[73.91638184 137.22665405]
[63.05109787 123.26049805]
[58.69581604 106.83876038]
[61.01705933 90.72064972]
[69.10339355 77.40383148]
[81.19345093 68.73737335]
[76.26869202 54.56885910]
[71.34393311 40.40034866]
[66.41917419 26.23183441]
[61.49441910 12.06332111]
[52.72610092 24.23363686]
[37.75205612 25.11569595]
[27.61553001 14.05898571]
[29.79212952 -0.78225404]
[42.67663193 -8.46272469]
[56.76760864 -3.31732798]
[52.88532639 -17.80621529]
[49.00304031 -32.29510117]
[45.12075424 -46.78398895]
[41.23846817 -61.27287674]
[37.35618210 -75.76176453]
[33.47389603 -90.25065613]
[29.59160995 -104.73954010]
[25.70932579 -119.22842407]
[21.82703972 -133.71731567]
[17.94475365 -148.20620728]
[-7.29995728 -152.53123474]
[-25.33837509 -173.64878845]
[-25.75957680 -203.58122253]
[-36.21079636 -214.34095764]
[-46.66201401 -225.10070801]
[-62.46628952 -225.07992554]
[-73.59713745 -236.29954529]
[-73.45082092 -252.10314941]
[-62.11415100 -263.11474609]
[-46.31296921 -262.80136108]
[-35.42184067 -251.34890747]
[-35.90227127 -235.55192566]
[-25.45105362 -224.79219055]
[-14.99983501 -214.03244019]
[-8.24934483 -217.30059814]
[-14.78566742 -230.80158997]
[-21.32176590 -244.30267334]
[-7.82056713 -250.83854675]
[-1.28468585 -237.33790588]
[5.25163651 -223.83692932]
[12.00212669 -227.10508728]
[10.04423428 -241.97676086]
[8.08634090 -256.84841919]
[3.86500573 -264.94458008]
[6.20974636 -271.95043945]
[4.46835279 -286.84902954]
[2.72695899 -301.74758911]
[0.98556536 -316.64617920]
[-10.65639210 -327.68447876]
[-9.14142895 -343.65585327]
[4.36830664 -352.30841064]
[19.50930023 -347.00463867]
[24.66667747 -331.81317139]
[15.88414097 -318.38757324]
[17.62553406 -303.48898315]
[19.36692810 -288.59042358]
[21.10832214 -273.69183350]
[22.95801353 -258.80633545]
[24.91590691 -243.93464661]
[26.87380028 -229.06297302]
[35.29768372 -225.22909546]
[42.63682175 -219.86224365]
[48.62467194 -213.23873901]
[53.06073761 -205.67834473]
[55.81690979 -197.52922058]
[56.84054947 -189.15202332]
[56.15415192 -180.90411377]
[53.85180283 -173.12426758]
[50.09261703 -166.11878967]
[45.09156418 -160.14947510]
[39.10816956 -155.42391968]
[32.43363953 -152.08848572]
[36.31592560 -137.59959412]
[40.19821167 -123.11071014]
[44.08049774 -108.62182617]
[47.96278381 -94.13293457]
[51.84506989 -79.64405060]
[55.72735596 -65.15516663]
[59.60964203 -50.66627502]
[63.49192810 -36.17738724]
[67.37421417 -21.68850136]
[71.25650024 -7.19961357]
[75.66293335 7.13856411]
[80.58769226 21.30707741]
[85.51244354 35.47558975]
[90.43720245 49.64410400]
[95.36196136 63.81261444]
[115.21392822 63.89995575]
[133.43978882 74.80902863]
[144.24133301 94.69670105]
[143.38955688 118.70488739]
[158.12222290 115.88558960]
[172.85490417 113.06629944]
[187.58757019 110.24700928]
[202.32023621 107.42771912]
[217.05291748 104.60842896]
[231.78558350 101.78913879]
[246.51824951 98.96984863]
[261.25091553 96.15055084]
[269.91815186 82.93485260]
[285.40850830 79.80044556]
[298.53182983 88.60691833]
[301.50228882 104.12954712]
[292.55755615 117.15902710]
[277.00439453 119.96520233]
[264.07022095 110.88322449]
[249.33753967 113.70251465]
[234.60487366 116.52180481]
[219.87220764 119.34110260]
[205.13952637 122.16039276]
[190.40686035 124.97968292]
[175.67419434 127.79897308]
[160.94151306 130.61827087]
[146.20884705 133.43756104]
[141.49067688 147.67619324]
[151.62452698 158.73535156]
[161.75837708 169.79450989]
[171.89224243 180.85366821]
[182.02609253 191.91284180]
[198.80601501 189.77015686]
[213.41096497 197.97111511]
[220.18074036 213.11012268]
[216.62753296 229.13850403]
[226.92115784 240.04910278]
[237.21478271 250.95971680]
[247.58747864 261.79516602]
[258.03869629 272.55490112]
[275.86730957 277.16854858]
[279.49136353 294.34088135]
[290.09799194 304.94750977]
[300.78143311 315.47668457]
[311.54116821 325.92791748]
[327.33816528 325.44747925]
[338.79061890 336.33859253]
[339.10400391 352.13977051]
[328.09240723 363.47644043]
[312.28878784 363.62277222]
[301.06918335 352.49191284]
[301.08996582 336.68765259]
[290.33020020 326.23641968]
[283.34469604 323.83172607]
[279.49136353 315.55410767]
[268.88476562 304.94750977]
[256.79461670 304.63464355]
[247.87144470 295.88821411]
[247.27894592 283.00613403]
[236.82772827 272.24639893]
[229.91511536 269.63955688]
[226.30416870 261.25332642]
[216.01054382 250.34272766]
[205.71691895 239.43212891]
[192.69277954 242.35752869]
[179.82031250 238.43484497]
[170.49212646 228.58610535]
[167.22172546 215.30963135]
[170.96693420 202.04669189]
[160.83306885 190.98753357]
[150.69921875 179.92837524]
[140.56536865 168.86920166]
[130.43151855 157.81004333]
[122.93469238 157.59191895]
[126.52593994 172.15567017]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 47]
[9 46]
[10 45]
[11 44]
[12 43]
[13 42]
[14 41]
[18 40]
[19 39]
[20 38]
[23 35]
[24 34]
[25 33]
[26 32]
[53 140]
[54 139]
[55 138]
[56 137]
[57 136]
[63 135]
[64 134]
[65 133]
[66 132]
[67 131]
[68 130]
[69 129]
[70 128]
[71 127]
[72 126]
[73 125]
[76 87]
[77 86]
[78 85]
[94 113]
[95 112]
[96 111]
[98 110]
[99 109]
[100 108]
[101 107]
[144 167]
[145 166]
[146 165]
[147 164]
[148 163]
[149 162]
[150 161]
[151 160]
[152 159]
[168 213]
[169 212]
[170 211]
[171 210]
[172 209]
[176 204]
[177 203]
[178 202]
[179 200]
[180 199]
[182 196]
[183 195]
[184 193]
[185 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
