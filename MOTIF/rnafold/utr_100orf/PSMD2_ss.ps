%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:20:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCCGAGGGGGUGGGUGGGUCGCCGAGCGCCCCGGCUCGCCCCGGCGUUUCCGGUCGCAGGCGGGCUCUGGAGGAGGAGGGGCGCCGCGACCGACGCGCGCGAGUUGGUCUGGGAAAAAGGGCGGUGCGAGCGGGUGCGCGCGCAGCGGGCCGGCAGUGGCGGCGGAGAUGGAGGAGGGAGGCCGGGACAAGGCGCCGGUGCAGCCCCAGCAGUCUCCAGCGGCGGCCCCCGGCGGCACGGACGAGAAGCCGAG\
CGGCAAGGAGCGGC\
) } def
/len { sequence length } bind def

/coor [
[442.98367310 741.27838135]
[444.23278809 734.03369141]
[447.93118286 727.60174561]
[440.88909912 714.35754395]
[433.84704590 701.11334229]
[426.80496216 687.86914062]
[412.53045654 683.77349854]
[405.20013428 670.44232178]
[409.59274292 655.49768066]
[402.55068970 642.25347900]
[395.50860596 629.00927734]
[388.46652222 615.76501465]
[373.71594238 613.87872314]
[362.77511597 603.54614258]
[359.98376465 588.57745361]
[366.61837769 574.67462158]
[359.57629395 561.43041992]
[352.38058472 548.26904297]
[345.03225708 535.19226074]
[337.68389893 522.11547852]
[330.33557129 509.03872681]
[322.83557129 496.04833984]
[315.18490601 483.14608765]
[307.53427124 470.24386597]
[299.88363647 457.34161377]
[292.23300171 444.43939209]
[286.14013672 440.30368042]
[284.56939697 431.34222412]
[277.06939697 418.35183716]
[269.56939697 405.36145020]
[262.06939697 392.37106323]
[254.56941223 379.38070679]
[246.69476318 366.61395264]
[238.45213318 354.08163452]
[230.20948792 341.54931641]
[221.96685791 329.01699829]
[213.72422791 316.48468018]
[205.48158264 303.95236206]
[190.88819885 301.20129395]
[182.35046387 288.60916138]
[185.33497620 273.32092285]
[177.09234619 260.78860474]
[168.77693176 248.30445862]
[160.38903809 235.86888123]
[145.76461792 233.28781128]
[137.08096313 220.79586792]
[139.88739014 205.47393799]
[131.49949646 193.03837585]
[123.11159515 180.60281372]
[114.72370911 168.16723633]
[106.33581543 155.73167419]
[97.94792175 143.29611206]
[89.56002808 130.86054993]
[76.83930206 122.91176605]
[61.98528290 120.82416534]
[47.13125992 118.73657227]
[32.27724075 116.64897156]
[17.42321968 114.56137848]
[2.56919813 112.47377777]
[-6.32812929 114.37446594]
[-12.44511604 110.27450562]
[-27.27384186 108.01422119]
[-42.10256577 105.75393677]
[-56.93129349 103.49365234]
[-70.85107422 114.11683655]
[-87.81027222 111.42137146]
[-97.36614227 97.56274414]
[-112.22016144 95.47514343]
[-127.07418060 93.38755035]
[-141.92820740 91.29994965]
[-154.39764404 101.01017761]
[-170.07051086 98.97623444]
[-179.64836121 86.40482330]
[-177.44882202 70.75434113]
[-164.77685547 61.30994415]
[-149.15049744 63.67481613]
[-139.84060669 76.44593048]
[-124.98658752 78.53353119]
[-110.13256836 80.62112427]
[-95.27854156 82.70871735]
[-86.19216156 73.60183716]
[-73.32939148 71.34665680]
[-61.33496475 76.98447418]
[-54.67100906 88.66492462]
[-39.84228134 90.92520905]
[-25.01355553 93.18549347]
[-10.18482971 95.44578552]
[4.65679455 97.61975861]
[19.51081657 99.70735931]
[34.36483765 101.79495239]
[49.21885681 103.88255310]
[64.07287598 105.97014618]
[78.92690277 108.05773926]
[79.05242920 98.02084351]
[83.39524078 89.73662567]
[90.47267914 84.72766113]
[88.55805969 69.85034943]
[86.64343262 54.97304535]
[82.45764923 46.89503860]
[84.79412079 39.91162491]
[83.05272675 25.01304817]
[81.31133270 10.11447334]
[71.71056366 1.53609121]
[70.54965210 -10.88435078]
[77.90738678 -20.45783615]
[76.33945465 -35.37566376]
[74.77153015 -50.29349518]
[73.20360565 -65.21131897]
[71.63567352 -80.12915039]
[70.06774902 -95.04698181]
[68.49982452 -109.96480560]
[62.09709930 -96.39995575]
[50.48566055 -86.90393829]
[35.91998291 -83.32049561]
[21.22814751 -86.34539032]
[9.26272964 -95.39131927]
[2.34693885 -108.70190430]
[1.82354784 -123.69277191]
[7.79417896 -137.45327759]
[19.09957123 -147.31167603]
[33.54466629 -151.35386658]
[48.32479477 -148.79499817]
[60.57024002 -140.13192749]
[67.90329742 -127.04708862]
[68.42678833 -142.03794861]
[61.17581940 -156.09974670]
[69.35258484 -168.54924011]
[69.87607574 -183.54010010]
[70.39956665 -198.53096008]
[70.92305756 -213.52182007]
[63.67209244 -227.58361816]
[71.84885406 -240.03311157]
[72.37234497 -255.02397156]
[72.89583588 -270.01483154]
[64.72335052 -284.23251343]
[73.18292236 -298.28128052]
[89.57208252 -297.70895386]
[97.03105927 -283.10430908]
[87.88670349 -269.49133301]
[87.36320496 -254.50047302]
[86.83971405 -239.50961304]
[94.12812805 -226.52006531]
[85.91392517 -212.99833679]
[85.39042664 -198.00746155]
[84.86693573 -183.01660156]
[84.34344482 -168.02574158]
[91.63185883 -155.03619385]
[83.41764832 -141.51446533]
[82.89415741 -126.52359772]
[83.41764832 -111.53273773]
[84.98558044 -96.61490631]
[86.55350494 -81.69707489]
[88.12142944 -66.77925110]
[89.68936157 -51.86141968]
[91.25728607 -36.94359207]
[92.82521057 -22.02576447]
[103.88677216 -8.38253021]
[96.20990753 8.37307930]
[97.95130157 23.27165413]
[99.69269562 38.17023087]
[101.52073669 53.05842209]
[103.43536377 67.93572998]
[105.34999084 82.81303406]
[118.32413483 93.27088165]
[117.76924133 111.26818085]
[101.99559021 122.47265625]
[110.38348389 134.90821838]
[118.77137756 147.34378052]
[127.15927124 159.77934265]
[135.54716492 172.21492004]
[143.93505859 184.65048218]
[152.32295227 197.08604431]
[167.58050537 200.22366333]
[175.90988159 212.95457458]
[172.82460022 227.48098755]
[181.21249390 239.91656494]
[188.57846069 245.25675964]
[189.62466431 252.54597473]
[197.86729431 265.07827759]
[213.08731079 268.39321899]
[221.26799011 281.22018433]
[218.01390076 295.70971680]
[226.25654602 308.24203491]
[234.49917603 320.77435303]
[242.74180603 333.30667114]
[250.98445129 345.83898926]
[259.22708130 358.37130737]
[264.57934570 344.35870361]
[278.83520508 339.69281006]
[291.43676758 347.82919312]
[293.05130005 362.74206543]
[282.48309326 373.38690186]
[267.55978394 371.88070679]
[275.05978394 384.87106323]
[282.55978394 397.86145020]
[290.05978394 410.85183716]
[297.55978394 423.84222412]
[305.13525391 436.78875732]
[312.78588867 449.69097900]
[320.43652344 462.59323120]
[328.08715820 475.49545288]
[335.73779297 488.39770508]
[341.25665283 491.93328857]
[343.80508423 496.96298218]
[343.41232300 501.69036865]
[350.76068115 514.76715088]
[358.10900879 527.84393311]
[365.45736694 540.92065430]
[370.89245605 544.58374023]
[373.32318115 549.67132568]
[372.82049561 554.38830566]
[379.86257935 567.63250732]
[395.09854126 569.90655518]
[405.94726562 580.59106445]
[408.39532471 595.43933105]
[401.71075439 608.72296143]
[408.75280762 621.96716309]
[415.79489136 635.21136475]
[422.83697510 648.45562744]
[437.68298340 653.17089844]
[444.63595581 666.70269775]
[440.04916382 680.82708740]
[447.09124756 694.07128906]
[454.13333130 707.31549072]
[461.17538452 720.55969238]
[481.75860596 731.26794434]
[479.97412109 753.64776611]
[487.77435303 766.46014404]
[501.55953979 774.22412109]
[501.56906128 789.11871338]
[509.36929321 801.93109131]
[524.46435547 805.77514648]
[532.19238281 818.87982178]
[528.43463135 833.24694824]
[536.23486328 846.05932617]
[550.02001953 853.82330322]
[550.02954102 868.71789551]
[557.82977295 881.53021240]
[571.61499023 889.29418945]
[571.62451172 904.18884277]
[579.42474365 917.00115967]
[587.22497559 929.81353760]
[602.70098877 930.94171143]
[614.53643799 940.97668457]
[618.18041992 956.05981445]
[612.23168945 970.39135742]
[598.97772217 978.46044922]
[583.51483154 977.16448975]
[571.78894043 967.00170898]
[568.30877686 951.87988281]
[574.41265869 937.61376953]
[566.61236572 924.80139160]
[558.81213379 911.98907471]
[545.58489990 905.14147949]
[545.01745605 889.33050537]
[537.21722412 876.51812744]
[523.98992920 869.67059326]
[523.42248535 853.85955811]
[515.62225342 841.04718018]
[501.13375854 837.78851318]
[493.04071045 824.90606689]
[496.55694580 809.73132324]
[488.75671387 796.91894531]
[475.52944946 790.07141113]
[474.96200562 774.26037598]
[467.16177368 761.44805908]
[460.15008545 761.54638672]
[453.46835327 759.20465088]
[447.94732666 754.66455078]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 225]
[4 224]
[5 223]
[6 222]
[9 219]
[10 218]
[11 217]
[12 216]
[16 212]
[17 211]
[18 208]
[19 207]
[20 206]
[21 205]
[22 202]
[23 201]
[24 200]
[25 199]
[26 198]
[28 197]
[29 196]
[30 195]
[31 194]
[32 193]
[33 187]
[34 186]
[35 185]
[36 184]
[37 183]
[38 182]
[41 179]
[42 178]
[43 176]
[44 175]
[47 172]
[48 171]
[49 170]
[50 169]
[51 168]
[52 167]
[53 166]
[54 93]
[55 92]
[56 91]
[57 90]
[58 89]
[59 88]
[61 87]
[62 86]
[63 85]
[64 84]
[67 80]
[68 79]
[69 78]
[70 77]
[96 163]
[97 162]
[98 161]
[100 160]
[101 159]
[102 158]
[105 156]
[106 155]
[107 154]
[108 153]
[109 152]
[110 151]
[111 150]
[124 149]
[125 148]
[127 146]
[128 145]
[129 144]
[130 143]
[132 141]
[133 140]
[134 139]
[227 266]
[228 265]
[230 263]
[231 262]
[234 259]
[235 258]
[237 256]
[238 255]
[240 253]
[241 252]
[242 251]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
