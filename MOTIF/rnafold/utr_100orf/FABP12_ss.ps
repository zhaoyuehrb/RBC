%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:12:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCCCAUACUACUUCAGGGAAAACCAGCAUACACAUGAAACUACUGUUCUUUGAGAUCAACUUAUCUCAGACAGAAUGAUUGACCAGCUCCAAGGAACAUGGAAGUCCAUUUCUUGUGAAAAUUCCGAAGACUACAUGAAGGAGCUGGGUAUAGGAAGAGCCAGCAGGAAACUGG\
) } def
/len { sequence length } bind def

/coor [
[157.29420471 237.42051697]
[152.55722046 223.18812561]
[147.82022095 208.95573425]
[143.08322144 194.72334290]
[131.72261047 185.09082031]
[134.70587158 169.55342102]
[129.96887207 155.32102966]
[125.23188019 141.08863831]
[120.49488831 126.85624695]
[113.16629028 125.26200867]
[110.50002289 140.02314758]
[111.53554535 154.98735046]
[97.74197388 160.88119507]
[87.64400482 149.78926086]
[94.80240631 136.60833740]
[98.50908661 122.07353210]
[91.18048096 120.47929382]
[80.95921326 131.45770264]
[80.09256744 147.47734070]
[66.94448090 156.67012024]
[51.60103989 151.98414612]
[45.83241653 137.01409912]
[54.06380844 123.24370575]
[69.98079681 121.23644257]
[80.20206451 110.25802612]
[75.86983490 104.13578796]
[67.20536804 91.89131927]
[62.87313461 85.76908112]
[49.11960602 91.75577545]
[35.36608124 97.74246979]
[26.05711365 111.24340057]
[9.73434162 109.66252899]
[3.18923187 94.62612152]
[13.15483284 81.60234070]
[29.37938690 83.98893738]
[43.13291550 78.00225067]
[56.88644409 72.01555634]
[57.35469818 64.53018951]
[42.38396454 63.59367371]
[27.41324043 62.65692902]
[28.35021782 47.68622208]
[43.32047653 48.62293625]
[58.29121399 49.55945206]
[58.75946808 42.07408142]
[45.85925674 34.42003250]
[32.95904160 26.76598167]
[20.05882835 19.11193085]
[7.15861464 11.45788002]
[1.87433767 11.40016460]
[-2.41682100 9.49372864]
[-5.17312050 6.43454885]
[-6.21156597 3.03304291]
[-18.68360901 -5.30051088]
[-31.15565491 -13.63406372]
[-43.62769699 -21.96761703]
[-56.09974289 -30.30117035]
[-68.57178497 -38.63472366]
[-84.02155304 -35.30603027]
[-97.25444031 -43.94700241]
[-100.41960144 -59.43109894]
[-91.63920593 -72.57188416]
[-76.12251282 -75.57316589]
[-63.07529068 -66.65432739]
[-60.23823166 -51.10676956]
[-47.76618958 -42.77321625]
[-35.29414368 -34.43966293]
[-22.82209969 -26.10610771]
[-10.35005665 -17.77255440]
[2.12198782 -9.43900108]
[14.81266499 -1.44233310]
[27.71287918 6.21171713]
[40.61309433 13.86576748]
[53.51330566 21.51981926]
[66.41352081 29.17386818]
[78.21836853 19.91938210]
[92.35506439 14.90402794]
[107.35290527 14.64957905]
[121.65159607 19.18250656]
[133.76358032 28.03122902]
[142.42878723 40.27517319]
[146.74574280 54.64054489]
[146.26533508 69.63285065]
[141.03752136 83.69236755]
[131.60794067 95.35488129]
[144.22674561 87.24526978]
[156.84555054 79.13565826]
[169.46434021 71.02604675]
[182.08314514 62.91643524]
[194.70195007 54.80681992]
[207.32075500 46.69720840]
[219.93955994 38.58759689]
[219.16535950 28.84349823]
[221.99421692 19.54763794]
[227.99298096 11.97758102]
[236.29592896 7.15740538]
[245.72956848 5.71924877]
[254.97842407 7.82068825]
[262.76846313 13.12869167]
[275.93365479 5.93995714]
[289.09884644 -1.24877751]
[302.26403809 -8.43751240]
[306.65130615 -20.58907890]
[317.79110718 -26.29928017]
[329.44583130 -22.98503685]
[342.73724365 -29.93764114]
[356.02865601 -36.89024734]
[369.32003784 -43.84284973]
[374.13613892 -65.78158569]
[393.31680298 -76.93495178]
[414.24389648 -70.43144989]
[426.71594238 -78.76499939]
[439.18798828 -87.09855652]
[451.66003418 -95.43210602]
[458.42395020 -110.37136841]
[474.76806641 -111.71377563]
[483.87893677 -98.07838440]
[476.38409424 -83.49211121]
[459.99356079 -82.96006775]
[447.52154541 -74.62651062]
[435.04949951 -66.29296112]
[422.57745361 -57.95940399]
[423.96627808 -49.97775650]
[422.93167114 -41.90839767]
[419.54605103 -34.47373962]
[414.09326172 -28.34529877]
[407.04486084 -24.08306313]
[399.01925659 -22.08436012]
[390.72756958 -22.54687881]
[382.91061401 -25.44930458]
[376.27264404 -30.55145073]
[362.98126221 -23.59884644]
[349.68984985 -16.64624214]
[336.39843750 -9.69363785]
[327.83099365 5.60611725]
[309.45275879 4.72767258]
[296.28756714 11.91640759]
[283.12240601 19.10514259]
[269.95721436 26.29387665]
[265.92300415 46.30400085]
[248.21931458 57.04035568]
[228.04916382 51.20640182]
[215.43037415 59.31601334]
[202.81156921 67.42562103]
[190.19276428 75.53524017]
[177.57395935 83.64485168]
[164.95515442 91.75446320]
[152.33634949 99.86407471]
[139.71754456 107.97368622]
[134.72727966 122.11925507]
[139.46426392 136.35163879]
[144.20126343 150.58403015]
[148.93826294 164.81642151]
[160.63769531 175.46694946]
[157.31561279 189.98634338]
[162.05261230 204.21873474]
[166.78959656 218.45112610]
[171.52659607 232.68351746]
[181.55430603 237.00108337]
[187.41453552 245.95089722]
[187.36439514 256.42852783]
[181.66307068 264.95593262]
[185.88905334 279.34832764]
[190.11503601 293.74072266]
[194.34103394 308.13311768]
[208.73834229 314.23651123]
[215.79801941 328.18981934]
[212.18672180 343.40469360]
[199.60958862 352.69714355]
[184.00514221 351.67956543]
[172.74134827 340.83239746]
[171.13661194 325.27737427]
[179.94863892 312.35910034]
[175.72264099 297.96670532]
[171.49665833 283.57431030]
[167.27067566 269.18191528]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 157]
[2 156]
[3 155]
[4 154]
[6 152]
[7 151]
[8 150]
[9 149]
[17 25]
[18 24]
[28 37]
[29 36]
[30 35]
[44 74]
[45 73]
[46 72]
[47 71]
[48 70]
[52 69]
[53 68]
[54 67]
[55 66]
[56 65]
[57 64]
[84 148]
[85 147]
[86 146]
[87 145]
[88 144]
[89 143]
[90 142]
[91 141]
[98 138]
[99 137]
[100 136]
[101 135]
[104 133]
[105 132]
[106 131]
[107 130]
[110 121]
[111 120]
[112 119]
[113 118]
[161 175]
[162 174]
[163 173]
[164 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
