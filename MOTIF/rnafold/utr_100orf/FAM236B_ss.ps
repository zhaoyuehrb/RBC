%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:41:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCCUCGGCCUCUUUGCACCCGGCAGAGUGACGAGCUUCGCCGGUGUCUUCAACGAAGUCCUGUCGGUCCCUACCGGCACAUCACACACUCCUGGAAGCAUGAUCUUCACUCCCUUCCUUCCACCUGCUGACCUGUCUGUCUUUCAGAAUGUGAAAGGGCUGCAAAACGACCCUGAGGAAUGGGUGGCUGUGUCUGACG\
) } def
/len { sequence length } bind def

/coor [
[138.28433228 322.70843506]
[135.94940186 307.89129639]
[133.61445618 293.07412720]
[131.27952576 278.25698853]
[128.82885742 263.45852661]
[126.26262665 248.67967224]
[123.69639587 233.90081787]
[121.13016510 219.12196350]
[109.17485809 206.27996826]
[115.65069580 189.04606628]
[112.85379791 174.30912781]
[110.05689240 159.57218933]
[107.25999451 144.83525085]
[94.82066345 148.21063232]
[81.13655853 147.98207092]
[67.28464508 143.74548340]
[54.46128845 135.42422485]
[41.71166229 143.32656860]
[28.96203613 151.22891235]
[16.21240997 159.13125610]
[3.46278501 167.03359985]
[-2.18854237 174.22052002]
[-9.54843807 174.95802307]
[-22.42001343 182.66014099]
[-35.29158783 190.36224365]
[-43.16068268 204.08769226]
[-58.05492401 203.98341370]
[-70.92649841 211.68551636]
[-83.79807281 219.38763428]
[-96.66964722 227.08975220]
[-101.95798492 242.23612976]
[-117.14420319 247.40898132]
[-130.57873535 238.64012146]
[-131.95576477 222.65628052]
[-120.21894073 211.71888733]
[-104.37176514 214.21817017]
[-91.50018311 206.51605225]
[-78.62860870 198.81394958]
[-65.75703430 191.11183167]
[-58.80860519 177.93728638]
[-42.99370193 177.49067688]
[-30.12212753 169.78855896]
[-17.25055122 162.08644104]
[-4.43955946 154.28398132]
[8.31006622 146.38163757]
[21.05969238 138.47929382]
[33.80931854 130.57695007]
[46.55894470 122.67460632]
[43.30281448 108.03227997]
[28.40575600 106.27795410]
[13.50869751 104.52362061]
[-1.38836014 102.76929474]
[-17.82594299 106.92166901]
[-26.36641693 92.27596283]
[-14.65730953 80.01491547]
[0.36596969 87.87223816]
[15.26302719 89.62656403]
[30.16008568 91.38089752]
[45.05714417 93.13522339]
[47.91372681 86.20053101]
[38.75904846 74.31811523]
[53.62689209 72.33115387]
[56.48347473 65.39646149]
[44.67294312 56.14922714]
[32.86240768 46.90199280]
[21.05187607 37.65476227]
[9.24134445 28.40752792]
[-2.56918764 19.16029358]
[-14.37971973 9.91306019]
[-30.68390656 8.15081215]
[-37.06143570 -6.95743561]
[-26.95165443 -19.86961365]
[-10.75463581 -17.30277824]
[-5.13248634 -1.89747226]
[6.67804623 7.34976149]
[18.48857880 16.59699440]
[30.29911041 25.84422874]
[42.10964203 35.09146118]
[53.92017365 44.33869553]
[65.73070526 53.58592987]
[84.98017883 50.33151245]
[102.24248505 53.96939850]
[115.35205078 62.75972366]
[123.55110931 50.19885254]
[131.75016785 37.63798523]
[139.94921875 25.07711220]
[148.14828491 12.51624203]
[143.41471863 2.93926001]
[143.09037781 -7.65791035]
[147.16677856 -17.35746193]
[154.84512329 -24.43190384]
[164.69180298 -27.65165901]
[174.90582275 -26.49843788]
[183.68463135 -38.66119385]
[192.46342468 -50.82395172]
[201.24223328 -62.98670959]
[210.02104187 -75.14946747]
[218.79983521 -87.31221771]
[227.57864380 -99.47497559]
[236.26211548 -111.70597076]
[244.84976196 -124.00444031]
[247.19998169 -132.83992004]
[253.66896057 -136.42660522]
[262.44775391 -148.58935547]
[271.22656250 -160.75210571]
[268.11868286 -177.96330261]
[278.21792603 -191.82661438]
[294.88369751 -194.05548096]
[303.47134399 -206.35395813]
[312.05895996 -218.65243530]
[302.75439453 -230.56529236]
[297.37612915 -244.69207764]
[296.40240479 -259.77661133]
[299.91979980 -274.47760010]
[307.61557007 -287.48785400]
[318.80538940 -297.65051270]
[332.49426270 -304.06188965]
[347.46502686 -306.15191650]
[362.38644409 -303.73474121]
[375.93173218 -297.02529907]
[386.89645386 -286.62017822]
[394.30560303 -273.44461060]
[397.50042725 -258.67016602]
[396.19680786 -243.61054993]
[390.51065063 -229.60485840]
[380.94757080 -217.89849854]
[368.35791016 -209.53236389]
[353.86117554 -205.25036621]
[338.74633789 -205.43327332]
[324.35745239 -210.06480408]
[315.76980591 -197.76632690]
[307.18218994 -185.46784973]
[311.18945312 -173.21662903]
[307.34902954 -160.70832825]
[296.84960938 -152.57815552]
[283.38931274 -151.97331238]
[274.61050415 -139.81056213]
[265.83172607 -127.64779663]
[257.14822388 -115.41680908]
[248.56059265 -103.11833191]
[247.30769348 -95.82846069]
[239.74139404 -90.69617462]
[230.96258545 -78.53341675]
[222.18379211 -66.37066650]
[213.40498352 -54.20790863]
[204.62619019 -42.04515076]
[195.84738159 -29.88239479]
[187.06858826 -17.71963692]
[191.58645630 1.22339749]
[180.55690002 17.64199066]
[160.70915222 20.71529961]
[152.51008606 33.27616882]
[144.31103516 45.83703995]
[136.11198425 58.39791107]
[127.91291809 70.95877838]
[142.17468262 92.42301178]
[140.90386963 119.74288940]
[154.23150635 126.62575531]
[167.55915833 133.50862122]
[180.88679504 140.39149475]
[196.69871521 139.84915161]
[204.45669556 152.56381226]
[217.78433228 159.44668579]
[233.44441223 155.96217346]
[245.84164429 166.14489746]
[245.46595764 182.18356323]
[232.60552979 191.77465820]
[217.12579346 187.56072998]
[210.90147400 172.77433777]
[197.57382202 165.89146423]
[182.71519470 166.92611694]
[174.00393677 153.71913147]
[160.67628479 146.83627319]
[147.34864807 139.95339966]
[134.02099609 133.07054138]
[121.99693298 142.03836060]
[124.79383087 156.77529907]
[127.59073639 171.51223755]
[130.38763428 186.24917603]
[140.59336853 194.14488220]
[142.61599731 206.48272705]
[135.90901184 216.55574036]
[138.47525024 231.33459473]
[141.04147339 246.11343384]
[143.60771179 260.89230347]
[148.16253662 268.81964111]
[146.09667969 275.92202759]
[148.43161011 290.73919678]
[150.76655579 305.55633545]
[153.10148621 320.37350464]
[167.61621094 325.22958374]
[178.20324707 336.28277588]
[182.42977905 350.99316406]
[179.32458496 365.98034668]
[169.60121155 377.80044556]
[155.49401855 383.73727417]
[140.24473572 382.42654419]
[127.35753632 374.16949463]
[119.79380798 360.86355591]
[119.29163361 345.56628418]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 190]
[2 189]
[3 188]
[4 187]
[5 185]
[6 184]
[7 183]
[8 182]
[10 179]
[11 178]
[12 177]
[13 176]
[17 48]
[18 47]
[19 46]
[20 45]
[21 44]
[23 43]
[24 42]
[25 41]
[27 39]
[28 38]
[29 37]
[30 36]
[49 59]
[50 58]
[51 57]
[52 56]
[63 80]
[64 79]
[65 78]
[66 77]
[67 76]
[68 75]
[69 74]
[83 155]
[84 154]
[85 153]
[86 152]
[87 151]
[93 148]
[94 147]
[95 146]
[96 145]
[97 144]
[98 143]
[99 142]
[100 140]
[101 139]
[103 138]
[104 137]
[105 136]
[108 132]
[109 131]
[110 130]
[157 175]
[158 174]
[159 173]
[160 172]
[162 170]
[163 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
