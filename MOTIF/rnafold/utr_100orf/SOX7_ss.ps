%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:24:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCAUUGGAGGACGCGGCCGCCCGAAGCUGAUAAAUCAGGGGCCGGGUCGCGGCUGCGGGCCAAGUUGGACGCCCCGACCCGUGCGAGGGCCAGGUCCGCGCCUGCCCCGCCAGGCGAAGCGAGGCGACCCGCGUGCGGCCAUGGCUUCGCUGCUGGGAGCCUACCCUUGGCCCGAGGGUCUCGAGUGCCCGGCCCUGGACGCCGAGCUGUCGGAUGGACAAUCGCCGCCGGCCGUCCCCC\
) } def
/len { sequence length } bind def

/coor [
[104.83682251 345.00543213]
[91.73609161 353.32110596]
[76.25169373 352.31463623]
[64.33769226 342.37298584]
[60.57526779 327.31896973]
[66.41114807 312.94113159]
[79.60131836 304.76806641]
[80.57426453 289.79965210]
[77.87741852 282.93545532]
[81.65824127 274.64361572]
[82.82542419 259.68911743]
[83.99260712 244.73458862]
[85.15978241 229.78005981]
[86.32696533 214.82554626]
[87.29991150 199.85713196]
[88.07847595 184.87734985]
[88.85703278 169.89756775]
[89.63558960 154.91778564]
[82.56931305 141.80607605]
[91.01245880 128.42610168]
[91.79102325 113.44631958]
[85.07347107 110.11097717]
[78.40277863 123.54607391]
[71.73186493 136.98106384]
[58.29698944 130.30992126]
[64.96768188 116.87538147]
[71.63837433 103.44028473]
[64.92082214 100.10494232]
[53.45801926 109.77986145]
[41.99521255 119.45478821]
[30.53240967 129.12971497]
[25.48006630 144.73117065]
[9.38829136 147.89137268]
[-1.18907392 135.35935974]
[4.62905550 120.02700043]
[20.85748672 117.66690063]
[32.32028961 107.99198151]
[43.78309631 98.31706238]
[55.24589920 88.64213562]
[61.03109741 74.80264282]
[59.86391449 59.84812546]
[58.69673538 44.89360428]
[57.52955627 29.93908310]
[56.36237717 14.98456287]
[55.19519806 0.03004173]
[54.02801514 -14.92447948]
[52.86083603 -29.87899971]
[51.69365692 -44.83351898]
[50.23551178 -59.76247787]
[48.48695374 -74.66021729]
[39.19371033 -87.46436310]
[45.39463806 -101.00680542]
[43.64608383 -115.90454102]
[41.89752579 -130.80227661]
[40.14896774 -145.70001221]
[28.80712891 -160.21890259]
[36.39881897 -176.05062866]
[34.45701599 -190.92440796]
[32.51521301 -205.79818726]
[30.57340813 -220.67196655]
[28.63160515 -235.54576111]
[26.68980217 -250.41954041]
[24.74799919 -265.29333496]
[22.80619431 -280.16711426]
[20.86439133 -295.04089355]
[17.17404366 -300.48605347]
[16.82425880 -306.13214111]
[19.07043648 -310.32540894]
[17.51542091 -325.24459839]
[3.72626901 -336.02542114]
[2.04407954 -353.10806274]
[13.02451706 -365.85891724]
[11.27595997 -380.75665283]
[9.43074131 -395.64270020]
[7.48893785 -410.51647949]
[5.54713440 -425.39028931]
[3.60533118 -440.26406860]
[-5.36508989 -446.36895752]
[-9.42212391 -456.19583130]
[-7.45370150 -466.42019653]
[-0.34380934 -473.72381592]
[-1.89882505 -488.64300537]
[-5.89363861 -496.83386230]
[-3.37589908 -503.76577759]
[-4.73711157 -518.70385742]
[-6.09832382 -533.64196777]
[-7.45953655 -548.58007812]
[-8.82074928 -563.51818848]
[-10.18196106 -578.45629883]
[-14.07010937 -586.69836426]
[-11.46259594 -593.59698486]
[-12.62977600 -608.55151367]
[-13.79695606 -623.50604248]
[-15.06117821 -638.45263672]
[-16.42239189 -653.39074707]
[-20.31053925 -661.63281250]
[-17.70302582 -668.53143311]
[-18.87020493 -683.48596191]
[-20.03738594 -698.44042969]
[-21.20456505 -713.39495850]
[-22.37174416 -728.34948730]
[-23.53892517 -743.30401611]
[-32.32658386 -756.46026611]
[-25.60307884 -769.75103760]
[-26.77025795 -784.70556641]
[-39.83049774 -792.87475586]
[-45.50979233 -807.00274658]
[-41.82462692 -821.59326172]
[-30.39145660 -831.10223389]
[-31.55863571 -846.05676270]
[-32.72581482 -861.01129150]
[-33.89299393 -875.96582031]
[-45.62080765 -886.21746826]
[-46.59146118 -901.40008545]
[-36.74581146 -912.51757812]
[-37.91299057 -927.47210693]
[-45.17347336 -942.79272461]
[-32.46147919 -954.01062012]
[-18.16293716 -944.90087891]
[-22.95847130 -928.63928223]
[-21.79129028 -913.68475342]
[-10.33996296 -904.22949219]
[-8.94324398 -889.08007812]
[-18.93847466 -877.13299561]
[-17.77129555 -862.17846680]
[-16.60411453 -847.22393799]
[-15.43693542 -832.26940918]
[-2.66687608 -824.64947510]
[3.23741603 -810.80737305]
[-0.18112345 -795.96936035]
[-11.81573677 -785.87274170]
[-10.64855766 -770.91821289]
[-1.94438171 -758.83160400]
[-8.58440399 -744.47119141]
[-7.41722441 -729.51666260]
[-6.25004435 -714.56213379]
[-5.08286428 -699.60766602]
[-3.91568470 -684.65313721]
[-2.74850464 -669.69860840]
[-1.48428190 -654.75195312]
[-0.12306947 -639.81384277]
[3.60611558 -633.45123291]
[1.15756512 -624.67321777]
[2.32474494 -609.71868896]
[3.49192476 -594.76416016]
[4.75614738 -579.81750488]
[6.11736012 -564.87939453]
[7.47857237 -549.94128418]
[8.83978462 -535.00317383]
[10.20099735 -520.06506348]
[11.56221008 -505.12698364]
[13.02035522 -490.19802856]
[14.57537079 -475.27883911]
[27.03262520 -460.47454834]
[18.47911263 -442.20587158]
[20.42091751 -427.33209229]
[22.36272049 -412.45828247]
[24.30452347 -397.58450317]
[28.27861404 -391.37188721]
[26.17369652 -382.50518799]
[27.92225266 -367.60745239]
[39.04250717 -361.12225342]
[44.48422241 -349.24160767]
[42.06042480 -336.20291138]
[32.43460083 -326.79959106]
[33.98961639 -311.88043213]
[35.73817444 -296.98269653]
[37.67997742 -282.10891724]
[39.62178040 -267.23513794]
[41.56358337 -252.36134338]
[43.50538635 -237.48756409]
[45.44718933 -222.61376953]
[47.38899231 -207.73999023]
[49.33079910 -192.86621094]
[51.27260208 -177.99243164]
[60.65924835 -170.38311768]
[62.40918350 -158.02236938]
[55.04670334 -147.44857788]
[56.79526138 -132.55084229]
[58.54381943 -117.65309906]
[60.29237366 -102.75536346]
[69.46054840 -91.01679993]
[63.38469315 -76.40877533]
[65.13324738 -61.51103592]
[67.63841248 -59.05772781]
[69.08985901 -55.27725983]
[68.88027191 -50.67341995]
[66.64817810 -46.00070190]
[67.81536102 -31.04617882]
[68.98253632 -16.09165955]
[70.14971924 -1.13713813]
[71.31689453 13.81738281]
[72.48407745 28.77190399]
[73.65126038 43.72642517]
[74.81843567 58.68094635]
[75.98561859 73.63546753]
[144.19700623 91.13882446]
[155.53324890 100.96173096]
[171.08152771 100.01882935]
[182.43815613 110.14214325]
[183.24125671 124.97085571]
[194.57749939 134.79376221]
[205.97726440 144.54289246]
[217.44006348 154.21780396]
[228.90286255 163.89273071]
[240.36567688 173.56765747]
[256.59411621 175.92774963]
[262.41223145 191.26011658]
[251.83486938 203.79212952]
[235.74308777 200.63192749]
[230.69075012 185.03045654]
[219.22795105 175.35552979]
[207.76513672 165.68061829]
[196.30233765 156.00569153]
[189.17857361 154.09727478]
[184.75457764 146.13000488]
[173.41833496 136.30709839]
[158.62626648 137.62251282]
[146.98977661 127.82218170]
[145.71034241 112.29798126]
[134.37409973 102.47506714]
[127.47327423 105.41252136]
[125.66029358 120.30255127]
[113.67162323 111.28742218]
[106.77079773 114.22487640]
[105.99224091 129.20466614]
[113.00283051 143.38783264]
[104.61537170 155.69635010]
[103.83680725 170.67613220]
[103.05825043 185.65591431]
[102.27969360 200.63569641]
[104.92506409 206.65820312]
[104.24858856 212.27449036]
[101.28148651 215.99272156]
[100.11430359 230.94725037]
[98.94712830 245.90176392]
[97.77994537 260.85629272]
[96.61276245 275.81082153]
[95.54267883 290.77258301]
[94.56972504 305.74099731]
[106.59087372 315.55282593]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 240]
[8 239]
[10 238]
[11 237]
[12 236]
[13 235]
[14 234]
[15 231]
[16 230]
[17 229]
[18 228]
[20 226]
[21 225]
[28 39]
[29 38]
[30 37]
[31 36]
[40 196]
[41 195]
[42 194]
[43 193]
[44 192]
[45 191]
[46 190]
[47 189]
[48 188]
[49 184]
[50 183]
[52 181]
[53 180]
[54 179]
[55 178]
[57 175]
[58 174]
[59 173]
[60 172]
[61 171]
[62 170]
[63 169]
[64 168]
[65 167]
[68 166]
[69 165]
[72 161]
[73 160]
[74 158]
[75 157]
[76 156]
[77 155]
[81 153]
[82 152]
[84 151]
[85 150]
[86 149]
[87 148]
[88 147]
[89 146]
[91 145]
[92 144]
[93 143]
[94 141]
[95 140]
[97 139]
[98 138]
[99 137]
[100 136]
[101 135]
[102 134]
[104 132]
[105 131]
[109 127]
[110 126]
[111 125]
[112 124]
[115 121]
[116 120]
[197 221]
[198 220]
[201 217]
[202 216]
[203 214]
[204 213]
[205 212]
[206 211]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
