%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:26:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAGGCAGGGGAGCAGAUGAGGGAGGAGCCUUAGAGCUGGAGCAAAGUGAGGAAGCUGUCUCCAUAGGGAAGAGGCCUGAUGUGGACUGUCCGAACUGAAGGAGGGCACUUUCCUCUCCAUAGCCCCACCUUCUCCUGGAGGAAUGUAGCUUUCCUGCUGCUUCUCUCCCUUGCUUUGG\
) } def
/len { sequence length } bind def

/coor [
[94.85836792 344.40872192]
[94.85836792 329.40872192]
[94.85836792 314.40872192]
[94.85836792 299.40872192]
[94.72747040 284.40927124]
[94.46568298 269.41156006]
[94.20389557 254.41384888]
[93.94211578 239.41613770]
[93.68032837 224.41842651]
[93.41854095 209.42070007]
[93.15675354 194.42298889]
[92.89496613 179.42527771]
[92.63318634 164.42755127]
[89.36354065 157.77593994]
[92.50000000 149.16633606]
[92.50000000 134.16633606]
[92.50000000 119.16634369]
[74.67105103 89.42459106]
[113.93090820 68.64048004]
[103.32431030 58.03387833]
[92.71770477 47.42727661]
[82.11110687 36.82067490]
[71.50450134 26.21407318]
[60.89789963 15.60747147]
[50.29129791 5.00087023]
[39.68469620 -5.60573149]
[24.45540428 -9.89282990]
[20.92696190 -24.36346817]
[10.32036018 -34.97006989]
[-0.28624165 -45.57667160]
[-10.89284325 -56.18327332]
[-21.49944496 -66.78987122]
[-37.09464264 -60.99214172]
[-53.59118652 -62.40044403]
[-67.83706665 -70.67588043]
[-77.14013672 -84.17413330]
[-91.86454773 -81.31199646]
[-103.87941742 -70.15068054]
[-119.47109985 -75.23316193]
[-122.60020447 -91.33100891]
[-110.04777527 -101.88414001]
[-94.72667694 -96.03640747]
[-80.00227356 -98.89853668]
[-78.86341095 -107.68715668]
[-75.68752289 -115.96063232]
[-70.65312958 -123.25389099]
[-79.68035126 -135.23342896]
[-88.70758057 -147.21295166]
[-104.10843658 -149.54776001]
[-113.09267426 -161.82530212]
[-110.77188873 -176.49328613]
[-119.79911041 -188.47280884]
[-128.82633972 -200.45234680]
[-140.72955322 -199.78520203]
[-151.36235046 -204.90644836]
[-158.12219238 -214.43373108]
[-159.41712952 -225.92272949]
[-155.03939819 -236.49383545]
[-163.64303589 -248.78111267]
[-172.24668884 -261.06838989]
[-180.85034180 -273.35568237]
[-195.10382080 -280.22216797]
[-196.06585693 -295.08569336]
[-204.66949463 -307.37295532]
[-213.27314758 -319.66024780]
[-227.52662659 -326.52676392]
[-228.48866272 -341.39025879]
[-237.09231567 -353.67755127]
[-245.69595337 -365.96481323]
[-261.30169678 -368.46203613]
[-270.50305176 -381.31158447]
[-267.84097290 -396.89007568]
[-254.89485168 -405.95501709]
[-239.34539795 -403.12841797]
[-230.41781616 -390.08715820]
[-233.40867615 -374.56845093]
[-224.80502319 -362.28118896]
[-216.20138550 -349.99389648]
[-202.56329346 -344.00625610]
[-200.98587036 -328.26388550]
[-192.38221741 -315.97662354]
[-183.77856445 -303.68933105]
[-170.14048767 -297.70169067]
[-168.56304932 -281.95932007]
[-159.95941162 -269.67202759]
[-151.35575867 -257.38476562]
[-142.75212097 -245.09748840]
[-124.58338165 -243.03074646]
[-113.48208618 -228.10122681]
[-116.84680176 -209.47956848]
[-107.81958008 -197.50004578]
[-98.79235077 -185.52050781]
[-84.05289459 -183.70834351]
[-74.72734833 -171.68800354]
[-76.72805023 -156.24018860]
[-67.70082092 -144.26065063]
[-58.67359543 -132.28111267]
[-43.00482559 -136.02345276]
[-27.16163254 -132.82456970]
[-14.08622456 -123.23274994]
[-6.22602749 -108.98767090]
[-5.07564211 -92.70507812]
[-10.89284325 -77.39647675]
[-0.28624165 -66.78987122]
[10.32036018 -56.18327332]
[20.92696190 -45.57667160]
[31.53356361 -34.97006989]
[46.00419998 -31.44162560]
[50.29129791 -16.21233368]
[60.89789963 -5.60573149]
[71.50450134 5.00087023]
[82.11110687 15.60747147]
[92.71770477 26.21407318]
[103.32431030 36.82067490]
[113.93090820 47.42727661]
[124.53751373 58.03387833]
[115.76151276 45.86909866]
[112.89784241 31.14498901]
[116.47475433 16.57770729]
[125.83242035 4.85447788]
[139.24462891 -1.86211634]
[154.23722839 -2.33306575]
[168.04455566 3.52850556]
[178.11953735 14.64131451]
[182.60368347 28.95538139]
[180.66976929 43.83019257]
[172.67456055 56.52179337]
[160.09294128 64.68896484]
[145.24887085 66.82533264]
[160.24658203 67.08711243]
[175.24430847 67.34889984]
[190.24201965 67.61068726]
[205.23973083 67.87247467]
[219.31262207 59.45309448]
[233.50688171 67.66619873]
[233.22067261 84.06285095]
[218.74842834 91.77557373]
[204.97795105 82.87018585]
[189.98022461 82.60840607]
[174.98251343 82.34661865]
[159.98480225 82.08483124]
[144.98709106 81.82304382]
[142.54531860 88.91443634]
[152.38623047 100.23505402]
[137.66180420 103.09721375]
[135.22004700 110.18859863]
[147.19956970 119.21582794]
[159.17910767 128.24305725]
[171.15863037 137.27027893]
[183.13816833 146.29750061]
[198.75180054 143.85005188]
[211.47352600 153.22734070]
[213.75575256 168.86596680]
[204.24450684 181.48783875]
[188.58261108 183.60459900]
[176.06201172 173.96043396]
[174.11094666 158.27703857]
[162.13140869 149.24981689]
[150.15188599 140.22257996]
[138.17234802 131.19535828]
[126.19281769 122.16813660]
[115.96415710 122.32802582]
[107.50000000 119.16634369]
[107.50000000 134.16633606]
[107.50000000 149.16633606]
[107.63089752 164.16577148]
[107.89268494 179.16348267]
[108.15447235 194.16120911]
[108.41625977 209.15892029]
[108.67803955 224.15663147]
[108.93982697 239.15434265]
[109.20161438 254.15206909]
[109.46340179 269.14978027]
[109.72518921 284.14749146]
[113.01142883 292.70104980]
[109.85836792 299.40872192]
[109.85836792 314.40872192]
[109.85836792 329.40872192]
[109.85836792 344.40872192]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 179]
[2 178]
[3 177]
[4 176]
[5 174]
[6 173]
[7 172]
[8 171]
[9 170]
[10 169]
[11 168]
[12 167]
[13 166]
[15 165]
[16 164]
[17 163]
[19 116]
[20 115]
[21 114]
[22 113]
[23 112]
[24 111]
[25 110]
[26 109]
[28 107]
[29 106]
[30 105]
[31 104]
[32 103]
[36 43]
[37 42]
[46 97]
[47 96]
[48 95]
[51 92]
[52 91]
[53 90]
[58 87]
[59 86]
[60 85]
[61 84]
[63 82]
[64 81]
[65 80]
[67 78]
[68 77]
[69 76]
[129 142]
[130 141]
[131 140]
[132 139]
[133 138]
[146 161]
[147 160]
[148 159]
[149 158]
[150 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
