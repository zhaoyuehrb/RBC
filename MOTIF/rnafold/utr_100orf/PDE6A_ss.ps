%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:06:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUAUGUUUUGCAGACAAGACCCAGAGAAGUCCAGACUGGACUUGUUGCAGACUGCAAAACUGCCAUUGGAAGGCCUCCGUCCCAGUCCUUCUACAGAGUAGCCAGUGGGAUUCCCAGCCAUGGGCGAGGUGACAGCAGAGGAGGUGGAGAAGUUCCUGGACUCGAAUAUUGGCUUUGCCAAACAGUACUACAACCUCCACUACCGGGCCAAGCUCAUCU\
) } def
/len { sequence length } bind def

/coor [
[129.77568054 127.46385193]
[125.32181549 141.78736877]
[112.24636841 149.13806152]
[97.69445801 145.49909973]
[89.61804199 132.85902405]
[92.43006134 118.12574005]
[80.20767975 126.82132721]
[67.98529053 135.51692200]
[55.76290512 144.21250916]
[43.54051971 152.90809631]
[31.31813240 161.60368347]
[19.09574699 170.29927063]
[6.87336063 178.99485779]
[-5.34902525 187.69046021]
[-1.97281218 198.30993652]
[-1.44038224 209.42491150]
[-3.77954149 220.28813171]
[-8.82530308 230.17127991]
[-16.23149681 238.41386414]
[-25.49451065 244.46734619]
[-35.98752975 247.93164062]
[-47.00295258 248.58151245]
[-57.80010223 246.38127136]
[-67.65502930 241.48658752]
[-75.90907288 234.23352051]
[-88.71813202 242.03915405]
[-96.47631073 255.82760620]
[-111.37090302 255.84339905]
[-124.17996216 263.64904785]
[-136.98902893 271.45468140]
[-149.79808044 279.26031494]
[-162.60714722 287.06594849]
[-175.41619873 294.87158203]
[-188.22526550 302.67721558]
[-198.60452271 316.08273315]
[-214.35939026 309.82009888]
[-212.70289612 292.94726562]
[-196.03089905 289.86816406]
[-183.22184753 282.06253052]
[-170.41278076 274.25689697]
[-157.60372925 266.45126343]
[-144.79466248 258.64562988]
[-131.98561096 250.83998108]
[-119.17654419 243.03434753]
[-112.33455658 229.80419922]
[-96.52376556 229.23010254]
[-83.71470642 221.42445374]
[-86.53195190 202.58920288]
[-80.80866241 184.37303162]
[-67.65766907 170.46185303]
[-49.69925308 163.69020081]
[-30.53915596 165.46382141]
[-14.04461479 175.46806335]
[-1.82222855 166.77247620]
[10.40015793 158.07688904]
[22.62254333 149.38130188]
[34.84492874 140.68571472]
[47.06731796 131.99012756]
[59.28970337 123.29453278]
[71.51208496 114.59894562]
[83.73447418 105.90335083]
[87.42763519 91.36510468]
[80.83716583 77.89047241]
[74.24669647 64.41584015]
[67.65622711 50.94121170]
[52.97805405 45.72690964]
[46.48633194 31.96783066]
[51.54782867 18.00656891]
[44.95735931 4.53193712]
[38.36688995 -8.94269466]
[23.68871689 -14.15699768]
[17.19699478 -27.91607475]
[22.25849152 -41.87733841]
[15.66802216 -55.35197067]
[5.04480219 -56.18697357]
[-4.20474482 -61.31359100]
[-10.44697285 -69.74983978]
[-12.61128330 -79.93628693]
[-10.37329006 -90.02413940]
[-4.20147371 -98.21074677]
[-10.21148491 -111.95410156]
[-16.22149658 -125.69744873]
[-22.23150826 -139.44081116]
[-28.24151993 -153.18415833]
[-34.25152969 -166.92750549]
[-47.15603256 -167.13580322]
[-58.98130798 -172.18844604]
[-67.98628998 -181.30314636]
[-72.85971069 -193.10240173]
[-72.91094971 -205.82168579]
[-68.16770935 -217.57322693]
[-59.36665726 -226.62623596]
[-64.98355865 -240.53488159]
[-70.60046387 -254.44352722]
[-76.21736145 -268.35217285]
[-87.75491333 -280.77478027]
[-79.01169586 -295.30035400]
[-62.63341522 -290.91992188]
[-62.30871964 -273.96908569]
[-56.69181824 -260.06042480]
[-51.07491302 -246.15177917]
[-45.45801163 -232.24313354]
[-28.32699966 -230.46144104]
[-14.38897610 -220.19229126]
[-7.54093552 -204.19473267]
[-9.75425053 -186.84455872]
[-20.50817680 -172.93753052]
[-14.49816608 -159.19416809]
[-8.48815441 -145.45082092]
[-2.47814322 -131.70745850]
[3.53186822 -117.96411133]
[9.54187965 -104.22075653]
[28.15808487 -98.45960999]
[36.65605927 -80.58381653]
[29.14265442 -61.94244003]
[35.73312378 -48.46780777]
[49.86106873 -43.89213943]
[56.73669434 -30.32082939]
[51.84152222 -15.53316402]
[58.43199158 -2.05853200]
[65.02246094 11.41610050]
[79.15040588 15.99176693]
[86.02603149 29.56307602]
[81.13085938 44.35074234]
[87.72132874 57.82537460]
[94.31179810 71.30000305]
[100.90226746 84.77463531]
[112.61072540 94.15077972]
[127.19999695 97.63690948]
[141.78927612 101.12303925]
[156.37854004 104.60916901]
[170.96781921 108.09529114]
[185.55709839 111.58142090]
[202.10566711 100.17541504]
[221.40660095 104.56101990]
[231.09721375 121.46799469]
[245.82183838 124.32897186]
[256.04232788 115.56327820]
[269.25219727 114.30053711]
[280.61019897 120.77854919]
[286.08300781 132.43907166]
[300.76547241 135.50906372]
[315.85708618 130.75997925]
[326.73138428 140.93833923]
[341.41384888 144.00833130]
[356.09634399 147.07832336]
[370.77880859 150.14831543]
[385.46130371 153.21829224]
[400.14376831 156.28828430]
[414.82623291 159.35827637]
[421.20455933 157.66363525]
[426.66421509 159.20770264]
[429.87973022 162.72987366]
[444.46902466 166.21600342]
[459.05828857 169.70213318]
[470.43222046 163.62989807]
[482.50836182 166.82875061]
[488.95651245 177.05796814]
[503.49475098 180.75112915]
[518.03295898 184.44429016]
[532.59710693 188.03401184]
[547.18640137 191.52014160]
[561.77563477 195.00627136]
[568.20837402 187.76544189]
[576.78308105 183.38740540]
[586.30529785 182.43469238]
[595.46594238 184.99598694]
[603.02075195 190.67973328]
[607.95959473 198.67327881]
[609.64135742 207.85894775]
[624.00891113 212.16856384]
[638.37652588 216.47817993]
[652.74407959 220.78779602]
[667.11169434 225.09741211]
[684.02014160 223.85668945]
[689.89312744 239.76092529]
[676.23620605 249.80709839]
[662.80206299 239.46498108]
[648.43450928 235.15536499]
[634.06689453 230.84576416]
[619.69934082 226.53614807]
[605.33172607 222.22653198]
[588.20190430 233.38928223]
[568.12371826 228.18992615]
[558.28955078 209.59555054]
[543.70025635 206.10942078]
[529.11096191 202.62329102]
[521.88012695 204.12489319]
[514.33984375 198.98252869]
[499.80157471 195.28936768]
[485.26333618 191.59620667]
[468.65002441 197.25967407]
[455.57214355 184.29141235]
[440.98287964 180.80528259]
[426.39361572 177.31915283]
[411.75625610 174.04075623]
[397.07379150 170.97076416]
[382.39129639 167.90077209]
[367.70883179 164.83078003]
[353.02633667 161.76078796]
[338.34387207 158.69079590]
[323.66137695 155.62080383]
[309.61996460 160.58947754]
[297.69549561 150.19154358]
[283.01300049 147.12155151]
[269.34112549 156.92102051]
[252.48065186 153.73406982]
[242.96087646 139.05360413]
[228.23623657 136.19262695]
[221.59646606 144.00450134]
[212.24163818 148.39317322]
[201.82843018 148.50753784]
[192.23184204 144.26004028]
[185.20758057 136.35458374]
[182.07096863 126.17070007]
[167.48168945 122.68457031]
[152.89241028 119.19844055]
[138.30314636 115.71231079]
[123.71386719 112.22618103]
[109.12459564 108.74005890]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 61]
[7 60]
[8 59]
[9 58]
[10 57]
[11 56]
[12 55]
[13 54]
[14 53]
[25 47]
[26 46]
[28 44]
[29 43]
[30 42]
[31 41]
[32 40]
[33 39]
[34 38]
[62 127]
[63 126]
[64 125]
[65 124]
[68 121]
[69 120]
[70 119]
[73 116]
[74 115]
[80 112]
[81 111]
[82 110]
[83 109]
[84 108]
[85 107]
[92 102]
[93 101]
[94 100]
[95 99]
[128 220]
[129 219]
[130 218]
[131 217]
[132 216]
[133 215]
[136 209]
[137 208]
[141 205]
[142 204]
[144 202]
[145 201]
[146 200]
[147 199]
[148 198]
[149 197]
[150 196]
[153 195]
[154 194]
[155 193]
[158 191]
[159 190]
[160 189]
[161 187]
[162 186]
[163 185]
[170 182]
[171 181]
[172 180]
[173 179]
[174 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
