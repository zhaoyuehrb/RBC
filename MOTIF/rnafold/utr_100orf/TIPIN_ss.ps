%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:01:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGUUCCCGAGUAUCGCGAGAAGCGCGCUUAGUCUGCACGCCGAGGUCCGCGCUGUGUCCCGUGUUUUCUGCGUGAGAGGAAAAGAUGCUAGAACCACAGGAGAAUGGCGUGAUUGACCUACCAGAUUAUGAGCAUGUAGAAGAUGAAACUUUUCCUCCUUUCCCACCUCCAGCCUCUCCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[116.21445465 197.44883728]
[112.71889496 182.86181641]
[109.22334290 168.27479553]
[105.72779083 153.68778992]
[98.41985321 152.00132751]
[99.72840118 166.94415283]
[85.92122650 172.80606079]
[76.07971191 161.48596191]
[83.80399323 148.62843323]
[76.49605560 146.94198608]
[66.96190643 158.52214050]
[57.42775726 170.10229492]
[47.89360809 181.68244934]
[48.35624313 194.58596802]
[40.15945053 204.03746033]
[28.11782265 205.31900024]
[18.39048004 216.73736572]
[8.66313934 228.15571594]
[8.50357151 244.19796753]
[-4.22646284 253.96147156]
[-19.76157188 249.95648193]
[-26.18454742 235.25529480]
[-18.56823540 221.13539124]
[-2.75521564 218.42837524]
[6.97212553 207.01002502]
[16.69946671 195.59165955]
[18.93024445 178.19400024]
[36.31345367 172.14830017]
[45.84760284 160.56814575]
[55.38175201 148.98799133]
[64.91590118 137.40783691]
[57.18849564 107.52169037]
[68.21046448 83.86776733]
[87.70315552 75.03411102]
[84.94690704 60.28951645]
[82.19066620 45.54492188]
[79.43442535 30.80032349]
[76.67818451 16.05572701]
[73.92193604 1.31113088]
[63.78060532 -10.83234215]
[69.04753113 -24.76463318]
[66.29129028 -39.50923157]
[63.41129303 -54.23015213]
[60.40774155 -68.92636871]
[56.30279922 -83.35375214]
[51.11990738 -97.42989349]
[45.93701935 -111.50602722]
[40.75413132 -125.58216858]
[35.57124329 -139.65830994]
[30.03531837 -153.59938049]
[24.14987564 -167.39653015]
[18.26443100 -181.19369507]
[12.37898922 -194.99084473]
[6.49354553 -208.78800964]
[0.60810268 -222.58515930]
[-5.27734041 -236.38232422]
[-11.16278362 -250.17948914]
[-26.13857841 -260.87771606]
[-23.37750435 -278.19912720]
[-29.49389839 -291.89547729]
[-35.61029053 -305.59179688]
[-48.30228806 -315.03762817]
[-46.42710876 -329.81372070]
[-52.54350281 -343.51007080]
[-58.65989685 -357.20642090]
[-70.41687775 -362.54388428]
[-75.22386932 -374.09423828]
[-71.00365448 -385.44470215]
[-76.88909149 -399.24185181]
[-82.77453613 -413.03900146]
[-88.65998077 -426.83615112]
[-94.66110992 -440.58340454]
[-100.77750397 -454.27975464]
[-106.89389801 -467.97607422]
[-113.01029205 -481.67242432]
[-128.28903198 -482.57730103]
[-141.39115906 -490.48883057]
[-149.30593872 -503.58905029]
[-150.21456909 -518.86755371]
[-143.90827942 -532.81347656]
[-131.83621216 -542.22216797]
[-116.77242279 -544.93157959]
[-102.17846680 -540.31909180]
[-91.40793610 -529.44464111]
[-86.93580627 -514.80706787]
[-89.78974915 -499.76998901]
[-99.31394958 -487.78881836]
[-93.19755554 -474.09246826]
[-87.08116150 -460.39614868]
[-80.96476746 -446.69979858]
[-75.35482025 -441.86419678]
[-74.86282349 -432.72161865]
[-68.97737885 -418.92443848]
[-63.09193802 -405.12728882]
[-57.20649338 -391.33013916]
[-42.62708282 -381.57843018]
[-44.96355820 -363.32281494]
[-38.84716415 -349.62646484]
[-32.73077011 -335.93011475]
[-20.47625732 -327.46395874]
[-21.91395187 -311.70819092]
[-15.79755783 -298.01187134]
[-9.68116474 -284.31552124]
[1.51163971 -279.69335938]
[6.71361446 -268.31542969]
[2.63437414 -256.06491089]
[8.51981735 -242.26776123]
[14.40526009 -228.47061157]
[20.29070282 -214.67344666]
[26.17614555 -200.87629700]
[32.06158829 -187.07913208]
[37.94703293 -173.28198242]
[43.83247757 -159.48481750]
[46.97161484 -157.83636475]
[49.46077347 -154.57472229]
[50.54558182 -150.02554321]
[49.64738083 -144.84118652]
[54.83026886 -130.76506042]
[60.01315689 -116.68891907]
[65.19604492 -102.61277771]
[70.37893677 -88.53664398]
[75.23938751 -102.72734070]
[86.92543030 -112.13140869]
[101.82733917 -113.84400177]
[115.34205627 -107.33612061]
[123.29499054 -94.61798859]
[123.22956085 -79.61813354]
[115.16596222 -66.96987152]
[101.59498596 -60.58015060]
[86.70858765 -62.42269135]
[75.10395813 -71.92991638]
[78.10750580 -57.23370361]
[82.53647614 -51.29746628]
[81.03588867 -42.26547241]
[83.79212952 -27.52087593]
[93.73632050 -16.43203545]
[88.66653442 -1.44511187]
[91.42277527 13.29948425]
[94.17902374 28.04408073]
[96.93526459 42.78867722]
[99.69150543 57.53327560]
[102.44774628 72.27787018]
[133.16432190 78.43714142]
[148.52322388 116.60533142]
[162.46429443 122.14125824]
[178.14578247 120.04328156]
[187.11903381 131.93151855]
[201.06010437 137.46743774]
[215.00117493 143.00335693]
[231.13946533 140.09001160]
[241.52363586 152.78257751]
[235.47134399 168.02401733]
[219.20866394 170.13526917]
[209.46525574 156.94444275]
[195.52418518 151.40850830]
[181.58309937 145.87258911]
[166.89877319 148.36653137]
[156.92837524 136.08233643]
[142.98728943 130.54640198]
[137.31916809 135.45785522]
[147.14208984 146.79411316]
[156.96499634 158.13035583]
[169.81013489 165.87646484]
[166.41232300 180.48657227]
[151.46728516 181.76963806]
[145.62875366 167.95326233]
[135.80583191 156.61701965]
[125.98292542 145.28077698]
[120.31480408 150.19223022]
[123.81036377 164.77925110]
[127.30591583 179.36627197]
[130.80146790 193.95327759]
[143.02740479 199.63462830]
[149.64648438 211.15534973]
[148.43293762 224.19107056]
[140.05392456 233.99586487]
[143.30393982 248.63954163]
[146.55393982 263.28323364]
[158.02868652 274.99914551]
[153.35975647 290.71960449]
[137.35015869 294.27276611]
[126.46920013 282.00341797]
[131.91026306 266.53323364]
[128.66024780 251.88955688]
[125.41024017 237.24586487]
[110.85615540 228.83747864]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 172]
[2 171]
[3 170]
[4 169]
[10 31]
[11 30]
[12 29]
[13 28]
[16 26]
[17 25]
[18 24]
[34 142]
[35 141]
[36 140]
[37 139]
[38 138]
[39 137]
[41 135]
[42 134]
[43 132]
[44 131]
[45 121]
[46 120]
[47 119]
[48 118]
[49 117]
[50 113]
[51 112]
[52 111]
[53 110]
[54 109]
[55 108]
[56 107]
[57 106]
[59 103]
[60 102]
[61 101]
[63 99]
[64 98]
[65 97]
[68 95]
[69 94]
[70 93]
[71 92]
[72 90]
[73 89]
[74 88]
[75 87]
[144 159]
[145 158]
[147 156]
[148 155]
[149 154]
[176 185]
[177 184]
[178 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
