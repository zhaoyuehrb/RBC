%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:54:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCCCCACUCGGCGGGUCGGUGCCGCCGGGUCCCAGGUGCCCGCUACUUCCCAGAACCUCCGCCUCCCGCUCCGGGCCCUCGAACCAGCGCGGACACCACAAUGGACCGGGCGUCCGAGCUGCUCUUCUACGUGAACGGCCGCAAGGUGAUAGAAAAAAAUGUCGAUCCUGAAACAAUGCUGUUGCCUUAUUUGAGGAAGA\
) } def
/len { sequence length } bind def

/coor [
[71.21783447 101.75611115]
[56.52337265 98.74400330]
[41.82891083 95.73189545]
[27.13444901 92.71978760]
[12.43998623 89.70768738]
[22.37827873 100.94290924]
[18.97496796 115.55172729]
[5.09457493 121.23809052]
[-7.57996225 113.21585846]
[-8.38062477 98.23717499]
[-16.73840904 110.69299316]
[-25.09619331 123.14881134]
[-33.45397568 135.60462952]
[-41.81175995 148.06045532]
[-50.16954422 160.51626587]
[-45.64937973 175.48631287]
[-51.85676956 189.83909607]
[-65.86077881 196.79766846]
[-81.04914093 193.07641602]
[-90.25037384 180.43238831]
[-89.11993408 164.83572388]
[-78.19158936 153.65068054]
[-62.62536621 152.15849304]
[-54.26758194 139.70266724]
[-45.90979767 127.24684906]
[-37.55201340 114.79103088]
[-29.19422913 102.33520508]
[-20.83644485 89.87938690]
[-23.96272469 75.20879364]
[-36.67244720 67.24242401]
[-49.38216782 59.27605820]
[-62.09188843 51.30969238]
[-74.80160522 43.34332657]
[-94.11037445 48.87339020]
[-111.00659180 38.58900452]
[-114.84319305 19.49560738]
[-127.91063690 12.13069630]
[-140.97807312 4.76578474]
[-154.04551697 -2.59912634]
[-167.16984558 -9.86220074]
[-180.35025024 -17.02299881]
[-193.58592224 -24.08108711]
[-206.87609863 -31.03604126]
[-220.16627502 -37.99099350]
[-233.45643616 -44.94594574]
[-248.37191772 -40.45527267]
[-261.75097656 -47.69790649]
[-265.94021606 -61.94521332]
[-279.23037720 -68.90016937]
[-292.52056885 -75.85511780]
[-305.04547119 -72.75482941]
[-315.97384644 -78.82694244]
[-319.70855713 -90.33729553]
[-332.88897705 -97.49809265]
[-347.87246704 -93.23992920]
[-361.13726807 -100.68975830]
[-365.10446167 -115.00048828]
[-378.28485107 -122.16128540]
[-391.46524048 -129.32208252]
[-408.14193726 -124.05080414]
[-423.17703247 -132.30581665]
[-427.50625610 -148.55348206]
[-440.79644775 -155.50843811]
[-456.47515869 -152.10879517]
[-468.81704712 -162.35852051]
[-468.35449219 -178.39491272]
[-455.44232178 -187.91621399]
[-439.98562622 -183.61849976]
[-433.84149170 -168.79861450]
[-420.55130005 -161.84365845]
[-408.90921021 -167.37536621]
[-396.01467896 -165.15628052]
[-386.61593628 -155.77609253]
[-384.30444336 -142.50248718]
[-371.12405396 -135.34169006]
[-357.94366455 -128.18089294]
[-343.77865601 -132.64057922]
[-330.30984497 -125.56626892]
[-325.72817993 -110.67849731]
[-312.54776001 -103.51770020]
[-295.05801392 -104.92034912]
[-285.56561279 -89.14529419]
[-272.27545166 -82.19033813]
[-258.98526001 -75.23538208]
[-244.89135742 -79.91482544]
[-231.31416321 -73.05084229]
[-226.50149536 -58.23611832]
[-213.21131897 -51.28116226]
[-199.92114258 -44.32621002]
[-186.63098145 -37.37125778]
[-179.24162292 -37.05500793]
[-173.18945312 -30.20339966]
[-160.00904846 -23.04260254]
[-152.62550354 -22.61147118]
[-146.68061829 -15.66656971]
[-133.61317444 -8.30165863]
[-120.54572296 -0.93674761]
[-107.47827911 6.42816353]
[-98.68874359 1.10177445]
[-88.40055847 -0.10118208]
[-78.46552277 3.10338402]
[-70.69997406 10.20012569]
[-66.55276489 19.95587921]
[-66.83524323 30.63360405]
[-54.12551880 38.59997177]
[-41.41579819 46.56633759]
[-28.70607948 54.53270721]
[-15.99635792 62.49907303]
[15.45209217 75.01322174]
[30.14655495 78.02532959]
[44.84101486 81.03743744]
[59.53547668 84.04953766]
[74.22994232 87.06164551]
[93.37004089 68.33337402]
[122.90830994 72.39707184]
[134.96076965 63.46744156]
[137.42056274 48.08605576]
[149.77067566 39.20182800]
[164.41932678 41.64167023]
[176.47177124 32.71203613]
[182.95408630 18.27977371]
[197.78649902 16.92001343]
[209.83895874 7.99038076]
[221.89140320 -0.93925226]
[228.37371826 -15.37151432]
[243.20613098 -16.73127556]
[255.25857544 -25.66090775]
[267.31103516 -34.59054184]
[271.08544922 -50.18327332]
[285.68988037 -56.82332611]
[299.92105103 -49.41701889]
[302.86203003 -33.64583588]
[292.25674438 -21.60807991]
[276.24066162 -22.53808594]
[264.18820190 -13.60845375]
[252.13575745 -4.67882061]
[246.51551819 9.11473465]
[230.82104492 11.11320210]
[218.76858521 20.04283524]
[206.71612549 28.97246742]
[201.09588623 42.76602173]
[185.40141296 44.76449203]
[173.34895325 53.69412231]
[171.41714478 68.41838074]
[159.32145691 77.64598846]
[143.89039612 75.51989746]
[131.83793640 84.44953156]
[135.41896057 99.01580048]
[150.23791504 101.33927155]
[165.05686951 103.66275024]
[179.87583923 105.98622131]
[194.69479370 108.30969238]
[205.55415344 97.22575378]
[220.86012268 94.67483521]
[234.72721863 101.63781738]
[241.82327271 115.43730164]
[239.41970825 130.76708984]
[228.44073486 141.73257446]
[213.10800171 144.11729431]
[199.31726074 137.00428772]
[192.37132263 123.12864685]
[177.55235291 120.80517578]
[162.73339844 118.48170471]
[147.91444397 116.15823364]
[133.09548950 113.83475494]
[127.60658264 116.87033081]
[122.03372192 118.60140228]
[130.58421326 130.92573547]
[139.13468933 143.25007629]
[147.68518066 155.57440186]
[161.90885925 162.50242615]
[162.80667114 177.36994934]
[171.35716248 189.69427490]
[179.90763855 202.01861572]
[194.13131714 208.94662476]
[195.02914429 223.81414795]
[203.57962036 236.13848877]
[217.80329895 243.06651306]
[218.70112610 257.93402100]
[227.25160217 270.25836182]
[242.30691528 276.75988770]
[243.93507385 293.07800293]
[230.46116638 302.42605591]
[215.74600220 295.18753052]
[214.92727661 278.80883789]
[206.37678528 266.48449707]
[192.76469421 260.43801880]
[191.25529480 244.68896484]
[182.70480347 232.36463928]
[169.09271240 226.31813049]
[167.58331299 210.56909180]
[159.03282166 198.24476624]
[150.48234558 185.92042542]
[136.87023926 179.87393188]
[135.36083984 164.12489319]
[126.81035614 151.80055237]
[118.25987244 139.47621155]
[109.70938873 127.15188599]
[99.21485901 128.82499695]
[88.82696533 126.58308411]
[79.95660400 120.73063660]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 113]
[2 112]
[3 111]
[4 110]
[5 109]
[10 28]
[11 27]
[12 26]
[13 25]
[14 24]
[15 23]
[29 108]
[30 107]
[31 106]
[32 105]
[33 104]
[36 98]
[37 97]
[38 96]
[39 95]
[40 93]
[41 92]
[42 90]
[43 89]
[44 88]
[45 87]
[48 84]
[49 83]
[50 82]
[53 80]
[54 79]
[57 76]
[58 75]
[59 74]
[62 70]
[63 69]
[115 147]
[116 146]
[119 143]
[120 142]
[122 140]
[123 139]
[124 138]
[126 136]
[127 135]
[128 134]
[148 165]
[149 164]
[150 163]
[151 162]
[152 161]
[167 198]
[168 197]
[169 196]
[170 195]
[172 193]
[173 192]
[174 191]
[176 189]
[177 188]
[179 186]
[180 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
