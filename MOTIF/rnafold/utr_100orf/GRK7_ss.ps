%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:20:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGUUGUCUCACCCGGGAAGGGAAAGCAGCCAGCAGCCCUCCAGCCCUCUUGUGCUUUCCCUGGGAGUGCGCCCCGUGCUCAGCCAUGGUGGACAUGGGGGCCCUGGACAACCUGAUCGCCAACACCGCCUACCUGCAGGCCCGGAAGCCCUCGGACUGCGACAGCAAAGAGCUGCAGCGGCGGC\
) } def
/len { sequence length } bind def

/coor [
[196.94941711 161.67646790]
[192.70332336 138.71934509]
[178.60310364 133.60235596]
[164.50288391 128.48535156]
[150.40264893 123.36834717]
[136.30242920 118.25134277]
[122.20220947 113.13433838]
[108.10198212 108.01734161]
[103.79705811 113.84635925]
[95.62599182 116.75534821]
[85.76393890 114.43806458]
[71.42144012 118.83040619]
[57.07893753 123.22274780]
[54.20325470 126.54509735]
[50.76181030 128.56268311]
[47.23888397 129.25849915]
[44.07378769 128.77610779]
[41.61194611 127.39057922]
[27.00439453 130.79931641]
[12.39684200 134.20803833]
[-2.21070957 137.61676025]
[-16.81826210 141.02549744]
[-31.42581367 144.43421936]
[-46.03336716 147.84295654]
[-60.64091873 151.25167847]
[-75.24846649 154.66040039]
[-89.85601807 158.06913757]
[-91.71970367 173.09417725]
[-98.59857941 186.54977417]
[-109.64521790 196.82070923]
[-123.51322174 202.68147278]
[-138.52128601 203.44248962]
[-152.85708618 199.03120422]
[-164.79603577 189.99844360]
[-172.90882874 177.44982910]
[-187.51637268 180.85855103]
[-195.64582825 194.41168213]
[-210.99780273 198.16571045]
[-224.46423340 189.89341736]
[-228.05572510 174.50262451]
[-219.64152527 161.12440491]
[-204.21362305 157.69583130]
[-190.92510986 166.25099182]
[-176.31755066 162.84226990]
[-174.59677124 147.99894714]
[-167.88888550 134.61488342]
[-156.98620605 124.31409454]
[-143.19139099 118.35385132]
[-128.16171265 117.47122955]
[-113.71004486 121.79203796]
[-101.58612061 130.81326294]
[-93.26474762 143.46157837]
[-78.65719604 140.05285645]
[-64.04964447 136.64411926]
[-49.44209290 133.23539734]
[-34.83454132 129.82667542]
[-20.22698975 126.41794586]
[-5.61943769 123.00921631]
[8.98811436 119.60048676]
[23.59566689 116.19175720]
[38.20321655 112.78302765]
[52.68659592 108.88024139]
[67.02909851 104.48789978]
[81.37159729 100.09556580]
[88.57556915 86.93871307]
[84.54995728 72.48899078]
[73.39288330 61.27157593]
[77.43066406 46.93471527]
[73.40504456 32.48499680]
[68.07567596 25.03759575]
[69.43598175 17.75566864]
[65.65631104 3.23967409]
[61.87664032 -11.27632046]
[58.09696960 -25.79231453]
[54.31729889 -40.30830765]
[50.53762817 -54.82430267]
[46.75795746 -69.34029388]
[41.55582428 -76.87712097]
[43.03958511 -84.13489532]
[39.50695038 -98.71298218]
[28.73722076 -110.30278015]
[33.25950241 -124.49426270]
[29.72686958 -139.07234192]
[18.02767944 -150.56413269]
[22.39167213 -166.37196350]
[38.32954788 -170.23410034]
[49.44578552 -158.17752075]
[44.30495453 -142.60498047]
[47.83758545 -128.02690125]
[58.35463715 -117.47982025]
[54.08503342 -102.24561310]
[57.61766815 -87.66753387]
[61.27395248 -73.11996460]
[65.05361938 -58.60397339]
[68.83329010 -44.08797836]
[72.61296844 -29.57198524]
[76.39263916 -15.05599117]
[80.17230988 -0.53999680]
[83.95198059 13.97599697]
[87.85475922 28.45937729]
[91.88037872 42.90909576]
[102.74951172 53.09296799]
[98.99967194 68.46337128]
[103.02529144 82.91309357]
[113.21898651 93.91711426]
[127.31921387 99.03411865]
[141.41943359 104.15112305]
[155.51965332 109.26811981]
[169.61987305 114.38512421]
[183.72010803 119.50212860]
[197.82032776 124.61912537]
[202.54406738 118.55617523]
[208.40550232 113.60207367]
[215.15086365 109.96524048]
[222.48933411 107.79718781]
[230.10560608 107.18623352]
[237.67343140 108.15387726]
[244.86962891 110.65412140]
[251.38778687 114.57558441]
[256.95144653 119.74651337]
[261.32571411 125.94226074]
[264.32720947 132.89505005]
[265.83178711 140.30557251]
[265.77963257 147.85580444]
[264.17758179 155.22274780]
[277.21020508 162.64909363]
[290.24282837 170.07545471]
[303.27548218 177.50180054]
[316.30810547 184.92814636]
[326.64270020 181.44506836]
[336.97241211 184.18103027]
[343.93518066 191.99499512]
[345.40356445 202.13542175]
[358.17648315 210.00003052]
[370.94943237 217.86463928]
[383.72235107 225.72924805]
[396.49530029 233.59385681]
[409.26824951 241.45846558]
[426.53155518 229.81109619]
[449.81549072 232.32023621]
[467.86462402 251.06237793]
[482.20712280 255.45471191]
[496.54962158 259.84704590]
[510.89212036 264.23941040]
[524.73065186 256.60589600]
[539.89031982 261.07373047]
[547.37707520 274.99218750]
[542.74920654 290.10372925]
[528.75238037 297.44293213]
[513.69061279 292.65554810]
[506.49978638 278.58190918]
[492.15728760 274.18954468]
[477.81478882 269.79721069]
[463.47229004 265.40487671]
[459.64898682 271.85720825]
[452.00241089 284.76184082]
[448.17913818 291.21417236]
[458.91995239 301.68481445]
[469.66076660 312.15548706]
[485.67861938 315.67120361]
[490.38427734 331.38073730]
[478.93695068 343.12341309]
[463.11270142 338.81942749]
[459.19012451 322.89630127]
[448.44931030 312.42562866]
[437.70846558 301.95498657]
[424.01507568 300.62899780]
[412.23126221 294.93777466]
[403.61795044 285.99581909]
[398.91897583 275.23062134]
[398.30596924 264.17010498]
[401.40362549 254.23139954]
[388.63067627 246.36679077]
[375.85775757 238.50218201]
[363.08480835 230.63757324]
[350.31188965 222.77296448]
[337.53894043 214.90835571]
[318.23660278 215.80023193]
[308.88174438 197.96076965]
[295.84912109 190.53442383]
[282.81649780 183.10807800]
[269.78387451 175.68173218]
[256.75125122 168.25538635]
[236.95602417 179.93843079]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 111]
[3 110]
[4 109]
[5 108]
[6 107]
[7 106]
[8 105]
[11 64]
[12 63]
[13 62]
[18 61]
[19 60]
[20 59]
[21 58]
[22 57]
[23 56]
[24 55]
[25 54]
[26 53]
[27 52]
[35 44]
[36 43]
[65 104]
[66 103]
[68 101]
[69 100]
[71 99]
[72 98]
[73 97]
[74 96]
[75 95]
[76 94]
[77 93]
[79 92]
[80 91]
[82 89]
[83 88]
[125 183]
[126 182]
[127 181]
[128 180]
[129 179]
[133 177]
[134 176]
[135 175]
[136 174]
[137 173]
[138 172]
[141 154]
[142 153]
[143 152]
[144 151]
[157 166]
[158 165]
[159 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
