%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:27:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCGCAGCGGCGACGGCGUCGGCGGCGGCGGCGGCAGCGGCUCCGGCCGAGGUGCGCGCUGGGGGGGAGGGGGGGCCGGAGAGGAGCAUGAAUGGAGCAAAAUGGCGGAUCAUGUGCAGAGCCUGGCCCAACUAGAGAAUCUGUGCAAACAGCUGUAUGAAACCACAGACACAACCACUCGACUCCAGGCAGAGAAAGCCU\
) } def
/len { sequence length } bind def

/coor [
[-58.60299301 317.13336182]
[-58.79337692 302.13458252]
[-53.30181122 288.17202759]
[-65.17260742 297.34176636]
[-77.04340363 306.51150513]
[-88.91419983 315.68124390]
[-91.06478882 331.10891724]
[-103.23409271 340.23922729]
[-117.92875671 338.09390259]
[-129.79956055 347.26364136]
[-141.67034912 356.43338013]
[-153.54115295 365.60311890]
[-156.40501404 371.57360840]
[-161.14459229 374.72402954]
[-165.92417908 374.86614990]
[-178.07307434 383.66415405]
[-190.22195435 392.46212769]
[-196.86088562 406.82302856]
[-211.70721436 408.02133179]
[-223.85609436 416.81933594]
[-236.00498962 425.61730957]
[-248.15386963 434.41531372]
[-260.16516113 443.40023804]
[-272.03594971 452.56997681]
[-278.22726440 467.12945557]
[-293.02941895 468.78665161]
[-304.90020752 477.95639038]
[-310.62304688 493.32455444]
[-326.83651733 495.78533936]
[-336.86157227 482.80728149]
[-330.38531494 467.74108887]
[-314.06994629 466.08557129]
[-302.19915771 456.91583252]
[-296.85690308 443.01226807]
[-281.20568848 440.69918823]
[-269.33489990 431.52944946]
[-267.84875488 426.98452759]
[-263.48809814 423.32760620]
[-256.95184326 422.26641846]
[-244.80296326 413.46841431]
[-232.65408325 404.67044067]
[-220.50520325 395.87243652]
[-214.73522949 382.14086914]
[-199.01994324 380.31323242]
[-186.87106323 371.51525879]
[-174.72216797 362.71725464]
[-162.71089172 353.73233032]
[-150.84008789 344.56259155]
[-138.96929932 335.39285278]
[-127.09850311 326.22311401]
[-125.46261597 311.46304321]
[-113.55456543 301.99450684]
[-98.08394623 303.81045532]
[-86.21315002 294.64071655]
[-74.34235382 285.47097778]
[-62.47155380 276.30123901]
[-51.66176605 265.90179443]
[-42.03972626 254.39454651]
[-40.15950012 247.24206543]
[-32.17864990 242.78520203]
[-22.37968445 231.42825317]
[-12.58071804 220.07130432]
[-2.78175211 208.71435547]
[7.01721382 197.35740662]
[16.81617928 186.00045776]
[15.46954632 171.21119690]
[25.24530602 159.55404663]
[40.76677322 158.24185181]
[50.56573868 146.88490295]
[60.36470413 135.52795410]
[70.07550049 124.09552002]
[79.69754028 112.58829498]
[76.36042786 85.03393555]
[103.61685944 68.13542938]
[103.84899139 53.13722992]
[104.08111572 38.13902283]
[104.31324768 23.14082146]
[104.54537201 8.14261723]
[104.77750397 -6.85558653]
[105.00962830 -21.85379028]
[90.21403503 -28.13888359]
[78.98914337 -39.59211349]
[73.03192902 -54.43974304]
[73.22678375 -70.39816284]
[79.51431274 -85.02510834]
[90.90497589 -96.09344482]
[105.63469696 -101.93023682]
[105.63469696 -116.93023682]
[105.63469696 -131.93023682]
[105.63469696 -146.93023682]
[105.63469696 -161.93023682]
[105.63469696 -176.93023682]
[94.63496399 -182.88479614]
[87.25557709 -192.89451599]
[84.84880066 -205.02163696]
[87.81155396 -216.95063782]
[95.52146912 -226.43043518]
[106.46640015 -231.69909668]
[106.93059540 -246.69190979]
[95.92520905 -258.03460693]
[96.24726105 -273.83563232]
[107.70568085 -284.72045898]
[123.50240326 -284.23138428]
[134.26550293 -272.65850830]
[133.60942078 -256.86785889]
[121.92341614 -246.22770691]
[121.45921326 -231.23489380]
[135.90380859 -221.08366394]
[141.41636658 -204.14613342]
[135.61212158 -187.14015198]
[120.63469696 -176.93023682]
[120.63469696 -161.93023682]
[120.63469696 -146.93023682]
[120.63469696 -131.93023682]
[120.63469696 -116.93023682]
[120.63469696 -101.93023682]
[133.79792786 -97.05577087]
[144.52882385 -87.96080780]
[151.52465820 -75.72274017]
[153.92701721 -61.80212021]
[151.42710876 -47.86833572]
[144.30525208 -35.59943390]
[133.39968872 -26.48003006]
[120.00783539 -21.62166214]
[119.77571106 -6.62345839]
[119.54357910 8.37474537]
[119.31145477 23.37294960]
[119.07932281 38.37115097]
[118.84719849 53.36935806]
[118.61506653 68.36756134]
[126.00930023 55.31668472]
[128.73896790 40.56714630]
[138.86228943 29.49835777]
[153.31016541 25.46610069]
[167.70233154 29.69285583]
[177.67546082 40.89717484]
[180.20593262 55.68218994]
[174.52659607 69.56545258]
[162.35926819 78.33791351]
[147.39476013 79.34040070]
[133.57537842 85.17347717]
[148.49955750 86.67983246]
[163.42372131 88.18618011]
[178.34790039 89.69252777]
[193.27206421 91.19887543]
[208.19624329 92.70523071]
[217.21858215 80.35433960]
[231.11987305 74.21828461]
[246.12629700 75.85338593]
[258.21853638 84.72094727]
[264.20825195 98.35871887]
[279.13244629 99.86506653]
[291.21343994 89.67563629]
[306.95373535 91.09642029]
[317.01489258 103.28449249]
[315.42776489 119.00888824]
[303.13400269 128.94059753]
[287.42727661 127.18732452]
[277.62606812 114.78924561]
[262.70190430 113.28289032]
[254.10774231 125.44866180]
[240.48738098 131.72096252]
[225.45689392 130.32432556]
[213.06216431 121.53412628]
[206.68989563 107.62940216]
[191.76571655 106.12305450]
[176.84155273 104.61669922]
[161.91737366 103.11035156]
[146.99320984 101.60400391]
[132.06903076 100.09765625]
[129.07685852 109.86798096]
[123.33556366 117.78816986]
[115.69046783 123.16509247]
[107.13034058 125.64241791]
[98.66436768 125.21650696]
[91.20476532 122.21033478]
[81.58272552 133.71755981]
[78.47572327 142.31431580]
[71.72164917 145.32691956]
[61.92268753 156.68386841]
[52.12372208 168.04081726]
[53.09943771 183.58705139]
[43.00011063 194.96502686]
[28.17312813 195.79942322]
[18.37416077 207.15637207]
[8.57519627 218.51332092]
[-1.22376990 229.87026978]
[-11.02273560 241.22721863]
[-20.82170105 252.58416748]
[-30.53249550 264.01660156]
[-40.15453720 275.52383423]
[-25.99372482 270.57696533]
[-11.01344681 271.34591675]
[2.56641841 277.71673584]
[12.73351669 288.74533081]
[17.98122025 302.79742432]
[17.53189087 317.79071045]
[11.45211124 331.50332642]
[0.64282471 341.90332031]
[-13.29417801 347.44946289]
[-28.29361916 347.31997681]
[-42.13278198 341.53399658]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 56]
[4 55]
[5 54]
[6 53]
[9 50]
[10 49]
[11 48]
[12 47]
[15 46]
[16 45]
[17 44]
[19 42]
[20 41]
[21 40]
[22 39]
[23 36]
[24 35]
[26 33]
[27 32]
[57 191]
[58 190]
[60 189]
[61 188]
[62 187]
[63 186]
[64 185]
[65 184]
[68 181]
[69 180]
[70 179]
[71 177]
[72 176]
[74 130]
[75 129]
[76 128]
[77 127]
[78 126]
[79 125]
[80 124]
[87 116]
[88 115]
[89 114]
[90 113]
[91 112]
[92 111]
[98 107]
[99 106]
[141 170]
[142 169]
[143 168]
[144 167]
[145 166]
[146 165]
[151 160]
[152 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
