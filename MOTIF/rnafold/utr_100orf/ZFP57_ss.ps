%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:26:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAGGAAGCCACAUCAAACCCUGGGGCCUUUGCUGGGCCUCUCCAUCUGCCCAGUUACUGGGAGGUAGAUAGCCCCAGGAAGGAAUCCAGUCAGGCCUGGGCACCAGGCCAGGAGUGGAUAAAGCUAGAAAGAGACACCACAGAAGAGAAGAUGUUUGAACAGCUGAAGCCAAUCGAACCUGUACAGAAGACGCUCCCAUGGGUGGGCGAGGUAGCUGCCACCCUGCAGGAAGCCAUGAAGAGAGAUUGCU\
) } def
/len { sequence length } bind def

/coor [
[130.80003357 194.20182800]
[141.10408020 176.92518616]
[136.68275452 162.59158325]
[132.26141357 148.25799561]
[127.84009552 133.92440796]
[114.32975769 139.33987427]
[100.45542145 139.84884644]
[87.86676788 135.83612061]
[81.52749634 149.43074036]
[75.18822479 163.02536011]
[76.36839294 178.80249023]
[63.97724152 187.06739807]
[57.63796616 200.66200256]
[65.27828979 214.16775513]
[63.48752213 229.58114624]
[52.95424652 240.97543335]
[37.72872543 243.96926880]
[23.66547775 237.41146851]
[16.17211342 223.82363892]
[18.12998390 208.43057251]
[28.78624535 197.15122986]
[44.04335022 194.32273865]
[50.38262558 180.72811890]
[48.74902725 165.92337036]
[61.59360504 156.68608093]
[67.93288422 143.09147644]
[74.27215576 129.49685669]
[65.06673431 117.65370178]
[50.32823563 120.44237518]
[35.58973694 123.23104858]
[20.85124207 126.01972961]
[8.73010826 136.18774414]
[-5.21373606 130.95149231]
[-19.95223236 133.74015808]
[-34.69073105 136.52883911]
[-49.42922592 139.31750488]
[-64.16772461 142.10618591]
[-76.28885651 152.27420044]
[-90.23270416 147.03794861]
[-104.97119904 149.82661438]
[-117.09233093 159.99464417]
[-131.03617859 154.75837708]
[-145.77467346 157.54704285]
[-157.89581299 167.71507263]
[-171.83964539 162.47880554]
[-186.57814026 165.26748657]
[-201.31665039 168.05615234]
[-216.05514526 170.84483337]
[-223.88070679 175.50366211]
[-230.99468994 173.57519531]
[-245.76679993 176.17993164]
[-260.53890991 178.78465271]
[-275.31103516 181.38937378]
[-290.08316040 183.99409485]
[-304.63171387 192.69900513]
[-317.02389526 181.12876892]
[-309.33630371 166.01792908]
[-292.68786621 169.22196960]
[-277.91577148 166.61724854]
[-263.14364624 164.01252747]
[-248.37152100 161.40780640]
[-233.59941101 158.80308533]
[-218.84381104 156.10633850]
[-204.10531616 153.31765747]
[-189.36682129 150.52899170]
[-174.62832642 147.74031067]
[-163.56138611 137.77175903]
[-148.56335449 142.80854797]
[-133.82484436 140.01988220]
[-122.75791168 130.05131531]
[-107.75987244 135.08811951]
[-93.02137756 132.29943848]
[-81.95443726 122.33088684]
[-66.95639801 127.36768341]
[-52.21790314 124.57901001]
[-37.47940445 121.79033661]
[-22.74090767 119.00166321]
[-8.00240993 116.21298981]
[3.06452656 106.24443054]
[18.06256676 111.28122711]
[32.80106354 108.49255371]
[47.53956223 105.70388031]
[62.27805710 102.91520691]
[85.43045807 61.82587051]
[134.88159180 73.36900330]
[126.58695221 60.87104416]
[118.29231262 48.37308884]
[109.99767303 35.87512970]
[101.70302582 23.37717438]
[87.62516785 16.15745354]
[87.03398132 1.27458489]
[78.73934174 -11.22337151]
[62.05766296 -19.04975510]
[61.67840576 -36.60586929]
[53.22860718 -48.99945068]
[44.77880478 -61.39303589]
[36.32900620 -73.78661346]
[27.87920380 -86.18019867]
[19.42940331 -98.57377625]
[10.97960186 -110.96736145]
[-2.93861961 -120.64823914]
[2.51098180 -136.70246887]
[19.44640350 -135.91009521]
[23.37318420 -119.41716003]
[31.82298470 -107.02358246]
[40.27278519 -94.62999725]
[48.72258759 -82.23641968]
[57.17238617 -69.84283447]
[65.62218475 -57.44925308]
[74.07199097 -45.05567169]
[85.88012695 -42.50748062]
[93.02449036 -32.27428436]
[91.23729706 -19.51801300]
[99.53194427 -7.02005720]
[113.01651764 -0.69427341]
[114.20098114 15.08253288]
[122.49562836 27.58048820]
[130.79026794 40.07844543]
[139.08491516 52.57640076]
[147.37954712 65.07435608]
[146.09216309 50.12970734]
[144.80476379 35.18505478]
[138.08303833 21.77541351]
[137.37863159 6.79196262]
[142.81265259 -7.18914652]
[153.45082092 -17.76409721]
[167.46406555 -23.11470413]
[182.44305420 -22.32102013]
[195.81239319 -15.51950645]
[205.27346802 -3.87956810]
[209.19958496 10.59750271]
[206.91572571 25.42261696]
[198.81455994 38.04684448]
[186.28736877 46.30028534]
[177.70011902 58.59903717]
[169.11288452 70.89778900]
[182.54522705 64.22155762]
[195.97758484 57.54533386]
[209.40992737 50.86910629]
[215.68119812 44.26493073]
[223.05160522 44.19455338]
[236.56613159 37.68629837]
[239.44601440 22.55313683]
[250.55470276 12.13919640]
[265.48880005 10.28525257]
[278.49523926 17.49430656]
[292.00976562 10.98605156]
[305.52429199 4.47779512]
[304.98312378 -9.63102627]
[309.84085083 -22.84215355]
[319.33444214 -33.17591095]
[332.00885010 -39.09718704]
[345.93994141 -39.74344635]
[359.02664185 -35.05022430]
[369.30773926 -25.75586319]
[382.90234375 -32.09513855]
[396.49697876 -38.43441010]
[410.09158325 -44.77368546]
[419.32885742 -57.61826324]
[434.13360596 -55.98466873]
[447.72824097 -62.32394028]
[461.32284546 -68.66321564]
[474.91744995 -75.00248718]
[485.75448608 -92.02053070]
[504.93212891 -89.43354797]
[518.36444092 -96.10977173]
[531.79681396 -102.78600311]
[536.59204102 -117.84525299]
[550.66949463 -125.02869415]
[565.67718506 -120.07450867]
[572.71136475 -105.92192841]
[567.59881592 -90.96742249]
[553.37268066 -84.08324432]
[538.47302246 -89.35365295]
[525.04071045 -82.67742157]
[511.60833740 -76.00119781]
[509.25024414 -66.09197235]
[501.67745972 -58.95610046]
[491.21398926 -57.11396790]
[481.25674438 -61.40787125]
[467.66210938 -55.06859970]
[454.06750488 -48.72932434]
[440.47290039 -42.39004898]
[432.20797729 -29.99889755]
[416.43084717 -31.17906761]
[402.83624268 -24.83979416]
[389.24163818 -18.50052071]
[375.64700317 -12.16124630]
[375.75030518 3.83025718]
[368.83859253 18.31587982]
[356.25207520 28.36865807]
[340.48327637 31.93279648]
[324.68338013 28.24392509]
[312.03256226 17.99232864]
[298.51803589 24.50058365]
[285.00347900 31.00884056]
[282.53036499 45.67245865]
[271.76965332 56.19248199]
[256.70153809 58.38462830]
[243.07438660 51.20082855]
[229.55986023 57.70908737]
[216.08615112 64.30145264]
[202.65380859 70.97768402]
[189.22146606 77.65390778]
[175.78910828 84.33013916]
[174.76141357 99.29489136]
[187.15499878 107.74468994]
[199.54858398 116.19448853]
[208.37637329 118.43370819]
[212.04310608 124.82768250]
[224.33038330 133.43132019]
[240.70538330 134.32080078]
[247.88024902 149.06710815]
[238.47409058 162.50050354]
[222.16314697 160.80186462]
[215.72673035 145.71861267]
[203.43945312 137.11495972]
[191.09878540 128.58807373]
[178.70520020 120.13827515]
[166.31161499 111.68846893]
[160.27713013 116.14212036]
[148.20816040 125.04942322]
[142.17369080 129.50308228]
[146.59501648 143.83666992]
[151.01634216 158.17025757]
[155.43766785 172.50384521]
[165.77084351 174.96687317]
[174.09454346 181.43609619]
[178.95709229 190.69877625]
[179.54557800 201.06291199]
[175.82106018 210.66618347]
[168.51365662 217.81056213]
[172.39593506 232.29943848]
[176.27822876 246.78833008]
[187.32362366 258.11572266]
[183.14402771 272.41186523]
[187.02632141 286.90075684]
[201.56047058 292.33566284]
[210.09620667 305.29409790]
[209.35134888 320.79327393]
[199.61231995 332.87347412]
[184.62397766 336.88958740]
[170.14964294 331.29733276]
[161.75498962 318.24707031]
[162.66792297 302.75686646]
[172.53742981 290.78305054]
[168.65513611 276.29415894]
[157.88742065 266.00311279]
[161.78933716 250.67062378]
[157.90704346 236.18173218]
[154.02476501 221.69284058]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 226]
[3 225]
[4 224]
[5 223]
[8 27]
[9 26]
[10 25]
[12 23]
[13 22]
[28 83]
[29 82]
[30 81]
[31 80]
[33 78]
[34 77]
[35 76]
[36 75]
[37 74]
[39 72]
[40 71]
[42 69]
[43 68]
[45 66]
[46 65]
[47 64]
[48 63]
[50 62]
[51 61]
[52 60]
[53 59]
[54 58]
[85 120]
[86 119]
[87 118]
[88 117]
[89 116]
[91 114]
[92 113]
[94 110]
[95 109]
[96 108]
[97 107]
[98 106]
[99 105]
[100 104]
[136 205]
[137 204]
[138 203]
[139 202]
[141 201]
[142 200]
[146 196]
[147 195]
[148 194]
[155 188]
[156 187]
[157 186]
[158 185]
[160 183]
[161 182]
[162 181]
[163 180]
[165 176]
[166 175]
[167 174]
[206 220]
[207 219]
[208 218]
[210 217]
[211 216]
[232 251]
[233 250]
[234 249]
[236 247]
[237 246]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
