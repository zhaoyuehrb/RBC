%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:10:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUCCUGGAGGCCUCUGGGCGCGUGCGCGGGCGGUCGCUACCUGCGGCCGAGCCAGGGAGCGAGAGGGCGCAGAGGGCAGCGGGCUUGGGCAGCAUGAGGCCCGGAGGGGAGCGGCCCGUGGAAGGGGGCGCGUGCAAUGGCCGCUCCGAGCUGGAGCUACUGAAGCUGCGCUCGGCGGAGUGCAUCGACGAGG\
) } def
/len { sequence length } bind def

/coor [
[47.36814499 184.89489746]
[49.71644592 169.43464661]
[61.48710632 159.13970947]
[61.00633240 144.14741516]
[60.52555847 129.15512085]
[57.15182114 143.77079773]
[45.53733826 153.26309204]
[30.54258156 153.65965271]
[18.44261360 144.79450989]
[14.30107594 130.37757874]
[19.85113335 116.44213104]
[32.77017975 108.81990814]
[47.65293503 110.70124817]
[33.74918365 105.07224274]
[19.84543228 99.44323730]
[5.94168139 93.81423187]
[-7.96206999 88.18522644]
[-21.86582184 82.55622101]
[-35.76957321 76.92721558]
[-49.67332458 71.29821014]
[-63.57707596 65.66921234]
[-77.69516754 60.60171509]
[-92.00492859 56.10387039]
[-101.14284515 56.51528168]
[-106.50696564 51.41755676]
[-120.74280548 46.69093323]
[-134.97863770 41.96430969]
[-150.51385498 44.95889282]
[-160.15466309 33.60529327]
[-174.39050293 28.87867165]
[-188.62634277 24.15204811]
[-202.86216736 19.42542458]
[-217.09800720 14.69880199]
[-235.03613281 18.83322906]
[-246.18180847 5.28497791]
[-260.49157715 0.78713161]
[-275.97680664 4.03032494]
[-285.79833984 -7.16729307]
[-300.10809326 -11.66513920]
[-314.41787720 -16.16298485]
[-328.30551147 -9.10809135]
[-342.75357056 -13.87339497]
[-349.39373779 -27.15660286]
[-363.70349121 -31.65444946]
[-378.01327515 -36.15229416]
[-392.32302856 -40.65014267]
[-406.63281250 -45.14798737]
[-422.11804199 -41.90479660]
[-431.93957520 -53.10241318]
[-446.24932861 -57.60025787]
[-462.68698120 -48.20070648]
[-480.47421265 -53.69429016]
[-488.46945190 -70.15219879]
[-502.91601562 -74.18908691]
[-516.56188965 -66.21623993]
[-531.82720947 -70.30841064]
[-539.65533447 -84.03779602]
[-535.40197754 -99.25898743]
[-521.59057617 -106.94152069]
[-506.41522217 -102.52749634]
[-498.87915039 -88.63565826]
[-484.43255615 -84.59877777]
[-475.92929077 -92.22715759]
[-464.68188477 -94.82485199]
[-453.46383667 -91.63237762]
[-445.09918213 -83.33292389]
[-441.75149536 -71.91002655]
[-427.44171143 -67.41217804]
[-412.98001099 -70.97708893]
[-402.13494873 -59.45775223]
[-387.82519531 -54.95990753]
[-373.51541138 -50.46206284]
[-359.20565796 -45.96421432]
[-344.89590454 -41.46636963]
[-331.85025024 -48.56193161]
[-317.27404785 -44.20432281]
[-309.92001343 -30.47274971]
[-295.61026001 -25.97490501]
[-281.30050659 -21.47705841]
[-266.83880615 -25.04196739]
[-255.99372864 -13.52263355]
[-241.68395996 -9.02478695]
[-230.80976868 -14.34148312]
[-218.84579468 -10.70192909]
[-212.37138367 0.46296543]
[-198.13554382 5.18958855]
[-183.89971924 9.91621208]
[-169.66387939 14.64283562]
[-155.42803955 19.36945915]
[-140.91105652 16.03679657]
[-130.25201416 27.72847366]
[-116.01618195 32.45509720]
[-101.78034210 37.18172073]
[-87.50708771 41.79410553]
[-73.19731903 46.29195023]
[-77.64658356 31.96700478]
[-69.35757446 19.46531105]
[-54.43055344 17.98744202]
[-43.85100174 28.62102509]
[-45.40489578 43.54032135]
[-57.94807053 51.76545715]
[-44.04431915 57.39446259]
[-30.14056778 63.02346802]
[-16.23681641 68.65247345]
[-2.33306479 74.28147888]
[11.57068634 79.91048431]
[25.47443771 85.53948975]
[39.37818909 91.16849518]
[53.28194046 96.79750061]
[122.06378937 43.22782516]
[134.76464844 35.24734497]
[147.46551514 27.26686287]
[160.16638184 19.28638268]
[172.86724854 11.30590057]
[185.56811523 3.32541966]
[198.26896667 -4.65506124]
[210.96983337 -12.63554287]
[223.67070007 -20.61602402]
[235.97328186 -29.19777298]
[247.84915161 -38.36095428]
[259.72500610 -47.52413177]
[271.60086060 -56.68731308]
[271.01864624 -72.19345856]
[279.68984985 -85.06163788]
[294.28021240 -90.34375763]
[309.17944336 -86.00875092]
[318.65850830 -73.72350311]
[319.07247925 -58.21195221]
[310.26220703 -45.43860245]
[295.61538696 -40.31506348]
[280.76403809 -44.81144714]
[268.88818359 -35.64826965]
[257.01232910 -26.48509026]
[245.13645935 -17.32190895]
[259.81927490 -14.25353050]
[268.15573120 -1.78342247]
[265.37850952 12.95723915]
[253.07582092 21.53883743]
[238.28309631 19.05388451]
[229.45970154 6.92343140]
[231.65118408 -7.91516066]
[218.95031738 0.06532045]
[206.24945068 8.04580116]
[193.54858398 16.02628326]
[180.84773254 24.00676346]
[168.14686584 31.98724556]
[155.44599915 39.96772766]
[142.74513245 47.94820786]
[130.04428101 55.92868805]
[130.58476257 63.40918732]
[132.20625305 85.85068512]
[145.92243958 91.92243195]
[159.63862610 97.99418640]
[173.35481262 104.06593323]
[187.94502258 98.61032104]
[201.76869202 104.96333313]
[206.87986755 118.90647888]
[220.59606934 124.97823334]
[237.52702332 125.86080170]
[241.36590576 142.37440491]
[226.56036377 150.63468933]
[214.52430725 138.69442749]
[200.80812073 132.62266541]
[187.05006409 138.21296692]
[173.05340576 132.25074768]
[167.28306580 117.78212738]
[153.56687927 111.71037292]
[139.85069275 105.63862610]
[126.13449860 99.56687164]
[116.50292206 111.06612396]
[124.88638306 123.50466919]
[133.26985168 135.94322205]
[141.65332031 148.38177490]
[150.03677368 160.82032776]
[158.42024231 173.25888062]
[173.38647461 179.96287537]
[174.79437256 196.30148315]
[161.19560242 205.46691895]
[146.57940674 198.03059387]
[145.98168945 181.64233398]
[137.59822083 169.20378113]
[129.21476746 156.76524353]
[120.83129883 144.32669067]
[112.44783783 131.88813782]
[104.06436920 119.44958496]
[96.92774200 121.75577545]
[93.78585815 136.42303467]
[82.65447998 126.36815643]
[75.51785278 128.67434692]
[75.99862671 143.66664124]
[76.47940063 158.65893555]
[88.88547516 168.17855835]
[92.21949768 183.45660400]
[84.90723419 197.27922058]
[70.40132141 203.11981201]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 191]
[4 190]
[5 189]
[13 109]
[14 108]
[15 107]
[16 106]
[17 105]
[18 104]
[19 103]
[20 102]
[21 101]
[22 95]
[23 94]
[25 93]
[26 92]
[27 91]
[29 89]
[30 88]
[31 87]
[32 86]
[33 85]
[35 82]
[36 81]
[38 79]
[39 78]
[40 77]
[43 74]
[44 73]
[45 72]
[46 71]
[47 70]
[49 68]
[50 67]
[53 62]
[54 61]
[110 149]
[111 148]
[112 147]
[113 146]
[114 145]
[115 144]
[116 143]
[117 142]
[118 141]
[119 134]
[120 133]
[121 132]
[122 131]
[151 169]
[152 168]
[153 167]
[154 166]
[157 163]
[158 162]
[170 185]
[171 184]
[172 183]
[173 182]
[174 181]
[175 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
