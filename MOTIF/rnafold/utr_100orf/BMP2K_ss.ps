%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:57:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGGGCCCAGGCUGUGCGCUUGGGGAGCGCGGAAUGUGAGGCUUGGCGGGCCGCAGCACGCUCGGACGGGCCAGGGGCGGCGACCCCUCGCGGACGCCCGGCUGCGCGCCGGGCCGGGGACUUGCCCUUGCACGCUCCCUGCGCCCUCCAGCUCGCCGGCGGGACCAUGAAGAAGUUCUCUCGGAUGCCCAAGUCGGAGGGCGGCAGCGGCGGCGGAGCGGCGGGUGGCGGGGCUGGCGGGGCCGGGGCCGGGGC\
CGGCUGCGGCU\
) } def
/len { sequence length } bind def

/coor [
[26.29616356 230.16593933]
[18.11917877 242.74118042]
[10.09071922 255.41177368]
[2.21189833 268.17593384]
[-5.66692257 280.94012451]
[-13.54574394 293.70428467]
[-21.42456436 306.46847534]
[-29.22815704 319.27877808]
[-36.95624924 332.13476562]
[-28.67207527 344.90716553]
[-26.76268959 359.94848633]
[-31.55367088 374.26861572]
[-42.04396057 385.04428101]
[-56.11449432 390.17550659]
[-70.95610046 388.69491577]
[-78.68418884 401.55090332]
[-86.41228485 414.40689087]
[-94.14037323 427.26287842]
[-101.86846924 440.11886597]
[-109.59655762 452.97488403]
[-117.32465363 465.83087158]
[-120.30295563 482.52117920]
[-137.16546631 484.27960205]
[-143.52317810 468.56283569]
[-130.18064880 458.10278320]
[-122.45255280 445.24676514]
[-114.72446442 432.39077759]
[-106.99636841 419.53479004]
[-99.26828003 406.67880249]
[-91.54018402 393.82281494]
[-83.81209564 380.96679688]
[-92.08224487 368.55432129]
[-94.15152740 353.72097778]
[-89.55646515 339.40155029]
[-79.15746307 328.45254517]
[-64.97825623 323.08251953]
[-49.81224442 324.40667725]
[-42.08415222 311.55068970]
[-41.33406830 304.22399902]
[-34.18873978 298.58966064]
[-26.30991936 285.82546997]
[-18.43109894 273.06130981]
[-10.55227757 260.29711914]
[-2.67345643 247.53294373]
[-2.87228966 242.79214478]
[-0.11821587 237.86999512]
[5.54392815 234.56419373]
[13.72091293 221.98895264]
[21.82377625 209.36581421]
[29.85223389 196.69522095]
[37.88069153 184.02462769]
[45.90915298 171.35403442]
[53.93761063 158.68344116]
[61.96606827 146.01286316]
[69.99452972 133.34226990]
[78.02298737 120.67167664]
[86.05144501 108.00109100]
[82.33972168 101.48394775]
[74.91627502 88.44966888]
[71.20455170 81.93253326]
[56.21104050 82.37370300]
[41.21752930 82.81487274]
[26.22402000 83.25604248]
[12.56105232 92.32551575]
[-2.00241709 84.78646088]
[-2.48473907 68.39440918]
[11.61025715 60.01209641]
[25.78284836 68.26253510]
[40.77635956 67.82135773]
[55.76987076 67.38018799]
[70.76338196 66.93901825]
[71.86249542 59.51999283]
[75.15984344 37.26291656]
[60.93825531 32.49358368]
[46.71667099 27.72425079]
[32.49508667 22.95491791]
[18.27350044 18.18558693]
[4.23832035 25.45120621]
[-10.79810619 20.58484840]
[-17.91493225 6.47363567]
[-12.88987160 -8.51049995]
[1.29579592 -15.47773552]
[16.22596550 -10.29453468]
[23.04283333 3.96400142]
[37.26441956 8.73333359]
[51.48600388 13.50266552]
[65.70758820 18.27199745]
[79.92916870 23.04133034]
[91.54158020 45.26411819]
[98.39131165 68.80316162]
[100.35637665 92.91795349]
[112.58431244 84.23017883]
[124.81225586 75.54239655]
[125.99648285 64.77331543]
[132.75758362 56.59024048]
[142.69136047 53.52573776]
[152.46644592 56.35604095]
[164.89541626 47.95839691]
[177.32440186 39.56074905]
[189.75338745 31.16310310]
[202.18235779 22.76545906]
[214.61134338 14.36781311]
[227.04031372 5.97016716]
[234.14344788 -8.16688061]
[249.02091980 -8.88103771]
[261.44992065 -17.27868462]
[266.78530884 -24.64992332]
[274.07489014 -25.70100975]
[286.60183716 -33.95183563]
[299.12875366 -42.20265961]
[302.43374634 -57.42484283]
[315.25534058 -65.61389923]
[329.74700928 -62.36929321]
[342.27392578 -70.62011719]
[354.80087280 -78.87094116]
[367.32778931 -87.12176514]
[379.85470581 -95.37259674]
[381.41827393 -106.09317017]
[388.46395874 -114.03254700]
[398.49969482 -116.74456024]
[408.16879272 -113.57104492]
[420.88638306 -121.52481842]
[433.60400391 -129.47859192]
[446.32159424 -137.43237305]
[459.03921509 -145.38615417]
[471.75680542 -153.33993530]
[484.42739868 -161.36839294]
[497.05053711 -169.47125244]
[509.67367554 -177.57411194]
[522.29681396 -185.67697144]
[534.91992188 -193.77983093]
[540.42730713 -201.02349854]
[547.73962402 -201.90275574]
[560.45721436 -209.85653687]
[573.17480469 -217.81031799]
[585.89245605 -225.76409912]
[598.61004639 -233.71786499]
[611.32763672 -241.67164612]
[612.81524658 -255.03770447]
[621.59277344 -264.96884155]
[634.29669189 -267.99694824]
[646.24908447 -263.23678589]
[659.05944824 -271.04037476]
[671.86975098 -278.84396362]
[684.68005371 -286.64755249]
[697.44421387 -294.52639771]
[710.16180420 -302.48016357]
[722.83239746 -310.50860596]
[735.45556641 -318.61148071]
[740.96289062 -325.85513306]
[748.27520752 -326.73440552]
[760.99279785 -334.68817139]
[773.71044922 -342.64196777]
[786.42803955 -350.59573364]
[794.02563477 -364.47329712]
[808.91906738 -364.66195679]
[821.63665771 -372.61575317]
[834.35424805 -380.56951904]
[847.07183838 -388.52328491]
[859.78948975 -396.47708130]
[872.41259766 -404.57992554]
[884.93951416 -412.83074951]
[897.46643066 -421.08157349]
[896.66967773 -436.35614014]
[903.57971191 -449.88934326]
[916.25170898 -458.09222412]
[931.22796631 -458.84585571]
[944.48138428 -452.04782104]
[957.00830078 -460.29864502]
[969.53521729 -468.54946899]
[982.01336670 -476.87384033]
[994.44238281 -485.27148438]
[1006.87133789 -493.66912842]
[1016.61059570 -507.54653931]
[1032.64184570 -502.02954102]
[1031.77832031 -485.09759521]
[1015.26898193 -481.24014282]
[1002.84002686 -472.84249878]
[990.41101074 -464.44485474]
[986.64105225 -458.11791992]
[977.78601074 -456.02255249]
[965.25909424 -447.77172852]
[952.73217773 -439.52090454]
[953.74426270 -424.66015625]
[947.13812256 -411.19857788]
[934.59796143 -402.79553223]
[919.43591309 -401.79101562]
[905.71728516 -408.55465698]
[893.19036865 -400.30383301]
[880.66345215 -392.05300903]
[878.84436035 -387.67056274]
[874.27136230 -384.36901855]
[867.74322510 -383.75946045]
[855.02563477 -375.80569458]
[842.30804443 -367.85192871]
[829.59045410 -359.89813232]
[816.87280273 -351.94436646]
[810.18487549 -338.63571167]
[794.38177490 -337.87814331]
[781.66418457 -329.92434692]
[768.94659424 -321.97058105]
[756.22900391 -314.01681519]
[743.55841064 -305.98834229]
[730.93524170 -297.88546753]
[727.01745605 -291.64901733]
[718.11560059 -289.76254272]
[705.39801025 -281.80877686]
[701.40704346 -275.61883545]
[692.48364258 -273.83724976]
[679.67333984 -266.03366089]
[666.86303711 -258.23007202]
[654.05273438 -250.42648315]
[650.77233887 -233.91606140]
[636.27130127 -224.71945190]
[619.28143311 -228.95404053]
[606.56384277 -221.00027466]
[593.84619141 -213.04649353]
[581.12860107 -205.09271240]
[568.41101074 -197.13893127]
[555.69342041 -189.18515015]
[543.02282715 -181.15669250]
[530.39965820 -173.05383301]
[517.77655029 -164.95097351]
[505.15341187 -156.84811401]
[492.53027344 -148.74525452]
[488.61242676 -142.50877380]
[479.71057129 -140.62232971]
[466.99298096 -132.66854858]
[454.27539062 -124.71477509]
[441.55776978 -116.76099396]
[428.84017944 -108.80721283]
[416.12255859 -100.85343933]
[408.28369141 -83.15612793]
[388.10552979 -82.84566498]
[375.57861328 -74.59484100]
[363.05169678 -66.34401703]
[350.52474976 -58.09319305]
[337.99783325 -49.84236526]
[335.25631714 -35.24717331]
[322.66976929 -26.70121384]
[307.37957764 -29.67573357]
[294.85266113 -21.42490768]
[282.32571411 -13.17408276]
[269.84756470 -4.84970379]
[257.41857910 3.54794216]
[251.20445251 17.08433342]
[235.43797302 18.39914703]
[223.00898743 26.79679298]
[210.58000183 35.19443893]
[198.15103149 43.59208298]
[185.72204590 51.98973083]
[173.29306030 60.38737488]
[160.86408997 68.78501892]
[153.65464783 86.74794769]
[133.50003052 87.77033997]
[121.27209473 96.45811462]
[109.04415131 105.14589691]
[98.72203827 116.02954865]
[90.69358063 128.70013428]
[82.66511536 141.37072754]
[74.63665771 154.04132080]
[66.60820007 166.71191406]
[58.57974243 179.38249207]
[50.55128479 192.05308533]
[42.52282333 204.72367859]
[34.49436569 217.39427185]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 48]
[2 47]
[3 44]
[4 43]
[5 42]
[6 41]
[7 40]
[8 38]
[9 37]
[15 31]
[16 30]
[17 29]
[18 28]
[19 27]
[20 26]
[21 25]
[49 266]
[50 265]
[51 264]
[52 263]
[53 262]
[54 261]
[55 260]
[56 259]
[57 258]
[60 71]
[61 70]
[62 69]
[63 68]
[73 88]
[74 87]
[75 86]
[76 85]
[77 84]
[91 257]
[92 256]
[93 255]
[97 253]
[98 252]
[99 251]
[100 250]
[101 249]
[102 248]
[103 247]
[105 245]
[106 244]
[108 243]
[109 242]
[110 241]
[113 238]
[114 237]
[115 236]
[116 235]
[117 234]
[121 232]
[122 231]
[123 230]
[124 229]
[125 228]
[126 227]
[127 225]
[128 224]
[129 223]
[130 222]
[131 221]
[133 220]
[134 219]
[135 218]
[136 217]
[137 216]
[138 215]
[142 212]
[143 211]
[144 210]
[145 209]
[146 207]
[147 206]
[148 204]
[149 203]
[151 202]
[152 201]
[153 200]
[154 199]
[156 197]
[157 196]
[158 195]
[159 194]
[160 193]
[161 190]
[162 189]
[163 188]
[168 183]
[169 182]
[170 181]
[171 179]
[172 178]
[173 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
