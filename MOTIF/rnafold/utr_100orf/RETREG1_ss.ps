%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:42:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCGCCGCCCCGCCCUCGGCGGCACCCACACCCAGGCGCGCCCGCGCGCGCGCCCGGCCCCGUCCCUGUCUGGAAGCACAGCUGAAGAUGGCGAGCCCGGCGCCUCCGGAGCACGCCGAGGAGGGAUGCCCGGCUCCUGCCGCCGAGGAGCAGGCGCCGCCGUCGCCGCCACCGCCCCAGGCAUCCC\
) } def
/len { sequence length } bind def

/coor [
[220.09819031 636.80706787]
[214.24235535 622.99731445]
[202.15042114 614.30053711]
[203.88632202 598.57482910]
[198.03048706 584.76507568]
[185.93855286 576.06829834]
[187.67445374 560.34259033]
[181.81861877 546.53283691]
[175.84759521 532.77252197]
[169.76182556 519.06256104]
[157.52626038 510.56900024]
[158.99914551 494.81649780]
[152.91336060 481.10653687]
[146.71324158 467.44790649]
[140.39923096 453.84152222]
[134.08520508 440.23516846]
[127.77117920 426.62881470]
[121.45716095 413.02243042]
[115.14313507 399.41607666]
[108.82911682 385.80972290]
[102.51509857 372.20333862]
[96.20107269 358.59698486]
[89.88705444 344.99063110]
[83.57302856 331.38424683]
[89.57805634 345.12979126]
[88.23086548 360.06918335]
[79.86364746 372.51864624]
[66.53958130 379.40844727]
[51.54411316 379.03967285]
[38.57482147 371.50326538]
[30.82966995 358.65753174]
[30.21845245 343.66998291]
[36.89188385 330.23626709]
[49.20443344 321.66882324]
[64.11886597 320.08004761]
[49.17119598 321.33187866]
[34.22352219 322.58370972]
[19.27585030 323.83554077]
[4.32817841 325.08737183]
[-10.61949348 326.33923340]
[-25.56716537 327.59106445]
[-35.57817459 339.82034302]
[-51.31250381 341.30572510]
[-63.43525696 331.16598511]
[-64.75421906 315.41683960]
[-54.48686981 303.40194702]
[-38.72465134 302.24957275]
[-26.81900215 312.64337158]
[-11.87133121 311.39154053]
[3.07634139 310.13970947]
[18.02401352 308.88787842]
[32.97168732 307.63604736]
[47.91935730 306.38418579]
[62.86703110 305.13235474]
[67.68530273 283.31314087]
[84.83278656 273.24325562]
[85.58444977 258.26211548]
[86.33611298 243.28096008]
[87.08777618 228.29980469]
[77.02364349 211.80267334]
[88.17229462 195.02336121]
[88.42294312 180.02545166]
[88.67359161 165.02754211]
[88.92424011 150.02963257]
[89.17488861 135.03173828]
[89.42553711 120.03382874]
[89.67617798 105.03591919]
[85.95554352 90.50468445]
[78.52802277 77.47272491]
[71.10049438 64.44077301]
[63.67296982 51.40881348]
[50.34781265 49.36532211]
[40.77671432 40.15023804]
[38.30352020 27.29446983]
[43.61221313 15.54095840]
[36.40348816 2.38670921]
[29.19476128 -10.76753998]
[16.28042603 -21.75190544]
[23.26047516 -37.20231628]
[40.03934860 -34.77215195]
[42.34901047 -17.97626686]
[49.55773544 -4.82201719]
[56.76646423 8.33223152]
[73.08958435 12.34382534]
[81.63746643 27.20759773]
[76.70492554 43.98128891]
[84.13245392 57.01324463]
[91.55997467 70.04520416]
[98.98750305 83.07715607]
[113.91217041 81.57572174]
[118.59507751 67.32544708]
[123.27798462 53.07516861]
[127.96089172 38.82489395]
[124.91864014 23.29893684]
[136.24259949 13.62333107]
[140.92550659 -0.62694544]
[145.48918152 -14.91585159]
[149.93331909 -29.24238777]
[154.37744141 -43.56892776]
[158.82157898 -57.89546204]
[152.65013123 -72.70400238]
[160.50604248 -86.69201660]
[176.36289978 -89.12908936]
[188.05670166 -78.14571381]
[186.61695862 -62.16739655]
[173.14811707 -53.45132828]
[168.70397949 -39.12479401]
[164.25985718 -24.79825401]
[159.81571960 -10.47171783]
[160.83886719 -3.13707662]
[155.17578125 4.05596161]
[150.49287415 18.30623817]
[153.87007141 32.81291962]
[142.21116638 43.50780106]
[137.52825928 57.75807571]
[132.84535217 72.00835419]
[128.16244507 86.25862885]
[125.98445892 94.90032959]
[121.57666779 101.43384552]
[115.88245392 105.37823486]
[109.92062378 106.59452057]
[104.67408752 105.28656769]
[104.42343903 120.28446960]
[104.17279053 135.28237915]
[103.92214203 150.28028870]
[103.67150116 165.27818298]
[103.42085266 180.27609253]
[103.17020416 195.27400208]
[111.18809509 202.66101074]
[113.75314331 213.03068542]
[110.25052643 222.88934326]
[102.06893158 229.05146790]
[101.31726837 244.03262329]
[100.56560516 259.01376343]
[99.81394196 273.99493408]
[115.33718109 287.29739380]
[115.33532715 309.48300171]
[97.17939758 325.07025146]
[103.49341583 338.67660522]
[109.80743408 352.28295898]
[116.12145996 365.88934326]
[122.43547821 379.49569702]
[128.74949646 393.10205078]
[135.06352234 406.70843506]
[141.37754822 420.31478882]
[147.69155884 433.92114258]
[154.00558472 447.52749634]
[160.31961060 461.13388062]
[166.78347778 467.61682129]
[166.62333679 475.02075195]
[172.70910645 488.73074341]
[185.37997437 498.20489502]
[183.47178650 512.97674561]
[189.55757141 526.68670654]
[195.91221619 533.27679443]
[195.62837219 540.67700195]
[201.48420715 554.48675537]
[213.99499512 564.17132568]
[211.84024048 578.90924072]
[217.69607544 592.71899414]
[230.20686340 602.40356445]
[228.05210876 617.14147949]
[233.90794373 630.95123291]
[253.55912781 643.26593018]
[250.20906067 665.46533203]
[257.19699097 678.73822021]
[264.18490601 692.01104736]
[279.43630981 691.41314697]
[293.43334961 697.49963379]
[303.39691162 709.06213379]
[307.34869385 723.80474854]
[304.50411987 738.80047607]
[295.42794800 751.07177734]
[281.92224121 758.18231201]
[266.66860962 758.72015381]
[252.69564819 752.57855225]
[242.77769470 740.97698975]
[238.88398743 726.21887207]
[241.78759766 711.23449707]
[250.91203308 698.99896240]
[243.92411804 685.72613525]
[236.93620300 672.45324707]
[229.78999329 672.10937500]
[223.14768982 669.27264404]
[217.85881042 664.25427246]
[214.61750793 657.64746094]
[213.87182617 650.25769043]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 163]
[2 162]
[4 160]
[5 159]
[7 157]
[8 156]
[9 154]
[10 153]
[12 151]
[13 150]
[14 148]
[15 147]
[16 146]
[17 145]
[18 144]
[19 143]
[20 142]
[21 141]
[22 140]
[23 139]
[24 138]
[35 54]
[36 53]
[37 52]
[38 51]
[39 50]
[40 49]
[41 48]
[56 135]
[57 134]
[58 133]
[59 132]
[61 128]
[62 127]
[63 126]
[64 125]
[65 124]
[66 123]
[67 122]
[68 89]
[69 88]
[70 87]
[71 86]
[75 83]
[76 82]
[77 81]
[90 117]
[91 116]
[92 115]
[93 114]
[95 112]
[96 111]
[97 109]
[98 108]
[99 107]
[100 106]
[165 182]
[166 181]
[167 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
