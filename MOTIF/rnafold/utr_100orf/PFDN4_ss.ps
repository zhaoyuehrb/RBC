%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:06:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGUCCAAGAGGACGGAAUGUGGAGACAGUGUUGUAUUUUUGCGGGGAGUUCUAGGCCGACCGGGAGCGAGAGAACGCUCGGGGGCGAAGCGCGCCAUUGCGGCCCUCCCCGCCGCCUGCGGUAGUCCAGUCCCAAGAUGGCGGCCACCAUGAAGAAGGCGGCUGCAGAAGAUGUCAAUGUUACUUUCGAAGAUCAACAAAAGAUAAACAAAUUUGCACGGAAUACAAGUAGAAUCA\
) } def
/len { sequence length } bind def

/coor [
[102.50000000 500.32534790]
[95.38757324 501.92773438]
[88.12763214 502.56304932]
[80.85101318 502.22064209]
[77.14358521 516.75524902]
[73.43615723 531.28985596]
[69.72872925 545.82452393]
[74.68220520 561.45764160]
[63.42199707 573.37988281]
[47.53164673 569.32666016]
[43.35778427 553.46752930]
[55.19411850 542.11706543]
[58.90154648 527.58245850]
[62.60897064 513.04785156]
[66.31639862 498.51321411]
[46.80411911 485.01928711]
[34.88659286 464.46276855]
[32.86546707 440.74990845]
[41.15828323 418.40258789]
[58.21272659 401.69598389]
[80.79709625 393.84069824]
[81.19139099 378.84588623]
[81.58568573 363.85107422]
[74.18561554 350.92480469]
[82.28299713 337.33279419]
[82.67729950 322.33798218]
[83.07159424 307.34317017]
[72.98941803 299.33728027]
[69.29845428 286.80065918]
[73.55892944 274.24044800]
[84.42962646 266.30728149]
[85.02098083 251.31895447]
[85.61234283 236.33061218]
[86.20370483 221.34226990]
[83.33232880 214.54777527]
[86.90262604 206.16117859]
[87.69094849 191.18191528]
[88.47927094 176.20263672]
[89.26759338 161.22337341]
[90.05590820 146.24409485]
[90.84423065 131.26483154]
[91.63255310 116.28556061]
[84.27529907 103.21380615]
[71.06102753 96.11569977]
[57.84675980 89.01759338]
[44.63249207 81.91948700]
[31.41822243 74.82138062]
[18.20395470 67.72327423]
[4.98968649 60.62516785]
[-8.22458172 53.52706146]
[-6.35587549 68.41020203]
[-16.72957611 79.24469757]
[-31.67984009 78.02419281]
[-40.15888214 65.65059662]
[-35.90095520 51.26762390]
[-22.05104065 45.50391006]
[-34.77060318 37.55326462]
[-47.49016190 29.60261726]
[-60.20972061 21.65197182]
[-72.92928314 13.70132446]
[-95.95778656 21.17677689]
[-117.07216644 2.63405991]
[-131.17129517 -2.48594737]
[-143.15342712 2.25430751]
[-154.78364563 -2.28628206]
[-160.03530884 -13.17010975]
[-174.06591797 -18.47499847]
[-188.09652710 -23.77988815]
[-202.12715149 -29.08477783]
[-216.15776062 -34.38966751]
[-230.45822144 -27.66118431]
[-245.29940796 -33.09391022]
[-251.87632751 -47.46470642]
[-246.28698730 -62.24763107]
[-231.84745789 -68.67224121]
[-217.12446594 -62.92692566]
[-210.85287476 -48.42028046]
[-196.82225037 -43.11539078]
[-182.79164124 -37.81050110]
[-168.76103210 -32.50561523]
[-154.73040771 -27.20072365]
[-137.57951355 -30.95536995]
[-126.05129242 -16.58507919]
[-111.95215607 -11.46507168]
[-103.66990662 -23.97124290]
[-113.88625336 -34.95423889]
[-124.10260010 -45.93723679]
[-134.31895447 -56.92023468]
[-150.23503113 -58.93463135]
[-158.46025085 -72.70870972]
[-152.68492126 -87.67617798]
[-137.33938599 -92.35527802]
[-124.19541931 -83.15660095]
[-123.33595276 -67.13658142]
[-113.11960602 -56.15358353]
[-102.90325928 -45.17058945]
[-92.68691254 -34.18759155]
[-80.96549225 -32.44190979]
[-71.40163422 -26.57101822]
[-65.27504730 -17.92806435]
[-63.17807388 -8.18408298]
[-64.97863770 0.98176384]
[-52.25907516 8.93241024]
[-39.53951645 16.88305664]
[-26.81995392 24.83370399]
[-14.10039425 32.78435135]
[-1.12647533 40.31279373]
[12.08779335 47.41090012]
[25.30206108 54.50900650]
[38.51633072 61.60711288]
[51.73059845 68.70521545]
[64.94486237 75.80332184]
[78.15913391 82.90142822]
[91.37340546 89.99953461]
[94.44092560 86.93626404]
[98.59152985 84.87787628]
[103.47646332 84.20012665]
[108.62017059 85.15295410]
[120.79010010 76.38409424]
[127.46342468 62.03915787]
[142.31257629 60.87640762]
[154.48249817 52.10755157]
[166.65243530 43.33869553]
[173.32575989 28.99375534]
[188.17491150 27.83100700]
[200.34483337 19.06215286]
[212.51475525 10.29329586]
[219.68997192 -6.67495489]
[237.21488953 -7.73688221]
[249.26850891 -16.66494560]
[243.21437073 -31.04097557]
[240.77253723 -46.43863297]
[242.08039856 -61.96498871]
[247.05801392 -76.72064972]
[255.41294861 -89.85187531]
[266.65756226 -100.59996033]
[280.13729858 -108.34508514]
[295.06900024 -112.64203644]
[310.58621216 -113.24583435]
[325.78952026 -110.12564850]
[339.79879761 -103.46638489]
[351.80401611 -93.65770721]
[363.73922729 -102.74343872]
[375.67443848 -111.82917023]
[387.60968018 -120.91489410]
[399.54489136 -130.00062561]
[411.48010254 -139.08636475]
[417.77404785 -153.60176086]
[432.58749390 -155.15443420]
[444.52273560 -164.24017334]
[444.04138184 -179.74977112]
[452.79611206 -192.56126404]
[467.42053223 -197.74836731]
[482.29125977 -193.31652832]
[491.69018555 -180.96987915]
[492.00326538 -165.45596313]
[483.11004639 -152.74018860]
[468.43023682 -147.71205139]
[453.60845947 -152.30494690]
[441.67324829 -143.21922302]
[436.23297119 -129.35368347]
[420.56585693 -127.15113831]
[408.63061523 -118.06540680]
[396.69540405 -108.97967529]
[384.76019287 -99.89394379]
[372.82495117 -90.80821991]
[360.88973999 -81.72248840]
[366.83004761 -68.55603027]
[369.68780518 -54.38942337]
[369.31600952 -39.93471527]
[365.72998047 -25.91920280]
[359.10690308 -13.04883480]
[349.77697754 -1.97265053]
[338.20706177 6.74995470]
[324.97723389 12.67747402]
[310.75164795 15.50864124]
[296.24539185 15.09773540]
[282.18835449 11.46208286]
[269.28857422 4.78135014]
[258.19656372 -4.61133003]
[246.14295959 4.31673431]
[244.05647278 16.21985245]
[234.10408020 23.75832939]
[221.28361511 22.46322441]
[209.11369324 31.23208046]
[196.94375610 40.00093842]
[191.14091492 53.71866989]
[175.42127991 55.50862503]
[163.25135803 64.27748108]
[151.08143616 73.04634094]
[145.27857971 86.76406860]
[129.55895996 88.55402374]
[117.38902283 97.32288361]
[131.97549438 93.82505798]
[145.65098572 99.98792267]
[152.69253540 113.23241425]
[150.15335083 128.01594543]
[139.09605408 138.15182495]
[124.14793396 139.39836121]
[111.56455231 131.23390198]
[106.61182404 117.07388306]
[105.82350159 132.05314636]
[105.03517914 147.03242493]
[104.24686432 162.01168823]
[103.45854187 176.99096680]
[102.67021942 191.97023010]
[101.88189697 206.94950867]
[101.19203949 221.93363953]
[100.60068512 236.92196655]
[100.00932312 251.91030884]
[99.41796112 266.89865112]
[111.52608490 279.53710938]
[110.75306702 296.68414307]
[98.06641388 307.73745728]
[97.67211151 322.73226929]
[97.27781677 337.72708130]
[104.64968872 351.72589111]
[96.58050537 364.24536133]
[96.18621063 379.24017334]
[95.79190826 394.23498535]
[102.94277191 395.93817139]
[109.79836273 398.58245850]
[116.23548889 402.11947632]
[122.13859558 406.48480225]
[127.40184021 411.59921265]
[131.93098450 417.36993408]
[135.64508057 423.69259644]
[138.47793579 430.45285034]
[140.37924194 437.52868652]
[141.31556702 444.79238892]
[141.27082825 452.11303711]
[140.24662781 459.35879517]
[138.26222229 466.39926147]
[135.35414124 473.10781860]
[131.57548523 479.36398315]
[126.99501801 485.05548096]
[121.69585419 490.08032227]
[115.77400970 494.34854126]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 15]
[5 14]
[6 13]
[7 12]
[21 220]
[22 219]
[23 218]
[25 216]
[26 215]
[27 214]
[31 211]
[32 210]
[33 209]
[34 208]
[36 207]
[37 206]
[38 205]
[39 204]
[40 203]
[41 202]
[42 201]
[43 114]
[44 113]
[45 112]
[46 111]
[47 110]
[48 109]
[49 108]
[50 107]
[56 106]
[57 105]
[58 104]
[59 103]
[60 102]
[62 84]
[63 83]
[66 81]
[67 80]
[68 79]
[69 78]
[70 77]
[85 97]
[86 96]
[87 95]
[88 94]
[118 193]
[119 192]
[121 190]
[122 189]
[123 188]
[125 186]
[126 185]
[127 184]
[129 181]
[130 180]
[142 167]
[143 166]
[144 165]
[145 164]
[146 163]
[147 162]
[149 160]
[150 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
