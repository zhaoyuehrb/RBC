%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:14:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCCUCUCCCCCCCUUCUCUCUCUCUCCGAGGGGGGGGGGUCCCAGGGAGGGAGGGGGGGUCCCCCGAUCAGCAUGUGGCUCCUGGCGCUGUGUCUGGUGGGGCUGGCGGGGGCUCAACGCGGGGGAGGGGGUCCCGGCGGCGGCGCCCCGGGCGGCCCCGGCCUGGGCCUCG\
) } def
/len { sequence length } bind def

/coor [
[84.51550293 116.69820404]
[71.26282501 123.72433472]
[58.01014328 130.75045776]
[44.75746536 137.77658081]
[31.50478363 144.80271912]
[18.25210190 151.82884216]
[4.99942207 158.85496521]
[-8.25325871 165.88108826]
[-21.50593948 172.90722656]
[-34.75862122 179.93334961]
[-43.32702255 193.23345947]
[-58.19593811 192.35902405]
[-71.44861603 199.38514709]
[-84.70129395 206.41128540]
[-97.95397949 213.43740845]
[-100.09097290 230.19960022]
[-111.67368317 242.27424622]
[-128.00529480 245.05052185]
[-142.63122559 237.63163757]
[-155.75489807 244.89588928]
[-168.87857056 252.16014099]
[-182.00224304 259.42437744]
[-195.12591553 266.68862915]
[-208.24958801 273.95288086]
[-221.37324524 281.21713257]
[-234.49691772 288.48138428]
[-247.62059021 295.74560547]
[-255.60699463 310.06866455]
[-272.00613403 310.04315186]
[-279.94796753 295.69534302]
[-271.26260376 281.78503418]
[-254.88484192 282.62194824]
[-241.76116943 275.35769653]
[-228.63749695 268.09344482]
[-215.51382446 260.82919312]
[-202.39015198 253.56495667]
[-189.26649475 246.30072021]
[-176.14282227 239.03646851]
[-163.01914978 231.77221680]
[-149.89547729 224.50796509]
[-149.49249268 211.14421082]
[-142.47503662 199.63694763]
[-130.58912659 193.05517578]
[-116.89515686 193.21607971]
[-104.98010254 200.18472290]
[-91.72742462 193.15859985]
[-78.47474670 186.13247681]
[-65.22206116 179.10633850]
[-57.60158157 166.30879211]
[-41.78474808 166.68066406]
[-28.53206635 159.65454102]
[-15.27938557 152.62841797]
[-2.02670455 145.60227966]
[11.22597599 138.57615662]
[24.47865677 131.55003357]
[37.73133850 124.52391052]
[50.98401642 117.49777985]
[64.23670197 110.47165680]
[77.48937988 103.44552612]
[82.12251282 85.89343262]
[98.11581421 77.30529785]
[101.86714172 62.78195190]
[105.61847687 48.25860977]
[109.36980438 33.73526382]
[113.12113190 19.21192169]
[116.87246704 4.68857670]
[120.62379456 -9.83476734]
[112.27104950 -16.50063896]
[106.64764404 -25.54286194]
[104.37895966 -35.90735245]
[105.70101929 -46.39590836]
[110.43626404 -55.80474472]
[118.01688385 -63.06262970]
[127.55279541 -67.35285187]
[137.93611145 -68.20507050]
[142.72563171 -82.41986847]
[142.50294495 -91.58701324]
[147.73207092 -96.84670258]
[152.77745056 -110.97271729]
[157.82283020 -125.09872437]
[162.86820984 -139.22473145]
[167.91358948 -153.35073853]
[172.95896912 -167.47676086]
[178.00434875 -181.60276794]
[183.04972839 -195.72877502]
[180.40504456 -211.32737732]
[191.97245789 -220.71057129]
[197.01783752 -234.83657837]
[196.20115662 -241.45379639]
[198.52250671 -246.68884277]
[202.50878906 -249.37590027]
[208.06085205 -263.31054688]
[205.98104858 -278.99444580]
[217.87966919 -287.95391846]
[223.43174744 -301.88858032]
[220.53709412 -318.03024292]
[233.24168396 -328.39968872]
[248.47610474 -322.32974243]
[250.56851196 -306.06463623]
[237.36639404 -296.33648682]
[231.81433105 -282.40185547]
[234.29124451 -267.71463013]
[221.99549866 -257.75848389]
[216.44343567 -243.82382202]
[211.14384460 -229.79119873]
[206.09846497 -215.66519165]
[209.10401917 -201.07698059]
[197.17573547 -190.68339539]
[192.13035583 -176.55738831]
[187.08497620 -162.43138123]
[182.03959656 -148.30537415]
[176.99421692 -134.17935181]
[171.94883728 -120.05334473]
[166.90345764 -105.92733765]
[161.85807800 -91.80133057]
[156.94042969 -77.63034821]
[152.15090942 -63.41555023]
[164.52975464 -48.32020187]
[165.33959961 -28.67157936]
[154.08201599 -12.37277412]
[135.14714050 -6.08343744]
[131.39581299 8.43990612]
[127.64447784 22.96325111]
[123.89315033 37.48659515]
[120.14181519 52.00993729]
[116.39048767 66.53327942]
[112.63916016 81.05662537]
[121.76969147 93.31567383]
[121.09207153 108.58628845]
[132.34732056 118.50190735]
[143.60256958 128.41751099]
[154.85780334 138.33312988]
[166.11305237 148.24874878]
[177.36830139 158.16436768]
[188.62355042 168.07997131]
[204.09318542 171.39677429]
[208.52841187 185.61570740]
[219.78366089 195.53131104]
[231.03890991 205.44692993]
[242.38320923 215.26052856]
[253.81564331 224.97132874]
[262.41412354 228.15756226]
[265.36477661 234.96211243]
[276.62002563 244.87773132]
[287.87524414 254.79335022]
[299.21957397 264.60696411]
[310.65197754 274.31774902]
[322.08441162 284.02853394]
[338.07070923 289.67428589]
[337.07107544 306.59872437]
[320.53128052 310.32330322]
[312.37362671 295.46096802]
[300.94119263 285.75018311]
[289.50875854 276.03936768]
[282.35037231 274.09890747]
[277.95965576 266.04858398]
[266.70440674 256.13296509]
[255.44914246 246.21736145]
[244.10484314 236.40376282]
[232.67242432 226.69296265]
[225.51400757 224.75250244]
[221.12329102 216.70217896]
[209.86804199 206.78656006]
[198.61280823 196.87095642]
[183.94822693 194.26338196]
[178.70793152 179.33522034]
[167.45269775 169.41960144]
[156.19744873 159.50399780]
[144.94219971 149.58837891]
[133.68695068 139.67276001]
[122.43170166 129.75715637]
[111.17645264 119.84153748]
[102.10929871 122.67488861]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 59]
[2 58]
[3 57]
[4 56]
[5 55]
[6 54]
[7 53]
[8 52]
[9 51]
[10 50]
[12 48]
[13 47]
[14 46]
[15 45]
[19 40]
[20 39]
[21 38]
[22 37]
[23 36]
[24 35]
[25 34]
[26 33]
[27 32]
[61 127]
[62 126]
[63 125]
[64 124]
[65 123]
[66 122]
[67 121]
[75 117]
[76 116]
[78 115]
[79 114]
[80 113]
[81 112]
[82 111]
[83 110]
[84 109]
[85 108]
[87 106]
[88 105]
[91 104]
[92 103]
[94 101]
[95 100]
[129 172]
[130 171]
[131 170]
[132 169]
[133 168]
[134 167]
[135 166]
[137 164]
[138 163]
[139 162]
[140 160]
[141 159]
[143 158]
[144 157]
[145 156]
[146 154]
[147 153]
[148 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
