%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:28:46 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PRSS53)
} def

/sequence { (\
AUGAAGUGGUGCUGGGGCCCAGUGCUGCUCAUCGCGGGUGCCACAGUCCUCAUGGAGGGUCUUCAAGCCGCUCAGCGUGCCUGUGGACAGCGUGGCCCCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 32 0.761772936 ubox
2 31 0.893777688 ubox
2 34 0.204840841 ubox
3 30 0.932353996 ubox
3 33 0.289541955 ubox
3 35 0.004103815 ubox
4 29 0.658302164 ubox
4 32 0.280336220 ubox
5 29 0.741275106 ubox
6 28 0.999598005 ubox
7 27 0.997693830 ubox
8 26 0.996061197 ubox
9 25 0.999960720 ubox
10 24 0.997933637 ubox
11 23 0.997933786 ubox
12 22 0.999964386 ubox
13 21 0.999737765 ubox
14 20 0.999924418 ubox
14 99 0.005051493 ubox
15 19 0.983772608 ubox
15 98 0.005055575 ubox
16 97 0.005055627 ubox
17 96 0.005055524 ubox
18 95 0.004751378 ubox
19 94 0.004422953 ubox
23 92 0.004738543 ubox
24 91 0.005031033 ubox
25 90 0.005031519 ubox
26 89 0.005028040 ubox
27 35 0.004374452 ubox
27 88 0.005012421 ubox
28 34 0.004415232 ubox
29 87 0.004187841 ubox
30 86 0.004087086 ubox
33 85 0.004584258 ubox
33 94 0.003679752 ubox
33 100 0.015827281 ubox
34 84 0.004775746 ubox
34 93 0.003698719 ubox
34 99 0.011216446 ubox
35 83 0.004795903 ubox
35 92 0.003701379 ubox
35 100 0.924730469 ubox
36 82 0.004797952 ubox
36 91 0.003692241 ubox
36 98 0.010142285 ubox
36 99 0.999389701 ubox
37 81 0.004801714 ubox
37 97 0.009929514 ubox
37 98 0.999570158 ubox
37 99 0.026285453 ubox
38 80 0.004799338 ubox
38 96 0.006997833 ubox
38 97 0.999451338 ubox
38 98 0.026411054 ubox
39 79 0.004756984 ubox
40 78 0.004616324 ubox
40 96 0.999845344 ubox
41 77 0.004604505 ubox
41 86 0.004002566 ubox
41 95 0.999971747 ubox
42 85 0.004010987 ubox
42 94 0.999965995 ubox
43 84 0.004016309 ubox
43 93 0.999346341 ubox
44 83 0.004022066 ubox
44 92 0.996197564 ubox
45 62 0.017433924 ubox
45 82 0.004020989 ubox
46 60 0.008945300 ubox
46 61 0.019146607 ubox
46 81 0.003985885 ubox
46 88 0.171765911 ubox
46 91 0.635708223 ubox
47 56 0.231673309 ubox
47 58 0.007382390 ubox
47 59 0.055555183 ubox
47 87 0.171773274 ubox
47 90 0.611424228 ubox
48 54 0.003589499 ubox
48 55 0.258145219 ubox
48 57 0.009105407 ubox
48 58 0.948074027 ubox
48 59 0.007914992 ubox
48 86 0.171702298 ubox
49 54 0.258135074 ubox
49 55 0.009364149 ubox
49 57 0.950299907 ubox
49 58 0.014422760 ubox
49 59 0.003809174 ubox
49 85 0.171426660 ubox
50 54 0.008564667 ubox
50 56 0.949599578 ubox
50 57 0.012943682 ubox
50 58 0.007902373 ubox
51 55 0.941629502 ubox
51 57 0.009804360 ubox
51 58 0.005749950 ubox
51 79 0.102721379 ubox
51 83 0.130339129 ubox
51 85 0.004219750 ubox
52 78 0.106733527 ubox
52 82 0.118615820 ubox
52 84 0.007090498 ubox
53 65 0.091166048 ubox
53 74 0.022638753 ubox
53 77 0.110731311 ubox
53 79 0.006011781 ubox
53 83 0.007265178 ubox
54 61 0.003512277 ubox
54 62 0.007866098 ubox
54 64 0.101301320 ubox
54 73 0.020368475 ubox
54 76 0.107429231 ubox
54 78 0.008385925 ubox
54 81 0.054741896 ubox
54 82 0.007043418 ubox
54 84 0.005068513 ubox
54 91 0.004128787 ubox
55 61 0.008732498 ubox
55 63 0.101331949 ubox
55 64 0.015977159 ubox
55 71 0.004640599 ubox
55 72 0.016622876 ubox
55 73 0.121209332 ubox
55 80 0.048454654 ubox
55 81 0.007027499 ubox
56 60 0.007609449 ubox
56 62 0.101262797 ubox
56 63 0.015784636 ubox
56 72 0.126377451 ubox
56 82 0.006912144 ubox
57 61 0.099067692 ubox
57 62 0.012764281 ubox
57 64 0.007211104 ubox
57 69 0.006639434 ubox
57 71 0.126453421 ubox
57 73 0.029245276 ubox
57 81 0.007536850 ubox
57 82 0.007033375 ubox
58 63 0.005710571 ubox
58 64 0.004287598 ubox
58 68 0.006659894 ubox
58 69 0.131816262 ubox
58 72 0.029054479 ubox
58 80 0.007023797 ubox
58 81 0.008694210 ubox
59 68 0.131998160 ubox
59 71 0.029082471 ubox
59 76 0.011485952 ubox
59 80 0.008654044 ubox
59 88 0.981256359 ubox
59 91 0.013153195 ubox
60 67 0.121975847 ubox
60 70 0.028122169 ubox
60 75 0.009062612 ubox
60 79 0.007919857 ubox
60 86 0.004834750 ubox
60 87 0.983950417 ubox
60 90 0.010653314 ubox
61 67 0.042820481 ubox
61 75 0.007012168 ubox
61 85 0.007265991 ubox
61 86 0.984649408 ubox
62 66 0.038967016 ubox
62 74 0.006812498 ubox
62 85 0.955008319 ubox
62 87 0.012010342 ubox
63 85 0.012543646 ubox
63 86 0.014028683 ubox
64 79 0.008918529 ubox
64 83 0.976629362 ubox
64 85 0.016866791 ubox
65 78 0.008786235 ubox
65 82 0.966205485 ubox
65 84 0.016922150 ubox
66 72 0.004543855 ubox
66 82 0.064876940 ubox
67 71 0.004526394 ubox
67 76 0.012699252 ubox
67 78 0.008399981 ubox
67 80 0.987251288 ubox
67 81 0.064041190 ubox
68 75 0.012688964 ubox
68 77 0.006300207 ubox
68 79 0.988703521 ubox
68 86 0.004837945 ubox
69 77 0.987968878 ubox
69 79 0.051580348 ubox
69 85 0.004868229 ubox
70 76 0.988528978 ubox
70 78 0.063130643 ubox
70 80 0.011494812 ubox
70 84 0.004844911 ubox
70 91 0.003895165 ubox
71 75 0.981352571 ubox
71 77 0.063344131 ubox
71 79 0.011870867 ubox
71 83 0.004778222 ubox
71 90 0.003897126 ubox
72 89 0.003482325 ubox
73 79 0.004060990 ubox
74 78 0.003485631 ubox
74 82 0.005866749 ubox
75 81 0.006664684 ubox
75 84 0.011606454 ubox
75 91 0.007244230 ubox
76 83 0.012189319 ubox
76 90 0.007247675 ubox
77 82 0.008651904 ubox
77 88 0.003930952 ubox
78 87 0.003941057 ubox
78 89 0.004999217 ubox
79 88 0.005261826 ubox
79 91 0.003845941 ubox
80 86 0.007387611 ubox
81 85 0.007359709 ubox
81 90 0.015552287 ubox
82 89 0.015959173 ubox
83 88 0.015903326 ubox
83 91 0.006134123 ubox
84 90 0.006107453 ubox
85 91 0.004165940 ubox
1 32 0.9500000 lbox
2 31 0.9500000 lbox
3 30 0.9500000 lbox
4 29 0.9500000 lbox
6 28 0.9500000 lbox
7 27 0.9500000 lbox
8 26 0.9500000 lbox
9 25 0.9500000 lbox
10 24 0.9500000 lbox
11 23 0.9500000 lbox
12 22 0.9500000 lbox
13 21 0.9500000 lbox
14 20 0.9500000 lbox
15 19 0.9500000 lbox
35 100 0.9500000 lbox
36 99 0.9500000 lbox
37 98 0.9500000 lbox
38 97 0.9500000 lbox
40 96 0.9500000 lbox
41 95 0.9500000 lbox
42 94 0.9500000 lbox
43 93 0.9500000 lbox
44 92 0.9500000 lbox
48 58 0.9500000 lbox
49 57 0.9500000 lbox
50 56 0.9500000 lbox
51 55 0.9500000 lbox
59 88 0.9500000 lbox
60 87 0.9500000 lbox
61 86 0.9500000 lbox
62 85 0.9500000 lbox
64 83 0.9500000 lbox
65 82 0.9500000 lbox
67 80 0.9500000 lbox
68 79 0.9500000 lbox
69 77 0.9500000 lbox
70 76 0.9500000 lbox
71 75 0.9500000 lbox
showpage
end
%%EOF
