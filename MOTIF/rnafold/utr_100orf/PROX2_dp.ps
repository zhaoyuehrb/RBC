%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:42:02 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PROX2)
} def

/sequence { (\
AUGGAUCCAAACUCCAUCUUGCUUUCUCCUCAGCCCCAGAUCUGCUCCCACCUAGCAGAAGCUUGUACGGAAGGCGAGAGAAGCUCAUCCCCUCCAGAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 17 0.439589416 ubox
2 9 0.036672807 ubox
2 16 0.877211637 ubox
2 96 0.095248735 ubox
3 8 0.040575638 ubox
3 13 0.012942293 ubox
3 14 0.014856382 ubox
3 15 0.977117518 ubox
3 90 0.098160553 ubox
3 91 0.012792918 ubox
3 92 0.021143894 ubox
3 93 0.003310098 ubox
3 95 0.105707816 ubox
4 12 0.014673087 ubox
4 13 0.014390062 ubox
4 14 0.977198462 ubox
4 89 0.098592967 ubox
4 90 0.012018423 ubox
4 91 0.021105878 ubox
4 92 0.003665333 ubox
4 94 0.105708283 ubox
5 13 0.942691480 ubox
5 88 0.098417302 ubox
5 93 0.102513033 ubox
6 81 0.012016770 ubox
6 87 0.092744778 ubox
7 80 0.012744409 ubox
12 80 0.016336866 ubox
12 83 0.085681917 ubox
12 99 0.007419209 ubox
13 79 0.012966802 ubox
13 81 0.087405351 ubox
13 82 0.082172839 ubox
13 98 0.007461462 ubox
14 78 0.010311742 ubox
14 80 0.092581219 ubox
14 97 0.007445821 ubox
17 40 0.005740418 ubox
17 79 0.840310894 ubox
17 81 0.028154946 ubox
18 39 0.006974513 ubox
18 78 0.997175818 ubox
18 80 0.032016265 ubox
18 83 0.007469669 ubox
19 38 0.006893832 ubox
19 77 0.997988854 ubox
19 78 0.003309118 ubox
19 79 0.028881234 ubox
19 82 0.011374246 ubox
20 76 0.997644183 ubox
20 77 0.004339271 ubox
20 78 0.021970530 ubox
20 81 0.011984160 ubox
20 82 0.004989514 ubox
21 34 0.008596464 ubox
21 75 0.998897988 ubox
21 84 0.024183406 ubox
21 100 0.004147516 ubox
22 33 0.008611226 ubox
22 73 0.009936453 ubox
22 74 0.998871077 ubox
22 80 0.027643293 ubox
22 83 0.024267800 ubox
22 99 0.004194389 ubox
23 32 0.008487980 ubox
23 72 0.013886966 ubox
23 73 0.997815697 ubox
23 79 0.027754029 ubox
23 81 0.013636536 ubox
23 82 0.020070576 ubox
23 83 0.004385175 ubox
23 98 0.004156317 ubox
24 71 0.015677695 ubox
24 72 0.995817228 ubox
24 73 0.006242975 ubox
24 78 0.027748039 ubox
24 80 0.015875264 ubox
24 81 0.014584418 ubox
24 82 0.023020589 ubox
24 97 0.004029151 ubox
25 70 0.017282562 ubox
25 71 0.995583976 ubox
25 72 0.008350145 ubox
25 77 0.027782246 ubox
25 79 0.017414205 ubox
25 80 0.005790765 ubox
25 81 0.027503283 ubox
25 96 0.003251476 ubox
26 69 0.020474705 ubox
26 70 0.995261170 ubox
26 73 0.004209723 ubox
26 76 0.027776472 ubox
26 78 0.017993238 ubox
26 80 0.030066134 ubox
27 40 0.004621851 ubox
27 69 0.957562669 ubox
27 70 0.011306051 ubox
27 71 0.072177727 ubox
27 72 0.003443111 ubox
27 77 0.017982532 ubox
27 79 0.030044533 ubox
28 39 0.006577110 ubox
28 69 0.114955759 ubox
28 70 0.078765446 ubox
28 74 0.027787762 ubox
28 76 0.017915895 ubox
28 78 0.021751980 ubox
29 39 0.019956369 ubox
29 61 0.006361208 ubox
29 69 0.080936170 ubox
29 70 0.008997957 ubox
29 73 0.027815437 ubox
29 74 0.007062158 ubox
29 78 0.021340441 ubox
30 38 0.019354700 ubox
30 40 0.029471223 ubox
30 60 0.006316859 ubox
30 69 0.013776304 ubox
30 71 0.009398149 ubox
30 72 0.025422875 ubox
30 73 0.004311782 ubox
30 74 0.014647736 ubox
30 77 0.029737990 ubox
31 39 0.031490638 ubox
31 44 0.003181574 ubox
31 65 0.904983721 ubox
31 69 0.012368417 ubox
31 70 0.012927222 ubox
31 73 0.015956049 ubox
31 76 0.029664513 ubox
32 43 0.003231851 ubox
32 46 0.004124494 ubox
32 63 0.718763724 ubox
32 64 0.664615289 ubox
33 42 0.003239846 ubox
33 45 0.004543145 ubox
33 62 0.951701806 ubox
33 63 0.199121405 ubox
33 66 0.120893008 ubox
33 75 0.030463417 ubox
34 44 0.004530385 ubox
34 61 0.954638265 ubox
34 65 0.122633596 ubox
34 70 0.029823250 ubox
34 74 0.030465041 ubox
35 69 0.030265220 ubox
35 70 0.006278208 ubox
35 73 0.030062258 ubox
36 69 0.007581485 ubox
36 70 0.027614849 ubox
37 65 0.059861671 ubox
37 69 0.027555321 ubox
38 63 0.171015432 ubox
38 64 0.059072975 ubox
39 62 0.183570150 ubox
39 63 0.055840093 ubox
39 64 0.015114281 ubox
40 63 0.016397276 ubox
40 66 0.009247483 ubox
41 59 0.980624882 ubox
41 65 0.005704849 ubox
42 55 0.005279951 ubox
42 58 0.999754518 ubox
43 54 0.005289951 ubox
43 57 0.999687772 ubox
44 53 0.005179198 ubox
44 56 0.999933837 ubox
44 62 0.003680809 ubox
45 55 0.999797353 ubox
45 61 0.003681986 ubox
46 54 0.958651887 ubox
50 66 0.004246868 ubox
51 65 0.004433810 ubox
54 63 0.006485650 ubox
55 62 0.006749265 ubox
56 61 0.006741025 ubox
61 75 0.005091949 ubox
61 100 0.007922570 ubox
62 74 0.005075816 ubox
62 99 0.007990614 ubox
63 73 0.005040959 ubox
63 98 0.007942526 ubox
64 71 0.003341246 ubox
64 72 0.005023008 ubox
64 97 0.007565044 ubox
69 95 0.009876308 ubox
70 94 0.009940120 ubox
71 93 0.008678162 ubox
72 93 0.004756310 ubox
73 91 0.007397467 ubox
73 92 0.006682142 ubox
74 90 0.007409183 ubox
74 91 0.006671200 ubox
76 86 0.004413108 ubox
76 89 0.009873183 ubox
77 85 0.004424896 ubox
77 88 0.009848601 ubox
78 84 0.004423262 ubox
78 86 0.012142100 ubox
78 94 0.005293191 ubox
79 85 0.012789023 ubox
79 93 0.006956173 ubox
80 84 0.012823755 ubox
80 86 0.022563481 ubox
80 89 0.025268985 ubox
80 92 0.007700838 ubox
80 94 0.012917992 ubox
81 85 0.019655440 ubox
81 88 0.023933273 ubox
81 93 0.010963359 ubox
82 93 0.012596692 ubox
83 92 0.014834620 ubox
83 100 0.976106675 ubox
84 97 0.007345206 ubox
84 99 0.984683942 ubox
85 96 0.007050817 ubox
85 98 0.984543498 ubox
86 97 0.983800508 ubox
88 98 0.015930687 ubox
89 97 0.018109467 ubox
92 99 0.017299073 ubox
93 98 0.016205763 ubox
2 16 0.9500000 lbox
3 15 0.9500000 lbox
4 14 0.9500000 lbox
5 13 0.9500000 lbox
17 79 0.9500000 lbox
18 78 0.9500000 lbox
19 77 0.9500000 lbox
20 76 0.9500000 lbox
21 75 0.9500000 lbox
22 74 0.9500000 lbox
23 73 0.9500000 lbox
24 72 0.9500000 lbox
25 71 0.9500000 lbox
26 70 0.9500000 lbox
27 69 0.9500000 lbox
31 65 0.9500000 lbox
32 64 0.9500000 lbox
33 62 0.9500000 lbox
34 61 0.9500000 lbox
41 59 0.9500000 lbox
42 58 0.9500000 lbox
43 57 0.9500000 lbox
44 56 0.9500000 lbox
45 55 0.9500000 lbox
46 54 0.9500000 lbox
83 100 0.9500000 lbox
84 99 0.9500000 lbox
85 98 0.9500000 lbox
86 97 0.9500000 lbox
showpage
end
%%EOF
