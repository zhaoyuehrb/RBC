%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:26:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAUAAGCGGCCUCUAGGCGCCGGGCCCUCAGUCUCUCCCAGCGACCGCCGCGGGGGCAAGGCCUGGAGCUGUGGUUCGAAUUUGUGCAGGCAGCGGGUGCUGGCUUUUAGGGUCCGCCGCCUCUCUGCCUAAUGAGCUGCACCAGAAUGAUCCAGGUUUUAGAUCCACGUCCUUUGACAAGUUCGGUCAUGCCCGUGGAUGUGGCCAUGAGGCUUUGCUUGGCACAUUCAC\
) } def
/len { sequence length } bind def

/coor [
[75.04424286 381.55667114]
[79.53585815 367.03448486]
[89.24681091 355.33981323]
[102.69626617 348.25595093]
[101.28262329 333.32272339]
[99.86898804 318.38949585]
[98.45534515 303.45623779]
[97.04170990 288.52301025]
[95.42685699 273.61019897]
[93.61108398 258.72048950]
[91.79531097 243.83079529]
[89.97954559 228.94110107]
[88.16377258 214.05140686]
[86.34799957 199.16171265]
[74.49669647 190.21284485]
[72.44313812 175.13844299]
[81.90989685 162.76838684]
[80.09412384 147.87869263]
[78.27835083 132.98899841]
[65.10655975 125.81237030]
[51.61088943 132.35964966]
[38.11521912 138.90692139]
[32.85392761 153.56831360]
[19.07412720 160.01594543]
[5.12914991 154.90974426]
[-8.36652279 161.45703125]
[-21.86219597 168.00430298]
[-35.35786819 174.55157471]
[-48.85354233 181.09884644]
[-62.34921265 187.64613342]
[-47.48867035 189.68676758]
[-35.23023224 198.33146667]
[-28.31894493 211.64439392]
[-28.30245781 226.64439392]
[-35.18446350 239.97247314]
[-47.42386627 248.64410400]
[-62.27988815 250.71740723]
[-76.42580414 245.72811890]
[-86.69391632 234.79350281]
[-90.78486633 220.36213684]
[-87.78257751 205.66567993]
[-78.35904694 193.99485779]
[-92.67406464 198.47596741]
[-106.98908234 202.95707703]
[-115.67034149 216.44837952]
[-131.64488220 217.92936707]
[-142.65841675 206.26396179]
[-140.26229858 190.40086365]
[-126.29460907 182.50888062]
[-111.47018433 188.64205933]
[-97.15517426 184.16094971]
[-82.84015656 179.67984009]
[-68.89649200 174.15045166]
[-55.40081787 167.60317993]
[-41.90514374 161.05590820]
[-28.40947151 154.50862122]
[-14.91379833 147.96134949]
[-1.41812623 141.41407776]
[3.20276952 127.30085754]
[16.79603195 120.46874237]
[31.56794167 125.41125488]
[45.06361389 118.86397552]
[58.55928802 112.31669617]
[93.54528046 86.18452454]
[92.33311462 71.23358154]
[91.12094879 56.28263855]
[89.90878296 41.33169937]
[88.69660950 26.38075638]
[87.48444366 11.42981529]
[86.27227783 -3.52112579]
[85.06011200 -18.47206688]
[81.25253296 -26.75780106]
[83.93377686 -33.63253021]
[82.92330170 -48.59845734]
[81.91282654 -63.56438446]
[73.26345062 -76.81198120]
[80.12580109 -90.03157043]
[79.11532593 -104.99748993]
[78.10485077 -119.96341705]
[64.00551605 -125.70538330]
[53.83882523 -136.95373535]
[49.58154297 -151.44151306]
[52.02668762 -166.28005981]
[60.63642883 -178.53492737]
[73.65924072 -185.80621338]
[72.64876556 -200.77214050]
[71.63829041 -215.73806763]
[70.62781525 -230.70399475]
[69.61734009 -245.66992188]
[67.80156708 -260.55963135]
[65.18577576 -275.32977295]
[62.56999207 -290.09994507]
[59.95420456 -304.87008667]
[57.33841705 -319.64025879]
[47.31311798 -331.87969971]
[52.71240616 -345.76123047]
[50.09661865 -360.53140259]
[47.48083115 -375.30154419]
[42.90933609 -383.19158936]
[44.93075180 -390.28839111]
[42.51434708 -405.09249878]
[38.04964447 -413.04342651]
[40.16656494 -420.11233521]
[37.94997787 -434.94766235]
[35.73339462 -449.78298950]
[21.25790024 -454.75479126]
[10.75943184 -465.89215088]
[6.65045786 -480.63577271]
[9.87518978 -495.59771729]
[19.69260979 -507.33981323]
[33.84674454 -513.16381836]
[49.08507919 -511.73141479]
[61.90595245 -503.37176514]
[69.36322784 -490.00585938]
[69.74327087 -474.70507812]
[62.95875549 -460.98541260]
[50.56871414 -451.99957275]
[52.78529739 -437.16424561]
[55.00188446 -422.32891846]
[57.31843185 -407.50888062]
[59.73484039 -392.70480347]
[62.25099182 -377.91735840]
[64.86678314 -363.14718628]
[67.48256683 -348.37701416]
[77.32077026 -337.19403076]
[72.10857391 -322.25604248]
[74.72436523 -307.48590088]
[77.34014893 -292.71572876]
[79.95594025 -277.94555664]
[82.57172394 -263.17541504]
[90.21712494 -276.08074951]
[103.94622803 -282.12322998]
[118.62677765 -279.04403687]
[128.77082825 -267.99423218]
[130.58628845 -253.10449219]
[123.39450836 -239.94097900]
[109.88392639 -233.42451477]
[95.10514069 -235.99110413]
[84.58326721 -246.68040466]
[85.59374237 -231.71447754]
[86.60421753 -216.74855042]
[87.61469269 -201.78262329]
[88.62516785 -186.81669617]
[102.50722504 -181.36196899]
[112.68617249 -170.37568665]
[117.10378265 -156.00051880]
[114.83264923 -141.07194519]
[106.27028656 -128.55903625]
[93.07077789 -120.97389984]
[94.08125305 -106.00797272]
[95.09172821 -91.04204559]
[103.66882324 -78.86490631]
[96.87875366 -64.57485962]
[97.88922882 -49.60893250]
[98.89970398 -34.64300919]
[100.01105499 -19.68423462]
[101.22322083 -4.73329306]
[102.43538666 10.21764851]
[103.64755249 25.16859055]
[104.85971832 40.11952972]
[106.07189178 55.07047272]
[107.28405762 70.02141571]
[108.49622345 84.97235870]
[118.40223694 96.23605347]
[133.07585144 99.34812927]
[147.74946594 102.46021271]
[162.42308044 105.57229614]
[177.09669495 108.68437195]
[191.77030945 111.79645538]
[206.44392395 114.90853882]
[215.24044800 104.04343414]
[227.79872131 98.05392456]
[241.64604187 98.05620575]
[254.08297729 103.99289703]
[262.70950317 114.65525055]
[265.88818359 127.92887878]
[280.51852417 131.23851013]
[295.14883423 134.54815674]
[309.77914429 137.85778809]
[322.11581421 128.24838257]
[337.74108887 128.86865234]
[349.27722168 139.42573547]
[351.27716064 154.93489075]
[342.79663086 168.07318115]
[327.83987427 172.63711548]
[313.46902466 166.47171021]
[306.46951294 152.48811340]
[291.83920288 149.17848206]
[277.20886230 145.86883545]
[262.57855225 142.55918884]
[251.89726257 154.69387817]
[236.46359253 159.81137085]
[220.46443176 156.42353821]
[208.29057312 145.36325073]
[203.33184814 129.58215332]
[188.65823364 126.47006989]
[173.98461914 123.35798645]
[159.31100464 120.24591064]
[144.63739014 117.13382721]
[129.96377563 114.02174377]
[115.29016113 110.90966797]
[109.75962830 115.97555542]
[113.00350952 130.62059021]
[98.69857025 126.10733795]
[93.16804504 131.17323303]
[94.98381805 146.06292725]
[96.79959106 160.95262146]
[108.96170807 170.68507385]
[110.59104919 185.81120300]
[101.23769379 197.34594727]
[103.05346680 212.23564148]
[104.86923218 227.12533569]
[106.68500519 242.01502991]
[108.50077820 256.90472412]
[110.31655121 271.79440308]
[113.96556091 277.27798462]
[114.26432037 282.93383789]
[111.97495270 287.10937500]
[113.38858795 302.04260254]
[114.80222321 316.97586060]
[116.21586609 331.90908813]
[117.62950134 346.84231567]
[132.16929626 351.27658081]
[143.90222168 360.94131470]
[151.03907776 374.36270142]
[152.49156189 389.49407959]
[148.03817749 404.02804565]
[138.35801697 415.74822998]
[124.92725372 422.86743164]
[109.79396820 424.30001831]
[95.26589203 419.82751465]
[83.55843353 410.13195801]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 222]
[5 221]
[6 220]
[7 219]
[8 218]
[9 215]
[10 214]
[11 213]
[12 212]
[13 211]
[14 210]
[17 207]
[18 206]
[19 205]
[20 63]
[21 62]
[22 61]
[25 58]
[26 57]
[27 56]
[28 55]
[29 54]
[30 53]
[42 52]
[43 51]
[44 50]
[64 163]
[65 162]
[66 161]
[67 160]
[68 159]
[69 158]
[70 157]
[71 156]
[73 155]
[74 154]
[75 153]
[77 151]
[78 150]
[79 149]
[85 143]
[86 142]
[87 141]
[88 140]
[89 139]
[90 130]
[91 129]
[92 128]
[93 127]
[94 126]
[96 124]
[97 123]
[98 122]
[100 121]
[101 120]
[103 119]
[104 118]
[105 117]
[164 201]
[165 200]
[166 199]
[167 198]
[168 197]
[169 196]
[170 195]
[176 190]
[177 189]
[178 188]
[179 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
