%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:47:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCACAGGGCCACAACAGGUUUCUGCAUCUGCUCCUAUGGCCACUCCUUCUUGCCCCCAGCUCUCCUGCUGCCAAGAUGCCAUCACCACAGACAGACACUCCUGGGCCGGAGCUGCAGAGUCCCAAGGAGGCUGAGGAGCCACAGACUCCAGCUCAGGGCUCCCGGCGAACAAGCA\
) } def
/len { sequence length } bind def

/coor [
[89.59565735 226.28343201]
[84.88488007 217.65348816]
[82.99491119 207.97474670]
[84.11983490 198.14778137]
[88.17233276 189.09249878]
[94.79020691 181.66197205]
[103.36868286 176.56213379]
[101.24594116 161.71308899]
[99.12319946 146.86404419]
[97.00045776 132.01501465]
[94.87771606 117.16596985]
[89.84671783 131.29710388]
[76.63860321 138.40666199]
[62.07274628 134.82394409]
[53.66953278 122.39872742]
[55.76756287 107.54618073]
[67.28361511 97.93470001]
[82.27381134 98.52752686]
[69.28342438 91.02752686]
[56.29304886 83.52752686]
[40.47309875 83.32814026]
[33.31960678 70.26380920]
[20.32922554 62.76380539]
[7.33884430 55.26380539]
[-5.65153694 47.76380539]
[-12.30242252 47.37923813]
[-17.03327560 44.15975952]
[-18.96307373 39.76006699]
[-31.67909050 31.80375290]
[-44.39510727 23.84743881]
[-57.11112213 15.89112568]
[-70.02932739 23.94602013]
[-85.10232544 25.58664703]
[-99.33468628 20.54084396]
[-109.92140198 9.85990047]
[-114.80068970 -4.29997158]
[-113.05541229 -19.11278725]
[-125.77143097 -27.06909943]
[-138.48744202 -35.02541351]
[-151.20346069 -42.98172760]
[-163.91947937 -50.93804169]
[-170.06286621 -47.71098328]
[-176.85478210 -46.56640625]
[-183.61425781 -47.58643341]
[-189.67364502 -50.63777161]
[-194.44464111 -55.38813019]
[-197.47528076 -61.34212494]
[-198.49278259 -67.89281464]
[-197.42768860 -74.38356781]
[-209.22595215 -83.64643860]
[-221.02423096 -92.90930176]
[-232.82250977 -102.17217255]
[-244.62077332 -111.43504333]
[-253.80299377 -109.05902100]
[-262.91012573 -111.16194916]
[-269.91122437 -117.14424133]
[-273.30563354 -125.55619812]
[-272.44363403 -134.44761658]
[-283.73220825 -144.32528687]
[-295.02078247 -154.20295715]
[-306.30932617 -164.08062744]
[-322.05996704 -162.77954102]
[-334.06320190 -173.06051636]
[-335.19769287 -188.82403564]
[-324.79037476 -200.71788025]
[-309.01574707 -201.68565369]
[-297.23260498 -191.15318298]
[-296.43167114 -175.36920166]
[-285.14309692 -165.49153137]
[-273.85455322 -155.61384583]
[-262.56597900 -145.73617554]
[-242.05812073 -143.56686401]
[-235.35791016 -123.23331451]
[-223.55963135 -113.97045135]
[-211.76136780 -104.70758057]
[-199.96308899 -95.44470978]
[-188.16481018 -86.18183899]
[-165.03547668 -85.71418762]
[-155.96316528 -63.65405655]
[-143.24714661 -55.69774246]
[-130.53112793 -47.74143219]
[-117.81511688 -39.78511810]
[-105.09909821 -31.82880402]
[-92.54097748 -39.87610245]
[-77.67308807 -41.68031311]
[-63.43793488 -36.83041000]
[-52.67626953 -26.23764420]
[-47.56017303 -11.96485424]
[-49.15480804 3.17510962]
[-36.43879318 11.13142300]
[-23.72277641 19.08773613]
[-11.00676060 27.04405022]
[1.84846318 34.77342606]
[14.83884430 42.27342606]
[27.82922554 49.77342606]
[40.81960678 57.27342606]
[55.71039581 56.93636322]
[63.79304886 70.53714752]
[76.78342438 78.03714752]
[89.77381134 85.53714752]
[103.40279388 81.05253601]
[117.15785217 88.26293182]
[132.05813599 86.53623199]
[146.95841980 84.80953217]
[161.85870361 83.08282471]
[176.75898743 81.35612488]
[191.65927124 79.62942505]
[204.47705078 70.35497284]
[218.01037598 76.57575989]
[232.91065979 74.84905243]
[247.81094360 73.12235260]
[262.71124268 71.39565277]
[277.59561157 69.53678894]
[292.46289062 67.54589844]
[307.33020020 65.55501556]
[309.04241943 57.43849564]
[313.69424438 50.02875519]
[320.97430420 44.39840698]
[330.18038940 41.47848892]
[340.28414917 41.91746521]
[350.04547119 45.96922302]
[364.48138428 41.89441299]
[378.91729736 37.81960297]
[392.51831055 27.69787407]
[406.00958252 37.96535873]
[399.87814331 53.77173233]
[382.99212646 52.25552750]
[368.55618286 56.33033752]
[354.12026978 60.40514755]
[355.44970703 75.34611511]
[370.37829590 76.80809784]
[385.30688477 78.27007294]
[400.23544312 79.73204803]
[414.93737793 72.46668243]
[428.42834473 81.79010010]
[426.82998657 98.11116791]
[411.78659058 104.64017487]
[398.77346802 94.66063690]
[383.84490967 93.19865417]
[368.91632080 91.73667908]
[353.98773193 90.27470398]
[326.84753418 97.12532806]
[309.32107544 80.42230988]
[294.45379639 82.41319275]
[279.58648682 84.40407562]
[273.35464478 88.42089844]
[264.43792725 86.29593658]
[249.53764343 88.02263641]
[234.63735962 89.74933624]
[219.73707581 91.47604370]
[207.98507690 100.62699127]
[193.38598633 94.52970886]
[178.48568726 96.25640869]
[163.58540344 97.98310852]
[148.68511963 99.70981598]
[133.78483582 101.43651581]
[118.88455200 103.16321564]
[109.72675323 115.04322815]
[111.84949493 129.89227295]
[113.97223663 144.74130249]
[116.09497833 159.59034729]
[118.21772766 174.43939209]
[137.09063721 182.92030334]
[146.98899841 200.93226624]
[144.06996155 221.13677979]
[129.67459106 235.41574097]
[133.10504150 250.01820374]
[146.67025757 258.12750244]
[150.44709778 273.47387695]
[142.19483948 286.95257568]
[126.80940247 290.56695557]
[113.41868591 282.17266846]
[109.96717072 266.74987793]
[118.50257111 253.44865417]
[115.07212830 238.84619141]
[105.43933105 237.38371277]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 162]
[8 161]
[9 160]
[10 159]
[11 158]
[18 100]
[19 99]
[20 98]
[22 96]
[23 95]
[24 94]
[25 93]
[28 92]
[29 91]
[30 90]
[31 89]
[37 83]
[38 82]
[39 81]
[40 80]
[41 79]
[49 77]
[50 76]
[51 75]
[52 74]
[53 73]
[58 71]
[59 70]
[60 69]
[61 68]
[102 157]
[103 156]
[104 155]
[105 154]
[106 153]
[107 152]
[109 150]
[110 149]
[111 148]
[112 147]
[113 145]
[114 144]
[115 143]
[121 129]
[122 128]
[123 127]
[130 141]
[131 140]
[132 139]
[133 138]
[166 175]
[167 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
