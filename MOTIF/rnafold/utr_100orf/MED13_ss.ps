%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:45:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUUCUCUCUCUGGUCGGAGGCGGCGGUAAUGGCGGAUGGUGGGUUGUGGCGCCGGCGGCGGCUGCUGUGAGGGACGAUGAGUGCCUCCUUCGUGCCGAACGGGGCCAGCCUGGAAGAUUGUCACUGUAACCUCUUCUGCCUGGCUGACUUGACAGGAAUUAAGUGGAAAAAAUAUG\
) } def
/len { sequence length } bind def

/coor [
[201.55844116 546.01599121]
[211.76860046 534.89599609]
[224.60090637 526.94396973]
[220.42111206 512.53808594]
[216.24133301 498.13217163]
[211.34295654 492.56762695]
[212.11732483 483.43508911]
[208.19242859 468.95767212]
[197.39448547 458.69836426]
[201.25128174 443.35443115]
[197.32638550 428.87704468]
[186.52844238 418.61770630]
[190.38523865 403.27380371]
[186.46035767 388.79638672]
[182.53546143 374.31900024]
[178.61058044 359.84158325]
[174.68568420 345.36419678]
[170.76078796 330.88677979]
[166.58100891 316.48089600]
[162.14764404 302.15103149]
[157.71426392 287.82116699]
[153.28089905 273.49127197]
[148.84751892 259.16140747]
[144.41415405 244.83154297]
[128.08938599 232.22976685]
[133.04995728 211.40263367]
[127.86441803 197.32746887]
[122.67887115 183.25231934]
[111.01876068 173.98455811]
[113.50824738 158.36044312]
[108.32270813 144.28529358]
[103.13716125 130.21012878]
[97.95161438 116.13497162]
[87.67570496 110.61342621]
[83.73968506 99.63209534]
[88.16834259 88.84002686]
[83.23200989 74.67554474]
[78.29567719 60.51105881]
[73.35934448 46.34657288]
[68.42301178 32.18209076]
[63.48667526 18.01760483]
[57.93036270 4.08464432]
[51.76488876 -9.58967113]
[45.59941101 -23.26398659]
[39.43393707 -36.93830109]
[34.26086807 -41.13330460]
[32.30036163 -46.50793839]
[33.30168152 -51.20572662]
[27.62263107 -65.08911133]
[21.94358253 -78.97249603]
[16.26453400 -92.85588837]
[3.87841582 -102.69939423]
[6.22115803 -117.40859985]
[0.54210931 -131.29199219]
[-5.13693953 -145.17536926]
[-16.82008171 -147.56213379]
[-25.79934692 -155.22479248]
[-29.90901566 -166.16252136]
[-28.23205185 -177.60455322]
[-21.30190468 -186.71185303]
[-26.48745155 -200.78700256]
[-31.67299652 -214.86216736]
[-36.85854340 -228.93733215]
[-52.01865005 -229.60575867]
[-65.73091888 -236.01020813]
[-75.91898346 -247.14649963]
[-81.05332947 -261.29663086]
[-80.38082886 -276.29370117]
[-74.03507233 -289.85382080]
[-63.01126480 -299.92382812]
[-68.19680786 -313.99899292]
[-73.38235474 -328.07412720]
[-78.56790161 -342.14929199]
[-90.59891510 -352.42379761]
[-87.73851776 -367.04116821]
[-92.92406464 -381.11633301]
[-106.82931519 -389.11779785]
[-109.10073853 -404.99923706]
[-97.99590302 -416.57775879]
[-82.03348541 -414.97131348]
[-73.45848083 -401.41223145]
[-78.84890747 -386.30187988]
[-73.66336060 -372.22671509]
[-62.00325775 -362.95895386]
[-64.49274445 -347.33483887]
[-59.30719757 -333.25967407]
[-54.12165070 -319.18453979]
[-48.93610382 -305.10937500]
[-34.01403809 -304.59829712]
[-20.38756371 -298.39633179]
[-10.14604664 -287.42016602]
[-4.87290001 -273.32116699]
[-5.40083694 -258.23690796]
[-11.68052864 -244.46707153]
[-22.78338432 -234.12287903]
[-17.59783745 -220.04771423]
[-12.41229153 -205.97254944]
[-7.22674608 -191.89739990]
[9.81320763 -185.26737976]
[16.74279785 -168.00325012]
[8.74644661 -150.85441589]
[14.42549515 -136.97103882]
[20.10454369 -123.08764648]
[32.08445740 -114.23717499]
[30.14792061 -98.53493500]
[35.82696915 -84.65155029]
[41.50601578 -70.76815796]
[47.18506622 -56.88477707]
[53.10824966 -43.10377884]
[59.27372742 -29.42946243]
[65.43920135 -15.75514698]
[71.60467529 -2.08083177]
[79.42359924 -14.88178921]
[94.28316498 -16.92952919]
[105.27299500 -6.72053146]
[104.32398987 8.24941826]
[92.13294220 16.98888588]
[77.65116119 13.08127213]
[82.58749390 27.24575615]
[87.52382660 41.41024017]
[92.46015930 55.57472610]
[97.39649200 69.73921204]
[102.33282471 83.90369415]
[115.31069946 94.51221466]
[112.02677155 110.94942474]
[117.21231842 125.02458191]
[122.39786530 139.09974670]
[127.58341217 153.17489624]
[139.61442566 163.44940186]
[136.75402832 178.06677246]
[141.93957520 192.14192200]
[147.12512207 206.21708679]
[156.18708801 209.01039124]
[162.83653259 215.57627869]
[165.65953064 224.33978271]
[164.13894653 233.28048706]
[158.74401855 240.39816284]
[163.17739868 254.72804260]
[167.61076355 269.05792236]
[172.04414368 283.38778687]
[176.47750854 297.71765137]
[180.91088867 312.04751587]
[185.52757263 316.84802246]
[186.81080627 322.42330933]
[185.23820496 326.96188354]
[189.16308594 341.43930054]
[193.08798218 355.91668701]
[197.01286316 370.39410400]
[200.93775940 384.87152100]
[204.86264038 399.34890747]
[215.94132996 410.64376831]
[211.80380249 424.95214844]
[215.72868347 439.42956543]
[226.80735779 450.72439575]
[222.66983032 465.03277588]
[226.59472656 479.51019287]
[230.64721680 493.95239258]
[234.82699585 508.35827637]
[239.00677490 522.76416016]
[254.10246277 522.61303711]
[268.67883301 526.54144287]
[281.65423584 534.25775146]
[292.06576538 545.18945312]
[299.14086914 558.52532959]
[302.35449219 573.27575684]
[301.46820068 588.34619141]
[296.54772949 602.61822510]
[287.95819092 615.03283691]
[276.33703613 624.66876221]
[262.54663086 630.81097412]
[247.61027527 633.00372314]
[232.63636780 631.08416748]
[218.73606873 625.19482422]
[206.94087219 615.77270508]
[198.12605286 603.51702881]
[192.94575500 589.33721924]
[191.78436279 574.28552246]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 159]
[4 158]
[5 157]
[7 156]
[8 155]
[10 153]
[11 152]
[13 150]
[14 149]
[15 148]
[16 147]
[17 146]
[18 145]
[19 142]
[20 141]
[21 140]
[22 139]
[23 138]
[24 137]
[26 132]
[27 131]
[28 130]
[30 128]
[31 127]
[32 126]
[33 125]
[36 123]
[37 122]
[38 121]
[39 120]
[40 119]
[41 118]
[42 112]
[43 111]
[44 110]
[45 109]
[48 108]
[49 107]
[50 106]
[51 105]
[53 103]
[54 102]
[55 101]
[60 98]
[61 97]
[62 96]
[63 95]
[70 88]
[71 87]
[72 86]
[73 85]
[75 83]
[76 82]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
