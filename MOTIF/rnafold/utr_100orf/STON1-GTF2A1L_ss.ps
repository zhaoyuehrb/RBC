%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:39:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGACUUUGGGACUGGACAGACCUGGUCACAGUCUAGGUUCUACAUCUUACUGGUCGAGCAACUUUAGAGUCAACCUAUUUGAUUUCUUGACAAGACCACAAUCUGAUCCCAAAGAUGUGCUCCACAAAUCCAGGCAAAUGGGUCACCUUUGAUGAUGAUCCUGCUGUUCAAUCUUCUCAAAAGUCAAAGAAUUUUCCUCUGGAGAAUCAAGGUG\
) } def
/len { sequence length } bind def

/coor [
[308.09350586 583.66284180]
[316.78439331 575.76159668]
[310.81710815 561.99963379]
[304.84982300 548.23767090]
[298.88256836 534.47570801]
[292.91528320 520.71374512]
[286.94799805 506.95178223]
[280.88034058 493.23379517]
[274.71261597 479.56048584]
[268.54492188 465.88717651]
[262.37719727 452.21386719]
[244.63641357 441.66424561]
[247.13043213 420.37866211]
[240.36943054 406.98876953]
[233.60844421 393.59887695]
[226.84745789 380.20901489]
[220.08647156 366.81912231]
[213.32548523 353.42922974]
[206.56449890 340.03933716]
[193.24607849 339.13519287]
[182.02314758 331.70925903]
[175.88552856 319.61160278]
[176.53137207 305.95309448]
[183.89883423 294.30560303]
[177.33421326 280.81835938]
[170.76959229 267.33111572]
[164.20497131 253.84388733]
[157.64035034 240.35664368]
[143.52120972 235.75389099]
[136.67161560 222.16941833]
[141.59513855 207.39117432]
[135.03051758 193.90393066]
[128.46589661 180.41668701]
[113.41641998 171.38754272]
[114.87251282 153.02963257]
[108.11152649 139.63973999]
[101.35053253 126.24986267]
[94.58954620 112.85997772]
[98.65744781 127.29784393]
[97.07202148 142.21382141]
[90.06006622 155.47401428]
[78.62473297 165.18138123]
[64.40196991 169.94720459]
[49.42650604 169.08966064]
[35.84074402 162.73143005]
[25.58827972 151.78213501]
[20.13584709 137.80819702]
[20.26347351 122.80874634]
[25.95290375 108.92961121]
[36.39020157 98.15636444]
[50.08219147 92.03023529]
[65.07008362 91.42764282]
[79.21121979 96.43569183]
[66.29451752 88.80950928]
[53.37780762 81.18331909]
[40.46110153 73.55713654]
[27.54439735 65.93094635]
[14.62769222 58.30475998]
[19.35373688 72.54078674]
[14.91753101 86.86978149]
[2.97437954 95.94508362]
[-12.01930332 96.38037872]
[-24.46884155 88.01324463]
[-29.72886848 73.96574402]
[-25.83668137 59.47951508]
[-14.24459553 49.95987701]
[0.72409123 48.95947266]
[-11.21501732 39.87884903]
[-23.15412521 30.79822922]
[-35.09323502 21.71760750]
[-47.03234482 12.63698578]
[-58.97145081 3.55636454]
[-70.91056061 -5.52425671]
[-86.93707275 -4.79590607]
[-97.38999939 -16.96619034]
[-94.25075531 -32.69910812]
[-79.92749786 -39.92571259]
[-65.40780640 -33.10236740]
[-61.82994080 -17.46336555]
[-49.89083099 -8.38274384]
[-37.95172119 0.69787735]
[-26.01261330 9.77849865]
[-14.07350445 18.85911942]
[-2.13439608 27.93974113]
[9.80471230 37.02036285]
[22.25387764 45.38805389]
[35.17058182 53.01424026]
[48.08728790 60.64042664]
[61.00399399 68.26661682]
[73.92070007 75.89279938]
[86.83740234 83.51898956]
[93.37777710 79.84835052]
[106.45851898 72.50708771]
[112.99888611 68.83644867]
[113.21806335 53.83805084]
[105.68322754 39.92630005]
[113.60566711 27.31344032]
[113.82484436 12.31504154]
[114.04401398 -2.68335700]
[114.26318359 -17.68175507]
[111.26022339 -26.30517960]
[114.59673309 -32.89727783]
[115.03503418 -47.89087296]
[115.47333527 -62.88446808]
[103.10977936 -72.26115417]
[98.65116882 -87.12387085]
[103.81192780 -101.75760651]
[116.60763550 -110.53539276]
[132.11808777 -110.08197784]
[144.37919617 -100.57172394]
[148.67631531 -85.66151428]
[143.35710144 -71.08462524]
[130.46693420 -62.44617081]
[130.02862549 -47.45257568]
[129.59033203 -32.45898056]
[129.26158142 -17.46258354]
[129.04241943 -2.46418405]
[128.82324219 12.53421497]
[128.60406494 27.53261375]
[136.15457153 40.37158203]
[128.21646118 54.05722427]
[127.99728394 69.05562592]
[134.85629272 72.08945465]
[136.38790894 57.16785431]
[151.05249023 54.01350403]
[158.58404541 66.98561859]
[148.57427979 78.15711212]
[155.43328857 81.19094086]
[166.38281250 70.93872833]
[177.33233643 60.68650818]
[188.28184509 50.43428802]
[199.23136902 40.18207169]
[199.50032043 24.38007164]
[210.92208862 13.45676804]
[226.72036743 13.89276505]
[237.52230835 25.42939186]
[236.91929626 41.22217178]
[225.26911926 51.90153122]
[209.48359680 51.13159180]
[198.53407288 61.38381195]
[187.58454895 71.63603210]
[176.63502502 81.88824463]
[165.68550110 92.14046478]
[136.75111389 110.04322815]
[107.97943115 106.09898376]
[114.74041748 119.48886871]
[121.50141144 132.87875366]
[128.26240540 146.26864624]
[140.24662781 151.03202820]
[145.60287476 162.32122803]
[141.95314026 173.85206604]
[148.51776123 187.33930969]
[155.08238220 200.82655334]
[169.75051880 206.06898499]
[176.21585083 219.84048462]
[171.12759399 233.79202271]
[177.69221497 247.27926636]
[184.25683594 260.76651001]
[190.82145691 274.25375366]
[197.38607788 287.74099731]
[214.08102417 290.46563721]
[225.74565125 302.48583984]
[227.92422485 318.92550659]
[219.95437622 333.27835083]
[226.71536255 346.66824341]
[233.47634888 360.05813599]
[240.23735046 373.44799805]
[246.99833679 386.83789062]
[253.75932312 400.22778320]
[260.52032471 413.61767578]
[269.78436279 415.34472656]
[277.10760498 421.05462646]
[280.92657471 429.36801147]
[280.50027466 438.36898804]
[276.05050659 446.04617310]
[282.21820068 459.71945190]
[288.38592529 473.39276123]
[294.55364990 487.06607056]
[300.93295288 493.59951782]
[300.70996094 500.98452759]
[306.67724609 514.74645996]
[312.64453125 528.50842285]
[318.61178589 542.27038574]
[324.57907104 556.03234863]
[330.54635620 569.79431152]
[349.20718384 569.87823486]
[365.90374756 578.09759521]
[377.28836060 592.75457764]
[381.10015869 610.86578369]
[376.61407471 628.76928711]
[364.77816772 642.86511230]
[371.53915405 656.25500488]
[378.30014038 669.64489746]
[385.06112671 683.03479004]
[391.82211304 696.42468262]
[398.58309937 709.81457520]
[405.34408569 723.20446777]
[417.88064575 734.61810303]
[410.38348389 749.82434082]
[393.69610596 746.82965088]
[391.95422363 729.96545410]
[385.19323730 716.57556152]
[378.43225098 703.18566895]
[371.67123413 689.79577637]
[364.91024780 676.40588379]
[358.14926147 663.01599121]
[351.38827515 649.62609863]
[339.94137573 651.32574463]
[328.45684814 649.75347900]
[317.85278320 645.02410889]
[308.97994995 637.50524902]
[302.55343628 627.78887939]
[299.09515381 616.64447021]
[298.89144897 604.95831299]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 185]
[3 184]
[4 183]
[5 182]
[6 181]
[7 180]
[8 178]
[9 177]
[10 176]
[11 175]
[13 170]
[14 169]
[15 168]
[16 167]
[17 166]
[18 165]
[19 164]
[24 160]
[25 159]
[26 158]
[27 157]
[28 156]
[31 153]
[32 152]
[33 151]
[35 148]
[36 147]
[37 146]
[38 145]
[53 91]
[54 90]
[55 89]
[56 88]
[57 87]
[58 86]
[67 85]
[68 84]
[69 83]
[70 82]
[71 81]
[72 80]
[73 79]
[94 122]
[95 121]
[97 119]
[98 118]
[99 117]
[100 116]
[102 115]
[103 114]
[104 113]
[128 143]
[129 142]
[130 141]
[131 140]
[132 139]
[191 207]
[192 206]
[193 205]
[194 204]
[195 203]
[196 202]
[197 201]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
