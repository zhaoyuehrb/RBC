%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:27:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGGGAAAUGUUUGGUGCAGCAUCCAGAAUGGACACCACUGCUGUCUGCACCGGGGGAGUGACAGAGAGUCGAGGGAUUGUGGAUAGCCUGCAGAAGUUUUCCUCGC\
) } def
/len { sequence length } bind def

/coor [
[85.99147797 462.84738159]
[78.44377136 448.28839111]
[87.50513458 434.62005615]
[87.93740082 419.62628174]
[88.15355682 404.62783813]
[88.15355682 389.62783813]
[88.15355682 374.62783813]
[88.15355682 359.62783813]
[88.15355682 344.62783813]
[77.47268677 334.31015015]
[77.25900269 319.09802246]
[88.15355682 307.96490479]
[88.15355682 292.96490479]
[88.15355682 277.96490479]
[85.35876465 273.92120361]
[85.18096924 268.04748535]
[88.61074066 262.10696411]
[89.47492218 247.13186646]
[90.33910370 232.15678406]
[91.20328522 217.18170166]
[91.85157013 202.19570923]
[92.28384399 187.20193481]
[92.50000000 172.20350647]
[92.50000000 157.20350647]
[92.50000000 142.20350647]
[92.50000000 127.20349884]
[92.50000000 112.20349884]
[85.67605591 100.00000000]
[92.50000000 87.79650116]
[92.50000000 72.79650116]
[92.50000000 57.79650116]
[79.72801208 65.66265106]
[65.51770020 60.85982895]
[60.13659668 46.85826874]
[67.47276306 33.77466583]
[82.22552490 31.06245613]
[93.73537445 40.68125153]
[95.88954926 25.83673859]
[94.00901794 16.73845673]
[98.32566071 10.59791660]
[100.90672302 -4.17835140]
[103.06089783 -19.02286339]
[104.78638458 -33.92329025]
[106.51187134 -48.82371521]
[100.41340637 -63.42232132]
[109.56339264 -75.17506409]
[111.28887939 -90.07548523]
[113.01437378 -104.97591400]
[114.73986053 -119.87634277]
[116.25045013 -134.80007935]
[117.54582214 -149.74404907]
[118.84119415 -164.68800354]
[107.64780426 -175.60781860]
[106.14373779 -191.17289734]
[115.03916168 -204.03390503]
[130.13394165 -208.11825562]
[144.30076599 -201.49745178]
[150.85049438 -187.29762268]
[146.69056702 -172.22351074]
[133.78515625 -163.39263916]
[132.48977661 -148.44866943]
[131.19441223 -133.50471497]
[133.79159546 -126.46239471]
[129.64028931 -118.15084839]
[127.91479492 -103.25042725]
[126.18930817 -88.34999847]
[124.46382141 -73.44957733]
[130.68569946 -59.91674805]
[121.41230011 -47.09822464]
[119.68680573 -32.19779968]
[117.96131897 -17.29737473]
[120.27239990 -12.95901680]
[119.77335358 -7.10385990]
[115.68299103 -1.59728539]
[113.10192871 13.17898273]
[110.73406219 27.99091148]
[108.57988739 42.83542252]
[107.50000000 57.79650116]
[107.50000000 72.79650116]
[107.50000000 87.79650116]
[114.32394409 100.00000000]
[107.50000000 112.20349884]
[107.50000000 127.20349884]
[107.50000000 142.20350647]
[107.50000000 157.20350647]
[107.50000000 172.20350647]
[110.66765594 180.93740845]
[107.27761078 187.63421631]
[106.84534454 202.62797546]
[109.75999451 211.44953918]
[106.17836761 218.04588318]
[105.31418610 233.02096558]
[104.45000458 247.99604797]
[103.58583069 262.97113037]
[103.15355682 277.96490479]
[103.15355682 292.96490479]
[103.15355682 307.96490479]
[114.04811096 319.09802246]
[113.83443451 334.31015015]
[103.15355682 344.62783813]
[103.15355682 359.62783813]
[103.15355682 374.62783813]
[103.15355682 389.62783813]
[103.15355682 404.62783813]
[106.32121277 413.36175537]
[102.93117523 420.05856323]
[102.49890137 435.05233765]
[110.75775146 449.22000122]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 107]
[4 106]
[5 104]
[6 103]
[7 102]
[8 101]
[9 100]
[12 97]
[13 96]
[14 95]
[17 94]
[18 93]
[19 92]
[20 91]
[21 89]
[22 88]
[23 86]
[24 85]
[25 84]
[26 83]
[27 82]
[29 80]
[30 79]
[31 78]
[37 77]
[38 76]
[40 75]
[41 74]
[42 71]
[43 70]
[44 69]
[46 67]
[47 66]
[48 65]
[49 64]
[50 62]
[51 61]
[52 60]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
