%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:05:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGACGCGAGGUCACGUGACGGGUUGGGCAGCCUGUGCCGCCGCCGCCGCUUUGUAAGAGGCACAUUGGCAGAUUUUCUAUUUUGUACAUACAUUAUUUUGUAUAUACUGUAUAUGAUGACUUCAGUGAGCAGUGACCAUUGUCGAGGUGCUCGGGAAAAACCACAGAUUUCAGCAGCACAAUCAACGCAACCACAGAAACAAGUGGUACAGG\
) } def
/len { sequence length } bind def

/coor [
[339.28097534 262.92816162]
[332.29513550 249.65420532]
[325.30929565 236.38024902]
[311.05227661 232.22413635]
[303.77856445 218.86196899]
[308.23452759 203.93608093]
[301.24868774 190.66212463]
[290.03787231 180.69627380]
[276.03680420 175.31390381]
[262.03573608 169.93153381]
[248.03466797 164.54916382]
[234.03358459 159.16679382]
[220.03251648 153.78442383]
[206.03143311 148.40205383]
[191.99124146 143.12258911]
[177.91265869 137.94633484]
[163.83407593 132.77008057]
[149.75550842 127.59381866]
[135.63931274 122.52104187]
[121.48625946 117.55200958]
[107.33321381 112.58297729]
[92.49456024 114.77713013]
[80.38524628 123.62950134]
[68.27592468 132.48187256]
[65.26142120 138.36196899]
[60.45240784 141.38487244]
[55.67866516 141.41018677]
[43.31469345 149.90324402]
[30.95072174 158.39631653]
[18.58675003 166.88938904]
[14.25732899 182.33721924]
[-0.57513392 188.45094299]
[-14.53244209 180.54063416]
[-16.90774345 164.67439270]
[-5.87890959 153.02345276]
[10.09368134 154.52542114]
[22.45765305 146.03234863]
[34.82162476 137.53927612]
[47.18559647 129.04620361]
[59.42355728 120.37255859]
[71.53287506 111.52018738]
[83.64218903 102.66781616]
[79.61829376 88.21761322]
[64.67644501 86.89809418]
[49.73459244 85.57856750]
[34.79274368 84.25904846]
[20.74248886 96.97013855]
[2.18153095 95.39936829]
[-9.13754463 81.00998688]
[-24.11169052 80.12966919]
[-39.08583832 79.24935913]
[-54.05998230 78.36904144]
[-69.03412628 77.48873138]
[-83.44238281 85.32034302]
[-97.28571320 76.52862549]
[-96.32328796 60.15774536]
[-81.54516602 53.04865646]
[-68.15381622 62.51458359]
[-53.17966843 63.39489746]
[-38.20552444 64.27520752]
[-23.23137665 65.15552521]
[-8.25723076 66.03584290]
[-1.57773793 56.78976440]
[8.84309959 51.86430359]
[20.46672440 52.58722687]
[30.39932442 58.89442062]
[36.11226654 69.31719971]
[51.05411530 70.63671875]
[65.99596405 71.95624542]
[80.93781281 73.27576447]
[85.62627411 67.42185211]
[73.14617920 59.10035706]
[60.66608810 50.77886200]
[48.18599319 42.45736694]
[35.70590210 34.13587189]
[21.96327782 28.12418938]
[18.37480927 13.55975056]
[27.75156403 1.85178447]
[42.74814987 2.17186832]
[51.61688995 14.26973534]
[62.46346664 24.63080597]
[73.31004333 34.99187469]
[84.15661621 45.35294724]
[95.00319672 55.71401596]
[99.69165802 49.86009979]
[95.14025116 35.56727982]
[90.58884430 21.27445984]
[79.02897644 10.47260571]
[82.53970337 -4.00234032]
[77.98830414 -18.29516029]
[73.43689728 -32.58798218]
[68.88549042 -46.88080215]
[64.33408356 -61.17362213]
[50.18140793 -68.20762634]
[45.22701645 -83.21527863]
[52.41025925 -97.29279327]
[67.46945190 -102.08824158]
[81.47023773 -94.75656891]
[86.10620117 -79.64751434]
[78.62690735 -65.72502899]
[83.17831421 -51.43220520]
[87.72971344 -37.13938522]
[92.28112030 -22.84656525]
[96.83252716 -8.55374527]
[108.06684875 1.22579038]
[104.88166809 16.72305489]
[109.43307495 31.01587486]
[113.98447418 45.30869675]
[112.30224609 98.42993164]
[126.45529175 103.39896393]
[140.60833740 108.36798859]
[149.73977661 108.25789642]
[154.93176270 113.51524353]
[169.01034546 118.69149780]
[183.08891296 123.86775970]
[197.16749573 129.04402161]
[206.29956055 129.06797791]
[211.41381836 134.40097046]
[225.41488647 139.78334045]
[239.41595459 145.16572571]
[253.41703796 150.54809570]
[267.41812134 155.93046570]
[281.41918945 161.31283569]
[295.42025757 166.69520569]
[292.62844849 154.54299927]
[294.81875610 140.88955688]
[302.41073608 127.40986633]
[315.31594849 115.86403656]
[327.80328369 107.55338287]
[340.29058838 99.24272919]
[352.77789307 90.93207550]
[365.26522827 82.62142181]
[373.39254761 64.17233276]
[392.72619629 63.78779221]
[404.96417236 55.11413956]
[417.20211792 46.44048309]
[429.44009399 37.76683044]
[435.79028320 22.64707375]
[452.09124756 20.85534859]
[461.57397461 34.23482513]
[454.48339844 49.02184677]
[438.11373901 50.00479126]
[425.87576294 58.67844391]
[413.63781738 67.35209656]
[401.39984131 76.02575684]
[400.59655762 86.20960236]
[394.18670654 94.44389343]
[384.09552002 97.86255646]
[373.57586670 95.10873413]
[361.08856201 103.41938782]
[348.60125732 111.73004150]
[336.11392212 120.04069519]
[323.62661743 128.35134888]
[328.38732910 142.57582092]
[343.36148071 141.69549561]
[353.67306519 129.71855164]
[369.43942261 128.62428284]
[381.30667114 139.06190491]
[382.23419189 154.83895874]
[371.67169189 166.59518433]
[355.88571167 167.35585022]
[344.24179077 156.66964722]
[329.26766968 157.54995728]
[325.58139038 164.08154297]
[339.14450073 170.48797607]
[352.70758057 176.89442444]
[367.63232422 178.39523315]
[374.53726196 191.71145630]
[367.16433716 204.77438354]
[352.19573975 205.74484253]
[343.19796753 193.74430847]
[330.70343018 185.44450378]
[318.20889282 177.14469910]
[314.52264404 183.67628479]
[321.50848389 196.95024109]
[336.33435059 201.72843933]
[343.22988892 215.28964233]
[338.58325195 229.39439392]
[345.56909180 242.66836548]
[352.55493164 255.94232178]
[364.47314453 253.68055725]
[376.55670166 254.57394409]
[387.98553467 258.55438232]
[397.98590088 265.34451294]
[405.88284302 274.47708130]
[411.14572144 285.32696533]
[413.42379761 297.15411377]
[412.56967163 309.15390015]
[408.64877319 320.51190186]
[401.93438721 330.45925903]
[392.88870239 338.32452393]
[399.08349609 351.98556519]
[405.27825928 365.64663696]
[411.47305298 379.30770874]
[417.66784668 392.96878052]
[432.89410400 395.95886230]
[443.43017578 407.35055542]
[445.22473145 422.76351929]
[437.58773804 436.27111816]
[423.45574951 442.67947388]
[408.26281738 439.52435303]
[397.85095215 428.01904297]
[396.22369385 412.58752441]
[404.00677490 399.16354370]
[397.81198120 385.50250244]
[391.61721802 371.84143066]
[385.42242432 358.18035889]
[379.22763062 344.51928711]
[361.26339722 345.77215576]
[344.16183472 340.02365112]
[330.55062866 328.12948608]
[322.53167725 311.89178467]
[321.35659790 293.78607178]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 180]
[2 179]
[3 178]
[6 175]
[7 174]
[8 124]
[9 123]
[10 122]
[11 121]
[12 120]
[13 119]
[14 118]
[15 116]
[16 115]
[17 114]
[18 113]
[19 111]
[20 110]
[21 109]
[22 42]
[23 41]
[24 40]
[27 39]
[28 38]
[29 37]
[30 36]
[43 70]
[44 69]
[45 68]
[46 67]
[49 62]
[50 61]
[51 60]
[52 59]
[53 58]
[85 108]
[86 107]
[87 106]
[89 104]
[90 103]
[91 102]
[92 101]
[93 100]
[128 153]
[129 152]
[130 151]
[131 150]
[132 149]
[134 145]
[135 144]
[136 143]
[137 142]
[154 163]
[155 162]
[191 208]
[192 207]
[193 206]
[194 205]
[195 204]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
