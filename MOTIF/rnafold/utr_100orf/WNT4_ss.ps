%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:41:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGCGCGCGCCCCGGCCCGCCCGCGGGCGCCCACCUGCAGCCCCGACGGGAGGCCCCCCGCGGCCGCAGCCGCUGCCCCGGGCCGGGCGCCCGCGGCGGCACCAUGAGUCCCCGCUCGUGCCUGCGUUCGCUGCGCCUCCUCGUCUUCGCCGUCUUCUCAGCCGCCGCGAGCAACUGGCUGUACCUGGCCAAGCUGUCGUCGG\
) } def
/len { sequence length } bind def

/coor [
[86.78826141 104.20982361]
[71.80983734 105.01399231]
[56.83140945 105.81816101]
[41.85297775 106.62232971]
[26.87455177 107.42649841]
[11.89612293 108.23066711]
[-1.46939695 116.69668579]
[-14.59317207 109.65283966]
[-29.57159996 110.45700836]
[-44.55002975 111.26117706]
[-59.52845764 112.06534576]
[-74.50688171 112.86951447]
[-89.48531342 113.67368317]
[-97.89152527 117.26011658]
[-104.69908905 114.37361908]
[-119.68807983 114.94815826]
[-134.67707825 115.52270508]
[-149.66606140 116.09724426]
[-164.65505981 116.67178345]
[-179.64405823 117.24632263]
[-194.16706848 120.99893188]
[-207.55815125 127.75753784]
[-220.94924927 134.51614380]
[-234.34033203 141.27474976]
[-247.67924500 148.13575745]
[-260.96517944 155.09877014]
[-274.25112915 162.06179810]
[-287.53707886 169.02481079]
[-293.68908691 175.78349304]
[-301.08041382 175.99096680]
[-314.47149658 182.74957275]
[-315.96752930 198.10421753]
[-325.54534912 210.19837952]
[-340.14871216 215.17285156]
[-355.11773682 211.44030762]
[-365.67587280 200.19175720]
[-368.45401001 185.01660156]
[-362.56573486 170.75717163]
[-349.88989258 161.96359253]
[-334.47134399 161.44186401]
[-321.23010254 169.35847473]
[-307.83901978 162.59986877]
[-294.50009155 155.73886108]
[-281.21417236 148.77584839]
[-267.92822266 141.81282043]
[-254.64225769 134.84980774]
[-250.17492676 128.95764160]
[-241.09893799 127.88365173]
[-227.70785522 121.12505341]
[-214.31675720 114.36644745]
[-200.92567444 107.60784149]
[-202.53176880 92.69340515]
[-204.13772583 77.78029633]
[-218.66073608 74.02768707]
[-233.18374634 70.27507782]
[-247.70675659 66.52246857]
[-261.19351196 74.76156616]
[-276.53619385 70.96974182]
[-284.63223267 57.39662552]
[-280.67843628 42.09489822]
[-267.02047729 34.14280701]
[-251.76139832 38.25818634]
[-243.95414734 51.99945450]
[-229.43113708 55.75206375]
[-214.90812683 59.50467300]
[-200.38511658 63.25728226]
[-193.93609619 49.71438217]
[-206.00343323 40.80487442]
[-218.07077026 31.89537239]
[-230.13810730 22.98586655]
[-246.47184753 18.44216156]
[-246.62734985 1.48892760]
[-230.37969971 -3.35361195]
[-221.22860718 10.91852570]
[-209.16127014 19.82802963]
[-197.09393311 28.73753548]
[-185.02658081 37.64703751]
[-171.35023499 61.26968384]
[-170.42439270 84.55494690]
[-180.21859741 102.25733185]
[-165.22959900 101.68279266]
[-150.24061584 101.10825348]
[-135.25161743 100.53370667]
[-120.26262665 99.95916748]
[-105.27362823 99.38462830]
[-90.28948212 98.69525146]
[-75.31105042 97.89108276]
[-60.33262634 97.08691406]
[-45.35419846 96.28274536]
[-30.37576866 95.47857666]
[-15.39733982 94.67440796]
[-3.10317779 86.26591492]
[11.09195423 93.25224304]
[26.07038307 92.44807434]
[41.04881287 91.64390564]
[56.02724075 90.83973694]
[71.00566864 90.03556824]
[85.98409271 89.23139954]
[97.62921906 79.77671051]
[101.49299622 65.28288269]
[105.35678101 50.78904724]
[109.22055817 36.29521179]
[113.08433533 21.80137825]
[111.72225189 16.75251961]
[112.37120056 12.14768982]
[114.52431488 8.67941666]
[117.47312927 6.73815489]
[121.99893951 -7.56279087]
[126.52474213 -21.86373711]
[131.05055237 -36.16468430]
[126.99170685 -52.05360413]
[138.90997314 -63.31801224]
[154.54486084 -58.37005234]
[157.81254578 -42.29975891]
[145.35150146 -31.63887405]
[140.82569885 -17.33792877]
[136.29988098 -3.03698206]
[131.77407837 11.26396370]
[127.57817078 25.66515732]
[123.71439362 40.15899277]
[119.85060883 54.65282440]
[115.98683167 69.14665985]
[112.12305450 83.64049530]
[118.44934845 87.66889191]
[137.42822266 99.75409698]
[148.92709351 90.12207031]
[160.42596436 80.49003601]
[171.92483521 70.85800934]
[174.76330566 55.06805801]
[188.94606018 47.56945419]
[203.59330750 54.11449432]
[207.46894836 69.68238068]
[197.59989929 82.33075714]
[181.55686951 82.35688019]
[170.05799866 91.98891449]
[158.55912781 101.62094116]
[147.06025696 111.25296783]
[161.76930237 108.31291962]
[176.47834778 105.37287140]
[191.18740845 102.43282318]
[205.89645386 99.49277496]
[220.60549927 96.55273438]
[233.19436646 88.39673615]
[247.63282776 84.33090973]
[262.62780762 84.71937561]
[276.83636475 89.52735138]
[288.98605347 98.32424927]
[297.98873901 110.32222748]
[303.03817749 124.44677734]
[303.68218994 139.43295288]
[299.86303711 153.93861389]
[291.92279053 166.66465759]
[280.57254028 176.47140503]
[266.82882690 182.48054504]
[251.92245483 184.15394592]
[237.18843079 181.34173584]
[223.94628906 174.29574585]
[213.38050842 163.64501953]
[199.63465881 157.64074707]
[185.88879395 151.63645935]
[172.14294434 145.63218689]
[158.39707947 139.62791443]
[144.65121460 133.62362671]
[153.83573914 145.48300171]
[163.02026367 157.34236145]
[177.58743286 163.51554871]
[179.26304626 178.31561279]
[188.44757080 190.17497253]
[203.87789917 192.30633545]
[213.02337646 204.46426392]
[210.89634705 219.16159058]
[220.08087158 231.02095032]
[229.26538086 242.88032532]
[240.12272644 243.62681580]
[248.60072327 250.09446716]
[252.04447937 259.95404053]
[249.54403687 269.86767578]
[258.36080933 282.00292969]
[267.17758179 294.13818359]
[275.99435425 306.27343750]
[284.81115723 318.40869141]
[300.45809937 320.63314819]
[309.88229370 333.32015991]
[307.49252319 348.94271851]
[294.70657349 358.23226929]
[279.11013794 355.67742920]
[269.95632935 342.79400635]
[272.67590332 327.22546387]
[263.85910034 315.09020996]
[255.04232788 302.95495605]
[246.22555542 290.81970215]
[237.40878296 278.68444824]
[219.21720886 272.13864136]
[217.40602112 252.06483459]
[208.22149658 240.20547485]
[199.03697205 228.34611511]
[184.27488708 226.72860718]
[174.79153442 214.83236694]
[176.58821106 199.35949707]
[167.40368652 187.50012207]
[153.49346924 182.17520142]
[151.16088867 166.52688599]
[141.97637939 154.66751099]
[132.79185486 142.80815125]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 98]
[2 97]
[3 96]
[4 95]
[5 94]
[6 93]
[8 91]
[9 90]
[10 89]
[11 88]
[12 87]
[13 86]
[15 85]
[16 84]
[17 83]
[18 82]
[19 81]
[20 80]
[21 51]
[22 50]
[23 49]
[24 48]
[25 46]
[26 45]
[27 44]
[28 43]
[30 42]
[31 41]
[53 66]
[54 65]
[55 64]
[56 63]
[67 77]
[68 76]
[69 75]
[70 74]
[99 123]
[100 122]
[101 121]
[102 120]
[103 119]
[107 118]
[108 117]
[109 116]
[110 115]
[125 137]
[126 136]
[127 135]
[128 134]
[163 204]
[164 203]
[165 202]
[167 200]
[168 199]
[171 196]
[172 195]
[173 194]
[177 192]
[178 191]
[179 190]
[180 189]
[181 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
