%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:59:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGACUGGCCGCGGCGGCCUCCAGGAAGCGGAAAAGCAAGGGGCGGUCGAGCUGGGCCGCCGCGCCCCACUGCUCGCCGCGCUGCUCUUUGACCUCGCAGGGUGUGAAGAAGAUGCGCAGCUCCACGCUGCAGGACCCGCGCCGCCGGGACCCCCAGGACGACGUGUACGUGGACAUCACCGAUCGCCUUCGUUUUGCCAUUCUCUACAGCA\
) } def
/len { sequence length } bind def

/coor [
[182.79705811 308.61010742]
[191.19854736 296.18374634]
[202.47676086 286.29425049]
[215.89428711 279.58828735]
[230.57382202 276.50427246]
[245.55557251 277.24389648]
[259.85662842 281.75720215]
[249.13334656 271.26858521]
[238.33300781 260.85931396]
[227.45620728 250.52998352]
[220.44242859 248.20365906]
[216.49656677 239.96719360]
[205.77328491 229.47856140]
[195.05000305 218.98994446]
[184.32673645 208.50131226]
[173.60345459 198.01269531]
[162.88017273 187.52406311]
[152.15689087 177.03544617]
[154.06050110 191.91415405]
[147.71325684 205.50505066]
[135.08239746 213.59585571]
[120.08262634 213.67897034]
[107.36288452 205.72860718]
[100.86544800 192.20886230]
[102.60409546 177.30996704]
[112.03994751 165.64958191]
[126.24852753 160.84164429]
[140.82586670 164.37615967]
[131.58512878 152.56054688]
[122.34439850 140.74491882]
[113.10366821 128.92930603]
[102.52239227 131.65829468]
[91.64248657 130.63923645]
[81.75203705 125.99273682]
[74.02199554 118.26892853]
[69.36752319 108.38223267]
[68.33967590 97.50315094]
[54.08756256 92.82583618]
[39.83544922 88.14851379]
[25.58333588 83.47119904]
[11.33122444 78.79388428]
[-2.92088842 74.11656952]
[-17.17300034 69.43924713]
[-31.42511368 64.76193237]
[-45.67722702 60.08461761]
[-59.92933655 55.40729904]
[-74.18144989 50.72998047]
[-88.56531525 46.47505569]
[-103.06842041 42.64622116]
[-117.57152557 38.81738663]
[-132.07463074 34.98855209]
[-146.57772827 31.15971756]
[-161.13572693 27.54520226]
[-175.74545288 24.14579201]
[-190.35517883 20.74638176]
[-204.96490479 17.34697151]
[-220.15950012 21.75546265]
[-230.80213928 11.33512688]
[-245.41186523 7.93571615]
[-262.20913696 10.23515892]
[-269.06869507 -5.26913643]
[-256.06921387 -16.15261078]
[-242.01245117 -6.67400694]
[-227.40272522 -3.27459645]
[-213.25311279 -7.92623615]
[-201.56549072 2.73724842]
[-186.95576477 6.13665867]
[-172.34603882 9.53606892]
[-157.73631287 12.93548012]
[-153.28150940 11.21778011]
[-147.70042419 12.27925301]
[-142.74890137 16.65661430]
[-128.24578857 20.48544884]
[-113.74269104 24.31428337]
[-99.23958588 28.14311790]
[-84.73648071 31.97195244]
[-82.24982452 30.68099594]
[-79.10235596 30.29648781]
[-75.63648224 31.07490540]
[-72.28101349 33.14426041]
[-69.50413513 36.47787094]
[-55.25202179 41.15518570]
[-40.99990845 45.83250427]
[-26.74779701 50.50981903]
[-12.49568367 55.18713760]
[1.75642848 59.86445236]
[16.00854111 64.54177094]
[30.26065254 69.21908569]
[44.51276398 73.89640808]
[58.76487732 78.57372284]
[73.01699066 83.25103760]
[84.12068176 72.49622345]
[98.98648071 68.25754547]
[102.06185913 53.57619858]
[105.13723755 38.89484787]
[103.83383179 29.85546875]
[108.36775970 24.02038002]
[111.65933990 9.38598537]
[114.95092010 -5.24840975]
[118.24249268 -19.88280487]
[113.72206879 -35.04447937]
[124.06363678 -45.76367950]
[127.35521698 -60.39807129]
[130.64678955 -75.03247070]
[129.47683716 -84.09008789]
[134.09634399 -89.85767365]
[137.60339355 -104.44192505]
[125.28833008 -113.35301971]
[117.32508087 -126.30119324]
[114.92797852 -141.31193542]
[118.46257782 -156.09622192]
[127.38986206 -168.39955139]
[140.34849548 -176.34576416]
[155.36238098 -178.72311401]
[170.14199829 -175.16908264]
[182.43357849 -166.22561646]
[190.36273193 -153.25654602]
[192.72033691 -138.23954773]
[189.14685059 -123.46460724]
[180.18724060 -111.18480682]
[167.20773315 -103.27271271]
[152.18765259 -100.93486786]
[148.68060303 -86.35061646]
[145.28118896 -71.74089050]
[141.98960876 -57.10649490]
[138.69802856 -42.47209930]
[143.45388794 -28.35717773]
[132.87689209 -16.59122658]
[129.58531189 -1.95683217]
[126.29373169 12.67756271]
[123.00215912 27.31195831]
[119.81858826 41.97023010]
[116.74320984 56.65157700]
[113.66783142 71.33293152]
[127.43828583 84.00778961]
[131.67977905 102.23654175]
[124.91928864 119.68856812]
[134.16001892 131.50419617]
[143.40075684 143.31980896]
[152.64147949 155.13542175]
[162.64550781 166.31216431]
[173.36878967 176.80078125]
[184.09207153 187.28941345]
[194.81535339 197.77803040]
[205.53863525 208.26666260]
[216.26191711 218.75527954]
[226.98519897 229.24391174]
[237.78553772 239.65316772]
[248.66233826 249.98249817]
[257.03866577 253.62203979]
[259.62197876 260.54528809]
[270.34524536 271.03390503]
[277.54940796 272.13363647]
[282.74560547 276.19113159]
[284.99703979 281.64608765]
[298.30645752 288.56414795]
[311.61587524 295.48217773]
[324.92529297 302.40023804]
[338.23471069 309.31829834]
[351.54412842 316.23632812]
[364.85354614 323.15438843]
[378.16296387 330.07244873]
[396.53601074 328.83181763]
[405.38861084 343.98507690]
[418.79861450 350.70608521]
[432.20861816 357.42709351]
[447.12170410 349.44458008]
[463.68960571 351.90008545]
[475.41134644 363.62982178]
[477.80694580 379.87054443]
[491.31463623 386.39303589]
[504.82229614 392.91552734]
[520.38311768 389.01174927]
[533.04937744 398.85787964]
[533.10449219 414.90084839]
[520.50628662 424.83383179]
[504.91894531 421.03710938]
[498.29980469 406.42318726]
[484.79214478 399.90069580]
[471.28445435 393.37820435]
[460.15866089 400.75628662]
[446.73233032 401.68115234]
[434.50479126 395.80462646]
[426.71582031 384.56509399]
[425.48760986 370.83709717]
[412.07760620 364.11608887]
[398.66760254 357.39508057]
[387.09414673 360.91052246]
[375.86752319 355.42214966]
[371.24490356 343.38186646]
[357.93548584 336.46380615]
[344.62606812 329.54574585]
[331.31665039 322.62771606]
[318.00723267 315.70965576]
[304.69781494 308.79159546]
[291.38842773 301.87356567]
[278.07901001 294.95550537]
[286.82839966 307.13943481]
[292.20187378 321.14392090]
[293.84808350 336.05331421]
[291.65939331 350.89276123]
[285.77893066 364.69204712]
[276.59112549 376.54885864]
[264.69674683 385.68801880]
[250.87350464 391.51190186]
[236.02519226 393.63977051]
[221.12268066 391.93249512]
[207.14031982 386.50167847]
[194.99235535 377.70242310]
[185.47305298 366.11007690]
[179.20483398 352.48254395]
[176.59751892 337.71087646]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 152]
[8 151]
[9 149]
[10 148]
[12 147]
[13 146]
[14 145]
[15 144]
[16 143]
[17 142]
[18 141]
[28 140]
[29 139]
[30 138]
[31 137]
[37 91]
[38 90]
[39 89]
[40 88]
[41 87]
[42 86]
[43 85]
[44 84]
[45 83]
[46 82]
[47 81]
[48 76]
[49 75]
[50 74]
[51 73]
[52 72]
[53 69]
[54 68]
[55 67]
[56 66]
[58 64]
[59 63]
[93 134]
[94 133]
[95 132]
[97 131]
[98 130]
[99 129]
[100 128]
[102 126]
[103 125]
[104 124]
[106 123]
[107 122]
[155 197]
[156 196]
[157 195]
[158 194]
[159 193]
[160 192]
[161 191]
[162 190]
[164 187]
[165 186]
[166 185]
[170 180]
[171 179]
[172 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
