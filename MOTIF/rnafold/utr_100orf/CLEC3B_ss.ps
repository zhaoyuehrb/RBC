%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:21:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGCUGCCUUAAGACGUGCAGCCUGGGCCGUGGCUGUCACUGCGUUCGGACCCAGACCCGCUGCAGGCAGCAGCAGCCCCCGCCCGCGCAGCAGCAUGGAGCUCUGGGGGGCCUACCUCCUCCUCUGCCUCUUCUCCCUCCUGACCCAGGUCACCACCGAGCCACCAACCCAGAAGCCCAAGAAGAUUGUAAAUG\
) } def
/len { sequence length } bind def

/coor [
[80.58071136 115.29325867]
[66.53598785 120.56068420]
[52.49126816 125.82810211]
[38.44654465 131.09553528]
[24.40181923 136.36294556]
[10.35709572 141.63037109]
[-3.68762732 146.89779663]
[-17.73235130 152.16522217]
[-31.77707481 157.43264771]
[-45.82179642 162.70005798]
[-31.81640053 168.07118225]
[-23.53975105 180.58105469]
[-24.07372665 195.57154846]
[-33.21949768 207.46083069]
[-47.57155991 211.82182312]
[-61.78581238 207.03068542]
[-70.56946564 194.87142944]
[-70.65184784 179.87165833]
[-62.00347137 167.61752319]
[-76.60423279 171.05520630]
[-91.20500183 174.49288940]
[-105.80576324 177.93057251]
[-120.40653229 181.36825562]
[-134.89024353 185.26979065]
[-149.24218750 189.63122559]
[-163.59411621 193.99264526]
[-177.94604492 198.35406494]
[-192.29797363 202.71548462]
[-206.61468506 207.19120789]
[-220.89523315 211.78094482]
[-235.17579651 216.37066650]
[-242.87567139 232.07220459]
[-259.22546387 237.25056458]
[-273.96838379 229.16911316]
[-288.17391968 233.98599243]
[-293.67742920 248.62310791]
[-307.32723999 256.25314331]
[-322.67828369 253.27337646]
[-332.48233032 241.09080505]
[-332.11013794 225.45765686]
[-321.73751831 213.75541687]
[-306.26205444 211.50953674]
[-292.99081421 219.78044128]
[-278.78524780 214.96356201]
[-274.75152588 202.71891785]
[-264.24282837 194.91975403]
[-250.96549988 194.59599304]
[-239.76553345 202.09011841]
[-225.48497009 197.50038147]
[-211.20440674 192.91064453]
[-205.79206848 187.86512756]
[-196.65940857 188.36355591]
[-182.30746460 184.00213623]
[-167.95553589 179.64071655]
[-153.60360718 175.27928162]
[-139.25166321 170.91786194]
[-137.81399536 168.49859619]
[-135.32586670 166.50648499]
[-131.94641113 165.34657288]
[-127.97900391 165.35835266]
[-123.84421539 166.76750183]
[-109.24344635 163.32981873]
[-94.64268494 159.89213562]
[-80.04191589 156.45445251]
[-65.44115448 153.01676941]
[-51.08922195 148.65533447]
[-37.04449844 143.38792419]
[-22.99977303 138.12049866]
[-8.95505047 132.85307312]
[5.08967304 127.58564758]
[19.13439751 122.31822968]
[33.17911911 117.05080414]
[47.22384262 111.78337860]
[61.26856613 106.51596069]
[75.31329346 101.24853516]
[82.43450165 78.26629639]
[108.06971741 69.89175415]
[106.39873505 54.98511505]
[104.72776031 40.07847977]
[103.05678558 25.17184258]
[101.38580322 10.26520443]
[99.71482849 -4.64143229]
[97.56934357 -19.48720360]
[94.95153809 -34.25700378]
[92.21604156 -49.00546646]
[89.36303711 -63.73164749]
[86.51004028 -78.45782471]
[76.28918457 -90.53444672]
[81.46450806 -104.50102234]
[78.61151123 -119.22720337]
[67.45764923 -131.24899292]
[72.54979706 -146.83750916]
[88.64958191 -149.95663452]
[99.19493103 -137.39767456]
[93.33769226 -122.08020020]
[96.19068909 -107.35401917]
[106.20748138 -96.33071899]
[101.23621368 -81.31082916]
[104.08921814 -66.58464813]
[106.94222260 -51.85846710]
[111.30590057 -45.88277054]
[109.72133636 -36.87481308]
[112.33914948 -22.10501099]
[114.56959534 -20.38895035]
[116.25058746 -17.68090248]
[116.99898529 -14.18718243]
[116.51390076 -10.24952221]
[114.62146759 -6.31240988]
[116.29244232 8.59422779]
[117.96341705 23.50086403]
[119.63439941 38.40750122]
[121.30537415 53.31414032]
[122.97635651 68.22077942]
[128.65655518 54.33786392]
[130.52819824 39.45508957]
[138.42829895 26.70406914]
[150.92124939 18.40188599]
[165.73686218 16.05719566]
[180.18287659 20.09606743]
[191.63421631 29.78457069]
[198.00993347 43.36212921]
[198.15148926 58.36146164]
[192.03312683 72.05692291]
[180.76667786 81.95980835]
[166.39944458 86.27058411]
[151.54412842 84.20661163]
[136.66162109 86.08032227]
[150.62055969 91.57104492]
[164.57949829 97.06175995]
[182.71569824 93.90525818]
[193.11062622 108.03818512]
[207.15534973 113.30561066]
[221.20007324 118.57303619]
[235.24479675 123.84045410]
[249.28952026 129.10787964]
[263.33425903 134.37530518]
[280.25842285 125.88141632]
[297.72158813 132.33337402]
[304.81039429 149.20225525]
[319.01596069 154.01911926]
[334.56988525 151.12319946]
[344.13842773 162.53775024]
[358.34399414 167.35461426]
[372.54953003 172.17149353]
[384.33261108 159.69323730]
[400.33099365 153.63488770]
[417.31365967 155.16828918]
[431.87332153 163.93728638]
[441.11004639 178.13890076]
[443.20870972 194.89379883]
[457.56066895 199.25523376]
[471.94689941 203.50207520]
[486.36657715 207.63407898]
[500.06466675 199.75134277]
[515.30267334 203.94403076]
[523.04016113 217.72470093]
[518.68658447 232.91752625]
[504.82489014 240.50888062]
[489.67892456 235.99493408]
[482.23455811 222.05374146]
[467.81491089 217.92173767]
[460.51037598 219.10272217]
[453.19921875 213.60716248]
[438.84729004 209.24574280]
[430.85220337 219.49960327]
[419.81942749 226.44027710]
[407.05261230 229.22195435]
[394.06909180 227.49179077]
[382.41949463 221.43450928]
[373.50265503 211.75291443]
[368.39749146 199.58644104]
[367.73266602 186.37704468]
[353.52709961 181.56016541]
[339.32156372 176.74330139]
[324.78372192 179.98376465]
[314.19909668 168.22467041]
[299.99353027 163.40780640]
[291.08874512 170.56172180]
[279.71777344 172.54402161]
[268.69070435 168.74720764]
[260.78964233 160.00668335]
[258.06683350 148.42002869]
[244.02209473 143.15260315]
[229.97737122 137.88517761]
[215.93264771 132.61775208]
[201.88792419 127.35033417]
[187.84320068 122.08290863]
[176.69720459 126.80186462]
[164.94860840 122.51940155]
[159.08879089 111.02069855]
[145.12983704 105.52998352]
[131.17089844 100.03926086]
[127.55944061 112.09195709]
[119.67738342 121.32987213]
[109.13228607 126.41025543]
[97.87173462 126.78472900]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 75]
[2 74]
[3 73]
[4 72]
[5 71]
[6 70]
[7 69]
[8 68]
[9 67]
[10 66]
[19 65]
[20 64]
[21 63]
[22 62]
[23 61]
[24 56]
[25 55]
[26 54]
[27 53]
[28 52]
[29 50]
[30 49]
[31 48]
[34 44]
[35 43]
[77 113]
[78 112]
[79 111]
[80 110]
[81 109]
[82 108]
[83 103]
[84 102]
[85 100]
[86 99]
[87 98]
[89 96]
[90 95]
[127 192]
[128 191]
[129 190]
[131 187]
[132 186]
[133 185]
[134 184]
[135 183]
[136 182]
[139 177]
[140 176]
[142 174]
[143 173]
[144 172]
[150 164]
[151 163]
[152 161]
[153 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
