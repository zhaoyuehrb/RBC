%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:34:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCCAUUUCAACUGCCUAUUCAGAGCAUGCAGUAAGAGGAAAUCCACCAAGUCUCAAUAUAAUAAUAUUCUUUAUUCCUGGACAGCUCGGUUAAUGAAAAAAUGGACACAGAAAGUAAUAGGAGAGCAAAUCUUGCUCUCCCACAGGAGCCUUCCAGUGUGCCUGCAUUUGAAGUCUUGGAAAUAUCUCCCCAGGAAGUAU\
) } def
/len { sequence length } bind def

/coor [
[73.77021790 403.74481201]
[58.77106857 403.90441895]
[44.12546158 400.66308594]
[30.59439659 394.18927002]
[18.88096237 384.81933594]
[9.59379768 373.04019165]
[3.21547294 359.46383667]
[0.07741139 344.79577637]
[0.34266955 329.79812622]
[3.99746442 315.25018311]
[10.85188961 301.90786743]
[20.54978180 290.46450806]
[32.58723068 281.51464844]
[46.33876038 275.52337646]
[61.08982849 272.80197144]
[76.07395935 273.49185181]
[90.51255035 277.55718994]
[103.65538025 284.78674316]
[114.81951904 294.80480957]
[123.42433929 307.08990479]
[121.34185028 292.23516846]
[119.25936127 277.38043213]
[117.17687225 262.52569580]
[115.09439087 247.67097473]
[113.01190186 232.81622314]
[110.81452942 217.97804260]
[108.50241089 203.15731812]
[106.19029236 188.33657837]
[96.58366394 176.95405579]
[102.10131836 162.12617493]
[99.78919983 147.30545044]
[97.47708130 132.48471069]
[90.53790283 133.48663330]
[83.12983704 132.94485474]
[75.60491943 130.72035217]
[68.34999084 126.75527954]
[61.76797104 121.08088684]
[46.89756393 123.04836273]
[32.02715683 125.01584625]
[17.15674973 126.98332977]
[12.44425488 141.50073242]
[1.89336991 152.52986145]
[-12.40101910 157.88085938]
[-27.60075188 156.49128723]
[-40.68790817 148.63705444]
[-49.06402588 135.87760925]
[-51.06602097 120.74636078]
[-46.29639435 106.24761963]
[-35.70215607 95.26013184]
[-21.38680840 89.96546173]
[-6.19266558 91.41487885]
[6.86346054 99.32059479]
[15.18926716 112.11292267]
[30.05967331 110.14543915]
[44.93008041 108.17795563]
[59.80048752 106.21047974]
[61.46939468 98.89851379]
[46.52977753 100.24308014]
[40.63444901 86.45014954]
[51.93056870 76.58112335]
[64.80721283 84.27459717]
[66.47612000 76.96263885]
[53.93200302 68.73796844]
[41.38788605 60.51330185]
[28.84377098 52.28863525]
[16.29965401 44.06396866]
[0.87944782 47.52702332]
[-12.42815399 39.00157547]
[-15.72798634 23.54561806]
[-7.06231785 10.32889557]
[8.42766476 7.19265747]
[21.55202866 15.99757671]
[24.52432251 31.51985168]
[37.06843948 39.74451828]
[49.61255264 47.96918869]
[62.15666962 56.19385529]
[74.70078278 64.41852570]
[93.84814453 62.37899017]
[109.43907166 68.81465912]
[116.97255707 55.84366608]
[124.50603485 42.87267303]
[132.03952026 29.90168190]
[139.57299805 16.93068886]
[135.74353027 1.83191502]
[143.56832886 -11.21519947]
[157.98629761 -14.77296066]
[165.51979065 -27.74395370]
[173.05326843 -40.71494675]
[180.58674622 -53.68593979]
[168.29548645 -78.72142029]
[185.35054016 -107.10928345]
[184.42257690 -122.08055115]
[183.49462891 -137.05181885]
[174.91841125 -150.34689331]
[181.85354614 -163.52845764]
[180.92558289 -178.49972534]
[168.91589355 -188.77313232]
[167.77145386 -204.53591919]
[178.17126465 -216.43632507]
[193.94528198 -217.41404724]
[205.73506165 -206.88900757]
[206.54594421 -191.10552979]
[195.89685059 -179.42767334]
[196.82481384 -164.45640564]
[205.33464050 -152.23217773]
[198.46589661 -137.97978210]
[199.39385986 -123.00850677]
[200.32180786 -108.03723907]
[207.10404968 -104.83549500]
[213.46730042 -118.41890717]
[219.83055115 -132.00231934]
[226.19380188 -145.58572388]
[232.55705261 -159.16914368]
[234.60905457 -174.02812195]
[249.35635376 -176.76983643]
[256.61160278 -163.64118958]
[246.44322205 -152.61380005]
[239.99955750 -139.06834412]
[233.55587769 -125.52290344]
[227.11221313 -111.97745514]
[220.66854858 -98.43200684]
[227.45079041 -95.23026276]
[239.59967041 -104.02825165]
[251.74855042 -112.82624054]
[263.89743042 -121.62422943]
[276.04632568 -130.42221069]
[288.19522095 -139.22019958]
[300.34408569 -148.01818848]
[312.49298096 -156.81617737]
[324.64187622 -165.61416626]
[333.92401123 -179.80142212]
[350.12637329 -174.80944824]
[349.81475830 -157.85836792]
[333.43984985 -153.46528625]
[321.29095459 -144.66729736]
[309.14208984 -135.86930847]
[296.99319458 -127.07131958]
[284.84429932 -118.27333069]
[272.69543457 -109.47534180]
[260.54653931 -100.67735291]
[248.39765930 -91.87936401]
[236.24877930 -83.08137512]
[235.94673157 -70.00471497]
[231.31626892 -58.47554779]
[223.36674500 -49.79687881]
[213.44963074 -44.77733231]
[203.04705811 -43.66305923]
[193.55773926 -46.15245819]
[186.02426147 -33.18146515]
[178.49078369 -20.21047211]
[170.95729065 -7.23948002]
[175.01152039 7.04683542]
[167.55628967 20.30858421]
[152.54399109 24.46416855]
[145.01051331 37.43516159]
[137.47703552 50.40615463]
[129.94354248 63.37714767]
[122.41006470 76.34814453]
[132.23124695 95.22834015]
[128.30166626 116.14426422]
[112.29781342 130.17259216]
[114.60993195 144.99331665]
[116.92205048 159.81405640]
[126.69406128 172.25666809]
[121.01102448 186.02445984]
[123.32314301 200.84519958]
[125.63526154 215.66592407]
[130.05264282 223.66871643]
[127.86663818 230.73373413]
[129.94912720 245.58848572]
[132.03161621 260.44320679]
[134.11410522 275.29794312]
[136.19659424 290.15267944]
[138.27908325 305.00744629]
[144.18937683 312.55740356]
[143.69464111 321.08026123]
[151.02648926 334.16629028]
[158.35835266 347.25231934]
[165.69020081 360.33831787]
[173.02204895 373.42434692]
[180.35389709 386.51037598]
[195.71234131 386.62820435]
[208.94607544 394.42330933]
[216.49531555 407.79882812]
[216.32934570 423.15682983]
[208.49279785 436.36608887]
[195.09367371 443.87335205]
[179.73626709 443.65924072]
[166.55166626 435.78131104]
[159.08642578 422.35873413]
[159.34867859 407.00207520]
[167.26786804 393.84222412]
[159.93601990 380.75619507]
[152.60417175 367.67019653]
[145.27232361 354.58416748]
[137.94047546 341.49813843]
[130.60862732 328.41210938]
[131.19293213 343.40072632]
[128.36767578 358.13226318]
[122.27965546 371.84124756]
[113.24521637 383.81533813]
[101.73380280 393.43237305]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 174]
[21 173]
[22 172]
[23 171]
[24 170]
[25 169]
[26 167]
[27 166]
[28 165]
[30 163]
[31 162]
[32 161]
[37 56]
[38 55]
[39 54]
[40 53]
[62 77]
[63 76]
[64 75]
[65 74]
[66 73]
[79 158]
[80 157]
[81 156]
[82 155]
[83 154]
[86 151]
[87 150]
[88 149]
[89 148]
[91 108]
[92 107]
[93 106]
[95 104]
[96 103]
[122 142]
[123 141]
[124 140]
[125 139]
[126 138]
[127 137]
[128 136]
[129 135]
[130 134]
[176 197]
[177 196]
[178 195]
[179 194]
[180 193]
[181 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
