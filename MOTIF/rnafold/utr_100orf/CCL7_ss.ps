%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:23:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGGAGCAGAGGGGCUGAGACCAAACCAGAAACCUCCAAUUCUCAUGUGGAAGCCCAUGCCCUCACCCUCCAACAUGAAAGCCUCUGCAGCACUUCUGUGUCUGCUGCUCACAGCAGCUGCUUUCAGCCCCCAGGGGCUUGCUCAGCCAGUUGGGAUUAAUACUUCAACUACCU\
) } def
/len { sequence length } bind def

/coor [
[-201.73019409 364.38388062]
[-205.64533997 358.61810303]
[-219.60379028 364.11007690]
[-233.56222534 369.60208130]
[-247.52067566 375.09405518]
[-254.38771057 381.16757202]
[-261.77758789 380.55703735]
[-275.83184814 385.79901123]
[-289.88607788 391.04095459]
[-293.84298706 401.21640015]
[-302.57794189 407.39233398]
[-313.05065918 407.71618652]
[-321.77612305 402.32284546]
[-336.00851440 407.05984497]
[-350.24090576 411.79684448]
[-364.47329712 416.53384399]
[-378.70568848 421.27084351]
[-381.78604126 430.24340820]
[-388.56307983 436.68316650]
[-397.41604614 439.22558594]
[-406.30706787 437.41787720]
[-413.24996948 431.79379272]
[-427.71551514 435.76220703]
[-442.18103027 439.73062134]
[-446.15103149 454.50177002]
[-456.91049194 465.23165894]
[-471.49911499 469.10958862]
[-485.97323608 465.19085693]
[-496.47174072 454.62457275]
[-510.93725586 458.59298706]
[-525.40277100 462.56140137]
[-539.86834717 466.52984619]
[-545.21667480 481.09606934]
[-558.12408447 489.70874023]
[-573.62738037 489.05612183]
[-585.76531982 479.38916016]
[-589.87054443 464.42495728]
[-584.36456299 449.91760254]
[-571.36444092 441.44546509]
[-555.86907959 442.26623535]
[-543.83673096 452.06430054]
[-529.37121582 448.09588623]
[-514.90570068 444.12744141]
[-500.44015503 440.15902710]
[-496.80294800 425.71478271]
[-486.35464478 414.95892334]
[-471.82943726 410.84985352]
[-457.10098267 414.58749390]
[-446.14947510 425.26510620]
[-431.68392944 421.29666138]
[-417.21841431 417.32824707]
[-404.09985352 401.41732788]
[-383.44268799 407.03845215]
[-369.21029663 402.30145264]
[-354.97790527 397.56445312]
[-340.74551392 392.82745361]
[-326.51312256 388.09048462]
[-314.80868530 372.72271729]
[-295.12805176 376.98672485]
[-281.07379150 371.74475098]
[-267.01956177 366.50280762]
[-253.01264954 361.13562012]
[-239.05421448 355.64361572]
[-225.09576416 350.15164185]
[-211.13732910 344.65966797]
[-210.45420837 320.15365601]
[-197.94190979 299.00497437]
[-176.69297791 286.54992676]
[-152.01249695 285.96252441]
[-130.09356689 297.44580078]
[-118.41394043 288.03378296]
[-106.73431396 278.62173462]
[-95.05469513 269.20971680]
[-83.37506866 259.79766846]
[-71.69544983 250.38563538]
[-66.01726532 230.56111145]
[-44.83321762 227.47056580]
[-33.67411041 217.44688416]
[-22.51500320 207.42318726]
[-11.53658485 197.20191956]
[-0.74235529 186.78633118]
[10.05187416 176.37072754]
[20.84610367 165.95513916]
[31.64033318 155.53955078]
[42.43456268 145.12394714]
[53.22879028 134.70835876]
[64.02301788 124.29276276]
[74.81725311 113.87716675]
[63.90569687 95.93192291]
[67.23755646 70.79093170]
[88.42892456 49.85564423]
[92.91113281 35.54096985]
[97.39334106 21.22629929]
[101.87554169 6.91162682]
[97.76829529 -8.96485138]
[109.65217590 -20.26552963]
[125.30207062 -15.36524105]
[128.61871338 0.69501972]
[116.19021606 11.39383221]
[111.70800781 25.70850372]
[107.22580719 40.02317429]
[102.74359894 54.33784866]
[109.12436676 58.27939224]
[128.26667786 70.10401917]
[139.06091309 59.68842697]
[149.85514832 49.27283478]
[160.64936829 38.85723877]
[171.44360352 28.44164467]
[175.44754028 12.53879833]
[191.29360962 8.31576920]
[202.68074036 20.11684608]
[197.89482117 35.80209351]
[181.85919189 39.23587418]
[171.06497192 49.65146637]
[160.27073669 60.06706238]
[149.47650146 70.48265839]
[138.68228149 80.89825439]
[146.33633423 93.79846191]
[160.65100098 89.31626129]
[174.96566772 84.83405304]
[189.28034973 80.35185242]
[199.97915649 67.92335510]
[216.03941345 71.23999023]
[220.93971252 86.88988495]
[209.63902283 98.77377319]
[193.76254272 94.66651917]
[179.44787598 99.14872742]
[165.13320923 103.63093567]
[150.81852722 108.11313629]
[136.55160522 127.57233429]
[116.95864105 136.34594727]
[98.23120117 134.38496399]
[85.23284149 124.67139435]
[74.43861389 135.08699036]
[63.64438629 145.50257874]
[52.85015869 155.91818237]
[42.05592728 166.33377075]
[31.26169777 176.74937439]
[20.46746826 187.16496277]
[9.67323971 197.58055115]
[-1.12099004 207.99615479]
[-3.32697344 214.28421021]
[-7.72871923 217.94297791]
[-12.49131584 218.58230591]
[-23.65042496 228.60598755]
[-34.80953217 238.62966919]
[-34.05283356 248.08605957]
[-37.69652176 256.69546509]
[-44.79912186 262.55996704]
[-53.67278290 264.45098877]
[-62.28341293 262.06524658]
[-73.96303558 271.47729492]
[-85.64266205 280.88931274]
[-97.32228088 290.30136108]
[-109.00190735 299.71340942]
[-120.68152618 309.12542725]
[-117.60971069 315.46792603]
[-115.47205353 322.17926025]
[-114.31099701 329.12268066]
[-114.14909363 336.15692139]
[-114.98857880 343.13903809]
[-116.81134796 349.92727661]
[-119.57934570 356.38397217]
[-123.23535919 362.37829590]
[-127.70417786 367.78903198]
[-132.89419556 372.50689697]
[-138.69923401 376.43676758]
[-145.00074768 379.49969482]
[-151.67021179 381.63436890]
[-158.57177734 382.79840088]
[-165.56503296 382.96923828]
[-172.50784302 382.14437866]
[-179.25924683 380.34167480]
[-185.68232727 377.59878540]
[-191.64695740 373.97241211]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 65]
[3 64]
[4 63]
[5 62]
[7 61]
[8 60]
[9 59]
[13 57]
[14 56]
[15 55]
[16 54]
[17 53]
[22 51]
[23 50]
[24 49]
[29 44]
[30 43]
[31 42]
[32 41]
[70 156]
[71 155]
[72 154]
[73 153]
[74 152]
[75 151]
[77 146]
[78 145]
[79 144]
[80 141]
[81 140]
[82 139]
[83 138]
[84 137]
[85 136]
[86 135]
[87 134]
[88 133]
[91 102]
[92 101]
[93 100]
[94 99]
[104 117]
[105 116]
[106 115]
[107 114]
[108 113]
[118 129]
[119 128]
[120 127]
[121 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
