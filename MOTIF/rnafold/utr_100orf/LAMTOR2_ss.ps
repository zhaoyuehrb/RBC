%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:59:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGGGGCGGGGUUGAGUCGGAACCACAAUAGCCAGGCGAAGAAACUACAACUCCCAGGGCGUCCCGGAGCAGGCCAACGGGACUACGGGAAGCAGCGGGCAGCGGCCCGCGGGAGGCACCUCGGAGAUCUGGGUGCAAAAGCCCAGGGUUAGGAACCGUAGGCAUGCUGCGCCCCAAGGCUUUGACCCAGGUGCUAAGCCAAGCCAACACUGGAGGCGUCCAGAGCACCCUGCUGCUGAAUAACGAGGGAUCAC\
UGCUGGCCU\
) } def
/len { sequence length } bind def

/coor [
[653.93511963 444.64706421]
[650.64135742 434.24298096]
[651.56890869 423.30377197]
[638.88500977 415.29641724]
[626.20104980 407.28906250]
[613.51708984 399.28170776]
[600.83319092 391.27435303]
[588.14923096 383.26699829]
[575.46527100 375.25964355]
[560.57281494 375.00817871]
[553.03381348 361.09869385]
[540.34985352 353.09133911]
[527.66589355 345.08398438]
[514.93475342 337.15194702]
[502.15676880 329.29553223]
[487.17282104 336.03765869]
[470.96292114 332.47253418]
[459.97219849 319.81445312]
[458.69165039 302.93280029]
[445.82141113 295.22842407]
[432.95120239 287.52401733]
[418.61251831 291.38894653]
[405.45053101 283.75894165]
[401.49389648 268.69299316]
[388.62368774 260.98858643]
[385.90234375 261.51562500]
[382.81143188 261.01449585]
[379.73507690 259.34033203]
[377.10229492 256.48760986]
[375.33831787 252.60157776]
[362.84777832 244.29576111]
[350.35723877 235.98995972]
[337.86669922 227.68414307]
[325.37615967 219.37834167]
[336.91732788 228.95965576]
[345.17477417 241.48220825]
[349.43533325 255.86441040]
[349.33099365 270.86404419]
[344.87078857 285.18557739]
[336.43994141 297.59207153]
[324.76660156 307.01193237]
[310.85906982 312.63153076]
[295.91851807 313.96557617]
[281.23535156 310.89877319]
[268.07781982 303.69604492]
[257.58233643 292.97946167]
[250.65541077 279.67465210]
[247.89532471 264.93078613]
[249.54045105 250.02128601]
[255.44873047 236.23388672]
[265.10983276 224.75942993]
[277.68902588 216.58914185]
[264.91107178 208.73271179]
[252.13308716 200.87629700]
[239.35511780 193.01986694]
[224.46069336 192.94494629]
[216.75730896 179.12582397]
[203.97933960 171.26939392]
[191.20137024 163.41297913]
[178.37704468 155.63243103]
[165.50683594 147.92803955]
[150.61257935 148.02969360]
[142.74591064 134.30285645]
[129.87570190 126.59846497]
[117.00548553 118.89407349]
[104.13527679 111.18968201]
[89.95410156 106.30149078]
[75.07016754 104.43913269]
[62.74923706 114.33712769]
[47.04736328 112.54082489]
[37.28018951 100.11593628]
[39.24240112 84.43393707]
[51.76985550 74.79866791]
[67.43023682 76.92656708]
[76.93251801 89.55519867]
[91.81645966 91.41754913]
[93.79336548 84.18278503]
[97.74716949 69.71324921]
[99.72407532 62.47848129]
[85.96128845 56.51310730]
[71.35736084 62.55469894]
[56.79098511 56.42312241]
[50.90412903 41.75613785]
[57.18936920 27.25539970]
[71.91777039 21.52394485]
[86.35124969 27.96213913]
[91.92666626 42.75032043]
[105.68945312 48.71569824]
[110.20503998 42.72741699]
[98.22847748 33.69624710]
[86.25191498 24.66507721]
[80.39521027 10.85569668]
[95.28308868 12.68851852]
[107.25965118 21.71968842]
[119.23620605 30.75085831]
[123.75179291 24.76257896]
[114.23159790 13.17094803]
[104.71140289 1.57931721]
[95.19120789 -10.01231384]
[85.67101288 -21.60394478]
[76.15081787 -33.19557571]
[60.61856842 -38.45687103]
[57.67464447 -54.58961105]
[70.34750366 -64.99781799]
[85.60039520 -58.97441483]
[87.74245453 -42.71577072]
[97.26264191 -31.12413788]
[106.78283691 -19.53250694]
[116.30303192 -7.94087696]
[125.82322693 3.65075374]
[135.34342957 15.24238396]
[111.83966827 98.31946564]
[124.70987701 106.02385712]
[137.58009338 113.72824860]
[150.45030212 121.43264008]
[166.26512146 121.88205719]
[173.21122742 135.05783081]
[186.08143616 142.76222229]
[195.01931763 144.47508240]
[199.05778503 150.63499451]
[211.83576965 158.49142456]
[224.61373901 166.34783936]
[240.42211914 166.98471069]
[247.21153259 180.24189758]
[259.98950195 188.09831238]
[272.76748657 195.95474243]
[285.54547119 203.81115723]
[292.33544922 200.62586975]
[305.91540527 194.25527954]
[312.70538330 191.06997681]
[314.83212280 176.22151184]
[316.95883179 161.37303162]
[319.08557129 146.52456665]
[321.21228027 131.67610168]
[323.33898926 116.82762909]
[313.66165161 104.33264160]
[315.73687744 88.66519165]
[328.33349609 79.12049866]
[343.97811890 81.36125183]
[353.38909912 94.05805969]
[350.98306274 109.67812347]
[338.18746948 118.95434570]
[336.06076050 133.80281067]
[333.93402100 148.65129089]
[331.80731201 163.49975586]
[329.68057251 178.34822083]
[327.55386353 193.19670105]
[333.68197632 206.88780212]
[346.17251587 215.19360352]
[358.66305542 223.49942017]
[371.15359497 231.80522156]
[383.64413452 240.11103821]
[396.32806396 248.11839294]
[409.19827271 255.82276917]
[424.34637451 252.19335938]
[437.28884888 260.19003296]
[440.65560913 274.65380859]
[453.52581787 282.35821533]
[466.39602661 290.06259155]
[478.61950684 283.73327637]
[492.26623535 284.25747681]
[503.78430176 291.39196777]
[510.22848511 303.18688965]
[510.01318359 316.51757812]
[522.79113770 324.37399292]
[531.70812988 326.19268799]
[535.67327881 332.40005493]
[548.35717773 340.40740967]
[561.04113770 348.41473389]
[576.84088135 349.23898315]
[583.47265625 362.57571411]
[596.15655518 370.58306885]
[608.84051514 378.59042358]
[621.52447510 386.59777832]
[634.20837402 394.60513306]
[646.89233398 402.61245728]
[659.57629395 410.61981201]
[683.45739746 404.13439941]
[702.83728027 418.79568481]
[717.51562500 415.70599365]
[732.19396973 412.61630249]
[746.87231445 409.52664185]
[761.55065918 406.43695068]
[770.85357666 391.60363770]
[787.67816162 388.17187500]
[801.49206543 397.79037476]
[816.13275146 394.52691650]
[827.83807373 383.04141235]
[843.56286621 387.69586182]
[847.13073730 403.70220947]
[834.87139893 414.59442139]
[819.39617920 409.16760254]
[804.75549316 412.43106079]
[799.44647217 424.15060425]
[788.19390869 430.78036499]
[774.98217773 429.71334839]
[764.64031982 421.11529541]
[749.96197510 424.20498657]
[735.28363037 427.29464722]
[720.60528564 430.38433838]
[705.92694092 433.47402954]
[705.30596924 437.64352417]
[704.05090332 441.66784668]
[702.19171143 445.45120239]
[712.51165771 456.33691406]
[722.83160400 467.22262573]
[725.79614258 462.99655151]
[730.27239990 459.45764160]
[736.07592773 457.03970337]
[742.91040039 456.12466431]
[750.38214111 457.01556396]
[763.92413330 463.46652222]
[777.46606445 469.91751099]
[791.00805664 476.36849976]
[804.55004883 482.81945801]
[820.84637451 480.98605347]
[830.36328125 494.34121704]
[823.31054688 509.14633179]
[806.94348145 510.17114258]
[798.09906006 496.36145020]
[784.55706787 489.91046143]
[771.01513672 483.45947266]
[757.47314453 477.00851440]
[743.93115234 470.55752563]
[733.87219238 481.68484497]
[741.65277100 494.50915527]
[749.43328857 507.33349609]
[757.21386719 520.15777588]
[765.37097168 532.74591064]
[773.89758301 545.08679199]
[782.42419434 557.42767334]
[790.95080566 569.76855469]
[805.80432129 566.53717041]
[820.76287842 569.24090576]
[833.54541016 577.46740723]
[842.20263672 589.96221924]
[845.41448975 604.81994629]
[842.69110107 619.77490234]
[834.44775391 632.54663086]
[821.94158936 641.18743896]
[807.07965088 644.37969971]
[792.12823486 641.63665771]
[779.36737061 633.37658691]
[770.74304199 620.85900879]
[767.57031250 605.99285889]
[770.33300781 591.04510498]
[778.60992432 578.29516602]
[770.08331299 565.95428467]
[761.55670166 553.61340332]
[753.03015137 541.27252197]
[747.98626709 555.39910889]
[733.83691406 560.37860107]
[721.05749512 552.52453613]
[719.10925293 537.65161133]
[729.43450928 526.77099609]
[744.38952637 527.93835449]
[736.60894775 515.11401367]
[728.82843018 502.28970337]
[721.04791260 489.46539307]
[711.94586182 477.54257202]
[701.62591553 466.65686035]
[691.30603027 455.77114868]
[681.13244629 458.92486572]
[670.45971680 457.95523071]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 177]
[4 176]
[5 175]
[6 174]
[7 173]
[8 172]
[9 171]
[11 169]
[12 168]
[13 167]
[14 165]
[15 164]
[19 159]
[20 158]
[21 157]
[24 154]
[25 153]
[30 152]
[31 151]
[32 150]
[33 149]
[34 148]
[52 127]
[53 126]
[54 125]
[55 124]
[57 122]
[58 121]
[59 120]
[60 118]
[61 117]
[63 115]
[64 114]
[65 113]
[66 112]
[67 76]
[68 75]
[79 88]
[80 87]
[96 111]
[97 110]
[98 109]
[99 108]
[100 107]
[101 106]
[130 147]
[131 146]
[132 145]
[133 144]
[134 143]
[135 142]
[179 201]
[180 200]
[181 199]
[182 198]
[183 197]
[186 193]
[187 192]
[204 262]
[205 261]
[206 260]
[211 224]
[212 223]
[213 222]
[214 221]
[215 220]
[225 259]
[226 258]
[227 257]
[228 256]
[229 250]
[230 249]
[231 248]
[232 247]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
