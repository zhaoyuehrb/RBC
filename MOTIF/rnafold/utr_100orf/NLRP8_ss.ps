%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:14:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCUCGUGUUUCUCUCUUCCAAUCGGUUGUCUUUAUCGUGGACACUGAGGUGUUCUCUGCCUUGACUAAAGAUGAGUGACGUGAAUCCACCCUCUGACACCCCCAUUCCCUUUUCAUCCUCCUCCACUCACAGUUCUCAUAUUCCGCCCUGGACAUUCUCUUGCUACCCCG\
) } def
/len { sequence length } bind def

/coor [
[222.84695435 243.13510132]
[210.80142212 226.46812439]
[202.37196350 207.70629883]
[197.90823364 187.62358093]
[197.59623718 167.04878235]
[201.45062256 146.83142090]
[187.44038391 141.47296143]
[173.43014526 136.11448669]
[159.41990662 130.75602722]
[145.40966797 125.39756775]
[138.98750305 134.45358276]
[130.79019165 141.94088745]
[121.19097900 147.51858521]
[110.62692261 150.93272400]
[99.57901764 152.02784729]
[88.55027771 150.75408936]
[78.04285431 147.16944885]
[68.53515625 141.43714905]
[60.46008301 133.81817627]
[54.18530273 124.65942383]
[49.99650574 114.37790680]
[48.08441544 103.44174957]
[48.53608704 92.34889221]
[34.17207718 88.02740479]
[19.80806923 83.70591736]
[4.36390686 87.13934326]
[-5.59462690 76.06338501]
[-19.95863533 71.74189758]
[-34.32264328 67.42041016]
[-48.68665314 63.09892654]
[-63.05066299 58.77743912]
[-77.41467285 54.45595169]
[-91.77867889 50.13446426]
[-106.14269257 45.81298065]
[-120.50669861 41.49149323]
[-134.90957642 37.30136490]
[-149.35011292 33.24294281]
[-163.79064941 29.18452454]
[-179.16954041 32.89944839]
[-189.32870483 22.00722122]
[-203.76924133 17.94880104]
[-212.91546631 18.63860512]
[-218.43518066 13.68214130]
[-232.79919434 9.36065483]
[-239.37004089 10.51298237]
[-244.71838379 8.45804310]
[-247.60359192 4.61013174]
[-261.80020142 -0.23307452]
[-275.99679565 -5.07628059]
[-290.97219849 0.67844969]
[-304.73495483 -7.56571436]
[-306.72744751 -23.48455620]
[-295.42120361 -34.86650085]
[-279.48941040 -32.98029709]
[-271.15359497 -19.27287674]
[-256.95700073 -14.42967129]
[-242.76039124 -9.58646488]
[-228.47770691 -5.00335407]
[-214.11369324 -0.68186778]
[-199.71081543 3.50826049]
[-185.27027893 7.56668091]
[-170.92428589 3.56146908]
[-159.73223877 14.74398232]
[-145.29170227 18.80240250]
[-130.85115051 22.86082458]
[-123.53399658 21.63890266]
[-116.18521118 27.12748337]
[-101.82120514 31.44897079]
[-87.45719147 35.77045822]
[-73.09318542 40.09194183]
[-58.72917557 44.41342926]
[-44.36516571 48.73491669]
[-30.00115776 53.05640411]
[-15.63714981 57.37788773]
[-1.27314043 61.69937515]
[13.14361191 57.95684814]
[24.12955666 69.34191132]
[38.49356461 73.66339874]
[52.85757446 77.98487854]
[68.57831573 58.53010941]
[91.56090546 48.65941620]
[91.28694153 33.66191864]
[91.01298523 18.66442108]
[82.09642029 4.90117502]
[89.79740143 -9.57732582]
[106.19380951 -9.87684059]
[114.41843414 4.31074572]
[106.01048279 18.39046097]
[106.28443909 33.38795853]
[106.55840302 48.38545609]
[120.44786835 52.15694046]
[132.77270508 59.58930969]
[142.58979797 70.11384583]
[149.14799500 82.92523193]
[151.94546509 97.04315186]
[150.76812744 111.38732147]
[164.77836609 116.74578857]
[178.78860474 122.10424805]
[192.79885864 127.46271515]
[206.80909729 132.82118225]
[211.80543518 123.50833893]
[217.74440002 114.76751709]
[224.56117249 106.69375610]
[232.18141174 99.37482452]
[240.52204895 92.89025879]
[249.49215698 87.31048584]
[258.99398804 82.69609833]
[268.92404175 79.09716034]
[279.17413330 76.55265045]
[289.63265991 75.09010315]
[300.18576050 74.72525024]
[310.71853638 75.46186066]
[321.11633301 77.29174805]
[331.26599121 80.19478607]
[341.05709839 84.13920593]
[350.38314819 89.08188629]
[359.14266968 94.96886444]
[367.24047852 101.73589325]
[374.58847046 109.30917358]
[381.10687256 117.60611725]
[386.72479248 126.53630829]
[391.38131714 136.00241089]
[395.02584839 145.90133667]
[397.61895752 156.12521362]
[399.13256836 166.56274414]
[399.55041504 177.10026550]
[398.86810303 187.62306213]
[397.09326172 198.01660156]
[394.24539185 208.16775513]
[390.35568237 217.96611023]
[385.46664429 227.30505371]
[379.63171387 236.08300781]
[390.98425293 245.88706970]
[402.33679199 255.69114685]
[415.81686401 247.44688416]
[431.16458130 243.77056885]
[446.87826538 245.00956726]
[461.42428589 251.03096008]
[473.38665771 261.23559570]
[481.60491943 274.61782837]
[485.28665161 289.86441040]
[484.08398438 305.48361206]
[478.12628174 319.95092773]
[489.65597534 329.54602051]
[501.18569946 339.14111328]
[517.22869873 339.11578369]
[527.13830566 351.73245239]
[523.31262207 367.31268311]
[508.68643188 373.90466309]
[494.47970581 366.45159912]
[491.59060669 350.67083740]
[480.06088257 341.07574463]
[468.53118896 331.48065186]
[456.64862061 339.38702393]
[443.00268555 343.62380981]
[428.69985962 343.83807373]
[414.90246582 340.00335693]
[402.73431396 332.42272949]
[393.18914795 321.70465088]
[387.04953003 308.71426392]
[384.82254028 294.50357056]
[386.69812012 280.22619629]
[392.53271484 267.04370117]
[381.18017578 257.23962402]
[369.82763672 247.43554688]
[353.90866089 260.39862061]
[335.69406128 269.87808228]
[315.93505859 275.48104858]
[295.44702148 276.97442627]
[275.07574463 274.29479980]
[255.66262817 267.55111694]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 100]
[7 99]
[8 98]
[9 97]
[10 96]
[23 79]
[24 78]
[25 77]
[27 75]
[28 74]
[29 73]
[30 72]
[31 71]
[32 70]
[33 69]
[34 68]
[35 67]
[36 65]
[37 64]
[38 63]
[40 61]
[41 60]
[43 59]
[44 58]
[47 57]
[48 56]
[49 55]
[81 90]
[82 89]
[83 88]
[132 165]
[133 164]
[134 163]
[143 153]
[144 152]
[145 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
