%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:58:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGUGAGGCAGUGCUGUGUGGUUCCUGCCGUCCGGACUCUUUUUCCUCUACUGAGAUUCAUCUGUGUGAAAUAUGAGUUGGCGAGGAAGAUCGACCUAUUAUCGGCCUAGACCAAGACGCUACGUAGAGCCUCCUGAAAUGAUUGGGCCUAUGCGGCCCGAGCAGUUCAGUG\
) } def
/len { sequence length } bind def

/coor [
[196.59680176 310.19177246]
[191.38110352 296.12777710]
[196.28161621 281.95086670]
[209.06913757 274.10995483]
[223.92520142 276.17105103]
[215.02050781 264.10015869]
[206.11581421 252.02926636]
[197.21112061 239.95837402]
[188.30642700 227.88748169]
[173.58619690 225.92523193]
[164.38360596 213.81048584]
[166.54161072 198.38386536]
[157.63691711 186.31297302]
[148.73222351 174.24208069]
[130.49963379 167.86567688]
[128.46200562 147.83403015]
[119.12487793 136.09443665]
[109.78775024 124.35484314]
[100.45062256 112.61524963]
[90.79722595 101.13431549]
[80.83470917 89.92055511]
[70.87220001 78.70680237]
[60.90968323 67.49304962]
[45.56663132 68.87035370]
[32.50720978 61.04061127]
[26.63184547 47.18622208]
[30.00079155 32.70215225]
[20.03827858 21.48839760]
[10.07576370 10.27464294]
[0.11325022 -0.93911320]
[-18.79627991 1.76484227]
[-35.40493393 -7.36462069]
[-43.13323212 -24.50595665]
[-39.04307556 -42.70553970]
[-49.60141373 -53.36018372]
[-55.92347336 -55.48400879]
[-59.64157486 -59.84136200]
[-60.34090042 -64.59864044]
[-70.50539398 -75.62963867]
[-88.19356537 -80.68949127]
[-91.40554047 -97.92655182]
[-101.76866913 -108.77116394]
[-112.13179779 -119.61577606]
[-122.49491882 -130.46038818]
[-132.85804749 -141.30500793]
[-143.22117615 -152.14961243]
[-153.58430481 -162.99421692]
[-163.94743347 -173.83883667]
[-174.92622375 -170.33515930]
[-186.36683655 -171.19493103]
[-196.60644531 -176.25453186]
[-204.17127991 -184.74278259]
[-207.98866272 -195.39817810]
[-207.53907776 -206.65634155]
[-202.92646790 -216.87963867]
[-212.68371582 -228.27244568]
[-222.44096375 -239.66525269]
[-232.19821167 -251.05807495]
[-241.95545959 -262.45086670]
[-251.71270752 -273.84368896]
[-261.46994019 -285.23651123]
[-276.37567139 -281.76110840]
[-291.18618774 -285.62207031]
[-302.49816895 -295.93212891]
[-307.71221924 -310.32214355]
[-305.63015747 -325.48538208]
[-296.73043823 -337.93743896]
[-283.05813599 -344.81692505]
[-267.75509644 -344.54296875]
[-254.33778381 -337.17855835]
[-245.88945007 -324.41595459]
[-244.35140991 -309.18792725]
[-250.07713318 -294.99374390]
[-240.31988525 -283.60095215]
[-230.56265259 -272.20812988]
[-220.80540466 -260.81530762]
[-211.04815674 -249.42250061]
[-201.29090881 -238.02969360]
[-191.53366089 -226.63688660]
[-173.06094360 -229.22781372]
[-156.60765076 -220.12611389]
[-148.86436462 -202.82768250]
[-153.10281372 -184.20196533]
[-142.73968506 -173.35734558]
[-132.37655640 -162.51274109]
[-122.01343536 -151.66812134]
[-111.65030670 -140.82351685]
[-101.28718567 -129.97889709]
[-90.92405701 -119.13429260]
[-80.56092834 -108.28968048]
[-68.45662689 -107.69436646]
[-59.73355103 -98.71305847]
[-59.47439194 -85.79413605]
[-49.30989838 -74.76313782]
[-38.94676971 -63.91852188]
[-28.38842964 -53.26387787]
[-17.82274055 -57.02659225]
[-6.56545305 -56.55570984]
[3.74278831 -51.88130188]
[11.58522224 -43.64885330]
[15.79212093 -33.03041077]
[15.71515560 -21.55779457]
[11.32700634 -10.90162754]
[21.28952026 0.31212857]
[31.25203323 11.52588463]
[41.21454620 22.73963928]
[55.99456787 21.09981918]
[69.06065369 28.56583214]
[75.29800415 42.45643616]
[72.12343597 57.53053284]
[82.08595276 68.74428558]
[92.04846954 79.95804596]
[102.01097870 91.17179871]
[105.83060455 91.94155884]
[109.28502655 94.40819550]
[111.61679840 98.36669922]
[112.19021606 103.27812195]
[121.52734375 115.01771545]
[130.86447144 126.75730896]
[140.20159912 138.49690247]
[151.10644531 139.10824585]
[159.68614197 145.50514221]
[163.23535156 155.36788940]
[160.80311584 165.33738708]
[169.70780945 177.40827942]
[178.61250305 189.47917175]
[193.98876953 191.97076416]
[202.84744263 204.33921814]
[200.37731934 218.98278809]
[209.28201294 231.05368042]
[218.18670654 243.12457275]
[227.09140015 255.19546509]
[235.99609375 267.26635742]
[245.64949036 278.74728394]
[256.01260376 289.59188843]
[266.37573242 300.43652344]
[276.73886108 311.28112793]
[287.10198975 322.12573242]
[302.23007202 326.75738525]
[305.42913818 341.30438232]
[315.79226685 352.14901733]
[330.92034912 356.78067017]
[334.11941528 371.32766724]
[344.48254395 382.17227173]
[354.84567261 393.01687622]
[365.20880127 403.86151123]
[375.57192993 414.70611572]
[385.93505859 425.55072021]
[396.29818726 436.39532471]
[412.23992920 438.19549561]
[420.64962769 451.85772705]
[415.07611084 466.90151978]
[399.79489136 471.78656006]
[386.52841187 462.76547241]
[385.45358276 446.75845337]
[375.09045410 435.91384888]
[364.72732544 425.06924438]
[354.36419678 414.22460938]
[344.00106812 403.38000488]
[333.63793945 392.53540039]
[323.27481079 381.69079590]
[308.88800049 377.83480835]
[304.94766235 362.51214600]
[294.58453369 351.66751099]
[280.19772339 347.81155396]
[276.25738525 332.48886108]
[265.89425659 321.64425659]
[255.53112793 310.79965210]
[245.16799927 299.95501709]
[234.80487061 289.11041260]
[234.28451538 304.10137939]
[224.36402893 315.35232544]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 133]
[6 132]
[7 131]
[8 130]
[9 129]
[12 126]
[13 125]
[14 124]
[16 120]
[17 119]
[18 118]
[19 117]
[20 113]
[21 112]
[22 111]
[23 110]
[27 106]
[28 105]
[29 104]
[30 103]
[34 96]
[35 95]
[38 94]
[39 93]
[41 90]
[42 89]
[43 88]
[44 87]
[45 86]
[46 85]
[47 84]
[48 83]
[55 79]
[56 78]
[57 77]
[58 76]
[59 75]
[60 74]
[61 73]
[134 170]
[135 169]
[136 168]
[137 167]
[138 166]
[140 164]
[141 163]
[143 161]
[144 160]
[145 159]
[146 158]
[147 157]
[148 156]
[149 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
