%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:54:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGCGGAUAGAGCCGUACUGCCGCUCUAGUUUUUCUUUUGCUCUCUAUGGUUAGGAGCGCAAGCCUCUCUUCGGCCCGGAAAGAUUUAAGUUCGUGAAUGCAUACGCAAGACUCGGAGGUAGUUCCGGUUCCGGCGUGGCCAUUUUCGUUGGUGGUGUUCAGUUGUGGCGGUUGCUGGUCAGUAACAGCCAAGAUGC\
) } def
/len { sequence length } bind def

/coor [
[74.83685303 122.05738068]
[68.20695496 135.51264954]
[61.57704544 148.96792603]
[54.94713974 162.42320251]
[48.31723404 175.87846375]
[41.68732834 189.33374023]
[35.05742264 202.78901672]
[34.06941986 211.87995911]
[28.21517944 216.40312195]
[21.37369347 229.75205994]
[14.53220558 243.10098267]
[20.77449989 257.43862915]
[16.29077339 272.41961670]
[3.19810104 280.97039795]
[-12.32155514 279.05355835]
[-22.94028854 267.57415771]
[-23.64425850 251.95243835]
[-14.10107231 239.56448364]
[1.18327105 236.25950623]
[8.02475834 222.91056824]
[14.86624622 209.56163025]
[21.60215187 196.15910339]
[28.23205757 182.70384216]
[34.86196136 169.24856567]
[41.49186707 155.79328918]
[48.12177277 142.33801270]
[54.75167847 128.88275146]
[61.38158417 115.42747498]
[55.17974854 101.76961517]
[40.68576431 97.90639496]
[26.19178200 94.04316711]
[11.69779968 90.17994690]
[-2.79618263 86.31672668]
[-17.29016495 82.45350647]
[-31.78414726 78.59028625]
[-46.27812958 74.72706604]
[-60.77210999 70.86384583]
[-71.74328613 84.66934204]
[-91.70264435 88.82254791]
[-112.22776031 78.10277557]
[-127.22728729 77.98437500]
[-142.22682190 77.86597443]
[-157.22634888 77.74757385]
[-172.22589111 77.62917328]
[-180.84176636 80.69313812]
[-187.46078491 77.38864136]
[-202.45658875 77.03347015]
[-217.45237732 76.67829895]
[-231.57742310 85.00988007]
[-245.72026062 76.70854950]
[-245.33195496 60.31399918]
[-230.81196594 52.69153976]
[-217.09721375 61.68250275]
[-202.10140991 62.03767395]
[-187.10562134 62.39284515]
[-172.10748291 62.62963867]
[-157.10795593 62.74803925]
[-142.10842896 62.86643982]
[-127.10888672 62.98484039]
[-112.10935974 63.10324097]
[-109.72427368 55.99259186]
[-119.65542603 44.75105286]
[-104.95409393 41.77128983]
[-102.56900787 34.66063690]
[-114.60609436 25.71029472]
[-126.64318085 16.75995255]
[-141.81428528 20.55091095]
[-155.85009766 13.65671349]
[-162.12333679 -0.66741192]
[-157.67195129 -15.65805054]
[-144.59777832 -24.23708153]
[-129.07402039 -22.35374832]
[-118.43052673 -10.89730453]
[-117.69283295 4.72286940]
[-105.65575409 13.67321205]
[-93.61866760 22.62355423]
[-72.10473633 26.04249763]
[-58.78327179 39.85831833]
[-56.90888977 56.36986160]
[-42.41490936 60.23308182]
[-27.92092514 64.09630585]
[-13.42694378 67.95952606]
[1.06703854 71.82274628]
[15.56102085 75.68596649]
[30.05500221 79.54918671]
[44.54898453 83.41240692]
[59.04296875 87.27562714]
[52.86114883 73.60869598]
[53.74649048 58.63484573]
[61.49575043 45.79159927]
[74.32994843 38.02735901]
[89.30274963 37.12454224]
[102.97689056 43.29041290]
[112.21321106 55.10947800]
[114.89135742 69.86846161]
[110.39694977 84.17843628]
[122.43403625 75.22809601]
[134.47111511 66.27774811]
[146.50819397 57.32740784]
[158.54528809 48.37706757]
[170.58236694 39.42672348]
[182.61944580 30.47638130]
[184.65444946 9.10928440]
[207.88525391 -1.43812513]
[217.48669434 -12.96254635]
[227.08815002 -24.48696709]
[236.68959045 -36.01139069]
[246.29103088 -47.53580856]
[245.04707336 -63.06289291]
[254.94847107 -74.61351776]
[269.75885010 -75.70375061]
[279.36029053 -87.22817230]
[282.24920654 -102.78339386]
[296.34039307 -107.60906982]
[305.94183350 -119.13349152]
[315.54327393 -130.65791321]
[325.14474487 -142.18234253]
[334.74618530 -153.70675659]
[344.34762573 -165.23117065]
[346.60391235 -181.47436523]
[361.89877319 -187.39039612]
[374.49813843 -176.89337158]
[371.44088745 -160.78172302]
[355.87203979 -155.62973022]
[346.27059937 -144.10531616]
[336.66915894 -132.58088684]
[327.06771851 -121.05647278]
[317.46627808 -109.53205109]
[307.86480713 -98.00762939]
[305.66265869 -83.27671814]
[290.88470459 -77.62673187]
[281.28326416 -66.10231018]
[282.88500977 -51.33850479]
[273.31195068 -39.51432419]
[257.81546021 -37.93436813]
[248.21400452 -26.40994644]
[238.61256409 -14.88552475]
[229.01112366 -3.36110306]
[219.40968323 8.16331863]
[226.25115967 21.51225281]
[241.21333313 20.44753265]
[256.17550659 19.38281441]
[271.13766479 18.31809425]
[280.16653442 5.55042553]
[295.30303955 1.62349331]
[309.40014648 8.39147472]
[315.80163574 22.65873528]
[311.48495483 37.68871307]
[298.48828125 46.38470840]
[282.94824219 44.64074326]
[272.20239258 33.28025818]
[257.24020386 34.34497833]
[242.27804565 35.40969849]
[227.31588745 36.47441864]
[209.00506592 48.25390625]
[191.56979370 42.51346588]
[179.53271484 51.46380615]
[167.49562073 60.41415024]
[155.45854187 69.36449432]
[143.42146301 78.31483459]
[131.38436890 87.26517487]
[119.34729004 96.21551514]
[116.98908234 111.02898407]
[125.65190125 123.27462006]
[134.31471252 135.52026367]
[148.60115051 142.31793213]
[149.63487244 157.17662048]
[158.29769897 169.42225647]
[166.96051025 181.66789246]
[175.62332153 193.91352844]
[189.90975952 200.71119690]
[190.94348145 215.56988525]
[199.60630798 227.81552124]
[208.26911926 240.06115723]
[216.93194580 252.30679321]
[225.59475708 264.55242920]
[234.25756836 276.79806519]
[249.37170410 283.16165161]
[251.14900208 299.46420288]
[237.76112366 308.93505859]
[222.98039246 301.83142090]
[222.01193237 285.46087646]
[213.34912109 273.21524048]
[204.68630981 260.96960449]
[196.02348328 248.72398376]
[187.36067200 236.47834778]
[178.69784546 224.23271179]
[165.03103638 218.31092834]
[163.37768555 202.57633972]
[154.71487427 190.33070374]
[146.05206299 178.08506775]
[137.38923645 165.83943176]
[123.72242737 159.91766357]
[122.06907654 144.18307495]
[113.40626526 131.93743896]
[104.74344635 119.69180298]
[97.26679993 120.28319550]
[90.81475830 133.82466125]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 28]
[2 27]
[3 26]
[4 25]
[5 24]
[6 23]
[7 22]
[9 21]
[10 20]
[11 19]
[29 87]
[30 86]
[31 85]
[32 84]
[33 83]
[34 82]
[35 81]
[36 80]
[37 79]
[40 60]
[41 59]
[42 58]
[43 57]
[44 56]
[46 55]
[47 54]
[48 53]
[64 76]
[65 75]
[66 74]
[96 162]
[97 161]
[98 160]
[99 159]
[100 158]
[101 157]
[102 156]
[104 139]
[105 138]
[106 137]
[107 136]
[108 135]
[111 132]
[112 131]
[114 129]
[115 128]
[116 127]
[117 126]
[118 125]
[119 124]
[140 154]
[141 153]
[142 152]
[143 151]
[163 196]
[164 195]
[165 194]
[167 192]
[168 191]
[169 190]
[170 189]
[172 187]
[173 186]
[174 185]
[175 184]
[176 183]
[177 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
