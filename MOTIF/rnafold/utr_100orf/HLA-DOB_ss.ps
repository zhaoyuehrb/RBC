%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:49:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUUAUACUCUUAAUGGGUACUUUCUGACUGAAUUUUAUGAGCUCAUUCUGAAGAGGCUGACGAUUUUACUAUCUCAUUUUUUUCCUUUCUCCAGAAUGGGUUCUGGGUGGGUCCCCUGGGUGGUGGCUCUGCUAGUGAAUCUGACCCGACUGGAUUCCUCCAUGACUCAAGGCACAGACUCUCCAGAAGAUUUUG\
) } def
/len { sequence length } bind def

/coor [
[130.59126282 188.64602661]
[116.50183105 183.49938965]
[105.30749512 173.51506042]
[98.58964539 160.10348511]
[97.29727936 145.15927124]
[101.61418152 130.79118347]
[100.77859497 115.81447601]
[94.33167267 129.35838318]
[87.88475037 142.90228271]
[81.43782806 156.44616699]
[74.99090576 169.99006653]
[78.98156738 185.52886963]
[69.20633698 198.24989319]
[53.16393661 198.39466858]
[43.16072083 185.85212708]
[46.87030411 170.24383545]
[61.44700623 163.54315186]
[67.89392853 149.99925232]
[74.34085083 136.45535278]
[80.78777313 122.91145325]
[87.23470306 109.36755371]
[75.08370209 118.16262817]
[62.93270493 126.95769501]
[56.47936630 140.49853516]
[46.36926270 151.57940674]
[33.47516251 159.24375916]
[18.91015625 162.82992554]
[3.93158913 162.02835083]
[-10.16749954 156.90821838]
[-22.16999054 147.91154480]
[-31.03975487 135.81497192]
[-36.01110458 121.66273499]
[-36.65487671 106.67655182]
[-32.91550064 92.15013123]
[-25.11577988 79.33746338]
[-13.92903519 69.34462738]
[-0.32097456 63.03426361]
[14.53367138 60.95112228]
[29.35256004 63.27502823]
[42.85643387 69.80537415]
[53.87775803 79.97618103]
[68.42715454 83.62516785]
[82.97654724 87.27416229]
[71.95767212 77.09651947]
[60.93879700 66.91887665]
[49.91992188 56.74123764]
[38.90104675 46.56359482]
[27.88216972 36.38595581]
[16.86329460 26.20831299]
[5.84441805 16.03067207]
[-5.17445755 5.85303068]
[-16.19333267 -4.32461071]
[-36.03190613 -7.86193180]
[-40.98997879 -26.54524040]
[-52.32622147 -36.36814880]
[-63.66246796 -46.19106293]
[-74.99871063 -56.01397324]
[-86.33495331 -65.83688354]
[-110.07582855 -68.12005615]
[-117.13470459 -90.14321136]
[-129.35334778 -98.84407043]
[-141.57199097 -107.54492188]
[-150.38786316 -109.97761536]
[-153.91398621 -116.48201752]
[-165.99302673 -125.37564087]
[-178.07208252 -134.26925659]
[-193.65757751 -131.64854431]
[-206.48265076 -140.88395691]
[-208.93844604 -156.49627686]
[-199.56794739 -169.22300720]
[-183.93054199 -171.51359558]
[-171.30358887 -162.00906372]
[-169.17846680 -146.34831238]
[-157.09941101 -137.45469666]
[-145.02035522 -128.56106567]
[-132.87112427 -119.76355743]
[-120.65248871 -111.06270599]
[-108.43385315 -102.36185455]
[-102.56170654 -105.18968964]
[-96.05125427 -106.06597137]
[-89.53890991 -104.87280273]
[-83.67127991 -101.69617462]
[-79.04096985 -96.82058716]
[-76.12677765 -90.70380402]
[-75.24429321 -83.93398285]
[-76.51203918 -77.17312622]
[-65.17579651 -67.35021973]
[-53.83955383 -57.52730560]
[-42.50331116 -47.70439529]
[-31.16706848 -37.88148499]
[-21.06855392 -39.52457428]
[-11.53491211 -35.24283600]
[-5.81900644 -26.23213959]
[-6.01569223 -15.34348679]
[5.00318384 -5.16584539]
[16.02205849 5.01179600]
[27.04093552 15.18943691]
[38.05981064 25.36707878]
[49.07868576 35.54471970]
[60.09756088 45.72236252]
[71.11643982 55.90000153]
[82.13531494 66.07764435]
[93.15419006 76.25528717]
[118.46060181 88.23326111]
[133.43040466 87.28189850]
[148.40019226 86.33054352]
[163.36999512 85.37918091]
[178.33979797 84.42782593]
[193.30960083 83.47646332]
[201.68594360 79.80571747]
[208.52410889 82.63068390]
[223.50711060 81.91695404]
[238.49012756 81.20322418]
[253.47312927 80.48949432]
[268.45614624 79.77577209]
[283.40896606 78.58702087]
[298.31655884 76.92444611]
[311.17410278 67.70523071]
[324.68054199 73.98419189]
[339.58810425 72.32161713]
[354.49569702 70.65904999]
[369.40325928 68.99647522]
[384.31085205 67.33390045]
[397.16839600 58.11468887]
[410.67483521 64.39364624]
[425.58242798 62.73107529]
[440.48999023 61.06850052]
[455.39758301 59.40592575]
[460.66235352 44.01590729]
[472.06887817 32.50189209]
[487.29913330 27.13171005]
[503.28924561 28.93190956]
[516.84582520 37.49193954]
[525.28381348 51.05637360]
[540.16314697 49.15748978]
[555.04248047 47.25860214]
[569.92181396 45.35971451]
[584.80114746 43.46082687]
[589.58050537 28.96530533]
[600.18212891 17.98495293]
[614.50109863 12.69992828]
[629.69421387 14.15957642]
[642.74505615 22.07408333]
[651.06219482 34.87201691]
[652.99438477 50.01234055]
[648.15795898 64.48892975]
[637.51318359 75.42744446]
[623.17358398 80.65604401]
[607.98626709 79.13657379]
[594.96673584 71.17073822]
[586.70001221 58.34014893]
[571.82067871 60.23903656]
[556.94134521 62.13792419]
[542.06207275 64.03681183]
[527.18273926 65.93569946]
[523.44433594 79.30158234]
[514.86541748 90.26648712]
[502.71612549 97.15338898]
[488.81573486 98.89302063]
[475.26034546 95.18975830]
[464.10668945 86.57125092]
[457.06015015 74.31350708]
[442.15255737 75.97607422]
[427.24499512 77.63864899]
[412.33740234 79.30122375]
[400.54614258 88.40151978]
[385.97341919 82.24147797]
[371.06585693 83.90405273]
[356.15826416 85.56661987]
[341.25070190 87.22919464]
[326.34310913 88.89176941]
[314.55184937 97.99206543]
[299.97912598 91.83202362]
[285.07153320 93.49459839]
[283.21575928 95.60911560]
[280.40615845 97.11186981]
[276.87298584 97.63421631]
[272.97616577 96.89813995]
[269.16986084 94.75878143]
[254.18685913 95.47251129]
[239.20385742 96.18623352]
[224.22084045 96.89996338]
[209.23783875 97.61369324]
[194.26095581 98.44626617]
[179.29115295 99.39762115]
[164.32136536 100.34898376]
[149.35156250 101.30033875]
[134.38175964 102.25170135]
[119.41195679 103.20305634]
[133.00529480 109.54506683]
[147.94607544 110.87674713]
[161.33992004 117.62985992]
[171.29476929 128.85043335]
[176.40431213 142.95335388]
[175.94674683 157.94638062]
[169.98672485 171.71147156]
[159.36618042 182.30412292]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 21]
[8 20]
[9 19]
[10 18]
[11 17]
[43 103]
[44 102]
[45 101]
[46 100]
[47 99]
[48 98]
[49 97]
[50 96]
[51 95]
[52 94]
[54 90]
[55 89]
[56 88]
[57 87]
[58 86]
[60 78]
[61 77]
[62 76]
[64 75]
[65 74]
[66 73]
[104 189]
[105 188]
[106 187]
[107 186]
[108 185]
[109 184]
[111 183]
[112 182]
[113 181]
[114 180]
[115 179]
[116 174]
[117 173]
[119 171]
[120 170]
[121 169]
[122 168]
[123 167]
[125 165]
[126 164]
[127 163]
[128 162]
[134 155]
[135 154]
[136 153]
[137 152]
[138 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
