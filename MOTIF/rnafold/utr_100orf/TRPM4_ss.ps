%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:47:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCUGGAAAGUGGAGGAUCCGGUUUGCUCUGGGCGGGUCUGGAAGCAGAGCCGGCGGAGGGAGCGCCGGGGCCCUGGGCUGCAGGAGGUUGCGGCGGCCGCGGCAGCAUGGUGGUGCCGGAGAAGGAGCAGAGCUGGAUCCCCAAGAUCUUCAAGAAGAAGACCUGCACGACGUUCAUAGUUGACUCCACAGAUCCGGGAGGGACCU\
) } def
/len { sequence length } bind def

/coor [
[280.36050415 506.72360229]
[283.77136230 491.88156128]
[292.92932129 479.71389771]
[306.24771118 472.32876587]
[304.89669800 457.38973999]
[303.54568481 442.45068359]
[302.19467163 427.51165771]
[300.84368896 412.57263184]
[287.48071289 402.36251831]
[285.59899902 385.31112671]
[296.84820557 371.91528320]
[295.27279663 356.99826050]
[293.69738770 342.08120728]
[292.12197876 327.16418457]
[290.54660034 312.24713135]
[284.21298218 298.64987183]
[273.80755615 287.84585571]
[263.40209961 277.04183960]
[252.99664307 266.23782349]
[242.59120178 255.43382263]
[232.18574524 244.62982178]
[221.78030396 233.82580566]
[211.37484741 223.02180481]
[200.88848877 212.29629517]
[190.32182312 201.64991760]
[179.75515747 191.00352478]
[169.18849182 180.35714722]
[158.62182617 169.71075439]
[148.05514526 159.06437683]
[137.48847961 148.41798401]
[126.92181396 137.77160645]
[107.35336304 148.60969543]
[83.71209717 149.32157898]
[61.20410538 138.58979797]
[45.30606461 117.73954010]
[30.71135330 121.20284271]
[16.11664391 124.66614532]
[4.47578382 135.38066101]
[-9.69404507 130.79098511]
[-24.28875542 134.25427246]
[-38.88346481 137.71757507]
[-53.47817230 141.18087769]
[-65.02542877 152.82531738]
[-80.81233978 148.38623047]
[-84.59868622 132.43017578]
[-72.48940277 121.37137604]
[-56.94147491 126.58617401]
[-42.34676361 123.12287140]
[-27.75205612 119.65956879]
[-13.15734577 116.19626617]
[-2.56039667 105.72946930]
[12.65334415 110.07143402]
[27.24805260 106.60813141]
[41.84276199 103.14483643]
[41.84276199 88.14483643]
[27.24805260 84.68153381]
[14.81103039 94.16069031]
[-0.80686045 93.37615204]
[-12.23132801 82.69834137]
[-14.06808853 67.16900635]
[-5.44988012 54.12061691]
[9.55404377 49.71422195]
[23.85928726 56.03039169]
[30.71135330 70.08682251]
[45.30606461 73.55012512]
[53.97628021 61.30972290]
[45.86666870 48.69092178]
[37.75705338 36.07211685]
[29.64744186 23.45331573]
[15.67747498 16.02697182]
[15.30562305 1.13700926]
[7.19601107 -11.48179340]
[-0.91360122 -24.10059738]
[-9.02321339 -36.71939850]
[-12.95433998 -38.57164001]
[-15.80413437 -41.30418396]
[-17.42859840 -44.46868515]
[-17.84423447 -47.61611176]
[-17.21436119 -50.34918213]
[-24.55105591 -63.43248749]
[-31.88775063 -76.51579285]
[-39.22444534 -89.59909821]
[-46.56114197 -102.68241119]
[-53.89783478 -115.76571655]
[-61.23453140 -128.84901428]
[-75.60150146 -136.75611877]
[-75.66667175 -153.15513611]
[-61.36299896 -161.17617798]
[-47.40487671 -152.56787109]
[-48.15122223 -136.18571472]
[-40.81452942 -123.10240936]
[-33.47783279 -110.01910400]
[-26.14113998 -96.93579865]
[-18.80444527 -83.85249329]
[-11.46774960 -70.76918030]
[-4.13105536 -57.68587494]
[3.59558940 -44.82901382]
[11.70520210 -32.21020889]
[19.81481361 -19.59140587]
[27.92442703 -6.97260284]
[41.31433868 -0.44884089]
[42.26624680 15.34370327]
[50.37585831 27.96250534]
[58.48546982 40.58131027]
[66.59508514 53.20011139]
[86.10009003 49.95296478]
[103.61882019 53.75735855]
[107.19171906 39.18908691]
[110.76461029 24.62082100]
[114.33750153 10.05255222]
[109.23970795 -5.53412628]
[120.38921356 -17.55995941]
[136.31636047 -13.65379906]
[140.63665771 2.16602969]
[128.90576172 13.62544441]
[125.33287811 28.19371223]
[121.75998688 42.76198196]
[118.18708801 57.33024979]
[127.22338104 62.44516754]
[134.89543152 69.44207001]
[140.81875610 77.97032166]
[144.69654846 87.60253906]
[146.33445740 97.85604095]
[145.65040588 108.21697235]
[142.67868042 118.16613007]
[137.56819153 127.20493317]
[148.13487244 137.85131836]
[158.70153809 148.49769592]
[169.26820374 159.14408875]
[179.83486938 169.79046631]
[190.40153503 180.43685913]
[200.96821594 191.08323669]
[211.53488159 201.72962952]
[219.80267334 205.61685181]
[222.17886353 212.61634827]
[232.58430481 223.42036438]
[242.98976135 234.22436523]
[253.39520264 245.02838135]
[263.80065918 255.83238220]
[274.20611572 266.63638306]
[284.61154175 277.44039917]
[295.01699829 288.24441528]
[297.62277222 271.78692627]
[307.88446045 256.38073730]
[325.22424316 244.76080322]
[348.20065308 239.39027405]
[363.19683838 239.05209351]
[376.81906128 231.00563049]
[389.71752930 238.45402527]
[404.71371460 238.11584473]
[419.70989990 237.77766418]
[434.70608521 237.43948364]
[449.70227051 237.10130310]
[461.78256226 226.54449463]
[477.54180908 229.54884338]
[484.89083862 243.80966187]
[478.19213867 258.38726807]
[462.58438110 262.09899902]
[450.04046631 252.09748840]
[435.04428101 252.43566895]
[420.04809570 252.77384949]
[405.05191040 253.11203003]
[390.05572510 253.45021057]
[377.50613403 261.47247314]
[363.53500366 254.04827881]
[348.53881836 254.38645935]
[346.37179565 261.56658936]
[356.64114380 272.50006104]
[342.03778076 275.92678833]
[339.87075806 283.10690308]
[352.17596436 291.68487549]
[364.48117065 300.26287842]
[376.78640747 308.84085083]
[391.83447266 304.58761597]
[406.07458496 311.04928589]
[412.78302002 325.17480469]
[408.79223633 340.29458618]
[395.98657227 349.26950073]
[380.41247559 347.86187744]
[369.42355347 336.73635864]
[368.20843506 321.14605713]
[355.90319824 312.56808472]
[343.59799194 303.99011230]
[331.29278564 295.41213989]
[324.83547974 299.22702026]
[311.92092896 306.85684204]
[305.46362305 310.67172241]
[307.03903198 325.58877563]
[308.61444092 340.50579834]
[310.18984985 355.42285156]
[311.76522827 370.33990479]
[323.14309692 377.54989624]
[328.21646118 389.81756592]
[325.34005737 402.57812500]
[315.78271484 411.22161865]
[317.13372803 426.16064453]
[318.48471069 441.09970093]
[319.83572388 456.03872681]
[321.18673706 470.97775269]
[335.61395264 475.85372925]
[346.80624390 486.18103027]
[352.82443237 500.17034912]
[352.62588501 515.39794922]
[346.24496460 529.22558594]
[334.78723145 539.25756836]
[320.23776245 543.75573730]
[305.11740112 541.94073486]
[292.04580688 534.12707520]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 199]
[5 198]
[6 197]
[7 196]
[8 195]
[11 191]
[12 190]
[13 189]
[14 188]
[15 187]
[16 142]
[17 141]
[18 140]
[19 139]
[20 138]
[21 137]
[22 136]
[23 135]
[24 133]
[25 132]
[26 131]
[27 130]
[28 129]
[29 128]
[30 127]
[31 126]
[35 54]
[36 53]
[37 52]
[39 50]
[40 49]
[41 48]
[42 47]
[55 65]
[56 64]
[66 105]
[67 104]
[68 103]
[69 102]
[71 100]
[72 99]
[73 98]
[74 97]
[79 96]
[80 95]
[81 94]
[82 93]
[83 92]
[84 91]
[85 90]
[107 118]
[108 117]
[109 116]
[110 115]
[146 166]
[147 165]
[149 163]
[150 162]
[151 161]
[152 160]
[153 159]
[170 184]
[171 183]
[172 182]
[173 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
