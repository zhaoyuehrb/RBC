%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:47:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCUGGACCCGGCGCGGAGCUGGCUGAGUCGGAGCGCAGCGUCCUUUGUGCCCGGCGGCCGCCCCGGGAUGCGUCCGAGCUAGGAGCCAGAUCCAGGAUGGGGGCCCCGUUUGUCUGGGCCUUGGGCCUUUUGAUGCUGCAGAUGCUGCUCUUUGUGGCUGGGGAACAGGGCACACAGGAUAUCACCGAUGCCAGCG\
) } def
/len { sequence length } bind def

/coor [
[36.22403336 404.54302979]
[33.18222427 419.23138428]
[30.14041519 433.91970825]
[39.02572250 446.98980713]
[35.98461151 462.49874878]
[22.82132530 471.24536133]
[7.34540415 468.04046631]
[-1.26156008 454.78543091]
[2.10679054 439.34426880]
[15.45207405 430.87789917]
[18.49388313 416.18957520]
[21.53569221 401.50122070]
[23.99849510 386.70480347]
[25.87849426 371.82305908]
[27.75849152 356.94134521]
[29.63849068 342.05963135]
[31.40155220 327.16360474]
[33.04756546 312.25418091]
[34.69358063 297.34475708]
[26.71633530 291.11523438]
[23.04685593 280.63143921]
[10.50974464 288.86679077]
[-2.02736545 297.10214233]
[-14.56447601 305.33749390]
[-27.03652000 313.67102051]
[-39.44272995 322.10229492]
[-51.84893799 330.53353882]
[-53.24910355 346.10830688]
[-64.36936951 357.10256958]
[-79.95908356 358.32516479]
[-92.65726471 349.19882202]
[-96.46821594 334.03271484]
[-89.59252930 319.98782349]
[-75.27667999 313.69570923]
[-60.28018951 318.12731934]
[-47.87397766 309.69607544]
[-35.46776962 301.26483154]
[-31.69923210 294.89932251]
[-22.79981804 292.80038452]
[-10.26270771 284.56503296]
[2.27440262 276.32968140]
[14.81151295 268.09432983]
[24.46335030 256.61209106]
[30.42057037 242.84577942]
[36.37778854 229.07945251]
[42.33500671 215.31314087]
[48.29222488 201.54681396]
[46.24589157 186.79345703]
[58.82754135 177.20112610]
[64.78475952 163.43481445]
[70.74198151 149.66848755]
[76.69919586 135.90217590]
[82.65641785 122.13585663]
[88.61363220 108.36953735]
[77.85798645 88.59035492]
[70.22236633 75.67922211]
[62.58674240 62.76809311]
[55.51823807 56.96797562]
[54.93441772 49.59365082]
[47.50254059 36.56417847]
[40.07065964 23.53470421]
[32.63877869 10.50523186]
[19.08050156 2.35148025]
[19.49552727 -12.53734207]
[12.06364632 -25.56681442]
[4.42802525 -38.47794342]
[-3.40945339 -51.26754761]
[-17.21715736 -58.99140167]
[-17.27000427 -73.88591003]
[-25.10748291 -86.67551422]
[-32.94496155 -99.46511841]
[-40.78244019 -112.25472260]
[-48.91906357 -124.85612488]
[-57.35031509 -137.26232910]
[-64.76906586 -142.60716248]
[-65.81476593 -149.93028259]
[-74.05010986 -162.46739197]
[-82.28545380 -175.00450134]
[-97.81024933 -177.96359253]
[-106.62634277 -191.08044434]
[-103.50328827 -206.57308960]
[-90.29394531 -215.25001526]
[-74.83518219 -211.96333313]
[-66.29840851 -198.66299438]
[-69.74834442 -183.23985291]
[-61.51300049 -170.70274353]
[-53.27766037 -158.16561890]
[-44.94410706 -145.69358826]
[-36.51285553 -133.28736877]
[-33.12736130 -132.27233887]
[-30.06756020 -129.56193542]
[-28.12725449 -125.32819366]
[-27.99283791 -120.09220123]
[-20.15535927 -107.30259705]
[-12.31788063 -94.51299286]
[-4.48040247 -81.72338867]
[8.76671219 -74.91433716]
[9.38014889 -59.10502625]
[17.21762848 -46.31542206]
[21.57833290 -44.34793854]
[24.74516106 -39.61546707]
[25.09311867 -32.99869537]
[32.52499771 -19.96922112]
[45.55170059 -12.74742508]
[45.66825104 3.07335234]
[53.10013199 16.10282516]
[60.53201294 29.13229752]
[67.96389008 42.16176987]
[75.49787140 55.13247299]
[83.13349915 68.04360199]
[90.76911926 80.95473480]
[89.54883575 66.00444794]
[99.76358795 55.01996231]
[114.76299286 55.15277100]
[124.78163910 66.31640625]
[123.29682922 81.24273682]
[111.27568817 90.21380615]
[126.01000214 87.40308380]
[140.74430847 84.59236908]
[149.63879395 71.80464935]
[164.62152100 69.16407013]
[176.75784302 77.72241974]
[191.49215698 74.91169739]
[206.22647095 72.10097504]
[214.11303711 61.88747025]
[226.44958496 59.85364151]
[236.52888489 66.55213928]
[251.30552673 63.97320175]
[266.08218384 61.39426422]
[280.85879517 58.81533051]
[286.37796021 43.23358536]
[298.92831421 32.62011719]
[315.02536011 29.79775620]
[330.26187134 35.44316101]
[340.51452637 47.92765045]
[355.24884033 45.11693192]
[363.10043335 40.43103027]
[370.23654175 42.37968826]
[385.01318359 39.80075455]
[397.27758789 29.80601501]
[411.14562988 35.23991394]
[425.92227173 32.66097641]
[438.14916992 21.73237610]
[453.64041138 27.11323547]
[456.45989990 43.26818848]
[443.70721436 53.57840347]
[428.50119019 47.43761826]
[413.72454834 50.01655197]
[402.51705933 59.82682800]
[387.59213257 54.57739258]
[372.81549072 57.15633011]
[358.05953979 59.85124207]
[343.32525635 62.66196060]
[339.69171143 75.83181763]
[330.69369507 86.19983673]
[318.04516602 91.70402527]
[304.19326782 91.21727753]
[291.84490967 84.77761841]
[283.43774414 73.59196472]
[268.66110229 76.17090607]
[253.88446045 78.74983978]
[239.10783386 81.32878113]
[226.27665710 93.29516602]
[209.03718567 86.83528900]
[194.30287170 89.64600372]
[179.56857300 92.45672607]
[171.43502808 104.88175201]
[156.53239441 107.94211578]
[143.55502319 99.32667542]
[128.82072449 102.13739777]
[114.08641052 104.94811249]
[102.37995148 114.32675171]
[96.42273712 128.09307861]
[90.46551514 141.85939026]
[84.50830078 155.62571716]
[78.55107880 169.39202881]
[72.59386444 183.15835571]
[74.21409607 198.89637756]
[62.05854416 207.50404358]
[56.10132599 221.27035522]
[50.14410782 235.03668213]
[44.18688965 248.80299377]
[38.22967148 262.56930542]
[50.63400269 263.70031738]
[59.76238251 271.51290894]
[62.57882309 282.73959351]
[58.53710938 293.11416626]
[49.60299683 298.99078369]
[47.95698166 313.90020752]
[46.31096649 328.80960083]
[48.48103333 337.69195557]
[44.52021027 343.93963623]
[42.64021301 358.82135010]
[40.76021576 373.70306396]
[38.88021469 388.58477783]
[52.17560196 381.63980103]
[65.95934296 387.55661011]
[70.08270264 401.97872925]
[61.50971985 414.28744507]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 12]
[2 11]
[3 10]
[13 195]
[14 194]
[15 193]
[16 192]
[17 190]
[18 189]
[19 188]
[21 42]
[22 41]
[23 40]
[24 39]
[25 37]
[26 36]
[27 35]
[43 183]
[44 182]
[45 181]
[46 180]
[47 179]
[49 177]
[50 176]
[51 175]
[52 174]
[53 173]
[54 172]
[55 111]
[56 110]
[57 109]
[59 108]
[60 107]
[61 106]
[62 105]
[64 103]
[65 102]
[66 99]
[67 98]
[69 96]
[70 95]
[71 94]
[72 93]
[73 89]
[74 88]
[76 87]
[77 86]
[78 85]
[117 171]
[118 170]
[119 169]
[122 166]
[123 165]
[124 164]
[127 162]
[128 161]
[129 160]
[130 159]
[135 153]
[136 152]
[138 151]
[139 150]
[141 148]
[142 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
