%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:12:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUCACCCCAGGAUCGCUGGGAAAAGUCUUGGACUGAGGAGCUCCAAAAAGGAAGCUGUGGCGCUGCGUAGGGAAGGAGGGAAGAAAGUAGGUCUCCGAGAUGCUGCGGCUUGUGGUGCAGUCGGCCAAGAUUGACCCACCACUAGCCCCACUACCCAGGCCCUGCAUGUCCAUCGACUUCAGAGAUAUCAAGAAAAGAA\
) } def
/len { sequence length } bind def

/coor [
[97.04824066 424.58767700]
[109.97205353 416.69757080]
[106.71591949 402.05523682]
[103.45979309 387.41293335]
[96.00463104 386.59399414]
[81.09432220 384.95614624]
[73.63916779 384.13720703]
[67.28218842 397.72354126]
[60.92521286 411.30990601]
[54.56823730 424.89624023]
[48.21126175 438.48260498]
[52.30487061 453.99459839]
[42.61420822 466.78015137]
[26.57312012 467.03128052]
[16.48695755 454.55535889]
[20.09296227 438.92282104]
[34.62491608 432.12561035]
[40.98189163 418.53927612]
[47.33886719 404.95291138]
[53.69584274 391.36657715]
[60.05281448 377.78024292]
[58.70096970 355.94036865]
[69.36991882 339.85913086]
[85.20143890 334.44412231]
[85.90451813 319.46060181]
[86.60760498 304.47711182]
[87.31068420 289.49359131]
[88.01377106 274.51007080]
[79.13121796 259.37908936]
[89.19370270 243.96188354]
[89.66252136 228.96920776]
[90.13134003 213.97654724]
[90.60015869 198.98387146]
[91.06896973 183.99119568]
[91.42060852 168.99531555]
[91.65505219 153.99714661]
[84.11761475 141.15051270]
[92.06964874 127.47294617]
[92.30409241 112.47478485]
[81.49230194 102.07741547]
[66.51473999 102.89756775]
[51.53717804 103.71772766]
[36.55961609 104.53787994]
[21.58892250 105.47505951]
[6.62600899 106.52920532]
[-4.93620443 117.65101624]
[-20.82096100 115.40290070]
[-28.84283638 101.50940704]
[-22.84813309 86.62844086]
[-7.43547440 82.17540741]
[5.57186604 91.56629181]
[20.53478050 90.51214600]
[26.99137497 86.90322113]
[35.73945999 89.56031799]
[50.71702194 88.74016571]
[65.69458008 87.92000580]
[80.67214203 87.09985352]
[86.42214203 87.86764526]
[91.50070190 89.92694855]
[95.66925812 93.09490204]
[100.50472260 78.89566803]
[105.34018707 64.69643402]
[105.14492798 55.55580521]
[110.36377716 50.31408691]
[115.42057037 36.19216156]
[120.47737122 22.07023430]
[117.84530640 6.46950245]
[129.42028809 -2.90434027]
[134.47709656 -17.02626610]
[139.53388977 -31.14819336]
[144.59068298 -45.27011871]
[149.53697205 -59.43113327]
[154.37243652 -73.63037109]
[143.62387085 -74.16506195]
[132.71070862 -80.49041748]
[124.25439453 -92.51644135]
[117.89741516 -106.10279083]
[111.54044342 -119.68914032]
[105.18346405 -133.27548218]
[98.82649231 -146.86183167]
[83.56383514 -146.98071289]
[69.86802673 -153.71774292]
[60.45837402 -165.73527527]
[57.20317841 -180.64723206]
[60.74875259 -195.49282837]
[70.39112091 -207.32446289]
[84.21578979 -213.79293823]
[99.47785950 -213.61396790]
[113.14703369 -206.82304382]
[122.50928497 -194.76855469]
[125.70573425 -179.84388733]
[122.10173035 -165.01237488]
[112.41284180 -153.21881104]
[118.76981354 -139.63246155]
[125.12678528 -126.04611206]
[131.48376465 -112.45976257]
[137.84074402 -98.87341309]
[145.17439270 -97.30261230]
[146.10926819 -112.27345276]
[147.04414368 -127.24429321]
[145.69129944 -142.18316650]
[156.91835022 -152.13067627]
[171.58561707 -148.98880005]
[177.75279236 -135.31524658]
[170.39984131 -122.24172211]
[165.12077332 -108.20136261]
[159.84172058 -94.16101074]
[167.17538452 -92.59020996]
[178.53948975 -102.38086700]
[189.90361023 -112.17151642]
[201.26771545 -121.96217346]
[206.67262268 -136.83152771]
[221.36511230 -139.27691650]
[232.72921753 -149.06756592]
[244.09333801 -158.85823059]
[255.45744324 -168.64888000]
[266.82156372 -178.43954468]
[278.18566895 -188.23019409]
[289.31713867 -198.28456116]
[300.20986938 -208.59712219]
[311.10256958 -218.90968323]
[321.99526978 -229.22222900]
[332.88800049 -239.53479004]
[333.06961060 -255.33804321]
[344.43087769 -266.32427979]
[360.23132324 -265.97558594]
[371.09683228 -254.49880981]
[370.58108521 -238.70292664]
[358.99008179 -227.95936584]
[343.20056152 -228.64207458]
[332.30783081 -218.32952881]
[321.41513062 -208.01696777]
[310.52239990 -197.70440674]
[299.62969971 -187.39186096]
[299.17074585 -183.88821411]
[296.98706055 -180.43405151]
[293.12100220 -177.83982849]
[287.97631836 -176.86608887]
[276.61221313 -167.07542419]
[265.24810791 -157.28477478]
[253.88398743 -147.49411011]
[242.51988220 -137.70346069]
[231.15576172 -127.91280365]
[226.56370544 -113.74374390]
[211.05838013 -110.59806061]
[199.69425964 -100.80740356]
[188.33015442 -91.01675415]
[176.96603394 -81.22609711]
[168.57167053 -68.79490662]
[163.73620605 -54.59566879]
[164.55651855 -47.24454117]
[158.71261597 -40.21332169]
[153.65582275 -26.09139633]
[148.59901428 -11.96947002]
[143.54222107 2.15245652]
[146.53598022 16.74309349]
[134.59928894 27.12703133]
[129.54249573 41.24895859]
[124.48570251 55.37088394]
[119.53942108 69.53189850]
[114.70395660 83.73113251]
[109.86849213 97.93036652]
[107.30225372 112.70922089]
[107.06781769 127.70738983]
[114.58848572 141.62680054]
[106.65322113 154.23159790]
[106.41877747 169.22975159]
[109.41559601 177.86737061]
[106.06164551 184.46002197]
[105.59282684 199.45268250]
[105.12400818 214.44535828]
[104.65518951 229.43803406]
[104.18637085 244.43070984]
[112.43478394 254.35356140]
[111.73094940 266.83627319]
[102.99728394 275.21316528]
[102.29420471 290.19668579]
[101.59111786 305.18017578]
[100.88803101 320.16369629]
[100.18495178 335.14721680]
[116.08238983 343.02777100]
[124.35070038 361.77017212]
[118.10211182 384.15679932]
[121.35824585 398.79910278]
[124.61437225 413.44143677]
[139.66401672 415.11087036]
[153.35510254 421.57870483]
[164.20251465 432.14337158]
[171.02963257 445.65890503]
[173.09587097 460.65921021]
[170.17710876 475.51718140]
[162.58996582 488.62115479]
[151.15742493 498.54968262]
[137.11961365 504.22579956]
[121.99923706 505.03381348]
[107.43644714 500.88607788]
[95.01089478 492.23248291]
[86.07042694 480.01174927]
[81.58483887 465.54943848]
[82.04067993 450.41436768]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 185]
[3 184]
[4 183]
[7 21]
[8 20]
[9 19]
[10 18]
[11 17]
[24 180]
[25 179]
[26 178]
[27 177]
[28 176]
[30 173]
[31 172]
[32 171]
[33 170]
[34 169]
[35 167]
[36 166]
[38 164]
[39 163]
[40 57]
[41 56]
[42 55]
[43 54]
[44 52]
[45 51]
[60 162]
[61 161]
[62 160]
[64 159]
[65 158]
[66 157]
[68 155]
[69 154]
[70 153]
[71 152]
[72 150]
[73 149]
[76 97]
[77 96]
[78 95]
[79 94]
[80 93]
[108 148]
[109 147]
[110 146]
[111 145]
[113 143]
[114 142]
[115 141]
[116 140]
[117 139]
[118 138]
[119 134]
[120 133]
[121 132]
[122 131]
[123 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
