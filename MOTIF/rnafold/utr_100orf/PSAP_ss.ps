%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:03:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGGCGCUGAGUCAGGGCGCUGUUGAGCUCGGGCAGGCCCGGAUGGGGCGGGGUUAGCGCCUGCGCUCUGGACGGCUUUGGGGCAGGGCAGAUUUAUAUCUGCGGGGGAUCAGCUGACGCUCCGCAUUGCAGACUGCGGAGUCAGACGGCGCUAUGUACGCCCUCUUCCUCCUGGCCAGCCUCCUGGGCGCGGCUCUAGCCGGCCCGGUCCUUGGACUGAAAGAAUGCACCAGGGGCUCGGCAGUGUGGUGCC\
) } def
/len { sequence length } bind def

/coor [
[58.08015442 1175.61840820]
[41.69220734 1175.01245117]
[34.26323318 1160.39245605]
[43.43552399 1146.79833984]
[43.98979568 1131.80859375]
[44.54406738 1116.81884766]
[45.09834290 1101.82910156]
[45.65261459 1086.83935547]
[46.20688629 1071.84960938]
[36.09236526 1082.92639160]
[21.41825867 1086.03613281]
[7.68013144 1080.01416016]
[0.02301496 1067.11584473]
[1.31455648 1052.17150879]
[11.07106400 1040.77807617]
[25.63865280 1037.20239258]
[39.56164932 1042.78369141]
[47.62616730 1055.43298340]
[49.65274429 1040.57055664]
[51.67932510 1025.70800781]
[53.70590210 1010.84558105]
[55.73248291 995.98309326]
[57.75905991 981.12066650]
[59.78564072 966.25817871]
[61.81221771 951.39569092]
[63.83879852 936.53326416]
[65.86537933 921.67077637]
[67.89195251 906.80828857]
[69.91853333 891.94586182]
[71.94511414 877.08337402]
[73.97168732 862.22088623]
[75.81501770 847.33459473]
[77.47480774 832.42669678]
[79.04273224 817.50891113]
[80.51873779 802.58166504]
[81.99474335 787.65447998]
[82.82591248 772.67749023]
[83.01070404 757.67864990]
[83.10310364 742.67895508]
[83.10310364 727.67895508]
[73.52701569 712.95880127]
[82.90341949 697.09558105]
[82.71862030 682.09674072]
[82.53382874 667.09783936]
[82.34902954 652.09899902]
[74.45552063 639.46801758]
[82.02222443 625.57354736]
[81.83742523 610.57470703]
[81.65263367 595.57586670]
[81.46783447 580.57696533]
[73.04019165 571.92388916]
[72.74713135 559.44793701]
[81.28959656 549.80865479]
[81.28959656 534.80865479]
[81.28959656 519.80865479]
[81.28959656 504.80868530]
[81.28959656 489.80868530]
[81.28959656 474.80868530]
[73.55229950 462.08142090]
[81.28959656 448.28125000]
[81.28959656 433.28125000]
[81.28959656 418.28125000]
[78.15565491 411.61126709]
[81.38313293 403.09674072]
[81.56793213 388.09786987]
[81.75272369 373.09899902]
[81.93752289 358.10012817]
[82.12231445 343.10128784]
[82.30711365 328.10241699]
[74.72719574 315.28079224]
[82.63391876 301.57699585]
[82.81871033 286.57812500]
[83.00350952 271.57925415]
[79.95197296 264.87118530]
[83.28411102 256.39706421]
[83.65367126 241.40161133]
[84.02323151 226.40615845]
[84.39279175 211.41072083]
[82.26511383 208.63221741]
[81.36254120 204.69401550]
[82.21169281 200.17625427]
[85.06328583 195.87080383]
[85.98670197 180.89926147]
[79.04757690 167.71981812]
[87.61975098 154.42213440]
[88.54316711 139.45057678]
[89.46658325 124.47902679]
[90.38999176 109.50747681]
[85.23075867 95.42265320]
[74.85528564 84.58985901]
[64.47980499 73.75705719]
[54.10433197 62.92426300]
[43.72885513 52.09146500]
[33.35337830 41.25867081]
[17.46549797 37.19575500]
[13.30128574 21.33412552]
[25.14452744 9.99085999]
[40.81191254 14.83494091]
[44.18617630 30.88319206]
[54.56165314 41.71598816]
[64.93712616 52.54878616]
[75.31260681 63.38158417]
[85.68807983 74.21437836]
[96.06356049 85.04718018]
[110.56433105 81.20953369]
[114.22303772 66.66258240]
[117.88174438 52.11562729]
[121.54045105 37.56867218]
[125.19915771 23.02171898]
[128.85786438 8.47476482]
[119.57381439 3.05492759]
[112.83627319 -6.62071800]
[110.56829834 -19.25377464]
[114.00686646 -32.70442581]
[123.35144806 -44.35385513]
[124.45923615 -59.31289291]
[125.56702423 -74.27192688]
[126.67481232 -89.23096466]
[127.78260040 -104.19000244]
[125.27478027 -110.25849915]
[126.06867981 -115.85025024]
[129.10643005 -119.50247955]
[130.58242798 -134.42967224]
[132.05844116 -149.35688782]
[133.53443909 -164.28408813]
[135.01045227 -179.21128845]
[136.48645020 -194.13848877]
[124.80222321 -204.34919739]
[121.38401794 -219.48509216]
[127.54619598 -233.72613525]
[140.91929626 -241.59634399]
[156.36105347 -240.06945801]
[167.93383789 -229.73260498]
[171.18763733 -214.56050110]
[164.87133789 -200.38716125]
[151.41365051 -192.66249084]
[149.93765259 -177.73529053]
[148.46163940 -162.80809021]
[146.98564148 -147.88087463]
[145.50964355 -132.95367432]
[144.03363037 -118.02647400]
[142.74163818 -103.08221436]
[141.63385010 -88.12317657]
[140.52606201 -73.16413879]
[139.41827393 -58.20510483]
[138.31048584 -43.24606705]
[145.25276184 -40.40798187]
[159.13732910 -34.73181915]
[166.07962036 -31.89373589]
[175.76853943 -43.34470749]
[185.45745850 -54.79568481]
[195.14637756 -66.24665833]
[192.31607056 -81.62597656]
[200.07849121 -95.20091248]
[214.76844788 -100.56179810]
[229.44979858 -95.17739105]
[237.19046021 -81.59004211]
[234.33552551 -66.21527863]
[222.23301697 -56.31259155]
[206.59735107 -56.55773544]
[196.90843201 -45.10676193]
[187.21951294 -33.65578842]
[177.53059387 -22.20481491]
[166.86946106 5.64366865]
[143.40481567 12.13347054]
[139.74610901 26.68042374]
[136.08740234 41.22737885]
[132.42869568 55.77433395]
[128.76998901 70.32128906]
[125.11128998 84.86824036]
[119.74163818 105.60938263]
[105.36154175 110.43089294]
[104.43813324 125.40244293]
[103.51471710 140.37399292]
[102.59130096 155.34553528]
[109.46437836 169.59585571]
[100.95825195 181.82267761]
[100.03483582 196.79421997]
[99.38823700 211.78027344]
[99.01867676 226.77572632]
[98.64911652 241.77117920]
[98.27955627 256.76663208]
[98.00237274 271.76406860]
[97.81757355 286.76290894]
[97.63278198 301.76177979]
[105.19947815 315.65621948]
[97.30596924 328.28720093]
[97.12117767 343.28607178]
[96.93637848 358.28494263]
[96.75158691 373.28378296]
[96.56679535 388.28265381]
[96.38199615 403.28152466]
[96.28959656 418.28125000]
[96.28959656 433.28125000]
[96.28959656 448.28125000]
[104.02690125 462.08142090]
[96.28959656 474.80868530]
[96.28959656 489.80868530]
[96.28959656 504.80868530]
[96.28959656 519.80865479]
[96.28959656 534.80865479]
[96.28959656 549.80865479]
[105.86071777 565.55517578]
[96.46669769 580.39221191]
[96.65149689 595.39105225]
[96.83628845 610.38989258]
[97.02108765 625.38879395]
[104.92781067 639.09259033]
[97.34789276 651.91418457]
[97.53268433 666.91308594]
[97.71748352 681.91192627]
[97.90227509 696.91076660]
[106.56284332 706.44409180]
[106.42351532 718.92266846]
[98.10310364 727.67895508]
[98.10310364 742.67895508]
[101.22544861 751.23260498]
[98.00956726 757.86346436]
[97.82477570 772.86230469]
[108.35102844 762.17596436]
[123.27343750 760.65228271]
[135.74226379 768.99066162]
[140.03399658 783.36358643]
[134.17864990 797.17352295]
[120.86395264 804.08142090]
[106.20168304 800.91632080]
[96.92194366 789.13049316]
[95.44593811 804.05767822]
[93.96993256 818.98486328]
[96.23543549 827.80426025]
[92.38269043 834.08648682]
[90.72290039 848.99438477]
[93.00476837 855.15142822]
[92.00479126 860.71002197]
[88.83415985 864.24749756]
[86.80757904 879.10992432]
[84.78099823 893.97241211]
[82.75442505 908.83489990]
[80.72784424 923.69738770]
[78.70126343 938.55981445]
[76.67469025 953.42230225]
[74.64810944 968.28479004]
[72.62152863 983.14721680]
[70.59494781 998.00970459]
[68.56837463 1012.87219238]
[66.54179382 1027.73461914]
[64.51521301 1042.59716797]
[62.48863602 1057.45959473]
[61.19664383 1072.40380859]
[60.64236832 1087.39355469]
[60.08809662 1102.38330078]
[59.53382492 1117.37304688]
[58.97955322 1132.36291504]
[58.42527771 1147.35266113]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 254]
[5 253]
[6 252]
[7 251]
[8 250]
[9 249]
[18 248]
[19 247]
[20 246]
[21 245]
[22 244]
[23 243]
[24 242]
[25 241]
[26 240]
[27 239]
[28 238]
[29 237]
[30 236]
[31 235]
[32 232]
[33 231]
[34 229]
[35 228]
[36 227]
[37 219]
[38 218]
[39 216]
[40 215]
[42 212]
[43 211]
[44 210]
[45 209]
[47 207]
[48 206]
[49 205]
[50 204]
[53 202]
[54 201]
[55 200]
[56 199]
[57 198]
[58 197]
[60 195]
[61 194]
[62 193]
[64 192]
[65 191]
[66 190]
[67 189]
[68 188]
[69 187]
[71 185]
[72 184]
[73 183]
[75 182]
[76 181]
[77 180]
[78 179]
[82 178]
[83 177]
[85 175]
[86 174]
[87 173]
[88 172]
[89 104]
[90 103]
[91 102]
[92 101]
[93 100]
[94 99]
[105 170]
[106 169]
[107 168]
[108 167]
[109 166]
[110 165]
[115 146]
[116 145]
[117 144]
[118 143]
[119 142]
[122 141]
[123 140]
[124 139]
[125 138]
[126 137]
[127 136]
[149 163]
[150 162]
[151 161]
[152 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
