%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:05:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAUGCAUGAAGAUUCAGCUGUGAAGAUACUAUAAAAAGGGAAGAGAAGGACCGAGACAGAAGCAACAACGGAACUGUCAGUGCGGAGUAGGGCUAAACUCAGUUCCAUUGUUAAGCAAGGAAAAACAAACAAUACAUUGAAUUUGACAACCCACUGAAGUUGCAGAUAAUGAGGACUUACCAUUAUAUACCAUUAUUCAUCUGGACCUAUAUGUUCCAUACAGUUGACACCAUCCUAUUACAAGAAAAACCUAA\
CAGUUAUUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[258.20410156 676.55187988]
[271.02856445 668.70434570]
[265.40945435 654.79663086]
[259.79034424 640.88885498]
[254.17126465 626.98107910]
[243.18029785 621.98242188]
[238.37426758 610.47082520]
[242.82394409 598.38928223]
[237.36705017 584.41711426]
[229.21835327 597.01068115]
[214.30392456 598.61065674]
[203.66938782 588.03204346]
[205.19070435 573.10937500]
[217.74116516 564.89440918]
[232.02517700 569.47045898]
[227.38992310 555.20458984]
[222.75466919 540.93878174]
[218.11941528 526.67291260]
[213.48416138 512.40704346]
[208.84890747 498.14120483]
[204.21365356 483.87536621]
[199.57839966 469.60952759]
[194.94314575 455.34365845]
[187.66592407 453.52923584]
[191.80038452 467.94821167]
[181.38034058 478.73815918]
[166.82598877 475.10900879]
[162.69184875 460.68997192]
[173.11148071 449.90042114]
[165.83427429 448.08599854]
[155.04417419 458.50588989]
[155.01898193 474.31015015]
[143.76702881 485.40832520]
[127.96391296 485.21603394]
[116.98532867 473.84738159]
[117.34468079 458.04718018]
[128.82878113 447.18939209]
[144.62429810 447.71578979]
[155.41439819 437.29589844]
[160.29791260 423.11312866]
[158.21031189 408.25912476]
[156.12272644 393.40509033]
[154.03512573 378.55105591]
[138.89613342 372.85455322]
[128.64460754 360.22140503]
[126.15883636 344.04800415]
[132.21270752 328.74456787]
[145.23828125 318.53271484]
[142.97799683 303.70401001]
[140.71771240 288.87527466]
[131.15093994 277.45922852]
[136.72041321 262.65072632]
[134.46012878 247.82200623]
[130.36016846 241.70501709]
[132.26084900 232.80769348]
[130.17324829 217.95367432]
[128.08566284 203.09965515]
[118.63044739 195.59053040]
[116.75209808 183.25817871]
[123.99238586 172.61198425]
[122.07776642 157.73466492]
[120.16313934 142.85736084]
[64.23155975 103.62031555]
[51.24117661 96.12031555]
[38.16440964 88.77197266]
[25.00303078 81.57627106]
[11.84164906 74.38057709]
[-1.31973171 67.18488312]
[-14.48111248 59.98918533]
[-30.30141830 60.15796661]
[-37.75696564 47.26362228]
[-50.91834641 40.06792450]
[-64.07972717 32.87222672]
[-77.24111176 25.67653084]
[-90.40248871 18.48083496]
[-103.56387329 11.28513813]
[-116.72525024 4.08944178]
[-129.89143372 13.67737865]
[-145.86514282 16.54496956]
[-161.43199158 12.16685581]
[-173.48200989 1.47055340]
[-179.63090515 -13.35949707]
[-178.69181824 -29.32790565]
[-191.93601990 -36.36997986]
[-205.82312012 -29.44696045]
[-221.12167358 -32.04195023]
[-231.94906616 -43.15711975]
[-234.14196777 -58.51846313]
[-226.85714722 -72.21923065]
[-212.89576721 -78.99118805]
[-197.62626648 -76.23039246]
[-186.92007446 -64.99842072]
[-184.89395142 -49.61419296]
[-171.64973450 -42.57211685]
[-160.90045166 -51.31328583]
[-147.59132385 -55.31615829]
[-133.71746826 -53.94628143]
[-121.37178040 -47.37719727]
[-112.42923737 -36.56924820]
[-108.26212311 -23.12931442]
[-109.52955627 -9.07193947]
[-96.36817169 -1.87624276]
[-83.20679474 5.31945419]
[-70.04541016 12.51515102]
[-56.88402939 19.71084785]
[-43.72264862 26.90654373]
[-30.56126976 34.10224152]
[-15.68235302 33.41877747]
[-7.28541613 46.82780457]
[5.87596512 54.02349854]
[19.03734589 61.21919632]
[32.19872665 68.41489410]
[45.36010742 75.61058807]
[50.08261108 75.16284180]
[55.14160156 77.65260315]
[58.74117661 83.12993622]
[71.73155975 90.62993622]
[78.89096832 88.39546204]
[71.08652496 75.58567047]
[63.28208542 62.77587891]
[55.47764587 49.96609116]
[42.50610733 42.43354797]
[34.25955582 29.90380669]
[32.47150803 15.01075745]
[37.51782608 0.88508403]
[48.33772278 -9.50384426]
[62.65673447 -13.97216034]
[77.46485138 -11.58057594]
[89.64924622 -2.83182716]
[96.64862061 10.43500233]
[96.99163055 25.43107986]
[90.60798645 39.00178146]
[91.47525024 53.97668839]
[92.34251404 68.95159912]
[93.20977783 83.92650604]
[100.36918640 81.69202423]
[106.78744507 68.13452148]
[113.20570374 54.57701492]
[119.62395477 41.01950836]
[119.46900940 34.46709442]
[122.21372223 29.54177094]
[126.35253906 27.22386551]
[133.08453369 13.81937695]
[139.81651306 0.41488692]
[146.54850769 -12.98960304]
[153.28048706 -26.39409256]
[154.32748413 -35.43172836]
[160.16958618 -39.91469955]
[167.05708313 -53.23995209]
[173.94458008 -66.56520844]
[180.83207703 -79.89045715]
[173.74794006 -93.69606781]
[176.16476440 -109.02377319]
[187.15319824 -119.97976685]
[202.48799133 -122.35124969]
[216.27258301 -115.22632599]
[223.20652771 -101.34468842]
[220.62358093 -86.04409790]
[209.51693726 -75.20794678]
[194.15733337 -73.00296021]
[187.26983643 -59.67771149]
[180.38233948 -46.35245514]
[173.49484253 -33.02720261]
[166.68498230 -19.66210365]
[159.95298767 -6.25761509]
[153.22100830 7.14687443]
[146.48901367 20.55136490]
[139.75703430 33.95585251]
[133.18145752 47.43776321]
[126.76320648 60.99526978]
[120.34494781 74.55278015]
[113.92669678 88.11028290]
[119.55829620 93.06357574]
[136.45309448 107.92344666]
[149.08047485 99.82718658]
[153.89814758 84.52458191]
[168.91722107 78.88484192]
[182.61636353 87.23427582]
[184.48675537 103.16793060]
[173.09358215 114.46285248]
[157.17672729 112.45455933]
[144.54936218 120.55081940]
[159.51246643 119.49956512]
[173.24134827 113.45655060]
[188.24043274 113.29127502]
[202.09913635 119.03031921]
[212.59010315 129.75129700]
[218.02726746 143.73118591]
[217.53678894 158.72315979]
[211.19747925 172.31776428]
[200.02819824 182.33010864]
[185.82402039 187.15103149]
[170.86781311 186.00573730]
[157.56327820 179.07829285]
[148.04870605 167.48205566]
[143.85324097 153.08088684]
[135.04045105 140.94274902]
[136.95506287 155.82005310]
[138.86968994 170.69735718]
[150.37207031 185.09805298]
[142.93968201 201.01205444]
[145.02728271 215.86607361]
[147.11486816 230.72009277]
[149.28884888 245.56172180]
[151.54913330 260.39044189]
[161.27757263 272.86715698]
[155.54644775 286.61499023]
[157.80673218 301.44372559]
[160.06701660 316.27243042]
[173.32565308 320.66909790]
[183.35397339 330.29785156]
[188.23912048 343.24319458]
[187.08329773 356.96493530]
[180.16821289 368.79656982]
[168.88914490 376.46347046]
[170.97674561 391.31750488]
[173.06434631 406.17150879]
[175.15193176 421.02554321]
[196.12097168 424.34152222]
[209.20898438 450.70840454]
[213.84423828 464.97424316]
[218.47949219 479.24011230]
[223.11474609 493.50595093]
[227.75000000 507.77178955]
[232.38526917 522.03765869]
[237.02052307 536.30346680]
[241.65577698 550.56933594]
[246.29103088 564.83520508]
[251.33923340 578.96020508]
[256.79614258 592.93237305]
[271.44067383 604.12261963]
[268.07901001 621.36199951]
[273.69812012 635.26977539]
[279.31723022 649.17749023]
[284.93630981 663.08526611]
[299.61279297 659.82165527]
[314.62628174 659.01843262]
[329.56716919 660.69744873]
[344.02792358 664.81286621]
[357.61398315 671.25250244]
[369.95477295 679.84057617]
[380.71356201 690.34289551]
[389.59686279 702.47283936]
[396.36236572 715.89959717]
[400.82543945 730.25689697]
[402.86441040 745.15295410]
[402.42358398 760.18139648]
[399.51501465 774.93237305]
[394.21804810 789.00329590]
[386.67718506 802.01043701]
[377.09814453 813.59887695]
[365.74227905 823.45251465]
[352.91934204 831.30249023]
[338.97915649 836.93469238]
[324.30206299 840.19543457]
[309.28842163 840.99578857]
[294.34783936 839.31390381]
[279.88790894 835.19567871]
[266.30307007 828.75347900]
[253.96395874 820.16302490]
[243.20718384 809.65863037]
[234.32621765 797.52691650]
[227.56330872 784.09887695]
[223.10298157 769.74072266]
[221.06689453 754.84429932]
[221.51062012 739.81591797]
[224.42202759 725.06555176]
[229.72171021 710.99560547]
[237.26507568 697.98992920]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 235]
[3 234]
[4 233]
[5 232]
[8 230]
[9 229]
[15 228]
[16 227]
[17 226]
[18 225]
[19 224]
[20 223]
[21 222]
[22 221]
[23 220]
[30 39]
[31 38]
[40 218]
[41 217]
[42 216]
[43 215]
[48 209]
[49 208]
[50 207]
[52 205]
[53 204]
[55 203]
[56 202]
[57 201]
[60 199]
[61 198]
[62 197]
[63 117]
[64 116]
[65 113]
[66 112]
[67 111]
[68 110]
[69 109]
[71 107]
[72 106]
[73 105]
[74 104]
[75 103]
[76 102]
[77 101]
[83 94]
[84 93]
[136 172]
[137 171]
[138 170]
[139 169]
[142 168]
[143 167]
[144 166]
[145 165]
[146 164]
[148 163]
[149 162]
[150 161]
[151 160]
[174 182]
[175 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
