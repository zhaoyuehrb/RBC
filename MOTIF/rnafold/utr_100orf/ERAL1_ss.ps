%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:22:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUACUCGCUGGUUCGUCAGCCGCUCUGUUCAAUCGUAGGAGCGCUCCUGGUCGGUUCCCGCAGUGCCUUGCGGCUGUAAUGGCUGCCCCCAGCUGGCGCGGGGCUAGGCUUGUUCAAUCGGUGUUAAGAGUCUGGCAGGUGGGCCCUCAUGUCGCGAGGGAGCGGGUGAUCCCUUUUU\
) } def
/len { sequence length } bind def

/coor [
[117.12667084 242.95367432]
[129.69465637 234.29293823]
[127.33514404 219.47967529]
[124.97562408 204.66641235]
[122.61611176 189.85314941]
[120.25659180 175.03988647]
[117.89707184 160.22662354]
[115.53755951 145.41337585]
[113.17803955 130.60011292]
[102.78690338 130.90066528]
[93.53979492 127.99949646]
[86.32570648 122.63415527]
[81.69313812 115.75539398]
[67.84757233 121.52603149]
[54.00200653 127.29666901]
[40.20761490 133.18858337]
[26.46545410 139.20132446]
[12.72329426 145.21406555]
[-1.01886594 151.22680664]
[-12.19273853 167.98210144]
[-31.29258156 165.07841492]
[-44.81526184 171.56971741]
[-58.33794403 178.06101990]
[-71.86062622 184.55233765]
[-85.38330841 191.04364014]
[-98.90599060 197.53495789]
[-99.38970947 212.83280945]
[-106.93737793 226.14788818]
[-119.81460571 234.42047119]
[-135.06230164 235.74957275]
[-149.17663574 229.82980347]
[-158.91426086 218.02143860]
[-162.03753662 203.03799438]
[-157.82875061 188.32254028]
[-147.25506592 177.25657654]
[-132.74621582 172.38298035]
[-117.63623810 174.82168579]
[-105.39730072 184.01226807]
[-91.87461853 177.52096558]
[-78.35193634 171.02964783]
[-64.82925415 164.53834534]
[-51.30657196 158.04704285]
[-37.78388977 151.55572510]
[-35.26431274 141.61633301]
[-27.51678276 134.56831360]
[-16.94936943 132.93002319]
[-7.03160572 137.48464966]
[6.71055412 131.47190857]
[20.45271301 125.45916748]
[34.19487381 119.44642639]
[39.07667160 113.86839294]
[48.23136902 113.45110321]
[62.07693481 107.68046570]
[75.92250061 101.90982056]
[82.57908630 79.10084534]
[107.78556061 70.75621033]
[131.23350525 88.40275574]
[136.63768005 74.41008759]
[142.04185486 60.41741562]
[147.44604492 46.42474365]
[152.85021973 32.43207550]
[148.34841919 20.32475471]
[153.15946960 8.77039814]
[164.19335938 3.76830411]
[169.84228516 -10.12736797]
[175.49119568 -24.02304077]
[181.14012146 -37.91871262]
[162.72096252 -36.72305679]
[143.55033875 -47.34690857]
[129.70233154 -69.49992371]
[123.81040955 -83.29431152]
[117.91849518 -97.08870697]
[112.02657318 -110.88310242]
[106.13465881 -124.67749786]
[100.24274445 -138.47189331]
[85.95000458 -145.75866699]
[82.87696075 -161.50465393]
[93.38098907 -173.63087463]
[109.40428925 -172.83511353]
[118.65516663 -159.72782898]
[114.03713989 -144.36381531]
[119.92905426 -130.56941223]
[125.82096863 -116.77501678]
[131.71289062 -102.98062897]
[137.60479736 -89.18623352]
[143.49671936 -75.39183807]
[158.41363525 -76.96849060]
[161.29154968 -91.68981934]
[164.16947937 -106.41114807]
[167.04740906 -121.13247681]
[165.62101746 -130.18499756]
[170.10717773 -136.08590698]
[173.24302673 -150.75445557]
[167.68161011 -166.18179321]
[178.46667480 -178.53552246]
[194.50346375 -175.10717773]
[199.29469299 -159.42355347]
[187.91157532 -147.61862183]
[184.77574158 -132.95005798]
[181.76873779 -118.25455475]
[178.89080811 -103.53322601]
[176.01287842 -88.81189728]
[173.13496399 -74.09056854]
[179.22570801 -69.71418762]
[191.40722656 -60.96142197]
[197.49797058 -56.58504105]
[210.53201294 -64.00891876]
[223.56605530 -71.43279266]
[236.60008240 -78.85666656]
[249.63412476 -86.28054047]
[262.66815186 -93.70441437]
[264.29840088 -110.52610016]
[275.51455688 -122.94546509]
[291.75823975 -126.21006012]
[306.60119629 -119.22960663]
[319.50296021 -126.88108063]
[324.85076904 -142.00657654]
[340.05718994 -147.11972046]
[353.45715332 -138.29814148]
[354.77136230 -122.30900574]
[342.99166870 -111.41780853]
[327.15441895 -113.97933960]
[314.25268555 -106.32786560]
[314.24810791 -92.96106720]
[307.57937622 -81.25177002]
[295.89898682 -74.31787109]
[282.20947266 -74.06642914]
[270.09204102 -80.67037964]
[257.05798340 -73.24650574]
[244.02395630 -65.82263184]
[230.98992920 -58.39875412]
[217.95588684 -50.97488022]
[204.92185974 -43.55100632]
[195.03578186 -32.26979446]
[189.38687134 -18.37412071]
[183.73794556 -4.47844887]
[178.08903503 9.41722393]
[181.43841553 26.63100624]
[166.84289551 37.83625793]
[161.43872070 51.82892609]
[156.03453064 65.82159424]
[150.63035583 79.81427002]
[145.22616577 93.80693817]
[149.50953674 108.18235779]
[161.69104004 116.93511963]
[173.87254333 125.68788147]
[186.05406189 134.44064331]
[198.23556519 143.19340515]
[213.34280396 139.15542603]
[227.48924255 145.81971741]
[233.99533081 160.03958130]
[229.78912354 175.10084534]
[216.85665894 183.89204407]
[201.30424500 182.26223755]
[190.47525024 170.98097229]
[189.48280334 155.37492371]
[177.30130005 146.62216187]
[165.11978149 137.86940002]
[152.93827820 129.11663818]
[140.75677490 120.36386871]
[127.99130249 128.24060059]
[130.35081482 143.05384827]
[132.71032715 157.86711121]
[135.06985474 172.68037415]
[137.42936707 187.49363708]
[139.78887939 202.30690002]
[142.14840698 217.12014771]
[144.50791931 231.93341064]
[159.14471436 236.26086426]
[170.44863892 246.51679993]
[176.17527771 260.66488647]
[175.18762207 275.89599609]
[167.68174744 289.18603516]
[155.14796448 297.89620972]
[140.07485962 300.29711914]
[125.45521545 295.91204834]
[114.19176483 285.61169434]
[108.52088165 271.44116211]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 168]
[3 167]
[4 166]
[5 165]
[6 164]
[7 163]
[8 162]
[9 161]
[13 54]
[14 53]
[15 52]
[16 50]
[17 49]
[18 48]
[19 47]
[21 43]
[22 42]
[23 41]
[24 40]
[25 39]
[26 38]
[57 143]
[58 142]
[59 141]
[60 140]
[61 139]
[64 137]
[65 136]
[66 135]
[67 134]
[70 86]
[71 85]
[72 84]
[73 83]
[74 82]
[75 81]
[87 103]
[88 102]
[89 101]
[90 100]
[92 99]
[93 98]
[106 133]
[107 132]
[108 131]
[109 130]
[110 129]
[111 128]
[115 123]
[116 122]
[144 160]
[145 159]
[146 158]
[147 157]
[148 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
