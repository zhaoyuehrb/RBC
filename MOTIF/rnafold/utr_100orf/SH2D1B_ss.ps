%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:20:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAGAGGAAGAGGUAGCUCCACAGGAGGUACAGCUGCUUACACAUCUCUCCUCAGAGCUGUCCCUUGACUUGGGGGUGAAUUUCAGGCCAACAGGGCUUCCUGGGAUACAAGAGCGUUCUCCAUGGAUCUGCCUUACUACCAUGGACGUCUGACCAAGCAAGACUGUGAGACCUUGCUGCUCAAGGAAGGGGUGGAUGGCAACUUUCUUUUAAGAGACAGCG\
) } def
/len { sequence length } bind def

/coor [
[35.86272812 590.85894775]
[45.55193710 579.17633057]
[58.80901337 571.78613281]
[56.70281601 556.93475342]
[54.59662247 542.08337402]
[52.49042511 527.23199463]
[50.38423157 512.38055420]
[48.27803421 497.52917480]
[46.17183685 482.67779541]
[44.06564331 467.82638550]
[36.77970505 466.04730225]
[22.20783234 462.48913574]
[14.92189598 460.71005249]
[6.20800638 472.91940308]
[-2.50588250 485.12875366]
[-4.22493553 500.85629272]
[-17.91636276 506.72094727]
[-26.63025284 518.93029785]
[-35.34414291 531.13964844]
[-44.05802917 543.34899902]
[-48.33793640 559.75384521]
[-65.28646088 560.18249512]
[-70.39019775 544.01495361]
[-56.26737595 534.63507080]
[-47.55348969 522.42572021]
[-38.83959961 510.21640015]
[-30.12570953 498.00704956]
[-29.02993202 483.15280151]
[-14.71522903 476.41485596]
[-6.00133944 464.20553589]
[2.71254945 451.99618530]
[3.21311784 436.14587402]
[10.21308422 423.56384277]
[21.02624893 416.44522095]
[32.47930145 415.35610962]
[35.21110153 400.60696411]
[37.94290543 385.85781860]
[40.67470551 371.10867310]
[30.62765884 362.32403564]
[26.19564056 349.62088013]
[28.63650131 336.27999878]
[37.41822815 325.80310059]
[50.33039856 320.99371338]
[53.26970291 306.28451538]
[56.20901108 291.57531738]
[59.14831924 276.86611938]
[62.08762741 262.15692139]
[65.02693176 247.44773865]
[67.96623993 232.73854065]
[70.80186462 218.00900269]
[73.53366852 203.25985718]
[76.26546478 188.51071167]
[69.67513275 178.37358093]
[71.82421875 166.06809998]
[82.09843445 158.27992249]
[85.03774261 143.57072449]
[87.97705078 128.86152649]
[90.91635895 114.15232849]
[86.54312897 99.80398560]
[75.89923859 89.23480988]
[65.25534821 78.66562653]
[54.61145401 68.09645081]
[43.96756363 57.52726746]
[33.32367325 46.95808792]
[17.74725342 46.84424973]
[7.10339594 35.97397232]
[7.30791378 21.12494087]
[-3.33597803 10.55576134]
[-14.20082283 0.21384878]
[-25.28176880 -9.89617825]
[-36.36271286 -20.00620461]
[-47.44366074 -30.11623192]
[-63.01097870 -29.57184792]
[-74.10461426 -39.98270416]
[-74.52766418 -54.82711792]
[-85.60860443 -64.93714905]
[-96.68955231 -75.04717255]
[-111.57170105 -70.98203278]
[-126.28226471 -75.62991333]
[-136.12716675 -87.50768280]
[-137.96493530 -102.82519531]
[-131.20913696 -116.69468689]
[-118.01551819 -124.69045258]
[-102.59413147 -124.26107025]
[-89.86587524 -115.54355621]
[-83.89228821 -101.31964111]
[-86.57952881 -86.12812042]
[-75.49858093 -76.01808929]
[-64.41763306 -65.90806580]
[-49.59672928 -66.84420776]
[-38.21505356 -56.74905396]
[-37.33363342 -41.19717789]
[-26.25268745 -31.08715057]
[-15.17174149 -20.97712326]
[-4.09079552 -10.86709690]
[-0.57923037 -10.65916824]
[3.00705600 -8.74542999]
[5.86985207 -5.10876846]
[7.23320198 -0.08813072]
[17.87709427 10.48104954]
[32.72431564 10.17194176]
[43.66930008 20.73896599]
[43.89285278 36.31419754]
[54.53674316 46.88337708]
[65.18063354 57.45255661]
[75.82452393 68.02173615]
[86.46842194 78.59091949]
[97.11231232 89.16009521]
[94.58213806 79.00099182]
[92.21142578 68.80212402]
[90.00064087 58.56537247]
[97.83361053 45.77301025]
[105.66658783 32.98064804]
[107.47639465 24.03643990]
[113.70108795 20.06434631]
[121.71350098 7.38359928]
[121.92023468 2.18525457]
[123.89781189 -1.99925256]
[126.96565247 -4.66612101]
[130.34191895 -5.65363121]
[138.88294983 -17.98452187]
[147.42396545 -30.31541252]
[155.96499634 -42.64630508]
[164.50602722 -54.97719574]
[173.04705811 -67.30808258]
[181.58807373 -79.63897705]
[173.64227295 -92.63066864]
[171.67404175 -107.73185730]
[176.02441406 -122.32617950]
[185.93965149 -133.88507080]
[199.70187378 -140.40589905]
[214.92669678 -140.75886536]
[228.97633362 -134.88284302]
[239.41659546 -123.79587555]
[244.43862915 -109.41884613]
[243.17236328 -94.24266815]
[235.83717346 -80.89669800]
[223.70393372 -71.69321442]
[208.87477112 -68.22676849]
[193.91897583 -71.09794617]
[185.37794495 -58.76705933]
[176.83691406 -46.43616867]
[168.29588318 -34.10527802]
[159.75486755 -21.77438545]
[151.21383667 -9.44349575]
[142.67280579 2.88739514]
[134.39424133 15.39600658]
[126.38183594 28.07675362]
[118.45894623 40.81362152]
[110.62597656 53.60598373]
[102.79299927 66.39834595]
[106.43574524 72.95429230]
[116.65469360 61.97371292]
[130.25559998 68.29949188]
[128.44213867 83.18946838]
[113.72123718 86.06618500]
[117.36398315 92.62212372]
[132.36360168 92.72778320]
[147.36323547 92.83344269]
[162.36286926 92.93910217]
[177.36248779 93.04476166]
[192.36212158 93.15041351]
[200.06575012 79.86322021]
[213.38888550 72.22190857]
[228.74766541 72.28195190]
[242.01065063 80.02720642]
[249.61016846 93.37422180]
[249.50198364 108.73273468]
[241.71519470 121.97137451]
[228.34442139 129.52900696]
[212.98631287 129.37268066]
[199.77215576 121.54444122]
[192.25645447 108.15004730]
[177.25683594 108.04438782]
[162.25720215 107.93872833]
[147.25758362 107.83306885]
[132.25794983 107.72740936]
[117.25832367 107.62175751]
[105.62554932 117.09163666]
[102.68624878 131.80082703]
[99.74694061 146.51002502]
[96.80763245 161.21922302]
[103.11235809 178.52473450]
[91.01461029 191.24252319]
[88.28281403 205.99165344]
[85.55101013 220.74079895]
[87.06461334 229.73988342]
[82.67543793 235.67784119]
[79.73612976 250.38703918]
[76.79682159 265.09625244]
[73.85751343 279.80545044]
[70.91820526 294.51464844]
[67.97889709 309.22384644]
[65.03959656 323.93301392]
[76.67976379 336.21078491]
[78.68500519 352.84265137]
[70.46137238 367.24639893]
[55.42385101 373.84045410]
[52.69204712 388.58959961]
[49.96024704 403.33874512]
[47.22844696 418.08789062]
[65.26783752 435.37423706]
[58.91703796 465.72018433]
[61.02323532 480.57159424]
[63.12942886 495.42297363]
[65.23562622 510.27438354]
[67.34181976 525.12579346]
[69.44801331 539.97717285]
[71.55421448 554.82855225]
[73.66040802 569.67993164]
[88.44952393 573.09265137]
[101.00495911 581.62060547]
[109.62868500 594.11041260]
[113.15442657 608.87298584]
[111.10534668 623.91180420]
[103.75857544 637.19293213]
[92.10768890 646.92028809]
[77.72839355 651.77832031]
[62.56535339 651.10992432]
[48.66925430 645.00561523]
[37.91942596 634.29089355]
[31.76969719 620.41479492]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 210]
[4 209]
[5 208]
[6 207]
[7 206]
[8 205]
[9 204]
[10 203]
[13 31]
[14 30]
[15 29]
[17 27]
[18 26]
[19 25]
[20 24]
[35 201]
[36 200]
[37 199]
[38 198]
[43 194]
[44 193]
[45 192]
[46 191]
[47 190]
[48 189]
[49 188]
[50 186]
[51 185]
[52 184]
[55 182]
[56 181]
[57 180]
[58 179]
[59 108]
[60 107]
[61 106]
[62 105]
[63 104]
[64 103]
[67 100]
[68 99]
[69 95]
[70 94]
[71 93]
[72 92]
[75 89]
[76 88]
[77 87]
[111 151]
[112 150]
[113 149]
[115 148]
[116 147]
[120 146]
[121 145]
[122 144]
[123 143]
[124 142]
[125 141]
[126 140]
[157 178]
[158 177]
[159 176]
[160 175]
[161 174]
[162 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
