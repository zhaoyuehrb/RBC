%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:41:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUACUGAGUGGGGGCGCCGCGCCUGCGCAAAGCGGACCCGCGGACGGUGGCGUUAAGGGAACGCUGAGGUCCCGCGCUCCCCGACCGAGGUAUAUCUCCAUGAAUAACCUAAAUGAUCCCCCAAAUUGGAAUAUCCGGCCUAAUUCCAGGGCGGAUGGUGGUGAUGGAAGCAGGUGGAAUUAUGCCCUGUUGGUUCCAA\
) } def
/len { sequence length } bind def

/coor [
[275.73947144 154.80108643]
[264.91714478 165.18750000]
[251.13664246 171.11183167]
[236.15333557 171.81941223]
[221.87585449 167.22010803]
[210.12290955 157.89979553]
[202.39161682 145.04571533]
[199.66680908 130.29528809]
[202.29559326 115.52742767]
[209.94309998 102.62332916]
[221.63307190 93.22789001]
[206.73602295 94.98221588]
[191.83895874 96.73654938]
[176.94189453 98.49087524]
[162.04484558 100.24520874]
[147.14778137 101.99953461]
[132.25073242 103.75386810]
[117.35366821 105.50820160]
[108.26956940 121.53686523]
[85.87365723 124.09772491]
[73.50844574 132.58898926]
[61.14323807 141.08024597]
[53.29714203 159.64334106]
[33.97800827 160.33425903]
[21.88422775 169.20783997]
[9.79044724 178.08142090]
[-2.30333281 186.95500183]
[-6.15009928 202.53004456]
[-20.78519440 209.10223389]
[-34.98182678 201.62992859]
[-37.84955215 185.84526062]
[-27.18849945 173.85687256]
[-11.17691612 174.86122131]
[0.91686422 165.98764038]
[13.01064491 157.11405945]
[25.10442543 148.24047852]
[25.74280739 138.03227234]
[32.03013992 129.68801880]
[42.08049011 126.11229706]
[52.65197372 128.71504211]
[65.01718903 120.22377777]
[77.38240051 111.73251343]
[74.70075226 96.97416687]
[60.13878250 93.37567902]
[45.57681656 89.77719116]
[31.01484871 86.17869568]
[19.15050888 96.00435638]
[3.95309615 96.94884491]
[-8.73628521 88.85912323]
[-14.16393280 75.01431274]
[-28.72589874 71.41582489]
[-43.28786469 67.81733704]
[-57.84983063 64.21884918]
[-72.41179657 60.62035751]
[-86.97376251 57.02186966]
[-101.39595032 64.04897308]
[-115.81954193 57.02475739]
[-119.17999268 41.33760071]
[-108.89945984 29.02134514]
[-92.86428070 29.52396965]
[-83.37527466 42.45989990]
[-68.81330872 46.05839157]
[-54.25134277 49.65687943]
[-39.68937683 53.25537109]
[-25.12740898 56.85385895]
[-10.56544304 60.45235062]
[0.68620026 50.72925568]
[15.68308163 49.48124313]
[28.69129181 57.39577484]
[34.61333847 71.61672974]
[49.17530441 75.21521759]
[63.73727036 78.81371307]
[78.29924011 82.41220093]
[101.60546112 76.98598480]
[115.59934235 90.61113739]
[130.49639893 88.85681152]
[145.39344788 87.10247803]
[160.29051208 85.34815216]
[175.18757629 83.59381866]
[190.08462524 81.83949280]
[204.98168945 80.08515930]
[219.87873840 78.33083344]
[228.96377563 71.90779114]
[238.61143494 74.01118469]
[252.77244568 69.06490326]
[266.93347168 64.11862183]
[281.09448242 59.17234421]
[295.25549316 54.22605896]
[309.41650391 49.27977753]
[323.45767212 44.00288391]
[337.37127686 38.39828110]
[351.28488159 32.79367828]
[365.19848633 27.18907356]
[379.11209106 21.58446884]
[393.02569580 15.97986507]
[399.28186035 1.71458006]
[413.47204590 -3.77108097]
[427.03326416 2.28111386]
[440.94686890 -3.32349038]
[454.86047363 -8.92809486]
[468.77407837 -14.53269863]
[482.68768311 -20.13730240]
[482.90197754 -35.31062698]
[488.89300537 -49.20848083]
[499.71929932 -59.72537994]
[513.70935059 -65.28105164]
[528.71984863 -65.05783844]
[542.46386719 -59.12089157]
[552.85943604 -48.40349960]
[566.77301025 -54.00810242]
[570.62182617 -72.74828339]
[584.86883545 -85.29070282]
[603.64660645 -86.71052551]
[619.36511230 -76.61506653]
[633.00073242 -82.86566925]
[642.32147217 -95.64982605]
[657.11529541 -93.91984558]
[670.75091553 -100.17045593]
[684.38647461 -106.42105865]
[698.02209473 -112.67166901]
[711.60845947 -119.02864075]
[725.14471436 -125.49160004]
[738.68096924 -131.95455933]
[741.01855469 -135.63546753]
[744.09832764 -138.12596130]
[747.45330811 -139.33886719]
[750.63623047 -139.34820557]
[753.27093506 -138.36863708]
[767.18457031 -143.97323608]
[781.09814453 -149.57783508]
[795.01177979 -155.18244934]
[808.92535400 -160.78704834]
[822.83898926 -166.39164734]
[824.91290283 -181.60987854]
[834.33074951 -193.74246216]
[848.55920410 -199.52578735]
[863.77087402 -197.40417480]
[875.87384033 -187.94833374]
[881.61254883 -173.70182800]
[879.44329834 -158.49690247]
[869.94952393 -146.42359924]
[855.68511963 -140.72958374]
[840.48706055 -142.94651794]
[828.44360352 -152.47804260]
[814.52996826 -146.87344360]
[800.61639404 -141.26884460]
[786.70275879 -135.66423035]
[772.78918457 -130.05963135]
[758.87554932 -124.45502472]
[745.14392090 -118.41829681]
[731.60766602 -111.95534515]
[718.07141113 -105.49238586]
[713.38604736 -99.76883698]
[704.27270508 -99.03605652]
[690.63708496 -92.78544617]
[677.00146484 -86.53484344]
[663.36590576 -80.28423309]
[655.02044678 -67.94716644]
[639.25134277 -69.23005676]
[625.61572266 -62.97945404]
[625.52001953 -51.81053162]
[621.24017334 -41.43812561]
[613.36029053 -33.37800980]
[602.99328613 -28.82348442]
[591.62414551 -28.46880722]
[580.89703369 -32.40363312]
[572.37762451 -40.09449768]
[558.46398926 -34.48989105]
[558.39990234 -19.55921364]
[552.60864258 -5.75317287]
[541.94403076 4.81235933]
[528.00921631 10.50523853]
[512.91589355 10.42913151]
[498.96426392 4.56449604]
[488.29229736 -6.22369719]
[474.37869263 -0.61909324]
[460.46508789 4.98551083]
[446.55148315 10.59011459]
[432.63787842 16.19471931]
[427.05825806 29.95711708]
[413.02774048 35.83918762]
[398.63031006 29.89347076]
[384.71670532 35.49807358]
[370.80310059 41.10267639]
[356.88949585 46.70728302]
[342.97589111 52.31188583]
[329.06228638 57.91649246]
[327.35156250 61.00836182]
[324.05416870 63.42227173]
[319.50650024 64.41965485]
[314.36279297 63.44079208]
[300.20178223 68.38707733]
[286.04077148 73.33335876]
[271.87973022 78.27964020]
[257.71871948 83.22592163]
[243.55772400 88.17220306]
[258.18374634 91.50077057]
[270.70928955 99.75368500]
[279.53881836 111.87966156]
[283.54760742 126.33406067]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 82]
[12 81]
[13 80]
[14 79]
[15 78]
[16 77]
[17 76]
[18 75]
[20 42]
[21 41]
[22 40]
[24 36]
[25 35]
[26 34]
[27 33]
[43 73]
[44 72]
[45 71]
[46 70]
[50 66]
[51 65]
[52 64]
[53 63]
[54 62]
[55 61]
[84 196]
[85 195]
[86 194]
[87 193]
[88 192]
[89 191]
[90 187]
[91 186]
[92 185]
[93 184]
[94 183]
[95 182]
[98 179]
[99 178]
[100 177]
[101 176]
[102 175]
[109 168]
[110 167]
[114 160]
[115 159]
[117 157]
[118 156]
[119 155]
[120 154]
[121 152]
[122 151]
[123 150]
[128 149]
[129 148]
[130 147]
[131 146]
[132 145]
[133 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
