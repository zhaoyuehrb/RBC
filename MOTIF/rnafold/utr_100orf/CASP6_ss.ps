%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:01:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGAGGGCGGGGCCGGGCCCGGGAGCCUGUGGCUUCAGGAAGAGGAGGGCAAGGUGUCUGGCUGCGCGUUUGGCUGCAAUGAGCUCGGCCUCGGGGCUCCGCAGGGGGCACCCGGCAGGUGGGGAAGAAAACAUGACAGAAACAGAUGCCUUCUAUAAAAGAGAAAUGUUUGAUCCGG\
) } def
/len { sequence length } bind def

/coor [
[82.51804352 108.98587036]
[68.06965637 113.01628876]
[53.62127686 117.04670715]
[39.17289352 121.07711792]
[24.72451210 125.10753632]
[13.51080322 136.26832581]
[-0.82739836 132.23532104]
[-15.27578068 136.26573181]
[-29.72416306 140.29614258]
[-40.93787003 151.45693970]
[-55.27607346 147.42391968]
[-69.72445679 151.45434570]
[-84.17283630 155.48475647]
[-98.62121582 159.51516724]
[-113.06960297 163.54559326]
[-127.51798248 167.57600403]
[-141.96636963 171.60641479]
[-156.41474915 175.63684082]
[-170.82720947 179.79388428]
[-185.20262146 184.07725525]
[-188.72851562 195.46716309]
[-197.23731995 203.64723206]
[-208.52526855 206.65986633]
[-219.74552917 203.86546326]
[-228.12611389 196.07400513]
[-242.64300537 199.85023499]
[-257.15988159 203.62646484]
[-271.67678833 207.40269470]
[-275.34695435 216.14427185]
[-282.53305054 222.11508179]
[-291.52954102 224.06346130]
[-300.27606201 221.67335510]
[-306.82904053 215.60772705]
[-321.52453613 218.61473083]
[-336.22003174 221.62173462]
[-350.91555786 224.62872314]
[-360.91964722 237.17057800]
[-376.96203613 237.02468872]
[-386.73638916 224.30299377]
[-382.74462891 208.76448059]
[-368.04895020 202.32896423]
[-353.92254639 209.93322754]
[-339.22705078 206.92622375]
[-324.53152466 203.91921997]
[-309.83602905 200.91223145]
[-295.69259644 185.90255737]
[-275.45300293 192.88580322]
[-260.93612671 189.10957336]
[-246.41923523 185.33334351]
[-231.90234375 181.55711365]
[-223.62770081 165.25140381]
[-205.76449585 160.05474854]
[-189.48599243 169.70182800]
[-175.11056519 165.41845703]
[-169.58200073 160.48071289]
[-160.44515991 161.18846130]
[-145.99678040 157.15803528]
[-131.54840088 153.12762451]
[-117.10001373 149.09721375]
[-102.65163422 145.06678772]
[-88.20325470 141.03637695]
[-73.75486755 137.00595093]
[-59.30648804 132.97554016]
[-49.12622452 122.10302734]
[-33.75457764 125.84776306]
[-19.30619621 121.81735229]
[-4.85781479 117.78693390]
[5.32244825 106.91442108]
[20.69409561 110.65915680]
[35.14247894 106.62873840]
[49.59085846 102.59832001]
[64.03923798 98.56790924]
[78.48762512 94.53749084]
[100.45384216 79.91854095]
[108.88291931 67.51085663]
[117.31198883 55.10316849]
[114.55636597 39.77201462]
[123.28140259 27.30892754]
[137.91429138 24.77634621]
[146.34336853 12.36865902]
[154.77244568 -0.03902961]
[149.03765869 -21.05757523]
[160.49743652 -39.25423813]
[181.37533569 -43.06159592]
[188.68453979 -56.16027832]
[195.99375916 -69.25895691]
[195.96176147 -85.08013153]
[208.92007446 -92.42392731]
[216.22927856 -105.52260590]
[223.53849792 -118.62128448]
[230.84770203 -131.71997070]
[237.92591858 -144.94490051]
[244.77093506 -158.29202271]
[251.61595154 -171.63914490]
[258.46096802 -184.98628235]
[265.18859863 -198.39295959]
[271.79830933 -211.85815430]
[278.40805054 -225.32334900]
[285.01776123 -238.78854370]
[291.62750244 -252.25373840]
[289.98577881 -268.57049561]
[303.45187378 -277.92974854]
[318.17306519 -270.70349121]
[319.00543213 -254.32548523]
[305.09268188 -245.64401245]
[298.48297119 -232.17881775]
[291.87326050 -218.71362305]
[285.26351929 -205.24842834]
[278.65380859 -191.78323364]
[278.52853394 -184.37170410]
[271.80810547 -178.14125061]
[264.96307373 -164.79412842]
[258.11804199 -151.44700623]
[251.27304077 -138.09988403]
[251.86872864 -133.33464050]
[249.45692444 -128.14831543]
[243.94638062 -124.41075134]
[236.63717651 -111.31207275]
[229.32795715 -98.21339417]
[222.01875305 -85.11471558]
[222.57356262 -70.23044586]
[209.09243774 -61.94974518]
[201.78323364 -48.85106659]
[194.47401428 -35.75238419]
[199.52528381 -28.67841911]
[202.00251770 -20.30116653]
[201.60699463 -11.53068352]
[198.35365295 -3.32946277]
[192.57261658 3.39319539]
[184.87590027 7.88198519]
[176.09272766 9.62040329]
[167.18013000 8.39004326]
[158.75105286 20.79773140]
[150.32199097 33.20542145]
[153.35908508 47.74198151]
[144.98754883 60.44521713]
[129.71968079 63.53224182]
[121.29060364 75.93992615]
[112.86153412 88.34761810]
[114.56902313 103.25011444]
[125.58609772 113.42971039]
[136.60316467 123.60930634]
[147.62023926 133.78889465]
[158.63731384 143.96849060]
[172.82676697 138.45300293]
[187.94223022 139.64039612]
[200.98982239 147.24174500]
[209.40859985 159.70309448]
[211.57312012 174.52281189]
[207.10707092 188.75376892]
[218.12414551 198.93334961]
[229.14120483 209.11294556]
[244.92129517 208.23864746]
[256.64184570 218.84074402]
[257.34924316 234.62919617]
[246.62384033 246.23699951]
[230.82879639 246.77743530]
[219.33503723 235.92990112]
[218.96160889 220.13002014]
[207.94454956 209.95042419]
[196.92747498 199.77082825]
[183.09324646 205.34573364]
[168.14894104 204.35717773]
[155.06222534 196.94781494]
[146.45515442 184.54060364]
[144.07891846 169.56594849]
[148.45771790 154.98556519]
[137.44064331 144.80596924]
[126.42356873 134.62637329]
[115.40650177 124.44678497]
[104.38942719 114.26718903]
[112.59645081 126.82286072]
[112.33053589 141.82049561]
[103.68358612 154.07734680]
[89.64373779 159.35775757]
[75.06278992 155.83699036]
[64.97950745 144.73170471]
[62.87839127 129.87957764]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 73]
[2 72]
[3 71]
[4 70]
[5 69]
[7 67]
[8 66]
[9 65]
[11 63]
[12 62]
[13 61]
[14 60]
[15 59]
[16 58]
[17 57]
[18 56]
[19 54]
[20 53]
[25 50]
[26 49]
[27 48]
[28 47]
[33 45]
[34 44]
[35 43]
[36 42]
[74 139]
[75 138]
[76 137]
[79 134]
[80 133]
[81 132]
[84 124]
[85 123]
[86 122]
[88 120]
[89 119]
[90 118]
[91 117]
[92 114]
[93 113]
[94 112]
[95 111]
[96 109]
[97 108]
[98 107]
[99 106]
[100 105]
[140 171]
[141 170]
[142 169]
[143 168]
[144 167]
[150 161]
[151 160]
[152 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
