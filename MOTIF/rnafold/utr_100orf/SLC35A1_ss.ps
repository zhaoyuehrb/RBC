%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:35:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAAGGGGCGGUCCCCGGUGUCCUGCGCGGGGGCGCGGAGGGGGCGGGCGUCAGUUCCGCGGGGGGCUGUCGGGGAACCAUGGCUGCCCCGAGAGACAAUGUCACUUUAUUAUUCAAGUUAUACUGCUUGGCAGUGAUGACCCUGAUGGCUGCAGUCUAUACCAUAGCUUUAAGAUACA\
) } def
/len { sequence length } bind def

/coor [
[82.88066864 222.82960510]
[80.44670105 229.79681396]
[75.77960968 235.42546082]
[69.50189209 239.03933716]
[62.42532730 240.22601318]
[57.04980850 254.22972107]
[51.67428970 268.23342896]
[46.29877090 282.23715210]
[49.39719009 298.34091187]
[36.82467270 308.87011719]
[21.51475143 302.99319458]
[19.21695709 286.75582886]
[32.29506302 276.86160278]
[37.67058563 262.85791016]
[43.04610443 248.85420227]
[48.42162323 234.85049438]
[42.45444489 213.20764160]
[60.47842026 198.61763000]
[64.61298370 184.19869995]
[68.74754333 169.77976990]
[72.88210297 155.36085510]
[77.01666260 140.94192505]
[65.27754211 131.60420227]
[52.15824509 138.87634277]
[39.03894806 146.14849854]
[25.91965485 153.42063904]
[12.80035877 160.69277954]
[-0.31893688 167.96492004]
[-8.29672337 182.29277039]
[-24.69586372 182.27713013]
[-32.64632797 167.93411255]
[-23.96936035 154.01858521]
[-7.59108114 154.84562683]
[5.52821445 147.57348633]
[18.64751053 140.30134583]
[31.76680565 133.02919006]
[44.88610077 125.75704956]
[58.00539780 118.48490906]
[52.14817047 84.33264923]
[72.60341644 52.51683426]
[112.22869110 41.98638916]
[100.90805054 32.14550400]
[89.58740234 22.30462074]
[78.26676178 12.46373463]
[66.94611359 2.62284899]
[55.62547302 -7.21803617]
[44.30482864 -17.05892181]
[28.81358147 -20.27323532]
[24.28431320 -34.46249008]
[12.96366882 -44.30337524]
[1.64302540 -54.14426041]
[-11.27293587 -54.02830887]
[-20.50222397 -62.48126984]
[-21.45451164 -74.55788422]
[-32.60168457 -84.59484100]
[-43.74885559 -94.63180542]
[-54.89603043 -104.66876221]
[-66.04320526 -114.70571899]
[-81.47599030 -118.18990326]
[-85.75693512 -132.45603943]
[-96.90410614 -142.49301147]
[-108.05127716 -152.52996826]
[-123.51045990 -150.17460632]
[-136.83992004 -158.35137939]
[-141.74588013 -173.19946289]
[-135.91191101 -187.70803833]
[-122.09263611 -195.02661133]
[-106.81307983 -191.69956970]
[-97.28778839 -179.29783630]
[-98.01432037 -163.67713928]
[-86.86714935 -153.64018250]
[-75.71997833 -143.60322571]
[-61.08450317 -140.83694458]
[-56.00624084 -125.85289764]
[-44.85906982 -115.81593323]
[-33.71189880 -105.77897644]
[-22.56472588 -95.74201965]
[-11.41755295 -85.70505524]
[5.90987587 -83.00157928]
[11.48391056 -65.46490479]
[22.80455399 -55.62401962]
[34.12519836 -45.78313446]
[48.80671692 -43.27270889]
[54.14571381 -28.37956619]
[65.46636200 -18.53868103]
[76.78700256 -8.69779491]
[88.10764313 1.14309084]
[99.42829132 10.98397636]
[110.74893188 20.82486153]
[122.06958008 30.66574669]
[136.52403259 26.65717125]
[141.15928650 12.39132404]
[145.79454041 -1.87452400]
[142.70042419 -17.39022446]
[153.99197388 -27.10362244]
[158.62722778 -41.36946869]
[163.26248169 -55.63531876]
[162.40663147 -72.56764984]
[178.44032288 -78.07738495]
[188.17330933 -64.19554901]
[177.52833557 -51.00006485]
[172.89308167 -36.73421478]
[168.25782776 -22.46836853]
[171.68348694 -7.97305584]
[160.06039429 2.76073098]
[155.42514038 17.02657890]
[150.78988647 31.29242706]
[156.40704346 36.26207733]
[166.34634399 25.02774048]
[172.32775879 11.27191448]
[187.25866699 12.70997334]
[190.50471497 27.35453415]
[177.58068848 34.96704102]
[167.64138794 46.20137787]
[173.25856018 51.17102814]
[186.85316467 44.83175278]
[200.44778442 38.49248123]
[214.04240417 32.15320587]
[227.63702393 25.81393242]
[232.80621338 10.87890434]
[247.05833435 4.04865980]
[261.93789673 9.37546062]
[268.61706543 23.69901085]
[263.13323975 38.52140045]
[248.73988342 45.04877090]
[233.97628784 39.40855026]
[220.38168335 45.74782181]
[206.78706360 52.08709717]
[193.19244385 58.42637253]
[179.59782410 64.76564789]
[181.03550720 79.69658661]
[195.58995056 83.32541656]
[210.14437866 86.95424652]
[224.69882202 90.58307648]
[239.25325012 94.21189880]
[254.51531982 90.04299927]
[264.99273682 100.62947083]
[279.54714966 104.25830078]
[292.09103394 94.92099762]
[307.69900513 95.88285828]
[319.00146484 106.68972778]
[320.66174316 122.23892212]
[311.89590454 135.18859863]
[296.84289551 139.42430115]
[282.61032104 132.94607544]
[275.91833496 118.81273651]
[261.36389160 115.18390656]
[247.14285278 119.61237335]
[235.62443542 108.76633453]
[221.06999207 105.13751221]
[206.51556396 101.50868225]
[191.96112061 97.87985229]
[177.40667725 94.25102234]
[169.12762451 106.75930786]
[178.15486145 118.73884583]
[185.84112549 123.72721100]
[187.23292542 131.00714111]
[196.04969788 143.14239502]
[204.86647034 155.27764893]
[213.68325806 167.41290283]
[227.88485718 176.67308044]
[222.91796875 192.88314819]
[205.96641541 192.59776306]
[201.54800415 176.22969055]
[192.73121643 164.09443665]
[183.91444397 151.95918274]
[175.09767151 139.82392883]
[166.17532349 127.76606750]
[157.14810181 115.78653717]
[147.73930359 130.41955566]
[134.97325134 141.04763794]
[120.32595825 147.04164124]
[105.33360291 148.27021790]
[91.43559265 145.07647705]
[87.30102539 159.49540710]
[83.16646576 173.91433716]
[79.03190613 188.33326721]
[74.89734650 202.75218201]
[79.96916199 208.39193726]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 16]
[6 15]
[7 14]
[8 13]
[18 178]
[19 177]
[20 176]
[21 175]
[22 174]
[23 38]
[24 37]
[25 36]
[26 35]
[27 34]
[28 33]
[41 90]
[42 89]
[43 88]
[44 87]
[45 86]
[46 85]
[47 84]
[49 82]
[50 81]
[51 80]
[54 78]
[55 77]
[56 76]
[57 75]
[58 74]
[60 72]
[61 71]
[62 70]
[91 107]
[92 106]
[93 105]
[95 103]
[96 102]
[97 101]
[115 130]
[116 129]
[117 128]
[118 127]
[119 126]
[131 153]
[132 152]
[133 151]
[134 150]
[135 149]
[137 147]
[138 146]
[154 169]
[155 168]
[157 167]
[158 166]
[159 165]
[160 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
