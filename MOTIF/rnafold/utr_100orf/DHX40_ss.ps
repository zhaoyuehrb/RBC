%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:44:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACGUCAUCGAGCAGCUCCCCCUCCCCUUGCUACAAGUCGCACGCGCGGAAGUAAACACCUCUACGUCAUCAGGGCGCGUCCUCGUCUUUCCCCUCCCAUCUCCUCAGAUCGGUGGACGUGCUCGCCUCCACUCGGGGCCAGGUCUAUGUCCCGGUUUCCCGCAGUCGCGGGCAGGGCGCCAAGGCGGCAGGAGGAGGGUGAGCGGUCAAGAGACCUCCAGGAAGAGCGGCUCUCGGCUGUUUGCA\
) } def
/len { sequence length } bind def

/coor [
[177.21295166 489.56134033]
[175.12142944 504.61770630]
[167.42298889 517.72503662]
[155.29158020 526.88458252]
[140.57716370 530.69958496]
[125.52355957 528.58825684]
[112.42636108 520.87255859]
[103.28277588 508.72912598]
[99.48714447 494.00970459]
[101.61826324 478.95889282]
[109.35116577 465.87185669]
[121.50662994 456.74423218]
[136.23104858 452.96798706]
[138.31445312 438.11337280]
[140.39787292 423.25875854]
[194.69270325 382.42840576]
[189.66171265 368.29724121]
[184.63073730 354.16610718]
[179.59976196 340.03497314]
[168.04193115 330.63998413]
[170.70249939 315.04409790]
[165.67152405 300.91293335]
[160.64054871 286.78179932]
[155.60955811 272.65066528]
[150.57858276 258.51950073]
[145.54760742 244.38836670]
[133.98977661 234.99337769]
[136.65034485 219.39747620]
[131.61936951 205.26634216]
[126.58838654 191.13519287]
[121.55741119 177.00404358]
[116.52642822 162.87290955]
[111.49545288 148.74176025]
[104.56635284 145.87162781]
[106.52433777 160.74328613]
[94.62415314 169.87486267]
[80.76585388 164.13487244]
[78.80759430 149.26324463]
[90.70816040 140.13137817]
[83.77906799 137.26126099]
[70.22940063 143.69604492]
[56.67973328 150.13082886]
[47.81881332 163.92997742]
[31.45295525 162.88558960]
[24.41795158 148.07205200]
[33.95080948 134.72827148]
[50.24494171 136.58116150]
[63.79460907 130.14637756]
[77.34427643 123.71158600]
[73.58448792 109.19042969]
[58.61456680 110.13987732]
[45.33181000 118.73516083]
[32.14031601 111.81896210]
[17.17039490 112.76840210]
[2.20047283 113.71784973]
[-5.99330091 126.89516449]
[-20.38028336 132.70846558]
[-35.42838287 128.92239380]
[-45.35130310 116.99279785]
[-46.33347702 101.50684357]
[-37.99723434 88.41918182]
[-23.54803848 82.76230621]
[-8.54189301 86.71138763]
[1.25102949 98.74792480]
[16.22095108 97.79848480]
[31.19087219 96.84903717]
[43.40288162 88.32166290]
[57.66512299 95.16995239]
[72.63504791 94.22051239]
[75.85243988 87.44567871]
[62.30287170 81.01067352]
[68.73808289 67.46120453]
[82.28723145 73.89601135]
[85.50462341 67.12117767]
[76.78033447 54.91925812]
[68.05604553 42.71734238]
[59.33175659 30.51542473]
[50.60746765 18.31350708]
[41.88317871 6.11159086]
[33.15888977 -6.09032583]
[24.43459892 -18.29224205]
[15.71030998 -30.49415970]
[6.98602057 -42.69607544]
[-1.81537867 -54.84249115]
[-10.69353485 -66.93291473]
[-19.57168961 -79.02333832]
[-28.52624702 -91.05728912]
[-37.55684280 -103.03427887]
[-46.58744049 -115.01126862]
[-60.88386536 -110.06481171]
[-76.00914764 -109.78031921]
[-90.48147583 -114.18566132]
[-102.88298798 -122.84924316]
[-111.99871063 -134.92230225]
[-116.93558502 -149.22203064]
[-117.20994568 -164.34750366]
[-112.79490662 -178.81687927]
[-104.12301636 -191.21258545]
[-92.04385376 -200.32022095]
[-77.74081421 -205.24751282]
[-62.61516190 -205.51173401]
[-48.14875412 -201.08700562]
[-35.75886154 -192.40679932]
[-26.65932465 -180.32154846]
[-21.74161720 -166.01519775]
[-21.48752975 -150.88937378]
[-25.92195320 -136.42593384]
[-34.61045074 -124.04187012]
[-25.57985306 -112.06487274]
[-16.54925537 -100.08788300]
[-10.02875900 -96.64765167]
[-7.48126602 -87.90149689]
[1.39688957 -75.81107330]
[10.27504539 -63.72064590]
[16.75144005 -60.19808960]
[19.18793678 -51.42036438]
[27.91222572 -39.21844864]
[36.63651657 -27.01653290]
[45.36080551 -14.81461525]
[54.08509445 -2.61269855]
[62.80938339 9.58921814]
[71.53367615 21.79113579]
[80.25796509 33.99305344]
[88.98225403 46.19496918]
[97.70654297 58.39688492]
[112.41831970 55.47053146]
[115.80904388 40.85878754]
[119.19976044 26.24704552]
[122.59048462 11.63530350]
[125.98120880 -2.97643828]
[118.74940491 -17.29707336]
[125.56747437 -31.81924438]
[141.20516968 -35.40278625]
[153.66661072 -25.29871368]
[153.39242554 -9.25800323]
[140.59294128 0.41428268]
[137.20222473 15.02602482]
[133.81150818 29.63776779]
[130.42079163 44.24950790]
[127.03006744 58.86125183]
[133.04704285 63.33853149]
[146.81887817 57.39407349]
[145.08099365 72.29308319]
[151.09796143 76.77036285]
[164.11988831 69.32528687]
[177.14183044 61.88020325]
[190.16375732 54.43512344]
[194.42137146 39.45144272]
[207.73352051 32.08657837]
[221.99192810 36.23788834]
[235.01385498 28.79280663]
[247.98837280 21.26539612]
[260.91494751 13.65595913]
[273.84152222 6.04652262]
[273.85391235 -4.57996416]
[278.23071289 -14.17470932]
[286.12594604 -21.04397583]
[296.07928467 -24.00565529]
[306.28588867 -22.59232521]
[314.92367554 -17.12366295]
[328.13003540 -24.23647308]
[341.33639526 -31.34928513]
[354.54275513 -38.46209335]
[367.74911499 -45.57490540]
[375.89974976 -59.80512619]
[392.29748535 -59.59099960]
[400.07376099 -45.15279770]
[391.22900391 -31.34330559]
[374.86190796 -32.36854553]
[361.65557861 -25.25573540]
[348.44921875 -18.14292526]
[335.24285889 -11.03011417]
[322.03649902 -3.91730428]
[317.79409790 15.11696053]
[300.63638306 25.01426697]
[281.45095825 18.97310257]
[268.52438354 26.58254051]
[255.59780884 34.19197464]
[251.43812561 40.27877045]
[242.45893860 41.81473923]
[229.43701172 49.25982285]
[225.78125000 63.65325928]
[212.68122864 71.38912964]
[197.60884094 67.45705414]
[184.58691406 74.90213776]
[171.56497192 82.34722137]
[158.54304504 89.79229736]
[125.62659454 143.71078491]
[130.65757751 157.84191895]
[135.68855286 171.97306824]
[140.71952820 186.10421753]
[145.75050354 200.23536682]
[150.78149414 214.36650085]
[162.69917297 224.77224731]
[159.67875671 239.35737610]
[164.70973206 253.48852539]
[169.74070740 267.61965942]
[174.77168274 281.75082397]
[179.80265808 295.88195801]
[184.83364868 310.01312256]
[196.75132751 320.41885376]
[193.73091125 335.00399780]
[198.76188660 349.13513184]
[203.79286194 363.26626587]
[208.82383728 377.39743042]
[217.70199585 389.48785400]
[229.67898560 398.51843262]
[241.65597534 407.54904175]
[253.63296509 416.57965088]
[269.96655273 418.04464722]
[276.61819458 433.03424072]
[266.74523926 446.12838745]
[250.50416565 443.85699463]
[244.60237122 428.55664062]
[232.62538147 419.52603149]
[220.64839172 410.49542236]
[208.67140198 401.46484375]
[202.59819031 405.86553955]
[211.39959717 418.01196289]
[220.20098877 430.15835571]
[229.00239563 442.30477905]
[230.55145264 457.22457886]
[216.85597229 451.10617065]
[208.05458069 438.95974731]
[199.25317383 426.81335449]
[190.45178223 414.66693115]
[184.37857056 419.06762695]
[189.23014832 433.26138306]
[194.08171082 447.45510864]
[198.93328857 461.64886475]
[203.78485107 475.84259033]
[208.63642883 490.03634644]
[213.48799133 504.23007202]
[224.33232117 517.26220703]
[214.81146240 531.29040527]
[198.69587708 526.02502441]
[199.29425049 509.08163452]
[194.44268799 494.88790894]
[189.59111023 480.69415283]
[184.73954773 466.50042725]
[179.88796997 452.30667114]
[175.03640747 438.11294556]
[170.18482971 423.91918945]
[155.25248718 425.34216309]
[153.16906738 440.19677734]
[151.08564758 455.05139160]
[164.20310974 462.73257446]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 246]
[14 245]
[15 244]
[16 205]
[17 204]
[18 203]
[19 202]
[21 200]
[22 199]
[23 198]
[24 197]
[25 196]
[26 195]
[28 193]
[29 192]
[30 191]
[31 190]
[32 189]
[33 188]
[40 49]
[41 48]
[42 47]
[50 69]
[51 68]
[53 66]
[54 65]
[55 64]
[74 125]
[75 124]
[76 123]
[77 122]
[78 121]
[79 120]
[80 119]
[81 118]
[82 117]
[83 116]
[84 114]
[85 113]
[86 112]
[87 110]
[88 109]
[89 108]
[126 140]
[127 139]
[128 138]
[129 137]
[130 136]
[144 187]
[145 186]
[146 185]
[147 184]
[150 181]
[151 180]
[152 178]
[153 177]
[154 176]
[160 173]
[161 172]
[162 171]
[163 170]
[164 169]
[206 217]
[207 216]
[208 215]
[209 214]
[227 243]
[228 242]
[229 241]
[230 240]
[231 239]
[232 238]
[233 237]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
