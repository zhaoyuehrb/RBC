%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:10:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGCCGCUGGCGCCACUAGAGAAGGGCGAGCGGCGCGGCAGAGUGCGGCGCAGCGCAGCUCCUGAGGUUUUGGUUAUGAACAGGAUUCGGAUUCACGUCUUGCCAACCAAUCGGGGGAGGAUCACUCCAGUGCCCAGGUCUCAGGAACCUCUGUCUUGUGCAUUCACUCAUCGUC\
) } def
/len { sequence length } bind def

/coor [
[-165.16027832 527.01867676]
[-167.93383789 528.64196777]
[-170.72860718 529.11175537]
[-179.93067932 540.95751953]
[-189.13273621 552.80328369]
[-198.33480835 564.64904785]
[-207.53686523 576.49481201]
[-216.73893738 588.34057617]
[-219.09466553 603.98541260]
[-233.01275635 609.28973389]
[-242.21482849 621.13549805]
[-245.02143860 629.86285400]
[-251.68838501 633.10864258]
[-261.10040283 644.78826904]
[-256.13101196 659.39337158]
[-259.86874390 674.36108398]
[-271.12094116 684.91528320]
[-286.29705811 687.68817139]
[-300.55444336 681.79498291]
[-309.34362793 669.11608887]
[-309.86001587 653.69738770]
[-301.93884277 640.45886230]
[-288.10766602 633.62493896]
[-272.78002930 635.37622070]
[-263.36801147 623.69659424]
[-254.06057739 611.93347168]
[-244.85852051 600.08770752]
[-243.16098022 585.29016113]
[-228.58470154 579.13848877]
[-219.38262939 567.29272461]
[-210.18055725 555.44702148]
[-200.97850037 543.60125732]
[-191.77642822 531.75549316]
[-182.57437134 519.90972900]
[-173.80096436 507.74307251]
[-165.46740723 495.27102661]
[-157.13386536 482.79898071]
[-148.80030823 470.32693481]
[-150.84973145 458.38470459]
[-143.98144531 447.91909790]
[-131.43052673 444.85592651]
[-122.87569427 432.53460693]
[-114.32085419 420.21328735]
[-105.76601410 407.89199829]
[-97.21117401 395.57067871]
[-100.90789032 379.17913818]
[-91.43228912 364.89584351]
[-74.22901154 361.80947876]
[-65.89545441 349.33743286]
[-57.56190491 336.86538696]
[-49.22835159 324.39334106]
[-40.89479828 311.92129517]
[-32.56124496 299.44924927]
[-31.92368126 284.56829834]
[-17.82338524 277.39248657]
[-9.48983192 264.92044067]
[-1.15627837 252.44839478]
[7.17727518 239.97636414]
[6.67219067 219.36087036]
[25.96487427 210.08145142]
[33.61892319 197.18122864]
[41.27297592 184.28102112]
[48.92702484 171.38079834]
[56.58107376 158.48059082]
[64.23512268 145.58038330]
[71.88917542 132.68016052]
[79.54322815 119.77995300]
[71.58563232 101.53282928]
[77.53405762 82.53554535]
[94.47733307 72.08537292]
[95.54742432 57.12359619]
[96.61750793 42.16181183]
[97.68759918 27.20003128]
[98.75768280 12.23824978]
[99.82777405 -2.72353196]
[91.00640869 -8.82385731]
[85.56956482 -17.97489929]
[84.44773102 -28.47850990]
[87.77782440 -38.41789627]
[94.89049530 -46.00740051]
[104.44338226 -49.91327286]
[106.31275177 -64.79633331]
[108.18212891 -79.67938995]
[110.05149841 -94.56244659]
[111.92087555 -109.44551086]
[109.69298553 -115.72583771]
[110.82460785 -121.33666229]
[114.13179779 -124.82285309]
[116.53119659 -139.62969971]
[107.08524323 -152.30052185]
[109.44820404 -167.92715454]
[122.21817780 -177.23861694]
[137.81896973 -174.71057129]
[146.99488831 -161.84286499]
[144.30204773 -146.26968384]
[131.33804321 -137.23031616]
[128.93865967 -122.42345428]
[126.80393219 -107.57613373]
[124.93456268 -92.69307709]
[123.06518555 -77.81002045]
[121.19581604 -62.92695999]
[119.32643890 -48.04389954]
[132.38282776 -33.62236023]
[130.64791870 -13.94094849]
[114.78955841 -1.65344417]
[113.71946716 13.30833721]
[112.64938354 28.27011871]
[111.57929230 43.23189926]
[110.50920105 58.19368362]
[109.43911743 73.15546417]
[115.23334503 75.96520996]
[120.24744415 80.00582123]
[124.22462463 85.07038116]
[138.61701965 80.84439087]
[153.00941467 76.61840057]
[167.24180603 71.88140869]
[181.29605103 66.63945007]
[195.35029602 61.39748383]
[209.40454102 56.15552139]
[217.35017395 42.21829224]
[233.22238159 39.88317871]
[244.84535217 50.94147873]
[243.30294800 66.91021729]
[229.77836609 75.53953552]
[214.64649963 70.20977020]
[200.59225464 75.45172882]
[186.53800964 80.69369507]
[172.48376465 85.93565369]
[171.20028687 88.46234131]
[168.82238770 90.62413025]
[165.48718262 91.99552155]
[161.48526001 92.20970917]
[157.23539734 91.01079559]
[142.84300232 95.23678589]
[128.45060730 99.46277618]
[125.67540741 112.26781464]
[117.45674133 122.47194672]
[105.53704834 127.91177368]
[92.44344330 127.43399811]
[84.78939056 140.33421326]
[77.13533783 153.23443604]
[69.48129272 166.13464355]
[61.82723999 179.03485107]
[54.17318726 191.93507385]
[46.51913834 204.83528137]
[38.86508560 217.73550415]
[42.41291428 226.53372192]
[41.50830460 235.83856201]
[36.48260498 243.55746460]
[28.57943535 248.01367188]
[19.64931870 248.30990601]
[11.31576538 260.78195190]
[2.98221231 273.25399780]
[-5.35134125 285.72604370]
[-6.58497620 301.49908447]
[-20.08919907 307.78280640]
[-28.42275238 320.25485229]
[-36.75630569 332.72689819]
[-45.08985901 345.19894409]
[-53.42341232 357.67098999]
[-61.75696564 370.14303589]
[-57.62370300 382.98251343]
[-61.59204483 395.66998291]
[-71.99539948 403.62918091]
[-84.88986206 404.12551880]
[-93.44470215 416.44683838]
[-101.99954224 428.76812744]
[-110.55438232 441.08944702]
[-119.10922241 453.41076660]
[-120.20034790 471.77758789]
[-136.32826233 478.66049194]
[-144.66181946 491.13253784]
[-152.99537659 503.60458374]
[-161.32891846 516.07659912]
[-161.45471191 520.49053955]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 34]
[4 33]
[5 32]
[6 31]
[7 30]
[8 29]
[10 27]
[11 26]
[13 25]
[14 24]
[35 174]
[36 173]
[37 172]
[38 171]
[41 169]
[42 168]
[43 167]
[44 166]
[45 165]
[48 161]
[49 160]
[50 159]
[51 158]
[52 157]
[53 156]
[55 154]
[56 153]
[57 152]
[58 151]
[60 146]
[61 145]
[62 144]
[63 143]
[64 142]
[65 141]
[66 140]
[67 139]
[70 110]
[71 109]
[72 108]
[73 107]
[74 106]
[75 105]
[81 102]
[82 101]
[83 100]
[84 99]
[85 98]
[88 97]
[89 96]
[113 135]
[114 134]
[115 133]
[116 128]
[117 127]
[118 126]
[119 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
