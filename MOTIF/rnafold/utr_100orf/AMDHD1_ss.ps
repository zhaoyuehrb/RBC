%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:05:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCUCCCAGCCCCGGACAGCGCAGGCUGCGGCUUUUCGUCCUCCACUGAGUCCUGCCGGUGGCCCGAGCCCGGUGGCCUCCCGGCGACCCUCGGCGCGAGGCGACAUGGCAAGCGGCCACAGCCUCCUGCUGGAGAACGCGCAGCAAGUGGUGCUGGUGUGCGCCCGCGGCGAGCGCUUCCUGGCGCGGGAUGCGCUGCGCAGCC\
) } def
/len { sequence length } bind def

/coor [
[92.87935638 514.06701660]
[98.83113861 500.29833984]
[111.67901611 492.55679321]
[126.63318634 493.72842407]
[138.11860657 503.37652588]
[135.85081482 488.54895020]
[133.58302307 473.72137451]
[131.31524658 458.89376831]
[127.19524384 452.75518799]
[129.12733459 443.82412720]
[127.08483124 428.96383667]
[124.92961884 414.11947632]
[122.66183472 399.29190063]
[113.08928680 387.88070679]
[118.65126038 373.06936646]
[116.38347626 358.24179077]
[114.11568451 343.41421509]
[109.99568939 337.27560425]
[111.92777252 328.34457397]
[109.88527679 313.48428345]
[107.84277344 298.62399292]
[105.80027771 283.76370239]
[103.75777435 268.90341187]
[91.77146149 260.13619995]
[89.48838806 245.09486389]
[98.76550293 232.58195496]
[96.72300720 217.72166443]
[94.68050385 202.86137390]
[92.63800812 188.00108337]
[90.59550476 173.14079285]
[88.55300903 158.28050232]
[86.51050568 143.42021179]
[80.48327637 138.95675659]
[75.15133667 152.97711182]
[72.97859955 167.81892395]
[60.60102081 176.29214478]
[45.97862625 172.94766235]
[38.51508331 159.93629456]
[43.01019669 145.62567139]
[56.57300568 139.21896362]
[68.42881012 130.02984619]
[62.40157318 125.56638336]
[47.59162903 127.94662476]
[32.78168488 130.32685852]
[20.40907860 141.09025574]
[4.99150991 135.50181580]
[2.38925147 119.31045532]
[15.27928352 109.17245483]
[30.40144539 115.51691437]
[45.21139145 113.13668060]
[60.02133560 110.75643921]
[57.27817535 96.28319550]
[59.79191208 81.24765778]
[67.59973145 67.56033325]
[80.04633331 57.07999039]
[95.82823181 51.36425400]
[89.85221100 37.60608292]
[78.15992737 32.15573502]
[73.46656799 20.57098389]
[77.78322601 9.26874161]
[72.01669312 -4.57853699]
[66.25016022 -18.42581558]
[60.48362732 -32.27309418]
[54.71709824 -46.12037277]
[48.95056534 -59.96765137]
[32.44562531 -63.65984344]
[21.50138664 -76.33562469]
[20.28016090 -92.87110138]
[29.06562424 -106.73638153]
[23.08960915 -120.49455261]
[17.11359215 -134.25271606]
[2.68553567 -140.12374878]
[-3.17900443 -154.16162109]
[2.50703692 -167.88038635]
[-3.46897936 -181.63854980]
[-16.06372261 -191.21368408]
[-14.03754234 -205.96981812]
[-20.01355934 -219.72799683]
[-25.98957443 -233.48616028]
[-31.96559143 -247.24433899]
[-37.94160843 -261.00250244]
[-50.53635025 -270.57763672]
[-48.51016998 -285.33377075]
[-54.48618698 -299.09194946]
[-67.08093262 -308.66708374]
[-65.05474854 -323.42321777]
[-71.03076935 -337.18139648]
[-77.00678253 -350.93954468]
[-88.86287689 -363.05853271]
[-80.49962616 -377.80615234]
[-64.01316833 -373.85226440]
[-63.24861145 -356.91555786]
[-57.27259445 -343.15740967]
[-51.29658127 -329.39923096]
[-39.12928009 -320.80819702]
[-40.72801590 -305.06796265]
[-34.75199890 -291.30978394]
[-22.58470154 -282.71875000]
[-24.18343735 -266.97851562]
[-18.20742226 -253.22035217]
[-12.23140526 -239.46217346]
[-6.25538874 -225.70401001]
[-0.27937257 -211.94584656]
[11.88792610 -203.35479736]
[10.28919029 -187.61456299]
[16.26520729 -173.85639954]
[30.17239952 -168.64817810]
[36.42892075 -154.78056335]
[30.87176132 -140.22874451]
[36.84777832 -126.47056580]
[42.82379532 -112.71240234]
[56.07100296 -111.03909302]
[66.84748840 -102.97321320]
[72.27367401 -90.53641510]
[70.83386230 -76.93517303]
[62.79784393 -65.73418427]
[68.56437683 -51.88690186]
[74.33090973 -38.03962326]
[80.09743500 -24.19234657]
[85.86396790 -10.34506798]
[91.63050079 3.50220990]
[106.12700653 13.39014721]
[103.61038208 31.63006592]
[109.58639526 45.38823700]
[124.27265930 48.44007492]
[135.23519897 38.20177841]
[146.19773865 27.96348190]
[157.16027832 17.72518539]
[161.42285156 1.88970399]
[177.33564758 -2.07452011]
[188.52894592 9.91056633]
[183.48802185 25.51573372]
[167.39857483 28.68772507]
[156.43603516 38.92602158]
[145.47349548 49.16431808]
[134.51095581 59.40261459]
[137.65478516 66.21189880]
[143.94242859 79.83047485]
[147.08625793 86.63975525]
[161.98918152 84.93605804]
[176.89212036 83.23235321]
[191.79504395 81.52864838]
[206.69798279 79.82495117]
[221.60092163 78.12124634]
[234.43298340 68.86658478]
[247.95669556 75.10825348]
[262.85961914 73.40454865]
[270.37796021 59.83051682]
[284.45324707 53.29858017]
[299.67321777 56.32040405]
[310.18554688 67.73403168]
[311.94796753 83.15069580]
[304.28283691 96.64236450]
[290.13751221 103.02123260]
[274.95120239 99.83448029]
[264.56332397 88.30747986]
[249.66040039 90.01118469]
[237.89428711 99.14398193]
[223.30461121 93.02417755]
[208.40168762 94.72788239]
[193.49874878 96.43157959]
[178.59582520 98.13528442]
[163.69288635 99.83898926]
[148.78994751 101.54269409]
[131.91978455 131.87167358]
[101.37079620 141.37771606]
[103.41329193 156.23800659]
[105.45579529 171.09829712]
[107.49829865 185.95858765]
[109.54079437 200.81887817]
[111.58329773 215.67916870]
[113.62579346 230.53945923]
[125.93483734 240.08540344]
[127.79453278 255.18495178]
[118.61806488 266.86090088]
[120.66056061 281.72119141]
[122.70306396 296.58148193]
[124.74555969 311.44177246]
[126.78806305 326.30206299]
[128.94326782 341.14642334]
[131.21105957 355.97399902]
[133.47883606 370.80160522]
[143.21359253 383.27337646]
[137.48941040 397.02410889]
[139.75720215 411.85168457]
[144.14932251 419.86456299]
[141.94511414 426.92135620]
[143.98760986 441.78164673]
[146.14282227 456.62600708]
[148.41061401 471.45358276]
[150.67839050 486.28115845]
[152.94618225 501.10873413]
[156.10937500 515.77142334]
[160.15632629 530.21514893]
[164.20327759 544.65893555]
[168.25022888 559.10272217]
[178.34570312 572.72320557]
[168.05221558 586.19464111]
[152.25769043 580.03271484]
[153.80647278 563.14965820]
[149.75952148 548.70587158]
[145.71257019 534.26214600]
[141.66561890 519.81835938]
[135.17939758 533.34350586]
[122.03830719 540.57617188]
[107.14147186 538.82000732]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 192]
[6 191]
[7 190]
[8 189]
[10 188]
[11 187]
[12 185]
[13 184]
[15 182]
[16 181]
[17 180]
[19 179]
[20 178]
[21 177]
[22 176]
[23 175]
[26 172]
[27 171]
[28 170]
[29 169]
[30 168]
[31 167]
[32 166]
[42 51]
[43 50]
[44 49]
[56 124]
[57 123]
[60 121]
[61 120]
[62 119]
[63 118]
[64 117]
[65 116]
[69 111]
[70 110]
[71 109]
[74 106]
[75 105]
[77 103]
[78 102]
[79 101]
[80 100]
[81 99]
[83 97]
[84 96]
[86 94]
[87 93]
[88 92]
[125 136]
[126 135]
[127 134]
[128 133]
[139 164]
[140 163]
[141 162]
[142 161]
[143 160]
[144 159]
[146 157]
[147 156]
[193 203]
[194 202]
[195 201]
[196 200]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
