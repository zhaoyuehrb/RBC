%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:39:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCGUUUCCAUGGUGACCAGGCUGCGCGUCCUCCUUGCGGCAGCGCGUGGAGUGCGGCGUCCUGGAGCUGCGGAUGAGUGGACUUUUUUCUCUCUUUUGGGGACAGGAUAAAAAAUGUCAGUACUCACUUCUCCAAGAGGAAAGGUAGAAGUUGUUCAUUGCCGAAGAACAGAAUCACAGGAUGUUUAUUGUAUCAAAAGCCUUAUUAGAAAAU\
) } def
/len { sequence length } bind def

/coor [
[111.33042908 270.71820068]
[108.06897736 285.35934448]
[104.80752563 300.00048828]
[101.54607391 314.64163208]
[98.28461456 329.28277588]
[103.71359253 344.75720215]
[92.82304382 357.01803589]
[76.81623077 353.45236206]
[72.15959167 337.72824097]
[83.64347839 326.02130127]
[86.90493011 311.38018799]
[90.16638184 296.73904419]
[93.42784119 282.09790039]
[96.68929291 267.45675659]
[79.94985199 254.33422852]
[72.13443756 234.47444153]
[75.46369934 213.32022095]
[89.09309387 196.70912170]
[109.32552338 189.26257324]
[110.85710907 174.34097290]
[112.38870239 159.41937256]
[113.92029572 144.49775696]
[115.45188904 129.57615662]
[109.44932556 125.07958221]
[91.44161987 111.58985901]
[77.55218506 117.25408936]
[63.66274643 122.91831207]
[49.77330780 128.58255005]
[45.42815399 133.55915833]
[40.03227997 135.33068848]
[35.39432144 134.20280457]
[21.34530449 139.45877075]
[7.29628849 144.71472168]
[-6.75272799 149.97068787]
[-16.96685410 162.05299377]
[-31.59836197 159.26583862]
[-45.64737701 164.52180481]
[-59.69639587 169.77775574]
[-73.74540710 175.03372192]
[-83.75071716 188.02702332]
[-99.96791840 185.59091187]
[-105.71413422 170.23144531]
[-95.07816315 157.74914551]
[-79.00137329 160.98471069]
[-64.95235443 155.72874451]
[-50.90333939 150.47277832]
[-36.85432434 145.21682739]
[-27.64507675 133.51045227]
[-12.00868988 135.92167664]
[2.04032636 130.66571045]
[16.08934212 125.40974426]
[30.13835907 120.15378571]
[44.10907745 114.69310760]
[57.99851608 109.02887726]
[71.88795471 103.36464691]
[85.77739716 97.70041656]
[96.42266846 87.13263702]
[102.18822479 73.28495026]
[107.95378113 59.43726349]
[113.71932983 45.58957672]
[119.48488617 31.74189186]
[125.25044250 17.89420700]
[131.01599121 4.04652166]
[136.78155518 -9.80116367]
[142.44578552 -23.69060135]
[148.00837708 -37.62105179]
[144.95045471 -55.78095627]
[159.15153503 -66.09315491]
[164.50999451 -80.10339355]
[169.86846924 -94.11363983]
[174.71166992 -108.31023407]
[179.03315735 -122.67424011]
[183.35464478 -137.03825378]
[187.46578979 -151.46386719]
[191.36570740 -165.94801331]
[195.26564026 -180.43217468]
[199.16555786 -194.91632080]
[203.06549072 -209.40046692]
[197.31866455 -220.94541931]
[200.86297607 -232.92761230]
[211.27593994 -239.07991028]
[215.38708496 -253.50553894]
[219.49822998 -267.93115234]
[223.60937500 -282.35678101]
[227.72052002 -296.78237915]
[231.83166504 -311.20800781]
[235.94281006 -325.63363647]
[232.28408813 -341.02597046]
[243.21336365 -351.14529419]
[247.32450867 -365.57089233]
[251.43565369 -379.99652100]
[246.53947449 -397.74926758]
[259.61337280 -409.45761108]
[263.51330566 -423.94174194]
[267.41323853 -438.42590332]
[271.31317139 -452.91003418]
[275.21307373 -467.39419556]
[279.11300659 -481.87835693]
[283.01293945 -496.36248779]
[286.91287231 -510.84664917]
[290.81280518 -525.33081055]
[294.71270752 -539.81494141]
[298.61264038 -554.29907227]
[297.82199097 -563.39611816]
[302.67681885 -568.96557617]
[306.78796387 -583.39117432]
[293.91793823 -591.28204346]
[283.65493774 -602.35333252]
[276.76055908 -615.78350830]
[273.74639893 -630.57598877]
[274.83609009 -645.63305664]
[279.94882202 -659.83740234]
[288.70520020 -672.13488770]
[300.45538330 -681.61303711]
[314.32748413 -687.56848145]
[329.29208374 -689.55932617]
[344.23870850 -687.43774414]
[358.05822754 -681.36126709]
[369.72512817 -671.78076172]
[378.37365723 -659.40716553]
[383.36203003 -645.15869141]
[384.32006836 -630.09271240]
[381.17672729 -615.32714844]
[374.16519165 -601.95770264]
[363.80581665 -590.97656250]
[350.86730957 -583.19854736]
[336.30981445 -579.20080566]
[321.21359253 -579.28002930]
[317.10244751 -564.85443115]
[313.09680176 -550.39916992]
[309.19686890 -535.91503906]
[305.29693604 -521.43084717]
[301.39700317 -506.94671631]
[297.49710083 -492.46255493]
[293.59716797 -477.97842407]
[289.69723511 -463.49426270]
[285.79730225 -449.01013184]
[281.89739990 -434.52597046]
[277.99746704 -420.04180908]
[274.09753418 -405.55767822]
[279.85885620 -394.92340088]
[276.73052979 -382.82589722]
[265.86126709 -375.88537598]
[261.75012207 -361.45974731]
[257.63897705 -347.03414917]
[261.59176636 -332.67361450]
[250.36843872 -321.52249146]
[246.25729370 -307.09686279]
[242.14614868 -292.67123413]
[238.03500366 -278.24563599]
[233.92385864 -263.82000732]
[229.81271362 -249.39439392]
[225.70156860 -234.96876526]
[230.88467407 -218.20132446]
[217.54963684 -205.50054932]
[213.64971924 -191.01638794]
[209.74978638 -176.53224182]
[205.84985352 -162.04809570]
[201.94993591 -147.56394958]
[203.51258850 -143.05384827]
[202.26075745 -137.51429749]
[197.71864319 -132.71676636]
[193.39717102 -118.35275269]
[189.07568359 -103.98874664]
[203.31692505 -108.69902802]
[215.96035767 -100.62786865]
[217.68252563 -85.72705841]
[207.21348572 -74.98466492]
[192.27323914 -76.32227325]
[183.87870789 -88.75517273]
[178.52023315 -74.74493408]
[173.16177368 -60.73469162]
[177.80714417 -49.56771851]
[173.45994568 -37.85289001]
[161.93882751 -32.05844879]
[156.37623596 -18.12800026]
[156.81491089 -10.75265789]
[150.62922668 -4.03560925]
[144.86367798 9.81207561]
[139.09812927 23.65976143]
[133.33256531 37.50744629]
[127.56701660 51.35513306]
[121.80146790 65.20281982]
[116.03591156 79.05049896]
[110.27035522 92.89818573]
[121.96903992 83.50985718]
[133.30575562 73.68749237]
[147.44766235 68.68682861]
[162.43890381 69.19946289]
[176.20616150 75.15449524]
[186.84542847 85.72833252]
[192.88526917 99.45860291]
[193.49035645 114.44639587]
[188.57701111 128.61886597]
[178.82476807 140.01596069]
[165.58236694 147.06143188]
[150.68124390 148.78088379]
[136.18319702 144.93698120]
[130.37348938 131.10775757]
[128.84190369 146.02935791]
[127.31031036 160.95095825]
[125.77871704 175.87255859]
[124.24712372 190.79415894]
[132.63819885 194.36610413]
[140.02615356 199.69270325]
[146.05070496 206.50779724]
[150.41943359 214.47277832]
[152.92205811 223.19345093]
[153.44046021 232.23953247]
[151.95433044 241.16581726]
[148.54185486 249.53417969]
[143.37567139 256.93505859]
[136.71408081 263.00738525]
[128.88819885 267.45642090]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 14]
[2 13]
[3 12]
[4 11]
[5 10]
[19 203]
[20 202]
[21 201]
[22 200]
[23 199]
[25 56]
[26 55]
[27 54]
[28 53]
[31 52]
[32 51]
[33 50]
[34 49]
[36 47]
[37 46]
[38 45]
[39 44]
[57 185]
[58 184]
[59 183]
[60 182]
[61 181]
[62 180]
[63 179]
[64 178]
[65 176]
[66 175]
[68 172]
[69 171]
[70 170]
[71 164]
[72 163]
[73 162]
[74 159]
[75 158]
[76 157]
[77 156]
[78 155]
[81 153]
[82 152]
[83 151]
[84 150]
[85 149]
[86 148]
[87 147]
[89 145]
[90 144]
[91 143]
[93 140]
[94 139]
[95 138]
[96 137]
[97 136]
[98 135]
[99 134]
[100 133]
[101 132]
[102 131]
[103 130]
[105 129]
[106 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
