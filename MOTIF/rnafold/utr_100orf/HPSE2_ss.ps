%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:40:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACACUUUAGAUAAGGACAAUUAGUCACUAGCGAGACCCAGUAGGAAGAGAGGUUUAAAUCAGAGGGAUUGAAUGAGGGUGCUUUGUGCCUUCCCUGAAGCCAUGCCCUCCAGCAACUCCCGCCCCCCCGCGUGCCUAGCCCCGGGGGCUCUCUACUUGGCUCUGUUGCUCC\
) } def
/len { sequence length } bind def

/coor [
[110.75413513 346.06045532]
[118.97394562 358.60775757]
[123.58766174 372.88058472]
[124.26757050 387.86517334]
[120.96537781 402.49716187]
[113.91564178 415.73730469]
[103.61908722 426.64514160]
[90.80706787 434.44592285]
[76.38959503 438.58557129]
[61.39073181 438.77001953]
[46.87581635 434.98620605]
[33.87582397 427.50286865]
[23.31412888 416.85156250]
[15.94090652 403.78881836]
[12.27987003 389.24243164]
[12.59105587 374.24566650]
[16.85132790 359.86599731]
[6.14940691 370.37640381]
[-4.55251265 380.88684082]
[-6.13457012 396.85168457]
[-19.68054008 405.44738770]
[-34.79911804 400.08007812]
[-39.89262009 384.86706543]
[-31.05374908 371.47848511]
[-15.06293201 370.18490601]
[-4.36101198 359.67449951]
[6.34090805 349.16406250]
[6.88752317 343.54043579]
[10.38285732 338.31945801]
[16.48000336 335.04864502]
[23.02309608 321.55096436]
[29.56618881 308.05325317]
[36.10927963 294.55554199]
[42.53025818 280.99932861]
[48.82859421 267.38571167]
[55.12693024 253.77206421]
[55.08158875 246.35545349]
[61.66383743 239.97109985]
[68.20693207 226.47338867]
[66.79625702 211.64573669]
[79.77836609 202.60275269]
[86.32145691 189.10505676]
[92.86454773 175.60736084]
[99.40763855 162.10964966]
[105.95073700 148.61195374]
[112.37171173 135.05574036]
[118.67004395 121.44210052]
[102.95650482 126.99226379]
[87.63504791 122.73067474]
[78.01636505 111.03687286]
[76.91368866 96.69911194]
[63.53631210 89.91339874]
[49.78511429 97.10256958]
[34.43942642 94.80267334]
[23.39998245 83.89807129]
[20.91167259 68.58181000]
[27.93130302 54.74329758]
[41.75968170 47.70372772]
[57.07951736 50.16995621]
[68.00001526 61.19367218]
[70.32202911 76.53602600]
[83.69940186 83.32174683]
[93.23455811 76.35002136]
[105.56353760 74.72901154]
[117.74127197 79.44348907]
[126.57395172 89.89260101]
[130.32528687 75.36926270]
[134.07661438 60.84591675]
[137.82794189 46.32257080]
[141.44801331 31.76595497]
[144.93652344 17.17724991]
[148.42503357 2.58854651]
[138.51013184 -9.20131779]
[137.45100403 -24.39117050]
[145.44474792 -37.14123154]
[159.24821472 -42.67318726]
[162.73672485 -57.26189041]
[166.22523499 -71.85059357]
[169.71374512 -86.43930054]
[173.20225525 -101.02799988]
[176.69076538 -115.61670685]
[162.66540527 -110.29794312]
[149.66882324 -117.78720093]
[147.23785400 -132.58889771]
[157.15631104 -143.84164429]
[172.14610291 -143.28822327]
[181.20791626 -131.33415222]
[185.99743652 -145.54895020]
[190.78695679 -159.76374817]
[187.86109924 -175.31205750]
[199.25721741 -184.90257263]
[204.04673767 -199.11735535]
[208.83625793 -213.33215332]
[213.62577820 -227.54695129]
[212.95341492 -244.48756409]
[229.04583740 -249.82328796]
[238.62786865 -235.83683777]
[227.84057617 -222.75743103]
[223.05105591 -208.54263306]
[218.26153564 -194.32783508]
[213.47201538 -180.11303711]
[216.74044800 -165.58146667]
[205.00175476 -154.97422791]
[200.21223450 -140.75942993]
[195.42271423 -126.54463196]
[191.27947998 -112.12819672]
[187.79095459 -97.53948975]
[184.30244446 -82.95079041]
[180.81393433 -68.36208344]
[177.32542419 -53.77338028]
[173.83691406 -39.18467712]
[183.64462280 -28.00671768]
[185.00576782 -13.01967907]
[177.18960571 0.04787945]
[163.01373291 6.07705832]
[159.52522278 20.66576195]
[156.03671265 35.25446701]
[157.54447937 42.51633835]
[152.35128784 50.07390213]
[148.59996033 64.59724426]
[144.84863281 79.12059021]
[141.09729004 93.64393616]
[148.94631958 106.42645264]
[163.59562683 109.65101624]
[178.24493408 112.87557220]
[192.89424133 116.10012817]
[207.54354858 119.32468414]
[222.19285583 122.54924011]
[236.73834229 112.86059570]
[253.46527100 116.59875488]
[262.15335083 130.98039246]
[276.85848999 133.93994141]
[288.96231079 124.03884888]
[304.59796143 124.28605652]
[316.38272095 134.56481934]
[318.75222778 150.02185059]
[310.58767700 163.35877991]
[295.74407959 168.27833557]
[281.23016357 162.45765686]
[273.89895630 148.64508057]
[259.19381714 145.68553162]
[249.54957581 154.26083374]
[236.53175354 155.72682190]
[224.88032532 149.32376099]
[218.96830750 137.19854736]
[204.31900024 133.97398376]
[189.66969299 130.74943542]
[175.02038574 127.52487946]
[160.37106323 124.30032349]
[145.72175598 121.07576752]
[132.28367615 127.74044037]
[125.98534393 141.35406494]
[125.21558380 150.49154663]
[119.44843292 155.15504456]
[112.90534210 168.65274048]
[106.36225128 182.15045166]
[99.81916046 195.64814758]
[93.27606201 209.14584351]
[94.21872711 224.93894958]
[81.70462799 233.01647949]
[75.16153717 246.51419067]
[68.74056244 260.07040405]
[62.44222641 273.68405151]
[56.14389038 287.29766846]
[55.37413025 296.43515015]
[49.60698318 301.09863281]
[43.06388855 314.59634399]
[36.52079773 328.09405518]
[29.97770500 341.59173584]
[42.24657822 332.96188354]
[56.35918045 327.87911987]
[71.31311798 326.70449829]
[86.04624176 329.52145386]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 27]
[18 26]
[19 25]
[30 169]
[31 168]
[32 167]
[33 166]
[34 164]
[35 163]
[36 162]
[38 161]
[39 160]
[41 158]
[42 157]
[43 156]
[44 155]
[45 154]
[46 152]
[47 151]
[51 62]
[52 61]
[66 122]
[67 121]
[68 120]
[69 119]
[70 117]
[71 116]
[72 115]
[76 111]
[77 110]
[78 109]
[79 108]
[80 107]
[81 106]
[87 105]
[88 104]
[89 103]
[91 101]
[92 100]
[93 99]
[94 98]
[123 150]
[124 149]
[125 148]
[126 147]
[127 146]
[128 145]
[131 141]
[132 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
