%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:37:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGGGCUAGGUGCUCCUCCGAGCAGCUGGAGACUGGAGUGUCCCUGACGGAGGUUGCGGCUGGACCUGGUUACGUGCUGGUGCUGCGCUCCAGAGAGGCAGAAAACGAGUGGGAGCUGAGGUGUCUUAAAGCCGUUCCUCAGCCUGGGAGAAGAUCUCUGGCUUCAGGAUGGAGGUCAGGGGGUCGUUCCUGGCGGCCUGCAGGAGACGCAUGGCUACCUGGAGGAAGAAUCGUGACAAGGAUGGCUUCUCAAA\
UCCCGGGUACCGAG\
) } def
/len { sequence length } bind def

/coor [
[71.14812469 136.07058716]
[60.00095367 146.10754395]
[48.85377884 156.14451599]
[37.70660782 166.18147278]
[26.55943489 176.21842957]
[15.41226196 186.25538635]
[4.32367086 196.35702515]
[-6.70596409 206.52301025]
[-17.73559952 216.68898010]
[-28.76523399 226.85496521]
[-33.66880798 241.89709473]
[-48.27110291 244.83346558]
[-59.30073929 254.99945068]
[-70.33037567 265.16543579]
[-75.42628479 282.87747192]
[-92.70733643 286.01770020]
[-103.61794281 296.31130981]
[-114.52854919 306.60494995]
[-125.43915558 316.89855957]
[-136.34976196 327.19219971]
[-147.26036072 337.48580933]
[-148.40809631 350.30947876]
[-157.67758179 358.65765381]
[-169.75042725 358.47271729]
[-180.78005981 368.63870239]
[-191.80969238 378.80468750]
[-194.12060547 384.93801880]
[-198.51051331 388.47650146]
[-203.21626282 389.07519531]
[-214.47946167 398.98178101]
[-225.74266052 408.88836670]
[-230.99493408 423.81231689]
[-245.66159058 426.40811157]
[-256.92480469 436.31469727]
[-261.65805054 452.01593018]
[-277.68206787 455.50347900]
[-288.51269531 443.18969727]
[-283.00833130 427.74191284]
[-266.83135986 425.05148315]
[-255.56817627 415.14492798]
[-251.12153625 400.92956543]
[-235.64924622 397.62518311]
[-224.38604736 387.71859741]
[-213.12284851 377.81201172]
[-201.97567749 367.77505493]
[-190.94602966 357.60906982]
[-179.91639709 347.44308472]
[-175.57835388 330.42318726]
[-157.55398560 326.57522583]
[-146.64338684 316.28158569]
[-135.73277283 305.98797607]
[-124.82217407 295.69433594]
[-113.91156769 285.40072632]
[-103.00096130 275.10708618]
[-102.34326935 263.05075073]
[-93.36883545 254.38619995]
[-80.49635315 254.13578796]
[-69.46672058 243.96980286]
[-58.43708420 233.80383301]
[-54.32242203 219.48884583]
[-38.93121338 215.82533264]
[-27.90157890 205.65934753]
[-16.87194443 195.49337769]
[-5.84230900 185.32739258]
[-3.06376433 178.50779724]
[5.37530327 175.10821533]
[16.52247620 165.07125854]
[27.66964722 155.03430176]
[38.81682205 144.99732971]
[49.96399307 134.96037292]
[61.11116409 124.92341614]
[56.41641235 117.54144287]
[53.13619614 109.27253723]
[51.43807983 100.39023590]
[51.43627930 91.19966125]
[53.18576431 82.02700043]
[56.67840958 73.20796204]
[44.44139099 64.53297424]
[32.20437241 55.85799408]
[16.47144127 54.18900681]
[10.56324863 40.51631546]
[-1.67377043 31.84132957]
[-21.83029175 30.83853912]
[-29.05553818 12.88108635]
[-41.49110031 4.49319315]
[-53.92666626 -3.89470053]
[-66.36222839 -12.28259373]
[-75.19229889 -14.47460270]
[-78.89290619 -20.84112930]
[-91.23003387 -29.37314606]
[-103.56716156 -37.90516281]
[-119.94706726 -38.69935989]
[-127.20759583 -53.40366745]
[-117.87974548 -66.89155579]
[-101.55919647 -65.28784180]
[-95.03514099 -50.24229050]
[-82.69801331 -41.71027374]
[-70.36089325 -33.17825699]
[-57.97433472 -24.71815681]
[-45.53877258 -16.33026505]
[-33.10320663 -7.94237041]
[-20.66764450 0.44552290]
[-10.89652252 -2.39219236]
[-0.96173555 0.66302073]
[5.80606031 8.83824539]
[7.00121450 19.60430908]
[19.23823357 28.27929497]
[34.09589005 29.32778931]
[40.87935638 43.62097549]
[53.11637497 52.29595947]
[65.35339355 60.97094345]
[77.88571167 52.72830963]
[74.76703644 38.05609512]
[71.64836121 23.38388062]
[68.52968597 8.71166706]
[65.41101074 -5.96054697]
[62.29233551 -20.63276100]
[58.84808731 -24.46071815]
[57.34307480 -28.79140854]
[57.64750671 -32.81068420]
[59.33029556 -35.87112045]
[56.72557449 -50.64323807]
[54.12085342 -65.41535187]
[40.11568832 -72.09629822]
[32.74184036 -85.74935913]
[34.83470154 -101.12464905]
[45.58952332 -112.31005859]
[60.87086105 -115.00457001]
[74.80272675 -108.17208862]
[82.02803040 -94.43984222]
[79.76850128 -79.08815765]
[68.89296722 -68.02007294]
[71.49768829 -53.24795914]
[74.10241699 -38.47584534]
[76.96454620 -23.75143623]
[80.08322144 -9.07922268]
[83.20189667 5.59299183]
[86.32057190 20.26520538]
[89.43924713 34.93741989]
[92.55792236 49.60963440]
[118.09378052 54.08163834]
[137.34248352 70.20512390]
[145.66123962 93.03080750]
[160.66021729 93.20533752]
[175.65921021 93.37986755]
[190.65818787 93.55439758]
[205.65718079 93.72892761]
[220.65615845 93.90345001]
[235.65515137 94.07798004]
[250.65412903 94.25251007]
[259.18237305 77.12297821]
[274.76162720 66.16693878]
[293.58892822 63.95507812]
[311.11755371 70.93611908]
[322.02813721 60.64249420]
[332.93875122 50.34886932]
[343.84936523 40.05524445]
[354.75997925 29.76161957]
[365.67056274 19.46799469]
[376.52111816 9.11106968]
[387.31118774 -1.30880558]
[398.10128784 -11.72868156]
[408.89138794 -22.14855766]
[419.68148804 -32.56843185]
[430.47158813 -42.98830795]
[441.26168823 -53.40818405]
[441.28686523 -69.21245575]
[452.53881836 -80.31061554]
[468.34194946 -80.11833191]
[479.32052612 -68.74967957]
[478.96118164 -52.94947433]
[467.47708130 -42.09170532]
[451.68154907 -42.61808777]
[440.89147949 -32.19821167]
[430.10137939 -21.77833557]
[419.31127930 -11.35845947]
[408.52117920 -0.93858421]
[397.73107910 9.48129177]
[386.94097900 19.90116692]
[384.32186890 26.78356743]
[375.96420288 30.37859917]
[365.05358887 40.67222595]
[354.14297485 50.96585083]
[343.23239136 61.25947189]
[332.32177734 71.55310059]
[321.41116333 81.84672546]
[326.10787964 86.90255737]
[329.98065186 92.97961426]
[332.81692505 99.93618011]
[347.75198364 101.33042908]
[362.68704224 102.72467804]
[377.14666748 96.30359650]
[389.09967041 105.19039917]
[404.03472900 106.58464813]
[418.49432373 100.16356659]
[430.44732666 109.05036926]
[445.38238525 110.44461823]
[460.31744385 111.83885956]
[475.25250244 113.23310852]
[490.19543457 114.54045105]
[505.14569092 115.76082611]
[520.09594727 116.98120880]
[530.95947266 105.73317719]
[546.51684570 104.15103912]
[559.42230225 112.98182678]
[563.58233643 128.05590820]
[557.03265381 142.25578308]
[542.86590576 148.87667847]
[527.77111816 144.79241943]
[518.87561035 131.93148804]
[503.92532349 130.71110535]
[488.97503662 129.49072266]
[482.07742310 132.06948853]
[473.85824585 128.16816711]
[458.92318726 126.77392578]
[443.98812866 125.37967682]
[429.05307007 123.98542786]
[415.66171265 130.50624084]
[402.64047241 121.51970673]
[387.70541382 120.12545776]
[374.31405640 126.64626312]
[361.29281616 117.65973663]
[346.35775757 116.26548767]
[331.42269897 114.87123871]
[324.76879883 128.31466675]
[334.93478394 139.34429932]
[345.10076904 150.37393188]
[355.26672363 161.40357971]
[365.43270874 172.43321228]
[383.14474487 177.52911377]
[386.28497314 194.81018066]
[396.57861328 205.72077942]
[406.87222290 216.63137817]
[422.24462891 214.51727295]
[435.90786743 221.87223816]
[442.60815430 235.86814880]
[439.76910400 251.12329102]
[428.48239136 261.77175903]
[413.08798218 263.71899414]
[399.50534058 256.21624756]
[392.95727539 242.14845276]
[395.96163940 226.92500305]
[385.66799927 216.01440430]
[375.37438965 205.10380554]
[363.31805420 204.44610596]
[354.65347290 195.47166443]
[354.40307617 182.59918213]
[344.23709106 171.56954956]
[334.07110596 160.53991699]
[323.90515137 149.51028442]
[313.73916626 138.48065186]
[297.54498291 144.30822754]
[280.74453735 143.40463257]
[265.96350098 136.21066284]
[255.39599609 124.12687683]
[250.47959900 109.25149536]
[235.48062134 109.07696533]
[220.48162842 108.90243530]
[205.48265076 108.72791290]
[190.48365784 108.55338287]
[175.48468018 108.37885284]
[160.48568726 108.20432281]
[145.48670959 108.02979279]
[141.91610718 119.40509796]
[135.55282593 129.48753357]
[126.82082367 137.60533142]
[116.30187225 143.21766663]
[104.69679260 145.95060730]
[92.77879333 145.62205505]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 71]
[2 70]
[3 69]
[4 68]
[5 67]
[6 66]
[7 64]
[8 63]
[9 62]
[10 61]
[12 59]
[13 58]
[14 57]
[16 54]
[17 53]
[18 52]
[19 51]
[20 50]
[21 49]
[24 47]
[25 46]
[26 45]
[29 44]
[30 43]
[31 42]
[33 40]
[34 39]
[77 111]
[78 110]
[79 109]
[81 107]
[82 106]
[84 102]
[85 101]
[86 100]
[87 99]
[89 98]
[90 97]
[91 96]
[112 140]
[113 139]
[114 138]
[115 137]
[116 136]
[117 135]
[121 134]
[122 133]
[123 132]
[143 263]
[144 262]
[145 261]
[146 260]
[147 259]
[148 258]
[149 257]
[150 256]
[154 186]
[155 185]
[156 184]
[157 183]
[158 182]
[159 181]
[160 179]
[161 178]
[162 177]
[163 176]
[164 175]
[165 174]
[166 173]
[189 224]
[190 223]
[191 222]
[193 220]
[194 219]
[196 217]
[197 216]
[198 215]
[199 214]
[200 212]
[201 211]
[202 210]
[225 251]
[226 250]
[227 249]
[228 248]
[229 247]
[231 244]
[232 243]
[233 242]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
