%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:52:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGCUCGCGGAUCCCGAGUAGAGAACGCAAGCACCCACGCCCGCCUGCAAGCUCCCGGGCGCCCCCGGCCUCUCCUGCUCGGCGGAACGAGGAUAACCCAGUAGAGCCGGACCCAGGGAUAUUAUUGAUAAUAAGGCCUCUGUAACCAUGGCUAGUUCUGACGUAAAACCAAAAUCAGUAAGUCAUGCCAAAAAAUGGUCAGAAGAGAUAGAAAAUCUGUACAGAUUUCAACAAGCAGGAUAUCGGG\
) } def
/len { sequence length } bind def

/coor [
[61.99946213 302.25457764]
[48.23666382 315.15652466]
[29.62508583 317.11138916]
[22.87431335 330.50643921]
[16.12354088 343.90148926]
[9.37276840 357.29650879]
[10.07140923 373.10229492]
[-2.56594801 380.98559570]
[-9.31672001 394.38064575]
[-16.06749344 407.77566528]
[-10.28769684 424.29922485]
[-18.10372925 439.58383179]
[-34.23531342 444.37820435]
[-40.81655121 457.85736084]
[-34.29728699 472.07119751]
[-38.48954773 487.13635254]
[-51.41387177 495.93951416]
[-66.96779633 494.32412720]
[-77.80722809 483.05288696]
[-78.81411743 467.44775391]
[-69.51304626 454.87698364]
[-54.29569626 451.27612305]
[-47.71445847 437.79699707]
[-53.56447601 426.33245850]
[-51.72331619 413.39755249]
[-42.64043427 403.73727417]
[-29.46253204 401.02490234]
[-22.71175957 387.62985229]
[-15.96098709 374.23483276]
[-17.14248848 359.38714600]
[-4.02227116 350.54574585]
[2.72850132 337.15069580]
[9.47927380 323.75567627]
[16.23004532 310.36062622]
[9.36337852 301.62158203]
[6.22826719 290.90551758]
[7.31178379 279.74145508]
[12.49618435 269.73730469]
[21.07038116 262.34802246]
[31.82725716 258.66424561]
[43.23353958 259.25137329]
[50.48636246 246.12139893]
[57.73918915 232.99140930]
[64.99201202 219.86141968]
[71.91124725 206.55262756]
[78.49248505 193.07348633]
[85.07372284 179.59432983]
[91.65496063 166.11518860]
[98.23619080 152.63604736]
[77.10273743 145.27304077]
[61.68125916 130.22146606]
[54.39651489 110.82489777]
[55.97196198 90.99754333]
[65.41274261 74.43924713]
[53.24420547 65.66845703]
[41.07566452 56.89767838]
[28.90712357 48.12689209]
[16.68349648 39.43304825]
[4.40526915 30.81648827]
[-7.87295866 22.19992828]
[-15.63482952 25.11904716]
[-23.82553482 24.75230408]
[-31.12657356 21.23252487]
[-36.39168549 15.19414330]
[-38.82669449 7.66014004]
[-38.10873795 -0.13085495]
[-49.93666458 -9.35583115]
[-61.76458740 -18.58080864]
[-73.59251404 -27.80578423]
[-85.42044067 -37.03076172]
[-94.08853149 -39.83054352]
[-97.33842468 -46.44749832]
[-109.04901886 -55.82096863]
[-120.75962067 -65.19443512]
[-136.36853027 -67.77758026]
[-141.46975708 -81.77138519]
[-153.18035889 -91.14485168]
[-164.89096069 -100.51831818]
[-177.00392151 -109.36569214]
[-189.49565125 -117.66972351]
[-201.98736572 -125.97374725]
[-214.47909546 -134.27777100]
[-229.92094421 -130.91253662]
[-243.17424011 -139.52218628]
[-246.37602234 -154.99874878]
[-237.62673950 -168.16026306]
[-222.11718750 -171.19824219]
[-209.04890442 -162.31030273]
[-206.17506409 -146.76950073]
[-193.68334961 -138.46546936]
[-181.19161987 -130.16143799]
[-168.69990540 -121.85741425]
[-171.92889404 -136.50575256]
[-165.08142090 -149.85160828]
[-151.29913330 -155.77180481]
[-136.90548706 -151.55010986]
[-128.50437927 -139.12345886]
[-129.95033264 -124.19332123]
[-140.57991028 -113.60974884]
[-155.51748657 -112.22891998]
[-143.80688477 -102.85544586]
[-132.09629822 -93.48197937]
[-117.32501221 -91.56929016]
[-111.38614655 -76.90503693]
[-99.67555237 -67.53156281]
[-87.96495819 -58.15809631]
[-76.19545746 -48.85868454]
[-64.36753845 -39.63370895]
[-52.53961182 -30.40873337]
[-40.71168518 -21.18375587]
[-28.88376045 -11.95877934]
[-7.25278664 -11.02395344]
[0.74360192 9.92169952]
[13.02182961 18.53825951]
[25.30005836 27.15482140]
[32.56241226 28.42135811]
[37.67790604 35.95835495]
[49.84644699 44.72913742]
[62.01498795 53.49991989]
[74.18352509 62.27070236]
[87.78480530 55.94572830]
[88.91923523 40.98868561]
[90.05366516 26.03164482]
[91.18809509 11.07460403]
[92.32252502 -3.88243628]
[84.73667908 -18.42158699]
[93.76216888 -32.11364746]
[110.11434937 -30.87340164]
[116.97149658 -15.97670555]
[107.27956390 -2.74800491]
[106.14513397 12.20903587]
[105.01070404 27.16607666]
[103.87627411 42.12311554]
[102.74184418 57.08015823]
[135.87989807 68.36205292]
[152.56539917 103.24705505]
[166.00276184 96.58091736]
[179.44012451 89.91477966]
[192.87747192 83.24864197]
[190.50212097 67.59803772]
[193.08012390 51.99924850]
[200.34686279 37.97968292]
[211.57919312 26.90834999]
[225.66740417 19.86215973]
[241.22485352 17.52119064]
[256.72442627 20.10306931]
[270.64843750 27.34278870]
[281.63726807 38.51986313]
[294.98947144 31.68472290]
[308.34164429 24.84958267]
[321.69384766 18.01444435]
[335.04602051 11.17930508]
[348.39822388 4.34416628]
[361.75039673 -2.49097276]
[363.12445068 -14.26999760]
[369.93450928 -23.83198547]
[380.40136719 -28.87751007]
[391.88464355 -28.26179695]
[401.54864502 -22.25237465]
[415.06903076 -28.74844933]
[428.58941650 -35.24452209]
[442.10980225 -41.74059677]
[441.62576294 -56.96181870]
[447.38061523 -71.06152344]
[458.37728882 -81.59684753]
[472.71054077 -86.74249268]
[487.89706421 -85.60693359]
[501.30569458 -78.38691711]
[510.61328125 -66.33335114]
[514.20727539 -51.53459930]
[511.46496582 -36.55462646]
[502.86148071 -23.98880196]
[489.88742065 -16.01423645]
[474.79061890 -14.01256847]
[460.18670654 -18.33059883]
[448.60589600 -28.22020531]
[435.08547974 -21.72413063]
[421.56509399 -15.22805691]
[408.04470825 -8.73198223]
[403.01257324 8.88750648]
[386.40286255 17.35629654]
[368.58554077 10.86121368]
[355.23333740 17.69635201]
[341.88116455 24.53149223]
[328.52899170 31.36663055]
[315.17678833 38.20177078]
[301.82461548 45.03690720]
[288.47241211 51.87204742]
[291.07519531 65.87422943]
[289.62753296 80.05847931]
[284.23770142 93.27560425]
[275.33374023 104.45220947]
[263.62948608 112.67790222]
[250.06729126 117.27944183]
[235.74221802 117.87581635]
[221.81361389 114.40979767]
[209.41122437 107.15328217]
[199.54360962 96.68599701]
[186.10624695 103.35213470]
[172.66889954 110.01827240]
[159.23153687 116.68441010]
[157.68145752 124.02248383]
[172.66976929 124.61460876]
[187.65806580 125.20673370]
[201.61225891 119.70394135]
[215.74064636 124.74264526]
[223.06361389 137.83364868]
[219.96348572 152.50978088]
[207.97177124 161.52084351]
[193.01258850 160.41519165]
[182.47592163 149.73898315]
[168.52861023 144.21879578]
[154.58129883 138.69862366]
[153.03121948 146.03668213]
[162.62461853 157.56779480]
[172.21801758 169.09890747]
[181.81143188 180.63003540]
[191.40483093 192.16114807]
[200.99822998 203.69226074]
[216.56349182 208.85510254]
[219.60951233 224.96887207]
[207.00280762 235.45712280]
[191.71208191 229.53042603]
[189.46711731 213.28565979]
[179.87371826 201.75454712]
[170.28030396 190.22343445]
[160.68690491 178.69232178]
[151.09350586 167.16120911]
[141.50010681 155.63009644]
[134.05390930 156.52688599]
[143.05348206 168.52722168]
[137.16075134 182.32125854]
[122.26840973 184.11514282]
[113.26862335 172.11497498]
[119.16152954 158.32048035]
[111.71533966 159.21728516]
[105.13410187 172.69642639]
[98.55286407 186.17556763]
[91.97162628 199.65472412]
[85.39038849 213.13386536]
[85.83529663 217.39697266]
[84.99845123 221.20382690]
[83.17692566 224.21057129]
[80.74833679 226.20355225]
[78.12200165 227.11425781]
[70.86917114 240.24423218]
[63.61634827 253.37422180]
[56.36352539 266.50421143]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 34]
[4 33]
[5 32]
[6 31]
[8 29]
[9 28]
[10 27]
[13 23]
[14 22]
[41 248]
[42 247]
[43 246]
[44 245]
[45 240]
[46 239]
[47 238]
[48 237]
[49 236]
[54 120]
[55 119]
[56 118]
[57 117]
[58 115]
[59 114]
[60 113]
[66 111]
[67 110]
[68 109]
[69 108]
[70 107]
[72 106]
[73 105]
[74 104]
[76 102]
[77 101]
[78 100]
[79 92]
[80 91]
[81 90]
[82 89]
[121 134]
[122 133]
[123 132]
[124 131]
[125 130]
[136 201]
[137 200]
[138 199]
[139 198]
[148 188]
[149 187]
[150 186]
[151 185]
[152 184]
[153 183]
[154 182]
[159 179]
[160 178]
[161 177]
[162 176]
[214 229]
[215 228]
[216 227]
[217 226]
[218 225]
[219 224]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
