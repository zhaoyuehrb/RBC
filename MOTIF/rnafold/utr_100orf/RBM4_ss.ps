%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:11:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUUCUUGAGUGGCCAAUCCGGUUGUAGGCUCACCUCCCCCUUCUACUCAGAGCACUGCUGCGGCCGCCGCCAUUUUAGCGUUUUGUCAGAAGCGUCCGCGCCGCGAGGAGGAGGCCCUGCUGGUUUCUGUGCGGGCUCUUGUCAGGAUGGUGAAGCUGUUCAUCGGAAACCUGCCCCGGGAGGCUACAGAGCAGGAGAUUCGCUCACUCUUCGAGCAGUAUGGGAAGGUGCUGGAAUGUGACAUCA\
) } def
/len { sequence length } bind def

/coor [
[422.46655273 570.66143799]
[426.46322632 558.96093750]
[433.86346436 549.02532959]
[425.63839722 536.48150635]
[417.41333008 523.93762207]
[409.18826294 511.39376831]
[400.96322632 498.84991455]
[392.73815918 486.30606079]
[384.51309204 473.76217651]
[365.34750366 466.06958008]
[364.58203125 444.63824463]
[355.88818359 432.41461182]
[347.19433594 420.19097900]
[338.50048828 407.96737671]
[329.80664062 395.74374390]
[321.11279297 383.52011108]
[309.25552368 381.20602417]
[301.90985107 371.11505127]
[303.44561768 358.32501221]
[294.90670776 345.99267578]
[286.36776733 333.66033936]
[277.82882690 321.32797241]
[269.28988647 308.99563599]
[257.46273804 306.53216553]
[250.24497986 296.34930420]
[251.94200134 283.57965088]
[243.55934143 271.14056396]
[235.17668152 258.70147705]
[226.79400635 246.26237488]
[218.41134644 233.82328796]
[195.68492126 226.71231079]
[192.47080994 202.43791199]
[181.89772034 191.79791260]
[171.32463074 181.15789795]
[160.75154114 170.51789856]
[150.17843628 159.87789917]
[139.53843689 149.30479431]
[128.83193970 138.79904175]
[118.12545776 128.29327393]
[96.07460785 133.37113953]
[75.80393982 123.31506348]
[66.50627899 102.68552399]
[51.66389084 100.51674652]
[36.82150650 98.34797668]
[21.97912025 96.17919922]
[7.13673401 94.01042175]
[-2.65336394 103.23908234]
[-15.77832222 105.12463379]
[-27.42378426 99.20143127]
[-33.44758987 87.82724762]
[-48.26143265 85.47138977]
[-63.07527161 83.11552429]
[-77.88911438 80.75965881]
[-92.70295715 78.40380096]
[-107.51679993 76.04793549]
[-122.36090851 81.52178955]
[-133.71502686 71.88159943]
[-148.52886963 69.52574158]
[-163.34271240 67.16987610]
[-173.05540466 78.98557281]
[-187.28430176 84.31803894]
[-202.17292786 81.82894897]
[-213.73922729 72.28553772]
[-218.94064331 58.32807159]
[-233.75448608 55.97220993]
[-248.56832886 53.61634827]
[-263.68002319 59.98569107]
[-276.58673096 49.86891174]
[-274.01110840 33.67328644]
[-258.60275269 28.05948639]
[-246.21246338 38.80250549]
[-231.39862061 41.15836716]
[-216.58477783 43.51422882]
[-207.31013489 31.85891342]
[-193.35391235 26.37438011]
[-178.42765808 28.62677765]
[-166.55494690 38.11021423]
[-160.98684692 52.35603714]
[-146.17300415 54.71189880]
[-131.35916138 57.06776047]
[-117.57463837 51.42539978]
[-105.16093445 61.23409653]
[-90.34709167 63.58995819]
[-75.53324890 65.94582367]
[-60.71940994 68.30168152]
[-45.90556717 70.65754700]
[-31.09172630 73.01340485]
[-17.90069771 62.56300354]
[-0.89968461 64.94525146]
[9.30551052 79.16803741]
[24.14789581 81.33681488]
[38.99028015 83.50558472]
[53.83266830 85.67436218]
[68.67504883 87.84313965]
[75.72158813 76.77070618]
[86.47216797 69.24224854]
[83.65029144 54.51007080]
[80.82841492 39.77789688]
[78.00654602 25.04571915]
[75.18466949 10.31354141]
[72.36280060 -4.41863489]
[69.54092407 -19.15081215]
[66.71905518 -33.88298798]
[51.76313019 -49.25204849]
[59.45448303 -68.41815948]
[56.07714462 -83.03299713]
[45.43132401 -94.73671722]
[50.10433197 -108.87928772]
[46.72699356 -123.49413300]
[36.08117676 -135.19786072]
[40.75418091 -149.34042358]
[37.37684250 -163.95526123]
[33.99950409 -178.57009888]
[22.42323494 -190.18569946]
[26.95515823 -205.94621277]
[42.93321991 -209.63858032]
[53.92055893 -197.46440125]
[48.61434555 -181.94744873]
[51.99168396 -167.33261108]
[55.36902237 -152.71775818]
[65.77326965 -142.05938721]
[61.34183502 -126.87146759]
[64.71917725 -112.25662994]
[75.12342072 -101.59825897]
[70.69198608 -86.41033936]
[74.06932068 -71.79549408]
[82.22676086 -68.40058136]
[88.00642395 -61.53691483]
[90.02416992 -52.65287781]
[87.70767975 -43.70011139]
[81.45123291 -36.70486069]
[84.27310181 -21.97268486]
[87.09497833 -7.24050808]
[89.91684723 7.49166870]
[92.73872375 22.22384644]
[95.56059265 36.95602417]
[98.38246918 51.68819809]
[101.20433807 66.42037964]
[108.88485718 67.59474182]
[116.09030151 70.50180054]
[122.43540192 74.98611450]
[127.58089447 80.80791473]
[131.25164795 87.65591431]
[133.25137329 95.16394043]
[133.47317505 102.93054962]
[131.90518188 110.54046631]
[128.63121033 117.58678436]
[139.33770752 128.09254456]
[150.04420471 138.59831238]
[158.33923340 142.36221313]
[160.81845093 149.30479431]
[171.39154053 159.94480896]
[181.96463013 170.58480835]
[192.53773499 181.22480774]
[203.11082458 191.86482239]
[211.05027771 190.07189941]
[218.96746826 191.15672302]
[225.87097168 194.87878418]
[238.25692749 186.41781616]
[250.64289856 177.95684814]
[255.01237488 162.52029419]
[269.86065674 156.44506836]
[283.79739380 164.39157104]
[286.13153076 180.26391602]
[275.07250977 191.88619995]
[259.10385132 190.34281921]
[246.71789551 198.80378723]
[234.33193970 207.26473999]
[234.99299622 211.98690796]
[234.61286926 216.73992920]
[233.20970154 221.29699707]
[230.85043335 225.44062805]
[239.23310852 237.87971497]
[247.61576843 250.31880188]
[255.99842834 262.75790405]
[264.38110352 275.19699097]
[281.11721802 282.90444946]
[281.62222290 300.45672607]
[290.16116333 312.78906250]
[298.70010376 325.12139893]
[307.23904419 337.45373535]
[315.77798462 349.78607178]
[332.61001587 357.28176880]
[333.33642578 374.82626343]
[342.03027344 387.04989624]
[350.72412109 399.27352905]
[359.41796875 411.49713135]
[368.11181641 423.72076416]
[376.80566406 435.94439697]
[386.18527222 436.25979614]
[394.25549316 440.77529907]
[399.27972412 448.37493896]
[400.24340820 457.29602051]
[397.05697632 465.53713989]
[405.28201294 478.08099365]
[413.50708008 490.62484741]
[421.73214722 503.16870117]
[429.95718384 515.71258545]
[438.18225098 528.25640869]
[446.40731812 540.80029297]
[464.17083740 537.95971680]
[481.33026123 543.18041992]
[494.42391968 555.36041260]
[500.83175659 571.99890137]
[499.29946899 589.70928955]
[490.18389893 604.90881348]
[498.87774658 617.13244629]
[507.57159424 629.35607910]
[516.26544189 641.57971191]
[528.81555176 644.48461914]
[535.80737305 654.82391357]
[533.95153809 666.76147461]
[542.49047852 679.09387207]
[551.02941895 691.42620850]
[565.24658203 698.36755371]
[566.13049316 713.23590088]
[574.66943359 725.56823730]
[583.20837402 737.90057373]
[591.74725342 750.23291016]
[606.93060303 748.30261230]
[621.26770020 753.66033936]
[631.46411133 765.07489014]
[635.17675781 779.92327881]
[631.55242920 794.79351807]
[621.42401123 806.26843262]
[607.11895752 811.71124268]
[591.92449951 809.87121582]
[579.33209229 801.17120361]
[572.23547363 787.61035156]
[572.26538086 772.30487061]
[579.41491699 758.77185059]
[570.87603760 746.43951416]
[562.33709717 734.10717773]
[553.79815674 721.77484131]
[540.19171143 715.71557617]
[538.69708252 699.96508789]
[530.15814209 687.63275146]
[521.61920166 675.30041504]
[505.36721802 668.65142822]
[504.04180908 650.27355957]
[495.34796143 638.04992676]
[486.65411377 625.82629395]
[477.96026611 613.60266113]
[466.23226929 616.93963623]
[454.02136230 616.52648926]
[442.49978638 612.38806152]
[432.77816772 604.90728760]
[425.79849243 594.79022217]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 200]
[4 199]
[5 198]
[6 197]
[7 196]
[8 195]
[9 194]
[11 189]
[12 188]
[13 187]
[14 186]
[15 185]
[16 184]
[19 182]
[20 181]
[21 180]
[22 179]
[23 178]
[26 176]
[27 175]
[28 174]
[29 173]
[30 172]
[32 155]
[33 154]
[34 153]
[35 152]
[36 151]
[37 149]
[38 148]
[39 147]
[42 94]
[43 93]
[44 92]
[45 91]
[46 90]
[50 87]
[51 86]
[52 85]
[53 84]
[54 83]
[55 82]
[57 80]
[58 79]
[59 78]
[64 73]
[65 72]
[66 71]
[96 138]
[97 137]
[98 136]
[99 135]
[100 134]
[101 133]
[102 132]
[103 131]
[105 126]
[106 125]
[108 123]
[109 122]
[111 120]
[112 119]
[113 118]
[158 168]
[159 167]
[160 166]
[206 243]
[207 242]
[208 241]
[209 240]
[212 238]
[213 237]
[214 236]
[216 234]
[217 233]
[218 232]
[219 231]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
