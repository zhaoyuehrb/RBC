%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:55:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCAUUCGGCCCUCAGACUGGGCUGGGCAGGUCUGAGAGUUAGGGAAAGUCCGUUCCCACUGCCCUCGGGGAGAGAAGAAAGGAGGGGGCAAGGGAGAAGCUGCUGGUCGGACUCACAAUGAAAACGCUCCUUCUUUUGCUGCUGGUGCUCCUGGAGCUGGGAGAGGCCCAAGGAUCCCUUCACAGGGUGCCCCUCAGGAGGCAUCCGUCCCUCAAGA\
) } def
/len { sequence length } bind def

/coor [
[44.98076630 218.59597778]
[49.48818970 204.28923035]
[57.92507172 191.88685608]
[69.57643890 182.43986511]
[83.45492554 176.74884033]
[98.38440704 175.29605103]
[113.09970856 178.20462036]
[126.35696411 185.23037720]
[117.85643768 172.87153625]
[109.35591125 160.51269531]
[100.85538483 148.15385437]
[85.87429047 147.40104675]
[76.17764282 158.84547424]
[66.48098755 170.28990173]
[56.78433990 181.73432922]
[47.08769226 193.17877197]
[37.39104462 204.62319946]
[27.69439507 216.06762695]
[17.99774551 227.51205444]
[18.28142738 240.40322876]
[9.97441387 249.73500061]
[-2.06505108 250.86979675]
[-11.92486858 262.17395020]
[-17.77968025 278.08486938]
[-34.68957520 276.86346436]
[-38.19701004 260.27627563]
[-23.22902679 252.31413269]
[-13.36920929 241.00997925]
[-10.92162228 223.62995911]
[6.55331516 217.81541443]
[16.24996376 206.37097168]
[25.94661331 194.92654419]
[35.64326096 183.48211670]
[45.33991241 172.03768921]
[55.03656006 160.59326172]
[64.73320770 149.14881897]
[74.42985535 137.70439148]
[70.86772156 131.10430908]
[60.51510620 141.95893860]
[46.99260330 135.46726990]
[48.98789597 120.60056305]
[63.74345779 117.90412140]
[60.18132401 111.30402374]
[45.29269791 113.12850952]
[30.40406799 114.95298767]
[15.51543808 116.77746582]
[0.62680966 118.60195160]
[-8.90757084 131.20635986]
[-24.57331657 133.29440308]
[-37.07621765 123.62730408]
[-38.99852753 107.94035339]
[-29.19976807 95.54035950]
[-13.49337578 93.78401184]
[-1.19767094 103.71331787]
[13.69095802 101.88883972]
[28.57958603 100.06436157]
[43.46821594 98.23987579]
[58.35684586 96.41539764]
[75.18932343 79.19393158]
[94.07464600 77.81488800]
[95.14961243 62.85345459]
[88.42118835 48.53427505]
[97.05068207 36.39421844]
[98.12564850 21.43278503]
[98.98588562 6.45747328]
[99.63122559 -8.52863884]
[100.27655792 -23.51474953]
[93.14013672 -37.63502121]
[101.41782379 -50.01763153]
[102.06315613 -65.00374603]
[102.70849609 -79.98985291]
[103.35382843 -94.97596741]
[103.99916077 -109.96208191]
[104.21433258 -124.96053314]
[103.99916077 -139.95899963]
[96.06469727 -153.64675903]
[103.61862946 -166.48370361]
[103.40346527 -181.48216248]
[103.08071899 -196.47869873]
[102.65042114 -211.47251892]
[102.22013092 -226.46633911]
[101.78983307 -241.46017456]
[101.35953522 -256.45401001]
[100.92923737 -271.44781494]
[100.49894714 -286.44165039]
[100.06864929 -301.43548584]
[99.63835144 -316.42932129]
[99.20805359 -331.42312622]
[98.77775574 -346.41696167]
[98.34746552 -361.41079712]
[79.21409607 -370.23211670]
[67.24834442 -387.48300171]
[65.69992828 -408.34576416]
[74.92209625 -427.04058838]
[92.29464722 -438.42666626]
[90.36342621 -453.30181885]
[88.43220520 -468.17700195]
[79.45146942 -474.30007935]
[75.40339661 -484.15075684]
[77.39998627 -494.38836670]
[84.54589081 -501.68225098]
[83.04217529 -516.60668945]
[81.53845978 -531.53112793]
[70.07391357 -542.75360107]
[71.84324646 -558.69879150]
[85.48917389 -567.13488770]
[100.54370880 -561.59051514]
[105.45830536 -546.31872559]
[96.46289825 -533.03485107]
[97.96661377 -518.11041260]
[99.47032928 -503.18597412]
[111.88333130 -488.35571289]
[103.30735779 -470.10821533]
[105.23858643 -455.23306274]
[107.16980743 -440.35787964]
[116.41221619 -438.72000122]
[125.01870728 -434.93893433]
[132.49917603 -429.22274780]
[138.42591858 -421.88995361]
[142.45811462 -413.35165405]
[144.36138916 -404.08862305]
[144.02145386 -394.62414551]
[141.45094299 -385.49453735]
[136.78906250 -377.21862793]
[130.29408264 -370.26840210]
[122.32898712 -365.04205322]
[113.34129333 -361.84109497]
[113.77158356 -346.84725952]
[114.20188141 -331.85342407]
[114.63217926 -316.85958862]
[115.06247711 -301.86578369]
[115.49276733 -286.87194824]
[115.92306519 -271.87811279]
[116.35336304 -256.88430786]
[116.78366089 -241.89047241]
[117.21395874 -226.89663696]
[117.64424896 -211.90281677]
[118.07454681 -196.90898132]
[121.40649414 -190.31704712]
[118.40191650 -181.69734192]
[118.61708832 -166.69888306]
[126.53616333 -154.08390808]
[118.99761963 -140.17416382]
[119.21278381 -125.17570496]
[121.12062073 -123.12954712]
[122.33537292 -120.20659637]
[122.51986694 -116.66617584]
[121.43658447 -112.88447571]
[118.98527527 -109.31674957]
[118.33993530 -94.33063507]
[117.69460297 -79.34452057]
[117.04927063 -64.35841370]
[116.40393829 -49.37229919]
[123.58651733 -36.32393646]
[115.26266479 -22.86941719]
[114.61733246 -7.88330507]
[113.97200012 7.10280657]
[116.47914124 11.16135311]
[116.46740723 16.83692169]
[113.08708191 22.50775146]
[112.01211548 37.46918488]
[118.81742859 50.71821976]
[110.11104584 63.92842102]
[109.03607941 78.88985443]
[132.35223389 101.33975983]
[113.21423340 139.65332031]
[121.71475983 152.01216125]
[130.21528625 164.37101746]
[138.71580505 176.72985840]
[144.50576782 178.48342896]
[148.75419617 182.04756165]
[151.01473999 186.55673218]
[151.24745178 191.09722900]
[162.33683777 201.19798279]
[173.42623901 211.29873657]
[184.51564026 221.39949036]
[199.92817688 224.97216797]
[204.12719727 239.26264954]
[215.21658325 249.36340332]
[226.30598450 259.46417236]
[237.39538574 269.56491089]
[248.48478699 279.66567993]
[264.05163574 279.10827637]
[275.15396118 289.50985718]
[275.58944702 304.35391235]
[286.67883301 314.45465088]
[297.76821899 324.55541992]
[308.85763550 334.65615845]
[324.63888550 340.85195923]
[323.05392456 357.73165894]
[306.39511108 360.88140869]
[298.75686646 345.74557495]
[287.66748047 335.64480591]
[276.57806396 325.54406738]
[265.48867798 315.44329834]
[250.66856384 316.39184570]
[239.27845764 306.30621338]
[238.38401794 290.75506592]
[227.29463196 280.65429688]
[216.20523071 270.55355835]
[205.11582947 260.45278931]
[194.02644348 250.35203552]
[179.40707397 247.50183105]
[174.41488647 232.48889160]
[163.32548523 222.38813782]
[152.23608398 212.28736877]
[141.14669800 202.18661499]
[146.30540466 216.27163696]
[147.18896484 231.24559021]
[143.72247314 245.83953857]
[136.19969177 258.81674194]
[125.25814819 269.07748413]
[111.82505035 275.75219727]
[97.03877258 278.27526855]
[82.15234375 276.43286133]
[68.42730713 270.38116455]
[57.02676392 260.63293457]
[48.91683197 248.01434326]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 169]
[9 168]
[10 167]
[11 166]
[12 37]
[13 36]
[14 35]
[15 34]
[16 33]
[17 32]
[18 31]
[19 30]
[22 28]
[23 27]
[43 58]
[44 57]
[45 56]
[46 55]
[47 54]
[60 164]
[61 163]
[63 161]
[64 160]
[65 157]
[66 156]
[67 155]
[69 153]
[70 152]
[71 151]
[72 150]
[73 149]
[74 144]
[75 143]
[77 141]
[78 140]
[79 138]
[80 137]
[81 136]
[82 135]
[83 134]
[84 133]
[85 132]
[86 131]
[87 130]
[88 129]
[89 128]
[90 127]
[95 115]
[96 114]
[97 113]
[101 111]
[102 110]
[103 109]
[173 207]
[174 206]
[175 205]
[176 204]
[178 202]
[179 201]
[180 200]
[181 199]
[182 198]
[185 195]
[186 194]
[187 193]
[188 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
