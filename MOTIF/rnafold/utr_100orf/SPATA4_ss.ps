%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:26:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCUGAGGUCUCGCCCCAUAAGACUCCGCCCCGCCCCACGAGACCGCGCCGCCAGCAAUAAGGCCCAGCCCCGCCUUCUGCUGUUGCCGCAGCAACCCAGAAAGCGUCAUGGCUGCCGCCGGCCAGGAAAAAGGGUAUUUGACACAGACUGCGGCAGCCCUAGACAAGUCACCGUCACUUUCGCCACAGCUAGCAGCUCCCAUCCGAG\
) } def
/len { sequence length } bind def

/coor [
[86.47166443 125.00238037]
[76.10572815 135.84429932]
[65.73978424 146.68621826]
[55.37384796 157.52815247]
[54.13774490 162.60113525]
[51.35705185 166.32038879]
[47.80628586 168.32418823]
[44.29126358 168.61073303]
[33.44934082 178.97666931]
[22.60741806 189.34260559]
[11.76549435 199.70855713]
[0.92357123 210.07449341]
[-9.91835213 220.44042969]
[-20.76027489 230.80636597]
[-13.13229465 243.80293274]
[-8.70771885 258.20849609]
[-7.72515821 273.24615479]
[-10.23760223 288.10494995]
[-16.10955620 301.98361206]
[-25.02435493 314.13363647]
[-36.50123596 323.89978027]
[-49.92126083 330.75543213]
[-64.56070709 334.33081055]
[-79.63008881 334.43310547]
[-94.31673431 331.05682373]
[-107.82860565 324.38406372]
[-119.43702698 314.77462769]
[-128.51597595 302.74676514]
[-134.57583618 288.94912720]
[-137.28979492 274.12579346]
[-136.51150513 259.07617188]
[-132.28292847 244.61187744]
[-124.83211517 231.51293945]
[-114.56087494 220.48576355]
[-102.02312469 212.12506104]
[-87.89501190 206.88168335]
[-72.93843842 205.03840637]
[-57.95999908 206.69464111]
[-43.76746368 211.76106262]
[-31.12621498 219.96444702]
[-20.28429222 209.59851074]
[-9.44236851 199.23257446]
[1.39955449 188.86662292]
[12.24147701 178.50068665]
[23.08340073 168.13475037]
[33.92532349 157.76881409]
[44.53192520 147.16220093]
[54.89786530 136.32028198]
[65.26380157 125.47836304]
[75.62974548 114.63643646]
[71.80181122 96.39487457]
[80.09595490 79.70310974]
[72.79112244 66.60198975]
[65.48628998 53.50086594]
[52.00793839 45.21566010]
[52.56771851 30.33157921]
[45.26288605 17.23045731]
[38.71168137 30.72422218]
[24.11167717 34.16512680]
[12.22425365 25.01695061]
[11.81140327 10.02263260]
[23.17742920 0.23419859]
[37.94377136 2.86588454]
[31.63841438 -10.74449539]
[25.33305550 -24.35487556]
[20.15454483 -28.46718597]
[18.13409042 -33.77998734]
[19.04947090 -38.46804047]
[13.15409470 -52.26095581]
[7.25871944 -66.05387115]
[1.36334372 -79.84679413]
[-16.53327560 -91.63248444]
[-13.20266247 -112.00048065]
[-19.71091843 -125.51501465]
[-26.21917534 -139.02954102]
[-39.17791367 -148.10598755]
[-37.72900009 -162.92994690]
[-44.23725891 -176.44447327]
[-50.74551392 -189.95901489]
[-57.25376892 -203.47354126]
[-63.76202774 -216.98808289]
[-75.65675354 -221.97720337]
[-80.79908752 -233.36808777]
[-76.92925262 -244.82945251]
[-83.23461151 -258.43981934]
[-89.53997040 -272.05020142]
[-95.84532928 -285.66058350]
[-102.15068817 -299.27096558]
[-115.86474609 -308.26300049]
[-114.66442871 -324.61816406]
[-99.78451538 -331.51165771]
[-86.53219604 -321.85205078]
[-88.54030609 -305.57632446]
[-82.23494720 -291.96594238]
[-75.92958832 -278.35556030]
[-69.62422943 -264.74517822]
[-63.31887436 -251.13481140]
[-48.44533539 -241.82174683]
[-50.24749374 -223.49633789]
[-43.73923874 -209.98179626]
[-37.23097992 -196.46726990]
[-30.72272491 -182.95272827]
[-24.21446800 -169.43820190]
[-11.72124577 -161.32841492]
[-12.70464230 -145.53779602]
[-6.19638586 -132.02326965]
[0.31187031 -118.50873566]
[9.05945206 -116.98008728]
[16.23166847 -111.51396942]
[20.14272308 -103.23611450]
[19.80082703 -93.94954681]
[15.15626049 -85.74216461]
[21.05163574 -71.94924927]
[26.94701195 -58.15633392]
[32.84238815 -44.36341476]
[38.94343567 -30.66023445]
[45.24879456 -17.04985428]
[51.55415344 -3.43947387]
[58.36400986 9.92562389]
[65.66884613 23.02674675]
[78.62470245 30.37487221]
[78.58740997 46.19603348]
[85.89224243 59.29715729]
[93.19707489 72.39827728]
[110.10108185 73.42740631]
[123.42024231 83.88706207]
[128.42764282 100.06514740]
[142.88708496 104.05570221]
[157.34652710 108.04624939]
[164.85617065 102.34201813]
[174.01280212 100.75664520]
[182.74072266 103.52114105]
[189.12013245 109.89471436]
[191.80915833 118.35793304]
[206.07499695 122.99318695]
[220.34085083 127.62844086]
[231.55859375 120.17262268]
[244.82856750 120.53386688]
[255.31204224 128.35630798]
[259.31542969 140.60432434]
[273.51034546 145.45246887]
[287.70526123 150.30061340]
[297.15463257 143.08482361]
[308.79483032 141.34457397]
[319.71667480 145.39782715]
[327.24673462 154.12905884]
[329.60174561 165.29333496]
[343.64526367 170.56394958]
[352.78009033 170.64955139]
[357.85845947 176.01988220]
[371.82156372 181.50000000]
[385.78466797 186.98011780]
[401.45764160 184.81944275]
[410.47839355 196.67167664]
[424.44149780 202.15179443]
[438.40460205 207.63191223]
[447.98178101 197.08961487]
[460.55590820 190.46362305]
[474.60699463 188.53184509]
[488.44430542 191.50613403]
[500.40994263 199.00927734]
[509.07730103 210.12266541]
[513.42132568 223.49873352]
[512.93951416 237.52436829]
[526.81909180 243.21275330]
[540.69866943 248.90112305]
[553.82745361 240.62980652]
[569.30834961 241.68865967]
[581.18865967 251.67053223]
[584.90014648 266.73721313]
[579.01568604 281.09521484]
[565.79791260 289.22363281]
[550.32940674 287.99691772]
[538.55810547 277.88674927]
[535.01025391 262.78070068]
[521.13067627 257.09231567]
[507.25112915 251.40393066]
[496.26217651 262.82135010]
[481.69787598 269.16317749]
[465.77645874 269.43121338]
[450.93527222 263.55487061]
[439.45764160 252.40641785]
[433.12161255 237.67164612]
[432.92446899 221.59501648]
[418.96136475 216.11489868]
[404.99826050 210.63478088]
[390.32403564 213.18743896]
[380.30456543 200.94322205]
[366.34146118 195.46310425]
[352.37835693 189.98298645]
[338.37463379 184.60746765]
[324.33111572 179.33685303]
[308.15042114 187.89723206]
[290.54885864 181.80819702]
[282.85711670 164.49552917]
[268.66220093 159.64738464]
[254.46730042 154.79924011]
[239.70080566 162.84770203]
[223.36032104 157.62361145]
[215.70559692 141.89428711]
[201.43974304 137.25903320]
[187.17390442 132.62377930]
[167.43731689 138.65830994]
[153.35597229 122.50569153]
[138.89653015 118.51514435]
[124.43708038 114.52458954]
[118.92427826 121.21335602]
[111.65213013 125.92995453]
[103.29669952 128.23590088]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 50]
[2 49]
[3 48]
[4 47]
[8 46]
[9 45]
[10 44]
[11 43]
[12 42]
[13 41]
[14 40]
[52 124]
[53 123]
[54 122]
[56 120]
[57 119]
[63 118]
[64 117]
[65 116]
[68 115]
[69 114]
[70 113]
[71 112]
[73 107]
[74 106]
[75 105]
[77 103]
[78 102]
[79 101]
[80 100]
[81 99]
[84 97]
[85 96]
[86 95]
[87 94]
[88 93]
[127 206]
[128 205]
[129 204]
[134 202]
[135 201]
[136 200]
[140 197]
[141 196]
[142 195]
[147 192]
[148 191]
[150 190]
[151 189]
[152 188]
[154 186]
[155 185]
[156 184]
[164 177]
[165 176]
[166 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
