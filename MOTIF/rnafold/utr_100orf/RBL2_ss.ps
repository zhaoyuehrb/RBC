%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:18:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCGUUUGCGGCGGCGCAGGCGCGGUGCGGGCGGCGGACGGGCGGGCGCUUCGCCGUUUGAAUGGCUGCGGGCCCGGGCCCUCACCUCACCUGAGGUCCGGCCGCCCAGGGGUGCGCUAUGCCGUCGGGAGGUGACCAGUCGCCACCGCCCCCGCCUCCCCCUCCGGCGGCGGCAGCCUCGGAUGAGGAGGAGGAGGACGACGGCGAGGCGGAAGACG\
) } def
/len { sequence length } bind def

/coor [
[-59.83685684 372.48086548]
[-67.24349213 385.52471924]
[-74.65012360 398.56854248]
[-82.05675507 411.61239624]
[-89.46339417 424.65621948]
[-96.87002563 437.70007324]
[-104.27665710 450.74392700]
[-111.68328857 463.78775024]
[-119.08992767 476.83160400]
[-126.49655914 489.87542725]
[-126.58247375 505.69641113]
[-139.59515381 512.94342041]
[-147.00180054 525.98724365]
[-154.31468201 539.08386230]
[-161.53344727 552.23260498]
[-160.63983154 568.60742188]
[-174.51998901 577.34088135]
[-188.89520264 569.44879150]
[-188.97747803 553.04980469]
[-174.68218994 545.01385498]
[-167.46342468 531.86511230]
[-167.00010681 524.49346924]
[-160.04563904 518.58062744]
[-152.63900757 505.53677368]
[-153.08285522 490.64880371]
[-139.54040527 482.46881104]
[-132.13375854 469.42495728]
[-124.72713470 456.38113403]
[-117.32049561 443.33728027]
[-109.91386414 430.29342651]
[-102.50723267 417.24960327]
[-95.10060120 404.20574951]
[-87.69396210 391.16192627]
[-80.28733063 378.11807251]
[-72.88069916 365.07424927]
[-76.46955872 355.51467896]
[-74.15868378 345.34341431]
[-66.47509003 337.96881104]
[-55.78590775 335.99719238]
[-48.00814056 323.17117310]
[-56.13618851 311.93209839]
[-59.37794876 298.40151978]
[-57.21208191 284.61376953]
[-49.93284988 272.65484619]
[-38.61063766 264.34667969]
[-24.93465042 260.96978760]
[-10.96093750 263.06582642]
[-2.99998689 250.35272217]
[4.96096373 237.63960266]
[12.92191505 224.92648315]
[20.88286591 212.21337891]
[28.84381676 199.50025940]
[36.80476761 186.78713989]
[44.76571655 174.07403564]
[52.72666931 161.36091614]
[60.68761826 148.64781189]
[68.64856720 135.93469238]
[76.60951996 123.22158051]
[69.22058105 111.78913116]
[67.08161926 98.34584045]
[70.55746460 85.18469238]
[79.05525208 74.55056000]
[72.40886688 61.10342407]
[65.76247406 47.65628815]
[59.11608505 34.20915222]
[52.46969604 20.76201248]
[35.21061325 10.33884811]
[37.30963516 -8.88648415]
[30.28022957 -22.13742638]
[23.25082397 -35.38837051]
[9.94859123 -43.95347977]
[10.81934929 -58.82261276]
[3.78994560 -72.07355499]
[-3.23945856 -85.32449341]
[-10.26886272 -98.57543945]
[-17.48762512 -111.72418213]
[-24.89425659 -124.76802826]
[-32.30089188 -137.81185913]
[-39.70752335 -150.85571289]
[-47.30050659 -163.79196167]
[-55.07826996 -176.61796570]
[-70.16656494 -180.48851013]
[-77.87161255 -193.60670471]
[-74.08865356 -207.96722412]
[-81.86642456 -220.79322815]
[-89.64418793 -233.61923218]
[-97.42195129 -246.44523621]
[-105.19972229 -259.27124023]
[-119.82750702 -266.68475342]
[-120.45082092 -283.07202148]
[-106.42845154 -291.57528687]
[-92.18540955 -283.44708252]
[-92.37371826 -267.04901123]
[-84.59594727 -254.22300720]
[-76.81818390 -241.39700317]
[-69.04042053 -228.57099915]
[-61.26265335 -215.74499512]
[-46.77989197 -212.46090698]
[-38.70941925 -199.56431580]
[-42.25226974 -184.39572144]
[-34.47450256 -171.56973267]
[-30.13686180 -169.58416748]
[-26.99768257 -164.85577393]
[-26.66368294 -158.26234436]
[-19.25704956 -145.21850586]
[-11.85041714 -132.17465210]
[-4.44378328 -119.13081360]
[-0.16488656 -117.02164459]
[2.83735967 -112.20513916]
[2.98207974 -105.60484314]
[10.01148415 -92.35390472]
[17.04088783 -79.10295868]
[24.07029152 -65.85201263]
[36.86973572 -58.23469925]
[36.50176620 -42.41777420]
[43.53116989 -29.16683197]
[50.56057739 -15.91588879]
[60.55256271 -13.81233311]
[67.89374542 -6.40272045]
[69.99127197 4.03867531]
[65.91683197 14.11562347]
[72.56322479 27.56276131]
[79.20961761 41.00989914]
[85.85600281 54.45703506]
[92.50239563 67.90417480]
[110.05596161 65.52358246]
[127.80200195 72.84072876]
[139.03515625 62.90008545]
[150.26829529 52.95944214]
[155.47534180 38.01965332]
[170.13407898 35.37944794]
[181.36721802 25.43880653]
[192.60037231 15.49816227]
[203.83351135 5.55751848]
[201.37721252 -9.67304707]
[207.56604004 -23.80463982]
[220.42517090 -32.32792282]
[235.85130310 -32.52314377]
[248.92201233 -24.32801247]
[255.46647644 -10.35756302]
[253.39639282 4.93028450]
[243.37231445 16.65723419]
[228.59288025 21.08125687]
[213.77415466 16.79066658]
[202.54101562 26.73130989]
[191.30786133 36.67195511]
[180.07472229 46.61259842]
[175.67114258 60.84136581]
[160.20893860 64.19258881]
[148.97579956 74.13323212]
[137.74264526 84.07387543]
[140.94546509 98.72795105]
[155.30151367 103.07579041]
[170.75195312 99.67070770]
[180.69013977 110.76491547]
[195.04620361 115.11275482]
[209.40225220 119.46058655]
[223.75831604 123.80842590]
[238.11436462 128.15626526]
[252.50123596 132.40101624]
[266.91818237 136.54246521]
[286.24594116 130.80172729]
[299.04565430 145.29954529]
[313.57546997 149.02572632]
[328.10528564 152.75190735]
[342.63510132 156.47808838]
[357.16491699 160.20426941]
[366.24884033 159.30471802]
[371.87567139 164.08952332]
[386.35055542 168.02374268]
[400.82543945 171.95796204]
[416.53411865 167.24951172]
[428.27883911 178.69474792]
[423.97763062 194.51979065]
[408.05523682 198.44519043]
[396.89120483 186.43283081]
[382.41632080 182.49861145]
[367.94146729 178.56439209]
[353.43875122 174.73408508]
[338.90893555 171.00790405]
[324.37911987 167.28172302]
[309.84930420 163.55555725]
[295.31948853 159.82937622]
[287.03588867 165.79988098]
[276.61459351 166.23764038]
[267.48287964 160.75726318]
[262.77673340 150.95941162]
[248.35978699 146.81796265]
[241.06745911 147.99166870]
[233.76652527 142.51231384]
[219.41047668 138.16447449]
[205.05442810 133.81665039]
[190.69836426 129.46881104]
[176.34231567 125.12097168]
[161.91871643 128.83703613]
[150.95367432 117.43184662]
[136.59762573 113.08400726]
[124.00423431 128.02169800]
[106.56964874 134.30526733]
[89.32263184 131.18252563]
[81.36168671 143.89564514]
[73.40073395 156.60874939]
[65.43978119 169.32186890]
[57.47883224 182.03498840]
[49.51787949 194.74809265]
[41.55693054 207.46121216]
[33.59597778 220.17433167]
[25.63502884 232.88743591]
[17.67407799 245.60055542]
[9.71312714 258.31365967]
[1.75217628 271.02679443]
[10.54101467 284.72280884]
[12.46891117 300.82302856]
[7.20015621 316.09686279]
[-4.16202784 327.50180054]
[-19.30605507 332.78955078]
[-35.18213654 330.94894409]
[-42.95990372 343.77496338]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 35]
[2 34]
[3 33]
[4 32]
[5 31]
[6 30]
[7 29]
[8 28]
[9 27]
[10 26]
[12 24]
[13 23]
[14 21]
[15 20]
[39 218]
[40 217]
[47 211]
[48 210]
[49 209]
[50 208]
[51 207]
[52 206]
[53 205]
[54 204]
[55 203]
[56 202]
[57 201]
[58 200]
[62 125]
[63 124]
[64 123]
[65 122]
[66 121]
[68 117]
[69 116]
[70 115]
[72 113]
[73 112]
[74 111]
[75 110]
[76 107]
[77 106]
[78 105]
[79 104]
[80 101]
[81 100]
[84 97]
[85 96]
[86 95]
[87 94]
[88 93]
[127 151]
[128 150]
[129 149]
[131 147]
[132 146]
[133 145]
[134 144]
[152 197]
[153 196]
[155 194]
[156 193]
[157 192]
[158 191]
[159 190]
[160 188]
[161 187]
[163 183]
[164 182]
[165 181]
[166 180]
[167 179]
[169 178]
[170 177]
[171 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
