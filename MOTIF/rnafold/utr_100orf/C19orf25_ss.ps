%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:12:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGUGCUCCGACCGGAAUCGGAAGUGGCUGCGUCGUCGACGCUGGGCUUUCGGGUCCCGCGCCCAGAGAUGGGCUCCAAGGCAAAGAAGCGCGUGCUGCUGCCCACCCGCCCAGCGCCCCCCACGGUGGAGCAGAUCCUGGAGGAUGUGCGGGGUGCGCCGGCAGAGG\
) } def
/len { sequence length } bind def

/coor [
[52.00435257 88.63959503]
[38.33901596 94.82494354]
[24.67367363 101.01028442]
[11.00833511 107.19563293]
[1.62658978 119.93507385]
[-13.15876770 118.13439178]
[-26.82410812 124.31973267]
[-33.38335037 130.73452759]
[-40.79959106 130.49050903]
[-54.57689667 136.42228699]
[-68.35420227 142.35404968]
[-82.13150787 148.28581238]
[-93.93267822 157.54499817]
[-102.97219849 169.51524353]
[-112.01171875 181.48550415]
[-113.48889923 197.81799316]
[-128.48344421 204.45845032]
[-141.57025146 194.57575989]
[-139.28672791 178.33638000]
[-123.98197937 172.44598389]
[-114.94245911 160.47572327]
[-105.90293884 148.50547791]
[-109.79209137 142.09263611]
[-122.61789703 149.87072754]
[-130.39578247 137.04479980]
[-117.57039642 129.26695251]
[-121.45955658 122.85412598]
[-136.25256348 125.33743286]
[-151.04557800 127.82073975]
[-165.83859253 130.30404663]
[-180.58319092 133.06028748]
[-195.27433777 136.08853149]
[-209.96546936 139.11676025]
[-224.65661621 142.14500427]
[-239.34776306 145.17323303]
[-253.64012146 154.29272461]
[-266.35974121 143.08345032]
[-259.10964966 127.75788879]
[-242.37600708 130.48208618]
[-227.68486023 127.45384979]
[-212.99371338 124.42561340]
[-198.30256653 121.39737701]
[-183.61141968 118.36914062]
[-180.26622009 114.91065979]
[-174.69964600 113.54146576]
[-168.32189941 115.51103210]
[-153.52888489 113.02772522]
[-138.73587036 110.54441833]
[-123.94286346 108.06111145]
[-96.67120361 115.65187073]
[-88.06327820 134.50851440]
[-74.28597260 128.57675171]
[-60.50866699 122.64497375]
[-46.73136139 116.71321106]
[-33.00945282 110.65439606]
[-19.34411240 104.46904755]
[-10.93980408 92.17201996]
[4.82298994 93.53028870]
[18.48832893 87.34494781]
[32.15367126 81.15959930]
[45.81900787 74.97425842]
[49.79047012 60.50955963]
[41.19944382 48.21345139]
[32.60841751 35.91734314]
[24.01739120 23.62123680]
[15.42636395 11.32512951]
[0.34972441 4.87323093]
[-1.33216381 -11.43944168]
[12.11088085 -20.83181000]
[26.84980774 -13.64181042]
[27.72247124 2.73410201]
[36.31349945 15.03020954]
[44.90452576 27.32631683]
[53.49555206 39.62242508]
[62.08657837 51.91852951]
[69.48308563 50.67687607]
[62.55019379 37.37518692]
[73.05860138 26.67129517]
[86.48580170 33.35787201]
[84.27609253 48.19356918]
[91.67259979 46.95191574]
[95.77754974 32.52452850]
[99.88249207 18.09714508]
[103.98743439 3.66976070]
[96.26480103 -5.43030262]
[93.93591309 -17.01363754]
[97.46887970 -28.16224861]
[105.86985016 -36.12477875]
[116.95909119 -38.99541473]
[121.59434509 -53.26126480]
[126.22959900 -67.52711487]
[122.29262543 -83.44666290]
[134.29685974 -94.61942291]
[149.89337158 -89.55181122]
[153.03781128 -73.45694733]
[140.49545288 -62.89185715]
[135.86019897 -48.62600708]
[131.22494507 -34.36016083]
[140.51098633 -18.61706352]
[135.28962708 -0.76905447]
[118.41481781 7.77470541]
[114.30987549 22.20208931]
[110.20493317 36.62947464]
[106.09998322 51.05685806]
[117.92475891 56.31379700]
[127.47502899 64.21068573]
[134.22761536 73.94190979]
[137.91641235 84.62042999]
[138.53654480 95.35429382]
[136.32695007 105.31914520]
[150.41177368 110.47837830]
[164.49661255 115.63761139]
[180.20703125 107.98609161]
[196.28108215 113.92869568]
[202.96730042 129.34097290]
[217.14506531 134.23905945]
[231.32281494 139.13713074]
[245.50057983 144.03521729]
[259.67834473 148.93330383]
[273.85607910 153.83137512]
[288.03384399 158.72946167]
[302.89001465 160.80180359]
[317.86697388 159.97062683]
[332.84390259 159.13946533]
[348.32366943 152.22474670]
[359.25338745 165.18536377]
[349.82492065 179.27580261]
[333.67507935 174.11640930]
[318.69812012 174.94758606]
[303.72119141 175.77876282]
[302.00405884 183.07954407]
[296.85266113 204.98190308]
[309.88900757 212.40173340]
[322.92532349 219.82157898]
[338.74621582 219.92350769]
[345.98004150 232.94352722]
[359.01638794 240.36337280]
[372.05270386 247.78320312]
[385.08905029 255.20304871]
[401.47561646 254.56100464]
[409.99487305 268.57363892]
[401.88293457 282.82595825]
[385.48468018 282.65640259]
[377.66918945 268.23937988]
[364.63287354 260.81954956]
[351.59652710 253.39970398]
[338.56021118 245.97987366]
[323.67178345 246.40864563]
[315.50549316 232.85791016]
[302.46914673 225.43807983]
[289.43283081 218.01823425]
[283.13577271 172.90721130]
[268.95800781 168.00914001]
[254.78025818 163.11105347]
[240.60249329 158.21298218]
[226.42474365 153.31489563]
[212.24697876 148.41680908]
[198.06922913 143.51873779]
[187.36296082 150.72930908]
[174.26330566 150.44039917]
[163.57200623 142.53320312]
[159.33737183 129.72244263]
[145.25254822 124.56320953]
[131.16772461 119.40396881]
[122.11144257 131.53599548]
[108.36669922 139.43875122]
[91.90485382 141.33224487]
[75.35199738 136.34996033]
[61.56999588 124.76737213]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 61]
[2 60]
[3 59]
[4 58]
[6 56]
[7 55]
[9 54]
[10 53]
[11 52]
[12 51]
[13 22]
[14 21]
[15 20]
[27 49]
[28 48]
[29 47]
[30 46]
[31 43]
[32 42]
[33 41]
[34 40]
[35 39]
[62 75]
[63 74]
[64 73]
[65 72]
[66 71]
[81 104]
[82 103]
[83 102]
[84 101]
[89 98]
[90 97]
[91 96]
[110 164]
[111 163]
[112 162]
[115 158]
[116 157]
[117 156]
[118 155]
[119 154]
[120 153]
[121 152]
[122 130]
[123 129]
[124 128]
[132 151]
[133 150]
[134 149]
[136 147]
[137 146]
[138 145]
[139 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
