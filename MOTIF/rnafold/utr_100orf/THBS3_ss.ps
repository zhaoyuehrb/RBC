%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:24:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCCUCCAAUUCUGUCCCUCCGCCCCCCGGCUCCUGCUCUCUCCGCCUAGCCUUUUCCCCUCCCAGCUGCCUGCCUGCCAGGGGUAGUGAGCCGGCUGAGAGGCAUGGAGACGCAGGAACUUCGGGGGGCCCUGGCUCUUCUCCUCCUUUGCUUUUUCACAUCUGCCAGUCAGGAUCUGCAGGUAAUUGACCUGCUGACUGUGG\
) } def
/len { sequence length } bind def

/coor [
[63.74573135 279.68728638]
[54.78564072 292.50332642]
[39.67049026 296.51159668]
[25.53719139 289.81951904]
[19.05905724 275.58688354]
[23.29486275 260.53390503]
[36.24459076 251.76814270]
[37.61521912 236.83090210]
[38.98584366 221.89364624]
[30.53265762 216.05809021]
[25.22480392 207.16973877]
[24.07851601 196.79953003]
[27.36748695 186.81303406]
[34.56141281 179.03486633]
[44.41028214 174.91532898]
[46.46263504 160.05641174]
[48.51498795 145.19747925]
[49.46676254 128.61737061]
[54.63389969 114.53692627]
[63.00179291 103.89612579]
[73.36712646 97.32080078]
[84.42411804 95.08882904]
[94.85581207 97.11837006]
[84.16864014 86.59295654]
[73.48146820 76.06754303]
[62.79429626 65.54212189]
[52.10712814 55.01670837]
[41.41995621 44.49129105]
[30.73278618 33.96587372]
[20.04561615 23.44045639]
[9.35844612 12.91504097]
[-10.35951996 8.73645878]
[-14.70117283 -10.10363197]
[-25.70435715 -20.29823494]
[-36.70754242 -30.49283791]
[-47.71072388 -40.68743896]
[-58.71390915 -50.88204575]
[-69.71709442 -61.07664871]
[-82.61459351 -61.36636353]
[-91.56960297 -70.08730316]
[-92.16049194 -82.17189026]
[-103.00693512 -92.53310394]
[-113.85337067 -102.89431763]
[-124.69981384 -113.25553894]
[-135.54624939 -123.61675262]
[-146.39268494 -133.97796631]
[-155.71365356 -132.50857544]
[-164.53417969 -135.45137024]
[-170.91394043 -142.02555847]
[-173.51133728 -150.66690063]
[-171.86434937 -159.39859009]
[-182.22557068 -170.24502563]
[-192.58677673 -181.09147644]
[-202.94799805 -191.93791199]
[-213.30920410 -202.78434753]
[-223.67042542 -213.63078308]
[-223.04479980 -198.64384460]
[-231.24928284 -186.08650208]
[-245.22544861 -180.63981628]
[-259.76339722 -184.33412170]
[-269.44378662 -195.79231262]
[-270.65805054 -210.74307251]
[-262.95352173 -223.61320496]
[-249.20225525 -229.60508728]
[-234.53147888 -226.48574829]
[-243.49565125 -238.51254272]
[-252.45982361 -250.53932190]
[-261.42398071 -262.56610107]
[-270.38815308 -274.59289551]
[-279.35235596 -286.61968994]
[-293.80313110 -293.06057739]
[-295.20544434 -307.88900757]
[-304.16961670 -319.91580200]
[-319.55801392 -322.33148193]
[-328.47763062 -334.65603638]
[-326.07980347 -349.31161499]
[-335.04400635 -361.33840942]
[-344.00817871 -373.36520386]
[-352.97235107 -385.39196777]
[-361.93652344 -397.41876221]
[-376.25003052 -406.50500488]
[-371.48126221 -422.77444458]
[-354.52749634 -422.69589233]
[-349.90972900 -406.38293457]
[-340.94555664 -394.35614014]
[-331.98138428 -382.32937622]
[-323.01721191 -370.30258179]
[-314.05303955 -358.27578735]
[-299.32330322 -356.38623047]
[-290.06103516 -344.31707764]
[-292.14282227 -328.87997437]
[-283.17864990 -316.85317993]
[-269.36904907 -311.27255249]
[-267.32556152 -295.58386230]
[-258.36138916 -283.55706787]
[-249.39720154 -271.53027344]
[-240.43302917 -259.50350952]
[-231.46885681 -247.47671509]
[-222.50468445 -235.44992065]
[-212.82398987 -223.99200439]
[-202.46276855 -213.14556885]
[-192.10156250 -202.29911804]
[-181.74034119 -191.45268250]
[-171.37913513 -180.60624695]
[-161.01791382 -169.75981140]
[-140.78071594 -165.71815491]
[-136.03147888 -144.82440186]
[-125.18503571 -134.46319580]
[-114.33859253 -124.10197449]
[-103.49215698 -113.74076080]
[-92.64572144 -103.37954712]
[-81.79927826 -93.01833344]
[-64.55108643 -89.79219055]
[-59.52249146 -72.07983398]
[-48.51930618 -61.88522720]
[-37.51612091 -51.69062424]
[-26.51293755 -41.49602127]
[-15.50975418 -31.30141830]
[-4.50656939 -21.10681534]
[5.63271618 -22.41312599]
[15.01330853 -17.82460022]
[20.42953300 -8.64039135]
[19.88386154 2.22787046]
[30.57103348 12.75328732]
[41.25820160 23.27870369]
[51.94537354 33.80411911]
[62.63254547 44.32953644]
[73.31971741 54.85495377]
[84.00688171 65.38037109]
[94.69405365 75.90578461]
[105.38122559 86.43119812]
[119.34632111 91.90625000]
[134.33934021 91.44880676]
[149.33236694 90.99136353]
[164.32539368 90.53392029]
[179.31842041 90.07647705]
[194.31143188 89.61903381]
[209.30445862 89.16159058]
[211.78445435 74.31787872]
[217.11296082 60.24331284]
[225.08514404 47.47888947]
[235.39457703 36.51523209]
[247.64500427 27.77375984]
[261.36553955 21.59046936]
[276.02880859 18.20302773]
[291.07119751 17.74164200]
[305.91448975 20.22404671]
[319.98822021 25.55482292]
[332.75134277 33.52907181]
[343.71331787 43.84028244]
[352.45281982 56.09212112]
[358.63388062 69.81365967]
[362.01895142 84.47747803]
[362.47790527 99.51993561]
[359.99310303 114.36284637]
[354.66003418 128.43568420]
[346.68374634 141.19752502]
[336.37075806 152.15783691]
[324.11749268 160.89535522]
[310.39495850 167.07420349]
[295.73059082 170.45689392]
[280.68804932 170.91340637]
[265.84555054 168.42620850]
[251.77357483 163.09086609]
[239.01301575 155.11248779]
[228.05436707 144.79772949]
[219.31884766 132.54306030]
[213.14222717 118.81952667]
[209.76190186 104.15461731]
[194.76887512 104.61206055]
[179.77584839 105.06949615]
[164.78283691 105.52693939]
[149.78981018 105.98438263]
[134.79678345 106.44182587]
[119.80376434 106.89926910]
[116.23680115 113.49675751]
[129.43167114 120.63087463]
[122.29734039 133.82562256]
[109.10289001 126.69172668]
[105.53592682 133.28921509]
[113.36365509 146.08479309]
[121.19137573 158.88035583]
[129.01910400 171.67593384]
[136.84683228 184.47151184]
[144.67454529 197.26708984]
[159.87197876 202.40692139]
[165.19320679 217.54177856]
[156.55625916 231.06149292]
[140.58665466 232.59489441]
[129.53491211 220.96569824]
[131.87896729 205.09480286]
[124.05125427 192.29924011]
[116.22352600 179.50366211]
[108.39580536 166.70808411]
[100.56807709 153.91250610]
[92.74035645 141.11692810]
[78.05648804 144.18351746]
[63.37391663 147.24983215]
[61.32156372 162.10876465]
[59.26921463 176.96768188]
[72.23165894 192.31394958]
[69.77323151 211.94357300]
[53.92309189 223.26428223]
[52.55246735 238.20152283]
[51.18183899 253.13877869]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 205]
[8 204]
[9 203]
[15 200]
[16 199]
[17 198]
[23 131]
[24 130]
[25 129]
[26 128]
[27 127]
[28 126]
[29 125]
[30 124]
[31 123]
[33 119]
[34 118]
[35 117]
[36 116]
[37 115]
[38 114]
[41 112]
[42 111]
[43 110]
[44 109]
[45 108]
[46 107]
[51 105]
[52 104]
[53 103]
[54 102]
[55 101]
[56 100]
[65 99]
[66 98]
[67 97]
[68 96]
[69 95]
[70 94]
[72 92]
[73 91]
[76 88]
[77 87]
[78 86]
[79 85]
[80 84]
[132 175]
[133 174]
[134 173]
[135 172]
[136 171]
[137 170]
[138 169]
[180 196]
[181 195]
[182 194]
[183 193]
[184 192]
[185 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
