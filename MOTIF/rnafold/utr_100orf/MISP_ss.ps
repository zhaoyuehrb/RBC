%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:43:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUGUGCCCAUCGAGGAGUCAGAGUGGAGGCUGCAGACUGUGGAGCCGGGAGCCGGCAGUAAGCCCAGAGGUCUCCACCCCACGGGAGGAAGGCUGAGGCCAAGACCCCGGAAGAGAUGGACCGCGUGACCAGAUACCCCAUCCUGGGCAUCCCUCAGGCACACCGUGGCACCGGCCUGGUGCUGGAUGGAGACACCAGCUACACAUACCAUCUGG\
) } def
/len { sequence length } bind def

/coor [
[81.37786102 139.92361450]
[76.27024078 154.02723694]
[71.16261292 168.13085938]
[66.05499268 182.23448181]
[66.07573700 191.36428833]
[60.76999283 196.50439453]
[55.45873260 210.53260803]
[50.24915314 224.59889221]
[45.14152908 238.70251465]
[50.61544418 253.78282166]
[42.11556244 267.38912964]
[26.16227150 269.08383179]
[14.99356842 257.56692505]
[17.17712593 241.67315674]
[31.03790665 233.59489441]
[36.14553070 219.49127197]
[35.46788406 212.13514709]
[41.43052673 205.22134399]
[46.74179077 191.19314575]
[51.95137024 177.12686157]
[57.05899048 163.02323914]
[62.16661453 148.91961670]
[67.27423859 134.81597900]
[58.09264374 122.95434570]
[43.15901184 124.36381531]
[28.22537804 125.77327728]
[13.29174423 127.18273926]
[-1.64188945 128.59219360]
[-16.57552338 130.00166321]
[-31.50915718 131.41113281]
[-46.44279099 132.82058716]
[-61.37642288 134.23005676]
[-76.24927521 136.17897034]
[-91.04186249 138.66479492]
[-100.21557617 151.25370789]
[-115.25277710 153.56396484]
[-127.19784546 144.74064636]
[-141.99043274 147.22647095]
[-156.78302002 149.71231079]
[-146.24758911 160.38960266]
[-147.87884521 175.30062866]
[-160.47363281 183.44747925]
[-174.74243164 178.82127380]
[-180.16098022 164.83416748]
[-172.73223877 151.80227661]
[-187.66587830 153.21173096]
[-202.59950256 154.62120056]
[-217.53314209 156.03065491]
[-232.46678162 157.44012451]
[-247.66769409 164.94802856]
[-259.09020996 152.41955566]
[-250.21342468 137.97521973]
[-233.87623596 142.50648499]
[-218.94259644 141.09703064]
[-204.00897217 139.68756104]
[-189.07533264 138.27810669]
[-174.14170837 136.86863708]
[-159.26884460 134.91972351]
[-144.47625732 132.43388367]
[-129.68367004 129.94805908]
[-121.27871704 117.70501709]
[-106.31233978 114.97330475]
[-93.52769470 123.87221527]
[-78.73509979 121.38638306]
[-89.27053833 110.70909119]
[-87.63928223 95.79805756]
[-75.04448700 87.65120697]
[-60.77570343 92.27741241]
[-55.35714722 106.26451874]
[-62.78588867 119.29641724]
[-47.85225296 117.88695526]
[-32.91862106 116.47749329]
[-17.98498535 115.06803131]
[-3.05135202 113.65856934]
[11.88228130 112.24910736]
[26.81591606 110.83963776]
[41.74954987 109.43017578]
[56.68318176 108.02071381]
[57.00143814 97.43180847]
[59.81297684 87.46279907]
[64.84095764 78.67773438]
[71.68678284 71.54493713]
[79.85954285 66.41227722]
[74.75192261 52.30865097]
[69.64430237 38.20502853]
[64.53668213 24.10140419]
[49.39954758 22.48011017]
[36.51992035 14.47997475]
[28.42413330 1.73327243]
[26.67272568 -13.20304489]
[31.55987930 -27.36020470]
[42.06562805 -37.94768524]
[36.95800400 -52.05130768]
[31.85038376 -66.15493011]
[18.96324348 -76.29660797]
[21.57011604 -92.48722839]
[36.98927689 -98.07127380]
[49.35881424 -87.30435181]
[45.95400620 -71.26255035]
[51.06163025 -57.15893173]
[56.16925049 -43.05530548]
[71.01818085 -41.65000916]
[83.83715057 -33.90512085]
[92.05590057 -21.31094551]
[93.99942017 -6.33620405]
[89.22911835 8.05584812]
[78.64030457 18.99378204]
[83.74792480 33.09740448]
[88.85554504 47.20103073]
[93.96316528 61.30465317]
[106.31462860 61.34901428]
[118.03799438 65.23789215]
[127.96716309 72.58447266]
[135.11450195 82.65801239]
[138.76910400 94.45650482]
[153.74984741 95.21624756]
[168.73059082 95.97598267]
[183.71133423 96.73571777]
[198.69209290 97.49546051]
[213.67283630 98.25519562]
[224.90591431 77.43311310]
[245.14353943 65.34179688]
[268.63385010 65.31727600]
[288.75183105 77.28019714]
[301.12496948 68.80051422]
[308.13442993 54.61679077]
[323.00686646 53.80422974]
[335.38000488 45.32455063]
[347.75317383 36.84487152]
[348.68402100 23.41074944]
[357.05877686 13.11497974]
[369.64733887 9.57365322]
[381.79470825 13.86359692]
[394.28933716 5.56392908]
[406.78396606 -2.73573804]
[413.99801636 -16.81650162]
[428.88064575 -17.41366959]
[441.37527466 -25.71333694]
[453.86987305 -34.01300430]
[456.74914551 -49.55280685]
[469.82052612 -58.43619156]
[485.32901001 -55.39280319]
[494.07369995 -42.22822952]
[490.86651611 -26.75278091]
[477.61022949 -18.14776421]
[462.16955566 -21.51838303]
[449.67492676 -13.21871662]
[437.18032837 -4.91904926]
[430.85995483 8.56806755]
[415.08361816 9.75888157]
[402.58901978 18.05854988]
[390.09439087 26.35821724]
[387.47442627 42.97275162]
[373.36975098 52.74232101]
[356.23284912 49.21802521]
[343.85968018 57.69770813]
[331.48654175 66.17739105]
[325.36209106 79.75459290]
[309.60464478 81.17367554]
[297.23150635 89.65335083]
[301.41809082 96.24105835]
[304.48086548 103.72982025]
[306.23419189 111.92101288]
[320.69940186 115.89062500]
[335.16461182 119.86024475]
[349.62979126 123.82985687]
[358.72903442 123.08297729]
[364.27490234 127.96305847]
[378.68112183 132.14166260]
[393.08734131 136.32028198]
[408.87344360 131.87834167]
[420.42282104 143.52069092]
[415.85443115 159.27067566]
[399.86785889 162.92605591]
[388.90872192 150.72650146]
[374.50250244 146.54789734]
[360.09628296 142.36927795]
[345.66018677 138.29505920]
[331.19497681 134.32545471]
[316.72976685 130.35583496]
[302.26458740 126.38621521]
[294.51522827 139.22941589]
[304.77078247 150.17582703]
[315.02630615 161.12223816]
[325.28182983 172.06866455]
[335.53738403 183.01507568]
[343.68447876 187.13554382]
[345.86071777 194.19497681]
[355.95672607 205.28871155]
[371.73587036 209.75526428]
[375.49444580 225.71789551]
[363.36593628 236.75559998]
[347.82708740 231.51374817]
[344.86297607 215.38470459]
[334.76699829 204.29096985]
[324.59097290 193.27061462]
[314.33541870 182.32418823]
[304.07989502 171.37777710]
[293.82434082 160.43136597]
[283.56881714 149.48495483]
[273.51126099 153.82733154]
[262.84967041 155.79917908]
[252.12916565 155.35055542]
[241.88671875 152.55401611]
[232.62419128 147.59843445]
[224.78381348 140.77719116]
[218.72711182 132.47106934]
[214.71830750 123.12740326]
[212.91310120 113.23593903]
[197.93234253 112.47620392]
[182.95159912 111.71646881]
[167.97085571 110.95673370]
[152.99011230 110.19699097]
[138.00935364 109.43725586]
[131.29255676 125.53023529]
[117.92910767 137.54724121]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 23]
[2 22]
[3 21]
[4 20]
[6 19]
[7 18]
[8 16]
[9 15]
[24 78]
[25 77]
[26 76]
[27 75]
[28 74]
[29 73]
[30 72]
[31 71]
[32 70]
[33 64]
[34 63]
[37 60]
[38 59]
[39 58]
[45 57]
[46 56]
[47 55]
[48 54]
[49 53]
[83 110]
[84 109]
[85 108]
[86 107]
[92 101]
[93 100]
[94 99]
[115 214]
[116 213]
[117 212]
[118 211]
[119 210]
[120 209]
[124 160]
[125 159]
[127 157]
[128 156]
[129 155]
[133 152]
[134 151]
[135 150]
[137 148]
[138 147]
[139 146]
[163 181]
[164 180]
[165 179]
[166 178]
[168 177]
[169 176]
[170 175]
[182 200]
[183 199]
[184 198]
[185 197]
[186 196]
[188 195]
[189 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
