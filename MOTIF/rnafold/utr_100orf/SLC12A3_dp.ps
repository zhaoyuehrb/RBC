%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:39:45 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SLC12A3)
} def

/sequence { (\
CUGGCCCCUCCCUGGACACCCAGGCGACAAUGGCAGAACUGCCCACAACAGAGACGCCUGGGGACGCCACUUUGUGCAGCGGGCGCUUCACCAUCAGCACACUGCUGAGCAGUGAUGAGCCCUCUCCAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 15 0.015916330 ubox
1 36 0.025161296 ubox
1 79 0.017582980 ubox
2 14 0.015541673 ubox
2 18 0.023379480 ubox
2 35 0.024797626 ubox
2 66 0.022662525 ubox
2 69 0.846167281 ubox
2 78 0.017939869 ubox
2 128 0.048346794 ubox
3 9 0.014030132 ubox
3 10 0.023037857 ubox
3 11 0.082362488 ubox
3 12 0.170869803 ubox
3 13 0.014949383 ubox
3 17 0.026255361 ubox
3 34 0.017819149 ubox
3 58 0.032052037 ubox
3 65 0.030384613 ubox
3 68 0.954753423 ubox
3 71 0.012479334 ubox
3 77 0.016476600 ubox
3 87 0.006900520 ubox
3 127 0.054536449 ubox
4 8 0.015186288 ubox
4 9 0.016422729 ubox
4 10 0.082189390 ubox
4 11 0.169840908 ubox
4 12 0.016051156 ubox
4 34 0.024963795 ubox
4 57 0.032107232 ubox
4 67 0.954956265 ubox
4 70 0.013472612 ubox
4 75 0.006531658 ubox
4 77 0.028425035 ubox
4 80 0.010854795 ubox
4 84 0.012364431 ubox
4 86 0.007485516 ubox
4 126 0.053651107 ubox
5 15 0.023341577 ubox
5 33 0.030393073 ubox
5 56 0.032052702 ubox
5 62 0.003225901 ubox
5 63 0.079548395 ubox
5 66 0.950090173 ubox
5 74 0.006948229 ubox
5 76 0.029433409 ubox
5 79 0.010839525 ubox
5 83 0.012278509 ubox
5 85 0.007488571 ubox
6 14 0.027074578 ubox
6 15 0.323887058 ubox
6 32 0.030348036 ubox
6 61 0.004264059 ubox
6 62 0.108334157 ubox
6 63 0.457316790 ubox
6 82 0.012147500 ubox
6 83 0.007454072 ubox
7 14 0.322062665 ubox
7 15 0.725869125 ubox
7 60 0.003923704 ubox
7 61 0.108342332 ubox
7 62 0.454254748 ubox
7 63 0.090654155 ubox
7 81 0.011852242 ubox
7 82 0.007647644 ubox
8 14 0.728203346 ubox
8 15 0.061387280 ubox
8 53 0.029086691 ubox
8 60 0.103531958 ubox
8 61 0.453000890 ubox
8 62 0.087951271 ubox
8 63 0.040723250 ubox
8 79 0.004049231 ubox
8 81 0.007823853 ubox
9 14 0.055101080 ubox
9 15 0.018814340 ubox
9 16 0.056745256 ubox
9 27 0.408766162 ubox
9 52 0.029167389 ubox
9 54 0.003714931 ubox
9 60 0.094534556 ubox
9 61 0.072173863 ubox
9 62 0.027913483 ubox
9 63 0.013219528 ubox
9 64 0.176444487 ubox
9 78 0.003666923 ubox
10 14 0.023277040 ubox
10 15 0.061091016 ubox
10 24 0.008208322 ubox
10 26 0.450126063 ubox
10 51 0.028991439 ubox
10 53 0.003938901 ubox
10 60 0.041646354 ubox
10 61 0.028359426 ubox
10 62 0.015003364 ubox
10 63 0.177576351 ubox
11 23 0.005926304 ubox
11 24 0.477091121 ubox
11 60 0.013609880 ubox
11 61 0.014771498 ubox
11 62 0.154348968 ubox
11 63 0.011283035 ubox
12 23 0.477822078 ubox
12 60 0.014096799 ubox
12 61 0.126601201 ubox
12 62 0.009336558 ubox
12 63 0.004292777 ubox
12 79 0.020811035 ubox
13 22 0.478179720 ubox
13 60 0.070760150 ubox
13 66 0.010286222 ubox
13 69 0.244027447 ubox
13 78 0.021183299 ubox
13 128 0.037070072 ubox
14 20 0.053449449 ubox
14 21 0.482219128 ubox
14 59 0.010512936 ubox
14 65 0.054932035 ubox
14 68 0.275065372 ubox
14 77 0.021373933 ubox
14 127 0.041846669 ubox
15 19 0.053480806 ubox
15 20 0.480747049 ubox
15 58 0.006336141 ubox
15 67 0.275023534 ubox
15 126 0.041824987 ubox
16 75 0.021359730 ubox
16 125 0.034730067 ubox
17 74 0.021420327 ubox
18 73 0.021121756 ubox
19 61 0.007442877 ubox
19 62 0.861107969 ubox
19 63 0.046440485 ubox
20 60 0.006897633 ubox
20 61 0.867896606 ubox
20 62 0.038343952 ubox
21 60 0.874435243 ubox
21 61 0.027673917 ubox
22 59 0.877640317 ubox
23 58 0.878338609 ubox
24 57 0.878397714 ubox
25 32 0.004113292 ubox
25 56 0.878371826 ubox
26 31 0.006483491 ubox
26 55 0.871141749 ubox
28 60 0.031527998 ubox
29 59 0.029401555 ubox
31 45 0.239809420 ubox
31 47 0.089230064 ubox
31 50 0.422826348 ubox
31 60 0.003292178 ubox
31 128 0.005101367 ubox
32 40 0.003959335 ubox
32 43 0.937659091 ubox
32 44 0.211592540 ubox
32 46 0.047116314 ubox
32 49 0.234485894 ubox
32 58 0.114722598 ubox
32 127 0.005864402 ubox
33 39 0.004844533 ubox
33 42 0.973255540 ubox
33 43 0.150923855 ubox
33 57 0.114940920 ubox
33 126 0.005863971 ubox
34 41 0.984528696 ubox
34 56 0.114781086 ubox
35 40 0.886951130 ubox
35 125 0.007416183 ubox
36 124 0.007636849 ubox
37 123 0.007273331 ubox
39 51 0.115420410 ubox
39 53 0.009265236 ubox
39 79 0.028089224 ubox
40 47 0.006927660 ubox
40 50 0.115809480 ubox
40 52 0.009205954 ubox
40 66 0.005172325 ubox
40 78 0.028341644 ubox
41 46 0.007907199 ubox
41 49 0.115593287 ubox
41 65 0.007760588 ubox
41 77 0.028486067 ubox
41 80 0.005047527 ubox
42 62 0.003380447 ubox
42 63 0.010542582 ubox
42 76 0.028324752 ubox
42 79 0.005045453 ubox
43 61 0.003716412 ubox
43 62 0.010656588 ubox
44 60 0.010064783 ubox
44 61 0.011090905 ubox
44 76 0.006045360 ubox
45 59 0.008959426 ubox
45 75 0.007807530 ubox
46 60 0.016196721 ubox
46 74 0.007971559 ubox
46 76 0.006807214 ubox
47 59 0.014848234 ubox
47 73 0.007819752 ubox
47 75 0.005134028 ubox
48 72 0.006901045 ubox
48 75 0.031182820 ubox
49 60 0.443187361 ubox
49 74 0.031992005 ubox
50 59 0.446536173 ubox
50 71 0.005214373 ubox
50 73 0.032007617 ubox
51 58 0.445765683 ubox
51 70 0.005279803 ubox
51 72 0.032120577 ubox
52 59 0.066010361 ubox
52 71 0.032193049 ubox
53 58 0.067682433 ubox
53 70 0.032141867 ubox
55 66 0.023351241 ubox
56 65 0.023494113 ubox
56 67 0.012184968 ubox
57 63 0.023220368 ubox
57 66 0.012195675 ubox
58 62 0.023058093 ubox
59 69 0.021851137 ubox
59 128 0.025886990 ubox
60 65 0.004534743 ubox
60 68 0.022664497 ubox
60 127 0.029218569 ubox
61 67 0.022629582 ubox
61 68 0.008211417 ubox
61 126 0.029225504 ubox
62 67 0.008323700 ubox
62 68 0.003613183 ubox
62 125 0.029177372 ubox
63 67 0.004153914 ubox
63 70 0.005069584 ubox
63 72 0.003756616 ubox
63 124 0.029255366 ubox
64 71 0.003712432 ubox
64 75 0.013285194 ubox
64 123 0.027043824 ubox
65 74 0.013759039 ubox
65 76 0.028978570 ubox
65 81 0.012936894 ubox
66 73 0.010565916 ubox
66 75 0.029415567 ubox
66 77 0.056338047 ubox
66 80 0.032794908 ubox
67 74 0.029228547 ubox
67 76 0.052377378 ubox
67 79 0.032683972 ubox
68 74 0.041733575 ubox
68 76 0.040756506 ubox
69 73 0.034288950 ubox
69 75 0.046438740 ubox
70 74 0.046548348 ubox
70 79 0.009319225 ubox
71 78 0.008887105 ubox
73 128 0.043523186 ubox
74 80 0.010746775 ubox
74 127 0.048971397 ubox
74 129 0.969188253 ubox
75 79 0.010062506 ubox
75 128 0.984457800 ubox
76 127 0.988395081 ubox
78 123 0.003802550 ubox
78 125 0.971370353 ubox
79 124 0.993219995 ubox
81 122 0.998871644 ubox
81 123 0.031151185 ubox
81 124 0.004249095 ubox
82 121 0.999344969 ubox
82 122 0.032215559 ubox
82 123 0.003984651 ubox
83 120 0.999335635 ubox
83 121 0.032135785 ubox
83 122 0.004074673 ubox
84 119 0.999082681 ubox
85 98 0.008978214 ubox
85 116 0.008365495 ubox
85 120 0.035074848 ubox
86 97 0.009015072 ubox
86 119 0.035447798 ubox
87 96 0.008887240 ubox
87 115 0.019166914 ubox
87 118 0.035237203 ubox
88 114 0.004458199 ubox
88 115 0.992165272 ubox
88 117 0.018207801 ubox
88 118 0.008004661 ubox
89 114 0.999792346 ubox
89 117 0.008233963 ubox
90 113 0.999460581 ubox
90 116 0.008050064 ubox
91 112 0.996424392 ubox
92 114 0.007856827 ubox
93 113 0.007834267 ubox
94 108 0.995417945 ubox
94 112 0.004345013 ubox
95 107 0.999899263 ubox
95 117 0.003172905 ubox
96 106 0.999699875 ubox
97 105 0.999935834 ubox
98 104 0.999717851 ubox
99 103 0.810203608 ubox
100 114 0.009582608 ubox
101 113 0.009652628 ubox
102 112 0.009683336 ubox
103 111 0.009691367 ubox
104 110 0.009693827 ubox
105 109 0.009623365 ubox
117 126 0.005906774 ubox
118 125 0.005993771 ubox
119 124 0.005865288 ubox
2 69 0.9500000 lbox
3 68 0.9500000 lbox
4 67 0.9500000 lbox
5 66 0.9500000 lbox
7 15 0.9500000 lbox
8 14 0.9500000 lbox
19 62 0.9500000 lbox
20 61 0.9500000 lbox
21 60 0.9500000 lbox
22 59 0.9500000 lbox
23 58 0.9500000 lbox
24 57 0.9500000 lbox
25 56 0.9500000 lbox
26 55 0.9500000 lbox
32 43 0.9500000 lbox
33 42 0.9500000 lbox
34 41 0.9500000 lbox
35 40 0.9500000 lbox
74 129 0.9500000 lbox
75 128 0.9500000 lbox
76 127 0.9500000 lbox
78 125 0.9500000 lbox
79 124 0.9500000 lbox
81 122 0.9500000 lbox
82 121 0.9500000 lbox
83 120 0.9500000 lbox
84 119 0.9500000 lbox
88 115 0.9500000 lbox
89 114 0.9500000 lbox
90 113 0.9500000 lbox
91 112 0.9500000 lbox
94 108 0.9500000 lbox
95 107 0.9500000 lbox
96 106 0.9500000 lbox
97 105 0.9500000 lbox
98 104 0.9500000 lbox
99 103 0.9500000 lbox
showpage
end
%%EOF
