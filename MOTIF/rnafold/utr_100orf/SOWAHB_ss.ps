%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:16:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCAGGGUUUCCUCUGGCUGGGGAGAGCCCCGGGAGGGCGAGACUCAGACACCUCUGGGGCGGAGGACAAGGCAGCGAUGGCCCGAGAGCUGAGCCAGGAGGCACUACUGGACUUUCUGUGCCAGGCUGGGGGCCGCGUGACCAACGCUGCCUUGCUGAGCCACUUCAAGAGCUUUC\
) } def
/len { sequence length } bind def

/coor [
[-38.31171417 286.30606079]
[-50.22027969 288.44366455]
[-62.26125336 287.41946411]
[-73.61054993 283.31106567]
[-83.49336243 276.40695190]
[-95.24437714 285.72967529]
[-106.99539185 295.05242920]
[-118.74640656 304.37518311]
[-130.49742126 313.69793701]
[-142.24844360 323.02069092]
[-153.99945068 332.34341431]
[-165.66773987 341.76950073]
[-177.25239563 351.29818726]
[-188.83705139 360.82687378]
[-200.42170715 370.35556030]
[-202.45335388 383.11267090]
[-212.32376099 390.80953979]
[-224.39195251 389.74041748]
[-236.14295959 399.06317139]
[-247.89398193 408.38592529]
[-259.64498901 417.70867920]
[-271.39599609 427.03140259]
[-283.14703369 436.35415649]
[-288.67031860 451.79519653]
[-304.85055542 454.46578979]
[-315.04287720 441.61868286]
[-308.76232910 426.46987915]
[-292.46978760 424.60314941]
[-280.71875000 415.28039551]
[-268.96774292 405.95764160]
[-257.21673584 396.63488770]
[-245.46571350 387.31216431]
[-233.71469116 377.98941040]
[-228.16847229 361.35342407]
[-209.95037842 358.77090454]
[-198.36573792 349.24221802]
[-186.78108215 339.71353149]
[-175.19642639 330.18484497]
[-172.01834106 323.48721313]
[-163.32220459 320.59240723]
[-151.57118225 311.26965332]
[-139.82017517 301.94692993]
[-128.06915283 292.62417603]
[-116.31813812 283.30142212]
[-104.56712341 273.97866821]
[-92.81610870 264.65591431]
[-98.39140320 247.58285522]
[-97.01374054 229.64155579]
[-88.86664581 213.55957031]
[-75.16474915 201.79168701]
[-57.97275925 196.14523315]
[-39.89435196 197.50254822]
[-23.67786407 205.68319702]
[-12.61373806 195.55476379]
[-1.54961097 185.42634583]
[9.51451588 175.29791260]
[20.48883247 165.07223511]
[31.37248611 154.75012207]
[42.25613785 144.42800903]
[53.13978958 134.10588074]
[57.05004883 119.73371887]
[72.38748932 115.85125732]
[83.27114105 105.52914429]
[87.65196991 87.43209076]
[105.82351685 83.37133026]
[116.33610535 72.67153931]
[120.13387299 64.33008575]
[127.12990570 61.87773895]
[137.82969666 51.36515045]
[148.52947998 40.85256195]
[159.22926331 30.33997154]
[169.92906189 19.82738113]
[180.62884521 9.31479073]
[191.32862854 -1.19779873]
[202.02842712 -11.71038818]
[212.72821045 -22.22297859]
[223.42799377 -32.73556900]
[227.05183411 -44.10527039]
[236.92425537 -48.01142120]
[246.03816223 -59.92514038]
[255.15206909 -71.83885956]
[264.26599121 -83.75257874]
[273.37988281 -95.66629028]
[282.49380493 -107.58000946]
[279.18997192 -120.65616608]
[283.96002197 -133.06309509]
[294.84896851 -140.34150696]
[307.74758911 -140.01470947]
[317.07034302 -151.76573181]
[326.39306641 -163.51673889]
[335.71582031 -175.26776123]
[334.10043335 -190.76060486]
[343.72244263 -202.54499817]
[358.50244141 -203.98954773]
[367.82519531 -215.74055481]
[377.04388428 -227.57339478]
[386.15780640 -239.48710632]
[395.27169800 -251.40081787]
[404.38562012 -263.31454468]
[413.49951172 -275.22827148]
[422.61343384 -287.14196777]
[431.72732544 -299.05569458]
[425.75488281 -313.20578003]
[427.67355347 -328.44436646]
[436.96722412 -340.67233276]
[451.13598633 -346.60040283]
[466.36846924 -344.63397217]
[478.56723022 -335.30200195]
[484.45086670 -321.11474609]
[482.43670654 -305.88848877]
[473.06655884 -293.71905518]
[458.86093140 -287.87991333]
[443.64105225 -289.94177246]
[434.52716064 -278.02807617]
[425.41323853 -266.11434937]
[416.29931641 -254.20063782]
[407.18542480 -242.28691101]
[398.07150269 -230.37319946]
[388.95761108 -218.45947266]
[387.38607788 -211.21455383]
[379.57620239 -206.41781616]
[370.25347900 -194.66679382]
[372.20825195 -179.94557190]
[362.92105103 -167.89556885]
[347.46682739 -165.94500732]
[338.14410400 -154.19400024]
[328.82135010 -142.44297791]
[319.49859619 -130.69197083]
[322.14257812 -114.09705353]
[311.77389526 -100.44698334]
[294.40750122 -98.46610260]
[285.29360962 -86.55238342]
[276.17968750 -74.63866425]
[267.06579590 -62.72494888]
[257.95187378 -50.81122971]
[248.83796692 -38.89751434]
[263.64907837 -41.27047348]
[277.54360962 -35.61874390]
[286.49301147 -23.58096886]
[287.90255737 -8.64734077]
[281.36352539 4.85233116]
[268.77185059 13.00399685]
[253.77830505 13.44419003]
[240.73008728 6.04528046]
[233.41033936 -7.04751444]
[233.94058228 -22.03577995]
[223.24079895 -11.52319050]
[212.54101562 -1.01060104]
[201.84121704 9.50198841]
[191.14143372 20.01457787]
[180.44165039 30.52716827]
[169.74186707 41.03975677]
[159.04206848 51.55234909]
[148.34228516 62.06493759]
[137.64250183 72.57752991]
[127.03589630 83.18412781]
[116.52330780 93.88391876]
[117.19480896 103.84249115]
[112.34803009 112.56790924]
[103.53842926 117.25994110]
[93.59326172 116.41279602]
[82.70960999 126.73490906]
[78.02087402 141.84538269]
[63.46190643 144.98953247]
[52.57825470 155.31166077]
[41.69460297 165.63377380]
[30.81095123 175.95588684]
[26.72117043 184.15811157]
[19.64294624 186.36203003]
[8.57881927 196.49046326]
[-2.48530793 206.61889648]
[-13.54943466 216.74732971]
[-8.30812645 227.76403809]
[-6.10734081 239.74919128]
[-7.09044600 251.88050842]
[-11.18263817 263.32769775]
[-18.09657478 273.30923462]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 46]
[6 45]
[7 44]
[8 43]
[9 42]
[10 41]
[11 40]
[12 38]
[13 37]
[14 36]
[15 35]
[18 33]
[19 32]
[20 31]
[21 30]
[22 29]
[23 28]
[53 172]
[54 171]
[55 170]
[56 169]
[57 167]
[58 166]
[59 165]
[60 164]
[62 162]
[63 161]
[65 157]
[66 156]
[68 155]
[69 154]
[70 153]
[71 152]
[72 151]
[73 150]
[74 149]
[75 148]
[76 147]
[77 146]
[79 136]
[80 135]
[81 134]
[82 133]
[83 132]
[84 131]
[88 128]
[89 127]
[90 126]
[91 125]
[94 122]
[95 121]
[96 119]
[97 118]
[98 117]
[99 116]
[100 115]
[101 114]
[102 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
