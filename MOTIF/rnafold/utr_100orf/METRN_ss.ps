%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:47:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUUCGCCGGGGCCGGGCGGCCGGCGCCCCCGGCUGCUCCCGCCGCCGCCCGGACCCGCGCCCCGCCGGGGCAGCGGUGGUGAGAGCCCCGACUCCCCGGACGCCGCCCGCCGUGCCAUGGGGUUCCCGGCCGCGGCGCUGCUCUGCGCGCUGUGCUGCGGCCUCCUGGCCCCGGCUGCCCGCGCCGGCUACUCCGAGGAGCGCUGCAGCUGGAGGG\
) } def
/len { sequence length } bind def

/coor [
[195.82316589 471.79089355]
[192.78692627 464.26022339]
[192.08587646 456.13696289]
[193.80113220 448.13150024]
[197.80165100 440.94964600]
[203.75402832 435.23056030]
[198.87277222 421.04699707]
[193.99151611 406.86343384]
[189.11026001 392.67990112]
[184.22901917 378.49633789]
[172.77117920 368.97964478]
[175.59654236 353.41275024]
[170.71528625 339.22918701]
[165.56906128 333.93014526]
[165.86749268 324.80593872]
[161.19114685 310.55349731]
[156.51478577 296.30108643]
[151.83843994 282.04864502]
[147.16207886 267.79620361]
[142.48573303 253.54379272]
[137.80938721 239.29135132]
[133.13302612 225.03892517]
[128.45668030 210.78649902]
[123.78031921 196.53407288]
[112.46082306 186.85325623]
[115.51020813 171.32870483]
[110.83385468 157.07627869]
[106.15750885 142.82385254]
[81.85579681 139.27575684]
[63.40081787 123.07155609]
[56.73945236 99.43285370]
[42.00191116 96.63912201]
[27.26437187 93.84539032]
[16.18832397 100.44810486]
[3.97357702 97.82128906]
[-2.94924521 87.90554810]
[-17.64499474 84.89973450]
[-32.34074402 81.89392090]
[-47.03649521 78.88810730]
[-62.10721588 83.70307922]
[-73.02587128 73.57232666]
[-87.72162628 70.56651306]
[-102.41737366 67.56069946]
[-117.11312866 64.55488586]
[-131.80886841 61.54906464]
[-146.50462341 58.54325104]
[-161.20037842 55.53743362]
[-175.89611816 52.53162003]
[-190.59187317 49.52580261]
[-198.62026978 59.09991074]
[-209.89112854 64.32372284]
[-222.24140930 64.26229095]
[-233.32942200 58.98859787]
[-241.07888794 49.55807114]
[-244.06767273 37.79796600]
[-258.67068481 34.36989975]
[-273.27371216 30.94182968]
[-287.87673950 27.51375961]
[-296.94110107 28.59902763]
[-302.66476440 23.92964172]
[-317.21688843 20.29149246]
[-334.04956055 22.31561661]
[-340.65432739 6.70109320]
[-327.47842407 -3.96809101]
[-313.57873535 5.73938417]
[-299.02661133 9.37753391]
[-284.44866943 12.91073513]
[-269.84564209 16.33880424]
[-255.24263000 19.76687241]
[-240.63960266 23.19494247]
[-227.81504822 11.04803467]
[-210.10981750 9.01717472]
[-194.59640503 18.10375595]
[-187.58605957 34.83005142]
[-172.89030457 37.83586884]
[-158.19456482 40.84168625]
[-143.49880981 43.84749985]
[-128.80305481 46.85331726]
[-114.10730743 49.85913086]
[-99.41156006 52.86494827]
[-84.71581268 55.87076569]
[-70.02005768 58.87657928]
[-56.00047684 53.84660721]
[-44.03067780 64.19235229]
[-29.33493042 67.19817352]
[-14.63917923 70.20398712]
[0.05657069 73.20980072]
[16.38413429 66.77120972]
[30.05810356 79.10784912]
[44.79564285 81.90158081]
[59.53318405 84.69531250]
[64.79626465 74.85057831]
[72.40310669 66.68021393]
[81.84727478 60.72818756]
[92.50000000 57.39076614]
[92.50000000 42.39076614]
[92.50000000 27.39076805]
[92.50000000 12.39076710]
[92.28384399 -2.60767531]
[91.85157013 -17.60144615]
[88.47762299 -26.08417320]
[91.52268219 -32.81405258]
[91.30651855 -47.81249619]
[91.09036255 -62.81093979]
[78.32955933 -71.63938141]
[73.22686005 -86.29346466]
[77.74436188 -101.13838959]
[90.14499664 -110.46598053]
[105.66046143 -110.68959045]
[118.32474518 -101.72323608]
[123.26817322 -87.01465607]
[118.58989716 -72.21961212]
[106.08880615 -63.02709579]
[106.30496216 -48.02865219]
[106.52111816 -33.03020859]
[106.84534454 -18.03371429]
[107.27761078 -3.03994465]
[110.07019806 0.82855082]
[110.46575928 6.49123478]
[107.50000000 12.39076710]
[107.50000000 27.39076805]
[107.50000000 42.39076614]
[107.50000000 57.39076614]
[112.53273010 58.59073257]
[117.38623047 60.38288498]
[121.99109650 62.74160004]
[126.28147125 65.63314056]
[130.19599915 69.01615143]
[133.67869568 72.84226227]
[146.81077576 65.59323883]
[159.94285583 58.34421158]
[173.07493591 51.09518814]
[186.20703125 43.84616089]
[199.33911133 36.59713745]
[212.47119141 29.34811020]
[225.60327148 22.09908485]
[238.73536682 14.85005951]
[251.86744690 7.60103464]
[264.99954224 0.35200897]
[273.34201050 -13.09097004]
[288.22357178 -12.46786594]
[301.35565186 -19.71689034]
[304.18872070 -35.09569931]
[316.27716064 -45.01557159]
[331.91314697 -44.79265213]
[343.71386719 -34.53219604]
[346.10739136 -19.07887459]
[337.96353149 -5.72927570]
[323.12762451 -0.78667080]
[308.60467529 -6.58480692]
[295.47259521 0.66421831]
[288.06942749 13.58869839]
[272.24856567 13.48409271]
[259.11645508 20.73311806]
[245.98439026 27.98214340]
[232.85229492 35.23117065]
[219.72021484 42.48019409]
[206.58813477 49.72922134]
[193.45605469 56.97824478]
[180.32395935 64.22727203]
[167.19187927 71.47629547]
[154.05979919 78.72531891]
[140.92771912 85.97434998]
[143.21398926 97.91476440]
[142.08799744 110.01983643]
[137.63865662 121.33372498]
[130.21730042 130.96305847]
[120.40993500 138.14749146]
[125.08628845 152.39991760]
[129.76263428 166.65235901]
[141.41662598 177.35260010]
[138.03274536 191.85771179]
[142.70910645 206.11015320]
[147.38545227 220.36257935]
[152.06181335 234.61500549]
[156.73815918 248.86743164]
[161.41452026 263.11987305]
[166.09086609 277.37228394]
[170.76721191 291.62472534]
[175.44357300 305.87713623]
[180.11991882 320.12957764]
[184.89884949 334.34793091]
[189.78010559 348.53149414]
[201.58706665 359.06268311]
[198.41258240 373.61508179]
[203.29382324 387.79864502]
[208.17507935 401.98220825]
[213.05633545 416.16577148]
[217.93757629 430.34930420]
[238.89543152 438.50305176]
[246.84306335 459.24383545]
[236.95011902 478.82080078]
[243.03799438 492.52981567]
[249.12588501 506.23886108]
[255.21376038 519.94787598]
[261.55346680 526.51666260]
[261.28900146 533.89862061]
[267.17871094 547.69396973]
[281.56970215 553.65527344]
[287.34616089 567.72961426]
[281.57427979 581.41247559]
[287.46398926 595.20782471]
[299.24389648 607.40087891]
[290.78842163 622.09576416]
[274.32705688 618.03869629]
[273.66864014 601.09753418]
[267.77893066 587.30218506]
[253.90464783 582.00695801]
[247.73513794 568.10040283]
[253.38336182 553.58367920]
[247.49366760 539.78833008]
[241.50473022 526.03576660]
[235.41683960 512.32672119]
[229.32896423 498.61770630]
[223.24108887 484.90866089]
[215.25625610 484.91735840]
[207.58659363 482.57785034]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 189]
[7 188]
[8 187]
[9 186]
[10 185]
[12 183]
[13 182]
[15 181]
[16 180]
[17 179]
[18 178]
[19 177]
[20 176]
[21 175]
[22 174]
[23 173]
[24 172]
[26 170]
[27 169]
[28 168]
[31 91]
[32 90]
[33 89]
[36 87]
[37 86]
[38 85]
[39 84]
[41 82]
[42 81]
[43 80]
[44 79]
[45 78]
[46 77]
[47 76]
[48 75]
[49 74]
[55 70]
[56 69]
[57 68]
[58 67]
[60 66]
[61 65]
[95 123]
[96 122]
[97 121]
[98 120]
[99 117]
[100 116]
[102 115]
[103 114]
[104 113]
[129 163]
[130 162]
[131 161]
[132 160]
[133 159]
[134 158]
[135 157]
[136 156]
[137 155]
[138 154]
[139 153]
[141 151]
[142 150]
[192 215]
[193 214]
[194 213]
[195 212]
[197 211]
[198 210]
[201 207]
[202 206]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
