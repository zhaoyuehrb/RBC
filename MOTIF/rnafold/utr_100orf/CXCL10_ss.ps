%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:46:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUGCAGAUAAAUAUGGCACACUAGCCCCACGUUUUCUGAGACAUUCCUCAAUUGCUUAGACAUAUUCUGAGCCUACAGCAGAGGAACCUCCAGUCUCAGCACCAUGAAUCAAACUGCCAUUCUGAUUUGCUGCCUUAUCUUUCUGACUCUAAGUGGCAUUCAAGGAGUACCUCUCUCUAGAACUGUACGCUGUACCUGCAUCA\
) } def
/len { sequence length } bind def

/coor [
[109.67479706 234.70646667]
[101.92325592 221.12530518]
[104.76586914 205.74826050]
[116.86045837 195.83589172]
[116.86045837 180.83589172]
[116.86045837 165.83589172]
[116.86045837 150.83589172]
[116.86045837 135.83589172]
[109.79766846 133.31259155]
[104.75105286 147.43815613]
[99.70443726 161.56372070]
[94.65758514 175.68920898]
[80.53218842 170.64212036]
[85.57887268 156.51710510]
[90.62548828 142.39154053]
[95.67210388 128.26597595]
[88.60932159 125.74266052]
[79.10447693 137.34687805]
[69.59963226 148.95111084]
[71.41291809 164.65103149]
[61.52825928 176.98265076]
[45.81004715 178.62985229]
[33.58361435 168.61537170]
[32.10269165 152.88061523]
[42.24588394 140.76074219]
[57.99541092 139.44625854]
[67.50025177 127.84204102]
[77.00509644 116.23782349]
[73.18925476 109.78108978]
[60.27579880 117.41277313]
[47.36233902 125.04445648]
[34.44887924 132.67614746]
[21.53529549 140.30760193]
[13.90404129 127.39389801]
[26.81719780 119.76268005]
[39.73065567 112.13099670]
[52.64411545 104.49931335]
[65.55757141 96.86763000]
[61.74173355 90.41090393]
[46.99221420 93.14068604]
[32.24269485 95.87046814]
[17.49317932 98.60025787]
[8.74586391 111.76308441]
[-6.76323509 114.80337524]
[-19.83284569 105.91738892]
[-22.70899773 90.37700653]
[-13.68532372 77.40207672]
[1.88459218 74.69039154]
[14.76339436 83.85073853]
[29.51291275 81.12095642]
[44.26243210 78.39116669]
[59.01194763 75.66138458]
[59.86791611 68.21038818]
[47.81819916 59.27706528]
[61.57985306 53.30840302]
[62.43582153 45.85740662]
[48.68956757 39.85403442]
[34.94331360 33.85066223]
[21.19705772 27.84729195]
[7.45080328 21.84391975]
[-6.29545164 15.84054756]
[-20.04170609 9.83717537]
[-35.44260788 14.33070469]
[-48.47458649 4.97404337]
[-49.14062119 -11.05517864]
[-36.92979050 -21.46071434]
[-21.20919800 -18.26032639]
[-14.03833389 -3.90907979]
[-0.29207948 2.09429216]
[13.45417500 8.09766483]
[27.20042992 14.10103607]
[40.94668579 20.10440826]
[54.69293976 26.10778046]
[68.43919373 32.11115265]
[83.16747284 29.26898003]
[93.69288635 18.58181000]
[104.21829987 7.89464045]
[108.38915253 -7.36689997]
[122.83245850 -11.00558090]
[133.35787964 -21.69275093]
[137.15199280 -30.00637627]
[144.12623596 -32.46110535]
[154.81340027 -42.98652267]
[165.50057983 -53.51194000]
[176.18774414 -64.03735352]
[186.87490845 -74.56277466]
[185.42671204 -87.95609283]
[191.86386108 -99.56797028]
[203.63961792 -105.26658630]
[216.35589600 -103.17257690]
[227.20233154 -113.53379059]
[238.04876709 -123.89500427]
[248.89520264 -134.25622559]
[241.57780457 -148.89962769]
[240.76556396 -165.93124390]
[247.14138794 -182.47763062]
[260.13031006 -195.52973938]
[277.91357422 -202.48648071]
[278.14233398 -217.48474121]
[278.37106323 -232.48298645]
[267.18896484 -243.65150452]
[267.26287842 -259.45562744]
[278.54898071 -270.51904297]
[294.35144043 -270.27801514]
[305.29492188 -258.87557983]
[304.88684082 -243.07655334]
[293.36932373 -232.25424194]
[293.14059448 -217.25598145]
[292.91183472 -202.25773621]
[299.30963135 -198.34387207]
[306.70092773 -211.39640808]
[310.61828613 -225.87585449]
[325.58206177 -226.91749573]
[331.46777344 -213.12045288]
[320.36044312 -203.04017639]
[312.10519409 -190.51614380]
[318.50299072 -186.60227966]
[331.75195312 -193.63537598]
[345.00094604 -200.66847229]
[358.24993896 -207.70156860]
[371.49893188 -214.73466492]
[384.74789429 -221.76776123]
[397.99688721 -228.80085754]
[402.72222900 -243.64366150]
[416.25878906 -250.58747864]
[430.38000488 -245.99111938]
[443.62899780 -253.02421570]
[440.23437500 -267.72589111]
[440.76147461 -282.80514526]
[445.17434692 -297.23391724]
[453.17208862 -310.02838135]
[464.20947266 -320.31619263]
[477.53387451 -327.39590454]
[492.23684692 -330.78485107]
[507.31591797 -330.25192261]
[521.74298096 -325.83349609]
[534.53436279 -317.83078003]
[544.81787109 -306.78945923]
[551.89245605 -293.46231079]
[555.27575684 -278.75802612]
[554.73699951 -263.67916870]
[550.31298828 -249.25381470]
[542.30535889 -236.46554565]
[531.26000977 -226.18624878]
[517.93017578 -219.11682129]
[503.22457886 -215.73924255]
[488.14593506 -216.28379822]
[473.72229004 -220.71337891]
[460.93710327 -228.72596741]
[450.66207886 -239.77522278]
[437.41308594 -232.74212646]
[433.30780029 -218.47039795]
[419.97164917 -211.14910889]
[405.02996826 -215.55186462]
[391.78100586 -208.51878357]
[378.53201294 -201.48568726]
[365.28302002 -194.45259094]
[352.03405762 -187.41949463]
[338.78506470 -180.38639832]
[325.53607178 -173.35330200]
[327.69522095 -153.52943420]
[321.55117798 -135.18293762]
[308.69976807 -121.52324677]
[291.86022949 -114.71986389]
[274.31146240 -115.56488800]
[259.25640869 -123.40978241]
[248.40998840 -113.04856873]
[237.56355286 -102.68735504]
[226.71710205 -92.32614136]
[227.05233765 -75.51345062]
[214.88594055 -63.42084503]
[197.40032959 -63.87560272]
[186.71316528 -53.35018539]
[176.02598572 -42.82476807]
[165.33882141 -32.29935455]
[154.65165710 -21.77393723]
[144.04504395 -11.16733456]
[133.51963806 -0.48016432]
[130.10163879 14.01695728]
[114.90547180 18.42005730]
[104.38005829 29.10722733]
[93.85463715 39.79439545]
[119.10740662 41.48011398]
[141.88339233 53.47245407]
[158.09811401 74.01593018]
[164.68556213 99.79032898]
[160.17297363 126.44527435]
[166.38526917 140.09838867]
[172.59757996 153.75148010]
[178.80987549 167.40458679]
[190.87313843 179.31736755]
[182.76535034 194.20697021]
[166.21318054 190.53790283]
[165.15676880 173.61689758]
[158.94447327 159.96379089]
[152.73216248 146.31068420]
[146.51986694 132.65757751]
[131.86045837 135.83589172]
[131.86045837 150.83589172]
[131.86045837 165.83589172]
[131.86045837 180.83589172]
[131.86045837 195.83589172]
[143.95503235 205.74826050]
[146.79765320 221.12530518]
[139.04611206 234.70646667]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 202]
[5 201]
[6 200]
[7 199]
[8 198]
[17 28]
[18 27]
[19 26]
[39 52]
[40 51]
[41 50]
[42 49]
[56 74]
[57 73]
[58 72]
[59 71]
[60 70]
[61 69]
[62 68]
[75 182]
[76 181]
[77 180]
[79 178]
[80 177]
[82 176]
[83 175]
[84 174]
[85 173]
[86 172]
[90 169]
[91 168]
[92 167]
[93 166]
[98 109]
[99 108]
[100 107]
[117 160]
[118 159]
[119 158]
[120 157]
[121 156]
[122 155]
[123 154]
[126 151]
[127 150]
[187 197]
[188 196]
[189 195]
[190 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
