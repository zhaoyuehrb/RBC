%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:25:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGGCUCCUGCACGGCGCGGCUCGGCUCAUGCCCCCGGGCGCGGGGCACACAGGCCGGCCGGCAGCCGCUGGGAAAUAGGCCCCCGGGGGCGGUGGCGGCGGCGGGGCCAUGGCGCGGAGACCCCGGGCGCCGGCCGCCUCCGGGGAGGAGUUCUCCUUCGUCAGCCCGCUGGUGAAAUACCUGCUCUUCUUCUUCAACAUGCUCUUCU\
) } def
/len { sequence length } bind def

/coor [
[107.35169983 170.40942383]
[120.41873932 177.77905273]
[111.96894073 165.38546753]
[103.51913452 152.99189758]
[95.06933594 140.59831238]
[80.73574066 136.17698669]
[66.77263641 141.65708923]
[52.80953217 147.13720703]
[38.84642410 152.61732483]
[24.88331985 158.09744263]
[19.01925659 169.58607483]
[7.27592230 173.86279297]
[-3.86419225 169.14726257]
[-17.90771484 174.41789246]
[-31.95123863 179.68850708]
[-45.99476242 184.95913696]
[-59.99846649 190.33465576]
[-73.96157074 195.81477356]
[-87.88330078 201.39916992]
[-101.76286316 207.08755493]
[-115.64242554 212.77593994]
[-122.39694977 218.92643738]
[-129.77241516 218.44387817]
[-143.73551941 223.92399597]
[-157.69863892 229.40411377]
[-171.66174316 234.88423157]
[-185.62484741 240.36434937]
[-192.00814819 254.57318115]
[-206.24679565 259.93188477]
[-219.75341797 253.75881958]
[-233.71652222 259.23892212]
[-244.85989380 273.89819336]
[-262.09744263 270.60858154]
[-275.97702026 276.29696655]
[-289.85659790 281.98535156]
[-303.73614502 287.67370605]
[-317.61572266 293.36209106]
[-327.21395874 306.65893555]
[-343.49880981 304.72604370]
[-349.71777344 289.55184937]
[-339.47335815 276.74624634]
[-323.30410767 279.48254395]
[-309.42453003 273.79415894]
[-295.54495239 268.10577393]
[-281.66540527 262.41738892]
[-267.78582764 256.72900391]
[-262.82693481 245.69508362]
[-251.30955505 240.84263611]
[-239.19664001 245.27583313]
[-225.23352051 239.79571533]
[-219.53123474 226.08369446]
[-205.44871521 220.32716370]
[-191.10496521 226.40122986]
[-177.14184570 220.92112732]
[-163.17874146 215.44100952]
[-149.21563721 209.96089172]
[-135.25253296 204.48077393]
[-121.33081055 198.89637756]
[-107.45124817 193.20799255]
[-93.57167816 187.51960754]
[-88.57421112 182.07389832]
[-79.44168854 181.85165405]
[-65.47858429 176.37155151]
[-60.40020370 171.00120544]
[-51.26538467 170.91560364]
[-37.22185898 165.64498901]
[-23.17833710 160.37435913]
[-9.13481426 155.10374451]
[1.26371253 140.96775818]
[19.40320396 144.13433838]
[33.36631012 138.65422058]
[47.32941437 133.17410278]
[61.29252243 127.69399261]
[75.25563049 122.21387482]
[60.33155441 120.70655823]
[48.13757706 111.97117615]
[41.90907288 98.32544708]
[43.29862595 83.38995361]
[51.93755341 71.12744904]
[65.53372192 64.79150391]
[80.47971344 66.06320190]
[92.81130219 74.60668945]
[96.80185699 60.14724731]
[100.79241180 45.68780518]
[104.78295898 31.22836113]
[108.77351379 16.76891708]
[112.76406860 2.30947471]
[116.75461578 -12.14996815]
[120.74517059 -26.60941124]
[124.73572540 -41.06885529]
[128.72627258 -55.52829742]
[132.71682739 -69.98773956]
[136.70738220 -84.44718170]
[140.69793701 -98.90662384]
[139.40663147 -105.39204407]
[141.30062866 -110.75122833]
[145.03019714 -113.73552704]
[149.45152283 -128.06912231]
[153.87284851 -142.40270996]
[158.29417419 -156.73631287]
[162.71549988 -171.06990051]
[158.20222473 -188.92202759]
[171.52159119 -200.34786987]
[175.72799683 -214.74598694]
[179.93441772 -229.14411926]
[184.14082336 -243.54225159]
[188.34722900 -257.94036865]
[192.22952271 -272.42926025]
[195.78572083 -287.00161743]
[186.38598633 -299.49877930]
[187.27000427 -315.11135864]
[198.02037048 -326.46755981]
[213.56109619 -328.20535278]
[226.55432129 -319.50421143]
[230.86505127 -304.47250366]
[224.45787048 -290.20779419]
[210.35807800 -283.44540405]
[206.80186462 -268.87304688]
[208.31121826 -265.68569946]
[208.35127258 -261.60873413]
[206.52064514 -257.34097290]
[202.74536133 -253.73396301]
[198.53895569 -239.33583069]
[194.33253479 -224.93771362]
[190.12612915 -210.53958130]
[185.91972351 -196.14144897]
[191.45455933 -185.38487244]
[188.06738281 -173.35478210]
[177.04910278 -166.64857483]
[172.62777710 -152.31497192]
[168.20645142 -137.98138428]
[163.78511047 -123.64779663]
[159.36378479 -109.31420135]
[155.15737915 -94.91607666]
[151.16682434 -80.45662689]
[147.17626953 -65.99718475]
[143.18571472 -51.53774261]
[139.19515991 -37.07830048]
[135.20462036 -22.61885834]
[131.21406555 -8.15941525]
[127.22351074 6.30002737]
[123.23295593 20.75946999]
[119.24240112 35.21891403]
[115.25185394 49.67835617]
[111.26129913 64.13780212]
[107.27074432 78.59724426]
[117.22404480 89.81917572]
[132.05650330 87.58354187]
[146.88896179 85.34790802]
[161.72143555 83.11227417]
[174.19845581 72.47010803]
[189.56077576 78.20869446]
[192.00494385 94.42467499]
[179.01660156 104.43643951]
[163.95706177 97.94474030]
[149.12460327 100.18037415]
[134.29214478 102.41600800]
[119.45967865 104.65164185]
[116.46048737 111.52585602]
[131.36618042 109.84649658]
[140.27331543 121.91559601]
[134.27462769 135.66389465]
[119.36889648 137.34292603]
[110.46210480 125.27429199]
[107.46292114 132.14851379]
[115.91271973 144.54208374]
[124.36251831 156.93566895]
[132.81231689 169.32925415]
[143.49795532 179.85621643]
[156.01655579 188.11967468]
[171.79626465 189.26480103]
[178.15565491 202.73356628]
[190.67425537 210.99702454]
[203.19285583 219.26046753]
[215.71145630 227.52392578]
[232.26127625 231.20355225]
[233.30691528 248.12521362]
[217.33599854 253.81437683]
[207.44799805 240.04252625]
[194.92939758 231.77906799]
[182.41079712 223.51562500]
[169.89219666 215.25216675]
[155.00790405 214.69808960]
[147.75311279 200.63827515]
[135.23451233 192.37481689]
[142.79798889 205.32835388]
[147.33340454 219.62625122]
[148.61953735 234.57099915]
[146.59361267 249.43356323]
[141.35447693 263.48886108]
[133.15773010 276.05123901]
[122.40320587 286.50784302]
[109.61558533 294.34854126]
[95.41868591 299.19085693]
[80.50508881 300.79855347]
[65.60234833 299.09320068]
[51.43746567 294.15798950]
[38.70147324 286.23370361]
[28.01568031 275.70687866]
[19.90137863 263.09109497]
[14.75442123 249.00178528]
[12.82589531 234.12628174]
[14.20988178 219.19026184]
[18.83886528 204.92237854]
[26.48702431 192.01866150]
[36.78125000 181.10862732]
[49.21935272 172.72450256]
[63.19454956 167.27528381]
[78.02507019 165.02682495]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 168]
[3 167]
[4 166]
[5 165]
[6 74]
[7 73]
[8 72]
[9 71]
[10 70]
[13 68]
[14 67]
[15 66]
[16 65]
[17 63]
[18 62]
[19 60]
[20 59]
[21 58]
[23 57]
[24 56]
[25 55]
[26 54]
[27 53]
[30 50]
[31 49]
[33 46]
[34 45]
[35 44]
[36 43]
[37 42]
[82 146]
[83 145]
[84 144]
[85 143]
[86 142]
[87 141]
[88 140]
[89 139]
[90 138]
[91 137]
[92 136]
[93 135]
[94 134]
[97 133]
[98 132]
[99 131]
[100 130]
[101 129]
[103 126]
[104 125]
[105 124]
[106 123]
[107 122]
[108 118]
[109 117]
[147 158]
[148 157]
[149 156]
[150 155]
[169 185]
[170 184]
[172 182]
[173 181]
[174 180]
[175 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
