%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:59:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGAGCAGGAGAUGGGAAUUGAAACCUGCGCAGAGGCGGCUGUGCAGGGUGAGAGUGGAGCCGAAACCACAGAAAGUGAAGUUUGCUUCAACGUCUUGUCCCGGCAGGCCACUCAGAUGUGAGAGUGAGGAAGUGGGAUGGGGCCUGACCGGAAGGAGGUGCCCCUGAGCCGAGGAACGCAGGCGGUGGUCGUGGGGAAGGGAAGAGGAGCCCCGGGAGACGACAGCAGCAUGGGUG\
) } def
/len { sequence length } bind def

/coor [
[99.46777344 175.85726929]
[98.08952332 160.92071533]
[96.71127319 145.98417664]
[95.33301544 131.04762268]
[80.80067444 127.81285095]
[68.43916321 117.72093964]
[61.46675491 102.18444061]
[62.21527481 84.09786224]
[71.46988678 67.30302429]
[88.11856079 55.77440262]
[73.28961945 58.03324127]
[58.46067429 60.29208374]
[43.63172531 62.55092621]
[28.80278206 64.80976868]
[13.97383499 67.06861115]
[28.45227432 70.98967743]
[39.25955963 81.39172363]
[43.73083878 95.70981598]
[40.76358032 110.41339874]
[31.08945274 121.87687683]
[17.09389687 127.27358246]
[2.22793293 125.27279663]
[-9.84279537 116.36788177]
[-16.14189339 102.75460052]
[-15.11613083 87.78971863]
[-7.01933384 75.16409302]
[-19.52550507 83.44634247]
[-32.03167725 91.72859192]
[-44.53784561 100.01084900]
[-57.04401779 108.29309845]
[-69.55018616 116.57534790]
[-82.05635834 124.85760498]
[-94.56253052 133.13984680]
[-107.06870270 141.42210388]
[-109.96960449 156.95788574]
[-123.05334473 165.82304382]
[-138.55758667 162.75805664]
[-147.28392029 149.58131409]
[-144.05519104 134.11035156]
[-130.78691101 125.52380371]
[-115.35095215 128.91593933]
[-102.84477997 120.63368225]
[-90.33860779 112.35143280]
[-77.83244324 104.06917572]
[-65.32627106 95.78692627]
[-52.82009888 87.50467682]
[-40.31392670 79.22242737]
[-27.80775642 70.94017029]
[-15.30158520 62.65792084]
[-16.08881760 55.19935226]
[-31.00595665 56.77381516]
[-44.70653915 62.88069534]
[-54.74810410 51.73767471]
[-47.25331116 38.74428940]
[-32.58042145 41.85667419]
[-17.66328049 40.28221130]
[-18.45051193 32.82364273]
[-32.41018677 27.33478737]
[-46.36985779 21.84593201]
[-60.32953262 16.35707855]
[-74.28920746 10.86822414]
[-88.24887848 5.37936974]
[-103.92320251 7.53023958]
[-112.93650818 -4.32764864]
[-126.89617920 -9.81650257]
[-139.95350647 -1.64260602]
[-155.14262390 -2.71209002]
[-166.65335083 -12.40575314]
[-170.20632935 -26.84577942]
[-184.16601562 -32.33463287]
[-198.12568665 -37.82348633]
[-213.34912109 -32.76124191]
[-226.71951294 -41.62759399]
[-227.98023987 -57.62103653]
[-216.16416931 -68.47276306]
[-200.33558655 -65.85826874]
[-192.63682556 -51.78316116]
[-178.67715454 -46.29430771]
[-164.71748352 -40.80545044]
[-152.28103638 -48.95853806]
[-137.25062561 -48.21639633]
[-125.40073395 -38.65431213]
[-121.40732574 -23.77617645]
[-107.44765472 -18.28732109]
[-92.77182007 -20.83079147]
[-82.76002502 -8.58030319]
[-68.80035400 -3.09144902]
[-54.84067917 2.39740539]
[-40.88100433 7.88625956]
[-26.92133141 13.37511444]
[-12.96165752 18.86396790]
[8.28800297 33.26116943]
[11.71499348 52.23966599]
[26.54393959 49.98082352]
[41.37288666 47.72198105]
[56.20183182 45.46313858]
[71.03077698 43.20429611]
[85.85972595 40.94545364]
[95.63513184 29.56822777]
[95.63513184 14.56822681]
[95.63513184 -0.43177277]
[95.63513184 -15.43177319]
[95.63513184 -30.43177223]
[95.63513184 -45.43177414]
[81.64081573 -51.29989243]
[70.98802948 -62.04982758]
[65.27796936 -76.02154541]
[65.35192871 -91.07418823]
[71.16750336 -104.91413116]
[81.80977631 -115.44444275]
[95.63513184 -121.08259583]
[95.63513184 -136.08259583]
[95.63513184 -151.08259583]
[95.63513184 -166.08259583]
[95.63513184 -181.08259583]
[83.00287628 -190.09400940]
[78.11187744 -204.82011414]
[82.84283447 -219.59838867]
[95.37659454 -228.74632263]
[110.89366913 -228.74632263]
[123.42742920 -219.59838867]
[128.15838623 -204.82011414]
[123.26739502 -190.09400940]
[110.63513184 -181.08259583]
[110.63513184 -166.08259583]
[110.63513184 -151.08259583]
[110.63513184 -136.08259583]
[110.63513184 -121.08259583]
[124.46048737 -115.44444275]
[135.10276794 -104.91413116]
[140.91833496 -91.07418823]
[140.99229431 -76.02154541]
[135.28224182 -62.04982758]
[124.62944794 -51.29989243]
[110.63513184 -45.43177414]
[110.63513184 -30.43177223]
[110.63513184 -15.43177319]
[110.63513184 -0.43177277]
[110.63513184 14.56822681]
[110.63513184 29.56822777]
[124.16186523 36.05109406]
[135.85412598 26.65476799]
[147.54640198 17.25844383]
[159.23866272 7.86211872]
[170.93092346 -1.53420651]
[182.56118774 -11.00717449]
[194.12893677 -20.55637550]
[196.12644958 -33.28631592]
[205.94180298 -41.00236511]
[217.98501587 -40.00294876]
[229.67727661 -49.39927292]
[235.10353088 -64.87466431]
[251.26669312 -67.64678192]
[261.53945923 -54.86390305]
[255.35412598 -39.67596054]
[239.07360840 -37.70700836]
[227.38134766 -28.31068420]
[221.91110229 -11.62753963]
[203.67813110 -8.98862839]
[192.11038208 0.56057274]
[188.95903015 7.22981787]
[180.32725525 10.15805912]
[168.63499451 19.55438423]
[156.94271851 28.95070839]
[145.25045776 38.34703445]
[133.55819702 47.74335861]
[136.21063232 54.75866699]
[151.01394653 57.17977524]
[141.51551819 68.78928375]
[144.16796875 75.80458832]
[159.15209961 75.11473083]
[174.13623047 74.42488098]
[181.12446594 60.74788666]
[194.02366638 52.41085815]
[209.36401367 51.65640640]
[223.01904297 58.68748093]
[231.31559753 71.61275482]
[232.02195740 86.95539856]
[224.94812012 100.58831024]
[211.99690247 108.84431458]
[196.65211487 109.50257874]
[183.04144287 102.38603973]
[174.82608032 89.40900421]
[159.84194946 90.09886169]
[144.85781860 90.78871918]
[138.27069092 104.99371338]
[128.10449219 113.99548340]
[139.54571533 123.69590759]
[155.07545471 126.71879578]
[159.77947998 140.85107422]
[171.22071838 150.55149841]
[182.66194153 160.25192261]
[202.64801025 162.97564697]
[208.33000183 181.46957397]
[220.02226257 190.86590576]
[231.71452332 200.26222229]
[243.40679932 209.65855408]
[255.09906006 219.05487061]
[268.62292480 212.05310059]
[283.82586670 211.16380310]
[298.07385254 216.54104614]
[308.89834595 227.25318909]
[314.42395020 241.44430542]
[313.69329834 256.65570068]
[306.83297729 270.25186157]
[295.03161621 279.87722778]
[280.33383179 283.86413574]
[265.28613281 281.52178955]
[252.49562073 273.25607300]
[244.17829895 260.49902344]
[241.77522278 245.46089172]
[245.70272827 230.74714661]
[234.01046753 221.35081482]
[222.31820679 211.95449829]
[210.62593079 202.55816650]
[198.93367004 193.16184998]
[188.93954468 195.17556763]
[179.27987671 191.28343201]
[173.22360229 182.54296875]
[172.96151733 171.69316101]
[161.52029419 161.99273682]
[150.07905579 152.29229736]
[135.36767578 149.96325684]
[129.84529114 135.13713074]
[118.40406036 125.43670654]
[115.83495331 127.11069489]
[113.11480713 128.52607727]
[110.26956177 129.66937256]
[111.64781952 144.60592651]
[113.02606964 159.54246521]
[114.40431976 174.47901917]
[127.81114197 182.29161072]
[134.03453064 196.50601196]
[130.68145752 211.65647888]
[119.04126740 221.91734314]
[103.58982849 223.34310913]
[90.26854706 215.38552856]
[84.19972992 201.10446167]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 231]
[2 230]
[3 229]
[4 228]
[10 98]
[11 97]
[12 96]
[13 95]
[14 94]
[15 93]
[26 49]
[27 48]
[28 47]
[29 46]
[30 45]
[31 44]
[32 43]
[33 42]
[34 41]
[57 91]
[58 90]
[59 89]
[60 88]
[61 87]
[62 86]
[64 84]
[65 83]
[69 79]
[70 78]
[71 77]
[99 140]
[100 139]
[101 138]
[102 137]
[103 136]
[104 135]
[111 128]
[112 127]
[113 126]
[114 125]
[115 124]
[141 166]
[142 165]
[143 164]
[144 163]
[145 162]
[146 160]
[147 159]
[150 157]
[151 156]
[170 185]
[171 184]
[172 183]
[187 225]
[188 224]
[190 222]
[191 221]
[192 220]
[194 216]
[195 215]
[196 214]
[197 213]
[198 212]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
