%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:56:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGACAGAUCCAGGCUCACCAGUCCUGUGCCACUGGGCUUUUGGCGUUCUGCACAAGGCCUACCCGCAGAUGCCAUGCCUGCUCCCCCAGCCUAAUGGGCUUUGAUGGGGGAAGAGGGUGGUUCAGCCUCUCACGAUGAGGAGGAAAGAGCAAGUGUCCUCCUCGGACAUUCUCCGGGUUGUGAAAUGUGCUCGCAGGAGGCUU\
) } def
/len { sequence length } bind def

/coor [
[64.14986420 376.91955566]
[66.17043304 392.01382446]
[61.87068939 406.62313843]
[51.99559402 418.21633911]
[38.25606537 424.78485107]
[23.03255463 425.19061279]
[8.96263123 419.36331177]
[-1.51600599 408.31262207]
[-6.58787012 393.95309448]
[-5.37422991 378.77261353]
[1.91464400 365.40127563]
[14.01591015 356.15579224]
[28.83295059 352.63793945]
[31.56273460 337.88842773]
[34.29251862 323.13891602]
[37.02230453 308.38940430]
[39.75208664 293.63989258]
[26.79766083 301.20181274]
[12.25514507 297.52551270]
[4.45062208 284.71575928]
[7.85244513 270.10659790]
[20.51295471 262.06225586]
[35.18358231 265.18838501]
[43.46472931 277.69433594]
[47.53083038 263.25595093]
[51.59693146 248.81756592]
[55.66303635 234.37918091]
[59.72913742 219.94081116]
[63.79523849 205.50242615]
[67.86134338 191.06404114]
[62.62367249 174.31666565]
[75.91061401 161.57023621]
[79.75605774 147.07151794]
[83.60150146 132.57281494]
[68.89158630 119.03064728]
[63.53296280 99.76780701]
[48.87355423 96.58948517]
[34.21414185 93.41117096]
[19.55473328 90.23284912]
[10.75978279 96.64110565]
[0.10907315 97.13865662]
[-8.86727047 91.80242920]
[-13.32672024 82.60324860]
[-27.88238525 78.97935486]
[-42.43804932 75.35546112]
[-56.99371338 71.73156738]
[-71.54937744 68.10766602]
[-86.10504150 64.48377228]
[-95.19258881 65.44722748]
[-100.85420227 60.69203568]
[-115.35291290 56.84659195]
[-129.85162354 53.00114441]
[-144.35032654 49.15569687]
[-151.80694580 54.93830109]
[-160.95310974 56.61440277]
[-169.71250916 53.93220520]
[-176.15548706 47.61497498]
[-178.92390442 39.17158890]
[-193.23156738 34.66706467]
[-209.11442566 38.74954224]
[-220.39656067 26.84804916]
[-215.47186279 11.20581627]
[-199.40644836 7.91423368]
[-188.72703552 20.35939980]
[-174.41937256 24.86392593]
[-154.74209595 18.64429665]
[-140.50488281 34.65699005]
[-126.00617218 38.50243759]
[-111.50746918 42.34788132]
[-97.00875854 46.19332886]
[-82.48114777 49.92810822]
[-67.92548370 53.55200577]
[-53.36981964 57.17589951]
[-38.81415558 60.79979706]
[-24.25848961 64.42369080]
[-9.70282459 68.04758453]
[8.43876648 61.36315536]
[22.73305130 75.57344055]
[37.39245987 78.75175476]
[52.05187225 81.93007660]
[66.71128082 85.10839844]
[71.85653687 76.80853271]
[79.01984406 70.17163086]
[87.68754578 65.67359161]
[85.63519287 50.81465912]
[83.58283997 35.95573044]
[81.53048706 21.09679794]
[79.47813416 6.23786592]
[77.42578125 -8.62106609]
[75.37342834 -23.47999763]
[72.75619507 -38.24990082]
[69.57787323 -52.90931320]
[66.39955902 -67.56871796]
[63.22124100 -82.22813416]
[53.95606995 -96.42647552]
[65.03468323 -109.26004791]
[80.43357849 -102.16708374]
[77.88065338 -85.40644836]
[81.05896759 -70.74703979]
[84.23728943 -56.08763123]
[87.41560364 -41.42821884]
[97.62165833 -52.42078400]
[112.59030914 -51.45153046]
[121.29348755 -39.23454666]
[117.31918335 -24.77063179]
[103.59542847 -18.71599007]
[90.23236084 -25.53235054]
[92.28471375 -10.67341805]
[94.33706665 4.18551302]
[96.38941956 19.04444504]
[98.44177246 33.90337753]
[100.49412537 48.76230621]
[102.54647827 63.62123871]
[113.63674164 63.33821106]
[125.01889801 66.55937958]
[133.61212158 54.26481247]
[142.20536804 41.97024536]
[150.79859924 29.67568207]
[152.36268616 13.93197823]
[165.99569702 7.93278742]
[174.58892822 -4.36177826]
[178.70707703 -20.80796814]
[195.65055847 -21.40351677]
[200.91325378 -5.28705502]
[186.88349915 4.23145485]
[178.29026794 16.52602005]
[177.34082031 31.39033508]
[163.09315491 38.26891327]
[154.49992371 50.56348038]
[145.90669250 62.85804749]
[137.31346130 75.15261078]
[143.42147827 88.85269165]
[158.30998230 90.67820740]
[173.19848633 92.50372314]
[188.08697510 94.32923889]
[202.97547913 96.15476227]
[217.86398315 97.98027802]
[232.75248718 99.80579376]
[245.12873840 90.34713745]
[260.20178223 92.41056061]
[269.14291382 104.26771545]
[284.03140259 106.09323120]
[298.91992188 107.91874695]
[313.80841064 109.74427032]
[328.69689941 111.56978607]
[318.18768311 100.86670685]
[315.02667236 86.20355225]
[320.19277954 72.12125397]
[332.08618164 62.98084259]
[347.02368164 61.61294556]
[360.37939453 68.44117737]
[368.01730347 81.35095978]
[367.57208252 96.34434509]
[359.18157959 108.77816010]
[345.44509888 114.80175018]
[359.94381714 118.64719391]
[374.44253540 122.49264526]
[388.94125366 126.33808899]
[403.43994141 130.18353271]
[417.93865967 134.02897644]
[432.47817993 127.24799347]
[446.78030396 134.51631165]
[449.87368774 150.25831604]
[439.38531494 162.39808655]
[423.36099243 161.62301636]
[414.09320068 148.52769470]
[399.59451294 144.68225098]
[385.09579468 140.83679199]
[370.59707642 136.99134827]
[356.09838867 133.14590454]
[341.59967041 129.30046082]
[326.87139893 126.45829010]
[311.98287964 124.63276672]
[297.09439087 122.80725098]
[282.20590210 120.98173523]
[267.31738281 119.15621948]
[255.77651978 128.50202942]
[240.65145874 126.86278534]
[230.92697144 114.69429779]
[216.03846741 112.86878204]
[201.14996338 111.04325867]
[186.26145935 109.21774292]
[171.37295532 107.39222717]
[156.48446655 105.56671143]
[141.59596252 103.74118805]
[135.99971008 118.42285919]
[125.62991333 129.54919434]
[112.28853607 135.73809814]
[98.10021210 136.41825867]
[94.25476837 150.91696167]
[90.40932465 165.41567993]
[96.20071411 176.94343567]
[92.69657135 188.94209290]
[82.29972076 195.13014221]
[78.23361969 209.56852722]
[74.16751862 224.00691223]
[70.10141754 238.44528198]
[66.03530884 252.88366699]
[61.96921158 267.32205200]
[57.90310669 281.76043701]
[54.50160599 296.36965942]
[51.77182007 311.11917114]
[49.04203796 325.86871338]
[46.31225204 340.61822510]
[43.58246994 355.36773682]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 205]
[14 204]
[15 203]
[16 202]
[17 201]
[24 200]
[25 199]
[26 198]
[27 197]
[28 196]
[29 195]
[30 194]
[32 191]
[33 190]
[34 189]
[36 81]
[37 80]
[38 79]
[39 78]
[43 76]
[44 75]
[45 74]
[46 73]
[47 72]
[48 71]
[50 70]
[51 69]
[52 68]
[53 67]
[58 65]
[59 64]
[84 113]
[85 112]
[86 111]
[87 110]
[88 109]
[89 108]
[90 107]
[91 101]
[92 100]
[93 99]
[94 98]
[115 131]
[116 130]
[117 129]
[118 128]
[120 126]
[121 125]
[132 185]
[133 184]
[134 183]
[135 182]
[136 181]
[137 180]
[138 179]
[141 176]
[142 175]
[143 174]
[144 173]
[145 172]
[155 171]
[156 170]
[157 169]
[158 168]
[159 167]
[160 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
