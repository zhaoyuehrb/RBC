%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:06:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUUGCUACCUCCCUGGAGCUCCCUGACCCGGACGCUCUCUGGGCCAAUAUGGCAGCGCCCAGCAACAAGACAGAGCUGGCCUGGAGUCCGCGGCUGGCCGCGUGAGUAGGUGAUUGUCUGACAAGCAGAGGCAUGAGCUGGGUCCAGGCCACCCUACUGGCCCGAGGCCUCUGUAGGGCCUGGGGAGGCACCUGCGGGGCCGCCCUCACAGGAACCUCCAUCUCUCAGGUCC\
) } def
/len { sequence length } bind def

/coor [
[90.68120575 286.91738892]
[87.35555267 293.67874146]
[82.36756897 299.29049683]
[76.08807373 303.35699463]
[68.97817230 305.59667969]
[61.55545807 305.86154175]
[56.25802612 319.89498901]
[50.96059418 333.92840576]
[50.85957336 343.04528809]
[45.49740601 348.11325073]
[40.01284790 362.07461548]
[45.07977295 377.29650879]
[36.21753693 390.66961670]
[20.22448349 391.93524170]
[9.36911774 380.12252808]
[11.97874641 364.29315186]
[26.05148506 356.59005737]
[31.53604507 342.62869263]
[36.92716217 328.63098145]
[42.22459412 314.59756470]
[47.52202606 300.56411743]
[36.12453461 281.12222290]
[42.98912811 259.37258911]
[63.97476578 249.77056885]
[67.93769836 235.30352783]
[71.90062714 220.83650208]
[75.86355591 206.36946106]
[79.82649231 191.90242004]
[92.81251526 171.50991821]
[110.68151093 167.38191223]
[106.71858215 152.91487122]
[102.75565338 138.44783020]
[98.79271698 123.98079681]
[80.61885071 117.99741364]
[71.12180328 99.31534576]
[78.08232880 77.62140656]
[63.09874725 78.32299805]
[48.11516190 79.02458191]
[33.13158035 79.72617340]
[18.14799690 80.42776489]
[3.23369884 82.02892303]
[-11.55735493 84.52386475]
[-26.34840965 87.01880646]
[-41.13946152 89.51374817]
[-55.93051529 92.00868225]
[-70.72157288 94.50362396]
[-74.91493225 109.17940521]
[-85.06701660 120.57668304]
[-99.16211700 126.43251801]
[-114.40164948 125.58423615]
[-127.75978088 118.20026398]
[-136.58424377 105.74669647]
[-139.12295532 90.69618988]
[-134.87182617 76.03704071]
[-124.67494202 64.67982483]
[-110.55689240 58.87953949]
[-95.32082367 59.78782654]
[-81.99187469 67.22434235]
[-73.21650696 79.71257019]
[-58.42545700 77.21762848]
[-43.63440323 74.72269440]
[-28.84334946 72.22775269]
[-14.05229568 69.73281097]
[0.73875856 67.23786926]
[-12.47533035 60.13943100]
[-19.83747864 47.07043076]
[-19.06074905 32.09055328]
[-10.38641930 19.85306931]
[3.49096203 14.15936470]
[18.26060104 16.77810097]
[29.33453369 26.89580727]
[33.27281570 41.36957550]
[28.85207939 55.70335007]
[17.44640732 65.44417572]
[32.42999268 64.74259186]
[47.41357422 64.04100037]
[62.39715958 63.33941269]
[77.38074493 62.63782120]
[87.51664734 51.58054352]
[86.91522980 36.59260559]
[86.31380463 21.60466766]
[85.71238708 6.61672926]
[85.11096954 -8.37120914]
[84.50954437 -23.35914803]
[83.90812683 -38.34708405]
[83.30670929 -53.33502197]
[82.70528412 -68.32295990]
[74.42089081 -81.80181122]
[81.64167786 -94.82907867]
[81.04025269 -109.81701660]
[76.78804016 -124.20168304]
[69.14379120 -137.10769653]
[61.49953842 -150.01373291]
[53.85528946 -162.91975403]
[46.21103668 -175.82577515]
[31.66097260 -183.39067078]
[31.20774651 -199.78355408]
[45.31760025 -208.14083862]
[59.47552490 -199.86524963]
[59.11706161 -183.47003174]
[66.76131439 -170.56399536]
[74.40556335 -157.65797424]
[82.04981232 -144.75195312]
[89.69406128 -131.84593201]
[97.07225037 -133.19215393]
[111.82862854 -135.88459778]
[119.20681763 -137.23081970]
[121.80056763 -152.00486755]
[124.39432526 -166.77891541]
[115.58898163 -179.62818909]
[118.42987823 -194.57421875]
[130.73396301 -202.88957214]
[133.32771301 -217.66362000]
[135.92146301 -232.43766785]
[127.34423065 -240.64115906]
[123.82061005 -251.84925842]
[126.11357880 -263.25012207]
[133.54179382 -272.04150391]
[144.17639160 -276.11941528]
[147.16418457 -290.81884766]
[150.15197754 -305.51828003]
[153.13977051 -320.21768188]
[145.51704407 -334.33413696]
[151.93334961 -349.03823853]
[167.46664429 -353.05026245]
[180.20111084 -343.29254150]
[180.36795044 -327.25036621]
[167.83918762 -317.22988892]
[164.85140991 -302.53048706]
[161.86361694 -287.83105469]
[158.87582397 -273.13162231]
[169.88105774 -258.48794556]
[166.61489868 -240.13833618]
[150.69551086 -229.84391785]
[148.10176086 -215.06987000]
[145.50801086 -200.29582214]
[154.24388123 -188.28666687]
[151.82391357 -173.26673889]
[139.16836548 -164.18516541]
[136.57461548 -149.41111755]
[133.98086548 -134.63706970]
[96.02819061 -110.41843414]
[96.62961578 -95.43049622]
[104.87098694 -83.02368164]
[97.69322205 -68.92438507]
[98.29464722 -53.93644333]
[98.89606476 -38.94850540]
[99.49748230 -23.96056747]
[100.09890747 -8.97262955]
[100.70032501 6.01530886]
[101.30174255 21.00324821]
[101.90316772 35.99118423]
[102.50458527 50.97912216]
[114.52089691 59.95734024]
[129.06448364 56.28528976]
[143.60807800 52.61323929]
[158.15167236 48.94118881]
[172.69525146 45.26913834]
[187.23884583 41.59708786]
[201.06881714 26.91616440]
[219.42120361 33.03549576]
[233.86143494 28.97595215]
[248.30165100 24.91640854]
[262.74188232 20.85686684]
[276.35357666 10.74952316]
[289.83398438 21.03126717]
[283.68582153 36.83115005]
[266.80142212 35.29709244]
[252.36120605 39.35663605]
[237.92097473 43.41617584]
[223.48074341 47.47571945]
[219.31311035 56.78321457]
[210.53047180 62.38554382]
[199.89485168 62.23514557]
[190.91090393 56.14067841]
[176.36730957 59.81272888]
[161.82371521 63.48477936]
[147.28012085 67.15682983]
[132.73654175 70.82888031]
[118.19293976 74.50093079]
[127.66336823 100.47962189]
[113.25975800 120.01786041]
[117.22268677 134.48490906]
[121.18562317 148.95193481]
[125.14855194 163.41897583]
[133.05004883 176.16912842]
[144.24183655 186.15631104]
[155.43362427 196.14349365]
[166.62541199 206.13069153]
[177.81719971 216.11787415]
[193.37756348 215.40180969]
[204.58535767 225.68966675]
[205.17211914 240.52851868]
[216.36390686 250.51570129]
[227.55569458 260.50286865]
[238.74748230 270.49008179]
[254.19564819 273.90545654]
[258.54013062 288.15237427]
[269.73190308 298.13955688]
[280.92370605 308.12673950]
[292.11547852 318.11392212]
[308.27270508 320.92041016]
[313.66601562 336.40731812]
[302.74728394 348.64303589]
[286.74871826 345.04052734]
[282.12829590 329.30572510]
[270.93652344 319.31854248]
[259.74472046 309.33135986]
[248.55293274 299.34414673]
[233.90528870 296.64312744]
[228.76029968 281.68185425]
[217.56851196 271.69467163]
[206.37672424 261.70748901]
[195.18493652 251.72030640]
[180.37525940 252.81987000]
[168.88291931 242.85086060]
[167.83001709 227.30966187]
[156.63822937 217.32247925]
[145.44644165 207.33528137]
[134.25465393 197.34809875]
[123.06285858 187.36091614]
[115.87052917 189.48703003]
[124.35971069 201.85366821]
[115.22162628 213.74884033]
[101.08482361 208.73379517]
[101.48586273 193.73924255]
[94.29352570 195.86535645]
[90.33059692 210.33239746]
[86.36766815 224.79942322]
[82.40473175 239.26646423]
[78.44180298 253.73350525]
[84.40340424 258.55841064]
[88.84954071 264.77453613]
[91.47087097 271.92483521]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 21]
[7 20]
[8 19]
[10 18]
[11 17]
[24 231]
[25 230]
[26 229]
[27 228]
[28 227]
[30 185]
[31 184]
[32 183]
[33 182]
[36 78]
[37 77]
[38 76]
[39 75]
[40 74]
[41 64]
[42 63]
[43 62]
[44 61]
[45 60]
[46 59]
[79 153]
[80 152]
[81 151]
[82 150]
[83 149]
[84 148]
[85 147]
[86 146]
[87 145]
[89 143]
[90 142]
[91 104]
[92 103]
[93 102]
[94 101]
[95 100]
[107 141]
[108 140]
[109 139]
[112 136]
[113 135]
[114 134]
[119 131]
[120 130]
[121 129]
[122 128]
[154 180]
[155 179]
[156 178]
[157 177]
[158 176]
[159 175]
[161 171]
[162 170]
[163 169]
[164 168]
[186 221]
[187 220]
[188 219]
[189 218]
[190 217]
[193 214]
[194 213]
[195 212]
[196 211]
[198 209]
[199 208]
[200 207]
[201 206]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
