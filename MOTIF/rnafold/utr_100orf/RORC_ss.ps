%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:19:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCAGGUGCUCCCGCCUUCCACCCUCCGCCCUCCUCCCUCCCCUGGGCCCUGCUCCCUGCCCUCCUGGGCAGCCAGGGCAGCCAGGACGGCACCAAGGGAGCUGCCCCAUGGACAGGGCCCCACAGAGACAGCACCGAGCCUCACGGGAGCUGCUGGCUGCAAAGAAGACCCACACCUCACAAAUUGAAGUGAUCCCUUGCAAAAUCU\
) } def
/len { sequence length } bind def

/coor [
[256.29013062 278.22058105]
[246.04823303 267.26138306]
[235.80636597 256.30218506]
[225.56448364 245.34300232]
[215.32260132 234.38380432]
[200.47418213 234.13838196]
[189.93135071 223.17010498]
[190.28944397 207.59739685]
[180.04756165 196.63819885]
[169.80567932 185.67900085]
[159.56381226 174.71981812]
[149.32192993 163.76062012]
[139.08004761 152.80142212]
[128.83816528 141.84222412]
[120.40044403 146.54281616]
[111.22574615 149.56202698]
[101.64551544 150.79078674]
[92.00583649 150.18472290]
[82.65495300 147.76570129]
[73.93066406 143.62112427]
[66.14814758 137.90071106]
[59.58853531 130.81112671]
[54.48880386 122.60848236]
[51.03318405 113.58908844]
[49.34651184 104.07878876]
[49.48971939 94.42113495]
[51.45762634 84.96502686]
[55.17914963 76.05206299]
[43.13733673 67.10808563]
[31.09552193 58.16410828]
[19.05370903 49.22013092]
[7.01189470 40.27615356]
[-5.83962536 41.38408279]
[-15.68541145 33.68543243]
[-17.58258438 21.73759270]
[-29.48860168 12.61362648]
[-41.39461899 3.48966050]
[-53.89009857 -4.80870867]
[-66.91790009 -12.24352646]
[-79.94569397 -19.67834282]
[-92.97348785 -27.11316109]
[-106.00128937 -34.54797745]
[-121.82203674 -34.66809845]
[-129.04089355 -47.69642639]
[-142.06869507 -55.13124466]
[-155.09649658 -62.56606293]
[-168.78741455 -68.69456482]
[-183.01087952 -73.45829010]
[-197.23434448 -78.22201538]
[-211.45780945 -82.98574829]
[-225.68127441 -87.74947357]
[-239.90473938 -92.51319885]
[-247.71194458 -87.22104645]
[-256.94210815 -86.13159943]
[-265.50939941 -89.36364746]
[-271.53604126 -96.07358551]
[-273.76379395 -104.67115021]
[-287.75805664 -110.07122040]
[-301.75231934 -115.47129059]
[-315.74658203 -120.87136078]
[-329.74084473 -126.27143097]
[-343.73510742 -131.67149353]
[-359.84429932 -128.60131836]
[-370.35140991 -141.19229126]
[-364.44766235 -156.49188232]
[-348.20626831 -158.76119995]
[-338.33502197 -145.66575623]
[-324.34075928 -140.26568604]
[-310.34652710 -134.86561584]
[-296.35226440 -129.46554565]
[-282.35800171 -124.06547546]
[-268.36373901 -118.66541290]
[-248.33038330 -123.62483215]
[-235.14100647 -106.73666382]
[-220.91754150 -101.97293854]
[-206.69407654 -97.20920563]
[-192.47061157 -92.44548035]
[-178.24714661 -87.68175507]
[-164.02369690 -82.91802979]
[-154.72138977 -94.68608093]
[-145.41990662 -106.45308685]
[-153.33892822 -119.19235992]
[-161.25794983 -131.93162537]
[-176.49172974 -136.96266174]
[-181.92106628 -152.05908203]
[-173.38101196 -165.64021301]
[-157.42279053 -167.28778076]
[-146.28816223 -155.73789978]
[-148.51867676 -139.85064697]
[-140.59965515 -127.11138153]
[-132.68063354 -114.37210846]
[-133.95080566 -89.71354675]
[-147.66166687 -75.59385681]
[-134.63388062 -68.15904236]
[-121.60607910 -60.72422409]
[-106.71716309 -61.13589096]
[-98.56646729 -47.57577515]
[-85.53867340 -40.14095688]
[-72.51087189 -32.70613861]
[-59.48307800 -25.27132225]
[-46.45528412 -17.83650589]
[-52.03485489 -31.76016808]
[-49.30662155 -46.50997162]
[-39.11575699 -57.51662064]
[-24.61925888 -61.37039185]
[-10.30795670 -56.87744141]
[-0.61530614 -45.42962265]
[1.45603359 -30.57332611]
[-4.73561144 -16.91083908]
[-17.27215004 -8.67462635]
[-32.27065277 -8.41635609]
[-20.36463547 0.70761001]
[-8.45861816 9.83157635]
[9.03862572 11.16955948]
[15.95587063 28.23434067]
[27.99768448 37.17831802]
[40.03949738 46.12229538]
[52.08131409 55.06626892]
[64.12313080 64.01024628]
[72.82711029 57.05764008]
[82.83688354 52.16863251]
[93.67143250 49.57816315]
[104.81010437 49.41072083]
[115.71762085 51.67434692]
[125.86982727 56.26026535]
[134.77885437 62.94810104]
[146.54638672 53.64620972]
[158.31391907 44.34431458]
[160.24116516 39.48991013]
[163.51132202 36.19097519]
[167.30659485 34.69859695]
[170.82810974 34.90272522]
[183.00299072 26.14076042]
[186.99285889 10.60176086]
[201.68778992 4.16447639]
[215.81509399 11.76704121]
[218.53750610 27.57741928]
[207.76663208 39.46723938]
[191.76495361 38.31565094]
[179.59007263 47.07761765]
[167.61581421 56.11184311]
[155.84828186 65.41373444]
[144.08074951 74.71562958]
[150.67398071 103.81572723]
[139.79736328 131.60035706]
[150.03924561 142.55953979]
[160.28111267 153.51873779]
[170.52299500 164.47793579]
[180.76487732 175.43711853]
[191.00675964 186.39631653]
[201.24864197 197.35551453]
[216.80993652 198.05079651]
[227.04054260 209.31088257]
[226.28179932 224.14192200]
[236.52366638 235.10112000]
[246.76554871 246.06031799]
[257.00741577 257.01950073]
[267.24929810 267.97869873]
[278.05331421 278.38415527]
[289.38955688 288.20706177]
[300.72579956 298.02996826]
[312.06204224 307.85287476]
[323.39828491 317.67578125]
[341.55508423 320.73937988]
[346.64495850 337.53332520]
[358.12756348 347.18472290]
[354.10247803 332.73486328]
[357.16256714 318.05032349]
[366.62429810 306.41091919]
[380.37438965 300.41638184]
[395.34176636 301.40557861]
[408.18334961 309.15756226]
[416.03097534 321.94094849]
[417.13186646 336.90048218]
[411.24011230 350.69494629]
[399.67169189 360.24331665]
[385.01037598 363.41290283]
[370.53228760 359.49658203]
[380.26974487 370.90634155]
[390.00717163 382.31607056]
[399.74459839 393.72583008]
[415.20318604 392.37997437]
[428.48315430 400.40634155]
[434.47805786 414.71859741]
[430.88275146 429.81341553]
[419.07968140 439.88650513]
[403.60739136 441.06457520]
[390.41528320 432.89462280]
[384.57598877 418.51818848]
[388.33483887 403.46325684]
[378.59741211 392.05352783]
[368.85998535 380.64376831]
[359.12255859 369.23400879]
[348.47616577 358.66735840]
[336.99356079 349.01593018]
[324.91815186 349.74719238]
[315.27261353 341.79907227]
[313.57537842 329.01202393]
[302.23913574 319.18911743]
[290.90289307 309.36621094]
[279.56665039 299.54330444]
[268.23040771 289.72039795]
[269.37631226 304.67657471]
[260.74392700 316.94366455]
[246.27905273 320.91448975]
[232.59349060 314.77401733]
[225.94281006 301.32901001]
[229.36700439 286.72506714]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 158]
[2 157]
[3 156]
[4 155]
[5 154]
[8 151]
[9 150]
[10 149]
[11 148]
[12 147]
[13 146]
[14 145]
[28 119]
[29 118]
[30 117]
[31 116]
[32 115]
[35 113]
[36 112]
[37 111]
[38 101]
[39 100]
[40 99]
[41 98]
[42 97]
[44 95]
[45 94]
[46 93]
[47 79]
[48 78]
[49 77]
[50 76]
[51 75]
[52 74]
[57 72]
[58 71]
[59 70]
[60 69]
[61 68]
[62 67]
[81 91]
[82 90]
[83 89]
[126 143]
[127 142]
[128 141]
[132 140]
[133 139]
[159 202]
[160 201]
[161 200]
[162 199]
[163 198]
[165 195]
[166 194]
[178 193]
[179 192]
[180 191]
[181 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
