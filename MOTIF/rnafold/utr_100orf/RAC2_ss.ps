%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:03:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCAGCUUGAGUAAGUUCCCCUUCCGUUUCCUCCUGCCCCACCACCGCUGCUCCUCAGCAGGCGCCUCACCAGCCUCCACACCCCUUGCGCCCGCAGAAACGCGCCUGGCCCUGAGCUGUCACCACCGACACUCUCCAGGCUCCGGACACGAUGCAGGCCAUCAAGUGUGUGGUGGUGGGAGAUGGGGCCGUGGGCAAGACCUGCCUUCUCAUCAGCUACACCACCAACGCCUUUCCCGGAGAGUACAUCC\
) } def
/len { sequence length } bind def

/coor [
[76.50440979 117.50637817]
[69.02203369 116.99253082]
[62.01300430 130.25425720]
[55.00397491 143.51599121]
[47.99494553 156.77772522]
[48.18723297 161.94146729]
[46.55754852 166.24253845]
[43.73342133 169.13475037]
[40.46781158 170.39704895]
[32.96781158 183.38742065]
[25.46781158 196.37780762]
[35.76084518 207.44779968]
[42.33214569 221.06063843]
[44.59740448 236.00587463]
[42.35519028 250.95458984]
[35.80488586 264.57754517]
[25.52893257 275.66339111]
[12.44106483 283.22640991]
[-2.29495311 286.59408569]
[-17.36880493 285.46694946]
[-31.44013405 279.94525146]
[-43.25772476 270.51998901]
[-51.77077103 258.02920532]
[-56.22229385 243.58360291]
[-56.21646500 228.46766663]
[-51.75381088 214.02551270]
[-43.23114014 201.54129028]
[-31.40628433 192.12512207]
[-17.33070183 186.61428833]
[-2.25598669 185.49877930]
[12.47743034 188.87780762]
[19.97743034 175.88742065]
[27.47743034 162.89704895]
[34.73321533 149.76869202]
[41.74224472 136.50695801]
[48.75127411 123.24523163]
[55.76030350 109.98349762]
[56.22772598 94.99078369]
[50.05841827 81.31819916]
[43.88911057 67.64560699]
[37.71980667 53.97302246]
[31.55049896 40.30043411]
[25.38119316 26.62784576]
[19.21188545 12.95525837]
[13.04257965 -0.71732986]
[6.87327290 -14.38991737]
[-6.64126015 -20.89817429]
[-21.17741966 -17.19681358]
[-35.71357727 -13.49545193]
[-50.24973679 -9.79409122]
[-59.64704132 3.20861101]
[-75.67826080 3.82459950]
[-86.04562378 -8.41865921]
[-82.79617310 -24.12918472]
[-68.42260742 -31.25520515]
[-53.95109940 -24.33024979]
[-39.41493988 -28.03161049]
[-24.87878036 -31.73297119]
[-10.34262085 -35.43433380]
[-11.27701378 -50.40520096]
[-26.16060066 -52.27035904]
[-41.04418945 -54.13551331]
[-55.92777634 -56.00066757]
[-65.73834229 -44.09452057]
[-80.43542480 -39.40418625]
[-95.32924652 -43.42633820]
[-105.66723633 -54.87751770]
[-108.15058136 -70.10369873]
[-101.98685455 -84.24625397]
[-89.14288330 -92.79235840]
[-73.71712494 -93.01497650]
[-60.63188934 -84.84306335]
[-54.06262207 -70.88425446]
[-39.17903519 -69.01910400]
[-24.29544640 -67.15394592]
[-9.41185760 -65.28878784]
[2.33400655 -71.74691010]
[13.52192116 -71.67612457]
[12.77423286 -86.65747833]
[12.02654457 -101.63883209]
[11.27885628 -116.62018585]
[10.53116798 -131.60154724]
[-3.03256941 -138.67065430]
[-11.18299198 -151.49513245]
[-11.81571770 -166.57710266]
[-4.86086893 -179.86190796]
[7.72501326 -187.82817078]
[6.97732496 -202.80952454]
[3.43201923 -211.19848633]
[6.31487751 -217.98207092]
[5.75400972 -232.97157288]
[5.19314194 -247.96109009]
[-3.05475283 -261.46231079]
[4.20124912 -274.46997070]
[3.64038110 -289.45950317]
[3.07951307 -304.44900513]
[-13.54645157 -312.54254150]
[-23.69416046 -327.89834595]
[-24.61256790 -346.19580078]
[-16.13293839 -362.33929443]
[-0.69165391 -371.87741089]
[-1.81260526 -386.83547974]
[-12.53382874 -401.82168579]
[-4.27677441 -417.31948853]
[-5.58411026 -432.26239014]
[-6.89144659 -447.20532227]
[-8.19878292 -462.14825439]
[-9.50611877 -477.09115601]
[-10.81345463 -492.03408813]
[-18.73955154 -497.05392456]
[-23.41164207 -505.03115845]
[-23.89778519 -514.12561035]
[-20.21533966 -522.30499268]
[-13.29922771 -527.79919434]
[-14.04691601 -542.78051758]
[-14.79460430 -557.76190186]
[-18.33991051 -566.15087891]
[-15.45705128 -572.93444824]
[-16.01791954 -587.92395020]
[-16.57878685 -602.91345215]
[-17.13965607 -617.90295410]
[-28.89403534 -628.46752930]
[-29.65191841 -644.25366211]
[-18.96366692 -655.89569092]
[-3.17043066 -656.48663330]
[8.35794449 -645.67590332]
[8.78187656 -629.87725830]
[-2.15014458 -618.46386719]
[-1.58927667 -603.47430420]
[-1.02840877 -588.48480225]
[-0.46754083 -573.49530029]
[0.18674999 -558.50958252]
[0.93443829 -543.52825928]
[1.68212652 -528.54687500]
[14.31942654 -512.21197510]
[4.12946558 -493.34143066]
[5.43680143 -478.39849854]
[6.74413776 -463.45559692]
[8.05147362 -448.51266479]
[9.35881042 -433.56973267]
[10.66614628 -418.62683105]
[19.71861458 -410.62817383]
[20.94414902 -398.20809937]
[13.14545155 -387.95642090]
[14.26640320 -372.99838257]
[25.44563866 -369.43664551]
[34.80344009 -362.30187988]
[41.23567200 -352.40673828]
[43.97358704 -340.89120483]
[42.67566681 -329.09130859]
[37.46999741 -318.38406372]
[28.94207764 -310.02688599]
[18.06902313 -305.00985718]
[18.62989235 -290.02035522]
[19.19075966 -275.03085327]
[27.39853668 -262.60177612]
[20.18265152 -248.52195740]
[20.74352074 -233.53244019]
[21.30438805 -218.54293823]
[21.95867920 -203.55720520]
[22.70636749 -188.57585144]
[36.02288818 -181.90234375]
[44.26591873 -169.37602234]
[45.13801575 -154.30599976]
[38.30500031 -140.73371887]
[25.51252174 -132.34922791]
[26.26021004 -117.36787415]
[27.00789833 -102.38652039]
[27.75558662 -87.40516663]
[28.50327492 -72.42381287]
[47.95007324 -48.83903122]
[20.54586029 -20.55922508]
[26.71516800 -6.88663626]
[32.88447571 6.78595114]
[39.05377960 20.45853996]
[45.22308731 34.13112640]
[51.39239502 47.80371475]
[57.56169891 61.47630310]
[63.73100662 75.14888763]
[69.90031433 88.82147980]
[95.98992157 62.64749146]
[136.23532104 76.80025482]
[150.85923767 80.13806915]
[165.48315430 83.47588348]
[180.10707092 86.81369781]
[194.73098755 90.15151215]
[209.35491943 93.48932648]
[223.97883606 96.82714081]
[228.02514648 95.42430878]
[231.91941833 95.37140656]
[235.26002502 96.45800781]
[237.75343323 98.36589813]
[239.23977661 100.71305847]
[253.67915344 104.77566528]
[268.11849976 108.83827209]
[282.55786133 112.90087891]
[296.99722290 116.96348572]
[311.63690186 110.40146637]
[325.82833862 117.88361359]
[328.68508911 133.67027283]
[318.01571655 145.65126038]
[302.00485229 144.63578796]
[292.93463135 131.40284729]
[278.49526978 127.34024048]
[264.05590820 123.27763367]
[249.61654663 119.21502686]
[235.17716980 115.15242004]
[220.64102173 111.45105743]
[206.01710510 108.11324310]
[191.39317322 104.77542877]
[176.76925659 101.43761444]
[162.14533997 98.09980011]
[147.52142334 94.76198578]
[132.89750671 91.42417145]
[127.93486023 97.04753113]
[139.18157959 106.97282410]
[150.42829895 116.89810944]
[161.67501831 126.82339478]
[172.92173767 136.74868774]
[184.16845703 146.67396545]
[195.41517639 156.59925842]
[209.17843628 162.56350708]
[207.75900269 177.49620056]
[193.11849976 180.76049805]
[185.48988342 167.84597778]
[174.24316406 157.92068481]
[162.99644470 147.99540710]
[151.74972534 138.07011414]
[140.50300598 128.14482117]
[129.25628662 118.21953583]
[118.00957489 108.29425049]
[113.04692841 113.91761017]
[118.17723083 128.01300049]
[123.30753326 142.10838318]
[128.43783569 156.20378113]
[133.56813049 170.29916382]
[144.66714478 183.11511230]
[135.42456055 197.32817078]
[119.20835114 192.38136292]
[119.47274780 175.42947388]
[114.34244537 161.33407593]
[109.21214294 147.23869324]
[104.08184052 133.14329529]
[98.95153809 119.04791260]
[91.46916199 118.53406525]
[90.44147491 133.49882507]
[89.41378021 148.46357727]
[93.06056976 163.01351929]
[80.34956360 170.97784424]
[68.84725189 161.34992981]
[74.44902802 147.43588257]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 37]
[3 36]
[4 35]
[5 34]
[9 33]
[10 32]
[11 31]
[38 180]
[39 179]
[40 178]
[41 177]
[42 176]
[43 175]
[44 174]
[45 173]
[46 172]
[47 59]
[48 58]
[49 57]
[50 56]
[60 76]
[61 75]
[62 74]
[63 73]
[78 170]
[79 169]
[80 168]
[81 167]
[82 166]
[87 161]
[88 160]
[90 159]
[91 158]
[92 157]
[94 155]
[95 154]
[96 153]
[101 145]
[102 144]
[104 141]
[105 140]
[106 139]
[107 138]
[108 137]
[109 136]
[114 134]
[115 133]
[116 132]
[118 131]
[119 130]
[120 129]
[121 128]
[182 214]
[183 213]
[184 212]
[185 211]
[186 210]
[187 209]
[188 208]
[193 207]
[194 206]
[195 205]
[196 204]
[197 203]
[232 244]
[233 243]
[234 242]
[235 241]
[236 240]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
