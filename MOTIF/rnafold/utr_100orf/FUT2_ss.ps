%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:28:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCACCGAUGCUGGAAGGGUUUCUUUGGCCCUGAGUGAAGAGAGACCCAGAGGGAACACUGAGGUGCCUGCCCAACCACUCUGUCCCGGUUUCCUUCAGCAGGACCAGGUGAGAGAAGCCAUGCUGGUCGUUCAGAUGCCUUUCUCCUUUCCCAUGGCCCACUUCAUCCUCUUUGUCUUUACGGUUUCCACUAUAUUUCACGUUCAGCAGCGGCUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[38.82685852 840.84771729]
[30.85605240 827.87133789]
[28.85875893 812.77398682]
[33.18102264 798.17132568]
[43.07398224 786.59332275]
[56.82362747 780.04602051]
[56.39914322 765.05206299]
[55.97465897 750.05804443]
[47.88029099 737.55480957]
[55.22396469 723.54125977]
[54.79948044 708.54724121]
[54.37500000 693.55322266]
[53.95051575 678.55926514]
[53.52603149 663.56524658]
[53.10155106 648.57128906]
[52.67706680 633.57727051]
[38.53390503 628.58020020]
[28.78411674 639.97937012]
[19.03432846 651.37854004]
[9.28453827 662.77777100]
[-0.46525013 674.17694092]
[-10.21503925 685.57617188]
[-10.40616989 701.61804199]
[-23.15538979 711.35650635]
[-38.68259048 707.32092285]
[-45.07662964 692.60711670]
[-37.43254852 678.50225830]
[-21.61423302 675.82635498]
[-11.86444378 664.42718506]
[-2.11465502 653.02795410]
[7.63513374 641.62878418]
[17.38492203 630.22961426]
[27.13471222 618.83038330]
[28.01308823 601.79315186]
[37.74726868 589.78210449]
[51.15879822 586.26391602]
[54.52616882 571.64678955]
[57.89353943 557.02960205]
[61.26091003 542.41247559]
[64.62828064 527.79534912]
[67.99565125 513.17822266]
[69.79560089 498.28659058]
[70.00786591 483.28808594]
[70.22012329 468.28958130]
[70.43238831 453.29107666]
[70.64465332 438.29260254]
[70.85691071 423.29409790]
[60.32311249 412.82629395]
[60.32471848 397.61267090]
[71.37572479 386.63482666]
[71.58798981 371.63632202]
[71.80024719 356.63781738]
[72.01251221 341.63931274]
[72.22477722 326.64083862]
[72.43703461 311.64233398]
[60.05228424 320.10507202]
[45.67201996 315.83798218]
[39.90760803 301.98983765]
[47.01268005 288.77929688]
[61.74431992 285.95462036]
[73.23221588 295.60089111]
[74.50430298 280.65493774]
[75.77639008 265.70898438]
[77.04847717 250.76301575]
[78.32057190 235.81704712]
[79.59265900 220.87109375]
[80.86474609 205.92512512]
[73.60817719 198.74501038]
[71.45211792 188.54244995]
[75.34342957 178.63165283]
[84.22364044 172.36828613]
[85.91817474 157.46430969]
[87.61270905 142.56033325]
[70.42922211 133.02114868]
[59.05910110 116.99028778]
[55.73760986 97.61928558]
[61.11772537 78.71630096]
[74.14176178 63.99752045]
[67.57891846 50.50941086]
[61.01607132 37.02130127]
[54.45322800 23.53319550]
[39.78576660 18.28882599]
[33.32225418 4.51647615]
[38.41234589 -9.43438530]
[31.84950256 -22.92249298]
[25.28665733 -36.41060257]
[18.72381210 -49.89870834]
[6.81389189 -54.83638763]
[1.62350214 -66.19924927]
[5.43740797 -77.67350006]
[-0.93391216 -91.25312805]
[-7.30523205 -104.83275604]
[-22.25240898 -109.96670532]
[-29.11625099 -124.20269012]
[-23.82455826 -139.09475708]
[-9.51680183 -145.80769348]
[5.31848240 -140.35885620]
[11.87978268 -125.98092651]
[6.27439547 -111.20407867]
[12.64571571 -97.62445068]
[19.01703453 -84.04482269]
[33.93658066 -74.79851532]
[32.21192169 -56.46155548]
[38.77476501 -42.97344589]
[45.33761215 -29.48533821]
[51.90045547 -15.99723053]
[66.01899719 -11.39262390]
[72.86679840 2.19274592]
[67.94133759 16.97035027]
[74.50418091 30.45845795]
[81.06702423 43.94656754]
[87.62986755 57.43467331]
[102.19457245 55.72798920]
[116.51908112 58.86671829]
[124.38368988 46.09378052]
[132.24830627 33.32084274]
[140.11291504 20.54790497]
[147.88694763 7.71964169]
[155.57002258 -5.16330719]
[155.99325562 -20.97885132]
[169.15750122 -27.94675446]
[176.84057617 -40.82970428]
[184.52365112 -53.71265411]
[186.22911072 -62.67806625]
[192.40769958 -66.72245026]
[200.27230835 -79.49539185]
[208.13691711 -92.26832581]
[216.00152588 -105.04125977]
[215.92448425 -121.44023132]
[230.22235107 -129.47161865]
[244.18670654 -120.87342834]
[243.45220947 -104.49073792]
[228.77447510 -97.17665100]
[220.90986633 -84.40371704]
[213.04525757 -71.63078308]
[205.18063354 -58.85784149]
[197.40660095 -46.02957916]
[189.72352600 -33.14662933]
[182.04045105 -20.26368141]
[182.16676331 -5.36961126]
[168.45297241 2.51976657]
[160.76989746 15.40271568]
[160.04411316 22.75154686]
[152.88584900 28.41251564]
[145.02124023 41.18545151]
[137.15663147 53.95838928]
[129.29202271 66.73132324]
[136.26611328 74.51282501]
[141.22482300 83.71069336]
[143.89257812 93.81379700]
[144.12112427 104.26068115]
[141.89776611 114.47078705]
[137.34606934 123.87672424]
[130.71896362 131.95578003]
[122.38475037 138.25898743]
[112.80656433 142.43605042]
[102.51668549 144.25486755]
[100.82215118 159.15884399]
[99.12762451 174.06282043]
[107.99124908 192.17387390]
[95.81070709 207.19721985]
[94.53862000 222.14317322]
[93.26653290 237.08914185]
[91.99444580 252.03509521]
[90.72235107 266.98107910]
[89.45026398 281.92703247]
[88.17817688 296.87298584]
[87.43553925 311.85458374]
[87.22327423 326.85308838]
[87.01100922 341.85159302]
[86.79874420 356.85009766]
[86.58648682 371.84857178]
[86.37422180 386.84707642]
[97.11013794 398.13327026]
[96.68122101 413.34085083]
[85.85540771 423.50634766]
[85.64315033 438.50485229]
[85.43088531 453.50335693]
[85.21862030 468.50186157]
[85.00636292 483.50033569]
[84.79409790 498.49884033]
[92.30604553 485.51538086]
[103.95738983 476.06835938]
[118.21320343 471.40234375]
[133.19544983 472.13201904]
[146.93037415 478.16125488]
[157.60856628 488.69577026]
[163.82328796 502.34777832]
[164.75582886 517.31878662]
[160.28334045 531.63647461]
[150.99499512 543.41473389]
[138.11445618 551.10180664]
[123.33858490 553.68511963]
[108.61392212 550.82427979]
[95.88028717 542.89624023]
[86.81517792 530.94531250]
[82.61279297 516.54559326]
[79.24542236 531.16271973]
[75.87805176 545.77984619]
[72.51068115 560.39697266]
[69.14331055 575.01416016]
[65.77593994 589.63128662]
[79.21311951 608.57000732]
[67.67105865 633.15277100]
[68.09554291 648.14678955]
[68.52002716 663.14080811]
[68.94451141 678.13476562]
[69.36898804 693.12878418]
[69.79347229 708.12274170]
[70.21795654 723.11676025]
[78.34268951 736.69244385]
[70.96865082 749.63354492]
[71.39313507 764.62756348]
[71.81761932 779.62158203]
[85.91565704 785.38049316]
[96.44779205 796.38018799]
[101.58927917 810.71496582]
[100.44931793 825.90112305]
[93.22541809 839.30767822]
[81.16915894 848.61181641]
[66.36936951 852.20147705]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 214]
[7 213]
[8 212]
[10 210]
[11 209]
[12 208]
[13 207]
[14 206]
[15 205]
[16 204]
[17 33]
[18 32]
[19 31]
[20 30]
[21 29]
[22 28]
[36 202]
[37 201]
[38 200]
[39 199]
[40 198]
[41 197]
[42 181]
[43 180]
[44 179]
[45 178]
[46 177]
[47 176]
[50 173]
[51 172]
[52 171]
[53 170]
[54 169]
[55 168]
[61 167]
[62 166]
[63 165]
[64 164]
[65 163]
[66 162]
[67 161]
[71 159]
[72 158]
[73 157]
[78 112]
[79 111]
[80 110]
[81 109]
[84 106]
[85 105]
[86 104]
[87 103]
[90 101]
[91 100]
[92 99]
[114 147]
[115 146]
[116 145]
[117 144]
[118 142]
[119 141]
[121 139]
[122 138]
[123 137]
[125 136]
[126 135]
[127 134]
[128 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
