%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:04:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGACCUUGCUUCAUGAGCAAGCUCAUCUCUGGAACAAACUGGCAAAGCAUCUCUGCUGGUGUUCAUCAGAACAGACACCAUGGCAGAGCAUGAUUACCAUGAAGACUAUGGGUUCAGCAGUUUCAAUGACAGCAGCCAGGAGGAGCAUCAAGACUUCCUGCAGUUCAGCAAGGUCUUUC\
) } def
/len { sequence length } bind def

/coor [
[80.09714508 343.45657349]
[79.99143982 327.65264893]
[91.15107727 316.46166992]
[90.89216614 301.46389771]
[90.63325500 286.46612549]
[90.37435150 271.46835327]
[90.11544037 256.47061157]
[89.85652924 241.47283936]
[89.59761810 226.47506714]
[89.33870697 211.47729492]
[89.07980347 196.47953796]
[88.82089233 181.48176575]
[86.87322998 179.43154907]
[85.63124084 176.47640991]
[85.44741821 172.88525391]
[86.56899261 169.05072021]
[89.09767151 165.44866943]
[89.87409210 150.46878052]
[90.65051270 135.48889160]
[91.42693329 120.50900269]
[80.62663269 110.89904785]
[78.02073669 96.67910004]
[84.71145630 83.86380768]
[78.67354584 70.13268280]
[72.63563538 56.40156555]
[60.90668869 50.99490738]
[56.16720200 39.41319656]
[60.45783234 28.08578873]
[54.65782928 14.25249577]
[40.30585098 8.19787216]
[34.62088394 -5.91367674]
[40.48149109 -19.55878258]
[34.68148804 -33.39207458]
[28.88148689 -47.22536850]
[23.08148575 -61.05865860]
[17.28148460 -74.89195251]
[11.48148441 -88.72524261]
[-1.50281370 -92.36403656]
[-9.89170647 -102.67155457]
[-10.79066086 -115.73569489]
[-4.09474087 -126.76211548]
[-9.65510654 -140.69346619]
[-15.21547222 -154.62480164]
[-20.77583694 -168.55615234]
[-35.16381454 -169.18600464]
[-48.08308411 -175.42820740]
[-57.44805527 -186.22810364]
[-61.76552963 -199.79914856]
[-60.37267303 -213.91839600]
[-53.53840256 -226.29057312]
[-62.68693161 -238.17771912]
[-71.83546448 -250.06486511]
[-81.08624268 -261.87261963]
[-90.43859100 -273.60009766]
[-99.79093933 -285.32757568]
[-109.14328766 -297.05505371]
[-118.49563599 -308.78250122]
[-127.84797668 -320.50997925]
[-137.20033264 -332.23745728]
[-146.75370789 -343.80175781]
[-156.50526428 -355.19943237]
[-166.25682068 -366.59710693]
[-176.00839233 -377.99478149]
[-185.75994873 -389.39245605]
[-195.51150513 -400.79013062]
[-210.59590149 -397.89932251]
[-225.09950256 -402.95315552]
[-235.12091064 -414.59219360]
[-237.96441650 -429.68557739]
[-232.86515808 -444.17324829]
[-221.19477844 -454.15814209]
[-206.09255981 -456.95431519]
[-191.62092590 -451.80966187]
[-181.67268372 -440.10803223]
[-178.92384338 -424.99713135]
[-184.11383057 -410.54171753]
[-174.36227417 -399.14401245]
[-164.61071777 -387.74633789]
[-154.85914612 -376.34866333]
[-145.10758972 -364.95098877]
[-135.35603333 -353.55331421]
[-130.72412109 -352.29626465]
[-126.84264374 -348.10064697]
[-125.47285461 -341.58981323]
[-116.12050629 -329.86233521]
[-106.76815796 -318.13485718]
[-97.41581726 -306.40737915]
[-88.06346893 -294.67990112]
[-78.71112061 -282.95245361]
[-69.35877228 -271.22497559]
[-62.71289444 -267.94726562]
[-59.94831085 -259.21340942]
[-50.79977798 -247.32624817]
[-41.65124893 -235.43910217]
[-36.81475830 -237.29048157]
[-31.75783539 -238.40707397]
[-26.59144211 -238.76435852]
[-21.42895508 -238.35450745]
[-16.38365746 -237.18649292]
[-8.95852566 -250.21981812]
[-1.53339362 -263.25314331]
[5.89173841 -276.28646851]
[13.31686974 -289.31976318]
[10.47930908 -305.10989380]
[21.16324997 -317.07788086]
[37.17288589 -316.04293823]
[46.22699356 -302.79898071]
[41.38003922 -287.50564575]
[26.35018921 -281.89465332]
[18.92505836 -268.86132812]
[11.49992561 -255.82800293]
[4.07479429 -242.79469299]
[-3.35033751 -229.76136780]
[7.51766300 -211.87867737]
[6.26423073 -190.83172607]
[-6.84449434 -174.11651611]
[-1.28412855 -160.18516541]
[4.27623701 -146.25382996]
[9.83660221 -132.32247925]
[25.55089188 -126.36370087]
[32.23655701 -110.57749939]
[25.31477737 -94.52524567]
[31.11477852 -80.69195557]
[36.91477966 -66.85865784]
[42.71477890 -53.02536774]
[48.51478195 -39.19207764]
[54.31478119 -25.35878372]
[68.15439606 -19.97355461]
[74.23348236 -6.02725172]
[68.49111938 8.45249462]
[74.29112244 22.28578758]
[88.80950165 32.12431717]
[86.36675262 50.36365509]
[92.40466309 64.09477234]
[98.44257355 77.82589722]
[116.11975098 84.69411469]
[122.06376648 102.70310211]
[135.46394348 109.44365692]
[144.56262207 110.51014709]
[149.03575134 116.41795349]
[162.31759644 123.38880157]
[175.59942627 130.35964966]
[188.88127136 137.33050537]
[202.16311646 144.30134583]
[215.44494629 151.27220154]
[228.38307190 142.99568176]
[243.72679138 142.31311035]
[257.34872437 149.40808105]
[265.58462524 162.37208557]
[266.21911621 177.71786499]
[259.08148193 191.31748962]
[246.09172058 199.51272583]
[230.74401855 200.09909058]
[217.16683960 192.91886902]
[209.01235962 179.90348816]
[208.47410583 164.55403137]
[195.19226074 157.58319092]
[181.91041565 150.61233521]
[168.62858582 143.64149475]
[155.34674072 136.67063904]
[142.06489563 129.69979858]
[128.72338867 122.84384155]
[115.32321167 116.10328674]
[111.16970062 119.21858978]
[106.40682983 121.28541565]
[105.63040924 136.26530457]
[104.85398865 151.24520874]
[104.07756805 166.22509766]
[103.81865692 181.22285461]
[104.07756805 196.22062683]
[104.33647156 211.21839905]
[104.59538269 226.21615601]
[104.85429382 241.21392822]
[105.11320496 256.21170044]
[105.37211609 271.20944214]
[105.63101959 286.20721436]
[105.88993073 301.20498657]
[106.14884186 316.20275879]
[117.68810272 327.00186157]
[118.12794495 342.80004883]
[107.20742035 354.22448730]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 178]
[4 177]
[5 176]
[6 175]
[7 174]
[8 173]
[9 172]
[10 171]
[11 170]
[12 169]
[17 168]
[18 167]
[19 166]
[20 165]
[23 135]
[24 134]
[25 133]
[28 131]
[29 130]
[32 127]
[33 126]
[34 125]
[35 124]
[36 123]
[37 122]
[41 119]
[42 118]
[43 117]
[44 116]
[50 94]
[51 93]
[52 92]
[53 90]
[54 89]
[55 88]
[56 87]
[57 86]
[58 85]
[59 84]
[60 81]
[61 80]
[62 79]
[63 78]
[64 77]
[65 76]
[99 113]
[100 112]
[101 111]
[102 110]
[103 109]
[137 163]
[138 162]
[140 161]
[141 160]
[142 159]
[143 158]
[144 157]
[145 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
