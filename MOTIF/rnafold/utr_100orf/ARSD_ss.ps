%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:04:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAGAUCCCGCAGCUGAGAGGGCGGAAGCCUUGGCACUAGCGGCGCCCGGGCGCGGAGUGCGCAGGGCAAGGUCCUGCGCUCUGGGCCAGCGCUCGGCCAUGCGAUCCGCCGCGCGGAGGGGACGCGCCGCGCCCGCCGCCAGGGACUCUUUGCCGGUGCUACUGUUUUUAUGCUUGCUUCUGAAGACGUGUGAACCUA\
) } def
/len { sequence length } bind def

/coor [
[216.76506042 433.08963013]
[212.06427002 419.84848022]
[212.76895142 405.77200317]
[218.80566406 392.98818970]
[208.92649841 381.70092773]
[199.04733276 370.41369629]
[189.08026123 359.20397949]
[179.02589417 348.07250977]
[168.97152710 336.94104004]
[158.91714478 325.80957031]
[143.93363953 325.10647583]
[132.88107300 335.24752808]
[121.90811157 345.47463989]
[111.01539612 355.78720093]
[106.93058777 363.96667480]
[99.87092590 366.17416382]
[88.81836700 376.31521606]
[87.98054504 391.86950684]
[76.62722015 401.99655151]
[61.80374527 401.10195923]
[50.75119019 411.24301147]
[39.69863129 421.38406372]
[28.64607239 431.52511597]
[17.59351540 441.66616821]
[13.19120979 457.46337891]
[-2.75598240 461.28686523]
[-13.84295750 449.20336914]
[-8.66438580 433.64334106]
[7.45246124 430.61361694]
[18.50502014 420.47256470]
[29.55757713 410.33151245]
[40.61013412 400.19042969]
[51.66269302 390.04937744]
[52.04412460 375.20385742]
[63.10852814 364.76193237]
[78.67731476 365.26266479]
[89.72986603 355.12161255]
[100.70284271 344.89450073]
[111.59555054 334.58193970]
[114.29372406 327.69485474]
[122.74002838 324.19497681]
[133.79258728 314.05392456]
[138.06967163 299.67663574]
[134.35749817 285.14321899]
[130.64530945 270.60983276]
[126.93313599 256.07644653]
[116.68874359 249.63424683]
[113.48046875 237.55036926]
[119.55683899 226.16717529]
[116.07226562 211.57752991]
[112.58768463 196.98788452]
[109.10310364 182.39823914]
[105.61852264 167.80859375]
[102.13394165 153.21894836]
[98.64936066 138.62931824]
[95.16477966 124.03966522]
[91.68019867 109.45001984]
[83.48114014 96.88915253]
[71.52752686 87.82763672]
[55.85595322 85.65685272]
[50.38759995 71.80238342]
[38.43398285 62.74086761]
[26.48036766 53.67935181]
[14.52675247 44.61783600]
[2.57313585 35.55632019]
[-9.38048077 26.49480629]
[-21.33409691 17.43329048]
[-33.28771210 8.37177563]
[-45.24132919 -0.68973953]
[-61.51625824 -5.43980074]
[-61.45718002 -22.39364433]
[-45.14953995 -27.03016663]
[-36.17981339 -12.64335632]
[-24.22619820 -3.58184075]
[-12.27258205 5.47967434]
[-0.31896535 14.54119015]
[11.63465118 23.60270500]
[23.58826637 32.66421890]
[35.54188538 41.72573471]
[47.49549866 50.78725052]
[59.44911575 59.84876633]
[74.26568604 61.37141037]
[80.58904266 75.87402344]
[92.54265594 84.93553925]
[105.10408020 76.73610687]
[117.66439819 68.53742218]
[114.17981720 53.94778061]
[110.69523621 39.35813522]
[107.21065521 24.76849174]
[93.14424896 17.93693161]
[86.80722809 3.64091372]
[91.19173431 -11.36942005]
[104.22754669 -20.00664711]
[119.75954437 -18.19253540]
[130.45399475 -6.78365088]
[131.26132202 8.83307934]
[121.80030060 21.28391266]
[125.28488159 35.87355423]
[128.76947021 50.46319962]
[132.25404358 65.05284119]
[139.70919800 65.87177277]
[154.61950684 67.50962830]
[162.07466125 68.32855988]
[168.64320374 54.84322357]
[175.21174622 41.35789108]
[176.15797424 32.26427460]
[181.98979187 27.71433640]
[188.76829529 14.33331013]
[195.54679871 0.95228380]
[196.63502502 -8.12543297]
[202.53724670 -12.58366776]
[209.52404785 -25.85711861]
[203.43865967 -40.26204681]
[208.08566284 -55.19319916]
[221.27090454 -63.60054016]
[236.76870728 -61.51438522]
[247.26148987 -49.91975021]
[247.79487610 -34.29126358]
[238.11701965 -22.00822639]
[222.79750061 -18.87030602]
[215.81069946 -5.59685659]
[208.92782593 7.73078871]
[202.14932251 21.11181450]
[195.37081909 34.49284363]
[188.69708252 47.92643356]
[182.12854004 61.41176605]
[175.55999756 74.89710236]
[143.07482910 109.62721252]
[106.26984406 105.96544647]
[109.75442505 120.55508423]
[113.23900604 135.14472961]
[116.72358704 149.73437500]
[120.20816803 164.32402039]
[123.69274902 178.91366577]
[127.17732239 193.50331116]
[130.66191101 208.09294128]
[134.14648438 222.68258667]
[147.11303711 235.75212097]
[141.46653748 252.36425781]
[145.17871094 266.89764404]
[148.89088440 281.43106079]
[152.60307312 295.96444702]
[164.87960815 302.04650879]
[170.04861450 315.75518799]
[180.10299683 326.88665771]
[190.15736389 338.01812744]
[200.21173096 349.14959717]
[208.29318237 353.42504883]
[210.33457947 360.53451538]
[220.21374512 371.82177734]
[230.09291077 383.10903931]
[245.73399353 378.64059448]
[261.70108032 381.42855835]
[274.80798340 390.86505127]
[282.46163940 405.02078247]
[283.17526245 421.03903198]
[276.85668945 435.71237183]
[286.91104126 446.84387207]
[296.96542358 457.97534180]
[309.78884888 459.41012573]
[317.93402100 468.89535522]
[317.44543457 480.98712158]
[327.32461548 492.27435303]
[337.20376587 503.56161499]
[347.17083740 514.77130127]
[357.22521973 525.90277100]
[367.27957153 537.03424072]
[377.33395386 548.16571045]
[387.38830566 559.29718018]
[397.44268799 570.42871094]
[407.49707031 581.56018066]
[417.55142212 592.69165039]
[432.55267334 589.39642334]
[447.18685913 594.05865479]
[457.51745605 605.42413330]
[460.76562500 620.43560791]
[456.05755615 635.05511475]
[444.65975952 645.35003662]
[429.63815308 648.55114746]
[415.03347778 643.79730225]
[404.77432251 632.36724854]
[401.62036133 617.33569336]
[406.41995239 602.74597168]
[396.36560059 591.61450195]
[386.31121826 580.48303223]
[376.25683594 569.35156250]
[366.20248413 558.22009277]
[356.14810181 547.08862305]
[346.09375000 535.95715332]
[336.03936768 524.82568359]
[329.21743774 521.96679688]
[325.91650391 513.44079590]
[316.03735352 502.15353394]
[306.15817261 490.86627197]
[289.26760864 486.11709595]
[285.83395386 468.02969360]
[275.77957153 456.89822388]
[265.72521973 445.76675415]
[252.61895752 450.32870483]
[238.72010803 449.54681396]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 151]
[5 150]
[6 149]
[7 147]
[8 146]
[9 145]
[10 144]
[11 42]
[12 41]
[13 39]
[14 38]
[16 37]
[17 36]
[20 33]
[21 32]
[22 31]
[23 30]
[24 29]
[43 142]
[44 141]
[45 140]
[46 139]
[49 137]
[50 136]
[51 135]
[52 134]
[53 133]
[54 132]
[55 131]
[56 130]
[57 129]
[58 84]
[59 83]
[61 81]
[62 80]
[63 79]
[64 78]
[65 77]
[66 76]
[67 75]
[68 74]
[69 73]
[86 100]
[87 99]
[88 98]
[89 97]
[103 127]
[104 126]
[105 125]
[107 124]
[108 123]
[109 122]
[111 121]
[112 120]
[157 198]
[158 197]
[159 196]
[162 194]
[163 193]
[164 192]
[165 190]
[166 189]
[167 188]
[168 187]
[169 186]
[170 185]
[171 184]
[172 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
