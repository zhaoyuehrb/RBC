%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:54:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCAGAGGAGUGAGUCCUGGCCGCGUCCCCGUCGCUAGGGAAACCGAUGCAGCUGGAGGCCGCGCGCGAUGCGGCUCGCGGAGGAGCGGGCCGCGCUCGCGGCGGAGAACGCGGAUGGGGAACCCGGCGCCGACCGACGACUGCGACUCCUGGGGACCUACGUGGCCA\
) } def
/len { sequence length } bind def

/coor [
[-39.12778091 565.27825928]
[-39.68645859 580.26782227]
[-49.63294983 591.49578857]
[-64.44576263 593.85815430]
[-77.39126587 586.28094482]
[-82.58467102 572.20965576]
[-89.05701447 585.74145508]
[-95.52935791 599.27319336]
[-102.00170135 612.80499268]
[-98.04022217 628.35125732]
[-107.83932495 641.05389404]
[-123.88196564 641.16851807]
[-133.86161804 628.60723877]
[-130.12272644 613.00592041]
[-115.53347015 606.33264160]
[-109.06112671 592.80084229]
[-102.58878326 579.26910400]
[-96.11643982 565.73730469]
[-90.53758240 551.81335449]
[-85.87580872 537.55615234]
[-81.21404266 523.29895020]
[-76.55227661 509.04174805]
[-71.89051056 494.78454590]
[-67.22874451 480.52734375]
[-62.56698227 466.27014160]
[-57.90521622 452.01293945]
[-65.17357635 443.15771484]
[-67.26821136 431.77249146]
[-63.55114365 420.68243408]
[-54.84134674 412.69680786]
[-43.23752975 409.89758301]
[-38.04904556 395.82348633]
[-32.86055756 381.74942017]
[-35.71789932 367.13146973]
[-23.68474197 356.85946655]
[-18.49625587 342.78540039]
[-13.30776978 328.71133423]
[-8.11928463 314.63723755]
[-2.93079877 300.56317139]
[2.25768685 286.48910522]
[-3.85093856 280.26239014]
[-7.60470867 272.34036255]
[-8.56463814 263.58282471]
[-6.59671354 254.95077515]
[-1.88976097 247.40069580]
[5.06228018 241.77880859]
[13.51206779 238.72612000]
[22.53915405 238.60551453]
[29.01149750 225.07374573]
[35.48384094 211.54197693]
[41.95618439 198.01020813]
[48.42852783 184.47843933]
[46.94025803 169.65837097]
[59.87484360 160.54754639]
[66.34719086 147.01577759]
[61.16375351 133.09933472]
[67.53486633 119.28399658]
[82.16686249 113.94149017]
[88.63920593 100.40972137]
[91.41157532 85.66814423]
[90.29724121 70.70959473]
[89.18291473 55.75104141]
[88.06858063 40.79249191]
[84.29715729 32.42755508]
[87.07520294 25.54598236]
[86.23911285 10.56930161]
[85.40303040 -4.40737867]
[84.56694794 -19.38405991]
[83.73085785 -34.36074066]
[82.75560760 -49.32900238]
[81.64128113 -64.28755188]
[80.52694702 -79.24610901]
[79.41262054 -94.20465851]
[78.29828644 -109.16320801]
[77.18395996 -124.12175751]
[76.06962585 -139.08030701]
[74.95529175 -154.03886414]
[73.84096527 -168.99742126]
[72.72663116 -183.95596313]
[60.58993149 -194.07901001]
[59.24928284 -209.82633972]
[69.50007629 -221.85533142]
[85.26069641 -223.02941895]
[97.18064117 -212.65200806]
[98.18802643 -196.87986755]
[87.68518829 -185.07029724]
[88.79951477 -170.11174011]
[89.91384888 -155.15319824]
[91.02817535 -140.19464111]
[92.14250946 -125.23609161]
[93.25683594 -110.27754211]
[94.37117004 -95.31898499]
[95.48550415 -80.36043549]
[96.59983063 -65.40188599]
[97.71416473 -50.44333267]
[101.36166382 -43.98041534]
[98.70754242 -35.19682312]
[99.54362488 -20.22014427]
[100.37971497 -5.24346352]
[101.21579742 9.73321724]
[102.05187988 24.70989799]
[103.02713013 39.67816162]
[104.14146423 54.63671112]
[105.25579071 69.59526062]
[106.37012482 84.55381775]
[112.42131805 88.98473358]
[117.10975647 74.73627472]
[132.10964966 74.79241943]
[136.69129944 89.07556915]
[124.52371216 97.84656525]
[130.57490540 102.27748108]
[145.17176819 98.82327271]
[159.76863098 95.36905670]
[167.21499634 84.80512238]
[179.47372437 82.24494171]
[189.83879089 88.53027344]
[204.49732971 85.34798431]
[219.15588379 82.16570282]
[233.81443787 78.98341370]
[248.01026917 69.71440125]
[260.84683228 80.78953552]
[253.75804138 96.19035339]
[236.99671936 93.64196014]
[222.33816528 96.82424927]
[207.67962646 100.00653839]
[193.02107239 103.18881989]
[180.71101379 115.67182159]
[163.22285461 109.96591949]
[148.62599182 113.42013550]
[134.02911377 116.87435150]
[123.90095520 118.60965729]
[114.69721222 117.16806793]
[107.23602295 113.03421783]
[102.17097473 106.88206482]
[95.69863129 120.41383362]
[100.72297668 135.15811157]
[93.96633911 148.78904724]
[79.87895966 153.48812866]
[73.40661621 167.01989746]
[74.43193817 182.80784607]
[61.96029663 190.95077515]
[55.48795319 204.48254395]
[49.01560974 218.01431274]
[42.54326630 231.54608154]
[36.07092285 245.07785034]
[44.91154480 264.97918701]
[36.36588669 284.70254517]
[16.33176231 291.67758179]
[11.14327717 305.75164795]
[5.95479155 319.82574463]
[0.76630604 333.89981079]
[-4.42217970 347.97387695]
[-9.61066532 362.04794312]
[-7.12444162 377.67260742]
[-18.78648376 386.93789673]
[-23.97496796 401.01199341]
[-29.16345406 415.08605957]
[-20.56805992 431.93356323]
[-26.86885071 449.42874146]
[-43.64801025 456.67468262]
[-48.30977631 470.93188477]
[-52.97154236 485.18911743]
[-57.63330841 499.44631958]
[-62.29507446 513.70349121]
[-66.95684052 527.96075439]
[-71.61860657 542.21795654]
[-76.28037262 556.47515869]
[-62.80674362 549.88262939]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 18]
[7 17]
[8 16]
[9 15]
[19 167]
[20 166]
[21 165]
[22 164]
[23 163]
[24 162]
[25 161]
[26 160]
[31 157]
[32 156]
[33 155]
[35 153]
[36 152]
[37 151]
[38 150]
[39 149]
[40 148]
[48 145]
[49 144]
[50 143]
[51 142]
[52 141]
[54 139]
[55 138]
[58 135]
[59 134]
[60 105]
[61 104]
[62 103]
[63 102]
[65 101]
[66 100]
[67 99]
[68 98]
[69 97]
[70 95]
[71 94]
[72 93]
[73 92]
[74 91]
[75 90]
[76 89]
[77 88]
[78 87]
[79 86]
[111 130]
[112 129]
[113 128]
[116 126]
[117 125]
[118 124]
[119 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
