%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:26:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGGCUGCUGGAGAAGGCGCACCUGCUGCAGGUGCUCCCGGCCGCCCCGGACCAGCGAGCGCGGGCACUGCGGCGGGGAGGAUGCUGCGCGAGCGGACCGUGCGGCUGCAGUACGGGAGCCGCGUGGAGGCGGUGUACGUGCUGGGCACCUACCUCUGGACCGAUGUCUACAGCGCGGCCC\
) } def
/len { sequence length } bind def

/coor [
[105.01657104 407.99871826]
[90.84336090 400.48208618]
[88.02497101 384.68853760]
[98.72343445 372.73352051]
[99.23834991 357.74237061]
[99.75326538 342.75119019]
[100.26817322 327.76004028]
[100.78308868 312.76889038]
[101.29800415 297.77770996]
[115.79455566 274.22146606]
[136.09233093 270.49990845]
[132.52183533 255.93104553]
[128.95133972 241.36218262]
[125.38083649 226.79333496]
[112.57543945 214.80929565]
[117.83560181 197.17442322]
[114.01553345 182.66900635]
[110.19546509 168.16358948]
[99.47201538 157.82643127]
[103.43968964 142.51081848]
[99.61962128 128.00540161]
[74.28828430 120.67626953]
[62.79746628 92.35507202]
[47.99650574 89.91957855]
[33.19554901 87.48408508]
[18.39459038 85.04859161]
[3.59363103 82.61310577]
[-11.20732784 80.17761230]
[-26.00828552 77.74211884]
[-40.80924606 75.30662537]
[-55.61020279 72.87113190]
[-70.41116333 70.43563843]
[-79.41256714 72.13230896]
[-85.44438934 67.82920837]
[-100.20136261 65.13999176]
[-114.95832825 62.45078278]
[-129.71530151 59.76157379]
[-144.47225952 57.07236099]
[-159.43600464 62.21019363]
[-170.56991577 52.31650162]
[-185.32688904 49.62728882]
[-198.23280334 58.34937286]
[-213.16017151 55.41191101]
[-221.39581299 43.05432892]
[-236.15277100 40.36511612]
[-250.90974426 37.67590714]
[-261.36666870 49.01858521]
[-276.30163574 52.88509750]
[-290.94897461 48.04165649]
[-300.63476562 36.03378296]
[-302.26831055 20.69314766]
[-295.32833862 6.91489077]
[-282.02938843 -0.90439546]
[-266.61508179 -0.26960558]
[-254.00408936 8.61670113]
[-248.22053528 22.91893768]
[-233.46356201 25.60814857]
[-218.70658875 28.29735947]
[-206.64120483 19.63930130]
[-191.63723755 22.15632629]
[-182.63766479 34.87031937]
[-167.88070679 37.55953217]
[-153.97248840 32.22934723]
[-141.78305054 42.31539154]
[-127.02608490 45.00460434]
[-112.26911926 47.69381332]
[-97.51214600 50.38302612]
[-82.75518036 53.07223511]
[-67.97566986 55.63468170]
[-53.17471313 58.07017517]
[-38.37375259 60.50566864]
[-23.57279396 62.94115829]
[-8.77183533 65.37664795]
[6.02912331 67.81214142]
[20.83008194 70.24763489]
[35.63104248 72.68312836]
[50.43199921 75.11862183]
[65.23295593 77.55411530]
[71.30814362 73.15614319]
[57.61550140 67.03147888]
[56.07340240 52.11096191]
[68.22396851 43.31529236]
[81.91648102 49.44025421]
[83.45851898 64.36021423]
[89.53370667 59.96224594]
[91.84206390 45.14092636]
[94.15042114 30.31960869]
[96.45877838 15.49829102]
[98.76713562 0.67697233]
[101.07550049 -14.14434624]
[103.38385773 -28.96566391]
[105.69221497 -43.78698349]
[95.26712799 -55.44252014]
[94.82474518 -71.07384491]
[104.57396698 -83.30032349]
[119.91149139 -86.34899139]
[133.59541321 -78.78035736]
[139.16461182 -64.16809845]
[133.98945618 -49.41167450]
[120.51353455 -41.47862625]
[118.20517731 -26.65730667]
[115.89681244 -11.83598709]
[113.58845520 2.98533106]
[111.28009796 17.80665016]
[108.97174072 32.62796783]
[106.66338348 47.44928741]
[104.35501862 62.27060318]
[113.44015503 68.05636597]
[119.74038696 75.66876984]
[123.02309418 84.05057526]
[137.19042969 79.12243652]
[151.35777283 74.19429779]
[165.52511597 69.26616669]
[179.69244385 64.33802795]
[193.85978699 59.40989304]
[208.02713013 54.48175812]
[212.61032104 39.77460098]
[224.83189392 30.69238663]
[239.87994385 30.54986382]
[251.98156738 39.19212341]
[266.14889526 34.26398849]
[280.31625366 29.33585167]
[294.48358154 24.40771484]
[308.65090942 19.47957993]
[315.30783081 5.14567280]
[330.17907715 -0.20423271]
[344.44180298 6.60386753]
[349.63418579 21.53084755]
[342.67568970 35.72079468]
[327.69464111 40.75506592]
[313.57904053 33.64691925]
[299.41171265 38.57505417]
[285.24438477 43.50318909]
[271.07702637 48.43132401]
[256.90969849 53.35946274]
[252.78404236 67.64640808]
[240.89611816 76.87361908]
[225.67643738 77.33689117]
[212.95526123 68.64909363]
[198.78791809 73.57723236]
[184.62059021 78.50537109]
[170.45324707 83.43350220]
[156.28590393 88.36164093]
[142.11856079 93.28977203]
[127.95123291 98.21791077]
[124.72205353 113.16310120]
[114.12503815 124.18533325]
[117.94510651 138.69075012]
[128.94180298 150.06542969]
[124.70088196 164.34352112]
[128.52095032 178.84893799]
[132.34101868 193.35435486]
[143.08152771 200.52542114]
[145.95506287 212.70429993]
[139.94969177 223.22283936]
[143.52018738 237.79168701]
[147.09069824 252.36054993]
[150.66119385 266.92941284]
[157.01991272 280.51492310]
[165.91981506 292.58935547]
[174.81971741 304.66378784]
[183.71961975 316.73822021]
[198.95492554 322.80593872]
[201.04969788 339.07073975]
[187.84901428 348.80078125]
[172.93260193 341.98663330]
[171.64518738 325.63812256]
[162.74528503 313.56369019]
[153.84538269 301.48925781]
[144.94548035 289.41482544]
[137.78140259 291.63427734]
[146.43054199 303.88958740]
[137.44763184 315.90237427]
[123.24697113 311.07113647]
[123.45324707 296.07318115]
[116.28916168 298.29263306]
[115.77424622 313.28378296]
[115.25933838 328.27496338]
[114.74442291 343.26611328]
[114.22950745 358.25726318]
[113.71459198 373.24844360]
[123.56755066 385.90936279]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 181]
[5 180]
[6 179]
[7 178]
[8 177]
[9 176]
[11 158]
[12 157]
[13 156]
[14 155]
[16 152]
[17 151]
[18 150]
[20 148]
[21 147]
[23 78]
[24 77]
[25 76]
[26 75]
[27 74]
[28 73]
[29 72]
[30 71]
[31 70]
[32 69]
[34 68]
[35 67]
[36 66]
[37 65]
[38 64]
[40 62]
[41 61]
[44 58]
[45 57]
[46 56]
[85 107]
[86 106]
[87 105]
[88 104]
[89 103]
[90 102]
[91 101]
[92 100]
[110 145]
[111 144]
[112 143]
[113 142]
[114 141]
[115 140]
[116 139]
[120 135]
[121 134]
[122 133]
[123 132]
[124 131]
[159 170]
[160 169]
[161 168]
[162 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
