%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:45:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCUCCGUCCUGUCCACAAGGCUCAGCAAAGCGGCUGGCGGCCUGGCCUGGGACCUGCUGCUGCUCCAGCCAUGUCCAUGACAACCAGAGCCUGGGAGGAGCUGGAUGGCGGCCUGGGCAGCUGCCAGGCCCUGGAGGACCACUCUGCGCUGGCCGAGACCCAGGAGGACA\
) } def
/len { sequence length } bind def

/coor [
[87.76152039 413.74453735]
[87.21369171 398.75454712]
[86.66586304 383.76455688]
[86.11802673 368.77456665]
[85.57019806 353.78457642]
[85.02236938 338.79458618]
[74.01924133 333.56838989]
[66.24755859 324.09472656]
[63.23770905 312.14199829]
[65.62371826 299.97558594]
[73.01084900 289.92852783]
[84.03942108 283.95419312]
[84.03942108 268.95419312]
[84.03942108 253.95417786]
[75.04129791 248.88388062]
[68.92777252 240.45904541]
[66.86613464 230.17338562]
[69.29775238 219.88565063]
[75.84574127 211.48371887]
[85.37159729 206.53819275]
[86.19311523 191.56069946]
[87.01463318 176.58322144]
[84.23097229 169.70680237]
[87.99039459 161.34043884]
[89.08532715 146.38046265]
[90.18025970 131.42047119]
[91.27518463 116.46049500]
[79.81208801 102.43855286]
[85.33846283 83.54465485]
[105.53740692 76.91039276]
[103.08271790 62.11260605]
[98.57595825 54.12397003]
[100.72089386 47.02234268]
[98.53688049 32.18219376]
[96.35285950 17.34204292]
[94.03340912 2.52245617]
[91.57871246 -12.27533054]
[89.12402344 -27.07311630]
[86.66932678 -41.87090302]
[84.21463013 -56.66868973]
[81.75993347 -71.46647644]
[79.30524445 -86.26425934]
[70.07086182 -92.09926605]
[65.68164062 -101.86128998]
[67.37474823 -112.20700073]
[74.34806824 -119.73748779]
[72.43545532 -134.61505127]
[70.52285004 -149.49261475]
[68.61023712 -164.37017822]
[66.69762421 -179.24774170]
[64.78501129 -194.12530518]
[62.87239838 -209.00286865]
[58.66041183 -217.15077209]
[61.06328583 -224.16932678]
[59.42271805 -239.07934570]
[55.36024475 -247.30281067]
[57.89090347 -254.27630615]
[56.52292633 -269.21380615]
[55.15494919 -284.15127563]
[53.78697586 -299.08877563]
[52.28263855 -314.01315308]
[50.64207077 -328.92315674]
[48.86540604 -343.81756592]
[46.95279312 -358.69515991]
[45.04018402 -373.57272339]
[43.12757111 -388.45028687]
[41.21495819 -403.32785034]
[28.98977470 -412.98095703]
[27.26205063 -428.09616089]
[36.54016113 -439.69152832]
[34.62754822 -454.56909180]
[32.71493530 -469.44665527]
[23.28116608 -482.14761353]
[29.33249092 -495.75756836]
[27.41987801 -510.63513184]
[15.86574936 -517.60015869]
[10.52163029 -529.77520752]
[13.13833714 -542.61267090]
[22.53779411 -551.45758057]
[20.89722443 -566.36755371]
[9.33020592 -577.48437500]
[10.95317745 -593.44512939]
[24.52113724 -602.00610352]
[39.62590408 -596.60003662]
[44.68039703 -581.37402344]
[35.80723953 -568.00811768]
[37.44780731 -553.09814453]
[50.99971008 -543.16711426]
[53.23774719 -526.17535400]
[42.29744339 -512.54772949]
[44.21005630 -497.67016602]
[53.50702286 -486.03335571]
[47.59250259 -471.35925293]
[49.50511169 -456.48168945]
[51.41772461 -441.60412598]
[63.32699585 -432.73254395]
[65.47859192 -417.67184448]
[56.09252167 -405.24044800]
[58.00513458 -390.36288452]
[59.91774750 -375.48532104]
[61.83036041 -360.60775757]
[63.74296951 -345.73019409]
[67.72933960 -339.47378540]
[65.55208588 -330.56375122]
[67.19264984 -315.65371704]
[71.06408691 -309.32553101]
[68.72446442 -300.45675659]
[70.09244537 -285.51925659]
[71.46041870 -270.58178711]
[72.82839966 -255.64428711]
[74.33273315 -240.71990967]
[75.97329712 -225.80989075]
[77.74996185 -210.91548157]
[79.66257477 -196.03791809]
[81.57518768 -181.16035461]
[83.48780060 -166.28279114]
[85.40041351 -151.40522766]
[87.31302643 -136.52766418]
[89.22563171 -121.65010071]
[102.05853271 -107.21485901]
[94.10302734 -88.71895599]
[96.55772400 -73.92116547]
[99.01242065 -59.12338257]
[101.46710968 -44.32559586]
[103.92180634 -29.52781105]
[106.37650299 -14.73002434]
[108.83119202 0.06776147]
[113.04339600 6.17441368]
[111.19301605 15.15802479]
[113.37702942 29.99817467]
[115.56105042 44.83832550]
[117.88050079 59.65791321]
[120.33519745 74.45569611]
[129.61083984 86.24392700]
[143.41603088 92.11049652]
[157.22122192 97.97707367]
[171.02642822 103.84364319]
[186.38194275 99.19739532]
[199.50619507 108.42418671]
[200.33137512 124.44599915]
[188.22447205 134.97227478]
[172.47286987 131.92816162]
[165.15985107 117.64883423]
[151.35466003 111.78226471]
[137.54946899 105.91569519]
[123.74427032 100.04911804]
[120.20214081 108.80979919]
[113.86721039 114.87274933]
[106.23516846 117.55541992]
[105.14024353 132.51541138]
[104.04531097 147.47538757]
[102.95037842 162.43537903]
[101.99211884 177.40473938]
[101.17060089 192.38221741]
[100.34908295 207.35971069]
[114.53533173 221.53892517]
[113.79165649 241.27857971]
[99.03942108 253.95417786]
[99.03942108 268.95419312]
[99.03942108 283.95419312]
[114.00409698 294.13793945]
[119.83613586 311.10812378]
[114.38909149 328.04113770]
[100.01235962 338.24676514]
[100.56018829 353.23675537]
[101.10802460 368.22674561]
[101.65585327 383.21673584]
[102.20368195 398.20672607]
[102.75151062 413.19671631]
[109.37229919 428.80447388]
[96.20732880 439.48715210]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 169]
[2 168]
[3 167]
[4 166]
[5 165]
[6 164]
[12 160]
[13 159]
[14 158]
[20 155]
[21 154]
[22 153]
[24 152]
[25 151]
[26 150]
[27 149]
[30 133]
[31 132]
[33 131]
[34 130]
[35 129]
[36 127]
[37 126]
[38 125]
[39 124]
[40 123]
[41 122]
[42 121]
[46 119]
[47 118]
[48 117]
[49 116]
[50 115]
[51 114]
[52 113]
[54 112]
[55 111]
[57 110]
[58 109]
[59 108]
[60 107]
[61 105]
[62 104]
[63 102]
[64 101]
[65 100]
[66 99]
[67 98]
[70 95]
[71 94]
[72 93]
[74 91]
[75 90]
[79 87]
[80 86]
[134 146]
[135 145]
[136 144]
[137 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
