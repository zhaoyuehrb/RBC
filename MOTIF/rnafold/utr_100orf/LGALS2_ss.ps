%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:20:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACCUUGAGGGAGUUAAUGUGUAAUAUUCUAGGAUAUAAGCUUGACCACGAGUUGAGACCCUGAGCACAGGCCUCCAGGAGCCGCUGGGAGCUGCCGCCAGGAGCUGUCACCAUGACGGGGGAACUUGAGGUUAAGAACAUGGACAUGAAGCCGGGGUCAACCCUGAAGAUCACAGGCAGCAUCGCCGAUGGCACUGAUGGCUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[-218.86074829 464.20126343]
[-232.57537842 470.27651978]
[-247.57431030 470.45623779]
[-261.43060303 464.71142578]
[-271.90222168 453.97152710]
[-277.29483032 439.97439575]
[-276.73583984 424.98483276]
[-270.31414795 411.42611694]
[-283.19250488 419.11691284]
[-296.07086182 426.80767822]
[-308.94921875 434.49844360]
[-312.92178345 449.56021118]
[-326.09182739 457.17630005]
[-340.42642212 453.29620361]
[-353.30477905 460.98699951]
[-366.18313599 468.67776489]
[-379.06149292 476.36853027]
[-391.93984985 484.05932617]
[-399.82101440 497.77783203]
[-414.71514893 497.66043091]
[-427.59350586 505.35119629]
[-440.47186279 513.04199219]
[-440.41882324 523.70800781]
[-444.76397705 533.36047363]
[-452.66250610 540.28588867]
[-462.64553833 543.28540039]
[-472.89309692 541.88214111]
[-481.56576538 536.39569092]
[-494.77172852 543.50927734]
[-503.25198364 556.86572266]
[-518.12634277 556.08966064]
[-531.33227539 563.20324707]
[-533.27520752 578.59820557]
[-543.92047119 589.88787842]
[-559.17480469 592.73126221]
[-573.17260742 586.03485107]
[-580.53143311 572.37371826]
[-578.42163086 557.00073242]
[-567.65454102 545.82714844]
[-552.37023926 543.14947510]
[-538.44592285 549.99731445]
[-525.23999023 542.88372803]
[-517.70428467 530.03601074]
[-501.88531494 530.30334473]
[-488.67938232 523.18975830]
[-484.46707153 504.16815186]
[-467.35842896 494.22576904]
[-448.16262817 500.16363525]
[-435.28430176 492.47283936]
[-422.40594482 484.78207397]
[-415.44589233 471.61364746]
[-399.63061523 471.18096924]
[-386.75225830 463.49020386]
[-373.87390137 455.79940796]
[-360.99554443 448.10864258]
[-348.11721802 440.41787720]
[-344.73516846 425.95767212]
[-331.78424072 417.97467041]
[-316.63998413 421.62008667]
[-303.76162720 413.92932129]
[-290.88327026 406.23855591]
[-278.00494385 398.54776001]
[-275.89218140 392.25201416]
[-269.99072266 387.62817383]
[-261.66497803 386.89562988]
[-250.19804382 377.22558594]
[-238.73112488 367.55557251]
[-235.64474487 360.84146118]
[-227.02301025 357.82897949]
[-215.41470337 348.32913208]
[-203.80641174 338.82928467]
[-192.19810486 329.32940674]
[-180.58979797 319.82955933]
[-179.36953735 305.02932739]
[-167.73239136 295.22976685]
[-152.21682739 296.61004639]
[-140.60852051 287.11019897]
[-129.00022888 277.61032104]
[-127.48668671 265.60980225]
[-117.89469910 257.60025024]
[-105.01617432 258.29348755]
[-93.26902008 248.96588135]
[-81.52187347 239.63825989]
[-69.77471924 230.31065369]
[-64.61881256 216.33689880]
[-48.99992371 213.81478882]
[-37.25277328 204.48718262]
[-25.50562096 195.15956116]
[-13.82757568 185.74557495]
[-2.21927166 176.24571228]
[9.31865883 166.66050720]
[20.78558922 156.99047852]
[32.25252151 147.32044983]
[43.71945190 137.65042114]
[55.18638229 127.98038483]
[66.65331268 118.31034851]
[63.39514542 110.36123657]
[62.00365448 101.88374329]
[62.54980469 93.31018829]
[65.00574493 85.07778168]
[69.24622345 77.60633850]
[75.05500793 71.27687073]
[82.13587189 66.41214752]
[90.12772369 63.26025391]
[98.62301636 61.98191833]
[101.04598236 47.17890167]
[103.46894836 32.37588882]
[105.89191437 17.57287407]
[108.31488037 2.76985979]
[110.73784637 -12.03315449]
[107.32942200 -28.64095306]
[122.34463501 -36.51367188]
[134.06631470 -24.26464462]
[125.54086304 -9.61018944]
[123.11789703 5.19282532]
[120.69493103 19.99584007]
[118.27196503 34.79885483]
[115.84899902 49.60186768]
[113.42603302 64.40488434]
[120.61050415 68.02379608]
[126.87339783 73.07248688]
[131.93467712 79.32521057]
[145.88621521 73.81568909]
[155.87985229 61.55038452]
[170.55943298 64.07211304]
[184.51097107 58.56259155]
[198.46249390 53.05306625]
[208.45613098 40.78776550]
[223.13571167 43.30949402]
[237.08724976 37.79997253]
[251.03877258 32.29044724]
[253.47547913 18.72470093]
[262.22729492 8.21753693]
[274.92636108 3.44467950]
[288.21841431 5.55256844]
[298.64862061 13.88505936]
[312.67987061 8.58190155]
[316.87033081 -6.24193907]
[328.84603882 -15.64596081]
[343.88497925 -16.18861961]
[356.21215820 -7.87124586]
[370.24343872 -13.17440319]
[384.27468872 -18.47756004]
[388.23806763 -33.47993469]
[400.28396606 -43.26137924]
[415.78042603 -44.06072617]
[428.76879883 -35.57061386]
[434.25476074 -21.05566406]
[430.12884521 -6.09716845]
[417.97760010 3.55302477]
[402.47335815 4.18421984]
[389.57785034 -4.44629145]
[375.54656982 0.85686612]
[361.51531982 6.16002369]
[357.77105713 20.55163765]
[346.13272095 30.09172630]
[330.93075562 30.95959091]
[317.98303223 22.61317062]
[303.95175171 27.91632843]
[300.13015747 43.88178635]
[287.41763306 54.52964783]
[270.69754028 55.51126480]
[256.54830933 46.24197388]
[242.59677124 51.75149918]
[228.64524841 57.26102448]
[219.64950562 69.13224792]
[203.97201538 67.00459290]
[190.02049255 72.51412201]
[176.06895447 78.02364349]
[167.07322693 89.89486694]
[151.39573669 87.76721954]
[137.44419861 93.27674103]
[134.62101746 115.76883698]
[119.50534821 132.66209412]
[97.46416473 137.95840454]
[76.32334137 129.77728271]
[64.85641479 139.44731140]
[53.38948059 149.11734009]
[41.92255020 158.78738403]
[30.45562172 168.45741272]
[18.98869133 178.12744141]
[14.44669819 186.05079651]
[7.28058529 187.85401917]
[-4.32771826 197.35388184]
[-8.98607635 205.20938110]
[-16.17800522 206.90672302]
[-27.92515755 216.23432922]
[-39.67230988 225.56195068]
[-45.66845322 240.20288086]
[-60.44710159 242.05780029]
[-72.19425201 251.38542175]
[-83.94140625 260.71304321]
[-95.68856049 270.04064941]
[-102.05368042 287.32049561]
[-119.50036621 289.21862793]
[-131.10867310 298.71850586]
[-142.71697998 308.21835327]
[-144.43296814 323.70037842]
[-156.34077454 333.16921997]
[-171.08993530 331.43786621]
[-182.69824219 340.93771362]
[-194.30654907 350.43759155]
[-205.91485596 359.93743896]
[-217.52316284 369.43728638]
[-229.06108093 379.02249146]
[-240.52801514 388.69253540]
[-251.99494934 398.36254883]
[-237.08642578 396.70843506]
[-222.73228455 401.06256104]
[-211.25508118 410.72042847]
[-204.51193237 424.11929321]
[-203.59388733 439.09115601]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 62]
[9 61]
[10 60]
[11 59]
[14 56]
[15 55]
[16 54]
[17 53]
[18 52]
[20 50]
[21 49]
[22 48]
[28 45]
[29 44]
[31 42]
[32 41]
[65 207]
[66 206]
[67 205]
[69 204]
[70 203]
[71 202]
[72 201]
[73 200]
[76 197]
[77 196]
[78 195]
[81 193]
[82 192]
[83 191]
[84 190]
[86 188]
[87 187]
[88 186]
[89 184]
[90 183]
[91 181]
[92 180]
[93 179]
[94 178]
[95 177]
[96 176]
[105 119]
[106 118]
[107 117]
[108 116]
[109 115]
[110 114]
[122 172]
[123 171]
[125 169]
[126 168]
[127 167]
[129 165]
[130 164]
[131 163]
[136 159]
[137 158]
[141 154]
[142 153]
[143 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
