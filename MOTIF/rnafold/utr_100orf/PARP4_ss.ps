%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:10:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCCCGCCCAGCCCCGGGGGCAGGGAGAGCCUAGAUUACGGAAGUACCGCGAGCAAGGAGCGCGGAAUCGGGGAGCGUCCGGAGCUAGCUGGAUCCUCUAGGCAGGAUGGUGAUGGGAAUCUUUGCAAAUUGUAUCUUCUGUUUGAAAGUGAAGUACUUACCUCAGCAGCAGAAGAAAAAGCUACAAACUGACAUUAAGGAAAAUG\
) } def
/len { sequence length } bind def

/coor [
[172.01948547 160.18710327]
[168.20248413 152.87658691]
[166.69192505 144.73477173]
[152.15979004 141.01765442]
[137.62765503 137.30053711]
[123.09551239 133.58341980]
[109.38308716 139.66366577]
[102.38124084 152.92919922]
[95.37940216 166.19471741]
[95.78025818 182.01084900]
[82.99667358 189.65475464]
[75.99483490 202.92028809]
[68.99299622 216.18582153]
[61.99115372 229.45133972]
[59.94480896 246.28134155]
[43.20605087 248.97396851]
[35.98489761 233.63476562]
[48.72562790 222.44950867]
[55.72746658 209.18397522]
[62.72930908 195.91844177]
[69.73114777 182.65292358]
[68.82947540 167.78562927]
[82.11387634 159.19288635]
[89.11571503 145.92735291]
[96.11755371 132.66183472]
[84.16093445 127.50540924]
[75.54160309 118.36896515]
[71.40740967 106.99700165]
[72.09583282 95.37751770]
[58.47726059 89.08987427]
[44.85869217 82.80222321]
[31.24011993 76.51457977]
[17.62154770 70.22692871]
[4.00297737 63.93928146]
[-9.61559391 57.65163422]
[-13.92990208 58.20165634]
[-17.80432129 57.42636871]
[-20.87582588 55.62728119]
[-22.91680527 53.19291687]
[-23.85172272 50.54701614]
[-37.06373596 43.44471359]
[-50.27574921 36.34241104]
[-58.86860275 40.23798752]
[-68.15274811 39.74838257]
[-76.05084229 35.10989380]
[-80.85399628 27.47290611]
[-81.59105682 18.61927414]
[-94.46611786 10.92299366]
[-107.39921570 3.32463431]
[-120.38959503 -4.17536592]
[-136.20954895 -4.37475348]
[-143.36303711 -17.43908691]
[-156.35340881 -24.93908691]
[-169.34379578 -32.43908691]
[-186.15370178 -27.60236359]
[-200.96984863 -36.24797821]
[-204.87199402 -52.60537338]
[-217.97470093 -59.90736389]
[-231.07740784 -67.20935822]
[-240.10011292 -68.65415192]
[-244.32234192 -74.72289276]
[-257.31271362 -82.22289276]
[-270.30310059 -89.72289276]
[-283.20495605 -81.48878479]
[-298.45654297 -80.20519257]
[-312.55316162 -86.16708374]
[-322.25549316 -98.00444794]
[-325.33404541 -112.99715424]
[-321.08135986 -127.69998169]
[-310.47467041 -138.73432922]
[-295.95132446 -143.56459045]
[-280.84869385 -141.08081055]
[-268.63726807 -131.85372925]
[-262.12307739 -118.00366974]
[-262.80310059 -102.71327209]
[-249.81271362 -95.21327209]
[-236.82234192 -87.71327209]
[-223.77542114 -80.31206512]
[-210.67271423 -73.01007080]
[-197.57000732 -65.70808411]
[-185.78890991 -70.93132019]
[-172.95916748 -68.37625885]
[-163.80966187 -58.75616074]
[-161.84379578 -45.42947006]
[-148.85340881 -37.92947006]
[-135.86303711 -30.42946815]
[-120.97224426 -30.76653099]
[-112.88959503 -17.16574669]
[-99.89921570 -9.66574669]
[-92.53241730 -9.04356384]
[-86.76983643 -1.95207012]
[-73.89477539 5.74421072]
[-53.31143951 4.25322485]
[-43.17345047 23.13039970]
[-29.96143532 30.23270035]
[-16.74942207 37.33500290]
[-3.32794642 44.03306198]
[10.29062462 50.32070923]
[23.90919685 56.60835648]
[37.52776718 62.89600372]
[51.14633942 69.18365479]
[64.76490784 75.47129822]
[78.38348389 81.75894928]
[83.98664093 76.17876434]
[91.01058960 72.30001068]
[98.94371033 70.47790527]
[107.18774414 70.91516113]
[115.10289764 73.64157104]
[122.05749512 78.50686646]
[127.47833252 85.18772125]
[130.89765930 93.20868683]
[131.99311829 101.97586060]
[130.61701965 110.82074738]
[126.81262970 119.05128479]
[141.34477234 122.76840210]
[155.87690735 126.48551941]
[170.40904236 130.20263672]
[188.72149658 117.16006470]
[210.42291260 121.86847687]
[221.40716553 140.84965515]
[236.21711731 143.22990417]
[251.02705383 145.61013794]
[265.83700562 147.99037170]
[280.64694214 150.37060547]
[295.45690918 152.75085449]
[310.33224487 154.68052673]
[325.25933838 156.15786743]
[337.41131592 146.41276550]
[352.52844238 148.12364197]
[361.74401855 159.76876831]
[376.67108154 161.24609375]
[391.59814453 162.72343445]
[406.52523804 164.20077515]
[421.45230103 165.67811584]
[436.43115234 166.47451782]
[451.43072510 166.58834839]
[466.43026733 166.70216370]
[481.42984009 166.81599426]
[496.42941284 166.92980957]
[511.42898560 167.04364014]
[526.42852783 167.15747070]
[541.42810059 167.27128601]
[556.42767334 167.38511658]
[571.42724609 167.27128601]
[586.42340088 166.92984009]
[601.41949463 166.58839417]
[610.87963867 157.81790161]
[623.37896729 157.84396362]
[632.21612549 166.10705566]
[647.21569824 165.99322510]
[662.21527100 165.87940979]
[677.21484375 165.76557922]
[689.45172119 155.39065552]
[705.16424561 158.63040161]
[712.29913330 172.99955750]
[705.38311768 187.47534180]
[689.72155762 190.95317078]
[677.32867432 180.76515198]
[662.32910156 180.87896729]
[647.32952881 180.99279785]
[632.32995605 181.10662842]
[617.70202637 190.79910278]
[601.76092529 181.58450317]
[586.76483154 181.92594910]
[571.76867676 182.26741028]
[567.87841797 185.04261780]
[562.20269775 185.40130615]
[556.31384277 182.38468933]
[541.31427002 182.27085876]
[526.31475830 182.15702820]
[511.31515503 182.04321289]
[496.31558228 181.92938232]
[481.31604004 181.81555176]
[466.31646729 181.70173645]
[451.31689453 181.58790588]
[436.31732178 181.47409058]
[446.02807617 192.90655518]
[444.95077515 207.86781311]
[433.70230103 217.79109192]
[418.72348022 216.99435425]
[408.59115601 205.93379211]
[409.10705566 190.94267273]
[419.97497559 180.60517883]
[405.04788208 179.12785339]
[390.12081909 177.65051270]
[375.19375610 176.17317200]
[360.26669312 174.69583130]
[348.94720459 184.30859375]
[333.78799438 183.02301025]
[323.78198242 171.08493042]
[308.85491943 169.60760498]
[306.60281372 171.28176880]
[303.55081177 172.16328430]
[299.99804688 171.94262695]
[296.35015869 170.42434692]
[293.07666016 167.56079102]
[278.26672363 165.18055725]
[263.45675659 162.80032349]
[248.64682007 160.42007446]
[233.83688354 158.03984070]
[219.02693176 155.65960693]
[214.66252136 162.37709045]
[208.49357605 167.54026794]
[201.05024719 170.67962646]
[192.97987366 171.50061035]
[184.99066162 169.91131592]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 117]
[4 116]
[5 115]
[6 114]
[7 25]
[8 24]
[9 23]
[11 21]
[12 20]
[13 19]
[14 18]
[29 103]
[30 102]
[31 101]
[32 100]
[33 99]
[34 98]
[35 97]
[40 96]
[41 95]
[42 94]
[47 92]
[48 91]
[49 89]
[50 88]
[52 86]
[53 85]
[54 84]
[57 80]
[58 79]
[59 78]
[61 77]
[62 76]
[63 75]
[120 201]
[121 200]
[122 199]
[123 198]
[124 197]
[125 196]
[126 191]
[127 190]
[130 187]
[131 186]
[132 185]
[133 184]
[134 183]
[135 176]
[136 175]
[137 174]
[138 173]
[139 172]
[140 171]
[141 170]
[142 169]
[143 168]
[144 165]
[145 164]
[146 163]
[149 161]
[150 160]
[151 159]
[152 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
