%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:28:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGCAGCAGUCAGCGCACGCCGAGCGGCUGCCGGGGGAAGCAGAGGCGCCGGAGGCUGGGGCACCGCCGACGCCUCGGGAGCCAUGGCCGAAGGGGGAGAAGGAGGCGAGGACGAGAUCCAGUUUCUGAGGACUGAGGAUGAAGUGGUACUCCAGUGCAUCGCCACCAUUCAUAAGGAGCAGA\
) } def
/len { sequence length } bind def

/coor [
[73.42718506 126.59533691]
[68.99668884 120.33197784]
[65.98567200 113.39138794]
[64.48207092 106.08528900]
[64.50720978 98.73246765]
[66.01663971 91.64490509]
[68.90383911 85.11450958]
[73.00651550 79.40111542]
[63.38639832 67.89227295]
[53.76628113 56.38343430]
[44.14616394 44.87459564]
[34.52605057 33.36575699]
[15.89786053 33.40651703]
[2.77762580 17.82946205]
[-10.49965858 24.80898285]
[-23.77694321 31.78850365]
[-37.05422974 38.76802444]
[-36.70407104 59.49066544]
[-57.45682907 75.99717712]
[-68.01830292 86.64871216]
[-78.57978058 97.30024719]
[-85.43856812 112.80487061]
[-102.23596954 110.50623322]
[-104.67714691 93.72895813]
[-89.23131561 86.73876953]
[-78.66983795 76.08723450]
[-68.10836029 65.43569946]
[-72.09474945 59.08285141]
[-84.05391693 40.02429962]
[-98.23899841 44.90113068]
[-112.42407990 49.77796173]
[-126.60916138 54.65479660]
[-131.02397156 69.53057861]
[-143.35986328 78.94363403]
[-158.87341309 79.27444458]
[-171.59934998 70.39581299]
[-176.64428711 55.72175217]
[-172.06835938 40.89473343]
[-159.63108826 31.61605263]
[-144.11486816 31.45355034]
[-131.48599243 40.46971512]
[-117.30091095 35.59288406]
[-103.11582947 30.71605110]
[-88.93074799 25.83922005]
[-72.09626007 14.65834618]
[-54.80239105 15.79317665]
[-44.03374863 25.49073982]
[-30.75646400 18.51121902]
[-17.47917938 11.53169823]
[-4.20189524 4.55217743]
[3.00207806 -8.60467529]
[1.72998917 -23.55063820]
[0.45790026 -38.49660110]
[-0.81418860 -53.44256210]
[-2.08627748 -68.38852692]
[-3.35836625 -83.33448792]
[-4.63045502 -98.28044891]
[-5.90254402 -113.22640991]
[-7.17463303 -128.17237854]
[-8.44672203 -143.11833191]
[-9.71881104 -158.06430054]
[-22.02507019 -164.30155945]
[-29.57752037 -175.71780396]
[-30.48955917 -189.26715088]
[-24.62943268 -201.39749146]
[-13.62677002 -208.98175049]
[-14.64488125 -223.94715881]
[-15.79002285 -238.90338135]
[-17.06211090 -253.84933472]
[-26.41067314 -262.75735474]
[-27.15090370 -275.24743652]
[-19.43053436 -284.57852173]
[-20.44864655 -299.54394531]
[-21.46675682 -314.50933838]
[-22.48486900 -329.47476196]
[-23.50298119 -344.44015503]
[-24.52109146 -359.40557861]
[-38.62335587 -365.14035034]
[-48.79578018 -376.38348389]
[-53.06045532 -390.86911011]
[-50.62287903 -405.70889282]
[-42.01939011 -417.96813965]
[-29.00028801 -425.24609375]
[-30.01840019 -440.21148682]
[-32.60033417 -443.76693726]
[-33.78306580 -447.57684326]
[-33.66010666 -451.16571045]
[-32.47106552 -454.13839722]
[-30.56234169 -456.22094727]
[-30.56234169 -471.22094727]
[-39.22604370 -485.14477539]
[-31.26191521 -499.48019409]
[-14.86276722 -499.48019409]
[-6.89863825 -485.14477539]
[-15.56234074 -471.22094727]
[-15.56234074 -456.22094727]
[-15.05299187 -441.22961426]
[-14.03487968 -426.26419067]
[-0.15004274 -420.81655884]
[10.03450966 -409.83547974]
[14.45945358 -395.46255493]
[12.19593525 -380.53283691]
[3.63995314 -368.01556396]
[-9.55568409 -360.42367554]
[-8.53757191 -345.45828247]
[-7.51946068 -330.49285889]
[-6.50134897 -315.52746582]
[-5.48323774 -300.56204224]
[-4.46512604 -285.59664917]
[6.09417486 -271.59210205]
[-2.11614943 -255.12142944]
[-0.84406054 -240.17546082]
[2.86444044 -233.76268005]
[0.32052705 -224.96527100]
[1.33863866 -209.99986267]
[15.50934315 -201.73394775]
[22.03378296 -186.50103760]
[18.16278076 -170.21740723]
[5.22715187 -159.33638000]
[6.49924040 -144.39042664]
[7.77132940 -129.44445801]
[9.04341793 -114.49849701]
[10.31550694 -99.55253601]
[11.58759594 -84.60657501]
[12.85968494 -69.66061401]
[14.13177395 -54.71465302]
[15.40386295 -39.76868820]
[16.67595100 -24.82272720]
[17.94804001 -9.87676430]
[37.61608887 -8.23927784]
[49.01441193 6.48910332]
[46.03488922 23.74564171]
[55.65500259 35.25447845]
[65.27512360 46.76331711]
[74.89523315 58.27215576]
[84.51535034 69.78099823]
[109.76458740 65.31272888]
[132.52508545 80.12745667]
[139.39874268 107.96478271]
[153.22009277 113.79316711]
[167.04145813 119.62155151]
[180.86280823 125.44993591]
[194.11599731 117.59759521]
[209.27445984 119.03797913]
[220.54483032 129.01005554]
[223.74383545 143.53260803]
[237.56520081 149.36099243]
[251.38655090 155.18937683]
[267.58264160 152.61665344]
[277.69711304 165.52516174]
[271.32507324 180.63572693]
[255.02153015 182.40390015]
[245.55816650 169.01074219]
[231.73681641 163.18235779]
[217.91545105 157.35397339]
[205.28346252 165.20066833]
[190.27568054 164.09141541]
[178.66302490 154.24258423]
[175.03442383 139.27128601]
[161.21307373 133.44290161]
[147.39170837 127.61452484]
[133.57035828 121.78614044]
[123.19127655 132.61547852]
[129.60099792 146.17701721]
[141.47120667 151.26098633]
[146.52517700 162.70681763]
[142.54804993 174.14604187]
[148.72656250 187.81446838]
[163.94924927 190.82267761]
[174.47177124 202.22691345]
[176.24797058 217.64198303]
[168.59489441 231.14050293]
[154.45529175 237.53201294]
[139.26614380 234.35884094]
[128.86796570 222.84112549]
[127.25907898 207.40768433]
[135.05813599 193.99298096]
[128.87962341 180.32455444]
[114.09564972 170.88740540]
[116.03945923 152.58674622]
[109.62973022 139.02520752]
[101.44959259 139.64923096]
[93.42049408 138.59892273]
[85.87704468 135.96185303]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 136]
[9 135]
[10 134]
[11 133]
[12 132]
[14 50]
[15 49]
[16 48]
[17 47]
[19 27]
[20 26]
[21 25]
[29 44]
[30 43]
[31 42]
[32 41]
[51 129]
[52 128]
[53 127]
[54 126]
[55 125]
[56 124]
[57 123]
[58 122]
[59 121]
[60 120]
[61 119]
[66 115]
[67 114]
[68 112]
[69 111]
[72 109]
[73 108]
[74 107]
[75 106]
[76 105]
[77 104]
[83 98]
[84 97]
[89 96]
[90 95]
[139 162]
[140 161]
[141 160]
[142 159]
[146 155]
[147 154]
[148 153]
[163 181]
[164 180]
[167 178]
[168 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
