%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:05:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUUCAGUUGAAAGAUGUGUUUUUGUGAGUAGAGCACCGCAGAAGAACUGAAGACUGUUGUGUGCUCCCCGCAGAAGGGGCUACCAUGAUCCUUUCCUCCUAUAACACCAUCCAGUCGGUUUUCUGUUGCUGCUGUUGCUGUUCAGUGCAGAAGCGACAAAUGAGAACACAGAUAAGCCUGAGCA\
) } def
/len { sequence length } bind def

/coor [
[80.81933594 506.78149414]
[69.89354706 495.36212158]
[70.32609558 479.56375122]
[81.86037445 468.75930786]
[82.11235809 453.76141357]
[82.36434937 438.76351929]
[82.61633301 423.76565552]
[82.86832428 408.76776123]
[69.49164581 404.10144043]
[58.19475555 395.51666260]
[50.09166718 383.84326172]
[45.98658371 370.21655273]
[46.29410553 355.96679688]
[50.99738312 342.48937988]
[59.64848709 331.10806274]
[71.41101837 322.94519043]
[85.14096832 318.81079102]
[85.64487457 303.81927490]
[86.14878082 288.82772827]
[86.65267944 273.83621216]
[87.15658569 258.84466553]
[87.66049194 243.85313416]
[88.16439819 228.86160278]
[88.66829681 213.87005615]
[89.17220306 198.87852478]
[89.67610931 183.88699341]
[90.18000793 168.89546204]
[79.85177612 158.22479248]
[80.14924622 143.01406860]
[91.41165161 132.25321960]
[91.91555786 117.26168060]
[79.71374512 104.72819519]
[82.35433197 85.88120270]
[100.19074249 75.63292694]
[95.00785065 61.55679321]
[89.82495880 47.48065567]
[84.64207458 33.40451813]
[79.78966522 28.86437416]
[78.21156311 23.37747765]
[79.53022003 18.76750374]
[74.82312012 4.52519798]
[70.11602783 -9.71710682]
[65.40892792 -23.95941162]
[60.70183563 -38.20171738]
[55.99473953 -52.44402313]
[51.28764343 -66.68632507]
[46.58054733 -80.92863464]
[40.90471268 -88.11289215]
[41.91618729 -95.44989777]
[37.44901657 -109.76926422]
[33.57789612 -113.33278656]
[31.66618347 -117.60094452]
[31.65252495 -121.70388031]
[33.13720322 -124.92371368]
[29.39709282 -139.44995117]
[25.65698242 -153.97618103]
[21.91687012 -168.50242615]
[18.17675972 -183.02865601]
[4.98323298 -195.86054993]
[10.32183266 -212.56846619]
[6.33822107 -227.02983093]
[1.03152668 -234.49090576]
[2.41134286 -241.76763916]
[-1.32876801 -256.29388428]
[-5.06887865 -270.82009888]
[-20.15470505 -271.36581421]
[-34.46107864 -276.13552856]
[-46.83127213 -284.73455811]
[-56.26765823 -296.45901489]
[-62.01214600 -310.35336304]
[-63.60709000 -325.28829956]
[-60.93172836 -340.05255127]
[-54.21128845 -353.45111084]
[-43.99805450 -364.40194702]
[-31.12598228 -372.02343750]
[-34.86609268 -386.54968262]
[-38.60620499 -401.07592773]
[-42.34631348 -415.60214233]
[-46.08642578 -430.12838745]
[-49.82653809 -444.65463257]
[-53.56664658 -459.18087769]
[-68.24667358 -463.92431641]
[-78.01410675 -475.86587524]
[-79.75219727 -491.19503784]
[-72.90633392 -505.02029419]
[-59.66099548 -512.93005371]
[-44.24272537 -512.40039062]
[-31.57144165 -503.60025024]
[-25.69050026 -489.33779907]
[-28.47648811 -474.16406250]
[-39.04040909 -462.92098999]
[-35.30030060 -448.39474487]
[-31.56018829 -433.86849976]
[-27.82007790 -419.34225464]
[-24.07996750 -404.81604004]
[-20.33985519 -390.28979492]
[-16.59974480 -375.76354980]
[-1.64755464 -375.30606079]
[12.58425522 -370.64913940]
[24.93964577 -362.16207886]
[34.41246414 -350.52566528]
[40.22838211 -336.67749023]
[41.90818405 -321.73660278]
[39.30723572 -306.91287231]
[32.62790680 -293.40911865]
[22.40384865 -282.32348633]
[9.45735836 -274.56021118]
[13.19746971 -260.03399658]
[16.93758011 -245.50775146]
[20.79957771 -231.01344299]
[24.78318977 -216.55207825]
[35.15208817 -210.29675293]
[38.58092117 -198.26507568]
[32.70299911 -186.76876831]
[36.44310760 -172.24253845]
[40.18321991 -157.71629333]
[43.92332840 -143.19006348]
[47.66344070 -128.66381836]
[51.76838684 -114.23644257]
[56.23555756 -99.91706848]
[60.82285309 -85.63572693]
[65.52994537 -71.39342499]
[70.23704529 -57.15111923]
[74.94413757 -42.90881348]
[79.65123749 -28.66650772]
[84.35832977 -14.42420197]
[89.06542969 -0.18189731]
[93.77252197 14.06040764]
[98.71820831 28.22162819]
[103.90110016 42.29776382]
[109.08399200 56.37390518]
[114.26687622 70.45004272]
[125.92671204 79.88658142]
[140.77403259 82.02130890]
[155.62135315 84.15602875]
[170.38218689 78.46144867]
[181.87878418 87.93127441]
[196.72610474 90.06600189]
[211.57342529 92.20072174]
[226.42074585 94.33544159]
[237.13819885 83.11421967]
[252.41046143 80.36875153]
[266.36505127 87.15472412]
[273.63610840 100.86279297]
[271.42779541 116.22192383]
[260.58926392 127.32622528]
[245.28810120 129.90585327]
[231.40795898 122.96890259]
[224.28602600 109.18276978]
[209.43870544 107.04804230]
[194.59138489 104.91332245]
[179.74406433 102.77860260]
[166.04521179 108.62586212]
[153.48663330 99.00334930]
[138.63931274 96.86862946]
[123.79198456 94.73390198]
[119.14829254 110.24009705]
[106.90708923 117.76558685]
[106.40318298 132.75712585]
[116.91758728 144.24995422]
[116.19299316 159.44631958]
[105.17154694 169.39936829]
[104.66764069 184.39089966]
[104.16373444 199.38243103]
[103.65983582 214.37396240]
[103.15592957 229.36549377]
[102.65202332 244.35704041]
[102.14811707 259.34857178]
[101.64421844 274.34008789]
[101.14031219 289.33163452]
[100.63640594 304.32318115]
[100.13250732 319.31469727]
[114.93537140 325.18035889]
[126.81729126 335.73956299]
[134.35577393 349.70370483]
[136.65672302 365.37789917]
[133.46047974 380.86694336]
[125.17095947 394.30429077]
[112.80468750 404.07711792]
[97.86620331 409.01974487]
[97.61421967 424.01763916]
[97.36222839 439.01550293]
[97.11024475 454.01339722]
[96.85825348 469.01129150]
[108.02305603 480.19711304]
[107.92463684 496.00109863]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 184]
[5 183]
[6 182]
[7 181]
[8 180]
[17 172]
[18 171]
[19 170]
[20 169]
[21 168]
[22 167]
[23 166]
[24 165]
[25 164]
[26 163]
[27 162]
[30 159]
[31 158]
[34 132]
[35 131]
[36 130]
[37 129]
[40 128]
[41 127]
[42 126]
[43 125]
[44 124]
[45 123]
[46 122]
[47 121]
[49 120]
[50 119]
[54 118]
[55 117]
[56 116]
[57 115]
[58 114]
[60 111]
[61 110]
[63 109]
[64 108]
[65 107]
[75 97]
[76 96]
[77 95]
[78 94]
[79 93]
[80 92]
[81 91]
[133 156]
[134 155]
[135 154]
[137 152]
[138 151]
[139 150]
[140 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
