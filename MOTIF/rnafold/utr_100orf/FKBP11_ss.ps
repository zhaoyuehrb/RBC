%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:19:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCAUCGCGACCCGCCCCGUCCCGUCCAGUCUGGCCUGGGCGCCGCGGGAACGCUGUCCUGGCUGCCGCCACCCGAACAGCCUGUCCUGGUGCCCCGGCUCCCUGCCCCGCGCCCAGUCAUGACCCUGCGCCCCUCACUCCUCCCGCUCCAUCUGCUGCUGCUGCUGCUGCUCAGUGCGGCGGUGUGCCGGGCUGAGGCUGGGCUCGAAACCGAAAGUC\
) } def
/len { sequence length } bind def

/coor [
[261.74084473 80.96228027]
[257.81491089 73.34487152]
[243.15771484 76.53335571]
[228.50051880 79.72183228]
[213.84330750 82.91030884]
[199.18611145 86.09879303]
[184.52890015 89.28726959]
[173.73716736 99.55312347]
[158.60769653 94.92608643]
[143.95048523 98.11456299]
[129.29328918 101.30303955]
[128.01631165 114.60902405]
[120.60399628 126.88305664]
[107.80777740 135.29153442]
[91.67299652 137.50585938]
[75.22162628 132.27970886]
[63.21350861 141.26887512]
[51.20539093 150.25804138]
[39.19727325 159.24720764]
[27.18915367 168.23637390]
[24.80549049 183.62974548]
[12.49949646 192.57496643]
[-2.16104198 190.20764160]
[-14.16916084 199.19680786]
[-26.17727852 208.18597412]
[-38.18539810 217.17514038]
[-50.19351578 226.16430664]
[-62.20163345 235.15347290]
[-74.20975494 244.14263916]
[-76.21057129 259.81976318]
[-88.76171875 269.42416382]
[-104.41680908 267.25769043]
[-113.88796997 254.60571289]
[-111.55612183 238.97439575]
[-98.80471039 229.63752747]
[-83.19892120 232.13452148]
[-71.19080353 223.14535522]
[-59.18268204 214.15618896]
[-47.17456436 205.16702271]
[-35.16644287 196.17785645]
[-23.15832520 187.18869019]
[-11.15020657 178.19952393]
[-9.29128551 163.46589661]
[2.75860023 154.17854309]
[18.19998741 156.22824097]
[30.20810699 147.23908997]
[42.21622467 138.24992371]
[54.22434235 129.26075745]
[66.23246002 120.27159119]
[65.11212158 112.85573578]
[51.14714432 107.38039398]
[62.87144852 98.02403259]
[61.75111008 90.60818481]
[47.62344360 85.56744385]
[33.49577713 80.52670288]
[19.36811256 75.48596191]
[5.20481634 70.54621887]
[-8.99338722 65.70772552]
[-28.57835770 70.50001526]
[-40.65587997 55.39476395]
[-54.98646164 50.96369171]
[-69.31704712 46.53261566]
[-83.64762878 42.10154343]
[-99.50933838 46.26544571]
[-110.85237122 34.42198181]
[-106.00798798 18.75469208]
[-89.95966339 15.38074207]
[-79.21655273 27.77096176]
[-64.88597107 32.20203400]
[-50.55538940 36.63311005]
[-36.22480774 41.06418228]
[-27.66041756 35.50556564]
[-17.23103905 35.57656097]
[-8.37801075 41.49494934]
[-4.15489626 51.50952530]
[10.04330826 56.34801483]
[17.38360405 55.53083420]
[24.40885353 61.35829544]
[38.53651810 66.39904022]
[52.66418457 71.43978119]
[66.79184723 76.48052216]
[90.14290619 64.43784332]
[113.31358337 69.68179321]
[126.10480499 86.64583588]
[140.76200867 83.45735931]
[155.41921997 80.26888275]
[167.25932312 69.77496338]
[181.34042358 74.63006592]
[195.99761963 71.44158936]
[210.65483093 68.25310516]
[225.31202698 65.06462860]
[239.96923828 61.87614822]
[254.62643433 58.68767166]
[256.21890259 44.73638535]
[261.93096924 31.96025085]
[271.20333862 21.54067421]
[283.14898682 14.43172932]
[279.75152588 -0.17844969]
[276.35409546 -14.78862858]
[263.55017090 -24.45501709]
[263.26858521 -40.49559784]
[275.72537231 -50.60541153]
[291.36471558 -47.02907562]
[298.18948364 -32.51004410]
[290.96426392 -18.18607903]
[294.36172485 -3.57590127]
[297.75915527 11.03427792]
[325.15383911 18.15513229]
[343.01132202 40.11608124]
[357.71258545 37.13722229]
[369.70132446 26.81344795]
[383.71166992 31.86912537]
[398.41290283 28.89026833]
[413.11413574 25.91141129]
[427.81536865 22.93255424]
[442.51660156 19.95369720]
[457.21786499 16.97484016]
[471.91909790 13.99598312]
[486.62033081 11.01712704]
[498.60906982 0.69335085]
[512.61938477 5.74902916]
[527.32067871 2.77017212]
[539.30938721 -7.55360365]
[553.31976318 -2.49792552]
[568.02099609 -5.47678232]
[582.72222900 -8.45563984]
[594.71093750 -18.77941513]
[608.72131348 -13.72373676]
[623.42254639 -16.70259476]
[638.12377930 -19.68145180]
[652.82501221 -22.66030884]
[639.14727783 -28.81817245]
[629.31420898 -40.14559174]
[625.13964844 -54.55300140]
[627.39379883 -69.38265991]
[635.66076660 -81.89895630]
[648.41552734 -89.79299927]
[663.30523682 -91.60857391]
[677.58319092 -87.01076508]
[688.61553955 -76.84773254]
[694.36712646 -62.99424744]
[693.77697754 -48.00585938]
[686.95397949 -34.64748001]
[675.15948486 -25.38465118]
[690.14569092 -26.02705193]
[705.13195801 -26.66945457]
[720.11816406 -27.31185722]
[735.10443115 -27.95425797]
[748.56054688 -36.27547836]
[761.60754395 -29.09034348]
[776.59375000 -29.73274612]
[785.02697754 -33.22484970]
[791.79827881 -30.27577591]
[806.79217529 -30.70411682]
[821.78601074 -31.13245773]
[831.18963623 -39.95419312]
[843.68261719 -40.00589752]
[852.56921387 -31.80502319]
[867.56768799 -32.01921463]
[881.25592041 -39.95278549]
[894.09240723 -32.39801407]
[909.09088135 -32.61220551]
[922.88952637 -41.47385025]
[937.33721924 -33.71523666]
[937.57141113 -17.31776047]
[923.35113525 -9.14974117]
[909.30505371 -17.61373520]
[894.30657959 -17.39954376]
[881.69110107 -9.48129368]
[867.78186035 -17.02074623]
[852.78338623 -16.80655289]
[838.21459961 -7.01791382]
[822.21435547 -16.13857460]
[807.22052002 -15.71023369]
[792.22662354 -15.28189278]
[777.23614502 -14.74650764]
[762.24993896 -14.10410595]
[749.86572266 -5.82883644]
[735.74682617 -12.96802044]
[720.76055908 -12.32561874]
[705.77435303 -11.68321705]
[690.78808594 -11.04081440]
[675.80187988 -10.39841270]
[667.08544922 -4.61397791]
[655.80389404 -7.95906973]
[641.10266113 -4.98021269]
[626.40136719 -2.00135565]
[611.70013428 0.97750139]
[600.76293945 11.08820915]
[585.70104980 6.24559879]
[570.99981689 9.22445583]
[556.29858398 12.20331287]
[545.36138916 22.31402016]
[530.29949951 17.47141075]
[515.59826660 20.45026779]
[504.66104126 30.56097603]
[489.59918213 25.71836472]
[474.89794922 28.69722176]
[460.19671631 31.67607880]
[445.49548340 34.65493774]
[430.79421997 37.63379288]
[416.09298706 40.61265182]
[401.39175415 43.59150696]
[386.69052124 46.57036591]
[375.75329590 56.68107224]
[360.69143677 51.83846283]
[345.99020386 54.81731796]
[345.52996826 63.26745605]
[343.50888062 71.49309540]
[339.99429321 79.20822906]
[335.10556030 86.14402771]
[329.00997925 92.05828094]
[321.91699219 96.74378204]
[314.07110596 100.03562927]
[305.74337769 101.81702423]
[297.22210693 102.02339172]
[288.80282593 100.64476013]
[280.77807617 97.72613525]
[273.42715454 93.36611938]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 93]
[3 92]
[4 91]
[5 90]
[6 89]
[7 88]
[9 86]
[10 85]
[11 84]
[16 49]
[17 48]
[18 47]
[19 46]
[20 45]
[23 42]
[24 41]
[25 40]
[26 39]
[27 38]
[28 37]
[29 36]
[53 81]
[54 80]
[55 79]
[56 78]
[57 76]
[58 75]
[60 71]
[61 70]
[62 69]
[63 68]
[97 107]
[98 106]
[99 105]
[109 207]
[110 206]
[112 204]
[113 203]
[114 202]
[115 201]
[116 200]
[117 199]
[118 198]
[119 197]
[121 195]
[122 194]
[124 192]
[125 191]
[126 190]
[128 188]
[129 187]
[130 186]
[131 185]
[144 183]
[145 182]
[146 181]
[147 180]
[148 179]
[150 177]
[151 176]
[153 175]
[154 174]
[155 173]
[158 171]
[159 170]
[161 168]
[162 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
