%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:35:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACGGGGCGGGCGGACGCUGGCGCGGGUAGGUAAGAGCAGCGGCGGGCGGUGGCGCUCACUCCCGGCUUCCAACCGCGCGGAGCCUCUGCCUUGGAGAUUCUCAGUGCUGCGGAUCAUGUCCCUAAGGGGCAGCCUCUCGCGUCUCCUCCAGACGCGAGUGCAUUCCAUCCUGAAGAAAUCCGUCCACUCCGUGGCUGUGAUAGGAGCCCCGUUCU\
) } def
/len { sequence length } bind def

/coor [
[70.82862854 225.19682312]
[80.74955750 212.58909607]
[80.31529236 197.59538269]
[79.88103485 182.60166931]
[79.44677734 167.60795593]
[79.01251221 152.61424255]
[78.57825470 137.62052917]
[78.14398956 122.62681580]
[66.83364105 112.77410126]
[51.92197800 114.39960480]
[37.01031494 116.02511597]
[22.09864998 117.65062714]
[7.18698645 119.27613068]
[-7.72467756 120.90164185]
[-22.63634109 122.52714539]
[-35.51677322 131.71437073]
[-49.00756454 125.40184784]
[-63.91922760 127.02735901]
[-78.83089447 128.65286255]
[-93.43267059 139.87542725]
[-109.20310974 132.17300415]
[-124.08967590 134.01420593]
[-138.97624207 135.85542297]
[-153.86282349 137.69664001]
[-168.74938965 139.53784180]
[-183.63595581 141.37905884]
[-190.63938904 152.88096619]
[-202.81027222 158.17332458]
[-215.61755371 155.53009033]
[-224.43232727 146.13529968]
[-239.34399414 147.76081848]
[-243.54708862 150.84101868]
[-248.06010437 151.89834595]
[-252.06166077 151.15293884]
[-254.93641663 149.11865234]
[-269.90460205 150.09518433]
[-284.87277222 151.07171631]
[-299.84094238 152.04824829]
[-308.67752075 166.47335815]
[-324.21725464 172.72541809]
[-340.26019287 168.52360535]
[-350.53204346 155.71603394]
[-365.48452759 156.90914917]
[-378.62551880 165.71961975]
[-391.92791748 159.01918030]
[-406.88040161 160.21231079]
[-421.83285522 161.40542603]
[-436.78533936 162.59855652]
[-451.73779297 163.79167175]
[-464.92837524 173.53544617]
[-479.85186768 166.73681641]
[-481.15628052 150.38963318]
[-467.49975586 141.31047058]
[-452.93093872 148.83920288]
[-437.97845459 147.64608765]
[-423.02597046 146.45295715]
[-408.07351685 145.25984192]
[-393.12103271 144.06671143]
[-381.04953003 135.34158325]
[-366.67764282 141.95668030]
[-351.72515869 140.76356506]
[-345.85037231 128.77763367]
[-334.73162842 121.19801331]
[-321.21206665 120.09221649]
[-308.81314087 125.85554504]
[-300.81747437 137.08007812]
[-285.84930420 136.10354614]
[-270.88113403 135.12701416]
[-255.91294861 134.15048218]
[-240.96949768 132.84915161]
[-226.05783081 131.22364807]
[-216.09211731 117.67404938]
[-199.07484436 115.48350525]
[-185.47717285 126.49249268]
[-170.59059143 124.65127563]
[-155.70402527 122.81006622]
[-140.81745911 120.96885681]
[-125.93089294 119.12764740]
[-111.04431915 117.28643036]
[-103.36301422 107.94534302]
[-90.97904968 106.28728485]
[-80.45639801 113.74120331]
[-65.54473877 112.11569214]
[-50.63307190 110.49018860]
[-38.81922150 101.41923523]
[-24.26184845 107.61547852]
[-9.35018444 105.98997498]
[5.56147909 104.36446381]
[20.47314262 102.73896027]
[35.38480759 101.11344910]
[50.29647064 99.48794556]
[65.20813751 97.86243439]
[102.86798859 80.63842773]
[111.78984833 68.58021545]
[120.71170807 56.52200699]
[129.63356018 44.46379471]
[133.91633606 30.08819771]
[133.04818726 15.11334133]
[132.18002319 0.13848607]
[131.31187439 -14.83636951]
[130.44371033 -29.81122589]
[121.92066956 -43.14044952]
[128.90838623 -56.29420090]
[128.04022217 -71.26905823]
[118.58517456 -84.66809082]
[125.70625305 -99.44043732]
[142.07791138 -100.38957214]
[150.85838318 -86.53910828]
[143.01507568 -72.13721466]
[143.88323975 -57.16236115]
[152.34417725 -44.90423584]
[145.41856384 -30.67938232]
[146.28672791 -15.70452690]
[147.15487671 -0.72967166]
[148.02304077 14.24518394]
[148.89120483 29.22003937]
[156.22654724 30.78291702]
[178.23262024 35.47154999]
[185.12939453 22.15110207]
[192.02618408 8.83065128]
[198.92295837 -4.48979807]
[205.81974792 -17.81024742]
[212.71653748 -31.13069725]
[214.62980652 -47.97634125]
[231.34675598 -50.80117798]
[238.68891907 -35.51951599]
[226.03698730 -24.23391342]
[219.14019775 -10.91346359]
[212.24340820 2.40698576]
[205.34663391 15.72743511]
[198.44984436 29.04788399]
[191.55307007 42.36833572]
[201.96598816 53.16513443]
[215.52728271 46.75487518]
[220.60037231 34.89946365]
[232.02394104 29.83845139]
[243.45545959 33.78542709]
[257.10812378 27.57216644]
[270.76080322 21.35890388]
[284.41348267 15.14564228]
[298.06613159 8.93237972]
[311.71881104 2.71911812]
[325.37149048 -3.49414372]
[339.02413940 -9.70740604]
[352.67681885 -15.92066765]
[359.62698364 -30.38008881]
[375.29669189 -33.82094193]
[387.66549683 -23.60369873]
[387.24511719 -7.56615496]
[374.35800171 1.98905957]
[358.89007568 -2.26799846]
[345.23739624 3.94526362]
[331.58474731 10.15852547]
[317.93206787 16.37178802]
[304.27938843 22.58504868]
[290.62673950 28.79831123]
[276.97406006 35.01157379]
[263.32138062 41.22483444]
[249.66871643 47.43809891]
[240.25207520 62.24893188]
[221.93754578 60.31616592]
[208.37625122 66.72642517]
[178.35028076 76.86931610]
[153.64123535 70.04508209]
[141.69177246 53.38565063]
[132.76991272 65.44386292]
[123.84806061 77.50207520]
[114.92620087 89.56028748]
[116.55171204 104.47194672]
[127.86206055 114.32466888]
[139.17240906 124.17738342]
[150.48275757 134.03010559]
[150.50538635 119.03012085]
[161.03288269 108.34499359]
[176.03086853 108.09944153]
[186.90251160 118.43421173]
[187.41618347 133.42541504]
[177.27743530 144.48008728]
[162.29872131 145.26202393]
[172.71165466 156.05882263]
[183.12458801 166.85562134]
[193.61540222 177.57676697]
[204.18354797 188.22167969]
[219.39721680 192.56387329]
[222.87326050 207.04718018]
[233.44140625 217.69210815]
[244.00955200 228.33702087]
[254.57769775 238.98194885]
[270.02789307 245.96246338]
[267.59722900 262.74127197]
[250.80126953 265.05041504]
[243.93276978 249.55009460]
[233.36463928 238.90516663]
[222.79649353 228.26025391]
[212.22834778 217.61532593]
[197.77056885 214.03453064]
[193.53862000 198.78982544]
[182.97047424 188.14489746]
[176.03031921 185.61390686]
[172.32778931 177.26855469]
[161.91485596 166.47175598]
[151.50192261 155.67495728]
[140.63003540 145.34045410]
[129.31968689 135.48773193]
[118.00933838 125.63501740]
[106.69898987 115.78229523]
[93.13770294 122.19255829]
[93.57196808 137.18626404]
[94.00622559 152.17997742]
[94.44048309 167.17369080]
[94.87474823 182.16740417]
[95.30900574 197.16111755]
[95.74327087 212.15483093]
[106.37726593 224.16723633]
[103.47395325 239.94538879]
[89.26051331 247.38566589]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 213]
[3 212]
[4 211]
[5 210]
[6 209]
[7 208]
[8 207]
[9 92]
[10 91]
[11 90]
[12 89]
[13 88]
[14 87]
[15 86]
[17 84]
[18 83]
[19 82]
[21 79]
[22 78]
[23 77]
[24 76]
[25 75]
[26 74]
[30 71]
[31 70]
[35 69]
[36 68]
[37 67]
[38 66]
[42 61]
[43 60]
[45 58]
[46 57]
[47 56]
[48 55]
[49 54]
[93 168]
[94 167]
[95 166]
[96 165]
[97 116]
[98 115]
[99 114]
[100 113]
[101 112]
[103 110]
[104 109]
[118 132]
[119 131]
[120 130]
[121 129]
[122 128]
[123 127]
[133 162]
[134 161]
[137 159]
[138 158]
[139 157]
[140 156]
[141 155]
[142 154]
[143 153]
[144 152]
[145 151]
[169 206]
[170 205]
[171 204]
[172 203]
[179 202]
[180 201]
[181 200]
[182 198]
[183 197]
[185 195]
[186 194]
[187 193]
[188 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
