%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:15:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCGGGGCGGGACCGGCCCGGCCUAUAUAUUGGGUUGGCGCCGGCGCCAGCUGAGCCGAGCGGUAGCUGGUCUGGCGAGGUUUUAUACACCUGAAAGAAGAGAAUGUCAAGACGAAGUAGCCGUUUACAAGCUAAGCAGCAGCCCCAGCCCAGCCAGACGGAAUCCCCCCAAGAAGCCCAGAUAAUCCAGGCCAAGAAGAGGA\
) } def
/len { sequence length } bind def

/coor [
[114.98913574 241.51345825]
[116.96227264 233.20814514]
[120.30029297 225.34573364]
[124.91052246 218.14889526]
[130.66426086 211.82183838]
[137.40028381 206.54435730]
[131.15956116 192.90422058]
[124.91883087 179.26408386]
[119.27462769 174.48727417]
[118.68876648 165.36677551]
[112.65779114 151.63259888]
[106.62682343 137.89843750]
[100.59585571 124.16426086]
[86.04450989 120.52304840]
[74.25586700 129.79817200]
[62.46722412 139.07328796]
[50.67858124 148.34841919]
[38.88993835 157.62353516]
[27.17271233 166.98870850]
[15.52758694 176.44340515]
[3.88246226 185.89808655]
[-7.76266241 195.35276794]
[-19.40778732 204.80744934]
[-31.05291176 214.26214600]
[-42.69803619 223.71682739]
[-54.34316254 233.17150879]
[-57.42325592 248.91610718]
[-71.71925354 256.19650269]
[-86.26449585 249.42776489]
[-89.90110779 233.80232239]
[-79.83939362 221.30665588]
[-63.79784775 221.52638245]
[-52.15272141 212.07170105]
[-40.50759506 202.61701965]
[-28.86247253 193.16232300]
[-17.21734810 183.70764160]
[-5.57222319 174.25296021]
[6.07290173 164.79827881]
[17.71802711 155.34358215]
[20.93090439 148.68383789]
[29.61481667 145.83488464]
[41.40346146 136.55976868]
[53.19210434 127.28464508]
[64.98074341 118.00952148]
[76.76938629 108.73440552]
[75.22879791 101.39434052]
[60.97473526 96.72295380]
[72.14760590 86.71420288]
[70.60700989 79.37413788]
[56.08399582 75.62152863]
[41.56098175 71.86891937]
[27.03796768 68.11631012]
[12.51495361 64.36370087]
[6.04532957 65.76269531]
[0.65184397 63.95288086]
[-2.39214206 60.26716232]
[-16.79333687 56.07125854]
[-31.19453049 51.87535477]
[-46.98596191 56.29833984]
[-58.52133942 44.64213562]
[-53.93405533 28.89764786]
[-37.94311905 25.26145554]
[-26.99862862 37.47416306]
[-12.59743404 41.67006302]
[1.80376065 45.86596680]
[16.26756287 49.84069061]
[30.79057693 53.59329987]
[45.31359100 57.34590912]
[59.83660507 61.09851837]
[74.35961914 64.85112762]
[87.80210114 58.19532776]
[93.62189484 44.37035370]
[99.44169617 30.54537582]
[105.26148987 16.72039986]
[111.08129120 2.89542341]
[116.90108490 -10.92955303]
[122.72087860 -24.75452805]
[116.99925232 -39.24248123]
[123.09829712 -53.18006516]
[136.94560242 -58.54547882]
[142.76539612 -72.37045288]
[148.58520508 -86.19543457]
[154.40499878 -100.02040863]
[143.67329407 -109.51785278]
[136.41084290 -121.84721375]
[133.31649780 -135.79597473]
[134.67994690 -149.99707031]
[140.35462952 -163.06292725]
[149.77343750 -173.72096252]
[162.00526428 -180.93763733]
[175.84712219 -184.01855469]
[189.94239807 -182.67533875]
[195.97337341 -196.40951538]
[202.00434875 -210.14367676]
[194.87132263 -218.01171875]
[190.77934265 -227.77035522]
[190.17176819 -238.29643250]
[193.09249878 -248.38761902]
[199.18386841 -256.89971924]
[207.73022461 -262.87643433]
[217.74197388 -265.65679932]
[228.07008362 -264.94812012]
[234.93109131 -278.28701782]
[230.33529663 -293.17044067]
[237.48335266 -306.60025024]
[251.70075989 -310.88992310]
[258.56176758 -324.22882080]
[265.42279053 -337.56774902]
[265.48400879 -344.18661499]
[268.43795776 -349.04864502]
[272.70391846 -351.20550537]
[279.97045898 -364.32788086]
[287.23703003 -377.45028687]
[294.50360107 -390.57266235]
[301.77014160 -403.69506836]
[295.99142456 -418.22570801]
[300.95382690 -433.05502319]
[314.31430054 -441.18103027]
[329.76440430 -438.76690674]
[340.00909424 -426.95248413]
[340.21112061 -411.31619263]
[330.27511597 -399.24102783]
[314.89254761 -396.42849731]
[307.62597656 -383.30609131]
[300.35940552 -370.18371582]
[293.09286499 -357.06134033]
[285.82629395 -343.93893433]
[278.76168823 -330.70672607]
[271.90066528 -317.36782837]
[265.03967285 -304.02890015]
[269.81842041 -289.96835327]
[263.05041504 -276.34307861]
[248.27000427 -271.42599487]
[241.40899658 -258.08709717]
[251.37927246 -241.26441956]
[249.15548706 -221.69087219]
[235.46661377 -207.32473755]
[215.73851013 -204.11271667]
[209.70753479 -190.37854004]
[203.67657471 -176.64437866]
[215.19288635 -165.91148376]
[222.35076904 -151.86048889]
[224.26867676 -136.18136597]
[220.69656372 -120.76705170]
[212.04826355 -107.48479462]
[199.35372925 -97.95006561]
[184.13630676 -93.33000183]
[168.22996521 -94.20061493]
[162.41017151 -80.37563324]
[156.59037781 -66.55065918]
[150.77058411 -52.72568130]
[156.61164856 -39.07220078]
[150.90649414 -24.96880531]
[136.54585266 -18.93473244]
[130.72605896 -5.10975599]
[124.90626526 8.71522045]
[119.08646393 22.54019547]
[113.26667023 36.36517334]
[107.44687653 50.19014740]
[101.62707520 64.01512146]
[116.92542267 71.16001129]
[126.23323822 83.75128937]
[128.20852661 98.04963684]
[123.49742889 110.39469910]
[114.33002472 118.13329315]
[120.36099243 131.86746216]
[126.39196014 145.60162354]
[132.42292786 159.33580017]
[138.55895996 173.02336121]
[144.79969788 186.66348267]
[151.04042053 200.30361938]
[173.38815308 199.06025696]
[194.07037354 207.50971985]
[209.09980774 223.98536682]
[215.59518433 245.27685547]
[212.33354187 267.25567627]
[199.98028564 285.67572021]
[208.61006165 297.94467163]
[217.23985291 310.21359253]
[232.55590820 313.05187988]
[241.13296509 325.61724854]
[238.33271790 340.20129395]
[246.96249390 352.47024536]
[261.02053833 361.94696045]
[255.80581665 378.07901001]
[238.86062622 377.53387451]
[234.69355774 361.10003662]
[226.06378174 348.83108521]
[211.39163208 346.53686523]
[202.46502686 334.21734619]
[204.97090149 318.84338379]
[196.34112549 306.57443237]
[187.71134949 294.30551147]
[179.85612488 297.47116089]
[171.57667542 299.27786255]
[163.10641479 299.67291260]
[154.68444824 298.64343262]
[146.54881287 296.21673584]
[138.92974854 292.45974731]
[132.04315186 287.47692871]
[126.08454132 281.40762329]
[121.22338867 274.42199707]
[117.59839630 266.71633911]
[115.31350708 258.50744629]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 171]
[7 170]
[8 169]
[10 168]
[11 167]
[12 166]
[13 165]
[14 45]
[15 44]
[16 43]
[17 42]
[18 41]
[19 39]
[20 38]
[21 37]
[22 36]
[23 35]
[24 34]
[25 33]
[26 32]
[49 70]
[50 69]
[51 68]
[52 67]
[53 66]
[56 65]
[57 64]
[58 63]
[71 160]
[72 159]
[73 158]
[74 157]
[75 156]
[76 155]
[77 154]
[80 151]
[81 150]
[82 149]
[83 148]
[92 140]
[93 139]
[94 138]
[102 134]
[103 133]
[106 130]
[107 129]
[108 128]
[111 127]
[112 126]
[113 125]
[114 124]
[115 123]
[177 193]
[178 192]
[179 191]
[182 188]
[183 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
