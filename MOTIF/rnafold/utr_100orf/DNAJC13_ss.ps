%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:50:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGGUGAGGGUGAGGAGGCCGGAGGGCGCCUCAUCCCACUCUGGAAGCUGAGCCGGCGGCGGGAGGAGCUAGGGCUGGAGCCUCUCCAGCCUCCCGCGAAGGUUUGAGCACAAAAUGAACAUAAUUAGGGAAAAUAAGGAUCUGGCAUGUUUCUACACAACAAAACAUUCAUGGAGGGGGAAGUAUAAGCGUGUCUUUUCAGUUGGAACUCAUG\
) } def
/len { sequence length } bind def

/coor [
[111.72524261 145.70936584]
[94.87583160 146.91023254]
[78.68303680 142.10005188]
[69.86625671 154.23530579]
[61.04948044 166.37055969]
[52.23270035 178.50581360]
[49.72143936 187.28503418]
[43.19737625 190.75270081]
[34.20422363 202.75782776]
[25.21107101 214.76296997]
[16.21791840 226.76809692]
[7.22476578 238.77322388]
[-1.76838672 250.77836609]
[-10.76153946 262.78350830]
[-19.75469208 274.78863525]
[-18.69896889 287.64154053]
[-26.43403816 297.45498657]
[-38.38604736 299.30706787]
[-47.55365372 311.17950439]
[-56.72125626 323.05197144]
[-58.37382889 339.36764526]
[-73.43885040 345.84661865]
[-86.41871643 335.82388306]
[-83.96086121 319.60998535]
[-68.59370422 313.88436890]
[-59.42609787 302.01190186]
[-50.25849533 290.13946533]
[-48.85398483 272.64547729]
[-31.75982475 265.79547119]
[-22.76667213 253.79034424]
[-13.77351952 241.78521729]
[-4.78036690 229.78007507]
[4.21278524 217.77494812]
[13.20593739 205.76980591]
[22.19908905 193.76467896]
[31.19224167 181.75955200]
[40.09744644 169.68902588]
[48.91422272 157.55377197]
[57.73100281 145.41851807]
[66.54778290 133.28326416]
[60.85663223 126.35571289]
[56.57841492 118.47681427]
[53.86755371 109.93096924]
[52.82190323 101.02665710]
[53.47920990 92.08528900]
[55.81574249 83.42960358]
[59.74716187 75.37205505]
[48.35888290 65.60951996]
[36.97060776 55.84698105]
[25.51130867 46.16790390]
[13.98160172 36.57281113]
[2.45189452 26.97771454]
[-9.07781219 17.38261795]
[-20.60751915 7.78752327]
[-33.67724991 12.16082478]
[-47.09490967 9.52674866]
[-57.37717056 0.67808872]
[-61.90862274 -11.99332714]
[-59.60657883 -25.14239693]
[-70.99485779 -34.90493393]
[-82.38313293 -44.66747284]
[-93.77140808 -54.43001175]
[-105.15968323 -64.19255066]
[-116.54796600 -73.95508575]
[-114.37782288 -59.11289978]
[-121.24566650 -45.77750397]
[-134.58885193 -38.92481232]
[-149.42855835 -41.11180496]
[-160.22758484 -51.52243805]
[-162.95640564 -66.27213287]
[-156.59680176 -79.85725403]
[-143.52178955 -87.20871735]
[-128.60810852 -85.58252716]
[-138.78005981 -96.60665894]
[-148.95201111 -107.63079071]
[-159.12394714 -118.65492249]
[-169.29589844 -129.67906189]
[-179.46784973 -140.70318604]
[-189.63980103 -151.72732544]
[-199.81173706 -162.75144958]
[-214.99644470 -170.29209900]
[-211.95402527 -186.97082520]
[-195.08488464 -188.66444397]
[-188.78761292 -172.92340088]
[-178.61566162 -161.89926147]
[-168.44371033 -150.87513733]
[-158.27177429 -139.85099792]
[-148.09982300 -128.82687378]
[-137.92787170 -117.80274200]
[-127.75592804 -106.77861023]
[-117.58397675 -95.75447845]
[-106.78542328 -85.34336090]
[-95.39714813 -75.58082581]
[-84.00887299 -65.81829071]
[-72.62059784 -56.05575180]
[-61.23231506 -46.29321289]
[-49.84403992 -36.53067398]
[-34.00336456 -40.84297180]
[-18.55938530 -34.80212402]
[-9.67202377 -20.60481071]
[-11.01242447 -3.74218369]
[0.51728266 5.85291147]
[12.04698944 15.44800663]
[23.57669640 25.04310226]
[35.10640335 34.63819885]
[42.25632858 36.50009918]
[46.73314285 44.45870209]
[58.12142181 54.22124100]
[69.50969696 63.98377609]
[84.40431976 55.46235657]
[101.36123657 52.83037186]
[118.13815308 56.43585968]
[132.51657104 65.80204773]
[142.59515381 79.69040680]
[147.04116821 96.26440430]
[161.99275208 97.46859741]
[176.94435120 98.67279816]
[191.89593506 99.87699127]
[202.73008728 86.88600159]
[219.01129150 82.95263672]
[234.27531433 89.43476868]
[242.58277893 103.59487915]
[257.55035400 104.58049011]
[272.51794434 105.56609344]
[287.48553467 106.55169678]
[302.45312500 107.53730011]
[311.21878052 104.97908783]
[317.63168335 108.64822388]
[332.58328247 109.85242462]
[347.53488159 111.05661774]
[362.48645020 112.26081848]
[377.43804932 113.46501923]
[365.74884033 104.06488800]
[359.68411255 90.34558868]
[360.59942627 75.37353516]
[368.29022217 62.49518204]
[381.03744507 54.58898544]
[395.99197388 53.42208099]
[409.81130981 59.25528336]
[419.40664673 70.78479767]
[422.63327026 85.43364716]
[418.77005005 99.92762756]
[408.68045044 111.02716827]
[394.62203979 116.25108337]
[409.18820190 119.83262634]
[423.75433350 123.41417694]
[438.32046509 126.99572754]
[452.88662720 130.57727051]
[467.45275879 134.15882874]
[482.01889038 137.74037170]
[496.58505249 141.32192993]
[511.15118408 144.90347290]
[526.39965820 140.68502808]
[536.91137695 151.23742676]
[551.47747803 154.81898499]
[566.04364014 158.40052795]
[573.66534424 145.37019348]
[584.63885498 135.02589417]
[598.06896973 128.19978333]
[612.86352539 125.43740082]
[627.82183838 126.95423889]
[641.73254395 132.61886597]
[653.47155762 141.96427917]
[662.09277344 154.22642517]
[666.90454102 168.40663147]
[667.52496338 183.35295105]
[682.09112549 186.93449402]
[697.68084717 181.84596252]
[709.70001221 193.00260925]
[705.78442383 208.92742920]
[689.96203613 213.23834229]
[678.50958252 201.50064087]
[663.94342041 197.91908264]
[656.46270752 210.87347412]
[645.62384033 221.20545959]
[632.29931641 228.07154846]
[617.56512451 230.90768433]
[602.61364746 229.47563171]
[588.65753174 223.88293457]
[576.83093262 214.57492065]
[568.09753418 202.29917908]
[563.17218018 188.04565430]
[562.46209717 172.96667480]
[547.89593506 169.38511658]
[533.32977295 165.80357361]
[519.12322998 170.27819824]
[507.56964111 159.46961975]
[493.00347900 155.88806152]
[478.43734741 152.30651855]
[463.87121582 148.72497559]
[449.30505371 145.14341736]
[434.73892212 141.56187439]
[420.17279053 137.98031616]
[405.60662842 134.39877319]
[391.04049683 130.81723022]
[376.23385620 128.41659546]
[361.28225708 127.21240234]
[346.33065796 126.00820923]
[331.37908936 124.80400848]
[316.42749023 123.59980774]
[301.46752930 122.50488281]
[286.49993896 121.51927948]
[271.53234863 120.53367615]
[256.56475830 119.54807281]
[241.59718323 118.56246948]
[234.04736328 129.57145691]
[221.94689941 135.46023560]
[208.40901184 134.59483337]
[196.97583008 127.09453583]
[190.69172668 114.82858276]
[175.74014282 113.62438202]
[160.78855896 112.42018127]
[145.83697510 111.21598816]
[138.95010376 126.64049530]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 40]
[4 39]
[5 38]
[6 37]
[8 36]
[9 35]
[10 34]
[11 33]
[12 32]
[13 31]
[14 30]
[15 29]
[18 27]
[19 26]
[20 25]
[47 109]
[48 108]
[49 107]
[50 105]
[51 104]
[52 103]
[53 102]
[54 101]
[59 97]
[60 96]
[61 95]
[62 94]
[63 93]
[64 92]
[73 91]
[74 90]
[75 89]
[76 88]
[77 87]
[78 86]
[79 85]
[80 84]
[115 213]
[116 212]
[117 211]
[118 210]
[122 205]
[123 204]
[124 203]
[125 202]
[126 201]
[128 200]
[129 199]
[130 198]
[131 197]
[132 196]
[144 195]
[145 194]
[146 193]
[147 192]
[148 191]
[149 190]
[150 189]
[151 188]
[152 187]
[154 185]
[155 184]
[156 183]
[166 173]
[167 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
