%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:28:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUACUCCUCCCCCAAGAGCGGUGGCACCGAGGGAGUUGGGGUGGGGGGAGGCUGAGCGCUCUGGCUGGGACAGCUAGAGAAGAUGGCCCAGGCUGGGGAAGUCGCUCUCAUGCCUUGCUGUCCCCUCCCCUGAGCCAGGUGAUUUGGGAGACCCCCUCCUUCCUUCUUUCCCUACCGCCCCACGCGCGACCCGGGGAUGGCUCCGUGGCCUCACGAGAACAGCUCUCUUGCCCCAUGGCCGGACCUCCCCACCC\
UGGCGCCCAAUACCGCCAACACCAGUGGGCUGCCAGGGGUUC\
) } def
/len { sequence length } bind def

/coor [
[334.14730835 378.88653564]
[329.93511963 393.28295898]
[325.72293091 407.67941284]
[321.51074219 422.07583618]
[317.29855347 436.47229004]
[313.08633423 450.86871338]
[316.63705444 466.28634644]
[305.63711548 476.32876587]
[301.42489624 490.72521973]
[297.21270752 505.12164307]
[305.01910400 518.86340332]
[300.74166870 534.07781982]
[286.91815186 541.73852539]
[271.74978638 537.30047607]
[264.23568726 523.39672852]
[268.83386230 508.27612305]
[282.81628418 500.90945435]
[287.02847290 486.51300049]
[291.24066162 472.11657715]
[287.38867188 457.72869873]
[298.68991089 446.65652466]
[302.90209961 432.26010132]
[307.11428833 417.86364746]
[311.32647705 403.46722412]
[315.53869629 389.07077026]
[319.75088501 374.67434692]
[308.75540161 384.87725830]
[293.80645752 383.64089966]
[284.63659668 371.77020264]
[287.21588135 356.99362183]
[299.86511230 348.93154907]
[314.34857178 352.83251953]
[303.91101074 342.05953979]
[293.47344971 331.28652954]
[276.34710693 327.36715698]
[272.06469727 309.43539429]
[261.51416016 298.77301025]
[250.79632568 288.27883911]
[239.91389465 277.95541382]
[229.03146362 267.63201904]
[218.14903259 257.30859375]
[207.26661682 246.98519897]
[196.38418579 236.66178894]
[185.50175476 226.33839417]
[174.61932373 216.01498413]
[163.68263245 205.74908447]
[152.69197083 195.54096985]
[141.70132446 185.33285522]
[130.71066284 175.12475586]
[119.72000885 164.91664124]
[108.72935486 154.70852661]
[93.94223785 152.19036865]
[80.19229889 158.18530273]
[68.08964539 170.05804443]
[53.33053970 161.71508789]
[57.26173401 145.22320557]
[74.19736481 144.43536377]
[87.94730377 138.44042969]
[84.19228363 123.91735077]
[80.43760681 109.39556122]
[65.50507355 110.81663513]
[50.57254028 112.23770142]
[35.64000702 113.65877533]
[20.70747185 115.07984161]
[5.77493906 116.50091553]
[-9.15759468 117.92198181]
[-24.09012794 119.34305573]
[-39.02266312 120.76412201]
[-54.21773529 128.28384399]
[-65.64998627 115.76425934]
[-56.78444290 101.31301117]
[-40.44373322 105.83158875]
[-25.51119804 104.41052246]
[-10.57866478 102.98944855]
[4.35386848 101.56838226]
[19.28640175 100.14730835]
[34.21893692 98.72624207]
[49.15147018 97.30516815]
[64.08399963 95.88410187]
[79.01653290 94.46302795]
[81.53623199 87.39895630]
[67.40816498 82.35932922]
[72.44802094 68.23135376]
[86.57561493 73.27080536]
[89.09531403 66.20673370]
[78.43294525 55.65618515]
[67.77058411 45.10564041]
[57.10822296 34.55509186]
[41.85654068 30.34832954]
[38.25187302 15.89649200]
[27.58950996 5.34594631]
[16.92714691 -5.20459938]
[6.26478386 -15.75514507]
[-11.24668694 -15.35545731]
[-23.37333488 -27.52154350]
[-22.93413353 -44.35494995]
[-33.70712662 -54.79250717]
[-44.48012161 -65.23006439]
[-55.25311661 -75.66761780]
[-66.02611542 -86.10517883]
[-76.85397339 -96.48580170]
[-87.73640442 -106.80921173]
[-98.61883545 -117.13261414]
[-118.43440247 -120.99833679]
[-123.01166534 -139.81283569]
[-134.10932922 -149.90451050]
[-149.88195801 -148.90478516]
[-161.68643188 -159.41334534]
[-162.51934814 -175.19567871]
[-151.88656616 -186.88838196]
[-136.09631348 -187.55439758]
[-124.51667786 -176.79858398]
[-124.01764679 -161.00216675]
[-112.91998291 -150.91049194]
[-102.85674286 -152.31112671]
[-93.47531128 -147.87077332]
[-87.95030212 -138.82669067]
[-88.29542542 -128.01504517]
[-77.41299438 -117.69163513]
[-66.53057098 -107.36823273]
[-59.54866791 -105.05561829]
[-55.58855438 -96.87817383]
[-44.81555939 -86.44061279]
[-34.04256821 -76.00305939]
[-23.26957130 -65.56549835]
[-12.49657631 -55.12794495]
[0.20354871 -57.13442993]
[11.92197514 -51.38708878]
[18.29755020 -39.77608871]
[16.81533051 -26.41750908]
[27.47769356 -15.86696243]
[38.14005661 -5.31641674]
[48.80241776 5.23412943]
[63.29145432 8.68624687]
[67.65876770 23.89273071]
[78.32112885 34.44327545]
[88.98348999 44.99382401]
[99.64585876 55.54436874]
[106.72311401 53.06194687]
[109.50038147 38.32129288]
[120.87763214 48.09709930]
[127.95488739 45.61467743]
[129.69046021 30.71542168]
[117.08366394 19.40484047]
[113.75309753 2.96843410]
[120.82073212 -12.05619717]
[135.31253052 -19.81360245]
[136.89093018 -34.73032761]
[138.46934509 -49.64704895]
[140.04776001 -64.56377411]
[141.62617493 -79.48049164]
[132.69738770 -92.80927277]
[137.68836975 -108.05622864]
[152.77047729 -113.52519989]
[166.37399292 -105.02085876]
[168.06347656 -89.06701660]
[156.54289246 -77.90208435]
[154.96447754 -62.98535919]
[153.38606262 -48.06863785]
[151.80766296 -33.15191650]
[150.22924805 -18.23519135]
[160.91346741 -10.27348328]
[166.32281494 2.02173162]
[164.95158386 15.49276161]
[157.05062866 26.62212372]
[144.58972168 32.45100021]
[142.85414124 47.35025406]
[157.22161865 107.90084839]
[118.93746185 143.71788025]
[129.92811584 153.92597961]
[140.91877747 164.13409424]
[151.90942383 174.34220886]
[162.90008545 184.55030823]
[173.89073181 194.75842285]
[182.26547241 198.28219604]
[184.94273376 205.13255310]
[195.82516479 215.45596313]
[206.70758057 225.77935791]
[217.59001160 236.10276794]
[228.47244263 246.42617798]
[239.35487366 256.74957275]
[250.23730469 267.07299805]
[261.11972046 277.39639282]
[266.10345459 278.59503174]
[269.78521729 281.29464722]
[271.81411743 284.75997925]
[272.17651367 288.22247314]
[282.72705078 298.88482666]
[295.56671143 299.72476196]
[304.13275146 308.78274536]
[304.24642944 320.84896851]
[314.68399048 331.62197876]
[325.12155151 342.39495850]
[391.25415039 326.55279541]
[406.25079346 326.23657227]
[421.24746704 325.92031860]
[436.24414062 325.60406494]
[451.24081421 325.28784180]
[459.70748901 321.99114990]
[466.39703369 325.04812622]
[481.39620972 324.89001465]
[496.39434814 324.65280151]
[511.39099121 324.33657837]
[526.38348389 323.86224365]
[541.37017822 323.22988892]
[556.35681152 322.59756470]
[571.34350586 321.96520996]
[586.33013916 321.33285522]
[601.31683350 320.70050049]
[609.20758057 309.82003784]
[621.73614502 305.51907349]
[634.27264404 309.15081787]
[642.31884766 319.17968750]
[657.31134033 318.70535278]
[670.85992432 310.53555298]
[683.82550049 317.86651611]
[698.81799316 317.39221191]
[713.81048584 316.91787720]
[728.80297852 316.44357300]
[740.78692627 305.77749634]
[756.57281494 308.63864136]
[764.05102539 322.83215332]
[757.48492432 337.47000122]
[741.91149902 341.32327271]
[729.27734375 331.43606567]
[714.28485107 331.91036987]
[699.29229736 332.38470459]
[684.29980469 332.85903931]
[671.82360840 340.99490356]
[657.78564453 333.69787598]
[642.79315186 334.17218018]
[631.79290771 346.92175293]
[614.63604736 347.76422119]
[601.94915771 335.68716431]
[586.96252441 336.31951904]
[571.97583008 336.95187378]
[556.98919678 337.58422852]
[542.00250244 338.21655273]
[527.01586914 338.84890747]
[523.20947266 341.66171265]
[517.60668945 342.14456177]
[511.70724487 339.33322144]
[496.71057129 339.64947510]
[490.12106323 342.91647339]
[481.55435181 339.88916016]
[466.55517578 340.04730225]
[451.55703735 340.28448486]
[436.56039429 340.60073853]
[421.56372070 340.91699219]
[406.56704712 341.23321533]
[391.57037354 341.54946899]
[387.90054321 348.09030151]
[376.89105225 367.71273804]
[384.43664551 380.67669678]
[391.98226929 393.64065552]
[399.52786255 406.60458374]
[407.07345581 419.56854248]
[414.61907959 432.53247070]
[422.16467285 445.49642944]
[429.77850342 458.42041016]
[437.46035767 471.30410767]
[445.14221191 484.18777466]
[452.82406616 497.07144165]
[460.50592041 509.95513916]
[475.39083862 507.08895874]
[490.35787964 509.48962402]
[503.59970093 516.86730957]
[513.51733398 528.33099365]
[518.91308594 542.49652100]
[519.13543701 557.65325928]
[514.15759277 571.97094727]
[504.58056641 583.72070312]
[491.56085205 591.48364258]
[476.67068481 594.32238770]
[461.70809937 591.89410400]
[448.47988892 584.49206543]
[438.58340454 573.01007080]
[433.21377563 558.83465576]
[433.01931763 543.67755127]
[438.02355957 529.36907959]
[447.62222290 517.63696289]
[439.94036865 504.75329590]
[432.25851440 491.86962891]
[424.57669067 478.98593140]
[416.89483643 466.10226440]
[410.79953003 461.98611450]
[409.20071411 453.04202271]
[401.65512085 440.07809448]
[394.10952759 427.11413574]
[386.56393433 414.15017700]
[379.01831055 401.18624878]
[371.47271729 388.22229004]
[363.92712402 375.25836182]
[356.48214722 376.16540527]
[362.80868530 389.76596069]
[351.82876587 399.98562622]
[338.71630859 392.70111084]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 26]
[2 25]
[3 24]
[4 23]
[5 22]
[6 21]
[8 19]
[9 18]
[10 17]
[32 193]
[33 192]
[34 191]
[36 188]
[37 187]
[38 183]
[39 182]
[40 181]
[41 180]
[42 179]
[43 178]
[44 177]
[45 176]
[46 174]
[47 173]
[48 172]
[49 171]
[50 170]
[51 169]
[52 58]
[53 57]
[60 80]
[61 79]
[62 78]
[63 77]
[64 76]
[65 75]
[66 74]
[67 73]
[68 72]
[85 138]
[86 137]
[87 136]
[88 135]
[90 133]
[91 132]
[92 131]
[93 130]
[96 126]
[97 125]
[98 124]
[99 123]
[100 122]
[101 120]
[102 119]
[103 118]
[105 114]
[106 113]
[142 167]
[143 166]
[147 161]
[148 160]
[149 159]
[150 158]
[151 157]
[194 251]
[195 250]
[196 249]
[197 248]
[198 247]
[200 246]
[201 245]
[202 243]
[203 242]
[204 239]
[205 238]
[206 237]
[207 236]
[208 235]
[209 234]
[213 231]
[214 230]
[216 228]
[217 227]
[218 226]
[219 225]
[253 293]
[254 292]
[255 291]
[256 290]
[257 289]
[258 288]
[259 287]
[260 285]
[261 284]
[262 283]
[263 282]
[264 281]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
