%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:16:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCACAGAGCAGUGAUAACUACCUGCCAGUGUCUCUUAGGAGUGAGGUACCUGGAGUUCGGGGACCCCAACCUGUGACAAUGACAGCAGACAAAUUGGUUUUCUUUGUGAAUGGCAGAAAGGUGGUGGAGAAAAAUGCAGAUCCAGAGACAACCCUUUUGGCCUACCUGAGAAGAAAGU\
) } def
/len { sequence length } bind def

/coor [
[92.85463715 149.02369690]
[88.46906281 163.36827087]
[84.08348846 177.71282959]
[79.69791412 192.05740356]
[75.31233978 206.40197754]
[82.95236206 220.23692322]
[78.49169159 235.39863586]
[64.57674408 242.89196777]
[49.46303177 238.27124023]
[42.11723709 224.27786255]
[46.89749908 209.21383667]
[60.96776581 202.01640320]
[65.35334015 187.67182922]
[69.73891449 173.32725525]
[74.12449646 158.98269653]
[78.51007080 144.63812256]
[70.32961273 139.67425537]
[63.25600433 133.23037720]
[57.55311584 125.54683685]
[53.43369293 116.91027832]
[51.05140686 107.64289856]
[50.49512863 98.09040070]
[51.78561401 88.60913086]
[37.87785721 82.99003601]
[23.97009850 77.37093353]
[10.06234169 71.75183868]
[-3.98774147 66.49872589]
[-18.17052078 61.61520386]
[-33.73785782 64.43807220]
[-43.25271225 52.97871399]
[-57.43548965 48.09519196]
[-71.61827087 43.21166992]
[-85.80104828 38.32814789]
[-95.31745148 43.66812515]
[-105.98136902 42.88923264]
[-114.27241516 36.49160385]
[-117.58760834 26.78991508]
[-131.59132385 21.41439438]
[-145.59501648 16.03887558]
[-159.59872437 10.66335678]
[-171.69610596 15.18983364]
[-183.25988770 10.40325165]
[-188.28518677 -0.61935174]
[-202.19294739 -6.23845053]
[-217.88668823 -4.23418617]
[-226.78875732 -16.17580605]
[-240.69651794 -21.79490471]
[-254.60427856 -27.41400337]
[-270.29800415 -25.40974045]
[-279.20010376 -37.35136032]
[-293.10784912 -42.97045898]
[-307.01562500 -48.58955765]
[-320.92337036 -54.20865631]
[-336.19345093 -49.28892899]
[-349.48040771 -58.27986908]
[-350.59155273 -74.28439331]
[-338.67459106 -85.02520752]
[-322.87112427 -82.26287079]
[-315.30426025 -68.11641693]
[-301.39651489 -62.49731445]
[-287.48873901 -56.87821579]
[-273.58099365 -51.25911713]
[-258.88201904 -53.66529846]
[-248.98518372 -41.32176208]
[-235.07742310 -35.70266342]
[-221.16966248 -30.08356476]
[-206.47070312 -32.48974228]
[-196.57383728 -20.14620781]
[-182.66609192 -14.52710915]
[-165.45898438 -17.91300201]
[-154.22320557 -3.34034991]
[-140.21949768 2.03516936]
[-126.21579742 7.41068840]
[-112.21208954 12.78620815]
[-93.40906525 8.34710693]
[-80.91752625 24.14536858]
[-66.73474884 29.02889061]
[-52.55196762 33.91241455]
[-38.36919022 38.79593658]
[-23.81629753 35.62376785]
[-13.28699780 47.43242645]
[0.89578098 52.31594849]
[4.22875452 51.08682251]
[8.32670879 51.42823029]
[12.43698692 53.68372726]
[15.68144035 57.84408188]
[29.58919907 63.46318054]
[43.49695587 69.08227539]
[57.40471268 74.70137787]
[65.25473785 64.68505096]
[75.39739227 56.99895096]
[87.16342163 52.15022659]
[99.77645874 50.45881653]
[112.40425110 52.03633118]
[124.21355438 56.77867889]
[134.42515564 64.37294006]
[142.36524963 74.31801605]
[147.50991821 85.95768738]
[149.51969910 98.52393341]
[164.40788269 100.35196686]
[179.29608154 102.18000793]
[194.18426514 104.00804901]
[209.07246399 105.83609009]
[223.96064758 107.66413116]
[238.84884644 109.49217224]
[253.73704529 111.32021332]
[261.55505371 97.28574371]
[274.12637329 87.34526825]
[289.51126099 82.99498749]
[305.35006714 84.87143707]
[319.22540283 92.65847778]
[329.03088379 105.14014435]
[333.29095459 120.39039612]
[348.20880127 121.95832062]
[363.12661743 123.52625275]
[377.65997314 117.27384186]
[389.50872803 126.29912567]
[404.42657471 127.86705017]
[419.34439087 129.43498230]
[434.26223755 131.00289917]
[449.18005371 132.57083130]
[464.09786987 134.13876343]
[476.93746948 117.90835571]
[496.82818604 112.71888733]
[515.70458984 120.50235748]
[526.01593018 137.96499634]
[541.01361084 138.22679138]
[556.01135254 138.48857117]
[571.00903320 138.75035095]
[577.82440186 125.09335327]
[589.89562988 115.75267792]
[604.82598877 112.58292389]
[619.65100098 116.21345520]
[631.42724609 125.92342377]
[637.81646729 139.78491211]
[637.55004883 155.04570007]
[630.68096924 168.67576599]
[618.57305908 177.96882629]
[603.63037109 181.07975769]
[588.81970215 177.39088440]
[577.08184814 167.63461304]
[570.74725342 153.74807739]
[555.74957275 153.48628235]
[540.75183105 153.22450256]
[525.75408936 152.96270752]
[521.97375488 161.93312073]
[515.64282227 169.36647034]
[507.33825684 174.55772400]
[497.82543945 177.00741577]
[487.98736572 176.46971130]
[478.74282837 172.97695923]
[470.96060181 166.83827209]
[465.37777710 158.61235046]
[462.52996826 149.05657959]
[447.61212158 147.48866272]
[432.69430542 145.92073059]
[417.77645874 144.35279846]
[402.85864258 142.78488159]
[387.94082642 141.21694946]
[374.47448730 147.58149719]
[361.55868530 138.44407654]
[346.64086914 136.87614441]
[331.72302246 135.30822754]
[325.49298096 147.89895630]
[315.31463623 157.62426758]
[302.39871216 163.29902649]
[288.29138184 164.22160339]
[274.68902588 160.26058960]
[263.23428345 151.87307739]
[255.31771851 140.05194092]
[251.90899658 126.20840454]
[237.02081299 124.38036346]
[222.13261414 122.55232239]
[207.24441528 120.72428131]
[192.35623169 118.89624023]
[177.46803284 117.06819916]
[162.57984924 115.24016571]
[147.69165039 113.41212463]
[136.09315491 133.93617249]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 16]
[2 15]
[3 14]
[4 13]
[5 12]
[23 89]
[24 88]
[25 87]
[26 86]
[27 82]
[28 81]
[30 79]
[31 78]
[32 77]
[33 76]
[37 74]
[38 73]
[39 72]
[40 71]
[43 69]
[44 68]
[46 66]
[47 65]
[48 64]
[50 62]
[51 61]
[52 60]
[53 59]
[99 178]
[100 177]
[101 176]
[102 175]
[103 174]
[104 173]
[105 172]
[106 171]
[113 163]
[114 162]
[115 161]
[117 159]
[118 158]
[119 157]
[120 156]
[121 155]
[122 154]
[126 145]
[127 144]
[128 143]
[129 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
