%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:50:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGGCGCGGCAGCCGGGCGGCUCCUCCUUCCUCCCGGCCCUGGCGUGGAGCAGAGGGACACAGGUUCCCACGCUGGCGCCCGGCGACCGGGUGGGGCUGCGGCCCAGCAGCUCCAUGGAGGACGCCGGCGAGGACCCCACCACGUUUGCUGCCCACUCUCUGCCCAGUGACCCCCGUCUCUUGGCCACUGUGACCAACGCAUACCUGGGCACAC\
) } def
/len { sequence length } bind def

/coor [
[568.43719482 575.11511230]
[557.37805176 564.98126221]
[546.31890869 554.84741211]
[535.25970459 544.71356201]
[524.20056152 534.57971191]
[517.14807129 532.37921143]
[513.05560303 524.21716309]
[502.14501953 513.92352295]
[491.23440552 503.62988281]
[480.32379150 493.33627319]
[469.41320801 483.04263306]
[458.50259399 472.74902344]
[447.59197998 462.45538330]
[433.02484131 459.34930420]
[428.29663086 444.25115967]
[417.38601685 433.95751953]
[406.40084839 423.74353027]
[395.34167480 413.60964966]
[380.73092651 410.71578979]
[375.78359985 395.68798828]
[364.72445679 385.55413818]
[357.40429688 388.75491333]
[349.43414307 389.67507935]
[341.51089478 388.21426392]
[334.33306885 384.48123169]
[328.53939819 378.78585815]
[324.65197754 371.61364746]
[323.02908325 363.58432007]
[323.83248901 355.39819336]
[327.01138306 347.77529907]
[316.87750244 336.71615601]
[306.74365234 325.65698242]
[296.60980225 314.59783936]
[286.47595215 303.53866577]
[276.26193237 292.55349731]
[265.96832275 281.64288330]
[255.67469788 270.73226929]
[245.38107300 259.82168579]
[235.08744812 248.91107178]
[224.63623047 238.15133667]
[214.02963257 227.54472351]
[203.42301941 216.93812561]
[191.33288574 216.62528992]
[182.40968323 207.87884521]
[181.81719971 194.99676514]
[171.36598206 184.23701477]
[160.91476440 173.47727966]
[150.46354675 162.71754456]
[140.01232910 151.95779419]
[129.56111145 141.19805908]
[119.10989380 130.43830872]
[108.65867615 119.67857361]
[99.61939240 125.09239960]
[87.65360260 125.89897919]
[75.22794342 120.70786285]
[65.38430023 109.45336914]
[50.84048080 105.78221893]
[36.29666138 102.11106873]
[21.75284386 98.43991852]
[7.20902538 94.76876831]
[-8.41170883 99.76123047]
[-20.36200523 88.53080750]
[-16.34842300 72.63039398]
[-0.49979192 68.41696930]
[10.88017559 80.22495270]
[25.42399406 83.89610291]
[39.96781158 87.56725311]
[54.51163101 91.23840332]
[69.05545044 94.90955353]
[73.66430664 88.99275970]
[68.02470398 75.09330750]
[82.88202667 77.15917969]
[87.49089050 71.24239349]
[80.37188721 58.03937149]
[73.25287628 44.83634949]
[66.13387299 31.63332939]
[59.01486969 18.43030739]
[52.19012451 12.36480713]
[51.88992310 4.98308945]
[44.96369553 -8.32207298]
[38.03746414 -21.62723541]
[31.01466179 -34.88167953]
[23.89565659 -48.08469772]
[16.77665138 -61.28771973]
[9.65764618 -74.49073792]
[-2.45005822 -78.92952728]
[-8.10842514 -90.06983185]
[-4.77121115 -101.69448090]
[-11.69744015 -114.99964142]
[-25.81153488 -123.34975433]
[-25.36663437 -139.74285889]
[-10.82041264 -147.31513977]
[2.86322355 -138.27688599]
[1.60772216 -121.92586517]
[8.53395176 -108.62070465]
[23.82172585 -100.00055695]
[22.86066628 -81.60974884]
[29.97967148 -68.40672302]
[37.09867859 -55.20370483]
[44.21768188 -42.00068283]
[50.15677643 -37.60670853]
[51.34262848 -28.55346489]
[58.26885605 -15.24830246]
[65.19508362 -1.94313967]
[72.21788788 11.31130219]
[79.33689880 24.51432419]
[86.45590210 37.71734238]
[93.57490540 50.92036438]
[100.69390869 64.12338257]
[124.40093231 84.90744781]
[119.41841125 109.22735596]
[129.86962891 119.98709869]
[140.32084656 130.74684143]
[150.77206421 141.50657654]
[161.22328186 152.26632690]
[171.67449951 163.02606201]
[182.12573242 173.78579712]
[192.57695007 184.54554749]
[210.40556335 189.15919495]
[214.02963257 206.33152771]
[224.63623047 216.93812561]
[235.24282837 227.54472351]
[241.51377869 229.61994934]
[245.23867798 233.90579224]
[245.99804688 238.61744690]
[256.29168701 249.52806091]
[266.58529663 260.43865967]
[276.87893677 271.34927368]
[287.17254639 282.25985718]
[295.33462524 286.35232544]
[297.53512573 293.40481567]
[307.66897583 304.46395874]
[317.80282593 315.52313232]
[327.93667603 326.58230591]
[338.07052612 337.64144897]
[360.54013062 336.75454712]
[376.10720825 352.59667969]
[374.85830688 374.49496460]
[385.91744995 384.62881470]
[401.31924438 388.24755859]
[405.47555542 402.55050659]
[416.53469849 412.68435669]
[424.97253418 416.17294312]
[427.67965698 423.04690552]
[438.59024048 433.34054565]
[453.93777466 437.18289185]
[457.88562012 451.54476929]
[468.79620361 461.83840942]
[479.70681763 472.13201904]
[490.61743164 482.42565918]
[501.52804565 492.71926880]
[512.43865967 503.01290894]
[523.34924316 513.30651855]
[534.33441162 523.52050781]
[545.39355469 533.65441895]
[556.45275879 543.78826904]
[567.51190186 553.92211914]
[578.57104492 564.05596924]
[595.10040283 560.45898438]
[610.36450195 567.35577393]
[618.42797852 581.84716797]
[616.28527832 598.12426758]
[627.49066162 608.09619141]
[638.69598389 618.06811523]
[649.90136719 628.04003906]
[661.10675049 638.01202393]
[672.31213379 647.98394775]
[683.51751709 657.95587158]
[708.00323486 649.95367432]
[733.22839355 668.49468994]
[747.24768066 673.82940674]
[761.26696777 679.16418457]
[777.36169434 676.01892090]
[787.92742920 688.56079102]
[782.09503174 703.88775635]
[765.86444092 706.23272705]
[755.93225098 693.18347168]
[741.91296387 687.84869385]
[727.89367676 682.51397705]
[723.72686768 688.75000000]
[715.39331055 701.22204590]
[711.22656250 707.45806885]
[721.52020264 718.36865234]
[731.81378174 729.27923584]
[742.10742188 740.18988037]
[757.20556641 744.91809082]
[760.31164551 759.48522949]
[770.60528564 770.39581299]
[785.87268066 777.76751709]
[783.01550293 794.47900391]
[766.16619873 796.35968018]
[759.69470215 780.68945312]
[749.40106201 769.77886963]
[735.03918457 765.83105469]
[731.19683838 750.48345947]
[720.90319824 739.57287598]
[710.60955811 728.66229248]
[700.31591797 717.75164795]
[690.59838867 715.81701660]
[682.11541748 711.55621338]
[675.38134766 705.46807861]
[670.73980713 698.15234375]
[668.34759521 690.25634766]
[668.17547607 682.42053223]
[670.02270508 675.22790527]
[673.54559326 669.16125488]
[662.34020996 659.18933105]
[651.13482666 649.21734619]
[639.92944336 639.24542236]
[628.72406006 629.27349854]
[617.51867676 619.30157471]
[606.31329346 609.32965088]
[593.59368896 613.37902832]
[580.42834473 610.59320068]
[570.27728271 601.59490967]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 158]
[2 157]
[3 156]
[4 155]
[5 154]
[7 153]
[8 152]
[9 151]
[10 150]
[11 149]
[12 148]
[13 147]
[15 145]
[16 144]
[17 142]
[18 141]
[20 139]
[21 138]
[30 135]
[31 134]
[32 133]
[33 132]
[34 131]
[35 129]
[36 128]
[37 127]
[38 126]
[39 125]
[40 122]
[41 121]
[42 120]
[45 118]
[46 117]
[47 116]
[48 115]
[49 114]
[50 113]
[51 112]
[52 111]
[56 69]
[57 68]
[58 67]
[59 66]
[60 65]
[73 109]
[74 108]
[75 107]
[76 106]
[77 105]
[79 104]
[80 103]
[81 102]
[82 100]
[83 99]
[84 98]
[85 97]
[88 95]
[89 94]
[162 212]
[163 211]
[164 210]
[165 209]
[166 208]
[167 207]
[168 206]
[170 179]
[171 178]
[172 177]
[182 198]
[183 197]
[184 196]
[185 195]
[187 193]
[188 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
