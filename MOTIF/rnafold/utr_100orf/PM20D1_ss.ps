%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:26:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGCCAAGAAACGCUAGUCUGGGCGUUUAGGUCAGAACUACCCCGGUAGCCUGACAGCAGGAGCUCGAGAGAAGCAUGGCUCAGCGGUGCGUUUGCGUGCUGGCCCUGGUGGCUAUGCUGCUCCUAGUUUUCCCUACCGUCUCCAGAUCGAUGGGCCCGAGGAGCGGGGAGCAUC\
) } def
/len { sequence length } bind def

/coor [
[20.62339783 223.06442261]
[8.79198647 223.92089844]
[-2.59830213 220.73411560]
[-11.75610352 232.61413574]
[-20.91390419 244.49414062]
[-30.07170677 256.37414551]
[-28.05063820 267.10174561]
[-32.19839859 276.96118164]
[-40.91458893 282.77346802]
[-51.17094421 282.81069946]
[-60.74460602 294.35821533]
[-70.31826782 305.90570068]
[-79.89192963 317.45321655]
[-89.46559143 329.00073242]
[-99.03926086 340.54824829]
[-108.61292267 352.09576416]
[-106.89299774 367.80618286]
[-116.85079956 380.07882690]
[-132.57853699 381.63253784]
[-144.74520874 371.54556274]
[-146.13256836 355.80227661]
[-135.91749573 343.74291992]
[-120.16043091 342.52209473]
[-110.58676910 330.97457886]
[-101.01310730 319.42706299]
[-91.43944550 307.87954712]
[-81.86577606 296.33206177]
[-72.29211426 284.78454590]
[-62.71845245 273.23703003]
[-60.91141129 254.00369263]
[-41.95171738 247.21635437]
[-32.79391479 235.33634949]
[-23.63611603 223.45632935]
[-14.47831345 211.57632446]
[-22.14147758 195.19313049]
[-20.44852066 177.10055542]
[-9.77989769 162.28582764]
[6.99795628 154.87622070]
[25.30232811 156.98944092]
[33.81486893 144.63887024]
[35.02567673 137.32418823]
[42.58971024 132.14646912]
[51.32011032 119.94892883]
[60.05051041 107.75138092]
[68.78091431 95.55383301]
[74.36708069 81.63282013]
[76.48983002 66.78378296]
[78.61257172 51.93474197]
[80.73531342 37.08570099]
[82.85805511 22.23666382]
[75.81771851 13.89401531]
[74.57431030 3.27017951]
[79.29977417 -6.07993603]
[88.20886230 -11.16149712]
[90.85727692 -25.92584419]
[85.67809296 -40.87531662]
[95.54097748 -52.03653717]
[98.18938446 -66.80088043]
[100.83779907 -81.56523132]
[103.35507965 -96.35249329]
[105.74102783 -111.16152191]
[108.12698364 -125.97055054]
[110.51293182 -140.77957153]
[112.89888763 -155.58859253]
[115.28483582 -170.39762878]
[103.57570648 -161.02232361]
[88.59921265 -160.18293762]
[75.91580200 -168.19113159]
[70.23454285 -182.07360840]
[73.66477966 -196.67613220]
[84.93292236 -206.57708740]
[99.85536957 -208.10046387]
[112.89172363 -200.68066406]
[119.20197296 -187.07179260]
[123.65963745 -201.39413452]
[128.11729431 -215.71646118]
[132.57495117 -230.03880310]
[137.03260803 -244.36112976]
[141.49026489 -258.68347168]
[145.94792175 -273.00579834]
[150.40557861 -287.32815552]
[154.86323547 -301.65048218]
[159.06599426 -316.04968262]
[163.01252747 -330.52117920]
[166.95907593 -344.99270630]
[170.51896667 -359.56414795]
[173.68971252 -374.22521973]
[176.86045837 -388.88626099]
[180.03118896 -403.54730225]
[183.20193481 -418.20837402]
[186.37266541 -432.86941528]
[189.54341125 -447.53045654]
[184.01872253 -462.97097778]
[194.83316040 -475.29901123]
[210.86174011 -471.83251953]
[215.61564636 -456.13754272]
[204.20445251 -444.35971069]
[201.03372192 -429.69866943]
[197.86297607 -415.03762817]
[194.69224548 -400.37655640]
[191.52149963 -385.71551514]
[188.35076904 -371.05447388]
[185.18002319 -356.39343262]
[186.79759216 -353.22723389]
[186.94337463 -349.11349487]
[185.18588257 -344.76116943]
[181.43058777 -341.04617310]
[177.48405457 -326.57464600]
[173.53752136 -312.10311890]
[175.10391235 -307.56134033]
[173.81161499 -301.98675537]
[169.18557739 -297.19281006]
[164.72792053 -282.87048340]
[160.27026367 -268.54815674]
[155.81259155 -254.22581482]
[151.35493469 -239.90347290]
[146.89727783 -225.58114624]
[142.43962097 -211.25880432]
[137.98196411 -196.93647766]
[133.52430725 -182.61413574]
[130.09387207 -168.01167297]
[127.70790863 -153.20265198]
[125.32196045 -138.39361572]
[122.93600464 -123.58459473]
[120.55005646 -108.77556610]
[118.16410065 -93.96654510]
[120.21081543 -86.84041595]
[115.60214233 -78.91681671]
[112.95373535 -64.15247345]
[110.30532074 -49.38812637]
[115.67393494 -35.49469757]
[105.62162018 -23.27743340]
[102.97321320 -8.51308727]
[110.86878204 9.11775494]
[97.70709229 24.35940742]
[95.58435059 39.20844650]
[93.46160889 54.05748367]
[91.33886719 68.90652466]
[89.21612549 83.75556183]
[103.94099426 82.07687378]
[114.65046692 90.98002625]
[115.55611420 103.98242950]
[126.66758728 114.05889130]
[137.77905273 124.13536072]
[148.89053345 134.21182251]
[154.05461121 135.32348633]
[157.87738037 138.04708862]
[159.96736145 141.59335327]
[160.30691528 145.13255310]
[170.86634827 155.78611755]
[181.42578125 166.43968201]
[196.99374390 164.96568298]
[209.83753967 173.88594055]
[213.89271545 188.98857117]
[207.24455261 203.14257812]
[193.03210449 209.66487122]
[177.96606445 205.47583008]
[169.16014099 192.55337524]
[170.77223206 176.99911499]
[160.21279907 166.34555054]
[149.65336609 155.69198608]
[138.81407166 145.32330322]
[127.70259094 135.24682617]
[116.59111786 125.17036438]
[105.47964478 115.09390259]
[91.46885681 115.59723663]
[80.97845459 104.28424072]
[72.24805450 116.48178101]
[63.51765442 128.67932129]
[54.78725433 140.87687683]
[46.16544342 153.15141296]
[37.65290070 165.50198364]
[44.18561172 175.65185547]
[46.89213181 187.37937927]
[45.47623062 199.29666138]
[40.12813950 210.00148010]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 34]
[4 33]
[5 32]
[6 31]
[10 29]
[11 28]
[12 27]
[13 26]
[14 25]
[15 24]
[16 23]
[39 172]
[40 171]
[42 170]
[43 169]
[44 168]
[45 167]
[46 139]
[47 138]
[48 137]
[49 136]
[50 135]
[54 133]
[55 132]
[57 130]
[58 129]
[59 128]
[60 126]
[61 125]
[62 124]
[63 123]
[64 122]
[65 121]
[74 120]
[75 119]
[76 118]
[77 117]
[78 116]
[79 115]
[80 114]
[81 113]
[82 112]
[83 109]
[84 108]
[85 107]
[86 103]
[87 102]
[88 101]
[89 100]
[90 99]
[91 98]
[92 97]
[142 165]
[143 164]
[144 163]
[145 162]
[149 161]
[150 160]
[151 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
