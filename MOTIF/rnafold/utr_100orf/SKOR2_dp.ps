%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:11:25 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SKOR2)
} def

/sequence { (\
AUGGCUUCCAGUCCGCUGCCAGGGCCCAACGACAUCCUGCUGGCGUCGCCGUCGAGCGCCUUCCAGCCCGACACGCUGAGCCAGCCGCGGCCAGGGCACG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.033566442 ubox
2 10 0.378133911 ubox
2 11 0.025908448 ubox
2 15 0.264127959 ubox
2 18 0.003748811 ubox
2 21 0.010206824 ubox
2 83 0.003766407 ubox
2 100 0.006490078 ubox
3 9 0.420067926 ubox
3 13 0.725774358 ubox
3 14 0.414480916 ubox
3 17 0.116296448 ubox
3 20 0.011331530 ubox
3 82 0.004180813 ubox
3 99 0.009465136 ubox
4 8 0.413367966 ubox
4 12 0.738555494 ubox
4 13 0.413022950 ubox
4 16 0.141580001 ubox
4 19 0.011336194 ubox
4 81 0.004181663 ubox
4 97 0.005104707 ubox
5 11 0.828541777 ubox
5 15 0.141556292 ubox
5 18 0.011265789 ubox
5 80 0.004179069 ubox
5 96 0.005094714 ubox
6 10 0.746471090 ubox
6 79 0.003866104 ubox
6 95 0.004117341 ubox
7 94 0.003170047 ubox
9 18 0.004968778 ubox
9 78 0.003292206 ubox
10 17 0.014269431 ubox
10 77 0.003589698 ubox
11 16 0.019505590 ubox
11 76 0.003592353 ubox
11 91 0.004710310 ubox
11 97 0.032936657 ubox
11 99 0.020923296 ubox
12 75 0.003375587 ubox
12 96 0.032936495 ubox
12 98 0.015504669 ubox
13 90 0.005767853 ubox
13 95 0.032976669 ubox
14 45 0.003518629 ubox
14 89 0.005800722 ubox
14 94 0.032809934 ubox
14 100 0.749261811 ubox
15 44 0.003664164 ubox
15 88 0.005825306 ubox
15 91 0.032255532 ubox
15 97 0.007806750 ubox
15 99 0.820830518 ubox
16 43 0.003664894 ubox
16 87 0.005816727 ubox
16 90 0.032398808 ubox
16 96 0.007726082 ubox
17 42 0.003606874 ubox
17 89 0.032376100 ubox
17 95 0.005258693 ubox
17 98 0.954450842 ubox
17 100 0.003972085 ubox
18 85 0.003629594 ubox
18 88 0.032398177 ubox
18 91 0.006676575 ubox
18 97 0.999185350 ubox
19 84 0.003451166 ubox
19 87 0.032334272 ubox
19 90 0.006879436 ubox
19 95 0.013250427 ubox
19 96 0.999242675 ubox
20 39 0.016554409 ubox
20 89 0.006870729 ubox
20 94 0.017073504 ubox
20 95 0.999083397 ubox
21 38 0.031358371 ubox
22 37 0.032502661 ubox
22 38 0.006265819 ubox
22 92 0.015268368 ubox
23 36 0.032483724 ubox
23 37 0.006846550 ubox
23 82 0.004528050 ubox
23 91 0.010916915 ubox
23 92 0.999145769 ubox
24 35 0.025565098 ubox
24 36 0.006805414 ubox
24 81 0.004534883 ubox
24 91 0.999306796 ubox
24 97 0.009679989 ubox
25 80 0.004533491 ubox
25 90 0.998280925 ubox
25 96 0.009691813 ubox
26 89 0.996254942 ubox
26 90 0.046024095 ubox
26 95 0.009691824 ubox
27 39 0.005628320 ubox
27 78 0.004477565 ubox
27 89 0.064936451 ubox
27 94 0.009669283 ubox
28 38 0.010126801 ubox
28 77 0.004385861 ubox
30 39 0.011345039 ubox
30 48 0.023425075 ubox
30 75 0.004055793 ubox
30 87 0.946599730 ubox
30 89 0.023895786 ubox
31 38 0.021970976 ubox
31 47 0.024009448 ubox
31 74 0.004028041 ubox
31 86 0.946191962 ubox
31 88 0.053374880 ubox
32 46 0.024007296 ubox
33 39 0.016485643 ubox
33 45 0.023949429 ubox
34 38 0.020550017 ubox
35 43 0.007378704 ubox
35 71 0.004033892 ubox
36 42 0.007306502 ubox
36 43 0.022615597 ubox
36 70 0.004193638 ubox
36 89 0.006932420 ubox
36 90 0.008765982 ubox
37 42 0.022660246 ubox
37 84 0.015075063 ubox
37 89 0.011251293 ubox
38 83 0.015068787 ubox
38 87 0.041975951 ubox
39 67 0.004729655 ubox
39 81 0.013069113 ubox
39 82 0.010733480 ubox
39 85 0.997958782 ubox
39 86 0.033433241 ubox
39 88 0.006263713 ubox
40 66 0.004736063 ubox
40 80 0.016810687 ubox
40 84 0.999492815 ubox
40 87 0.005602414 ubox
41 65 0.004729205 ubox
41 78 0.005475998 ubox
41 79 0.015824448 ubox
41 83 0.999286039 ubox
42 50 0.004519888 ubox
42 64 0.004427622 ubox
42 77 0.016002124 ubox
42 82 0.999520276 ubox
43 49 0.004529528 ubox
43 63 0.004320425 ubox
43 76 0.017103710 ubox
43 81 0.999523258 ubox
44 48 0.004496931 ubox
44 75 0.017216763 ubox
44 78 0.007902108 ubox
44 80 0.998518950 ubox
45 59 0.005806554 ubox
45 74 0.017770763 ubox
45 76 0.052773119 ubox
45 77 0.026090611 ubox
46 73 0.017620109 ubox
46 75 0.016535360 ubox
46 79 0.778028790 ubox
47 54 0.003235564 ubox
47 58 0.007612651 ubox
47 75 0.165863326 ubox
47 78 0.798029680 ubox
48 57 0.007837772 ubox
48 74 0.167695361 ubox
48 76 0.942469048 ubox
48 77 0.264867291 ubox
49 56 0.007822734 ubox
49 75 0.954585598 ubox
50 75 0.180614640 ubox
51 72 0.987830923 ubox
51 74 0.135055900 ubox
52 71 0.995455668 ubox
52 73 0.086125488 ubox
53 70 0.999750553 ubox
54 69 0.998445137 ubox
56 67 0.996266847 ubox
57 66 0.996958668 ubox
58 67 0.075244974 ubox
59 66 0.074918566 ubox
60 66 0.007405576 ubox
61 65 0.010312930 ubox
64 78 0.007177827 ubox
65 77 0.007299468 ubox
66 76 0.007304904 ubox
67 75 0.007293354 ubox
74 87 0.009824345 ubox
75 85 0.023216607 ubox
75 86 0.007084031 ubox
76 84 0.024314525 ubox
77 83 0.024287570 ubox
78 82 0.023901057 ubox
84 97 0.004173095 ubox
85 96 0.004176466 ubox
86 95 0.004175518 ubox
3 13 0.9500000 lbox
4 12 0.9500000 lbox
5 11 0.9500000 lbox
6 10 0.9500000 lbox
14 100 0.9500000 lbox
15 99 0.9500000 lbox
17 98 0.9500000 lbox
18 97 0.9500000 lbox
19 96 0.9500000 lbox
20 95 0.9500000 lbox
23 92 0.9500000 lbox
24 91 0.9500000 lbox
25 90 0.9500000 lbox
26 89 0.9500000 lbox
30 87 0.9500000 lbox
31 86 0.9500000 lbox
39 85 0.9500000 lbox
40 84 0.9500000 lbox
41 83 0.9500000 lbox
42 82 0.9500000 lbox
43 81 0.9500000 lbox
44 80 0.9500000 lbox
46 79 0.9500000 lbox
47 78 0.9500000 lbox
48 76 0.9500000 lbox
49 75 0.9500000 lbox
51 72 0.9500000 lbox
52 71 0.9500000 lbox
53 70 0.9500000 lbox
54 69 0.9500000 lbox
56 67 0.9500000 lbox
57 66 0.9500000 lbox
showpage
end
%%EOF
