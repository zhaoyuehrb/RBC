%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:42:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACAGCCCACAGAGUUCCACCUGCUCACAGGUUGGCUGGCUCAGCCAAGGUGGUGCCCUGCUCUGAGCAUUCAGGCCAAGCCCAUCCUGCACCAUGGCCAGGUACAGAUGCUGUCGCAGCCAGAGCCGGAGCAGAUAUUACCGCCAGAGACAAAGAAGUCGCAGACGAAGGAGGCGGAGCUGCCAGACACGGA\
) } def
/len { sequence length } bind def

/coor [
[134.55776978 134.78662109]
[129.65174866 148.96163940]
[124.74573517 163.13665771]
[119.83971405 177.31166077]
[114.93370056 191.48667908]
[125.05213165 203.04145813]
[128.02183533 218.11050415]
[123.04394531 232.64035034]
[111.45751190 242.72251892]
[96.37921906 245.64495850]
[81.86505890 240.62156677]
[71.81925201 229.00358582]
[68.94408417 213.91619873]
[74.01295471 199.41786194]
[85.66236877 189.40852356]
[100.75868225 186.58065796]
[105.66470337 172.40563965]
[110.57072449 158.23063660]
[115.47674561 144.05561829]
[120.38275909 129.88061523]
[114.34323883 125.43379974]
[102.26418304 116.54018402]
[96.22465515 112.09336853]
[84.14559937 120.98699188]
[72.06654358 129.88061523]
[59.98749161 138.77423096]
[47.90843964 147.66784668]
[41.83279419 162.90000916]
[25.56689835 164.98631287]
[15.84371376 151.78057861]
[22.66561890 136.86770630]
[39.01482010 135.58879089]
[51.09387589 126.69517517]
[63.17292786 117.80155182]
[75.25198364 108.90793610]
[87.33103943 100.01432037]
[96.88138580 88.44752502]
[103.32831573 74.90362549]
[109.77523804 61.35972595]
[116.22216034 47.81582642]
[117.08702850 38.71145248]
[122.88031769 34.10942459]
[129.54132080 20.66951752]
[136.20231628 7.22961140]
[142.86331177 -6.21029520]
[149.52432251 -19.65020180]
[148.71994019 -35.45094681]
[161.30427551 -43.41862488]
[167.96527100 -56.85853195]
[174.62626648 -70.29843903]
[156.78680420 -89.68421173]
[159.88490295 -113.68279266]
[178.46737671 -125.55702972]
[179.41873169 -140.52682495]
[180.37010193 -155.49662781]
[181.32145691 -170.46643066]
[182.27281189 -185.43623352]
[183.22416687 -200.40603638]
[184.17553711 -215.37583923]
[171.12324524 -229.09579468]
[172.21435547 -247.68139648]
[186.29150391 -259.37188721]
[186.76741028 -274.36434937]
[187.24333191 -289.35678101]
[187.71925354 -304.34924316]
[188.19517517 -319.34167480]
[188.67109680 -334.33413696]
[189.14700317 -349.32656860]
[189.62292480 -364.31903076]
[186.76502991 -373.00637817]
[190.22720337 -379.54504395]
[190.94093323 -394.52804565]
[188.24876404 -400.58544922]
[188.92601013 -406.24151611]
[191.92248535 -409.97286987]
[193.11123657 -424.92568970]
[186.49192810 -439.29565430]
[195.21353149 -451.36968994]
[196.40228271 -466.32254028]
[197.59103394 -481.27536011]
[184.59207153 -492.08972168]
[180.63578796 -508.35873413]
[187.08787537 -523.62860107]
[201.22505188 -531.96270752]
[202.17640686 -546.93249512]
[193.61683655 -563.23077393]
[203.88769531 -577.45458984]
[204.60142517 -592.43762207]
[205.31515503 -607.42059326]
[206.02888489 -622.40362549]
[203.30917358 -631.13519287]
[206.87466431 -637.61810303]
[207.82603455 -652.58795166]
[200.97956848 -666.85107422]
[209.50849915 -679.06195068]
[210.45985413 -694.03173828]
[211.41122437 -709.00158691]
[199.96966553 -719.66107178]
[198.10804749 -735.18743896]
[206.70535278 -748.24963379]
[221.70219421 -752.68005371]
[236.01753235 -746.38677979]
[242.89210510 -732.34130859]
[239.07994080 -717.17553711]
[226.38102722 -708.05023193]
[225.42965698 -693.08038330]
[224.47830200 -678.11059570]
[231.39280701 -664.91821289]
[222.79582214 -651.63659668]
[221.84446716 -636.66674805]
[221.01190186 -621.68988037]
[220.29817200 -606.70690918]
[219.58444214 -591.72387695]
[218.87071228 -576.74084473]
[226.77577209 -567.57580566]
[226.29714966 -555.08074951]
[217.14620972 -545.98114014]
[216.19485474 -531.01135254]
[227.22645569 -523.48120117]
[233.14169312 -511.38513184]
[232.29818726 -497.83819580]
[224.80958557 -486.38812256]
[212.54385376 -480.08660889]
[211.35510254 -465.13378906]
[210.16635132 -450.18096924]
[216.87068176 -436.88052368]
[208.06405640 -423.73693848]
[206.87530518 -408.78411865]
[205.92395020 -393.81433105]
[205.21022034 -378.83129883]
[204.61537170 -363.84310913]
[204.13946533 -348.85067749]
[203.66354370 -333.85821533]
[203.18762207 -318.86575317]
[202.71170044 -303.87332153]
[202.23577881 -288.88085938]
[201.75985718 -273.88842773]
[201.28395081 -258.89596558]
[210.71823120 -252.45820618]
[215.92280579 -242.15689087]
[215.49914551 -230.50321960]
[209.43693542 -220.40130615]
[199.14533997 -214.42446899]
[198.19396973 -199.45468140]
[197.24261475 -184.48487854]
[196.29125977 -169.51507568]
[195.33990479 -154.54527283]
[194.38853455 -139.57546997]
[193.43717957 -124.60567474]
[203.45646667 -120.31642151]
[211.30554199 -111.65467834]
[215.08477783 -99.75988770]
[213.49964905 -86.58127594]
[227.75071716 -81.90077209]
[242.00178528 -77.22026825]
[255.99134827 -84.57332611]
[271.05786133 -79.80088043]
[278.26257324 -65.73435211]
[273.33111572 -50.71915054]
[259.18920898 -43.66353607]
[244.22697449 -48.75347900]
[237.32127380 -62.96920395]
[223.07020569 -67.64970398]
[208.81913757 -72.33020782]
[219.08168030 -61.39035416]
[233.00770569 -55.81667328]
[242.86738586 -44.51239777]
[246.49707031 -29.95817566]
[243.10026550 -15.34784889]
[233.42236328 -3.88756275]
[219.58711243 1.90779090]
[204.63059998 0.76645684]
[191.83493042 -7.06110620]
[184.00802612 -19.85718536]
[182.86747742 -34.81376266]
[188.66403198 -48.64936066]
[188.06617737 -63.63743973]
[181.40516663 -50.19753265]
[174.74417114 -36.75762558]
[176.02499390 -21.91819382]
[162.96421814 -12.98920250]
[156.30322266 0.45070401]
[149.64222717 13.89061069]
[142.98123169 27.33051682]
[136.32022095 40.77042389]
[129.76605225 54.26275253]
[123.31913757 67.80664825]
[116.87220764 81.35054779]
[110.42528534 94.89444733]
[117.53184509 81.68471527]
[129.82929993 73.09562683]
[144.67803955 70.97079468]
[158.89080811 75.76631165]
[169.41688538 86.45284271]
[173.99685669 100.73653412]
[171.64764404 115.55142975]
[162.87350464 127.71755219]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 20]
[2 19]
[3 18]
[4 17]
[5 16]
[23 36]
[24 35]
[25 34]
[26 33]
[27 32]
[37 189]
[38 188]
[39 187]
[40 186]
[42 185]
[43 184]
[44 183]
[45 182]
[46 181]
[48 179]
[49 178]
[50 177]
[53 149]
[54 148]
[55 147]
[56 146]
[57 145]
[58 144]
[59 143]
[62 138]
[63 137]
[64 136]
[65 135]
[66 134]
[67 133]
[68 132]
[69 131]
[71 130]
[72 129]
[75 128]
[76 127]
[78 125]
[79 124]
[80 123]
[84 118]
[85 117]
[87 114]
[88 113]
[89 112]
[90 111]
[92 110]
[93 109]
[95 107]
[96 106]
[97 105]
[153 164]
[154 163]
[155 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
