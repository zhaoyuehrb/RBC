%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:11:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCGGCAGGAGGCGGGUGGGUCAAGGUAACUCUGGGCUACAGAGUCCUUGCUGGGGGUUCGGGGAGCGCUUGGACCCCGGCUUCUGGGACGCGUCAGAAUAUUAUCCAGCAAUGCAAAUGAACAAACUAUAACUACACACAGCUGCAUGGAUAAAUGUCAGAAACAUGACGUUGAGUGUGAGAAGCCAGAUGCAAACGAGGACUCACUGUGCAAUUCUGUGCAUGUACAGUGGCCAGGAGAAGGGA\
) } def
/len { sequence length } bind def

/coor [
[96.39414215 162.89788818]
[109.43425751 155.03181458]
[107.53917694 140.15200806]
[105.64409637 125.27219391]
[91.33200836 120.78174591]
[81.27623749 131.91195679]
[71.22046661 143.04216003]
[61.16469193 154.17236328]
[51.10891724 165.30256653]
[41.05314636 176.43276978]
[37.63388824 184.87631226]
[30.79880333 187.63923645]
[20.60284805 198.64117432]
[10.40689182 209.64309692]
[11.38536358 227.12071228]
[-0.35694069 239.64344788]
[-17.18507385 239.78413391]
[-27.24084663 250.91433716]
[-37.29661942 262.04455566]
[-47.35239029 273.17474365]
[-50.86263657 288.60162354]
[-65.13598633 292.85845947]
[-75.19175720 303.98867798]
[-85.24753571 315.11886597]
[-95.23260498 326.31256104]
[-105.14658356 337.56924438]
[-107.84762573 353.74441528]
[-123.29901886 359.23864746]
[-135.60569763 348.39993286]
[-132.10760498 332.37820435]
[-116.40327454 327.65527344]
[-106.48929596 316.39859009]
[-104.43205261 309.31903076]
[-96.37773895 305.06311035]
[-86.32196808 293.93289185]
[-76.26618958 282.80270386]
[-73.47520447 268.17193604]
[-58.48259354 263.11898804]
[-48.42682266 251.98876953]
[-38.37105179 240.85856628]
[-28.31527710 229.72836304]
[-30.76258278 217.09202576]
[-25.41192055 205.17228699]
[-14.00905991 198.40446472]
[-0.59503901 199.44714355]
[9.60091686 188.44520569]
[19.79687309 177.44328308]
[29.92294121 166.37699890]
[39.97871399 155.24679565]
[50.03448486 144.11659241]
[60.09025955 132.98637390]
[70.14603424 121.85617828]
[80.20180511 110.72597504]
[77.59701538 103.69283295]
[69.78264618 82.59340668]
[54.90283966 80.69833374]
[40.02303314 78.80325317]
[25.14322472 76.90817261]
[10.26341629 75.01309204]
[-4.61639118 73.11801147]
[-19.49619865 71.22293854]
[-34.37600708 69.32785797]
[-49.25581360 67.43277740]
[-64.13562012 65.53769684]
[-77.65115356 74.18119049]
[-92.78858948 68.86728668]
[-97.93578339 53.67235947]
[-89.14425659 40.25265121]
[-73.15810394 38.90261841]
[-62.24054337 50.65789032]
[-47.36073685 52.55297089]
[-32.48092651 54.44804764]
[-17.60112000 56.34312820]
[-2.72131252 58.23820877]
[12.15849495 60.13328552]
[27.03830338 62.02836609]
[41.91810989 63.92344284]
[56.79791641 65.81851959]
[71.67772675 67.71360016]
[84.09673309 59.30121994]
[87.85652161 44.78006363]
[91.61631012 30.25890541]
[95.37609863 15.73774910]
[99.13588715 1.21659279]
[102.89567566 -13.30456352]
[106.65546417 -27.82571983]
[100.62007904 -36.83786011]
[100.52895355 -47.46460724]
[106.17143250 -56.21025467]
[115.49011230 -60.32974243]
[119.61655426 -74.75099182]
[123.74299622 -89.17224121]
[127.86943817 -103.59349060]
[127.22077179 -112.67997742]
[132.14056396 -118.17066956]
[136.44935608 -132.53849792]
[140.75814819 -146.90631104]
[136.28477478 -149.51989746]
[132.39529419 -153.40383911]
[129.44696045 -158.41430664]
[127.75805664 -164.30857849]
[127.58091736 -170.75634766]
[129.07856750 -177.35829163]
[130.97364807 -192.23809814]
[132.86872864 -207.11790466]
[134.76380920 -221.99771118]
[136.65888977 -236.87751770]
[138.55397034 -251.75732422]
[140.44905090 -266.63714600]
[142.24984741 -281.52865601]
[143.95628357 -296.43127441]
[145.66271973 -311.33389282]
[143.39801025 -317.50375366]
[144.41867065 -323.06341553]
[147.60580444 -326.59066772]
[149.68922424 -341.44528198]
[135.60769653 -346.79861450]
[123.07074738 -355.15164185]
[112.70722198 -366.08529663]
[105.03694916 -379.05120850]
[100.44467163 -393.39898682]
[99.16072845 -408.40893555]
[101.24952698 -423.32821655]
[106.60629272 -437.40844727]
[114.96233368 -449.94335938]
[125.89851379 -460.30426025]
[138.86627197 -467.97137451]
[153.21516418 -472.56018066]
[168.22544861 -473.84048462]
[183.14421082 -471.74807739]
[197.22314453 -466.38790894]
[209.75604248 -458.02880859]
[220.11425781 -447.09014893]
[227.77825928 -434.12051392]
[232.36358643 -419.77050781]
[233.64024353 -404.75991821]
[231.54421997 -389.84167480]
[226.18063354 -375.76403809]
[217.81851196 -363.23315430]
[206.87731934 -352.87759399]
[193.90583801 -345.21673584]
[179.55473328 -340.63488770]
[164.54383850 -339.36184692]
[162.46041870 -324.50726318]
[160.56533813 -309.62744141]
[158.85890198 -294.72482300]
[157.15246582 -279.82220459]
[159.50825500 -272.83633423]
[155.32885742 -264.74206543]
[153.43377686 -249.86224365]
[151.53869629 -234.98243713]
[149.64361572 -220.10263062]
[147.74853516 -205.22282410]
[145.85345459 -190.34301758]
[143.95837402 -175.46321106]
[156.53498840 -167.28831482]
[169.36413574 -175.06088257]
[182.19329834 -182.83345032]
[195.02244568 -190.60603333]
[207.85159302 -198.37860107]
[220.68074036 -206.15116882]
[224.20411682 -221.55770874]
[237.63381958 -229.88949585]
[253.00224304 -226.20343018]
[261.19158936 -212.68638611]
[257.34323120 -197.35778809]
[243.74037170 -189.31182861]
[228.45332336 -193.32202148]
[215.62416077 -185.54945374]
[202.79501343 -177.77687073]
[189.96586609 -170.00430298]
[177.13671875 -162.23173523]
[164.30755615 -154.45915222]
[155.12597656 -142.59751892]
[150.81718445 -128.22970581]
[146.50839233 -113.86187744]
[142.29069519 -99.46704865]
[138.16424561 -85.04579926]
[134.03781128 -70.62454987]
[129.91136169 -56.20330048]
[135.93914795 -37.81603622]
[121.17662048 -24.06593323]
[117.41683197 -9.54477596]
[113.65704346 4.97638083]
[109.89725494 19.49753761]
[106.13746643 34.01869583]
[102.37767792 48.53985214]
[98.61789703 63.06100845]
[108.87923431 52.12003326]
[113.20574188 37.75753403]
[121.41707611 25.20468712]
[132.84294128 15.48617077]
[146.55065918 9.39530659]
[161.42124939 7.42928982]
[176.24085999 9.74860573]
[189.79975891 16.16392899]
[200.99113464 26.15158081]
[208.90142822 38.89627075]
[212.88494873 53.35765076]
[212.61651611 68.35524750]
[208.11802673 82.66481018]
[199.75671387 95.11825562]
[188.21508789 104.69901276]
[174.43528748 110.62500763]
[159.54716492 112.41262054]
[145.45007324 107.28695679]
[155.36405945 118.54364777]
[165.27803040 129.80033875]
[175.19200134 141.05703735]
[185.10598755 152.31372070]
[195.01995850 163.57041931]
[204.93392944 174.82710266]
[214.84791565 186.08380127]
[224.76188660 197.34048462]
[239.80326843 194.23370361]
[254.37783813 199.07907104]
[264.56509399 210.57321167]
[267.62472534 225.62426758]
[262.73370361 240.18357849]
[251.20767212 250.33474731]
[236.14710999 253.34718323]
[221.60319519 248.41053772]
[211.48820496 236.85276794]
[208.52299500 221.78282166]
[213.50518799 207.25445557]
[203.59121704 195.99777222]
[193.67724609 184.74107361]
[183.76325989 173.48439026]
[173.84928894 162.22769165]
[163.93531799 150.97100830]
[154.02134705 139.71430969]
[144.10736084 128.45762634]
[134.19338989 117.20093536]
[120.52390289 123.37711334]
[122.41898346 138.25692749]
[124.31406403 153.13673401]
[138.90956116 157.48316956]
[150.47111511 167.39527893]
[156.99565125 181.15574646]
[157.35272217 196.38047791]
[151.48048401 210.43170166]
[140.39633179 220.87493896]
[126.02065277 225.90086365]
[110.84413147 224.63868713]
[97.49619293 217.30708313]
[88.28943634 205.17631531]
[84.81900024 190.34809875]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 236]
[3 235]
[4 234]
[5 53]
[6 52]
[7 51]
[8 50]
[9 49]
[10 48]
[12 47]
[13 46]
[14 45]
[17 41]
[18 40]
[19 39]
[20 38]
[22 36]
[23 35]
[24 34]
[25 32]
[26 31]
[55 79]
[56 78]
[57 77]
[58 76]
[59 75]
[60 74]
[61 73]
[62 72]
[63 71]
[64 70]
[80 188]
[81 187]
[82 186]
[83 185]
[84 184]
[85 183]
[86 182]
[90 180]
[91 179]
[92 178]
[93 177]
[95 176]
[96 175]
[97 174]
[103 155]
[104 154]
[105 153]
[106 152]
[107 151]
[108 150]
[109 149]
[110 147]
[111 146]
[112 145]
[115 144]
[116 143]
[156 173]
[157 172]
[158 171]
[159 170]
[160 169]
[161 168]
[206 233]
[207 232]
[208 231]
[209 230]
[210 229]
[211 228]
[212 227]
[213 226]
[214 225]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
