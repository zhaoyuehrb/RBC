%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:43:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGCUUGUCACUUACCUGAGCGCAGCCAAUCAGCACCUAGAGGUUGGGCUACUUUCGGCCAAAGGAGAACGGGGACUUGUGGGGGACGCUCCCUGCGCACCAAUGAAUGUGCAUGGAGAUGGAGAGGCGGGCCUGCAAGUGCGAACAAGCCAAUCACGGAAUCCCGGCGGCCGGCGGCCCGGGAGGCAGUCGCGCGCUCGCA\
) } def
/len { sequence length } bind def

/coor [
[90.09040070 113.29891205]
[86.37759399 106.44503021]
[71.61452484 109.10054016]
[59.40209198 119.15872955]
[45.50608826 113.79679871]
[30.74301529 116.45230865]
[18.53058624 126.51049805]
[4.63457918 121.14856720]
[-10.12849140 123.80407715]
[-24.89156342 126.45958710]
[-39.65463257 129.11509705]
[-47.05177307 145.66345215]
[-62.76158524 154.38664246]
[-80.40749359 151.95968628]
[-92.95556641 139.54035950]
[-107.62938690 142.65145874]
[-122.30320740 145.76257324]
[-136.97703552 148.87367249]
[-151.03680420 154.10079956]
[-164.17916870 161.33117676]
[-177.32151794 168.56155396]
[-185.68307495 181.99267578]
[-200.56375122 181.34843445]
[-213.70610046 188.57881165]
[-226.84846497 195.80918884]
[-239.99082947 203.03956604]
[-253.13319397 210.26992798]
[-256.88314819 215.72763062]
[-262.05166626 218.10983276]
[-266.79605103 217.51351929]
[-280.15588379 224.33372498]
[-282.43829346 239.68200684]
[-293.33035278 250.73385620]
[-308.64376831 253.23959351]
[-322.49026489 246.23571777]
[-329.54556274 232.41535950]
[-327.09677124 217.09272766]
[-316.08547974 206.15968323]
[-300.74575806 203.82022095]
[-286.97607422 210.97389221]
[-273.61624146 204.15370178]
[-260.36355591 197.12757874]
[-247.22120667 189.89720154]
[-234.07884216 182.66682434]
[-220.93647766 175.43644714]
[-207.79411316 168.20608521]
[-200.37258911 155.29212952]
[-184.55189514 155.41918945]
[-171.40953064 148.18881226]
[-158.26716614 140.95845032]
[-159.02033997 133.49635315]
[-160.52670288 118.57218933]
[-161.27987671 111.11009979]
[-175.60200500 106.65181732]
[-189.92414856 102.19353485]
[-204.24629211 97.73525238]
[-216.60502625 107.11828613]
[-232.11933899 107.41137695]
[-244.82363892 98.50183105]
[-249.83290100 83.81554413]
[-245.22093201 68.99969482]
[-232.76113892 59.75128174]
[-217.24456787 59.62650299]
[-204.63764954 68.67334747]
[-199.78800964 83.41310883]
[-185.46586609 87.87139130]
[-171.14372253 92.32967377]
[-156.82159424 96.78795624]
[-140.18457031 114.90333557]
[-140.08813477 134.19985962]
[-125.41431427 131.08874512]
[-110.74049377 127.97764587]
[-96.06667328 124.86653900]
[-92.81886292 113.16175842]
[-84.85371399 103.89537811]
[-73.63764191 98.86757660]
[-61.27600098 99.08943176]
[-50.11798096 104.58020020]
[-42.31014252 114.35202789]
[-27.54707146 111.69651794]
[-12.78400135 109.04100800]
[1.97906983 106.38549805]
[13.13554668 96.51725006]
[28.08750534 101.68923950]
[42.85057831 99.03372955]
[54.00705338 89.16548157]
[68.95901489 94.33747101]
[83.72208405 91.68196106]
[93.69562531 80.47801208]
[94.62358856 65.50674438]
[95.55154419 50.53547287]
[96.47949982 35.56420517]
[89.61074829 21.31180763]
[98.12058258 9.08757114]
[99.04854584 -5.88369751]
[99.97650146 -20.85496712]
[100.90445709 -35.82623672]
[101.83241272 -50.79750443]
[102.76036835 -65.76877594]
[90.70978546 -75.54441071]
[86.73917389 -90.54486847]
[92.37530518 -105.00217438]
[105.45098114 -113.35719299]
[120.93833923 -112.39724731]
[132.88217163 -102.49145508]
[136.68981934 -87.44880676]
[130.89718628 -73.05349731]
[117.73163605 -64.84082031]
[116.80368042 -49.86954880]
[115.87572479 -34.89827728]
[114.94776917 -19.92700958]
[114.01981354 -4.95574093]
[113.09185791 10.01552773]
[120.02697754 23.19708061]
[111.45076752 36.49216080]
[110.52281189 51.46343231]
[109.59485626 66.43470001]
[108.66690063 81.40596771]
[111.38654327 66.65457916]
[121.92488861 55.98015594]
[136.64016724 53.07149124]
[150.44720459 58.93373489]
[158.57464600 71.54106140]
[158.21388245 86.53672028]
[149.48959351 98.73863220]
[135.41662598 103.93014526]
[120.85793304 100.31703949]
[134.87683105 105.65280914]
[148.89573669 110.98857117]
[162.91464233 116.32434082]
[176.93353271 121.66010284]
[190.95243835 126.99587250]
[185.85682678 112.88790131]
[192.09950256 99.24865723]
[206.10752869 93.88440704]
[219.86357117 99.86532593]
[225.49450684 113.76829529]
[219.77752686 127.63610840]
[205.98547363 133.53164673]
[219.44923401 140.14428711]
[232.91300964 146.75691223]
[246.37677002 153.36955261]
[259.84054565 159.98219299]
[273.30432129 166.59481812]
[283.60015869 160.63548279]
[295.37390137 160.39166260]
[305.69528198 165.80822754]
[312.05142212 175.43571472]
[312.95834351 186.81614685]
[326.21102905 193.84226990]
[339.46368408 200.86840820]
[332.96502686 187.34925842]
[333.99407959 172.38459778]
[342.28210449 159.88224792]
[355.66479492 153.10704041]
[370.64746094 153.82824707]
[383.31753540 161.85751343]
[390.36642456 175.09809875]
[389.95336914 190.09240723]
[382.18624878 202.92486572]
[369.09335327 210.24444580]
[354.09240723 210.13935852]
[366.10369873 219.12431335]
[378.11495972 228.10925293]
[390.12625122 237.09419250]
[402.13751221 246.07913208]
[414.14880371 255.06407166]
[420.66784668 256.22625732]
[424.97140503 259.95025635]
[426.38699341 264.51760864]
[438.11447144 273.86996460]
[449.84194946 283.22232056]
[465.99530029 288.37063599]
[465.51989746 305.31790161]
[449.10330200 309.55255127]
[440.48959351 294.94979858]
[428.76211548 285.59744263]
[417.03466797 276.24508667]
[405.16384888 267.07534790]
[393.15258789 258.09042358]
[381.14129639 249.10546875]
[369.13003540 240.12052917]
[357.11874390 231.13558960]
[345.10745239 222.15065002]
[332.43756104 214.12107849]
[319.18487549 207.09495544]
[305.93222046 200.06883240]
[288.79339600 206.48815918]
[272.11627197 198.20518494]
[266.69168091 180.05859375]
[253.22790527 173.44595337]
[239.76414490 166.83331299]
[226.30036926 160.22068787]
[212.83660889 153.60804749]
[199.37283325 146.99542236]
[185.61666870 141.01477051]
[171.59777832 135.67900085]
[157.57887268 130.34324646]
[143.55996704 125.00747681]
[129.54107666 119.67170715]
[115.52217102 114.33594513]
[106.47849274 118.51390076]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 88]
[3 87]
[5 85]
[6 84]
[8 82]
[9 81]
[10 80]
[11 79]
[15 73]
[16 72]
[17 71]
[18 70]
[19 50]
[20 49]
[21 48]
[23 46]
[24 45]
[25 44]
[26 43]
[27 42]
[30 41]
[31 40]
[53 68]
[54 67]
[55 66]
[56 65]
[89 118]
[90 117]
[91 116]
[92 115]
[94 113]
[95 112]
[96 111]
[97 110]
[98 109]
[99 108]
[127 201]
[128 200]
[129 199]
[130 198]
[131 197]
[132 196]
[139 195]
[140 194]
[141 193]
[142 192]
[143 191]
[144 190]
[149 187]
[150 186]
[151 185]
[162 184]
[163 183]
[164 182]
[165 181]
[166 180]
[167 179]
[170 178]
[171 177]
[172 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
