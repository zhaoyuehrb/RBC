%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:29:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGAAAACCCUAGGACUUGAACCCAGGGAAAGCGUUAGGGGGUAAGGGGACUACACUUCCCGUGAAGCUCCGCGGCGGCUUCCCGUGAGGCCCCGCGGAGGCUUCCUGAGAGGUCCUGCGCGCUUUCCGCGCCAGCUUCAGUGUCAGCUCGCGAGCCCUGGCGUCGCGUAGGAGGGAGGAUGGAGAGCGGCGACGAAGCGGCCAUCGAGAGGCACCGCGUCCACUUGCGCUCCGCCACAUUGCGCGACGCCGUA\
CCCGCCACACUGCAUCUGCUGCCCU\
) } def
/len { sequence length } bind def

/coor [
[21.17636681 283.63430786]
[14.68970394 297.15924072]
[8.20304012 310.68414307]
[1.71637738 324.20904541]
[11.98412132 338.51330566]
[13.55986595 355.96084595]
[6.09760094 371.71176147]
[-8.25415611 381.44299316]
[-25.47004509 382.53475952]
[-31.65269279 396.20129395]
[-37.83534241 409.86785889]
[-44.01799011 423.53442383]
[-44.69657898 432.60205078]
[-50.34691238 437.31860352]
[-56.68196487 450.91519165]
[-49.03744507 464.41857910]
[-50.82342911 479.83251953]
[-61.35316467 491.23007202]
[-76.57775879 494.22863770]
[-90.64303589 487.67520142]
[-98.14062500 474.08972168]
[-96.18753052 458.69604492]
[-85.53477478 447.41339111]
[-70.27854919 444.58013916]
[-63.94349670 430.98355103]
[-57.68455124 417.35177612]
[-51.50189972 403.68521118]
[-45.31925201 390.01864624]
[-39.13660431 376.35211182]
[-47.53808975 366.97564697]
[-51.79809189 355.07894897]
[-51.25419998 342.40759277]
[-45.95162582 330.83493042]
[-36.64171982 322.08514404]
[-24.67568398 317.47640991]
[-11.80853271 317.72238159]
[-5.32186985 304.19747925]
[1.16479313 290.67257690]
[7.65145636 277.14764404]
[14.06241417 263.58670044]
[20.39746475 249.99011230]
[26.73251724 236.39352417]
[33.06756973 222.79695129]
[39.40262222 209.20036316]
[39.37917328 201.84022522]
[45.88525391 195.48779297]
[52.37191391 181.96287537]
[50.89933014 167.14125061]
[63.84355545 158.04412842]
[70.33021545 144.51921082]
[76.81687927 130.99430847]
[70.74023438 125.33712769]
[66.00986481 118.51416779]
[62.84340668 110.83935547]
[61.38656616 102.66580963]
[61.70636368 94.36960602]
[47.57001114 89.35327911]
[33.43365860 84.33695984]
[19.29730225 79.32063293]
[5.16094923 74.30431366]
[-10.43217850 76.98104858]
[-19.83913994 65.43296051]
[-33.97549438 60.41664124]
[-49.56862259 63.09337997]
[-58.97558212 51.54529190]
[-73.11193848 46.52896881]
[-87.24829102 41.51264572]
[-101.38464355 36.49632263]
[-115.52099609 31.47999763]
[-129.68516541 26.54277611]
[-143.87672424 21.68480682]
[-158.06828308 16.82683945]
[-172.25982666 11.96887112]
[-186.45138550 7.11090326]
[-200.64292908 2.25293541]
[-214.83448792 -2.60503268]
[-223.92559814 -2.42015672]
[-229.15701294 -7.59745359]
[-243.29336548 -12.61377716]
[-257.42971802 -17.63010025]
[-271.56607056 -22.64642334]
[-285.70242310 -27.66274643]
[-299.83877563 -32.67906952]
[-315.85824585 -29.17061234]
[-326.70489502 -41.47027206]
[-321.22067261 -56.92521667]
[-305.04724121 -59.63672256]
[-294.82244873 -46.81542206]
[-280.68609619 -41.79909897]
[-266.54974365 -36.78277588]
[-252.41340637 -31.76645470]
[-238.27703857 -26.75012970]
[-224.14068604 -21.73380661]
[-209.97651672 -16.79658508]
[-195.78495789 -11.93861675]
[-181.59341431 -7.08064842]
[-167.40185547 -2.22268057]
[-153.21031189 2.63528728]
[-139.01875305 7.49325514]
[-124.82720184 12.35122299]
[-117.51103210 11.54765415]
[-110.50467682 17.34364319]
[-96.36832428 22.35996819]
[-82.23196411 27.37629128]
[-68.09561157 32.39261246]
[-53.95925903 37.40893555]
[-39.37725830 34.37339783]
[-28.95917130 46.28028488]
[-14.82281685 51.29660797]
[-0.24081549 48.26107025]
[10.17727280 60.16795731]
[24.31362724 65.18428040]
[38.44998169 70.20060730]
[52.58633423 75.21692657]
[66.72268677 80.23325348]
[73.01632690 72.25138855]
[81.17095184 66.18327332]
[76.55165100 51.91225433]
[71.93235016 37.64123154]
[66.33442688 30.47563553]
[67.34214020 23.18477631]
[62.88267517 8.86300468]
[58.42321014 -5.45876789]
[53.96374130 -19.78054047]
[40.48557663 -28.48218346]
[39.02872849 -44.45895386]
[50.71076965 -55.45483780]
[66.57023621 -53.03473663]
[74.44110107 -39.05514526]
[68.28551483 -24.24000740]
[72.74497986 -9.91823483]
[77.20444489 4.40353775]
[81.66391754 18.72530937]
[86.20336914 33.02193069]
[90.82266998 47.29294968]
[95.44197845 61.56397247]
[108.25364685 62.18490601]
[120.15888214 66.95876312]
[129.85023499 75.36126709]
[136.26338196 86.46963501]
[151.06671143 84.04861450]
[165.87005615 81.62758636]
[180.67338562 79.20656586]
[195.47671509 76.78554535]
[210.28004456 74.36451721]
[213.15232849 67.53759766]
[218.14903259 62.16268158]
[224.62779236 58.86239243]
[231.77871704 57.99701691]
[238.72564697 59.62568283]
[244.63342285 63.50477600]
[248.80833435 69.12308502]
[263.72381592 67.53292084]
[278.63928223 65.94275665]
[283.62722778 52.89795685]
[293.69485474 43.31422424]
[306.84371948 39.01542282]
[320.49728394 40.78408432]
[332.00576782 48.21961975]
[339.16043091 59.82725906]
[354.09274292 58.40394592]
[369.02505493 56.98063660]
[383.95736694 55.55732346]
[398.88970947 54.13401413]
[413.82202148 52.71070099]
[428.75433350 51.28739166]
[443.68667603 49.86407852]
[458.61898804 48.44076920]
[473.55130005 47.01745605]
[488.48361206 45.59414673]
[503.41595459 44.17083359]
[518.34826660 42.74752426]
[526.29248047 29.54919052]
[540.32098389 23.62859535]
[554.97253418 27.06315422]
[564.67608643 38.33167267]
[579.60839844 36.90835953]
[582.98608398 34.32683945]
[586.63977051 33.05732727]
[590.13049316 33.02806854]
[593.08599854 34.03424835]
[595.23779297 35.77056503]
[610.21881104 35.01623154]
[625.19982910 34.26189804]
[640.18084717 33.50756073]
[655.16186523 32.75322723]
[668.55548096 24.33172035]
[681.65576172 31.41918945]
[696.63677979 30.66485405]
[711.61779785 29.91051865]
[726.59881592 29.15618515]
[743.06134033 17.47694397]
[759.84338379 27.12820816]
[774.80377197 26.03911209]
[789.76422119 24.95001602]
[804.72460938 23.86092186]
[810.14721680 10.99072456]
[820.53051758 1.74998605]
[833.81616211 -2.10546494]
[847.40270996 0.12005861]
[858.65539551 7.93733788]
[865.41680908 19.77836990]
[880.38842773 18.85659599]
[895.36010742 17.93482399]
[904.51049805 5.25396919]
[919.68377686 1.47177923]
[933.71563721 8.37408829]
[939.98059082 22.70183754]
[935.52050781 37.68989944]
[922.44140625 46.26137543]
[906.91870117 44.36906815]
[896.28186035 32.90647507]
[881.31018066 33.82824707]
[866.33856201 34.75001907]
[859.47601318 49.39987946]
[846.07800293 58.63345337]
[829.75732422 59.84562302]
[814.97338867 52.60995865]
[805.81372070 38.82133102]
[790.85333252 39.91042709]
[775.89288330 40.99952316]
[760.93249512 42.08861923]
[755.00762939 50.35298920]
[745.31561279 54.09075928]
[734.94757080 51.85246658]
[727.35314941 44.13720322]
[712.37213135 44.89154053]
[697.39111328 45.64587402]
[682.41009521 46.40020752]
[670.08801270 54.76776123]
[655.91619873 47.73424911]
[640.93518066 48.48858261]
[625.95416260 49.24291611]
[610.97314453 49.99724960]
[595.99212646 50.75158691]
[581.03167725 51.84068298]
[566.09936523 53.26399231]
[558.69940186 66.16277313]
[544.96057129 72.30343628]
[530.06610107 69.13970184]
[519.77154541 57.67984390]
[504.83926392 59.10315323]
[489.90692139 60.52646637]
[474.97460938 61.94977570]
[460.04229736 63.37308884]
[445.10998535 64.79640198]
[430.17764282 66.21971130]
[415.24533081 67.64302063]
[400.31301880 69.06632996]
[385.38067627 70.48964691]
[370.44836426 71.91295624]
[355.51605225 73.33626556]
[340.58374023 74.75957489]
[334.21630859 89.63132477]
[321.13549805 99.30899048]
[304.86462402 101.06777191]
[289.84634399 94.33193970]
[280.22946167 80.85823059]
[265.31396484 82.44839478]
[250.39849854 84.03855896]
[233.69783020 99.04257202]
[212.70106506 89.16785431]
[197.89773560 91.58887482]
[183.09440613 94.00989532]
[168.29107666 96.43092346]
[153.48774719 98.85194397]
[138.68440247 101.27296448]
[131.28424072 122.79035187]
[113.07190704 136.43115234]
[90.34178925 137.48097229]
[83.85512543 151.00587463]
[77.36846924 164.53079224]
[78.37708282 180.31980896]
[65.89682770 188.44953918]
[59.41016388 201.97445679]
[52.99920654 215.53541565]
[46.66415405 229.13198853]
[40.32910156 242.72857666]
[33.99404907 256.32516479]
[27.65899849 269.92175293]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 39]
[2 38]
[3 37]
[4 36]
[9 29]
[10 28]
[11 27]
[12 26]
[14 25]
[15 24]
[40 280]
[41 279]
[42 278]
[43 277]
[44 276]
[46 275]
[47 274]
[49 272]
[50 271]
[51 270]
[56 115]
[57 114]
[58 113]
[59 112]
[60 111]
[62 109]
[63 108]
[65 106]
[66 105]
[67 104]
[68 103]
[69 102]
[70 100]
[71 99]
[72 98]
[73 97]
[74 96]
[75 95]
[76 94]
[78 93]
[79 92]
[80 91]
[81 90]
[82 89]
[83 88]
[117 136]
[118 135]
[119 134]
[121 133]
[122 132]
[123 131]
[124 130]
[140 267]
[141 266]
[142 265]
[143 264]
[144 263]
[145 262]
[152 260]
[153 259]
[154 258]
[160 253]
[161 252]
[162 251]
[163 250]
[164 249]
[165 248]
[166 247]
[167 246]
[168 245]
[169 244]
[170 243]
[171 242]
[172 241]
[176 237]
[177 236]
[182 235]
[183 234]
[184 233]
[185 232]
[186 231]
[188 229]
[189 228]
[190 227]
[191 226]
[193 222]
[194 221]
[195 220]
[196 219]
[202 214]
[203 213]
[204 212]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
