%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:59:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGUUGAGCUGAAUGAAUACCUCCGAAGCCGCUUUGUUCUCCAGAUGUGAAUAGCUCCACUAUACCAGCCUCGUCUUCCUUCCGGGGGACAACGUGGGUCAGGGCACAGAGAGAUAUUUAAUGUCACCCUCUUGGGGCUUUCAUGGGACUCCCUCUGCCACAUUUUUUGGAGGUUGGGAAAGUUGCUAGAGGCUUCAGAACUCCAGCCUAAUGGAUCCCAAACUCGGGAGAAUGGCUGCGUCCCUGCUGGCUGU\
GCUGCUGCUGCUGCUGGAGCGCGGCAUGUUCUCCUCACCCUCCCCGCCCCCGGCGC\
) } def
/len { sequence length } bind def

/coor [
[468.61041260 119.65930176]
[453.62258911 119.05530548]
[438.63473511 118.45131683]
[423.64691162 117.84732819]
[411.75643921 129.77424622]
[394.58105469 129.37774658]
[382.79800415 116.41404724]
[367.80487061 115.96100616]
[352.81170654 115.50795746]
[337.81646729 115.13040161]
[322.81948853 114.82834625]
[313.91177368 122.96351624]
[301.44854736 122.86634064]
[292.08563232 114.04528046]
[277.09246826 113.59223938]
[262.09933472 113.13919067]
[247.10617065 112.68614197]
[232.11300659 112.23310089]
[221.47743225 122.59747314]
[206.26579285 122.35160828]
[195.46679688 111.12577057]
[180.47363281 110.67272186]
[173.72879028 113.59592438]
[165.33200073 110.13887787]
[150.34417725 109.53488922]
[135.35633850 108.93090057]
[120.36849976 108.32691193]
[112.34284973 123.48178864]
[93.38053131 130.33760071]
[71.83534241 121.73258209]
[57.42757034 125.90584564]
[43.01979828 130.07910156]
[28.61202621 134.25236511]
[17.50936317 145.52363586]
[3.13193488 141.63276672]
[-11.27583694 145.80603027]
[-25.68360901 149.97929382]
[-40.09138107 154.15255737]
[-54.49915314 158.32582092]
[-68.90692139 162.49906921]
[-83.31469727 166.67233276]
[-97.72246552 170.84559631]
[-112.13024139 175.01885986]
[-123.23290253 186.29013062]
[-137.61033630 182.39926147]
[-152.01809692 186.57252502]
[-157.69978333 203.83650208]
[-172.50074768 214.10980225]
[-190.34588623 213.40725708]
[-204.04878235 202.20208740]
[-218.36959839 206.66462708]
[-223.58995056 222.77958679]
[-237.26252747 232.49502563]
[-253.86486816 232.13069153]
[-266.83526611 222.02943420]
[-281.11041260 226.63594055]
[-295.38555908 231.24246216]
[-298.53060913 246.27589417]
[-308.78298950 257.71200562]
[-323.38482666 262.47451782]
[-338.40832520 259.28237915]
[-349.81225586 248.99421692]
[-354.52899170 234.37751770]
[-351.28976440 219.36408997]
[-340.96588135 207.99247742]
[-326.33447266 203.32157898]
[-311.33126831 206.60786438]
[-299.99209595 216.96730042]
[-285.71691895 212.36079407]
[-271.44177246 207.75427246]
[-268.49822998 194.76194763]
[-259.45648193 184.83203125]
[-246.59059143 180.62023926]
[-233.21528625 183.32385254]
[-222.83213806 192.34381104]
[-208.51132202 187.88127136]
[-206.38650513 175.98901367]
[-199.38233948 166.05790710]
[-188.76812744 159.99343872]
[-176.51255798 158.99064636]
[-164.91874695 163.29917908]
[-156.19136047 172.16474915]
[-141.78358459 167.99148560]
[-131.71147156 157.01872253]
[-116.30349731 160.61108398]
[-101.89572906 156.43783569]
[-87.48796082 152.26457214]
[-73.08018494 148.09130859]
[-58.67241287 143.91804504]
[-44.26464081 139.74478149]
[-29.85687065 135.57151794]
[-15.44909859 131.39825439]
[-1.04132700 127.22499847]
[9.03079605 116.25222778]
[24.43876457 119.84459686]
[38.84653473 115.67133331]
[53.25430679 111.49806976]
[67.66207886 107.32481384]
[69.49358368 100.05187988]
[58.72778320 89.60690308]
[73.15660095 85.50600433]
[74.98810577 78.23307037]
[64.27524567 67.73380280]
[53.56238174 57.23453903]
[42.84951782 46.73527527]
[24.89561653 42.53626251]
[20.89932251 25.42545700]
[10.08128548 15.03459263]
[-0.73675102 4.64372683]
[-18.73202515 0.62570733]
[-22.90040398 -16.44399261]
[-33.82251740 -26.72540283]
[-44.74463272 -37.00681305]
[-60.82146454 -40.24217606]
[-65.80084991 -55.86708450]
[-54.56042480 -67.80797577]
[-38.66337204 -63.78108215]
[-34.46322250 -47.92892838]
[-23.54110718 -37.64751816]
[-12.61899281 -27.36610603]
[-0.55562407 -27.42698860]
[8.62437534 -18.99674034]
[9.65411472 -6.17430973]
[20.47215080 4.21655560]
[31.29018784 14.60742092]
[43.35355759 14.66800690]
[52.44820786 23.19026375]
[53.34878540 36.02241135]
[64.06164551 46.52167892]
[74.77451324 57.02094269]
[85.48737335 67.52021027]
[111.77955627 73.73042297]
[120.97248840 93.33907318]
[135.96032715 93.94306183]
[150.94816589 94.54705048]
[165.93598938 95.15103912]
[180.92668152 95.67956543]
[195.91984558 96.13261414]
[207.37693787 85.57928467]
[222.57566833 86.25231934]
[232.56605530 97.23994446]
[247.55920410 97.69298553]
[262.55236816 98.14603424]
[277.54553223 98.59908295]
[292.53866577 99.05212402]
[308.58209229 89.96457672]
[323.12155151 99.83139038]
[338.11849976 100.13344574]
[346.70870972 97.18968964]
[353.26473999 100.51480103]
[368.25790405 100.96784973]
[383.25106812 101.42089081]
[391.90551758 91.14150238]
[404.70877075 87.75639343]
[416.94827271 92.28057098]
[424.25091553 102.85949707]
[439.23873901 103.46348572]
[454.22656250 104.06747437]
[469.21441650 104.67146301]
[472.74005127 95.13422394]
[478.49249268 86.76864624]
[486.11264038 80.08345795]
[495.12808228 75.48293304]
[504.98248291 73.24240875]
[515.06976318 73.49185181]
[524.77142334 76.20832062]
[533.49456787 81.21787262]
[540.70800781 88.20664215]
[545.97467041 96.74052429]
[548.97802734 106.29213715]
[563.97802734 106.29213715]
[578.97802734 106.29213715]
[593.97802734 106.29213715]
[608.97802734 106.29213715]
[623.02984619 101.04373932]
[634.35711670 91.21045685]
[645.68432617 81.37717438]
[657.01159668 71.54389191]
[668.33880615 61.71060562]
[679.66607666 51.87732315]
[680.59442139 34.38345337]
[693.64782715 23.21383095]
[710.40136719 24.93240166]
[721.62902832 14.98556137]
[732.85668945 5.03872156]
[743.98364258 -5.02066612]
[755.00872803 -15.19158077]
[766.03381348 -25.36249542]
[770.93066406 -40.40681458]
[785.53161621 -43.34972000]
[796.55670166 -53.52063751]
[807.58178711 -63.69155121]
[804.81091309 -78.86804199]
[810.70605469 -93.12464905]
[823.38610840 -101.91213989]
[838.80487061 -102.42646790]
[852.04235840 -94.50350952]
[858.87445068 -80.67144775]
[857.12109375 -65.34403992]
[847.34173584 -53.41221619]
[832.65698242 -48.68337250]
[817.75268555 -52.66646576]
[806.72760010 -42.49555206]
[795.70251465 -32.32463837]
[791.59429932 -18.00781059]
[776.20471191 -14.33741093]
[765.17962646 -4.16649628]
[754.15454102 6.00441837]
[753.06872559 10.60628986]
[749.11230469 14.59351921]
[742.80352783 16.26638222]
[731.57586670 26.21322250]
[720.34820557 36.16006088]
[721.38214111 48.97305679]
[714.76263428 60.21833801]
[702.70428467 65.69356537]
[689.49938965 63.20457077]
[678.17211914 73.03785706]
[666.84484863 82.87113953]
[655.51763916 92.70442200]
[644.19036865 102.53770447]
[632.86315918 112.37098694]
[633.69213867 119.82503510]
[648.60028076 118.16725159]
[650.25781250 133.07539368]
[635.35015869 134.73310852]
[636.17919922 142.18716431]
[649.39013672 149.29138184]
[662.60113525 156.39561462]
[675.81213379 163.49984741]
[689.02307129 170.60408020]
[702.23406982 177.70829773]
[715.44506836 184.81253052]
[728.65600586 191.91676331]
[747.06933594 190.95489502]
[755.66833496 206.27830505]
[768.95019531 213.24914551]
[782.23205566 220.22000122]
[795.51385498 227.19084167]
[808.79571533 234.16169739]
[822.07757568 241.13253784]
[835.35937500 248.10337830]
[851.17456055 247.66560364]
[858.84826660 260.43130493]
[872.13012695 267.40216064]
[887.94525146 266.96438599]
[895.61901855 279.73007202]
[908.90081787 286.70092773]
[917.90118408 287.90542603]
[922.28082275 293.80941772]
[935.49176025 300.91363525]
[948.70275879 308.01785278]
[958.85675049 304.30767822]
[969.17028809 306.71936035]
[976.32403564 314.23065186]
[978.15118408 324.21884155]
[991.21643066 331.58767700]
[1007.60034180 330.88156128]
[1016.17431641 344.86080933]
[1008.11816406 359.14471436]
[991.71936035 359.03927612]
[983.84759521 344.65289307]
[970.78234863 337.28408813]
[951.47863770 338.83898926]
[941.59851074 321.22885132]
[928.38757324 314.12460327]
[915.17657471 307.02038574]
[901.92999268 299.98275757]
[888.64813232 293.01190186]
[873.78302002 293.94830322]
[865.15924072 280.68399048]
[851.87744141 273.71313477]
[837.01226807 274.64953613]
[828.38854980 261.38522339]
[815.10668945 254.41438293]
[801.82489014 247.44352722]
[788.54302979 240.47268677]
[775.26116943 233.50183105]
[761.97930908 226.53099060]
[748.69750977 219.56013489]
[737.09356689 222.85818481]
[725.98693848 217.20269775]
[721.55181885 205.12774658]
[708.34082031 198.02351379]
[695.12982178 190.91928101]
[681.91888428 183.81504822]
[668.70788574 176.71081543]
[655.49688721 169.60659790]
[642.28594971 162.50236511]
[629.07495117 155.39813232]
[617.80511475 148.73492432]
[610.63610840 139.65318298]
[607.83068848 129.94448853]
[608.97802734 121.29213715]
[593.97802734 121.29213715]
[578.97802734 121.29213715]
[563.97802734 121.29213715]
[548.97802734 121.29213715]
[539.78826904 140.27665710]
[522.28320312 152.04261780]
[524.39074707 166.89382935]
[526.49829102 181.74504089]
[528.60583496 196.59623718]
[536.81762695 211.42872620]
[524.83807373 223.42564392]
[509.99371338 215.23532104]
[513.75463867 198.70378113]
[511.64709473 183.85256958]
[509.53955078 169.00137329]
[507.43203735 154.15016174]
[489.57489014 149.32435608]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 159]
[2 158]
[3 157]
[4 156]
[7 152]
[8 151]
[9 150]
[10 148]
[11 147]
[14 145]
[15 144]
[16 143]
[17 142]
[18 141]
[21 138]
[22 137]
[24 136]
[25 135]
[26 134]
[27 133]
[30 98]
[31 97]
[32 96]
[33 95]
[35 93]
[36 92]
[37 91]
[38 90]
[39 89]
[40 88]
[41 87]
[42 86]
[43 85]
[45 83]
[46 82]
[50 76]
[51 75]
[55 70]
[56 69]
[57 68]
[102 131]
[103 130]
[104 129]
[105 128]
[107 125]
[108 124]
[109 123]
[111 120]
[112 119]
[113 118]
[170 298]
[171 297]
[172 296]
[173 295]
[174 294]
[175 222]
[176 221]
[177 220]
[178 219]
[179 218]
[180 217]
[183 213]
[184 212]
[185 211]
[186 208]
[187 207]
[188 206]
[190 204]
[191 203]
[192 202]
[227 290]
[228 289]
[229 288]
[230 287]
[231 286]
[232 285]
[233 284]
[234 283]
[236 280]
[237 279]
[238 278]
[239 277]
[240 276]
[241 275]
[242 274]
[244 272]
[245 271]
[247 269]
[248 268]
[250 267]
[251 266]
[252 265]
[256 263]
[257 262]
[300 310]
[301 309]
[302 308]
[303 307]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
