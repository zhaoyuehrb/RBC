%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:20:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCAGAAGAGAUGGAGCUGGACAGAGCUGUGGGGGUCCUGGGCGCUGCCACCCUGCUGCUCUCUUUCCUGGGCAUGGCCUGGGCUCUCCAGGCGGCAGACACCUGUCCAG\
) } def
/len { sequence length } bind def

/coor [
[61.56797028 103.97616577]
[63.90892410 89.02761841]
[50.71150589 81.89823914]
[37.51408386 74.76885223]
[24.31666374 67.63947296]
[8.49740791 67.88784790]
[0.97707599 55.03118134]
[-12.22034359 47.90179825]
[-25.41776466 40.77241516]
[-38.61518478 33.64303207]
[-51.81260300 26.51364708]
[-67.63185883 26.76202583]
[-75.15219116 13.90536022]
[-88.34960938 6.77597666]
[-101.64659882 -0.16593839]
[-115.04048157 -6.91899443]
[-128.43437195 -13.67205048]
[-142.18885803 -19.65653038]
[-156.25988770 -24.85326576]
[-170.33093262 -30.04999924]
[-179.61552429 -30.10373497]
[-184.72312927 -35.59802628]
[-198.64146423 -41.19087601]
[-212.55979919 -46.78372192]
[-228.24972534 -44.74985123]
[-237.17431641 -56.67465210]
[-251.09265137 -62.26749802]
[-265.01098633 -67.86034393]
[-279.40341187 -61.90246582]
[-293.43890381 -67.77268219]
[-299.03012085 -81.53035736]
[-312.94845581 -87.12320709]
[-329.09854126 -84.27583313]
[-339.43075562 -97.01071930]
[-333.31622314 -112.22731018]
[-317.04504395 -114.27207947]
[-307.35562134 -101.04154205]
[-293.43728638 -95.44869232]
[-279.88119507 -101.51234436]
[-265.68634033 -96.03867340]
[-259.41815186 -81.77867889]
[-245.49981689 -76.18583679]
[-231.58146667 -70.59298706]
[-216.88706970 -73.02689362]
[-206.96694946 -60.70205688]
[-193.04861450 -55.10921097]
[-179.13027954 -49.51636124]
[-165.13418579 -44.12103271]
[-151.06315613 -38.92429733]
[-136.99212646 -33.72756195]
[-134.29675293 -34.91167450]
[-130.93745422 -35.01780319]
[-127.35447693 -33.77446365]
[-124.08240509 -31.08691788]
[-121.68132019 -27.06593895]
[-108.28742981 -20.31288338]
[-94.89353943 -13.55982590]
[-87.39466858 -13.35563755]
[-81.22023010 -6.42144346]
[-68.02281189 0.70793986]
[-53.14751816 -0.05038017]
[-44.68321991 13.31622791]
[-31.48579979 20.44561195]
[-18.28837967 27.57499504]
[-5.09096050 34.70437622]
[8.10645962 41.83376312]
[22.98174858 41.07543945]
[31.44604683 54.44205093]
[44.64346695 61.57143402]
[57.84088898 68.70081329]
[71.03830719 75.83020020]
[82.74470520 65.42998505]
[98.00048065 60.49836349]
[114.32405853 62.15267563]
[128.93199158 70.41226959]
[139.21350098 84.14547729]
[143.19523621 101.21694183]
[158.12170410 102.70040131]
[173.04817200 104.18386078]
[187.97463989 105.66732025]
[202.90109253 107.15077972]
[217.82756042 108.63423920]
[231.09925842 99.62081909]
[246.37765503 104.51468658]
[251.94248962 119.56168365]
[243.52488708 133.21903992]
[227.58212280 135.01000977]
[216.34410095 123.56070709]
[201.41763306 122.07724762]
[186.49118042 120.59378815]
[171.56471252 119.11032867]
[156.63824463 117.62686920]
[141.71177673 116.14340973]
[134.02870178 129.02635193]
[142.42832947 141.45399475]
[150.82794189 153.88163757]
[159.22756958 166.30929565]
[167.62719727 178.73693848]
[182.60212708 185.42147827]
[184.03125000 201.75823975]
[170.44441223 210.94134521]
[155.81855774 203.52401733]
[155.19955444 187.13655090]
[146.79992676 174.70890808]
[138.40029907 162.28126526]
[130.00068665 149.85362244]
[121.60105896 137.42597961]
[105.28300476 141.96611023]
[88.84226990 139.84971619]
[74.83117676 131.68798828]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 71]
[3 70]
[4 69]
[5 68]
[7 66]
[8 65]
[9 64]
[10 63]
[11 62]
[13 60]
[14 59]
[15 57]
[16 56]
[17 55]
[18 50]
[19 49]
[20 48]
[22 47]
[23 46]
[24 45]
[26 43]
[27 42]
[28 41]
[31 38]
[32 37]
[77 93]
[78 92]
[79 91]
[80 90]
[81 89]
[82 88]
[94 107]
[95 106]
[96 105]
[97 104]
[98 103]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
