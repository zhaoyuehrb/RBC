%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:08:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGUGAUGGUGCCUAGCAACGUCAGGGCCAGGGCCGCGAGGUAGUUGGCAGAGGCCUCGGGGUCCUCCUGGAAGGGGCCUCAUGACAGAUUCGGACGAGGAUGCCCUGAAGGUUGACCAGGGCCCCUCACGGGACAUCCCAAAGCCAUGGGUGAUUCCAGCCCCCAAAGGGAUCCUGCAGC\
) } def
/len { sequence length } bind def

/coor [
[56.01063538 152.09904480]
[55.75314331 137.10125732]
[55.49564743 122.10346222]
[49.37108231 108.41077423]
[38.36280060 98.22167206]
[27.35452080 88.03257751]
[16.34623909 77.84347534]
[0.96275359 74.14767456]
[-3.12186313 59.82408905]
[-14.13014412 49.63499069]
[-22.57629204 46.09006119]
[-25.23803139 39.17524338]
[-36.06977844 28.79867363]
[-46.90152740 18.42210197]
[-57.73327637 8.04553223]
[-76.62431335 9.18953037]
[-90.13906097 -3.59986258]
[-90.04106140 -21.88776970]
[-101.22263336 -31.88639641]
[-112.40419769 -41.88502502]
[-123.58576965 -51.88365173]
[-141.68376160 -55.21841812]
[-146.53361511 -72.07292175]
[-157.88517761 -81.87812805]
[-169.23674011 -91.68333435]
[-180.58830261 -101.48854065]
[-191.93986511 -111.29374695]
[-203.29142761 -121.09895325]
[-214.64297485 -130.90415955]
[-243.81295776 -119.99092865]
[-274.50881958 -147.50294495]
[-289.41552734 -149.17327881]
[-304.32223511 -150.84361267]
[-319.22894287 -152.51393127]
[-334.13565063 -154.18426514]
[-349.04235840 -155.85458374]
[-363.61831665 -149.70213318]
[-375.40484619 -158.80856323]
[-390.31155396 -160.47888184]
[-405.21826172 -162.14921570]
[-420.12496948 -163.81954956]
[-435.03167725 -165.48986816]
[-449.93838501 -167.16020203]
[-458.46319580 -154.44854736]
[-471.92446899 -147.16481018]
[-487.22888184 -146.98274231]
[-500.85961914 -153.94418335]
[-509.68441772 -166.44944763]
[-511.67541504 -181.62490845]
[-506.37509155 -195.98335266]
[-495.00140381 -206.22532654]
[-480.16796875 -209.99729919]
[-465.28338623 -206.43249512]
[-453.76803589 -196.35006714]
[-448.26806641 -182.06690979]
[-433.36135864 -180.39657593]
[-418.45462036 -178.72625732]
[-403.54791260 -177.05592346]
[-388.64120483 -175.38560486]
[-373.73449707 -173.71527100]
[-360.22479248 -179.98719788]
[-347.37203979 -170.76130676]
[-332.46533203 -169.09097290]
[-317.55862427 -167.42063904]
[-302.65191650 -165.75032043]
[-287.74520874 -164.07998657]
[-272.83850098 -162.40966797]
[-265.45025635 -175.46394348]
[-274.55612183 -187.38380432]
[-283.66198730 -199.30368042]
[-298.99923706 -205.10896301]
[-301.37289429 -221.33541870]
[-288.34118652 -231.29064941]
[-273.30999756 -224.73356628]
[-271.74212646 -208.40954590]
[-262.63626099 -196.48966980]
[-253.53041077 -184.56980896]
[-239.44912720 -189.74064636]
[-225.36909485 -194.91102600]
[-226.14128113 -209.89114380]
[-226.91346741 -224.87124634]
[-227.68563843 -239.85136414]
[-239.41336060 -256.22717285]
[-229.94132996 -273.06790161]
[-231.22727966 -288.01266479]
[-232.51324463 -302.95742798]
[-243.81294250 -314.34585571]
[-241.81132507 -330.26354980]
[-228.04385376 -338.49984741]
[-213.07174683 -332.73651123]
[-208.38034058 -317.39474487]
[-217.56846619 -304.24340820]
[-216.28250122 -289.29861450]
[-214.99655151 -274.35385132]
[-206.59568787 -268.48352051]
[-202.74447632 -258.74911499]
[-204.94532776 -248.28974915]
[-212.70553589 -240.62353516]
[-211.93334961 -225.64343262]
[-211.16116333 -210.66331482]
[-210.38899231 -195.68321228]
[-196.53063965 -176.40330505]
[-195.79504395 -156.25497437]
[-204.83776855 -142.25572205]
[-193.48622131 -132.45051575]
[-182.13465881 -122.64530945]
[-170.78309631 -112.84010315]
[-159.43153381 -103.03488922]
[-148.07997131 -93.22968292]
[-136.72840881 -83.42447662]
[-124.62946320 -83.98960114]
[-115.08951569 -75.89197540]
[-113.58714294 -63.06521988]
[-102.40557098 -53.06658936]
[-91.22400665 -43.06796265]
[-80.04243469 -33.06933594]
[-69.03082275 -36.16347504]
[-57.77923584 -33.51939011]
[-49.12026215 -25.68354034]
[-45.29119873 -14.52403927]
[-47.35670853 -2.78621697]
[-36.52495956 7.59035349]
[-25.69320869 17.96692467]
[-14.86146069 28.34349442]
[-3.94104362 38.62670898]
[7.06723690 48.81580734]
[21.66333771 51.78281403]
[26.53533936 66.83519745]
[37.54362106 77.02429199]
[48.55190277 87.21339417]
[59.56018066 97.40249634]
[134.90232849 68.01293945]
[149.30458069 72.20522308]
[163.70683289 76.39750671]
[178.10908508 80.58979034]
[192.54678345 84.65830231]
[207.01887512 88.60273743]
[216.14701843 87.84059906]
[221.70442200 92.74108887]
[236.10667419 96.93337250]
[250.50892639 101.12565613]
[264.91116333 105.31793976]
[278.64212036 97.49256134]
[293.86245728 101.74895477]
[301.54223633 115.56187439]
[297.12515259 130.73635864]
[283.23181152 138.26965332]
[268.10488892 133.69239807]
[260.71887207 119.72019196]
[246.31663513 115.52790070]
[231.91439819 111.33561707]
[217.51214600 107.14333344]
[203.07444763 103.07482910]
[188.60235596 99.13039398]
[181.30392456 100.40814209]
[173.91679382 94.99204254]
[159.51454163 90.79975891]
[145.11230469 86.60746765]
[130.71005249 82.41518402]
[126.10613251 88.33582306]
[131.75708008 102.23066711]
[116.89828491 100.17709351]
[112.29436493 106.09772491]
[119.90559387 119.02324677]
[127.51682281 131.94877625]
[142.04750061 139.55084229]
[142.45880127 155.94483948]
[128.32763672 164.26600647]
[114.19091034 155.95426941]
[114.59129333 139.55999756]
[106.98006439 126.63447571]
[99.36884308 113.70895386]
[92.14998627 115.74320221]
[96.21849823 130.18090820]
[100.28678131 144.61866760]
[85.84895325 148.68673706]
[81.78079224 134.24942017]
[77.71228790 119.81171417]
[70.49343872 121.84597015]
[70.75093079 136.84375000]
[71.00842285 151.84155273]
[73.52952576 171.05857849]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 181]
[2 180]
[3 179]
[4 131]
[5 130]
[6 129]
[7 128]
[9 126]
[10 125]
[12 124]
[13 123]
[14 122]
[15 121]
[18 116]
[19 115]
[20 114]
[21 113]
[23 110]
[24 109]
[25 108]
[26 107]
[27 106]
[28 105]
[29 104]
[31 67]
[32 66]
[33 65]
[34 64]
[35 63]
[36 62]
[38 60]
[39 59]
[40 58]
[41 57]
[42 56]
[43 55]
[68 77]
[69 76]
[70 75]
[79 101]
[80 100]
[81 99]
[82 98]
[84 94]
[85 93]
[86 92]
[132 159]
[133 158]
[134 157]
[135 156]
[136 154]
[137 153]
[139 152]
[140 151]
[141 150]
[142 149]
[163 172]
[164 171]
[165 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
