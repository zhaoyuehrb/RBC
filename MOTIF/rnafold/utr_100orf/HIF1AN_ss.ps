%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:13:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUGUUUUUUUUUUUUUGGGGUCCGGAAUAGGCGGAGCUUCCGGUUCCGGUGGGGGCCGUCCCUGGCGGCGGAGAUGGCGGCGACAGCGGCGGAGGCUGUGGCCUCUGGCUCUGGAGAGCCCCGGGAGGAGGCUGGAGCCCUCGGCCCCGCCUGGGAUGAAUCCCAGUUGCGCA\
) } def
/len { sequence length } bind def

/coor [
[91.80842590 494.30822754]
[77.46054840 498.68301392]
[62.47159576 499.25857544]
[47.83048630 495.99700928]
[34.50319672 489.11343384]
[23.36901474 479.06207275]
[15.16254044 466.50604248]
[10.42521095 452.27377319]
[9.46958160 437.30422974]
[12.35870075 422.58511353]
[18.90195274 409.08749390]
[28.66763687 397.70190430]
[41.01144028 389.17956543]
[55.11896133 384.08270264]
[70.05943298 382.74765015]
[84.84712219 385.26245117]
[98.50638580 391.46118164]
[110.13603973 400.93490601]
[118.97010040 413.06094360]
[117.10073090 398.17788696]
[115.23136139 383.29483032]
[113.36198425 368.41177368]
[109.39573669 362.14663696]
[111.59452057 353.24667358]
[109.99109650 338.33261108]
[108.38767242 323.41854858]
[106.78424072 308.50451660]
[99.00862885 304.10284424]
[94.07116699 296.49105835]
[93.19569397 287.32192993]
[96.70699310 278.65768433]
[103.92873383 272.50607300]
[103.12586975 257.52758789]
[102.32300568 242.54908752]
[89.34790039 231.87223816]
[88.06856537 214.77946472]
[99.76089478 201.78839111]
[98.69080353 186.82661438]
[97.62071228 171.86482239]
[96.55062866 156.90304565]
[95.48053741 141.94126892]
[94.41045380 126.97948456]
[93.34036255 112.01770020]
[83.82446289 100.42254639]
[69.35893250 96.45411682]
[54.89340210 92.48569489]
[40.42787170 88.51727295]
[25.96233940 84.54884338]
[11.49680805 80.58042145]
[-4.22295618 85.25171661]
[-15.94059849 73.77875519]
[-11.60201263 57.96392822]
[4.32963610 54.07617950]
[15.46523285 66.11489105]
[29.93076515 70.08331299]
[44.39629745 74.05173492]
[58.86182785 78.02016449]
[73.32736206 81.98858643]
[87.79289246 85.95701599]
[91.55627441 89.06324005]
[94.90776825 92.54638672]
[98.35735321 77.94843292]
[101.80694580 63.35047531]
[105.25653076 48.75252151]
[99.54721069 31.26153183]
[112.03519440 18.95162010]
[115.22367859 4.29441643]
[118.41215515 -10.36278629]
[107.56613922 -25.86514091]
[111.39674377 -44.06772614]
[127.02635956 -53.55318832]
[129.68965149 -68.31485748]
[132.35295105 -83.07652283]
[135.01625061 -97.83819580]
[137.67955017 -112.59986115]
[128.93482971 -125.49045563]
[131.84606934 -140.42294312]
[144.18917847 -148.68026733]
[146.85247803 -163.44194031]
[141.68836975 -178.39662170]
[151.56250000 -189.54789734]
[154.22579956 -204.30955505]
[156.88909912 -219.07122803]
[151.72500610 -234.02590942]
[161.59913635 -245.17718506]
[164.26243591 -259.93884277]
[166.92573547 -274.70053101]
[169.58903503 -289.46218872]
[172.25231934 -304.22384644]
[162.10987854 -316.12615967]
[162.04267883 -331.76361084]
[172.08242798 -343.75265503]
[187.48867798 -346.43246460]
[200.98707581 -338.53768921]
[206.20407104 -323.79602051]
[200.67637634 -309.16799927]
[187.01399231 -301.56054688]
[184.35069275 -286.79888916]
[181.68739319 -272.03723145]
[179.02409363 -257.27554321]
[176.36080933 -242.51388550]
[181.71539307 -228.61505127]
[171.65077209 -216.40792847]
[168.98747253 -201.64625549]
[166.32417297 -186.88459778]
[171.67877197 -172.98576355]
[161.61413574 -160.77864075]
[158.95083618 -146.01696777]
[167.63006592 -133.96679688]
[165.13938904 -118.95843506]
[152.44122314 -109.93656158]
[149.77792358 -95.17489624]
[147.11462402 -80.41322327]
[144.45132446 -65.65155792]
[141.78802490 -50.88988876]
[150.19564819 -43.12199783]
[153.83305359 -32.14197540]
[151.68179321 -20.65476990]
[144.16484070 -11.54982090]
[133.06936646 -7.17430735]
[129.88087463 7.48289537]
[126.69239807 22.14009857]
[132.97195435 32.50274658]
[130.41238403 44.75632858]
[119.85448456 52.20210648]
[116.40489960 66.80006409]
[112.95531464 81.39801788]
[109.50572205 95.99597931]
[108.30214691 110.94761658]
[109.37223816 125.90939331]
[110.44232178 140.87117004]
[111.51241302 155.83296204]
[112.58249664 170.79473877]
[113.65258789 185.75651550]
[114.72267151 200.71830750]
[125.86344147 208.32223511]
[130.51296997 220.77621460]
[127.18000031 233.44389343]
[117.30149841 241.74621582]
[118.10436249 256.72473145]
[118.90722656 271.70321655]
[131.70127869 288.86795044]
[121.69829559 306.90109253]
[123.30171967 321.81512451]
[124.90515137 336.72918701]
[126.50857544 351.64324951]
[128.24504089 366.54238892]
[130.11442566 381.42544556]
[131.98379517 396.30850220]
[133.85316467 411.19155884]
[138.59016418 425.42395020]
[146.01272583 438.45874023]
[153.66677856 451.35894775]
[161.54986572 464.12048340]
[169.43295288 476.88201904]
[177.31604004 489.64358521]
[185.19912720 502.40512085]
[193.08221436 515.16662598]
[207.77053833 522.45947266]
[208.52873230 538.84112549]
[194.57684326 547.45947266]
[180.26736450 539.44879150]
[180.32067871 523.04974365]
[172.43759155 510.28820801]
[164.55450439 497.52667236]
[156.67141724 484.76510620]
[148.78833008 472.00357056]
[140.90524292 459.24203491]
[136.51568604 457.28683472]
[133.32302856 452.53616333]
[132.97795105 445.88131714]
[125.55538177 432.84652710]
[125.75053406 447.84527588]
[122.11859131 462.39892578]
[114.89916992 475.54730225]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 150]
[20 149]
[21 148]
[22 147]
[24 146]
[25 145]
[26 144]
[27 143]
[32 141]
[33 140]
[34 139]
[37 135]
[38 134]
[39 133]
[40 132]
[41 131]
[42 130]
[43 129]
[44 59]
[45 58]
[46 57]
[47 56]
[48 55]
[49 54]
[61 128]
[62 127]
[63 126]
[64 125]
[66 122]
[67 121]
[68 120]
[71 115]
[72 114]
[73 113]
[74 112]
[75 111]
[78 108]
[79 107]
[81 105]
[82 104]
[83 103]
[85 101]
[86 100]
[87 99]
[88 98]
[89 97]
[151 172]
[152 171]
[153 168]
[154 167]
[155 166]
[156 165]
[157 164]
[158 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
