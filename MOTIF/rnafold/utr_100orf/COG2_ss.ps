%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:25:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUUGGCCGCGGCGCGGGCGCUGCCAUGUUGGCGGAAGCGGACCCCCCUGUGCCGUGGAAACUGGCGGUGGCCGCGGCCGCCGAGUCGGUCUGCGCAGCCUCCUGCGUUUUCUCGCUUGGAUCUUGGCACUGAGAGGCGGUGGCCGGCGGGAUGGAGAAAAGUAGGAUGAACCUGCCCAAGGGGCCGGACACGCUCUGCUUCGACAAGGACGAGUUCAUGAAGGAAGAUUUCGAUGUCGAUCAUUUUGUGU\
) } def
/len { sequence length } bind def

/coor [
[227.45706177 185.17828369]
[219.85710144 172.24613953]
[223.51548767 157.69909668]
[236.32899475 149.90061951]
[221.99540710 145.47929382]
[207.66180420 141.05796814]
[193.32821655 136.63664246]
[178.99462891 132.21531677]
[164.66102600 127.79398346]
[150.32743835 123.37265778]
[135.88499451 127.01477814]
[124.97853851 115.55355072]
[110.64494324 111.13222504]
[95.69416046 112.34638977]
[82.26181793 119.02262115]
[68.82946777 125.69884491]
[55.39711761 132.37507629]
[46.48293304 145.44595337]
[31.64205933 144.18196106]
[18.20970917 150.85818481]
[4.77736092 157.53440857]
[-8.65498829 164.21063232]
[-22.08733749 170.88685608]
[-35.51968765 177.56309509]
[-48.95203400 184.23931885]
[-62.38438416 190.91554260]
[-67.66210938 207.60705566]
[-83.08095551 215.15655518]
[-98.86747742 209.32347107]
[-112.21555328 216.16662598]
[-120.96609497 229.34762573]
[-135.82157898 228.26873779]
[-149.16964722 235.11189270]
[-162.51773071 241.95504761]
[-175.86581421 248.79821777]
[-180.54695129 260.79837036]
[-191.78393555 266.22888184]
[-203.32937622 262.67526245]
[-216.76171875 269.35150146]
[-230.19406128 276.02770996]
[-243.62641907 282.70394897]
[-248.42166138 297.76321411]
[-262.49908447 304.94665527]
[-277.50680542 299.99246216]
[-284.54098511 285.83987427]
[-279.42840576 270.88537598]
[-265.20223999 264.00119019]
[-250.30264282 269.27160645]
[-236.87030029 262.59536743]
[-223.43794250 255.91914368]
[-210.00559998 249.24291992]
[-201.08697510 234.11614990]
[-182.70896912 235.45013428]
[-169.36088562 228.60697937]
[-156.01281738 221.76382446]
[-142.66473389 214.92065430]
[-134.86892700 202.22914124]
[-119.05870819 202.81855774]
[-105.71063232 195.97540283]
[-103.52046967 183.29324341]
[-94.29376984 174.04425049]
[-81.23394012 171.75627136]
[-69.06060791 177.48320007]
[-55.62826157 170.80696106]
[-42.19591141 164.13073730]
[-28.76356316 157.45451355]
[-15.33121490 150.77828979]
[-1.89886606 144.10206604]
[11.53348255 137.42582703]
[24.96583176 130.74960327]
[32.91924286 118.15625763]
[48.72089005 118.94272614]
[62.15324020 112.26649475]
[75.58558655 105.59027100]
[89.01793671 98.91404724]
[86.32286072 95.80269623]
[84.54850006 91.61973572]
[76.25386047 79.12178040]
[67.95921326 66.62382507]
[59.66457367 54.12586594]
[51.06092453 41.83858871]
[42.15362167 29.76962090]
[33.24631882 17.70065308]
[24.33901787 5.63168716]
[15.43171501 -6.43727970]
[6.52441216 -18.50624657]
[-7.89582348 -25.01526833]
[-9.22811985 -39.85017014]
[-18.13542175 -51.91913605]
[-33.54016113 -51.93537140]
[-45.83778381 -60.91433334]
[-50.43582916 -75.24339294]
[-45.77050018 -89.36333466]
[-54.67780304 -101.43230438]
[-63.58510590 -113.50126648]
[-72.49240875 -125.57023621]
[-81.39971161 -137.63920593]
[-90.30701447 -149.70817566]
[-105.54604340 -155.76655579]
[-107.65079498 -172.03007507]
[-94.45607758 -181.76821899]
[-79.53548431 -174.96321106]
[-78.23804474 -158.61547852]
[-69.33074188 -146.54650879]
[-60.42344284 -134.47753906]
[-51.51613998 -122.40856934]
[-42.60883713 -110.33960724]
[-33.70153427 -98.27063751]
[-18.83377266 -98.56677246]
[-6.49660873 -89.94944000]
[-1.54134250 -75.55157471]
[-6.06645584 -60.82643890]
[2.84084702 -48.75747299]
[16.62397194 -43.11170197]
[18.59337807 -27.41354942]
[27.50068092 -15.34458256]
[36.40798569 -3.27561569]
[45.31528854 8.79335117]
[54.22259140 20.86231804]
[63.12989426 32.93128586]
[65.85105896 33.49134064]
[68.51755524 35.14872742]
[70.71550751 37.88904190]
[72.04345703 41.55029297]
[72.16252899 45.83122635]
[80.45716858 58.32918167]
[88.75181580 70.82714081]
[97.04645538 83.32509613]
[94.45195007 68.55117798]
[100.60702515 54.87217712]
[113.38463593 47.01517105]
[128.36920166 47.69532776]
[140.38247681 56.67760468]
[145.27299500 70.85797119]
[141.35073853 85.33609009]
[129.97111511 95.10871124]
[115.06626892 96.79862976]
[129.39985657 101.21996307]
[144.86753845 97.89408112]
[154.74876404 109.03906250]
[169.08236694 113.46038818]
[183.41595459 117.88172150]
[197.74954224 122.30304718]
[212.08312988 126.72437286]
[226.41673279 131.14570618]
[240.75032043 135.56703186]
[255.23921204 139.44931030]
[269.86312866 142.78712463]
[284.48703003 146.12493896]
[299.11096191 149.46275330]
[313.73489380 152.80056763]
[328.35879517 156.13838196]
[342.98272705 159.47619629]
[357.60662842 162.81401062]
[362.15362549 155.69436646]
[368.93530273 150.19322205]
[377.37167358 147.00982666]
[386.66586304 146.63487244]
[395.87911987 149.28414917]
[404.02560425 154.85925293]
[410.17736816 162.94071960]
[424.84176636 159.78547668]
[439.50616455 156.63023376]
[454.17056274 153.47497559]
[468.83496094 150.31973267]
[483.49932861 147.16447449]
[495.36322021 136.69743347]
[509.43325806 141.58444214]
[524.09765625 138.42918396]
[533.33093262 123.55614471]
[550.13586426 120.04480743]
[563.99487305 129.59295654]
[578.61877441 126.25514221]
[590.35125732 115.64100647]
[604.48114014 120.35222626]
[619.10504150 117.01441193]
[633.72900391 113.67659760]
[648.35290527 110.33879089]
[662.44946289 100.91950226]
[675.40295410 111.85765839]
[668.47814941 127.33291626]
[651.69073486 124.96270752]
[637.06677246 128.30052185]
[622.44287109 131.63833618]
[607.81896973 134.97615051]
[597.13250732 145.35154724]
[581.95660400 140.87905884]
[567.33270264 144.21687317]
[562.08087158 155.96641541]
[550.85717773 162.65264893]
[537.63665771 161.64727783]
[527.25292969 153.09358215]
[512.58850098 156.24882507]
[501.77352905 166.49020386]
[486.65460205 161.82887268]
[471.99020386 164.98411560]
[457.32580566 168.13937378]
[442.66140747 171.29461670]
[427.99700928 174.44987488]
[413.33261108 177.60511780]
[409.09033203 191.99270630]
[419.69692993 202.59931946]
[430.30352783 213.20591736]
[440.91012573 223.81251526]
[451.51672363 234.41911316]
[462.12332153 245.02572632]
[477.69924927 245.19441223]
[488.30477905 256.10211182]
[488.04794312 270.95034790]
[498.65454102 281.55694580]
[513.45495605 277.69747925]
[528.10327148 281.73773193]
[538.69213867 292.49606323]
[542.44915771 307.01300049]
[538.46228027 321.36465454]
[549.06884766 331.97125244]
[559.67547607 342.57785034]
[575.47778320 342.32720947]
[586.77062988 353.38375854]
[586.85418701 369.18783569]
[575.67883301 380.36315918]
[559.87475586 380.27960205]
[548.81823730 368.98675537]
[549.06884766 353.18444824]
[538.46228027 342.57785034]
[527.85565186 331.97125244]
[513.50402832 335.95816040]
[498.98709106 332.20114136]
[488.22872925 321.61224365]
[484.18850708 306.96392822]
[488.04794312 292.16354370]
[477.44134521 281.55694580]
[462.59313965 281.81375122]
[451.68542480 271.20825195]
[451.51672363 255.63232422]
[440.91012573 245.02572632]
[430.30352783 234.41911316]
[419.69692993 223.81251526]
[409.09033203 213.20591736]
[398.48373413 202.59931946]
[367.45413208 201.99961853]
[354.26882935 177.43792725]
[339.64489746 174.10011292]
[325.02099609 170.76229858]
[310.39706421 167.42448425]
[295.77316284 164.08666992]
[281.14923096 160.74885559]
[266.52529907 157.41104126]
[251.90139771 154.07322693]
[259.09896851 167.23358154]
[254.99375916 181.66088867]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 146]
[5 145]
[6 144]
[7 143]
[8 142]
[9 141]
[10 140]
[12 138]
[13 137]
[14 75]
[15 74]
[16 73]
[17 72]
[19 70]
[20 69]
[21 68]
[22 67]
[23 66]
[24 65]
[25 64]
[26 63]
[29 59]
[30 58]
[32 56]
[33 55]
[34 54]
[35 53]
[38 51]
[39 50]
[40 49]
[41 48]
[77 128]
[78 127]
[79 126]
[80 125]
[81 120]
[82 119]
[83 118]
[84 117]
[85 116]
[86 115]
[88 113]
[89 112]
[93 108]
[94 107]
[95 106]
[96 105]
[97 104]
[98 103]
[147 249]
[148 248]
[149 247]
[150 246]
[151 245]
[152 244]
[153 243]
[154 242]
[161 200]
[162 199]
[163 198]
[164 197]
[165 196]
[166 195]
[168 193]
[169 192]
[172 188]
[173 187]
[175 185]
[176 184]
[177 183]
[178 182]
[201 240]
[202 239]
[203 238]
[204 237]
[205 236]
[206 235]
[209 232]
[210 231]
[215 226]
[216 225]
[217 224]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
