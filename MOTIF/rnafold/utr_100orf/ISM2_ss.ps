%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:47:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGCGAGGCGGGGCGCGACUGGGUUCGCGGCCGCGUGCAGAGGUGCAGGCAGAGCAGCCUCGGAACCGAGACGAUGCGUGCGCUCCGCGACCGAGCCGGGCUCCUCCUCUGCGUGCUGCUGCUGGCGGCGCUGCUGGAGGCGGCGCUAGGGCUCCCCGUGAAGAAGCCGCGGC\
) } def
/len { sequence length } bind def

/coor [
[72.81119537 128.36848450]
[73.77769470 113.39965057]
[86.54036713 105.51824951]
[71.71465302 103.23825073]
[63.65011597 112.02742004]
[52.45359421 115.77893829]
[40.95791626 113.66615295]
[32.01275253 106.33090210]
[27.77823830 95.69479370]
[13.04392910 92.88407135]
[-1.69037938 90.07335663]
[-16.42468834 87.26263428]
[-31.15899658 84.45191193]
[-45.89330673 81.64119720]
[-60.62761307 78.83047485]
[-75.36192322 76.01975250]
[-90.09622955 73.20903778]
[-97.24062347 81.97970581]
[-109.09915161 85.84017944]
[-122.29180908 82.40328979]
[-137.26220703 81.46143341]
[-151.52098083 88.31694794]
[-163.73730469 79.79576111]
[-178.70770264 78.85390472]
[-193.67810059 77.91204834]
[-208.64851379 76.97019196]
[-223.61891174 76.02832794]
[-238.61346436 75.62445831]
[-253.61286926 75.75910187]
[-267.34304810 83.61995697]
[-280.13925171 75.99720764]
[-295.13864136 76.13184357]
[-311.98876953 87.15689850]
[-328.41851807 76.99812317]
[-343.40341187 77.67109680]
[-356.84255981 86.01975250]
[-369.90414429 78.86124420]
[-384.88903809 79.53421783]
[-399.87393188 80.20719147]
[-414.85882568 80.88016510]
[-428.37991333 90.15982819]
[-443.05822754 82.84687805]
[-443.79397583 66.46424103]
[-429.83026123 57.86497879]
[-415.53179932 65.89527130]
[-400.54690552 65.22229767]
[-385.56201172 64.54932404]
[-370.57711792 63.87635040]
[-358.20977783 55.57583237]
[-344.07638550 62.68619919]
[-329.09149170 62.01322937]
[-322.87460327 53.85232925]
[-312.97866821 50.40527344]
[-302.61053467 53.04594421]
[-295.27328491 61.13244629]
[-280.27386475 60.99781036]
[-267.61657715 53.14658356]
[-253.74749756 60.75970459]
[-238.74810791 60.62506485]
[-236.67953491 58.68638229]
[-233.70568848 57.46449280]
[-230.10092163 57.31315994]
[-226.26414490 58.47840500]
[-222.67704773 61.05792999]
[-207.70664978 61.99978638]
[-192.73625183 62.94164658]
[-177.76585388 63.88350296]
[-162.79544067 64.82536316]
[-149.60746765 57.90248108]
[-136.32034302 66.49103546]
[-121.34994507 67.43289185]
[-112.75242615 55.14132309]
[-118.77136993 41.40187836]
[-124.79031372 27.66243172]
[-136.68418884 15.58054352]
[-128.36701965 0.80688423]
[-111.86829376 4.70926046]
[-111.05086517 21.64348984]
[-105.03192902 35.38293457]
[-99.01298523 49.12237930]
[-87.28551483 58.47472763]
[-72.55120087 61.28544617]
[-57.81689453 64.09616852]
[-43.08258438 66.90688324]
[-28.34827805 69.71760559]
[-13.61396885 72.52832794]
[1.12034035 75.33904266]
[15.85464954 78.14976501]
[30.58895874 80.96048737]
[45.04977798 69.77504730]
[63.41418839 72.72880554]
[73.99465942 88.41254425]
[88.82036591 90.69254303]
[103.80525970 90.01956940]
[118.36690521 86.41978455]
[132.92855835 82.81999207]
[147.49020386 79.22019958]
[162.05184937 75.62041473]
[175.00248718 62.55164337]
[191.65750122 68.03594971]
[206.15217590 64.17534637]
[220.64686584 60.31473923]
[231.99075317 49.28629303]
[246.28063965 53.48727417]
[260.77532959 49.62666702]
[272.11923218 38.59822083]
[286.40911865 42.79919815]
[300.90377808 38.93859482]
[315.39846802 35.07798767]
[329.89315796 31.21738052]
[344.38781738 27.35677528]
[358.84725952 23.36622238]
[373.27032471 19.24604416]
[387.65579224 14.99657345]
[402.00253296 10.61815166]
[416.34930420 6.23972988]
[430.69607544 1.86130822]
[445.04281616 -2.51711369]
[459.38958740 -6.89553547]
[473.73632812 -11.27395725]
[488.08309937 -15.65237904]
[501.46752930 -26.05876350]
[515.17242432 -16.07815742]
[509.37576294 -0.14595893]
[492.46151733 -1.30562282]
[478.11474609 3.07279897]
[463.76800537 7.45122099]
[449.42123413 11.82964325]
[435.07449341 16.20806503]
[420.72772217 20.58648682]
[406.38098145 24.96490860]
[392.03421021 29.34333038]
[386.53607178 34.31985855]
[377.39050293 33.66908646]
[362.96743774 37.78926468]
[357.38085938 42.66629410]
[348.24844360 41.85145569]
[333.75375366 45.71205902]
[319.25906372 49.57266617]
[304.76440430 53.43327332]
[290.26971436 57.29388046]
[279.96258545 68.04618835]
[264.63592529 64.12134552]
[250.14125061 67.98194885]
[239.83412170 78.73426056]
[224.50746155 74.80941772]
[210.01278687 78.67002869]
[195.51811218 82.53063202]
[189.16889954 92.85156250]
[177.09877014 96.17293549]
[165.65162659 90.18206024]
[151.08998108 93.78184509]
[136.52833557 97.38163757]
[121.96669769 100.98143005]
[107.40505219 104.58121490]
[113.00035858 109.16956329]
[118.04846954 114.43347931]
[123.31909180 128.47700500]
[128.58970642 142.52052307]
[133.86033630 156.56405640]
[139.13095093 170.60757446]
[153.93728638 175.63815308]
[162.00175476 189.03584290]
[159.51655579 204.47468567]
[147.65515137 214.66493225]
[132.01811218 214.79502869]
[119.98876953 204.80358887]
[117.24702454 189.40823364]
[125.08743286 175.87818909]
[119.81681061 161.83467102]
[114.54618835 147.79115295]
[109.27556610 133.74761963]
[104.00494385 119.70410156]
[98.90711212 133.81126404]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 93]
[4 92]
[9 89]
[10 88]
[11 87]
[12 86]
[13 85]
[14 84]
[15 83]
[16 82]
[17 81]
[20 71]
[21 70]
[23 68]
[24 67]
[25 66]
[26 65]
[27 64]
[28 59]
[29 58]
[31 56]
[32 55]
[34 51]
[35 50]
[37 48]
[38 47]
[39 46]
[40 45]
[72 80]
[73 79]
[74 78]
[94 155]
[95 154]
[96 153]
[97 152]
[98 151]
[100 148]
[101 147]
[102 146]
[104 144]
[105 143]
[107 141]
[108 140]
[109 139]
[110 138]
[111 137]
[112 135]
[113 134]
[114 132]
[115 131]
[116 130]
[117 129]
[118 128]
[119 127]
[120 126]
[121 125]
[157 173]
[158 172]
[159 171]
[160 170]
[161 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
