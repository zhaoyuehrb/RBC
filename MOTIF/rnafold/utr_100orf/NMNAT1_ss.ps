%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:40:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUUUCUGAGUUUCUUCCUAGCGAGGCCGAGAGGGUCUUUGAGGAAAAUCCCGCAUCCGGACACGCCUUGAGGGAUGGCGUCAAACCCAGAGGCUUGGAAAAGACAACAAGGGAGGUGUCACAGUUUUCCAUUUAGAUCAACAACUUCAAGUUCUUACCAUGGAAAAUUCCGAGAAGACUGAAGUGGUUCUCCUUGCUUGUGGUUCAUUCAAUCCCAUCACCAACAUGCACCUCAGGUUGUUUGAGCUGGCCAAG\
GACU\
) } def
/len { sequence length } bind def

/coor [
[235.34640503 123.52889252]
[227.50035095 118.73324585]
[221.18688965 112.00991058]
[216.86804199 103.82968140]
[214.86541748 94.77069855]
[200.02281189 92.60336304]
[185.18022156 90.43602753]
[170.33763123 88.26869202]
[155.49502563 86.10135651]
[140.65243530 83.93402100]
[125.80983734 81.76668549]
[143.54997253 96.41083527]
[150.22592163 124.29798126]
[137.62551880 156.51177979]
[104.36444092 179.86933899]
[94.28266907 190.97599792]
[84.20088959 202.08265686]
[74.11911774 213.18930054]
[64.03734589 224.29595947]
[66.23289490 237.56622314]
[60.47767258 249.50796509]
[49.06929398 255.86883545]
[36.27198410 254.52725220]
[26.05674744 265.51126099]
[15.84150982 276.49530029]
[5.62627172 287.47933960]
[-4.58896637 298.46337891]
[-14.80420399 309.44738770]
[-15.66205025 325.46749878]
[-28.80508614 334.66751099]
[-44.15110016 329.98995972]
[-49.92794418 315.02307129]
[-41.70411682 301.24816895]
[-25.78823471 299.23214722]
[-15.57299614 288.24813843]
[-5.35775805 277.26409912]
[4.85747957 266.28005981]
[15.07271767 255.29603577]
[25.28795624 244.31201172]
[23.96892738 227.53218079]
[35.43081284 214.74830627]
[52.93068695 214.21418762]
[63.01246262 203.10752869]
[73.09423828 192.00086975]
[83.17601013 180.89422607]
[93.25778961 169.78756714]
[89.45558929 163.32278442]
[76.52592468 170.92698669]
[68.92192841 157.99720764]
[81.85118866 150.39324951]
[78.04898834 143.92846680]
[63.44255066 147.34196472]
[48.83611298 150.75546265]
[37.24920654 162.36044312]
[21.47752762 157.86753845]
[17.74563026 141.89866638]
[29.89257050 130.88124084]
[45.42261505 136.14903259]
[60.02905273 132.73553467]
[74.63549042 129.32203674]
[75.08833313 121.83571625]
[60.11571121 120.92980957]
[61.02185059 105.95720673]
[75.99401093 106.86308289]
[76.44684601 99.37677002]
[62.35835648 94.22754669]
[48.26987076 89.07832336]
[34.18138123 83.92910004]
[20.09289169 78.77988434]
[5.89640045 85.19060516]
[-8.31797791 79.76786804]
[-14.34213638 66.19417572]
[-28.43062401 61.04495621]
[-42.62711716 67.45568085]
[-56.84149551 62.03293991]
[-62.86565399 48.45924759]
[-76.95413971 43.31002808]
[-93.00592041 46.66747665]
[-103.73628998 34.26621628]
[-98.10676575 18.86360359]
[-81.90852356 16.30452347]
[-71.80491638 29.22153854]
[-57.71643066 34.37075806]
[-44.35918427 27.88080406]
[-29.99809837 32.90215302]
[-23.28140259 46.95646667]
[-9.19291496 52.10568619]
[4.16433334 45.61573029]
[18.52541733 50.63707733]
[25.24211311 64.69139099]
[39.33060074 69.84061432]
[53.41909027 74.98983765]
[67.50757599 80.13906097]
[81.59606934 85.28827667]
[86.76967621 79.85837555]
[97.11688232 68.99858093]
[102.29048920 63.56867981]
[96.46661377 49.74541855]
[90.64274597 35.92215729]
[84.81887817 22.09889793]
[78.99500275 8.27563763]
[73.17113495 -5.54762316]
[67.01493835 -19.22612000]
[60.53002167 -32.75186920]
[54.04510498 -46.27761459]
[47.56018829 -59.80336380]
[32.24031830 -60.89755249]
[19.52902031 -69.51836395]
[12.84556484 -83.34684753]
[13.98776817 -98.66321564]
[22.64838409 -111.34742737]
[36.49774933 -117.98750305]
[51.81045532 -116.79729462]
[64.46746063 -108.09696198]
[71.06409454 -94.22685242]
[69.82589722 -78.91795349]
[61.08593369 -66.28827667]
[67.57085419 -52.76253510]
[74.05577087 -39.23678589]
[80.54068756 -25.71103859]
[83.10393524 -24.64981079]
[85.40802002 -22.52485085]
[87.05135345 -19.42748833]
[87.67188263 -15.59066772]
[86.99439240 -11.37149429]
[92.81826782 2.45176649]
[98.64213562 16.27502632]
[104.46600342 30.09828758]
[110.28987885 43.92154694]
[116.11374664 57.74480820]
[127.97717285 66.92408752]
[142.81976318 69.09142303]
[157.66236877 71.25875854]
[172.50495911 73.42609406]
[187.34756470 75.59342957]
[202.19015503 77.76076508]
[217.03274536 79.92810059]
[230.00291443 63.83411407]
[249.67677307 58.04882812]
[268.98480225 64.45744324]
[280.09146118 54.37567139]
[291.19812012 44.29389572]
[296.21600342 29.28951073]
[310.84020996 26.46431351]
[321.94686890 16.38253975]
[333.05352783 6.30076456]
[344.16018677 -3.78101015]
[355.26684570 -13.86278534]
[366.37347412 -23.94455910]
[370.60693359 -32.00333405]
[377.67578125 -34.08005524]
[388.90344238 -44.02689362]
[393.23397827 -52.03392792]
[400.32739258 -54.02508545]
[411.67440796 -63.83554077]
[423.02145386 -73.64598846]
[421.55908203 -85.40737152]
[425.89785767 -96.30788422]
[434.85791016 -103.69501495]
[446.15057373 -105.83119202]
[456.96224976 -102.30146027]
[468.54299927 -111.83486176]
[480.12377930 -121.36826324]
[491.70455933 -130.90165710]
[496.94815063 -146.43989563]
[513.07751465 -149.40220642]
[523.50018311 -136.74122620]
[517.49414062 -121.48148346]
[501.23794556 -119.32089233]
[489.65719604 -109.78749084]
[478.07641602 -100.25408936]
[466.49563599 -90.72068787]
[465.80712891 -72.40546417]
[451.68682861 -60.22423172]
[432.83187866 -62.29896545]
[421.48486328 -52.48851395]
[410.13784790 -42.67805862]
[398.85028076 -32.79923248]
[387.62261963 -22.85239410]
[376.45526123 -12.83790398]
[365.34860229 -2.75612855]
[354.24194336 7.32564640]
[343.13528442 17.40742111]
[332.02862549 27.48919678]
[320.92199707 37.57097244]
[316.69854736 51.85424042]
[301.27990723 55.40055084]
[290.17324829 65.48233032]
[279.06658936 75.56410217]
[283.44842529 91.63703918]
[279.65197754 107.85822296]
[291.11669922 117.53086090]
[302.58145142 127.20349121]
[314.04617310 136.87612915]
[325.51092529 146.54875183]
[336.97564697 156.22138977]
[348.49862671 165.82458496]
[360.07937622 175.35798645]
[365.16802979 176.20738220]
[369.04876709 178.66346741]
[371.31427002 182.00488281]
[371.89892578 185.45281982]
[383.12658691 195.39965820]
[394.35424805 205.34649658]
[405.58190918 215.29333496]
[416.80957031 225.24017334]
[428.03723145 235.18701172]
[443.59490967 234.41494751]
[454.83966064 244.66239929]
[455.47982788 259.49905396]
[466.70748901 269.44589233]
[477.93515015 279.39273071]
[489.16281128 289.33956909]
[500.39047241 299.28640747]
[513.07214355 291.09628296]
[527.49353027 286.63244629]
[542.58453369 286.22616577]
[557.22521973 289.90756226]
[570.32916260 297.40344238]
[580.92407227 308.15756226]
[588.22357178 321.37191772]
[591.68609619 336.06591797]
[591.05474854 351.14913940]
[586.37622070 365.50234985]
[577.99780273 378.06039429]
[566.54119873 387.89144897]
[552.85662842 394.26589966]
[537.95947266 396.71078491]
[522.95526123 395.04467773]
[508.95736694 389.39117432]
[497.00457764 380.16983032]
[487.98382568 368.06491089]
[482.56454468 353.97470093]
[481.14886475 338.94479370]
[483.84182739 324.09048462]
[490.44363403 310.51406860]
[479.21597290 300.56723022]
[467.98831177 290.62039185]
[456.76065063 280.67355347]
[445.53298950 270.72671509]
[430.72735596 271.87954712]
[419.19921875 261.95199585]
[418.09036255 246.41467285]
[406.86270142 236.46783447]
[395.63504028 226.52099609]
[384.40737915 216.57415771]
[373.17971802 206.62731934]
[361.95205688 196.68048096]
[350.54598999 186.93875122]
[338.96520996 177.40534973]
[331.82574463 175.58618164]
[327.30300903 167.68612671]
[315.83828735 158.01348877]
[304.37353516 148.34086609]
[292.90881348 138.66822815]
[281.44406128 128.99559021]
[269.97933960 119.32295990]
[262.11318970 123.87059021]
[253.29666138 126.17805481]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 137]
[6 136]
[7 135]
[8 134]
[9 133]
[10 132]
[11 131]
[15 46]
[16 45]
[17 44]
[18 43]
[19 42]
[23 39]
[24 38]
[25 37]
[26 36]
[27 35]
[28 34]
[51 60]
[52 59]
[53 58]
[65 94]
[66 93]
[67 92]
[68 91]
[69 90]
[72 87]
[73 86]
[76 83]
[77 82]
[97 130]
[98 129]
[99 128]
[100 127]
[101 126]
[102 125]
[103 120]
[104 119]
[105 118]
[106 117]
[140 189]
[141 188]
[142 187]
[144 185]
[145 184]
[146 183]
[147 182]
[148 181]
[149 180]
[151 179]
[152 178]
[154 177]
[155 176]
[156 175]
[161 172]
[162 171]
[163 170]
[164 169]
[191 257]
[192 256]
[193 255]
[194 254]
[195 253]
[196 252]
[197 250]
[198 249]
[202 248]
[203 247]
[204 246]
[205 245]
[206 244]
[207 243]
[210 240]
[211 239]
[212 238]
[213 237]
[214 236]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
