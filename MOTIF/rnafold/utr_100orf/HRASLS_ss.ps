%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:20:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGGCGGGCGGGCGAAGCUGGGCUCGGGGCCAAGCGAGGUCUAGCCGGAGCGACUGUGCCCCGCCUCCUGGGCGGAGCGGGCGGCUCCCCAUGGUCAGAGCCUCGUGCCGGCUCGGCAGCGCCCGGACGCCGAGCCCAGCGCGUCGGCCCCCCGGCGUGCGGGCGUCUCAGAGCCGCGGAGGGGCCGCCG\
) } def
/len { sequence length } bind def

/coor [
[68.90471649 147.39030457]
[68.41393280 132.39834595]
[67.92314911 117.40637207]
[61.06958771 104.06362915]
[49.16928864 94.93220520]
[37.26898575 85.80078888]
[25.36868668 76.66936493]
[9.90400219 78.53517914]
[-2.03451419 69.10509491]
[-3.71797824 54.35038376]
[-15.61827850 45.21895981]
[-27.51857758 36.08753967]
[-39.41887665 26.95611763]
[-51.31917953 17.82469749]
[-63.21947861 8.69327545]
[-78.68416595 10.55908871]
[-90.62268066 1.12900424]
[-92.30614471 -13.62570858]
[-104.20644379 -22.75712967]
[-116.10674286 -31.88855171]
[-128.00704956 -41.01997375]
[-139.90734863 -50.15139389]
[-151.80764771 -59.28281403]
[-163.70794678 -68.41423798]
[-175.60824585 -77.54566193]
[-180.81578064 -78.22776794]
[-184.83166504 -80.60918427]
[-187.20678711 -83.94725037]
[-187.85379028 -87.42877197]
[-199.29168701 -97.13311005]
[-210.72959900 -106.83745575]
[-215.89738464 -107.77426910]
[-219.79159546 -110.34986115]
[-222.00006104 -113.80044556]
[-222.47544861 -117.30952454]
[-233.42341614 -127.56340790]
[-244.37136841 -137.81729126]
[-255.31933594 -148.07116699]
[-266.26730347 -158.32505798]
[-277.21527100 -168.57894897]
[-288.24673462 -178.74291992]
[-299.36099243 -188.81629944]
[-310.47528076 -198.88969421]
[-325.89657593 -202.42436218]
[-330.13079834 -216.70442200]
[-341.24508667 -226.77781677]
[-352.35934448 -236.85119629]
[-363.79724121 -246.55554199]
[-375.54656982 -255.88044739]
[-387.29586792 -265.20535278]
[-399.04516602 -274.53027344]
[-410.79446411 -283.85516357]
[-426.28759766 -282.24264526]
[-438.07022095 -291.86679077]
[-439.51205444 -306.64706421]
[-451.26135254 -315.97198486]
[-459.94378662 -318.86245728]
[-463.12496948 -325.54684448]
[-474.72012329 -335.06274414]
[-486.31527710 -344.57864380]
[-501.89144897 -347.35238647]
[-506.82125854 -361.40747070]
[-518.41644287 -370.92337036]
[-530.01159668 -380.43927002]
[-541.60675049 -389.95516968]
[-553.20190430 -399.47106934]
[-564.79705811 -408.98696899]
[-580.87664795 -414.36132812]
[-580.16357422 -431.30029297]
[-563.68920898 -435.30426025]
[-555.28112793 -420.58212280]
[-543.68597412 -411.06622314]
[-532.09082031 -401.55032349]
[-520.49566650 -392.03442383]
[-508.90054321 -382.51852417]
[-497.30535889 -373.00262451]
[-482.55856323 -370.90954590]
[-476.79937744 -356.17379761]
[-465.20422363 -346.65789795]
[-453.60906982 -337.14199829]
[-441.93643188 -327.72128296]
[-430.18713379 -318.39639282]
[-415.46557617 -320.34848022]
[-403.41726685 -311.05905151]
[-401.46954346 -295.60446167]
[-389.72024536 -286.27957153]
[-377.97094727 -276.95465088]
[-366.22164917 -267.62976074]
[-354.47235107 -258.30484009]
[-351.66067505 -258.50097656]
[-348.60144043 -257.58609009]
[-345.72082520 -255.46006775]
[-343.47329712 -252.18003845]
[-342.28594971 -247.96546936]
[-331.17169189 -237.89207458]
[-320.05743408 -227.81869507]
[-305.43109131 -225.00454712]
[-300.40188599 -210.00395203]
[-289.28762817 -199.93057251]
[-278.17333984 -189.85717773]
[-271.09451294 -187.69122314]
[-266.96136475 -179.52690125]
[-256.01339722 -169.27302551]
[-245.06544495 -159.01913452]
[-234.11749268 -148.76524353]
[-223.16952515 -138.51136780]
[-212.22157288 -128.25747681]
[-201.02525330 -118.27536011]
[-189.58735657 -108.57102203]
[-178.14944458 -98.86667633]
[-166.47682190 -89.44596100]
[-154.57652283 -80.31453705]
[-142.67622375 -71.18311310]
[-130.77592468 -62.05169296]
[-118.87562561 -52.92027283]
[-106.97532654 -43.78885269]
[-95.07501984 -34.65742874]
[-83.17472076 -25.52600861]
[-68.48705292 -27.71870804]
[-56.28837585 -18.62767220]
[-54.08805847 -3.20702481]
[-42.18775558 5.92439651]
[-30.28745651 15.05581760]
[-18.38715744 24.18723869]
[-6.48685694 33.31866074]
[5.41344309 42.45008087]
[20.10111427 40.25738144]
[32.29978943 49.34841919]
[34.50011063 64.76906586]
[46.40040970 73.90048981]
[58.30070877 83.03190613]
[70.20101166 92.16333008]
[133.82279968 70.31289673]
[148.48472595 73.47956848]
[163.17207336 76.52618408]
[177.88385010 79.45253754]
[192.59562683 82.37889099]
[207.30740356 85.30525208]
[216.35121155 83.90932465]
[222.23507690 88.40171814]
[236.89700317 91.56838989]
[251.55892944 94.73506165]
[266.22085571 97.90173340]
[280.88278198 101.06840515]
[295.54470825 104.23508453]
[310.20666504 107.40175629]
[324.86859131 110.56842804]
[339.53051758 113.73509979]
[354.96951294 108.20613861]
[367.30053711 119.01714325]
[363.83847046 135.04669189]
[348.14480591 139.80494690]
[336.36383057 128.39703369]
[321.70190430 125.23035431]
[307.03997803 122.06368256]
[292.37805176 118.89701080]
[277.71612549 115.73033905]
[263.05419922 112.56366730]
[248.39225769 109.39698792]
[233.73033142 106.23031616]
[219.06840515 103.06364441]
[204.38105774 100.01702881]
[189.66928101 97.09067535]
[174.95748901 94.16432190]
[160.24571228 91.23796082]
[153.06047058 93.01940918]
[145.31805420 88.14149475]
[130.65612793 84.97482300]
[125.85089874 90.73328400]
[139.77386475 96.31460571]
[138.76794434 111.28083801]
[124.22332764 114.94879913]
[116.24045563 102.25019836]
[111.43523407 108.00865936]
[117.17549133 121.86685181]
[122.91574097 135.72505188]
[137.88298035 140.25448608]
[146.39375305 153.37319946]
[144.42955017 168.88693237]
[132.91778564 179.47058105]
[117.29398346 180.12684631]
[104.93521118 170.54589844]
[101.67691040 155.25152588]
[109.05754852 141.46530151]
[103.31729889 127.60710144]
[97.57704163 113.74890900]
[82.91511536 116.91558838]
[83.40589905 131.90754700]
[83.89669037 146.89952087]
[90.45803070 162.53234863]
[77.25251007 173.16487122]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 189]
[2 188]
[3 187]
[4 132]
[5 131]
[6 130]
[7 129]
[10 126]
[11 125]
[12 124]
[13 123]
[14 122]
[15 121]
[18 118]
[19 117]
[20 116]
[21 115]
[22 114]
[23 113]
[24 112]
[25 111]
[29 110]
[30 109]
[31 108]
[35 107]
[36 106]
[37 105]
[38 104]
[39 103]
[40 102]
[41 100]
[42 99]
[43 98]
[45 96]
[46 95]
[47 94]
[48 89]
[49 88]
[50 87]
[51 86]
[52 85]
[55 82]
[56 81]
[58 80]
[59 79]
[60 78]
[62 76]
[63 75]
[64 74]
[65 73]
[66 72]
[67 71]
[133 168]
[134 167]
[135 165]
[136 164]
[137 163]
[138 162]
[140 161]
[141 160]
[142 159]
[143 158]
[144 157]
[145 156]
[146 155]
[147 154]
[148 153]
[174 186]
[175 185]
[176 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
