%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:32:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACAGAGCCCGGGCCGCAGGCACCUCCUCGCCAGCUCUUCCGCUCCUCUCACAGCCGCCAGACCCGCCUGCUGAGCCCCAUGGCCCGCGCUGCUCUCUCCGCCGCCCCCAGCAAUCCCCGGCUCCUGCGAGUGGCACUGCUGCUCCUGCUCCUGGUAGCCGCUGGCCGGCGCGCAGCAG\
) } def
/len { sequence length } bind def

/coor [
[111.30133057 135.46487427]
[100.97435760 137.20924377]
[90.57024384 136.00773621]
[80.91269684 131.95547485]
[72.76629639 125.37326813]
[66.77600861 116.78224945]
[63.41608810 106.86256409]
[48.41837311 106.60078430]
[33.42065811 106.33899689]
[16.27912521 116.91214752]
[0.12832235 106.30974579]
[-14.86939335 106.57152557]
[-29.86710930 106.83331299]
[-44.86482239 107.09510040]
[-61.62691498 118.26004028]
[-78.13790131 108.22775269]
[-93.11734009 109.01279449]
[-108.09678650 109.79782867]
[-123.07622528 110.58287048]
[-138.05566406 111.36791229]
[-153.03511047 112.15294647]
[-158.73863220 124.94196320]
[-169.34930420 133.97811890]
[-182.75543213 137.53808594]
[-196.32102966 134.98095703]
[-207.40423584 126.86286926]
[-213.87167358 114.81721497]
[-228.86253357 115.34070587]
[-242.38426208 123.55491638]
[-255.37380981 116.26650238]
[-270.36468506 116.78999329]
[-279.73171997 125.68346405]
[-292.24652100 125.79571533]
[-301.17919922 117.61289978]
[-316.17691040 117.87468719]
[-331.17462158 118.13647461]
[-336.08621216 132.47705078]
[-345.60879517 144.27096558]
[-358.59243774 152.09405518]
[-373.46932983 155.00163269]
[-388.44299316 152.64260864]
[-401.70532227 145.30183411]
[-411.65478516 133.86575317]
[-417.08993530 119.71531677]
[-417.35449219 104.55927277]
[-412.41647339 90.22777557]
[-402.87219238 78.45142365]
[-389.87414551 70.65227509]
[-374.99191284 67.77210999]
[-360.02264404 70.15872955]
[-346.77386475 77.52393341]
[-336.84548950 88.97833252]
[-331.43643188 103.13875580]
[-316.43869019 102.87696838]
[-301.44097900 102.61518097]
[-286.92474365 92.77510071]
[-270.88815308 101.79913330]
[-255.89730835 101.27564240]
[-243.44781494 93.09887695]
[-229.38601685 100.34984589]
[-214.39515686 99.82635498]
[-207.16998291 85.38706207]
[-193.57502747 76.50383759]
[-177.26234436 75.67588806]
[-162.67120361 83.22316742]
[-153.82015991 97.17350769]
[-138.84071350 96.38846588]
[-123.86126709 95.60342407]
[-108.88182068 94.81838989]
[-93.90238190 94.03334808]
[-78.92293549 93.24830627]
[-72.77201843 85.04590607]
[-62.90978241 81.52347565]
[-52.52710342 84.07803345]
[-45.12660980 92.09738922]
[-30.12889481 91.83560181]
[-15.13117886 91.57381439]
[-0.13346376 91.31202698]
[6.29997110 83.32928467]
[16.27912521 80.15318298]
[26.56632805 83.06854248]
[33.68244171 91.34127808]
[48.68015671 91.60306549]
[63.67787170 91.86485291]
[72.76629639 74.62673187]
[89.31933594 64.34329224]
[108.79989624 63.83317184]
[125.86844635 73.23619843]
[135.84658813 89.97505188]
[150.81004333 88.92870331]
[165.77351379 87.88235474]
[180.73696899 86.83600616]
[195.70042419 85.78965759]
[199.26541138 79.09480286]
[204.88998413 74.10845184]
[211.83657837 71.42091370]
[219.21606445 71.32517242]
[226.10150146 73.78568268]
[231.64456177 78.44879150]
[235.17999268 84.69271851]
[250.17770386 84.95450592]
[265.17541504 85.21629333]
[280.17315674 85.47807312]
[295.17086792 85.73986053]
[302.57135010 77.72051239]
[312.95404053 75.16595459]
[322.81625366 78.68837738]
[328.96719360 86.89078522]
[343.94662476 87.67582703]
[358.92608643 88.46086121]
[373.90551758 89.24590302]
[388.88494873 90.03094482]
[378.93908691 78.80241394]
[378.39071655 63.81244278]
[387.48950195 51.88718414]
[402.09207153 48.45717621]
[415.54867554 55.08438873]
[421.73141479 68.75090790]
[417.82479858 83.23325348]
[405.60821533 91.93631744]
[420.38034058 94.54103851]
[435.15246582 97.14576721]
[449.92456055 99.75048828]
[464.71884155 102.22620392]
[479.53417969 104.57271576]
[499.00006104 95.65554047]
[514.53387451 109.22209930]
[529.45166016 110.79002380]
[544.39459229 112.09735870]
[559.35803223 113.14370728]
[574.32153320 114.19005585]
[589.28497314 115.23640442]
[604.24847412 116.28275299]
[619.21191406 117.32910156]
[634.17535400 118.37544250]
[650.39770508 113.44871521]
[659.62268066 127.67321014]
[648.50781250 140.47540283]
[633.12902832 133.33891296]
[618.16558838 132.29255676]
[603.20208740 131.24621582]
[588.23864746 130.19985962]
[573.27514648 129.15351868]
[558.31170654 128.10717773]
[543.34826660 127.06082153]
[539.20166016 129.48129272]
[533.48608398 129.30317688]
[527.88372803 125.70785522]
[512.96594238 124.13993073]
[507.03329468 130.81105042]
[498.56173706 134.03802490]
[489.42041016 132.97274780]
[481.68966675 127.72959900]
[477.18765259 119.38804626]
[462.37234497 117.04152679]
[455.25399780 119.10645294]
[447.31985474 114.52260590]
[432.54772949 111.91787720]
[417.77560425 109.31315613]
[403.00350952 106.70843506]
[388.09991455 105.01038361]
[373.12048340 104.22534943]
[358.14102173 103.44030762]
[343.16159058 102.65526581]
[328.18215942 101.87023163]
[311.67117310 111.90251923]
[294.90905762 100.73757935]
[279.91134644 100.47579193]
[264.91363525 100.21400452]
[249.91592407 99.95221710]
[234.91821289 99.69043732]
[216.62145996 112.70004272]
[196.74678040 100.75312042]
[181.78330994 101.79946899]
[166.81985474 102.84581757]
[151.85639954 103.89215851]
[136.89292908 104.93850708]
[134.05677795 115.02043915]
[128.52432251 123.91319275]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 84]
[8 83]
[9 82]
[11 78]
[12 77]
[13 76]
[14 75]
[16 71]
[17 70]
[18 69]
[19 68]
[20 67]
[21 66]
[27 61]
[28 60]
[30 58]
[31 57]
[34 55]
[35 54]
[36 53]
[89 177]
[90 176]
[91 175]
[92 174]
[93 173]
[100 171]
[101 170]
[102 169]
[103 168]
[104 167]
[108 165]
[109 164]
[110 163]
[111 162]
[112 161]
[120 160]
[121 159]
[122 158]
[123 157]
[124 155]
[125 154]
[127 149]
[128 148]
[129 145]
[130 144]
[131 143]
[132 142]
[133 141]
[134 140]
[135 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
