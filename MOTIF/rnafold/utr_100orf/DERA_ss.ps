%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:28:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUACCUCGUGGAGAAGACGGGGGAGGGGAGCAGCGAGAUUUCCUUGCGGAGCAAUAUUCCUAGGGUACAGACCUCGUAGCCCGGGCCCGCGACUCCGCCCCGGGAGCGGGCAGGGGCGGGGCGAGCGCUCCAGCUGGCGGGAAGGAGGAAGGGCCGGGCGCGGCGCAGAGGCGGGCGCCUACCAGCCGGCAGCUCCGGAGCUGCCCGCGCCAUGUCCGCGCACAAUCGGGGCACCGAGCUCGACCUUAGCUGGA\
UCUCCAAAAUACAAGUGAAUCACCCGGCAGUUCUGAGGCGUGCGGAACAAAUCCAGG\
) } def
/len { sequence length } bind def

/coor [
[93.39687347 129.88937378]
[92.94527435 114.89617920]
[85.50422668 113.95767212]
[70.62213135 112.08065796]
[63.18107986 111.14215088]
[59.02079773 125.55368042]
[54.86051559 139.96520996]
[50.70023346 154.37672424]
[46.53995132 168.78825378]
[42.37966919 183.19978333]
[51.25054169 196.07772827]
[49.71678543 211.63990784]
[38.50259018 222.53834534]
[22.90295410 223.62712097]
[10.28355217 214.39215088]
[6.60287809 199.19389343]
[13.59883404 185.20852661]
[27.96814346 179.03948975]
[32.12842560 164.62797546]
[36.28870773 150.21644592]
[40.44898987 135.80491638]
[44.60927200 121.39339447]
[48.76955414 106.98187256]
[47.79163742 92.01378632]
[41.79161453 78.26606750]
[35.79159164 64.51834869]
[29.79156876 50.77062988]
[14.71768093 40.15186691]
[17.42221069 22.78981590]
[11.28450489 9.10301304]
[5.14680052 -4.58379030]
[-0.99090457 -18.27059364]
[-35.31726456 -2.94533396]
[-62.37119675 -20.18026733]
[-75.89969635 -13.70109272]
[-89.42819214 -7.22191906]
[-102.95669556 -0.74274492]
[-116.48519135 5.73642921]
[-125.58948517 18.67561531]
[-140.41029358 17.19482422]
[-153.93879700 23.67399788]
[-167.46730042 30.15317345]
[-180.89671326 36.83528519]
[-194.22401428 43.71881866]
[-207.55131531 50.60235214]
[-220.87861633 57.48588562]
[-234.20591736 64.36941528]
[-240.35371399 71.05188751]
[-247.70172119 71.25440216]
[-261.09744263 78.00382233]
[-274.49316406 84.75324249]
[-287.88888550 91.50267029]
[-294.26055908 106.22615814]
[-309.78161621 110.28528595]
[-322.54559326 100.56623077]
[-322.76110840 84.52462769]
[-310.26278687 74.46620941]
[-294.63830566 78.10694885]
[-281.24258423 71.35752869]
[-267.84686279 64.60810089]
[-254.45114136 57.85868073]
[-241.08946228 51.04211807]
[-227.76216125 44.15858459]
[-214.43486023 37.27505112]
[-201.10755920 30.39151573]
[-187.78025818 23.50798225]
[-186.36643982 20.33223343]
[-183.37226868 17.66690254]
[-179.04658508 16.23498535]
[-173.94647217 16.62467384]
[-160.41796875 10.14549923]
[-146.88946533 3.66632485]
[-138.75283813 -8.80942726]
[-122.96437073 -7.79207039]
[-109.43586731 -14.27124500]
[-95.90737152 -20.75041771]
[-82.37886810 -27.22959328]
[-68.85037231 -33.70876694]
[-69.27661133 -36.33710098]
[-69.47686005 -38.99223328]
[-69.44966125 -41.65476990]
[-83.79692078 -46.03154373]
[-98.14418030 -50.40832138]
[-112.49143982 -54.78509903]
[-126.83869171 -59.16187286]
[-141.18595886 -63.53865051]
[-146.16992188 -62.38841629]
[-150.66145325 -63.15533829]
[-154.02151489 -65.34143066]
[-155.89566040 -68.26920319]
[-170.10464478 -73.07594299]
[-184.31362915 -77.88267517]
[-200.27944946 -74.13772583]
[-211.30680847 -86.27565002]
[-206.05171204 -101.80999756]
[-189.92015076 -104.76036072]
[-179.50688171 -92.09166718]
[-165.29789734 -87.28492737]
[-151.08891296 -82.47818756]
[-136.80917358 -77.88591003]
[-122.46192169 -73.50913239]
[-108.11466217 -69.13235474]
[-93.76740265 -64.75557709]
[-79.42014313 -60.37880325]
[-65.07288361 -56.00202942]
[-46.90686035 -76.18824005]
[-15.14530563 -76.46579742]
[-13.04445744 -91.31794739]
[-10.94360924 -106.17009735]
[-8.84276104 -121.02225494]
[-6.74191284 -135.87440491]
[-4.64106464 -150.72656250]
[-2.54021645 -165.57870483]
[-9.64220047 -176.30395508]
[-7.62071514 -188.60231018]
[1.90921295 -195.99850464]
[4.15902424 -210.82882690]
[6.40883589 -225.65914917]
[8.65864754 -240.48947144]
[10.83400440 -255.33088684]
[12.93485260 -270.18304443]
[15.03570080 -285.03518677]
[17.13654900 -299.88735962]
[19.23739624 -314.73950195]
[17.32880402 -319.48504639]
[17.39051056 -324.04116821]
[19.02956963 -327.69937134]
[21.63158798 -330.00454712]
[24.17863083 -344.78671265]
[26.72567368 -359.56887817]
[29.27271652 -374.35104370]
[31.81975937 -389.13320923]
[34.21830750 -403.94021606]
[36.46812057 -418.77053833]
[38.71792984 -433.60083008]
[40.96774292 -448.43115234]
[43.21755600 -463.26147461]
[37.63763046 -478.06604004]
[47.19633865 -489.48883057]
[49.44614792 -504.31915283]
[51.69596100 -519.14947510]
[42.53007126 -528.97528076]
[40.70645523 -542.09210205]
[46.66703033 -553.69982910]
[58.04581833 -559.67980957]
[60.44436646 -574.48681641]
[48.01014709 -586.13806152]
[49.49911499 -606.98107910]
[48.14595795 -621.91992188]
[36.79514694 -633.25744629]
[38.72515488 -649.18395996]
[52.45544815 -657.48205566]
[67.45331573 -651.78613281]
[72.21368408 -636.46563721]
[63.08479691 -623.27307129]
[64.43795776 -608.33422852]
[79.38962555 -607.13110352]
[83.11414337 -621.66131592]
[86.83865356 -636.19158936]
[90.56317139 -650.72186279]
[94.28768921 -665.25207520]
[98.01219940 -679.78234863]
[92.13520050 -691.22479248]
[95.49945068 -703.22552490]
[105.78629303 -709.52667236]
[109.65645599 -724.01879883]
[113.52661896 -738.51092529]
[108.74874878 -754.19860840]
[120.14192963 -765.99383545]
[135.98583984 -761.76269531]
[139.98161316 -745.85778809]
[128.01875305 -734.64074707]
[124.14858246 -720.14862061]
[120.27841949 -705.65649414]
[125.72439575 -688.95031738]
[112.54244232 -676.05780029]
[108.81793213 -661.52758789]
[105.09341431 -646.99731445]
[101.36889648 -632.46710205]
[97.64438629 -617.93682861]
[93.91986847 -603.40661621]
[91.46015930 -580.87927246]
[75.25135803 -572.08825684]
[72.85280609 -557.28125000]
[83.26634979 -544.04504395]
[80.81093597 -527.04125977]
[66.52627563 -516.89965820]
[64.27646637 -502.06936646]
[62.02665710 -487.23904419]
[67.76750183 -473.49523926]
[58.04787445 -461.01165771]
[55.79806137 -446.18136597]
[53.54824829 -431.35104370]
[51.29843903 -416.52072144]
[49.04862595 -401.69039917]
[51.07693863 -397.41967773]
[50.48056412 -391.83477783]
[46.60193253 -386.58618164]
[44.05488968 -371.80401611]
[41.50784302 -357.02182007]
[38.96080017 -342.23965454]
[36.41375732 -327.45748901]
[34.08955002 -312.63864136]
[31.98870087 -297.78649902]
[29.88785362 -282.93435669]
[27.78700447 -268.08218384]
[25.68615723 -253.23004150]
[27.84898567 -246.20463562]
[23.48896599 -238.23965454]
[21.23915482 -223.40933228]
[18.98934364 -208.57901001]
[16.73953056 -193.74870300]
[23.99309158 -177.74429321]
[12.31193638 -163.47785950]
[10.21108818 -148.62570190]
[8.11023998 -133.77355957]
[6.00939178 -118.92140198]
[3.90854359 -104.06925201]
[1.80769539 -89.21710205]
[-0.29315275 -74.36494446]
[4.75137806 -68.81492615]
[9.31986523 -83.10229492]
[23.97735786 -86.28945160]
[34.06617737 -75.18919373]
[29.49737930 -60.90192032]
[14.84043980 -57.71488953]
[19.88496971 -52.16487122]
[34.86967468 -52.84214020]
[49.85437393 -53.51940918]
[64.83908081 -54.19668198]
[78.35750580 -63.48022461]
[93.03791046 -56.17148209]
[93.77835083 -39.78905869]
[79.81713104 -31.18578911]
[65.51634979 -39.21197891]
[50.53164673 -38.53470993]
[35.54694366 -37.85743713]
[20.56224060 -37.18016815]
[12.69589806 -24.40829849]
[18.83360291 -10.72149563]
[24.97130775 2.96530771]
[31.10901260 16.65211105]
[42.27106094 21.22725868]
[47.51097488 32.53562546]
[43.53928375 44.77060699]
[49.53930664 58.51832581]
[55.53932953 72.26604462]
[61.53935623 86.01375580]
[100.98159790 35.37440491]
[183.90086365 72.34429932]
[195.95597839 81.27033997]
[208.01109314 90.19638062]
[220.06620789 99.12242126]
[232.12132263 108.04845428]
[243.72554016 98.42527771]
[257.29583740 91.85943604]
[272.04327393 88.73265839]
[287.11044312 89.22673035]
[301.62133789 93.31293488]
[314.73236084 100.75369263]
[325.68118286 111.11642456]
[333.83132935 123.79863739]
[338.70892334 138.06301880]
[340.03039551 153.08024597]
[337.71893311 167.97724915]
[331.90887451 181.88790894]
[322.93804932 194.00350952]
[311.32800293 203.61965942]
[297.75372314 210.17727661]
[283.00439453 213.29510498]
[267.93753052 212.79190063]
[253.42912292 208.69689941]
[240.32261658 201.24819946]
[229.38005066 190.87882996]
[221.23760986 178.19166565]
[216.36865234 163.92434692]
[215.05628967 148.90631104]
[217.37680054 134.01072693]
[223.19528198 120.10357666]
[211.14016724 111.17753601]
[199.08505249 102.25149536]
[187.02993774 93.32545471]
[174.97482300 84.39941406]
[163.10078430 93.56604767]
[151.22778320 102.73185730]
[156.81118774 116.65398407]
[162.39459229 130.57611084]
[167.97801208 144.49822998]
[173.56141663 158.42036438]
[179.14482117 172.34248352]
[194.05995178 177.04063416]
[202.42205811 190.25460815]
[200.28280640 205.74517822]
[188.65228271 216.19816589]
[173.02206421 216.67797852]
[160.77226257 206.95808411]
[157.68685913 191.62789917]
[165.22268677 177.92588806]
[159.63928223 164.00376892]
[154.05587769 150.08163452]
[148.47247314 136.15951538]
[142.88906860 122.23738861]
[137.30566406 108.31526184]
[129.96386719 109.84759521]
[133.02828979 124.53123474]
[118.34460449 127.59543610]
[115.28027344 112.91224670]
[107.93847656 114.44458008]
[108.39007568 129.43777466]
[117.46904755 143.09443665]
[109.94011688 157.66314697]
[93.54840851 158.15686035]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 309]
[2 308]
[5 23]
[6 22]
[7 21]
[8 20]
[9 19]
[10 18]
[24 248]
[25 247]
[26 246]
[27 245]
[29 242]
[30 241]
[31 240]
[32 239]
[34 78]
[35 77]
[36 76]
[37 75]
[38 74]
[40 72]
[41 71]
[42 70]
[43 66]
[44 65]
[45 64]
[46 63]
[47 62]
[49 61]
[50 60]
[51 59]
[52 58]
[81 105]
[82 104]
[83 103]
[84 102]
[85 101]
[86 100]
[90 99]
[91 98]
[92 97]
[107 220]
[108 219]
[109 218]
[110 217]
[111 216]
[112 215]
[113 214]
[116 212]
[117 211]
[118 210]
[119 209]
[120 207]
[121 206]
[122 205]
[123 204]
[124 203]
[128 202]
[129 201]
[130 200]
[131 199]
[132 198]
[133 195]
[134 194]
[135 193]
[136 192]
[137 191]
[139 189]
[140 188]
[141 187]
[145 184]
[146 183]
[148 156]
[149 155]
[157 181]
[158 180]
[159 179]
[160 178]
[161 177]
[162 176]
[165 174]
[166 173]
[167 172]
[227 238]
[228 237]
[229 236]
[230 235]
[250 283]
[251 282]
[252 281]
[253 280]
[254 279]
[285 303]
[286 302]
[287 301]
[288 300]
[289 299]
[290 298]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
