%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:19:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUAUAAAGACAGUAAAAAGAUCAGUGGUUAUCUUUGCAGACGCCACCAUCACUGUGAGCCCUGUACUAUCAGCCAUGGUCAACUCCGUCGUCUUUUUUGACAUCACCGUCGACGGCAAGCCCUUGGGCCGCAUCUCCAUCAAACUGUUUGCAGACAAGAUUCUAAAGACAGCGG\
) } def
/len { sequence length } bind def

/coor [
[-65.47994232 145.92037964]
[-68.77870941 152.31858826]
[-72.98462677 158.15554810]
[-78.00431061 163.30371094]
[-83.72658539 167.65081787]
[-90.02499390 171.10231018]
[-96.76055908 173.58341980]
[-103.78486633 175.04078674]
[-110.94334412 175.44354248]
[-118.07862091 174.78408813]
[-125.03403473 173.07810974]
[-131.65705872 170.36425781]
[-137.80262756 166.70329285]
[-143.33633423 162.17669678]
[-148.13735962 156.88487244]
[-152.10110474 150.94490051]
[-155.14149475 144.48796082]
[-157.19284058 137.65646362]
[-158.21119690 130.60086060]
[-158.17543030 123.47632599]
[-172.77337646 120.02673340]
[-187.37133789 116.57714844]
[-201.96929932 113.12755585]
[-216.56726074 109.67797089]
[-225.67185974 110.75045776]
[-231.39384460 106.03433990]
[-245.92791748 102.32473755]
[-260.46197510 98.61514282]
[-274.99603271 94.90554810]
[-289.53009033 91.19594574]
[-299.38464355 102.79980469]
[-313.24359131 108.94925690]
[-328.33645630 108.47355652]
[-341.67126465 101.52060699]
[-350.62792969 89.51696014]
[-353.47290039 74.87551880]
[-368.00695801 71.16592407]
[-382.54101562 67.45632935]
[-397.07507324 63.74673080]
[-411.60913086 60.03713226]
[-423.10043335 65.94123840]
[-435.14462280 62.52963638]
[-441.41629028 52.16221237]
[-455.88183594 48.19378662]
[-470.38220215 44.35462189]
[-484.91625977 40.64502335]
[-499.45031738 36.93542862]
[-512.04583740 46.20292664]
[-527.64825439 45.15440369]
[-538.89050293 34.28493881]
[-540.46441650 18.72676277]
[-531.62677002 5.82596874]
[-516.55053711 1.67391789]
[-502.35412598 8.23108196]
[-495.74072266 22.40136719]
[-481.20666504 26.11096382]
[-466.67260742 29.82056236]
[-459.39031982 28.42358398]
[-451.91339111 33.72825623]
[-437.44787598 37.69667816]
[-420.75186157 32.33688736]
[-407.89953613 45.50307083]
[-393.36547852 49.21266937]
[-378.83142090 52.92226791]
[-364.29736328 56.63186646]
[-349.76327515 60.34146118]
[-340.24945068 48.85441589]
[-326.63562012 42.61154556]
[-311.59973145 42.89978409]
[-298.12509155 49.71550751]
[-288.90847778 61.75465012]
[-285.82049561 76.66188812]
[-271.28643799 80.37148285]
[-256.75238037 84.08108521]
[-242.21830750 87.79067993]
[-227.68424988 91.50028229]
[-213.11766052 95.08001709]
[-198.51971436 98.52960205]
[-183.92175293 101.97918701]
[-169.32379150 105.42877960]
[-154.72584534 108.87836456]
[-140.29008484 89.43154144]
[-118.15540314 79.45824432]
[-93.90808105 81.53810120]
[-73.69814301 95.20088196]
[-62.67949677 117.03121948]
[-47.70100021 116.22835541]
[-32.72249985 115.42549133]
[-17.74400139 114.62262726]
[-5.44910765 106.21519470]
[8.74541664 113.20275879]
[23.72391510 112.39989471]
[38.70241165 111.59703064]
[53.68091202 110.79416656]
[68.65940857 109.99130249]
[83.63790894 109.18843842]
[72.42495728 86.51965332]
[93.64238739 57.85498047]
[102.41578674 45.68832779]
[111.18918610 33.52167511]
[119.96258545 21.35502052]
[128.73599243 9.18836784]
[125.96085358 -6.37036562]
[135.06863403 -19.28639984]
[150.65583801 -21.89688301]
[163.47485352 -12.65305996]
[165.92039490 2.96087241]
[156.54154968 15.68144512]
[140.90263367 17.96176720]
[132.12924194 30.12842178]
[123.35584259 42.29507446]
[114.58244324 54.46172714]
[105.80903625 66.62837982]
[108.98541260 73.42254639]
[115.33816528 87.01086426]
[118.51454163 93.80503082]
[133.47631836 94.87511444]
[148.43811035 95.94520569]
[163.39988708 97.01528931]
[178.36166382 98.08538055]
[193.32345581 99.15546417]
[205.32008362 83.20948792]
[224.36004639 77.73507690]
[242.72621155 84.77143860]
[253.08230591 101.32303619]
[268.08230591 101.32303619]
[283.08230591 101.32303619]
[298.08230591 101.32303619]
[307.99465942 89.22845459]
[323.37170410 86.38583374]
[336.95288086 94.13737488]
[342.32553101 108.82303619]
[336.95288086 123.50869751]
[323.37170410 131.26023865]
[307.99465942 128.41761780]
[298.08230591 116.32303619]
[283.08230591 116.32303619]
[268.08230591 116.32303619]
[253.08230591 116.32303619]
[248.96147156 125.88626099]
[241.85540771 133.55046082]
[232.56254578 138.41680908]
[222.13972473 139.90296936]
[211.78195190 137.81268311]
[202.68550110 132.36122131]
[195.90963745 124.15354156]
[192.25337219 114.11724854]
[177.29158020 113.04715729]
[162.32980347 111.97707367]
[147.36802673 110.90698242]
[132.40623474 109.83689880]
[117.44445801 108.76680756]
[110.13851166 121.86730957]
[118.91191101 134.03396606]
[127.68531036 146.20062256]
[143.32421875 148.48094177]
[152.70306396 161.20150757]
[150.25752258 176.81544495]
[137.43850708 186.05926514]
[121.85129547 183.44879150]
[112.74352264 170.53274536]
[115.51865387 154.97401428]
[106.74525452 142.80735779]
[97.97185516 130.64071655]
[84.44077301 124.16693878]
[69.46227264 124.96980286]
[54.48377609 125.77266693]
[39.50527573 126.57553101]
[24.52677917 127.37839508]
[9.54828072 128.18125916]
[-3.81797647 136.64611816]
[-16.94113731 129.60112000]
[-31.91963577 130.40399170]
[-46.89813614 131.20684814]
[-61.87663269 132.00971985]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 81]
[21 80]
[22 79]
[23 78]
[24 77]
[26 76]
[27 75]
[28 74]
[29 73]
[30 72]
[36 66]
[37 65]
[38 64]
[39 63]
[40 62]
[43 60]
[44 59]
[45 57]
[46 56]
[47 55]
[86 175]
[87 174]
[88 173]
[89 172]
[91 170]
[92 169]
[93 168]
[94 167]
[95 166]
[96 165]
[98 113]
[99 112]
[100 111]
[101 110]
[102 109]
[116 152]
[117 151]
[118 150]
[119 149]
[120 148]
[121 147]
[125 139]
[126 138]
[127 137]
[128 136]
[153 164]
[154 163]
[155 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
