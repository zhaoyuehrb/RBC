%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:41:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCGAAGACAGCUGCUCAGUCUAAGCAAACCCCAGCAGGAAAGCAGGGGUACAGAGAGGAGCCCCCUUGGCACCGCCACCGCACCCUAGGCCACCCACCAUGGCGCUGGGCUUGGAGCAGGCGGAGGAGCAGCGGUUGUACCAGCAGACGCUCCUGCAAGACGGGCUCAAAGACAUGCUGGACCAUGGCAAGUUCCUCG\
) } def
/len { sequence length } bind def

/coor [
[86.49196625 484.76513672]
[70.11083984 483.99645996]
[62.82740021 469.30346680]
[72.13422394 455.80105591]
[72.83730316 440.81756592]
[73.54039001 425.83404541]
[66.40814972 412.75808716]
[74.78379059 399.33575439]
[75.48687744 384.35223389]
[72.98574066 380.27502441]
[73.02489471 374.58193970]
[76.45334625 368.91357422]
[77.62438965 353.95938110]
[78.79543304 339.00515747]
[79.84957886 324.04223633]
[80.78675079 309.07153320]
[81.72393036 294.10086060]
[70.07023621 281.98031616]
[70.79883575 264.84393311]
[83.94681549 253.31072998]
[84.64989471 238.32722473]
[85.35298157 223.34370422]
[86.05606079 208.36019897]
[86.75914764 193.37667847]
[83.93012238 186.54231262]
[87.59212494 178.16502380]
[88.52929688 163.19433594]
[89.46647644 148.22363281]
[69.57003021 138.86503601]
[55.71158600 121.79473877]
[41.40289688 126.29600525]
[27.09420776 130.79727173]
[12.78551960 135.29853821]
[-1.52316892 139.79981995]
[-12.36548233 151.32174683]
[-26.82803154 147.76029968]
[-41.13671875 152.26156616]
[-48.22029877 166.38949585]
[-63.24522400 171.29124451]
[-77.29747772 164.05868530]
[-82.04010010 148.98278809]
[-74.65938568 135.00778198]
[-59.53417206 130.42481995]
[-45.63798904 137.95286560]
[-31.32930183 133.45159912]
[-21.51044083 122.25164032]
[-6.02443838 125.49112701]
[8.28425026 120.98985291]
[22.59293938 116.48858643]
[36.90162659 111.98731995]
[51.21031570 107.48604584]
[50.76328659 96.50426483]
[52.75738907 85.69580841]
[57.09376144 75.59654236]
[63.55740738 66.70718384]
[71.82785797 59.46847534]
[81.49507141 54.23929977]
[92.07975006 51.27891922]
[103.05711365 50.73410797]
[113.88290405 52.63187790]
[120.23988342 39.04552841]
[126.59685516 25.45918083]
[132.95382690 11.87283134]
[139.31080627 -1.71351683]
[145.66778564 -15.29986572]
[143.65840149 -33.60031128]
[158.41993713 -43.08415222]
[164.56379700 -56.76819611]
[170.70765686 -70.45223999]
[176.85150146 -84.13628387]
[168.25718689 -95.60835266]
[167.38601685 -110.76152802]
[175.45161438 -124.60596466]
[190.57434082 -132.07643127]
[190.10551453 -147.06910706]
[189.63670349 -162.06178284]
[189.16787720 -177.05445862]
[188.69906616 -192.04711914]
[176.31466675 -209.52902222]
[186.80581665 -227.29766846]
[185.63476562 -242.25189209]
[184.46372986 -257.20611572]
[173.28237915 -264.72424316]
[168.54418945 -277.12939453]
[171.77059937 -289.80993652]
[181.56571960 -298.18884277]
[180.62854004 -313.15954590]
[179.69136047 -328.13024902]
[178.75418091 -343.10092163]
[177.81701660 -358.07162476]
[176.76286316 -373.03454590]
[175.59182739 -387.98876953]
[174.42077637 -402.94299316]
[173.24974060 -417.89718628]
[160.41821289 -426.83508301]
[156.38378906 -441.94329834]
[163.05139160 -456.08813477]
[177.27279663 -462.59091187]
[192.33308411 -458.38116455]
[201.12123108 -445.44662476]
[199.48776245 -429.89459229]
[188.20394897 -419.06823730]
[189.37500000 -404.11401367]
[190.54603577 -389.15979004]
[191.71708679 -374.20559692]
[195.37635803 -367.77740479]
[192.78770447 -359.00881958]
[193.72488403 -344.03811646]
[194.66206360 -329.06741333]
[195.59924316 -314.09671021]
[196.53642273 -299.12603760]
[209.61071777 -288.55346680]
[211.02493286 -271.46002197]
[199.41795349 -258.37713623]
[200.58898926 -243.42292786]
[201.76002502 -228.46870422]
[209.37033081 -223.86801147]
[214.07785034 -216.16157532]
[214.71627808 -207.01568604]
[211.01574707 -198.47729492]
[203.69174194 -192.51594543]
[204.16055298 -177.52326965]
[204.62937927 -162.53059387]
[205.09819031 -147.53793335]
[205.56701660 -132.54525757]
[217.79800415 -123.86177063]
[232.10668945 -128.36303711]
[246.41537476 -132.86431885]
[260.72406006 -137.36558533]
[275.03274536 -141.86685181]
[289.34143066 -146.36811829]
[292.76184082 -161.27610779]
[303.11666870 -172.39700317]
[317.55172729 -176.81240845]
[332.16098022 -173.43223572]
[343.04348755 -163.26187134]
[357.35217285 -167.76313782]
[371.66085815 -172.26440430]
[385.96954346 -176.76567078]
[399.26428223 -187.28643799]
[413.05422974 -177.42370605]
[407.39437866 -161.44238281]
[390.47082520 -162.45698547]
[376.16213989 -157.95571899]
[361.85345459 -153.45445251]
[347.54476929 -148.95318604]
[344.44482422 -134.38417053]
[334.40188599 -123.24884796]
[320.03875732 -118.60482025]
[305.18203735 -121.79460144]
[293.84271240 -132.05943298]
[279.53402710 -127.55815887]
[265.22534180 -123.05689240]
[250.91664124 -118.55562592]
[236.60795593 -114.05435181]
[222.29927063 -109.55308533]
[213.66362000 -84.28369904]
[190.53555298 -77.99242401]
[184.39169312 -64.30838013]
[178.24783325 -50.62434006]
[172.10398865 -36.94029617]
[176.10948181 -25.52078438]
[171.09642029 -14.06729221]
[159.25413513 -8.94289017]
[152.89715576 4.64345837]
[146.54017639 18.22980690]
[140.18319702 31.81615639]
[133.82623291 45.40250397]
[127.46925354 58.98885345]
[138.59930420 69.23365784]
[146.10411072 82.36804962]
[149.27879333 97.15843964]
[147.82521057 112.21570587]
[141.87986755 126.12567139]
[132.00115967 137.58190918]
[119.11689758 145.50843811]
[104.43717194 149.16081238]
[103.49999237 164.13151550]
[102.56282043 179.10220337]
[101.74266052 194.07975769]
[101.03957367 209.06327820]
[100.33649445 224.04679871]
[99.63340759 239.03030396]
[98.93032837 254.01382446]
[109.08677673 262.86773682]
[112.24089050 275.76693726]
[107.45823669 287.94610596]
[96.69462585 295.03802490]
[95.75744629 310.00872803]
[94.82027435 324.97940063]
[97.40892792 333.74798584]
[93.74964905 340.17620850]
[92.57860565 355.13040161]
[91.40756226 370.08462524]
[90.47039032 385.05532837]
[89.76730347 400.03884888]
[96.84925842 414.18649292]
[88.52390289 426.53713989]
[87.82081604 441.52062988]
[87.11773682 456.50415039]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 200]
[5 199]
[6 198]
[8 196]
[9 195]
[12 194]
[13 193]
[14 192]
[15 190]
[16 189]
[17 188]
[20 184]
[21 183]
[22 182]
[23 181]
[24 180]
[26 179]
[27 178]
[28 177]
[30 51]
[31 50]
[32 49]
[33 48]
[34 47]
[36 45]
[37 44]
[60 169]
[61 168]
[62 167]
[63 166]
[64 165]
[65 164]
[67 161]
[68 160]
[69 159]
[70 158]
[74 125]
[75 124]
[76 123]
[77 122]
[78 121]
[80 116]
[81 115]
[82 114]
[86 111]
[87 110]
[88 109]
[89 108]
[90 107]
[91 105]
[92 104]
[93 103]
[94 102]
[126 156]
[127 155]
[128 154]
[129 153]
[130 152]
[131 151]
[136 146]
[137 145]
[138 144]
[139 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
