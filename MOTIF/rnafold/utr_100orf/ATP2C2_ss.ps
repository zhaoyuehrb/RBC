%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:25:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCGGGUCCGGCCCAGGAGGCUUGGGCGCGCGCAGCCAUCCCGGGCCUCGCCGGGGACCUAGGGACGCAGGCAACGCCUGCGCCCGCUCACCAUGGUCGAGGGACGCGUCUCCGAGUUCCUGAAGAAACUCGGCUUCUCGGGCGGGGGCCGCCAGUACCAGGCGCUGGAGAAGGACGAAGAGGAAGCCUUGA\
) } def
/len { sequence length } bind def

/coor [
[172.37796021 268.28872681]
[185.35836792 260.77148438]
[200.32473755 261.77529907]
[212.18505859 270.95867920]
[203.52622986 258.71020508]
[194.86740112 246.46176147]
[181.20251465 240.53553772]
[179.55429077 224.80041504]
[170.89546204 212.55195618]
[162.23663330 200.30351257]
[148.57174683 194.37727356]
[146.92352295 178.64216614]
[138.26467896 166.39370728]
[129.60585022 154.14524841]
[120.94702148 141.89678955]
[112.18930054 129.71885681]
[103.33326721 117.61221313]
[88.74488831 114.12234497]
[75.36878204 120.91055298]
[61.99267197 127.69875336]
[48.61656570 134.48695374]
[35.24045563 141.27516174]
[21.86434746 148.06336975]
[8.48824024 154.85157776]
[-4.88786840 161.63978577]
[-18.26397705 168.42799377]
[-31.64008522 175.21618652]
[-41.85598755 192.58348083]
[-61.09566879 190.73869324]
[-74.24494934 197.95648193]
[-80.09326172 212.89558411]
[-95.46145630 217.49972534]
[-108.56036377 208.23699951]
[-109.34163666 192.21298218]
[-97.20593262 181.71992493]
[-81.46273804 184.80720520]
[-68.31345367 177.58941650]
[-66.34461212 167.54487610]
[-59.01268387 160.09111023]
[-48.57218552 157.86505127]
[-38.42829132 161.84008789]
[-25.05218124 155.05187988]
[-11.67607403 148.26367188]
[1.70003450 141.47546387]
[15.07614231 134.68727112]
[28.45225143 127.89905548]
[41.82835770 121.11085510]
[55.20446777 114.32264709]
[68.58057404 107.53443909]
[81.95668030 100.74623871]
[88.96060181 87.48180389]
[87.02277374 72.60750580]
[85.08495331 57.73320007]
[83.14713287 42.85889816]
[81.20931244 27.98459816]
[79.27148438 13.11029720]
[42.40821838 -6.94819975]
[33.74938583 -19.19665527]
[25.09055519 -31.44511032]
[16.43172455 -43.69356537]
[-6.56438398 -45.46305466]
[-20.60557938 -63.42205429]
[-16.86389923 -85.63809967]
[-26.85262871 -96.82851410]
[-36.84135818 -108.01892090]
[-44.90277481 -112.34535980]
[-46.89943314 -119.47235870]
[-56.70564270 -130.82305908]
[-66.51185608 -142.17375183]
[-76.31806946 -153.52442932]
[-86.12427521 -164.87512207]
[-95.93048859 -176.22581482]
[-105.73670197 -187.57650757]
[-120.66683960 -195.60940552]
[-117.08094025 -212.17979431]
[-100.16545868 -213.32118225]
[-94.38600922 -197.38272095]
[-84.57979584 -186.03202820]
[-74.77358246 -174.68133545]
[-64.96737671 -163.33064270]
[-55.16116333 -151.97994995]
[-45.35494995 -140.62925720]
[-35.54874039 -129.27856445]
[-25.65094566 -118.00765228]
[-15.66221714 -106.81723785]
[-5.67348814 -95.62683105]
[1.44927788 -98.08544159]
[8.99752617 -98.54320526]
[16.41793060 -96.95207977]
[23.16264343 -93.41471863]
[28.72973824 -88.17803192]
[32.70055771 -81.61595917]
[34.77118301 -74.20278168]
[34.77564240 -66.47890472]
[32.69913864 -59.01139069]
[28.68017960 -52.35239410]
[37.33901215 -40.10393906]
[45.99784088 -27.85548592]
[54.65667343 -15.60703087]
[62.13676834 -16.15308762]
[84.57704926 -17.79125595]
[91.36525726 -31.16736412]
[98.15346527 -44.54347229]
[104.94166565 -57.91957855]
[111.72987366 -71.29568481]
[118.51808167 -84.67179871]
[117.86363983 -100.47946167]
[130.52299500 -108.32739258]
[137.31120300 -121.70349884]
[135.88659668 -138.04064941]
[149.47599792 -147.22000122]
[164.09977722 -139.79861450]
[164.71426392 -123.41098022]
[150.68731689 -114.91529846]
[143.89910889 -101.53918457]
[145.03907776 -86.68827057]
[131.89419556 -77.88359070]
[125.10597992 -64.50748444]
[118.31777954 -51.13137436]
[111.52957153 -37.75526810]
[104.74136353 -24.37915802]
[97.95316315 -11.00305080]
[110.62342834 -19.03201675]
[125.55731201 -17.62515068]
[136.50520325 -7.37120247]
[138.88562012 7.43871498]
[131.70236206 20.60689354]
[117.96153259 26.62266159]
[103.41342926 22.96852112]
[94.14579010 11.17247486]
[96.08361053 26.04677582]
[98.02143097 40.92107773]
[99.95925903 55.79537964]
[101.89707947 70.66967773]
[103.83489990 85.54398346]
[112.12709045 89.73640442]
[116.74560547 98.43413544]
[115.43990326 108.75617981]
[124.29593658 120.86281586]
[131.89962769 125.95088959]
[133.19548035 133.23796082]
[141.85430908 145.48641968]
[150.51313782 157.73487854]
[159.17196655 169.98332214]
[173.45619202 176.78564453]
[174.48507690 191.64466858]
[183.14390564 203.89312744]
[191.80274963 216.14158630]
[206.08695984 222.94390869]
[207.11585999 237.80293274]
[215.77468872 250.05139160]
[224.43351746 262.29983521]
[235.62393188 272.28857422]
[248.77320862 279.50634766]
[261.92248535 286.72415161]
[275.07174683 293.94192505]
[288.22103882 301.15972900]
[302.73016357 295.32708740]
[317.57778931 300.23440552]
[325.75332642 313.56460571]
[323.39657593 329.02359009]
[311.62026978 339.31207275]
[295.98486328 339.57214355]
[283.87286377 329.68103027]
[281.00323486 314.30902100]
[267.85397339 307.09121704]
[254.70469666 299.87341309]
[241.55541992 292.65563965]
[228.40614319 285.43783569]
[222.85154724 290.47735596]
[211.74238586 300.55636597]
[206.18780518 305.59585571]
[212.09593201 319.38333130]
[218.00407410 333.17077637]
[223.91221619 346.95822144]
[239.16276550 347.57742310]
[252.63034058 354.75985718]
[261.64093018 367.07940674]
[264.40551758 382.09008789]
[260.37512207 396.81143188]
[250.35005188 408.32058716]
[236.32075500 414.33236694]
[221.07275391 413.65310669]
[207.63356018 406.41772461]
[198.67155457 394.06277466]
[195.96611023 379.04132080]
[200.05442810 364.33593750]
[210.12475586 352.86636353]
[204.21661377 339.07891846]
[198.30848694 325.29144287]
[192.40034485 311.50399780]
[177.86323547 307.80636597]
[167.86218262 296.62695312]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 152]
[5 151]
[6 150]
[8 148]
[9 147]
[10 146]
[12 144]
[13 143]
[14 142]
[15 141]
[16 139]
[17 138]
[18 50]
[19 49]
[20 48]
[21 47]
[22 46]
[23 45]
[24 44]
[25 43]
[26 42]
[27 41]
[29 37]
[30 36]
[51 135]
[52 134]
[53 133]
[54 132]
[55 131]
[56 130]
[57 99]
[58 98]
[59 97]
[60 96]
[63 86]
[64 85]
[65 84]
[67 83]
[68 82]
[69 81]
[70 80]
[71 79]
[72 78]
[73 77]
[101 122]
[102 121]
[103 120]
[104 119]
[105 118]
[106 117]
[108 115]
[109 114]
[153 169]
[154 168]
[155 167]
[156 166]
[157 165]
[172 191]
[173 190]
[174 189]
[175 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
