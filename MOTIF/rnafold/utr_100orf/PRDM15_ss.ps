%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:24:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUGCCCCGUCCACGCCGCCCGCGCCCCGCAGUCCCACCCGCAGGACCCCCGGCCGCGCCAGGGUCUCGCCUGCGCCCCCCGCGCCCGCCCGCGGACUACAAGUCCCGCCAUGCCCCGCCGCCGCCCCCCGGCUUCCGGUGCUGCGCAGUUUCCGGAGCGGAUCGCAACCCGGAGUCCGGAUCCGAUCCCGCUCUGCACAUUCCAAAGGC\
) } def
/len { sequence length } bind def

/coor [
[179.47502136 166.01194763]
[182.16290283 159.82929993]
[170.65637207 150.20640564]
[159.14984131 140.58352661]
[147.64332581 130.96064758]
[136.13679504 121.33776855]
[143.74562073 134.26470947]
[147.11601257 148.88114929]
[145.93609619 163.83467102]
[140.31506348 177.74165344]
[130.77301025 189.31529236]
[118.19285583 197.48472595]
[103.73860168 201.49403381]
[88.74768066 200.97225952]
[74.60717010 195.96766663]
[62.62546539 186.94331360]
[53.91120911 174.73423767]
[49.27071762 160.47009277]
[49.13315201 145.47218323]
[34.85363007 150.06513977]
[20.57410622 154.65809631]
[6.29458380 159.25105286]
[-7.91531134 164.05509949]
[-22.05245972 169.06918335]
[-36.18960571 174.08326721]
[-50.32675171 179.09736633]
[-61.95105362 193.37916565]
[-79.07031250 189.51791382]
[-93.13160706 194.74095154]
[-107.19290161 199.96397400]
[-114.18927002 215.99777222]
[-130.30006409 221.89431763]
[-145.38748169 214.46328735]
[-159.36984253 219.89410400]
[-173.35220337 225.32492065]
[-187.33454895 230.75573730]
[-191.16104126 245.79360962]
[-203.11726379 255.68441772]
[-218.60580444 256.62496948]
[-231.67102051 248.25358582]
[-237.28903198 233.78923035]
[-233.29963684 218.79376221]
[-221.23681641 209.03321838]
[-205.73898315 208.26075745]
[-192.76536560 216.77337646]
[-178.78300476 211.34255981]
[-164.80065918 205.91174316]
[-150.81829834 200.48092651]
[-147.32510376 188.07868958]
[-137.17510986 179.82957458]
[-123.93241119 178.91891479]
[-112.41593170 185.90267944]
[-98.35463715 180.67965698]
[-84.29334259 175.45661926]
[-78.97040558 164.59471130]
[-67.29907990 160.12799072]
[-55.34083939 164.96020508]
[-41.20369339 159.94612122]
[-27.06654549 154.93203735]
[-12.92939854 149.91795349]
[-10.10343170 146.06875610]
[-4.82974148 143.95350647]
[1.70162988 144.97152710]
[15.98115253 140.37857056]
[30.26067543 135.78561401]
[44.54019928 131.19267273]
[46.35581207 123.91574860]
[35.56740952 113.49411774]
[49.98703766 109.36190796]
[51.80264664 102.08499146]
[41.35438156 91.32238007]
[25.78267288 90.92289734]
[15.33996296 79.85923767]
[15.81677437 65.01645660]
[5.36850929 54.25384521]
[-5.07975626 43.49123764]
[-15.52802181 32.72863007]
[-31.48344803 31.05414200]
[-40.00056458 17.45861816]
[-34.54577255 2.37138033]
[-19.30351448 -2.63393450]
[-5.96635199 6.28232336]
[-4.76541281 22.28036308]
[5.68285227 33.04297256]
[16.13111877 43.80558014]
[26.57938385 54.56819153]
[41.42977905 54.53142929]
[52.17912292 65.29740906]
[52.11699295 80.87411499]
[62.56525803 91.63672638]
[69.31215668 88.36115265]
[82.80595398 81.81002045]
[89.55285645 78.53444672]
[87.55823517 63.66765594]
[85.56362152 48.80086517]
[83.56900024 33.93407059]
[81.46428680 19.08246803]
[79.24958801 4.24686432]
[77.03488922 -10.58873844]
[68.71622467 -25.36155510]
[80.60887909 -37.44464874]
[95.51197052 -29.36169624]
[91.87049103 -12.80343723]
[94.08518982 2.03216577]
[96.29988861 16.86776924]
[100.39618683 23.01867294]
[98.43579102 31.93945503]
[100.43041229 46.80624771]
[102.42502594 61.67303848]
[104.41964722 76.53983307]
[111.60868835 78.67704773]
[122.49947357 68.36246490]
[125.98676300 82.95148468]
[133.17581177 85.08870697]
[142.96813965 73.72603607]
[141.98333740 58.18036270]
[152.07601929 46.79649734]
[166.90251160 45.95344543]
[176.69485474 34.59077835]
[186.48718262 23.22810936]
[196.27951050 11.86544132]
[206.07183838 0.50277239]
[204.45780945 -16.91638374]
[215.71978760 -29.85836220]
[232.52001953 -30.63483238]
[242.14289856 -42.14135742]
[251.76577759 -53.64788437]
[254.05230713 -69.88684845]
[269.35815430 -75.77439117]
[281.93795776 -65.25392151]
[278.85070801 -49.14799118]
[263.27230835 -44.02500534]
[253.64942932 -32.51847839]
[244.02653503 -21.01195145]
[246.95513916 -8.46438694]
[242.04904175 3.65998888]
[230.89160156 10.85095501]
[217.43450928 10.29510403]
[207.64218140 21.65777206]
[197.84985352 33.02044296]
[188.05751038 44.38311005]
[178.26518250 55.74577713]
[179.62045288 70.53424835]
[169.85150146 82.19710541]
[154.33081055 83.51836395]
[144.53846741 94.88103485]
[145.75967407 109.83124542]
[157.26620483 119.45412445]
[168.77273560 129.07701111]
[180.27925110 138.69989014]
[191.78578186 148.32276917]
[214.73527527 139.84184265]
[238.10076904 146.70289612]
[252.68380737 166.06256104]
[252.82843018 190.18534851]
[265.96444702 197.42723083]
[279.10046387 204.66911316]
[292.23651123 211.91099548]
[305.37252808 219.15287781]
[318.50854492 226.39476013]
[331.64456177 233.63664246]
[344.78060913 240.87852478]
[357.96990967 248.02287292]
[371.21182251 255.06930542]
[384.45370483 262.11575317]
[397.69558716 269.16217041]
[409.60226440 262.21881104]
[423.27645874 262.06643677]
[435.14547729 268.63790894]
[442.16113281 280.12326050]
[442.58221436 293.46691895]
[455.71823120 300.70883179]
[468.85427856 307.95071411]
[481.99029541 315.19259644]
[498.78030396 317.54461670]
[501.16812134 334.32955933]
[485.70016479 341.27059937]
[474.74841309 328.32861328]
[461.61239624 321.08673096]
[448.47634888 313.84484863]
[435.34033203 306.60296631]
[420.70916748 314.04730225]
[404.36010742 311.27575684]
[392.76977539 299.18536377]
[390.64916992 282.40408325]
[377.40725708 275.35763550]
[364.16537476 268.31121826]
[350.92349243 261.26477051]
[343.54254150 260.89770508]
[337.53872681 254.01454163]
[324.40267944 246.77265930]
[311.26666260 239.53077698]
[298.13064575 232.28889465]
[284.99462891 225.04701233]
[271.85858154 217.80513000]
[258.72256470 210.56324768]
[245.58654785 203.32136536]
[240.92298889 208.02433777]
[235.51284790 211.85775757]
[229.51644897 214.70491028]
[223.11204529 216.47833252]
[216.49049377 217.12251282]
[209.84959412 216.61566162]
[203.38815308 214.97039795]
[197.30006409 212.23342896]
[191.76843262 208.48431396]
[186.96014404 203.83305359]
[183.02078247 198.41694641]
[180.07022095 192.39645386]
[178.19900513 185.95051575]
[177.46554565 179.27122498]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[19 66]
[20 65]
[21 64]
[22 63]
[23 60]
[24 59]
[25 58]
[26 57]
[28 54]
[29 53]
[30 52]
[33 48]
[34 47]
[35 46]
[36 45]
[70 90]
[71 89]
[74 86]
[75 85]
[76 84]
[77 83]
[93 110]
[94 109]
[95 108]
[96 107]
[97 105]
[98 104]
[99 103]
[114 146]
[115 145]
[118 142]
[119 141]
[120 140]
[121 139]
[122 138]
[125 134]
[126 133]
[127 132]
[155 197]
[156 196]
[157 195]
[158 194]
[159 193]
[160 192]
[161 191]
[162 190]
[163 188]
[164 187]
[165 186]
[166 185]
[171 181]
[172 180]
[173 179]
[174 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
