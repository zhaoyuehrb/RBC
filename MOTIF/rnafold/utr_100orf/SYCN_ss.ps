%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:35:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCACUGCCACCAUGUCCCCGCUGCGCCCGCUGCUGCUGGCCCUGGCCCUUGCCUCCGUGCCUUGCGCCCAGGGCGCCUGCCCCGCCUCCGCCGACCUCAAGCACUCGGACG\
) } def
/len { sequence length } bind def

/coor [
[91.15477753 158.31889343]
[87.03803253 172.74290466]
[82.92129517 187.16693115]
[84.38842010 204.05728149]
[68.56430054 210.14279175]
[58.33605957 196.62171936]
[68.49726868 183.05018616]
[72.61401367 168.62617493]
[76.73075104 154.20214844]
[66.82035065 148.76927185]
[58.12802887 141.54597473]
[50.97290421 132.79747009]
[45.61764526 122.84490967]
[42.25885773 112.05367279]
[41.01984787 100.81992340]
[41.94610214 89.55607605]
[45.00361633 78.67564392]
[50.08013916 68.57806396]
[56.98931122 59.63403702]
[65.47747803 52.17191315]
[75.23302460 46.46564102]
[70.71691895 32.16162872]
[56.86073303 20.13353157]
[61.14809036 3.17868423]
[56.23610306 -10.99425983]
[51.32411194 -25.16720390]
[46.41212082 -39.34014893]
[41.50013351 -53.51309204]
[36.58814240 -67.68603516]
[21.88621521 -72.28598785]
[12.81793213 -84.51789856]
[12.69255638 -99.56610107]
[21.34859848 -111.65786743]
[16.43660736 -125.83081055]
[10.58985138 -133.03620911]
[11.59103489 -140.46655273]
[7.07492447 -154.77055359]
[-6.78125715 -166.79866028]
[-2.49389887 -183.75350952]
[-7.40588903 -197.92645264]
[-12.31787872 -212.09939575]
[-29.72040367 -216.75111389]
[-40.83593750 -230.72811890]
[-41.43949509 -248.42051697]
[-31.47872162 -262.86660767]
[-37.17077637 -276.74468994]
[-42.86283493 -290.62274170]
[-56.16219711 -300.21746826]
[-54.23362732 -316.50283813]
[-39.06107330 -322.72583008]
[-26.25275803 -312.48477173]
[-28.98477745 -296.31478882]
[-23.29272079 -282.43673706]
[-17.60066414 -268.55868530]
[-5.35493469 -267.42892456]
[5.28256655 -261.11453247]
[12.21989441 -250.78466797]
[14.06173229 -238.40504456]
[10.38964748 -226.36392212]
[1.85506546 -217.01138306]
[6.76705551 -202.83843994]
[11.67904568 -188.66549683]
[22.48828125 -183.04150391]
[26.64687729 -171.16079712]
[21.37893677 -159.28666687]
[25.89504623 -144.98265076]
[30.60955238 -130.74279785]
[35.52154160 -116.56986237]
[49.80378342 -112.42792511]
[59.01743698 -100.52950287]
[59.46337128 -85.30929565]
[50.76108551 -72.59803009]
[55.67307663 -58.42508316]
[60.58506775 -44.25214005]
[65.49705505 -30.07919502]
[70.40904999 -15.90625000]
[75.32103729 -1.73330569]
[86.13027191 3.89068961]
[90.28886414 15.77139378]
[85.02092743 27.64551926]
[89.53704071 41.94953156]
[106.02087402 41.32223892]
[122.03382874 45.28400040]
[136.32357788 53.52497101]
[147.77253723 65.40064240]
[155.48532104 79.98225403]
[158.85871887 96.12940979]
[157.62892151 112.57926941]
[151.89208984 128.04533386]
[142.09690857 141.31803894]
[151.37922668 153.10102844]
[160.82443237 164.75382996]
[170.43070984 176.27423096]
[180.03697205 187.79463196]
[189.64324951 199.31501770]
[204.76307678 196.61569214]
[219.20143127 201.85299683]
[229.07447815 213.61814880]
[231.72639465 228.74636841]
[226.44386292 243.16822815]
[214.64782715 253.00434875]
[199.51136780 255.60884094]
[185.10612488 250.28111267]
[175.30703735 238.45431519]
[172.75000000 223.30976868]
[178.12284851 208.92129517]
[168.51658630 197.40089417]
[158.91030884 185.88050842]
[149.30403137 174.36010742]
[142.50794983 171.19380188]
[139.59625244 162.38333130]
[130.31393433 150.60035706]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 9]
[2 8]
[3 7]
[21 81]
[22 80]
[24 77]
[25 76]
[26 75]
[27 74]
[28 73]
[29 72]
[33 68]
[34 67]
[36 66]
[37 65]
[39 62]
[40 61]
[41 60]
[45 54]
[46 53]
[47 52]
[90 112]
[91 111]
[92 109]
[93 108]
[94 107]
[95 106]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
