%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:01:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCAUCAAUCAUCCGACAAAAGCAUUCACUUACAACAUCAUUGUGCUGUGUUUCUCUUGUCAAACGUCACCAUUCAUCUUAGCAGACUACAAAAAGACAUGGGAAAGACCAAAAACACAUCGCUGGAUGCCGUGGUGACAGAUUUCAUUCUUCUGGGUUUGUCUCACCCCCCAAAUCUAAGAAGCCUCCUCUUCCUGG\
) } def
/len { sequence length } bind def

/coor [
[105.47486877 215.69720459]
[102.65019226 200.96556091]
[99.82551575 186.23391724]
[89.82994843 175.19137573]
[94.83008575 160.18106079]
[92.00540924 145.44943237]
[85.44226074 141.81968689]
[80.85842133 156.10214233]
[78.94715118 170.97987366]
[65.56639099 177.75889587]
[52.43996811 170.49961853]
[51.06888580 155.56240845]
[62.65493393 146.03472900]
[72.31595612 134.56019592]
[65.75279999 130.93046570]
[51.77328110 136.36856079]
[37.79375839 141.80667114]
[23.81423569 147.24476624]
[9.83471489 152.68287659]
[-0.22152381 164.89691162]
[-14.88801765 162.30014038]
[-28.86754036 167.73823547]
[-31.37586784 181.29745483]
[-40.18852615 191.76197815]
[-52.92018890 196.46551514]
[-66.20590210 194.27902222]
[-76.59033203 185.87957764]
[-90.65396118 191.09632874]
[-104.71758270 196.31306458]
[-116.12885284 210.75944519]
[-133.29991150 207.15728760]
[-147.27941895 212.59539795]
[-161.25894165 218.03349304]
[-175.23846436 223.47160339]
[-189.21798706 228.90969849]
[-196.96783447 242.95674133]
[-212.80580139 245.51371765]
[-224.58238220 234.61914062]
[-223.26356506 218.63038635]
[-209.86105347 209.81266785]
[-194.65609741 214.93017578]
[-180.67657471 209.49208069]
[-166.69705200 204.05397034]
[-152.71752930 198.61587524]
[-138.73800659 193.17776489]
[-133.57780457 182.23027039]
[-121.96773529 177.58839417]
[-109.93432617 182.24943542]
[-95.87069702 177.03269958]
[-81.80707550 171.81596375]
[-77.89093781 155.87876892]
[-65.12142944 145.30755615]
[-48.40150070 144.41822815]
[-34.30564499 153.75871277]
[-20.32612038 148.32061768]
[-11.26979160 136.49554443]
[4.39661121 138.70335388]
[18.37613297 133.26524353]
[32.35565567 127.82714081]
[46.33517838 122.38903809]
[60.31469727 116.95093536]
[57.70286179 98.16609192]
[63.37225342 80.44729614]
[75.90675354 67.19391632]
[92.60652924 60.80537033]
[110.06510925 62.24990463]
[111.48381042 47.31714630]
[112.90250397 32.38438797]
[114.32119751 17.45162773]
[115.73989868 2.51886868]
[117.15859222 -12.41389084]
[118.57729340 -27.34664917]
[119.99598694 -42.27940750]
[111.95008087 -58.83773422]
[122.66143036 -72.73332977]
[123.84421539 -87.68663025]
[125.02700806 -102.63992310]
[126.20979309 -117.59321594]
[127.39257812 -132.54650879]
[124.94791412 -141.35813904]
[128.71389771 -147.72590637]
[130.13259888 -162.65867615]
[131.55130005 -177.59143066]
[111.86165619 -187.21856689]
[99.41082764 -206.74601746]
[98.92881012 -231.14292908]
[111.84047699 -253.30015564]
[108.09178162 -267.82418823]
[94.35261536 -275.63513184]
[90.24135590 -290.89529419]
[98.19712067 -304.55111694]
[113.49991608 -308.50082397]
[127.07085419 -300.40112305]
[130.85853577 -285.05740356]
[122.61580658 -271.57287598]
[126.36450195 -257.04885864]
[133.86076355 -257.28561401]
[140.94667053 -270.50643921]
[148.85328674 -257.75915527]
[156.34954834 -257.99591064]
[159.17422485 -272.72753906]
[161.99890137 -287.45919800]
[152.92164612 -300.39669800]
[155.73350525 -315.94882202]
[168.76625061 -324.88879395]
[184.28779602 -321.91265869]
[193.08947754 -308.78610229]
[189.94940186 -293.29690552]
[176.73054504 -284.63452148]
[173.90586853 -269.90286255]
[171.08119202 -255.17123413]
[178.43965149 -247.43974304]
[183.82199097 -238.43823242]
[187.03410339 -228.64938354]
[187.99560547 -218.57830811]
[186.74008179 -208.72657776]
[183.40959167 -199.56738281]
[178.24380493 -191.52262878]
[171.56472778 -184.94371033]
[163.75749207 -180.09622192]
[155.24884033 -177.14974976]
[146.48405457 -176.17272949]
[145.06535339 -161.23997498]
[143.64665222 -146.30722046]
[142.34587097 -131.36372375]
[141.16308594 -116.41043091]
[139.98030090 -101.45713043]
[138.79751587 -86.50383759]
[137.61471558 -71.55054474]
[145.22854614 -62.14283752]
[144.35923767 -49.66946030]
[134.92874146 -40.86071014]
[133.51005554 -25.92795181]
[132.09135437 -10.99519348]
[130.67265320 3.93756580]
[129.25396729 18.87032509]
[127.83526611 33.80308533]
[126.41656494 48.73584366]
[124.99787140 63.66860199]
[135.72930908 74.14888000]
[150.62428284 72.37699890]
[165.51927185 70.60511780]
[175.09811401 58.03446960]
[190.77113342 56.00176239]
[203.23980713 65.71297455]
[205.10670471 81.40661621]
[195.26420593 93.77191925]
[179.55169678 95.47277832]
[167.29115295 85.50009918]
[152.39616394 87.27198029]
[137.50119019 89.04386139]
[137.26689148 96.93734741]
[135.45828247 104.28449249]
[132.28501892 110.78839874]
[145.11466980 118.56015015]
[157.94432068 126.33190918]
[170.77397156 134.10366821]
[183.60360718 141.87542725]
[196.43325806 149.64717102]
[209.26290894 157.41893005]
[222.09254456 165.19068909]
[235.51359558 157.72268677]
[250.87030029 157.98178101]
[264.03179932 165.89825439]
[271.45770264 179.34265137]
[271.15045166 194.69847107]
[263.19274902 207.83508301]
[249.72515869 215.21879578]
[234.37037659 214.86344910]
[221.25877380 206.86460876]
[213.91731262 193.37391663]
[214.32080078 178.02033997]
[201.49114990 170.24858093]
[188.66149902 162.47682190]
[175.83184814 154.70506287]
[163.00221252 146.93330383]
[150.17256165 139.16156006]
[137.34291077 131.38980103]
[124.51326752 123.61804199]
[117.83613586 134.22851562]
[106.73705292 142.62475586]
[109.56172943 157.35639954]
[119.75933838 169.45265198]
[114.55715179 183.40924072]
[117.38182831 198.14088440]
[120.20650482 212.87252808]
[135.04588318 216.29490662]
[147.20642090 225.46231079]
[154.58120728 238.78643799]
[155.89254761 253.95878601]
[150.91322327 268.35067749]
[140.50595093 279.46859741]
[126.47382355 285.38632202]
[111.24802399 285.07858276]
[97.46649170 278.59866333]
[87.51696777 267.06927490]
[83.12327576 252.48793030]
[85.04663849 237.38095093]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 186]
[2 185]
[3 184]
[5 182]
[6 181]
[15 61]
[16 60]
[17 59]
[18 58]
[19 57]
[21 55]
[22 54]
[27 50]
[28 49]
[29 48]
[31 45]
[32 44]
[33 43]
[34 42]
[35 41]
[66 139]
[67 138]
[68 137]
[69 136]
[70 135]
[71 134]
[72 133]
[73 132]
[75 129]
[76 128]
[77 127]
[78 126]
[79 125]
[81 124]
[82 123]
[83 122]
[87 96]
[88 95]
[100 111]
[101 110]
[102 109]
[140 151]
[141 150]
[142 149]
[154 179]
[155 178]
[156 177]
[157 176]
[158 175]
[159 174]
[160 173]
[161 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
