%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:04:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGCUGGUUCCGUAACAACAUCCCGUUGGCUUCCCUCAGGCGGCGGGACCAGUGCAGCCGCCGCCUCCCAGGAUCGUCCGCCGGUCAGGGCCCUUGCCCUCCCCGGCACAGGCCACCAUGGCCACCAACCCACAGCCGCAGCCGCCUCCUCCGGCGCCGCCGCCUCCCCCGCCGCAGCCGCAGCCGCAGCCACCGCCGCCGCCGCCGGGCCCCGGGG\
) } def
/len { sequence length } bind def

/coor [
[240.76458740 192.98371887]
[231.92088318 182.16990662]
[229.89912415 168.20104980]
[216.27923584 161.91624451]
[202.65934753 155.63143921]
[189.03945923 149.34663391]
[179.88244629 163.10240173]
[168.62048340 175.19538879]
[155.55033875 185.30696106]
[141.01643372 193.17065430]
[125.40172577 198.57925415]
[109.11767578 201.39025879]
[92.59336853 201.52960205]
[76.26422882 198.99359131]
[60.56053543 193.84906006]
[45.89608765 186.23156738]
[37.00950241 198.31579590]
[28.12291908 210.40003967]
[19.23633385 222.48426819]
[20.22346687 238.49691772]
[8.22361660 249.14506531]
[-7.55795670 246.26037598]
[-15.01498127 232.05570984]
[-8.42706585 217.42768860]
[7.15210438 213.59768677]
[16.03868866 201.51344299]
[24.92527199 189.42921448]
[33.81185532 177.34498596]
[24.73101044 168.53974915]
[16.81222534 158.67633057]
[10.17776012 147.90702820]
[4.93004322 136.39808655]
[1.15009189 124.32720947]
[-1.10373521 111.88075256]
[-16.08971977 112.52904510]
[-31.07570267 113.17733765]
[-47.58141708 124.75580597]
[-64.32119751 115.07163239]
[-79.28227234 116.15152740]
[-94.24334717 117.23141479]
[-109.20442963 118.31130219]
[-124.16550446 119.39118958]
[-139.12658691 120.47107697]
[-154.08766174 121.55096436]
[-169.04873657 122.63085175]
[-184.00981140 123.71073914]
[-190.06999207 137.76538086]
[-201.97483826 147.38481140]
[-216.98866272 150.35858154]
[-231.66143799 146.00331116]
[-242.62145996 135.31983948]
[-247.35017395 120.76313019]
[-244.76098633 105.67821503]
[-235.44885254 93.53149414]
[-221.55363464 87.11419678]
[-206.26837158 87.90097809]
[-193.10546875 95.71102905]
[-185.08970642 108.74966431]
[-170.12863159 107.66977692]
[-155.16754150 106.58988953]
[-140.20646667 105.51000214]
[-125.24539185 104.43011475]
[-110.28431702 103.35021973]
[-95.32324219 102.27033234]
[-80.36215973 101.19044495]
[-65.40108490 100.11055756]
[-59.44115829 91.81827545]
[-49.69705963 88.09452057]
[-39.29715347 90.39308929]
[-31.72399521 98.19135284]
[-16.73801041 97.54306030]
[-1.75202715 96.89476776]
[-0.53163505 83.98413849]
[2.32019424 71.33341980]
[6.75718117 59.14789963]
[12.70732117 47.62533188]
[20.07405663 36.95270920]
[28.73783684 27.30322266]
[38.55806732 18.83346558]
[49.37538147 11.68088818]
[42.89496231 -1.84701502]
[36.41454315 -15.37491798]
[29.93412209 -28.90282059]
[23.45370293 -42.43072510]
[8.81851768 -47.76449585]
[2.43916035 -61.57602692]
[7.61428690 -75.49556732]
[1.13386703 -89.02347565]
[-5.34655285 -102.55137634]
[-11.82697296 -116.07927704]
[-18.30739212 -129.60717773]
[-32.13631439 -138.42153931]
[-31.14709091 -154.79083252]
[-16.35735321 -161.87571716]
[-2.98151350 -152.38789368]
[-4.77948952 -136.08760071]
[1.70093036 -122.55970001]
[8.18134975 -109.03179932]
[14.66176987 -95.50389099]
[21.14218903 -81.97599030]
[35.23237228 -77.28531647]
[41.99714661 -63.65841675]
[36.98160553 -48.91114426]
[43.46202469 -35.38323975]
[49.94244385 -21.85533714]
[56.42286682 -8.32743454]
[62.90328598 5.20046806]
[75.74855042 1.13147736]
[89.01869202 -1.20537746]
[102.48122406 -1.76915550]
[115.90028381 -0.54997969]
[119.32835388 -15.15300465]
[122.75642395 -29.75602913]
[126.18449402 -44.35905457]
[129.61256409 -58.96208191]
[127.34608459 -75.76384735]
[142.86380005 -82.59294891]
[153.72175598 -69.57214355]
[144.21559143 -55.53401184]
[140.78752136 -40.93098450]
[137.35945129 -26.32796097]
[133.93138123 -11.72493553]
[130.50331116 2.87808943]
[145.81501770 9.09289455]
[159.91947937 17.70313835]
[172.44503784 28.48193550]
[183.06164551 41.14525986]
[191.48954773 55.35943222]
[197.50666809 70.74990082]
[200.95443726 86.91111755]
[201.74201965 103.41722870]
[199.84867859 119.83330536]
[195.32426453 135.72676086]
[208.94415283 142.01156616]
[222.56404114 148.29635620]
[236.18392944 154.58116150]
[256.71740723 146.08074951]
[276.00109863 156.17340088]
[289.96044922 150.68370056]
[299.97149658 138.43261719]
[314.64749146 140.97520447]
[328.60684204 135.48550415]
[342.48562622 129.79521179]
[356.28094482 123.90551758]
[370.07629395 118.01582336]
[383.87164307 112.12612915]
[389.52819824 97.36879730]
[403.99682617 91.00997162]
[418.69351196 96.82223511]
[424.89901733 111.35727692]
[418.93170166 125.99170685]
[404.33187866 132.04318237]
[389.76135254 125.92147064]
[375.96600342 131.81117249]
[362.17065430 137.70086670]
[348.37530518 143.59056091]
[345.79724121 147.60519409]
[340.67218018 150.04573059]
[334.09652710 149.44483948]
[320.13717651 154.93453979]
[311.12460327 166.79296875]
[295.45013428 164.64305115]
[281.49078369 170.13275146]
[281.49322510 173.92706299]
[280.93109131 177.67950439]
[279.81689453 181.30654907]
[278.17544556 184.72743225]
[288.39312744 195.70919800]
[298.61080933 206.69096375]
[308.82849121 217.67272949]
[319.04614258 228.65449524]
[334.60589600 229.38412476]
[344.81161499 240.66674805]
[344.02014160 255.49607849]
[354.23782349 266.47784424]
[360.42773438 268.77679443]
[363.99542236 273.19198608]
[364.58605957 277.92642212]
[374.48303223 289.19808960]
[384.46093750 300.39813232]
[394.51928711 311.52600098]
[409.51309204 316.57546997]
[412.30746460 331.20559692]
[422.36584473 342.33346558]
[437.35961914 347.38293457]
[440.15399170 362.01306152]
[450.21237183 373.14089966]
[465.20614624 378.19036865]
[468.00054932 392.82049561]
[478.05889893 403.94836426]
[493.82284546 408.46835327]
[497.52731323 424.44360352]
[485.36148071 435.44015503]
[469.84051514 430.14572144]
[466.93103027 414.00674438]
[456.87268066 402.87887573]
[442.59832764 398.62533569]
[439.08450317 383.19927979]
[429.02612305 372.07141113]
[414.75180054 367.81787109]
[411.23797607 352.39181519]
[401.17959595 341.26394653]
[386.90527344 337.01043701]
[383.39144897 321.58435059]
[373.33306885 310.45648193]
[366.51950073 307.60366821]
[363.21136475 299.09503174]
[353.31442261 287.82339478]
[343.25604248 276.69552612]
[333.03839111 265.71374512]
[318.19055176 265.43557739]
[307.67193604 254.44406128]
[308.06439209 238.87216187]
[297.84671021 227.89039612]
[287.62902832 216.90864563]
[277.41137695 205.92687988]
[267.19369507 194.94511414]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 136]
[4 135]
[5 134]
[6 133]
[16 28]
[17 27]
[18 26]
[19 25]
[34 72]
[35 71]
[36 70]
[38 66]
[39 65]
[40 64]
[41 63]
[42 62]
[43 61]
[44 60]
[45 59]
[46 58]
[80 107]
[81 106]
[82 105]
[83 104]
[84 103]
[87 100]
[88 99]
[89 98]
[90 97]
[91 96]
[111 123]
[112 122]
[113 121]
[114 120]
[115 119]
[138 163]
[139 162]
[141 160]
[142 159]
[143 156]
[144 155]
[145 154]
[146 153]
[167 217]
[168 216]
[169 215]
[170 214]
[171 213]
[174 210]
[175 209]
[178 208]
[179 207]
[180 205]
[181 204]
[183 202]
[184 201]
[186 199]
[187 198]
[189 196]
[190 195]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
