%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:20:07 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MYBPHL)
} def

/sequence { (\
ACCAGCAGUGAAAAUCUAGAGCUGGAGCUCAGCCUCUGGGAAGGCCCAGCAUGGAGGCAGCCACAGCUCCGGAGGUGGCCGCAGGAUCCAAGCUGAAGGUGAAAGAAGCCAGCCCAGCGGAUGCUGAACCACCCCAGGCUUCACCUGGAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.064269954 ubox
2 8 0.067927906 ubox
2 72 0.010474489 ubox
2 148 0.875674022 ubox
3 10 0.208243107 ubox
3 71 0.010485862 ubox
3 147 0.879607840 ubox
4 9 0.200145297 ubox
4 17 0.004324166 ubox
4 140 0.003561032 ubox
4 146 0.879151509 ubox
5 16 0.004509809 ubox
5 139 0.004187986 ubox
5 145 0.869192880 ubox
6 138 0.004288239 ubox
6 147 0.047592117 ubox
7 17 0.012656300 ubox
7 140 0.012194628 ubox
7 146 0.047820040 ubox
8 15 0.021225351 ubox
8 16 0.013276916 ubox
8 139 0.012849922 ubox
8 144 0.871320481 ubox
8 145 0.034127173 ubox
8 150 0.051666073 ubox
9 14 0.027016231 ubox
9 18 0.004416708 ubox
9 138 0.012417293 ubox
9 143 0.880409583 ubox
9 149 0.050919418 ubox
10 16 0.012243875 ubox
10 17 0.004222319 ubox
10 141 0.004076672 ubox
10 142 0.880742135 ubox
11 15 0.010943673 ubox
11 140 0.016902447 ubox
11 141 0.869060350 ubox
12 140 0.792042196 ubox
12 141 0.093400627 ubox
13 140 0.128410201 ubox
13 141 0.017330912 ubox
14 140 0.042091304 ubox
15 55 0.004053813 ubox
15 72 0.012899411 ubox
15 73 0.543416751 ubox
15 138 0.453404439 ubox
15 149 0.004362126 ubox
16 39 0.003351090 ubox
16 54 0.004319653 ubox
16 71 0.020723612 ubox
16 72 0.581211691 ubox
16 74 0.003716767 ubox
16 137 0.490105601 ubox
16 138 0.256920674 ubox
16 148 0.004143284 ubox
17 38 0.003374099 ubox
17 53 0.004315773 ubox
17 71 0.570522218 ubox
17 73 0.005353005 ubox
17 136 0.467029418 ubox
17 137 0.247085284 ubox
17 147 0.004000203 ubox
18 37 0.003430123 ubox
18 52 0.004277401 ubox
18 140 0.006884977 ubox
18 146 0.003346880 ubox
19 30 0.009333557 ubox
19 36 0.003455081 ubox
19 69 0.992544035 ubox
19 139 0.007041537 ubox
20 29 0.009343611 ubox
20 35 0.003450609 ubox
20 68 0.998950885 ubox
20 140 0.004328583 ubox
21 28 0.009345991 ubox
21 50 0.004827073 ubox
21 67 0.999888116 ubox
21 139 0.004823433 ubox
22 27 0.009315679 ubox
22 32 0.003729212 ubox
22 49 0.004832848 ubox
22 66 0.999892348 ubox
22 72 0.005064675 ubox
22 138 0.004810731 ubox
23 31 0.003729252 ubox
23 48 0.004831753 ubox
23 65 0.999652832 ubox
23 71 0.005114191 ubox
23 137 0.004439348 ubox
24 30 0.003727417 ubox
24 47 0.004831582 ubox
24 64 0.999828831 ubox
24 70 0.007981515 ubox
25 46 0.004829549 ubox
25 69 0.008017388 ubox
26 68 0.008035103 ubox
27 45 0.004695082 ubox
27 61 0.999734128 ubox
27 67 0.008037030 ubox
28 44 0.004674733 ubox
28 60 0.999786831 ubox
28 66 0.008035775 ubox
29 43 0.003856541 ubox
29 57 0.003530610 ubox
29 59 0.925673080 ubox
29 65 0.007749783 ubox
30 53 0.003543757 ubox
30 56 0.007098609 ubox
31 52 0.003548727 ubox
31 140 0.004295527 ubox
32 58 0.995512250 ubox
32 139 0.005606306 ubox
33 39 0.003418022 ubox
33 54 0.056064799 ubox
33 57 0.998353765 ubox
33 138 0.005613838 ubox
34 38 0.003394936 ubox
34 53 0.056120360 ubox
34 54 0.008312844 ubox
34 56 0.998318749 ubox
34 137 0.005611841 ubox
35 53 0.014157827 ubox
35 54 0.035834205 ubox
35 55 0.996050426 ubox
35 136 0.005248557 ubox
36 49 0.486335555 ubox
36 53 0.043817265 ubox
36 54 0.872430024 ubox
37 48 0.782086001 ubox
37 51 0.022735822 ubox
37 53 0.618502773 ubox
38 46 0.058625147 ubox
38 47 0.994861484 ubox
38 50 0.024652345 ubox
38 52 0.065578888 ubox
39 45 0.059004293 ubox
39 46 0.995562722 ubox
39 47 0.061374742 ubox
40 45 0.991099805 ubox
40 46 0.061392674 ubox
44 50 0.020054273 ubox
45 49 0.019940361 ubox
47 53 0.003355472 ubox
48 52 0.006040105 ubox
53 70 0.005925733 ubox
54 69 0.005931696 ubox
55 68 0.005778013 ubox
56 67 0.005106576 ubox
56 70 0.004695139 ubox
57 69 0.004700689 ubox
58 66 0.004110961 ubox
59 68 0.007003819 ubox
60 67 0.007317672 ubox
61 66 0.007297728 ubox
65 140 0.004397811 ubox
66 139 0.005761575 ubox
67 138 0.005762301 ubox
68 137 0.004200395 ubox
68 138 0.011361502 ubox
69 137 0.031776231 ubox
69 138 0.092131178 ubox
70 137 0.203811832 ubox
71 134 0.008652586 ubox
71 135 0.807975422 ubox
72 133 0.006175866 ubox
72 134 0.808912721 ubox
74 133 0.998709352 ubox
74 134 0.022663960 ubox
74 135 0.012306322 ubox
75 132 0.999757648 ubox
75 133 0.016239789 ubox
75 134 0.011689699 ubox
76 131 0.999712784 ubox
77 130 0.999869934 ubox
77 133 0.009750089 ubox
78 129 0.992661791 ubox
78 132 0.009735405 ubox
80 126 0.020456843 ubox
81 124 0.011084683 ubox
81 125 0.009436529 ubox
82 123 0.011172904 ubox
82 126 0.994930860 ubox
83 122 0.009260961 ubox
83 125 0.999243390 ubox
84 124 0.999531905 ubox
84 125 0.011816735 ubox
85 124 0.012806868 ubox
86 122 0.993717666 ubox
87 121 0.999707746 ubox
88 120 0.999934045 ubox
89 119 0.994714028 ubox
92 113 0.043514138 ubox
92 118 0.994453216 ubox
93 112 0.043567174 ubox
93 117 0.998888262 ubox
94 111 0.043247785 ubox
94 116 0.998404870 ubox
95 110 0.029990676 ubox
95 115 0.990512184 ubox
98 110 0.632403489 ubox
98 114 0.753781877 ubox
98 115 0.012117278 ubox
99 109 0.633546357 ubox
99 113 0.757317765 ubox
99 114 0.013389569 ubox
100 108 0.629640471 ubox
100 111 0.449294822 ubox
100 112 0.621741407 ubox
101 110 0.545760190 ubox
112 118 0.006352373 ubox
113 117 0.006314428 ubox
129 138 0.003673201 ubox
130 137 0.003686806 ubox
133 137 0.003264629 ubox
134 148 0.471717264 ubox
135 147 0.472846269 ubox
136 146 0.472792787 ubox
137 145 0.472921943 ubox
138 144 0.471621713 ubox
2 148 0.9500000 lbox
3 147 0.9500000 lbox
4 146 0.9500000 lbox
5 145 0.9500000 lbox
8 144 0.9500000 lbox
9 143 0.9500000 lbox
10 142 0.9500000 lbox
11 141 0.9500000 lbox
12 140 0.9500000 lbox
19 69 0.9500000 lbox
20 68 0.9500000 lbox
21 67 0.9500000 lbox
22 66 0.9500000 lbox
23 65 0.9500000 lbox
24 64 0.9500000 lbox
27 61 0.9500000 lbox
28 60 0.9500000 lbox
29 59 0.9500000 lbox
32 58 0.9500000 lbox
33 57 0.9500000 lbox
34 56 0.9500000 lbox
35 55 0.9500000 lbox
36 54 0.9500000 lbox
37 53 0.9500000 lbox
38 47 0.9500000 lbox
39 46 0.9500000 lbox
40 45 0.9500000 lbox
71 135 0.9500000 lbox
72 134 0.9500000 lbox
74 133 0.9500000 lbox
75 132 0.9500000 lbox
76 131 0.9500000 lbox
77 130 0.9500000 lbox
78 129 0.9500000 lbox
82 126 0.9500000 lbox
83 125 0.9500000 lbox
84 124 0.9500000 lbox
86 122 0.9500000 lbox
87 121 0.9500000 lbox
88 120 0.9500000 lbox
89 119 0.9500000 lbox
92 118 0.9500000 lbox
93 117 0.9500000 lbox
94 116 0.9500000 lbox
95 115 0.9500000 lbox
98 110 0.9500000 lbox
99 109 0.9500000 lbox
100 108 0.9500000 lbox
showpage
end
%%EOF
