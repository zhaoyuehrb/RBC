%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:05:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCCUACGCAUUUUCCUGGGCGGGAACAGCAAAAUGGCGCCAGAACUAGUGGCGGGCUGAGGACGCCGUACCCCUCGGAAGGCAGCCCUGCGGUCCCUUUGCCGCCCGUUCCCUCCCGGACAUGGAGGACGUGGAGGCGCGCUUCGCCCACCUCUUGCAGCCCAUCCGCGACCUCACCAAGAACUGGGAGGUGGACGUGGCGGCCCAGCUGGGCGAGUAUC\
) } def
/len { sequence length } bind def

/coor [
[485.97491455 271.04418945]
[472.33843994 264.79550171]
[458.70193481 258.54678345]
[445.06546021 252.29809570]
[431.42898560 246.04940796]
[417.79248047 239.80070496]
[402.99893188 241.53276062]
[393.67639160 228.74992371]
[380.03991699 222.50122070]
[366.40344238 216.25253296]
[351.60986328 217.98457336]
[342.28735352 205.20173645]
[328.65084839 198.95303345]
[315.01437378 192.70434570]
[301.37786865 186.45564270]
[287.74139404 180.20695496]
[274.10491943 173.95826721]
[260.25683594 168.19361877]
[246.21438599 162.92016602]
[232.17192078 157.64671326]
[218.12945557 152.37326050]
[203.49449158 155.14221191]
[193.29541016 143.04719543]
[179.25296021 137.77374268]
[165.21049500 132.50028992]
[151.16802979 127.22684479]
[137.12556458 121.95339966]
[123.08310699 116.67994690]
[107.38633728 135.99604797]
[76.84620667 138.60166931]
[64.45545959 147.05563354]
[61.76911926 162.62994385]
[48.80889130 171.67472839]
[33.26385498 168.82386780]
[24.35660362 155.76873779]
[27.37165070 140.25471497]
[40.52022171 131.48597717]
[56.00150681 134.66488647]
[68.39225006 126.21092987]
[62.23976517 112.53076172]
[47.69331741 116.19147491]
[33.14686966 119.85219574]
[18.60042000 123.51290894]
[11.93942261 137.66087341]
[-2.27893615 144.17027283]
[-17.34118080 139.96757507]
[-26.13538170 127.03713989]
[-24.50918388 111.48433685]
[-13.23042965 100.65273285]
[2.37539840 99.65666962]
[14.93970585 108.96646118]
[29.48615456 105.30574799]
[44.03260422 101.64502716]
[58.57905197 97.98431396]
[60.16098785 83.06796265]
[46.70595169 76.43758392]
[33.25091171 69.80720520]
[19.79587555 63.17681885]
[6.34083748 56.54644012]
[-7.11420012 49.91605759]
[-17.11132050 58.07616806]
[-29.40651894 61.83847046]
[-42.16514587 60.67847824]
[-53.49731827 54.80346298]
[-61.73783875 45.11647415]
[-65.69089508 33.07771683]
[-64.80348206 20.48447609]
[-78.06639099 13.47767067]
[-91.32929230 6.47086573]
[-105.74337769 12.53454971]
[-120.66751099 7.86504602]
[-129.05497742 -5.33284950]
[-126.94546509 -20.82749367]
[-115.33502960 -31.30278969]
[-99.70576477 -31.81262207]
[-87.43732452 -22.11626434]
[-84.32248688 -6.79204035]
[-71.05958557 0.21476473]
[-57.79667664 7.22157001]
[-43.55431747 -2.46555901]
[-26.27820206 -3.60553384]
[-10.72715378 4.20617867]
[-1.23070157 18.89581871]
[-0.48381862 36.46101761]
[12.97121906 43.09140015]
[26.42625618 49.72178268]
[39.88129425 56.35216522]
[53.33633041 62.98254776]
[66.79136658 69.61293030]
[75.46073151 72.64862061]
[83.15786743 77.03495789]
[77.78563690 63.02999115]
[72.41340637 49.02502060]
[67.04117584 35.02005386]
[61.66894531 21.01508522]
[47.13233948 14.81326199]
[41.31636047 0.11802617]
[47.67152786 -14.35219860]
[62.42743301 -20.01248360]
[76.82965851 -13.50468445]
[82.33361816 1.31023860]
[75.67391205 15.64285469]
[81.04614258 29.64782333]
[86.41837311 43.65279007]
[91.79060364 57.65776062]
[97.16283417 71.66272736]
[113.35234070 74.84516907]
[125.06015015 86.47080231]
[128.35655212 102.63748932]
[142.39901733 107.91093445]
[156.44148254 113.18438721]
[170.48394775 118.45783234]
[184.52639771 123.73128510]
[198.56886292 129.00473022]
[214.20823669 126.61298370]
[223.40290833 138.33081055]
[237.44537354 143.60424805]
[251.48782349 148.87770081]
[265.53030396 154.15115356]
[261.75216675 139.63475037]
[270.62963867 127.54382324]
[285.61126709 126.80129242]
[295.64080811 137.95513916]
[293.31661987 152.77398682]
[280.35360718 160.32177734]
[293.99008179 166.57046509]
[307.62658691 172.81916809]
[321.26306152 179.06785583]
[334.89956665 185.31654358]
[348.53604126 191.56524658]
[364.30496216 190.28013611]
[372.65213013 202.61604309]
[386.28860474 208.86473083]
[399.92510986 215.11343384]
[415.69403076 213.82832336]
[424.04116821 226.16421509]
[437.67767334 232.41291809]
[451.31414795 238.66160583]
[464.95065308 244.91030884]
[478.58712769 251.15899658]
[492.22363281 257.40768433]
[506.03073120 263.26974487]
[519.99749756 268.74047852]
[533.96429443 274.21124268]
[543.08721924 274.42611694]
[548.08837891 279.85867310]
[561.97674561 285.52563477]
[575.86505127 291.19259644]
[589.75335693 296.85955811]
[603.64172363 302.52651978]
[617.53002930 308.19348145]
[612.67517090 294.00085449]
[619.16052246 280.47531128]
[633.26647949 275.37423706]
[646.90283203 281.62322998]
[652.24865723 295.63833618]
[646.23785400 309.38134766]
[632.31884766 314.97021484]
[645.67913818 321.78945923]
[665.74969482 319.84930420]
[675.53900146 336.53018188]
[689.08605957 342.97036743]
[702.63317871 349.41055298]
[712.64331055 345.18374634]
[723.11242676 347.11904907]
[730.63317871 354.34136963]
[732.89300537 364.29565430]
[746.25335693 371.11492920]
[759.61364746 377.93417358]
[772.97393799 384.75344849]
[786.33422852 391.57272339]
[799.83563232 398.10815430]
[813.47210693 404.35687256]
[827.10858154 410.60556030]
[840.74511719 416.85424805]
[854.38159180 423.10293579]
[863.47796631 423.83129883]
[868.16522217 429.53692627]
[881.71228027 435.97711182]
[895.25939941 442.41726685]
[910.79620361 438.41888428]
[923.52209473 448.18777466]
[923.67486572 464.23010254]
[911.13732910 474.23956299]
[895.52716064 470.53775024]
[888.81921387 455.96438599]
[875.27215576 449.52420044]
[861.72503662 443.08401489]
[848.13287354 436.73944092]
[834.49639893 430.49075317]
[820.85992432 424.24203491]
[807.22344971 417.99334717]
[793.58691406 411.74465942]
[790.17926025 412.61764526]
[786.18017578 411.88888550]
[782.34460449 409.29864502]
[779.51495361 404.93301392]
[766.15466309 398.11376953]
[752.79437256 391.29449463]
[739.43408203 384.47521973]
[726.07379150 377.65594482]
[706.88201904 380.05554199]
[696.19299316 362.95764160]
[682.64587402 356.51745605]
[669.09881592 350.07730103]
[659.82830811 354.34963989]
[649.51922607 352.78576660]
[641.60650635 345.66287231]
[638.85986328 335.14978027]
[625.49957275 328.33050537]
[611.86309814 322.08181763]
[597.97473145 316.41485596]
[584.08642578 310.74789429]
[570.19812012 305.08093262]
[556.30975342 299.41397095]
[542.42144775 293.74700928]
[528.49353027 288.17800903]
[514.52679443 282.70727539]
[500.55999756 277.23651123]
[497.94638062 278.22683716]
[494.78463745 278.24615479]
[491.44100952 277.08117676]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 141]
[2 140]
[3 139]
[4 138]
[5 137]
[6 136]
[8 134]
[9 133]
[10 132]
[12 130]
[13 129]
[14 128]
[15 127]
[16 126]
[17 125]
[18 119]
[19 118]
[20 117]
[21 116]
[23 114]
[24 113]
[25 112]
[26 111]
[27 110]
[28 109]
[30 39]
[31 38]
[40 54]
[41 53]
[42 52]
[43 51]
[55 89]
[56 88]
[57 87]
[58 86]
[59 85]
[60 84]
[67 79]
[68 78]
[69 77]
[91 106]
[92 105]
[93 104]
[94 103]
[95 102]
[142 219]
[143 218]
[144 217]
[146 216]
[147 215]
[148 214]
[149 213]
[150 212]
[151 211]
[158 210]
[159 209]
[161 205]
[162 204]
[163 203]
[167 201]
[168 200]
[169 199]
[170 198]
[171 197]
[172 193]
[173 192]
[174 191]
[175 190]
[176 189]
[178 188]
[179 187]
[180 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
