%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:17:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCCUAACUAGCAGGAAGUCCGGGGUUGACGAUGGCUGUGUUGUUGAAGGGCCUGUAGCCGGGGGGUUCCUGGCCGGAUCCCGGUCUACCCUUAGCCCAGACUCGUUCCGGACCCCAGCCCGGCCCGGAACACUCUGGGCGAGACGGCGGUGGCAACUCUCCCCUUGCCGCCAUGCACGACGCUUUCGAGCCAGUGCCGAUCCUAGAAAAGCUGCCUCUGCAAAUCGACUGUCUGGCUGCCUGGGAGGAAUGGC\
UUCUUGUGGGAACCAAAC\
) } def
/len { sequence length } bind def

/coor [
[98.37226868 385.10479736]
[97.68457031 370.12057495]
[87.44495392 355.84912109]
[96.09659576 339.57446289]
[95.23714447 324.59909058]
[94.37769318 309.62374878]
[82.73503876 319.08148193]
[68.05685425 315.99102783]
[61.21614838 302.64169312]
[67.28025055 288.92211914]
[81.75711060 284.99523926]
[93.92314148 293.77044678]
[93.92314148 278.77044678]
[93.92314148 263.77044678]
[93.92314148 248.77044678]
[93.92314148 233.77044678]
[93.92314148 218.77044678]
[93.92314148 203.77044678]
[93.92314148 188.77044678]
[93.92314148 173.77044678]
[93.92314148 158.77044678]
[80.39797211 152.28433228]
[68.70119476 161.67504883]
[57.00442505 171.06576538]
[45.30765533 180.45648193]
[39.39040756 195.12947083]
[24.62195587 197.06393433]
[12.92518425 206.45463562]
[11.06425190 221.91992188]
[-0.93171227 231.27680969]
[-15.66401863 229.40739441]
[-27.36079025 238.79811096]
[-39.05756378 248.18881226]
[-50.75433350 257.57952881]
[-62.45110703 266.97024536]
[-74.14788055 276.36096191]
[-85.84465027 285.75167847]
[-94.41046906 300.38256836]
[-110.84083557 296.20175171]
[-111.37178040 279.25610352]
[-95.23536682 274.05490112]
[-83.53859711 264.66418457]
[-71.84181976 255.27348328]
[-60.14505005 245.88276672]
[-48.44827652 236.49205017]
[-36.75150681 227.10133362]
[-25.05473328 217.71061707]
[-23.69589806 202.92247009]
[-11.96748161 193.23233032]
[3.53446937 194.75787354]
[15.23124123 185.36715698]
[20.31185532 171.36584473]
[35.91693878 168.75970459]
[47.61371231 159.36900330]
[59.31048203 149.97828674]
[71.00725555 140.58757019]
[51.12756729 110.91207123]
[56.15378952 75.40664673]
[83.70426941 52.23405838]
[73.40601349 41.32782745]
[63.10775757 30.42159462]
[52.80949783 19.51536179]
[39.80480957 12.04020023]
[25.19746971 8.63056660]
[10.59012794 5.22093391]
[-4.01721239 1.81130052]
[-18.62455368 -1.59833276]
[-33.23189545 -5.00796604]
[-40.45466614 0.94931203]
[-49.46964645 2.90832686]
[-58.24833679 0.55673891]
[-64.87373352 -5.46197367]
[-67.95884705 -13.71823597]
[-82.44029236 -17.62820244]
[-96.92173004 -21.53816795]
[-111.40317535 -25.44813347]
[-125.88461304 -29.35810089]
[-140.36605835 -33.26806641]
[-157.23368835 -31.55945015]
[-163.54495239 -47.29489517]
[-150.17158508 -57.71552277]
[-136.45608521 -47.74950790]
[-121.97464752 -43.83954239]
[-107.49320984 -39.92957687]
[-93.01176453 -36.01961136]
[-78.53032684 -32.10964584]
[-64.04888153 -28.19967842]
[-44.60068893 -35.16596985]
[-29.82225990 -19.61530685]
[-15.21492004 -16.20567322]
[-0.60757929 -12.79604053]
[13.99976158 -9.38640690]
[28.60710144 -5.97677374]
[43.21444321 -2.56714034]
[43.09594345 -14.07141113]
[48.83535385 -22.84474754]
[42.66107178 -36.51508713]
[36.48678970 -50.18542862]
[30.31250763 -63.85577011]
[24.13822365 -77.52611542]
[17.96394157 -91.19645691]
[11.78965855 -104.86679840]
[-1.25383592 -108.13460541]
[-9.91638374 -118.16367340]
[-11.21364594 -131.15695190]
[-4.89575624 -142.36206055]
[-10.91289711 -156.10229492]
[-16.93003845 -169.84252930]
[-22.94717789 -183.58274841]
[-28.96431923 -197.32298279]
[-34.98146057 -211.06321716]
[-40.99860001 -224.80345154]
[-53.62192917 -234.34086609]
[-51.63989258 -249.10301208]
[-57.65703201 -262.84323120]
[-72.71213531 -267.07147217]
[-81.48440552 -280.01678467]
[-79.83185577 -295.56680298]
[-68.53475952 -306.37927246]
[-52.92726517 -307.34890747]
[-40.37875366 -298.01782227]
[-36.81425095 -282.79193115]
[-43.91680145 -268.86038208]
[-37.89965820 -255.12014771]
[-25.70671844 -246.56553650]
[-27.25836754 -230.82060242]
[-21.24122620 -217.08036804]
[-15.22408581 -203.34013367]
[-9.20694542 -189.59989929]
[-3.18980432 -175.85966492]
[2.82733655 -162.11943054]
[8.84447765 -148.37919617]
[24.76769638 -142.91519165]
[31.93705940 -127.31040192]
[25.45999908 -111.04107666]
[31.63428307 -97.37073517]
[37.80856705 -83.70039368]
[43.98284912 -70.03005219]
[50.15713120 -56.35971451]
[56.33141327 -42.68937302]
[62.50569534 -29.01902962]
[72.76171112 -26.26986504]
[79.86698914 -17.80150223]
[80.87099457 -6.35482502]
[74.91426849 3.97815466]
[63.71573257 9.21710587]
[74.01398468 20.12333870]
[84.31224823 31.02957153]
[94.61050415 41.93580246]
[109.53932190 40.47624207]
[117.53020477 27.78192139]
[125.52108002 15.08759785]
[133.51196289 2.39327502]
[141.50283813 -10.30104828]
[149.49372864 -22.99537086]
[157.48460388 -35.68969345]
[165.47547913 -48.38401794]
[159.58555603 -62.73979950]
[163.29133606 -77.80787659]
[175.16784668 -87.79425812]
[190.64836121 -88.85898590]
[203.78027344 -80.59265137]
[209.51411438 -66.17382050]
[205.64509583 -51.14683151]
[193.66094971 -41.28986740]
[178.16979980 -40.39313507]
[170.17892456 -27.69881439]
[162.18804932 -15.00449085]
[154.19715881 -2.31016779]
[146.20628357 10.38415527]
[138.21540833 23.07847786]
[130.22453308 35.77280045]
[122.23364258 48.46712494]
[127.15985107 54.12242889]
[137.01226807 65.43303680]
[141.93847656 71.08834076]
[155.60882568 64.91405487]
[169.27915955 58.73977661]
[182.94950867 52.56549072]
[186.21731567 39.52199936]
[196.24638367 30.85944939]
[209.23966980 29.56218719]
[220.44476318 35.88007736]
[234.18499756 29.86293602]
[247.92523193 23.84579659]
[257.20428467 10.32427692]
[273.53051758 11.86898804]
[280.10891724 26.89086151]
[270.17218018 39.93668365]
[253.94236755 37.58602905]
[240.20213318 43.60316849]
[226.46189880 49.62031174]
[220.99790955 65.54353333]
[205.39311218 72.71289062]
[189.12379456 66.23583221]
[175.45344543 72.41011810]
[161.78311157 78.58439636]
[148.11276245 84.75868225]
[150.18133545 96.24460602]
[149.55400085 107.86424255]
[146.28012085 118.99516296]
[140.55036926 129.04475403]
[154.14901733 135.37536621]
[167.74766541 141.70597839]
[181.34632874 148.03659058]
[194.94497681 154.36720276]
[208.54362488 160.69781494]
[212.77015686 160.17967224]
[216.56939697 160.93647766]
[219.59767151 162.68286133]
[221.63691711 165.05203247]
[222.61033630 167.64311218]
[235.90446472 174.59051514]
[251.71881104 174.12484741]
[259.41503906 186.87698364]
[272.70916748 193.82438660]
[286.00329590 200.77180481]
[298.28381348 195.29458618]
[311.28906250 197.84120178]
[320.32760620 207.26527405]
[322.27026367 219.98124695]
[335.48385620 227.08062744]
[348.69744873 234.17999268]
[363.15356445 228.21725464]
[378.04470825 232.99099731]
[386.33966064 246.24722290]
[384.12185669 261.72674561]
[372.43847656 272.12057495]
[356.80603027 272.52111816]
[344.60568237 262.73922729]
[341.59808350 247.39358521]
[328.38449097 240.29420471]
[315.17089844 233.19483948]
[299.26910400 238.72082520]
[283.99826050 230.86520386]
[279.05587769 214.06591797]
[265.76174927 207.11851501]
[252.46765137 200.17109680]
[237.60417175 201.13369751]
[228.95704651 187.88462830]
[215.66293335 180.93722534]
[202.21301270 174.29646301]
[188.61436462 167.96585083]
[175.01571655 161.63523865]
[161.41705322 155.30462646]
[147.81840515 148.97401428]
[134.21975708 142.64340210]
[127.89559937 146.67517090]
[139.47288513 156.21279907]
[133.97946167 170.17066956]
[119.00718689 169.25915527]
[115.24729919 154.73869324]
[108.92314148 158.77044678]
[108.92314148 173.77044678]
[108.92314148 188.77044678]
[108.92314148 203.77044678]
[108.92314148 218.77044678]
[108.92314148 233.77044678]
[108.92314148 248.77044678]
[108.92314148 263.77044678]
[108.92314148 278.77044678]
[108.92314148 293.77044678]
[109.35305023 308.76428223]
[110.21250153 323.73965454]
[111.07195282 338.71499634]
[120.14926910 347.84378052]
[120.57640839 360.30984497]
[112.66879272 369.43286133]
[113.35649109 384.41708374]
[124.19206238 396.24798584]
[121.55593109 412.07296753]
[107.47031403 419.75250244]
[92.74048615 413.39544678]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 269]
[2 268]
[4 265]
[5 264]
[6 263]
[12 262]
[13 261]
[14 260]
[15 259]
[16 258]
[17 257]
[18 256]
[19 255]
[20 254]
[21 253]
[22 56]
[23 55]
[24 54]
[25 53]
[27 51]
[28 50]
[31 47]
[32 46]
[33 45]
[34 44]
[35 43]
[36 42]
[37 41]
[59 149]
[60 148]
[61 147]
[62 146]
[63 94]
[64 93]
[65 92]
[66 91]
[67 90]
[68 89]
[73 87]
[74 86]
[75 85]
[76 84]
[77 83]
[78 82]
[96 141]
[97 140]
[98 139]
[99 138]
[100 137]
[101 136]
[102 135]
[106 132]
[107 131]
[108 130]
[109 129]
[110 128]
[111 127]
[112 126]
[114 124]
[115 123]
[150 173]
[151 172]
[152 171]
[153 170]
[154 169]
[155 168]
[156 167]
[157 166]
[176 198]
[177 197]
[178 196]
[179 195]
[183 192]
[184 191]
[185 190]
[202 247]
[203 246]
[204 245]
[205 244]
[206 243]
[207 242]
[212 241]
[213 240]
[215 238]
[216 237]
[217 236]
[221 233]
[222 232]
[223 231]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
