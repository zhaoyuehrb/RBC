%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:37:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCUCAACAAUUCCUCACCGCAGGAGCCUCUGAAGCUCCCACCAGGCCAGCUCUCCUCCCACAACAGCUUCCCACAGCAUGAAGAUCUCCGUGGCUGCCAUUCCCUUCUUCCUCCUCAUCACCAUCGCCCUAGGGACCAAGACUGAAUCCUCCUCACAAACUGGGGGGAAACCGAAGG\
) } def
/len { sequence length } bind def

/coor [
[106.33801270 286.95126343]
[93.18806458 294.16784668]
[78.69953156 298.05145264]
[63.70311737 298.37945557]
[49.05864334 295.13302612]
[35.60575104 288.49829102]
[24.11575890 278.85565186]
[15.24745369 266.75802612]
[9.50929737 252.89895630]
[7.23028851 238.07308960]
[8.54109383 223.13047791]
[13.36655903 208.92784119]
[21.43001366 196.27949524]
[32.26914215 185.91062927]
[45.26372147 178.41522217]
[54.36439514 166.49139404]
[63.46506882 154.56755066]
[72.56574249 142.64372253]
[81.66641998 130.71989441]
[67.96323395 136.82095337]
[64.74114990 154.64047241]
[51.59740829 166.86756897]
[33.90381622 168.76187134]
[18.73934746 159.75457764]
[5.25743675 166.33013916]
[-8.22447395 172.90571594]
[-21.70638466 179.48127747]
[-35.18829727 186.05683899]
[-38.79555893 201.27267456]
[-51.37023544 210.56846619]
[-66.97494507 209.55500793]
[-78.24161530 198.71083069]
[-79.85047913 183.15623474]
[-71.04187775 170.23561096]
[-55.97495651 166.04969788]
[-41.76386261 172.57493591]
[-28.28195190 165.99935913]
[-14.80004120 159.42379761]
[-1.31813061 152.84823608]
[12.16378021 146.27265930]
[12.48099709 134.10552979]
[17.98356056 123.16814423]
[27.67799759 115.57223511]
[39.75506973 112.81362152]
[51.92729568 115.47797394]
[61.86218643 123.11776733]
[75.56536865 117.01671600]
[76.59336090 89.05528259]
[98.08148956 78.18221283]
[101.96377563 63.69332886]
[105.84605408 49.20444107]
[105.04479980 40.07642746]
[109.92459869 34.49770737]
[114.05915833 20.07878304]
[118.19371796 5.65985775]
[109.43389130 -9.46682072]
[114.21671295 -25.92869377]
[129.12004089 -33.69434357]
[133.00231934 -48.18323135]
[136.88459778 -62.67211914]
[140.76689148 -77.16100311]
[121.59159088 -88.03912354]
[106.49795532 -104.08557892]
[96.82685852 -123.86077118]
[93.43330383 -145.59448242]
[96.61080933 -167.34434509]
[106.06609344 -187.16941833]
[120.94606018 -203.30343628]
[112.77647400 -215.88349915]
[104.60688782 -228.46354675]
[89.09779358 -231.50387573]
[80.35050964 -244.66671753]
[83.55464172 -260.14279175]
[96.80923462 -268.75042725]
[112.25057220 -265.38287354]
[120.71759033 -252.03800964]
[117.18695068 -236.63313293]
[125.35653687 -224.05308533]
[133.52612305 -211.47302246]
[147.54275513 -216.92599487]
[162.37646484 -219.40830994]
[177.40476990 -218.81578064]
[181.03359985 -233.37022400]
[184.66242981 -247.92465210]
[188.29125977 -262.47909546]
[191.92008972 -277.03353882]
[180.26168823 -286.82348633]
[174.03536987 -300.64810181]
[174.42723083 -315.74334717]
[181.30603027 -329.11657715]
[193.25975037 -338.13977051]
[207.88516235 -341.06597900]
[211.51399231 -355.62042236]
[215.14282227 -370.17483521]
[218.77165222 -384.72927856]
[216.73674011 -401.56066895]
[232.34703064 -408.17544556]
[243.02465820 -395.00634766]
[233.32608032 -381.10046387]
[229.69726562 -366.54602051]
[226.06843567 -351.99157715]
[222.43960571 -337.43713379]
[233.97930908 -327.98724365]
[240.29768372 -314.40829468]
[240.09294128 -299.37103271]
[233.35215759 -285.85876465]
[221.36437988 -276.57543945]
[206.47451782 -273.40469360]
[202.84568787 -258.85028076]
[199.21685791 -244.29583740]
[195.58802795 -229.74139404]
[191.95921326 -215.18696594]
[200.98915100 -211.23992920]
[209.41120911 -206.11804199]
[217.07334900 -199.91300964]
[223.83715820 -192.73611450]
[229.58033752 -184.71621704]
[234.19891357 -175.99742126]
[237.60916138 -166.73648071]
[239.74906921 -157.10000610]
[240.57945251 -147.26144409]
[240.08476257 -137.39796448]
[238.27325439 -127.68727875]
[235.17697144 -118.30442047]
[230.85108948 -109.41860199]
[225.37295532 -101.19016266]
[218.84075928 -93.76766205]
[211.37167358 -87.28521729]
[203.09983826 -81.86007690]
[194.17390442 -77.59048462]
[184.75440979 -74.55390930]
[175.01083374 -72.80565643]
[165.11856079 -72.37781525]
[155.25578308 -73.27871704]
[151.37348938 -58.78983307]
[147.49121094 -44.30094528]
[143.60891724 -29.81205750]
[151.55642700 -19.64909363]
[152.20021057 -6.56866598]
[145.08055115 4.65460539]
[132.61264038 9.79441833]
[128.47808838 24.21334457]
[124.34352112 38.63227081]
[120.33494568 53.08672714]
[116.45265961 67.57561493]
[112.57037354 82.06449890]
[123.49241638 92.95262909]
[125.24863434 109.98532104]
[114.95372009 125.74890137]
[124.79460907 137.06954956]
[134.63549805 148.39019775]
[144.47637939 159.71083069]
[154.31726074 171.03147888]
[164.15814209 182.35212708]
[173.99903870 193.67276001]
[189.44474792 192.18626404]
[202.79721069 200.09140015]
[208.92213440 214.34849548]
[205.46437073 229.47541809]
[193.75347900 239.65553284]
[178.29255676 240.97439575]
[165.02662659 232.92486572]
[159.05673218 218.60215759]
[162.67839050 203.51365662]
[152.83750916 192.19300842]
[142.99661255 180.87236023]
[133.15573120 169.55171204]
[123.31484985 158.23107910]
[113.47396088 146.91043091]
[103.63307953 135.58978271]
[106.84186554 150.24255371]
[110.05064392 164.89532471]
[113.25942993 179.54809570]
[116.46821594 194.20086670]
[125.07696533 206.48457336]
[130.51878357 220.46264648]
[132.48165894 235.33366394]
[130.85304260 250.24499512]
[125.72631073 264.34167480]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 47]
[20 46]
[24 40]
[25 39]
[26 38]
[27 37]
[28 36]
[49 146]
[50 145]
[51 144]
[53 143]
[54 142]
[55 141]
[58 137]
[59 136]
[60 135]
[61 134]
[68 79]
[69 78]
[70 77]
[82 112]
[83 111]
[84 110]
[85 109]
[86 108]
[92 102]
[93 101]
[94 100]
[95 99]
[149 170]
[150 169]
[151 168]
[152 167]
[153 166]
[154 165]
[155 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
