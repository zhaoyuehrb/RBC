%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:26:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUGAGGCUCGGCUGAGGAUGCCGGGAAGGGCUGGUGGUCGGGGGCCUAGAGCGGCGGUUGCACUUAGUUGCGGCUGCUGUCACCAUGUCCCGCGUUUUGGUGCCUUGCCAUGUGAAAGGCUCCGUAGCCCUCCAGGUGGGCGACGUGCGGACCUCCCAAGGCCGGCCUGGCGUGCUGGUCAUCG\
) } def
/len { sequence length } bind def

/coor [
[74.53312683 596.40539551]
[60.88916779 603.05419922]
[45.76439667 604.32141113]
[31.20431328 600.03552246]
[19.17804909 590.77630615]
[11.31205654 577.79589844]
[8.67014694 562.84985352]
[11.60961723 547.95947266]
[19.73292732 535.13854980]
[31.94146729 526.12097168]
[46.58413315 522.12640381]
[48.10165787 507.20336914]
[49.61918259 492.28030396]
[51.13670731 477.35726929]
[48.68009949 470.36938477]
[52.80796051 462.19577026]
[54.57731247 447.30047607]
[48.39529419 433.74938965]
[57.70640182 420.95822144]
[59.47575378 406.06295776]
[61.24510574 391.16766357]
[63.01445389 376.27239990]
[64.78380585 361.37710571]
[66.55315399 346.48181152]
[68.32250977 331.58654785]
[70.09185791 316.69125366]
[60.70259094 305.18572998]
[62.28477478 290.05459595]
[74.41649628 280.28427124]
[76.18585205 265.38900757]
[70.00382996 251.83790588]
[79.31494141 239.04675293]
[81.08428955 224.15145874]
[82.72778320 209.24177551]
[84.24530792 194.31872559]
[76.19635773 178.73492432]
[87.06529236 163.88313293]
[88.33055878 148.93658447]
[89.59582520 133.99005127]
[90.86109161 119.04351044]
[76.05136871 102.52273560]
[83.47854614 78.59505463]
[71.93377686 69.01808929]
[60.38900757 59.44112015]
[48.84423828 49.86415100]
[37.29946899 40.28718185]
[22.57204437 47.17937469]
[6.37124205 46.96514130]
[-8.06480026 39.73797989]
[-17.87276459 26.98804092]
[-21.13204002 11.29514217]
[-17.24066162 -4.19313145]
[-28.94553375 -13.57374859]
[-40.65040588 -22.95436478]
[-52.35527802 -32.33498383]
[-64.06015015 -41.71559906]
[-75.76502228 -51.09621811]
[-87.46989441 -60.47683334]
[-99.17476654 -69.85745239]
[-110.87963867 -79.23806763]
[-122.58451080 -88.61868286]
[-134.28938293 -97.99929810]
[-145.99424744 -107.37992096]
[-161.67395020 -105.39939117]
[-174.11024475 -115.15205383]
[-175.92488098 -130.85182190]
[-166.04127502 -143.18429565]
[-150.32321167 -144.83283997]
[-138.09591675 -134.81941223]
[-136.61363220 -119.08479309]
[-124.90876007 -109.70417023]
[-113.20388794 -100.32355499]
[-101.49901581 -90.94293976]
[-89.79415131 -81.56232452]
[-78.08927917 -72.18170166]
[-66.38440704 -62.80108643]
[-54.67953110 -53.42047119]
[-42.97465897 -44.03985596]
[-31.26978874 -34.65923691]
[-19.56491661 -25.27861977]
[-7.86004448 -15.89800358]
[4.35500145 -22.49924660]
[18.20757484 -23.94679832]
[31.60658836 -19.98890877]
[42.51672745 -11.19230270]
[49.26762009 1.13869941]
[50.80952454 15.15551758]
[46.87643814 28.74241447]
[58.42120743 38.31938171]
[69.96597290 47.89635086]
[81.51074219 57.47332001]
[93.05551147 67.05028534]
[108.05337524 67.30362701]
[119.91500854 58.12203979]
[131.77664185 48.94044876]
[143.63827515 39.75885773]
[155.49992371 30.57727051]
[145.94546509 21.47878838]
[142.50683594 5.61251879]
[148.74278259 -13.00711441]
[157.72271729 -25.02213097]
[159.78678894 -40.70811844]
[173.60371399 -46.27064133]
[182.58366394 -58.28565979]
[191.56359863 -70.30067444]
[200.54354858 -82.31568909]
[209.52349854 -94.33071136]
[204.02488708 -108.74489594]
[207.21443176 -123.83895111]
[218.07434082 -134.79640198]
[233.13926697 -138.12077332]
[247.60205078 -132.75128174]
[256.84765625 -120.40128326]
[257.92587280 -105.01164246]
[250.49259949 -91.49313354]
[236.91979980 -84.15945435]
[221.53851318 -85.35076141]
[212.55856323 -73.33574677]
[203.57862854 -61.32073212]
[194.59867859 -49.30571747]
[185.61872864 -37.29069901]
[184.19697571 -22.46410561]
[169.73773193 -16.04218674]
[160.75779724 -4.02717113]
[164.61695862 2.40375757]
[179.61482239 2.15038514]
[172.33529663 15.26561451]
[176.19445801 21.69654274]
[191.02148438 19.42512703]
[205.84851074 17.15370941]
[220.67553711 14.88229275]
[228.64213562 1.42617321]
[243.41140747 -3.71217823]
[258.00973511 1.89341128]
[265.54425049 15.59615326]
[262.45736694 30.92603302]
[250.20664978 40.64474869]
[234.57646179 40.16342163]
[222.94694519 29.70931816]
[208.11991882 31.98073387]
[193.29289246 34.25215149]
[178.46588135 36.52356720]
[164.68150330 42.43890762]
[152.81987000 51.62049484]
[140.95823669 60.80208588]
[129.09660339 69.98367310]
[117.23496246 79.16526794]
[124.12514496 91.55577087]
[123.57053375 104.93263245]
[116.54873657 115.39446259]
[105.80763245 120.30877686]
[104.54236603 135.25531006]
[103.27709961 150.20185852]
[102.01183319 165.14840698]
[109.72490692 175.50408936]
[108.34994507 187.93965149]
[99.16835022 195.83625793]
[97.65082550 210.75929260]
[99.89925385 219.63577271]
[95.97956848 225.92082214]
[94.21022034 240.81610107]
[100.26567841 255.43258667]
[91.08113098 267.15835571]
[89.31178284 282.05361938]
[98.81704712 294.39410400]
[96.81048584 309.47485352]
[84.98713684 318.46060181]
[83.21778870 333.35589600]
[81.44844055 348.25115967]
[79.67908478 363.14645386]
[77.90973663 378.04174805]
[76.14038849 392.93701172]
[74.37103271 407.83230591]
[72.60168457 422.72756958]
[78.65714264 437.34408569]
[69.47259521 449.06982422]
[67.70324707 463.96511841]
[66.05974579 478.87481689]
[64.54222107 493.79785156]
[63.02469635 508.72088623]
[61.50717163 523.64392090]
[75.04599762 530.50427246]
[85.18940735 541.79479980]
[90.56559753 555.98852539]
[90.44748688 571.16583252]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 181]
[12 180]
[13 179]
[14 178]
[16 177]
[17 176]
[19 174]
[20 173]
[21 172]
[22 171]
[23 170]
[24 169]
[25 168]
[26 167]
[29 164]
[30 163]
[32 161]
[33 160]
[34 158]
[35 157]
[37 154]
[38 153]
[39 152]
[40 151]
[42 92]
[43 91]
[44 90]
[45 89]
[46 88]
[52 81]
[53 80]
[54 79]
[55 78]
[56 77]
[57 76]
[58 75]
[59 74]
[60 73]
[61 72]
[62 71]
[63 70]
[93 147]
[94 146]
[95 145]
[96 144]
[97 143]
[100 124]
[101 123]
[103 121]
[104 120]
[105 119]
[106 118]
[107 117]
[128 142]
[129 141]
[130 140]
[131 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
