%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:15:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGUUAGUACACUGAAAUUCAAAGUCAUGCUCAUAACUGUUAAUGAAAGCAGAUUCAAAGCAACACCACCACCACUGAAGUAUUUUUAGUUAUAUAAGAUUGGAACUACCAAGCAUGUGGCUCCUGGUCAGUGUAAUUCUAAUCUCACGGAUAUCCUCUGUUGGGGGAGAAGCAACAUUUUGUGAUUUUCCAAAAAUAAACCAUGGAAUUCUAU\
) } def
/len { sequence length } bind def

/coor [
[237.30253601 209.51596069]
[251.02851868 203.46636963]
[265.89956665 205.41076660]
[253.21122742 197.41040039]
[240.52287292 189.41004944]
[227.83451843 181.40969849]
[215.14616394 173.40933228]
[202.28552246 165.68898010]
[189.25875854 158.25234985]
[176.23200989 150.81570435]
[163.20524597 143.37907410]
[150.17849731 135.94242859]
[137.15173340 128.50579834]
[124.12497711 121.06915283]
[111.09822083 113.63251495]
[122.80022430 123.01670837]
[129.48641968 136.44409180]
[129.92340088 151.43772888]
[124.03057098 165.23173523]
[112.89497375 175.28152466]
[98.57078552 179.73323059]
[83.70039368 177.76562500]
[71.02693176 169.74169922]
[62.88828659 157.14160156]
[60.78578186 142.28968811]
[65.10726929 127.92567444]
[75.05556488 116.69930267]
[88.79250336 110.68209076]
[74.28025055 114.47608948]
[59.76799393 118.27009583]
[45.25573730 122.06409454]
[42.26132202 138.05827332]
[32.62561035 151.09831238]
[18.31889534 158.60322571]
[2.22956061 159.11515808]
[-12.41901970 152.58235168]
[-22.71425819 140.35929871]
[-37.16952896 144.36494446]
[-51.62479782 148.37059021]
[-66.08007050 152.37622070]
[-80.53533936 156.38186646]
[-88.10144043 170.25737000]
[-103.28631592 174.63858032]
[-117.08105469 166.92620850]
[-121.30147552 151.69584656]
[-113.44367981 137.98342896]
[-98.16956329 133.92427063]
[-84.54097748 141.92660522]
[-70.08570862 137.92095947]
[-55.63043976 133.91531372]
[-41.17517090 129.90966797]
[-26.71990013 125.90402985]
[-24.93195152 112.14801788]
[-18.01473045 100.07408142]
[-6.98373795 91.52116394]
[6.51614094 87.80640411]
[20.45587921 89.52237701]
[32.72726440 96.44281006]
[41.46173859 107.55184174]
[55.97399139 103.75783539]
[70.48624420 99.96383667]
[84.99850464 96.16983795]
[88.57318115 89.57653046]
[80.72765350 76.79186249]
[95.72253418 76.38991547]
[99.29721069 69.79661560]
[94.55785370 55.56501007]
[89.81849670 41.33340836]
[73.62500000 36.44307327]
[63.63728714 22.99708557]
[63.63325882 6.41371250]
[73.41637421 -6.77012444]
[68.46958160 -20.93095779]
[63.52278519 -35.09179306]
[58.57598877 -49.25262451]
[53.52586365 -63.37693787]
[48.37268448 -77.46398163]
[30.89638329 -84.78396606]
[24.43413353 -102.25498962]
[32.65383911 -118.61444855]
[27.09123421 -132.54490662]
[21.52863312 -146.47535706]
[9.22536945 -156.42222595]
[11.69119072 -171.11129761]
[6.12858820 -185.04174805]
[0.56598574 -198.97219849]
[-4.99661684 -212.90264893]
[-10.55921936 -226.83309937]
[-16.12182236 -240.76354980]
[-21.68442345 -254.69400024]
[-27.24702644 -268.62445068]
[-41.86680603 -274.62759399]
[-47.88252258 -289.24218750]
[-41.72515488 -303.79769897]
[-27.04776573 -309.65853882]
[-12.55818462 -303.34765625]
[-6.85282564 -288.60910034]
[-13.31657600 -274.18707275]
[-7.75397348 -260.25662231]
[-2.19137120 -246.32615662]
[3.37123132 -232.39570618]
[8.93383408 -218.46525574]
[14.49643612 -204.53480530]
[20.05903816 -190.60435486]
[25.62164116 -176.67390442]
[37.52703094 -167.72343445]
[35.45908356 -152.03794861]
[41.02168655 -138.10749817]
[46.58428955 -124.17705536]
[57.79103088 -122.05701447]
[66.67560577 -114.71546936]
[70.95814514 -103.88631439]
[69.46772766 -92.21604919]
[62.45972443 -82.61715698]
[67.61290741 -68.53012085]
[72.86132050 -63.32990646]
[72.73682404 -54.19942093]
[77.68361664 -40.03858948]
[82.63041687 -25.87775421]
[87.57720947 -11.71692085]
[100.66205597 -9.07414627]
[110.81432343 -0.24066725]
[115.31259155 12.55735016]
[112.88128662 26.01322937]
[104.05010223 36.59405136]
[108.78945923 50.82565308]
[113.52881622 65.05725861]
[118.53485870 100.60575867]
[131.56161499 108.04239655]
[144.58837891 115.47903442]
[157.61512756 122.91567230]
[170.64189148 130.35231018]
[183.66864014 137.78895569]
[196.69540405 145.22558594]
[209.72215271 152.66223145]
[214.93594360 152.63537598]
[219.21224976 154.42997742]
[222.01463318 157.38465881]
[223.14651489 160.72097778]
[235.83486938 168.72134399]
[248.52322388 176.72169495]
[261.21157837 184.72204590]
[273.89993286 192.72241211]
[286.10614014 176.98037720]
[312.84048462 174.87734985]
[327.75048828 176.51791382]
[342.66049194 178.15847778]
[357.57052612 179.79904175]
[372.48052979 181.43962097]
[387.39053345 183.08018494]
[402.30056763 184.72074890]
[419.17773438 168.23789978]
[442.46447754 169.62115479]
[456.94146729 187.57673645]
[471.94107056 187.46714783]
[486.94067383 187.35755920]
[501.94027710 187.24795532]
[516.93988037 187.13836670]
[531.93945312 187.02877808]
[547.73400879 180.86688232]
[558.02746582 194.33837891]
[547.93194580 207.95884705]
[532.04907227 202.02838135]
[517.04943848 202.13796997]
[502.04986572 202.24755859]
[487.05026245 202.35714722]
[472.05065918 202.46673584]
[457.05105591 202.57632446]
[454.49337769 209.12930298]
[450.39028931 214.87014771]
[444.98489380 219.44013977]
[438.60211182 222.55050659]
[431.62899780 224.00054932]
[424.49145508 223.69070435]
[417.62817383 221.62919617]
[411.46356201 217.93225098]
[406.38165283 212.81755066]
[402.70205688 206.59147644]
[400.66000366 199.63076782]
[385.74996948 197.99020386]
[370.83996582 196.34962463]
[355.92993164 194.70906067]
[341.01992798 193.06849670]
[326.10992432 191.42793274]
[311.19989014 189.78735352]
[307.01605225 196.01194763]
[298.64837646 208.46110535]
[294.46450806 214.68568420]
[301.61386108 227.87229919]
[308.76321411 241.05891418]
[315.91256714 254.24552917]
[323.06192017 267.43212891]
[338.36505127 267.16192627]
[352.03567505 274.04473877]
[360.93234253 286.49896240]
[363.01071167 301.66271973]
[357.79315186 316.05145264]
[346.47866821 326.35876465]
[331.66720581 330.21609497]
[316.76232910 326.73709106]
[305.18908691 316.72116089]
[299.60693359 302.46990967]
[301.29858398 287.25817871]
[309.87533569 274.58148193]
[302.72598267 261.39486694]
[295.57659912 248.20826721]
[288.42724609 235.02165222]
[281.27789307 221.83503723]
[282.24047852 236.80412292]
[275.30087280 250.10232544]
[262.47119141 257.87399292]
[247.47119141 257.86587524]
[234.64993286 250.08027649]
[227.72477722 236.77455139]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 143]
[4 142]
[5 141]
[6 140]
[7 139]
[8 135]
[9 134]
[10 133]
[11 132]
[12 131]
[13 130]
[14 129]
[15 128]
[28 62]
[29 61]
[30 60]
[31 59]
[37 52]
[38 51]
[39 50]
[40 49]
[41 48]
[66 127]
[67 126]
[68 125]
[72 120]
[73 119]
[74 118]
[75 117]
[76 115]
[77 114]
[80 109]
[81 108]
[82 107]
[84 105]
[85 104]
[86 103]
[87 102]
[88 101]
[89 100]
[90 99]
[91 98]
[145 185]
[146 184]
[147 183]
[148 182]
[149 181]
[150 180]
[151 179]
[154 168]
[155 167]
[156 166]
[157 165]
[158 164]
[159 163]
[188 208]
[189 207]
[190 206]
[191 205]
[192 204]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
