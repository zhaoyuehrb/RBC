%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:07:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCCCCCGGGGUCCUCCUCCGCGCCACCCCACCCCCGCGGCUCCUUUUUCUGCCUUUUCCUUUGUACCCUCACUGCUACCAGCUCCUUCUGGCGACCCCCAGGUACCCCCUCCCACCUUUCGUUUCUCUCUGGGUCAGCAGACCACGCAUGUAUCCAGAGGCGCUACCUGUAGGGAUCCUAAGCAACCCGGACACUUUCAAACGCCGUAGCGGUUCCUAUAGCAACGACAAACCGGAAGUAUGGUUUG\
) } def
/len { sequence length } bind def

/coor [
[-0.73647881 178.72894287]
[-10.14979458 190.40753174]
[-24.52717400 194.68432617]
[-38.79317474 190.04956055]
[-47.91168213 178.13935852]
[-48.66371155 163.15821838]
[-40.78379059 150.39471436]
[-27.05376244 144.35458374]
[-14.46912766 136.19206238]
[-29.42651176 137.32196045]
[-44.38389587 138.45185852]
[-59.34127808 139.58175659]
[-74.29866028 140.71166992]
[-89.24864960 141.93551636]
[-104.19065094 143.25329590]
[-119.13265991 144.57106018]
[-123.74867249 159.02679443]
[-133.52117920 170.58277893]
[-146.93724060 177.49819946]
[-161.93818665 178.74691772]
[-176.23551941 174.16967773]
[-187.66004944 164.49365234]
[-194.49098206 151.21707153]
[-209.43299866 152.53483582]
[-224.37500000 153.85261536]
[-239.31700134 155.17037964]
[-254.25900269 156.48814392]
[-255.47564697 168.10725403]
[-259.06033325 179.33192444]
[-264.90219116 189.68063354]
[-272.79257202 198.70086670]
[-282.43255615 205.98878479]
[-293.44393921 211.20732117]
[-305.38412476 214.10153198]
[-317.76382446 214.51081848]
[-330.06726074 212.37727356]
[-341.77343750 207.74980164]
[-352.37829590 200.78375244]
[-361.41650391 191.73596191]
[-368.48159790 180.95550537]
[-382.42825317 186.47737122]
[-396.37490845 191.99925232]
[-398.53915405 207.20487976]
[-408.02890015 219.28131104]
[-422.29144287 224.98004150]
[-437.49023438 222.76811218]
[-449.53686523 213.24055481]
[-455.19085693 198.96022034]
[-452.93130493 183.76844788]
[-443.36602783 171.75173950]
[-429.06802368 166.14254761]
[-413.88342285 168.44970703]
[-401.89675903 178.05259705]
[-387.95010376 172.53073120]
[-374.00347900 167.00886536]
[-373.76788330 159.51255798]
[-388.76049805 159.04139709]
[-403.75308228 158.57023621]
[-418.74566650 158.09907532]
[-433.73828125 157.62791443]
[-448.73086548 157.15675354]
[-463.72348022 156.68559265]
[-478.71606445 156.21443176]
[-493.70867920 155.74327087]
[-508.70126343 155.27186584]
[-508.22961426 140.27928162]
[-493.23751831 140.75067139]
[-478.24490356 141.22183228]
[-463.25231934 141.69299316]
[-448.25970459 142.16415405]
[-433.26712036 142.63531494]
[-418.27450562 143.10647583]
[-403.28192139 143.57763672]
[-388.28933716 144.04879761]
[-373.29672241 144.51995850]
[-373.06115723 137.02366638]
[-386.63354492 130.63697815]
[-400.20596313 124.25028992]
[-417.11203003 122.97720337]
[-420.56878662 106.37939453]
[-405.57653809 98.46301270]
[-393.81927490 110.67787933]
[-380.24685669 117.06456757]
[-366.67446899 123.45125580]
[-352.44741821 107.13651276]
[-333.80380249 96.76959991]
[-313.05911255 93.39425659]
[-292.70913696 97.20064545]
[-275.12966919 107.52758026]
[-262.29916382 122.96564484]
[-255.57676697 141.54614258]
[-240.63476562 140.22837830]
[-225.69276428 138.91061401]
[-210.75076294 137.59283447]
[-195.80876160 136.27507019]
[-191.40696716 122.00785065]
[-181.85231018 110.48162079]
[-168.57678223 103.47267914]
[-153.58883667 102.07661438]
[-139.16950989 106.53716278]
[-127.52527618 116.20436859]
[-120.45042419 129.62905884]
[-105.50842285 128.31129456]
[-90.56642151 126.99352264]
[-84.19584656 123.28466034]
[-75.42856598 125.75428009]
[-60.47117996 124.62438202]
[-45.51379776 123.49447632]
[-30.55641365 122.36457825]
[-15.59902954 121.23467255]
[-26.74452209 111.19584656]
[-32.23280334 97.23594666]
[-30.90819359 82.29454803]
[-23.04961967 69.51789856]
[-10.31188202 61.59640884]
[4.62280273 60.19812775]
[18.60959816 65.61749268]
[28.70326996 76.71334076]
[32.77836609 91.14918518]
[29.97678185 105.88523102]
[20.88754845 117.81922913]
[35.15339661 113.18397522]
[49.41924286 108.54871368]
[63.68509293 103.91345978]
[77.95094299 99.27820587]
[78.73892975 84.45886230]
[89.76004028 71.15339661]
[108.87985229 66.26425934]
[116.10615540 53.11965942]
[123.33245850 39.97505951]
[130.55876160 26.83045959]
[137.78506470 13.68585968]
[145.01138306 0.54125941]
[152.23768616 -12.60334110]
[159.46398926 -25.74794006]
[166.69029236 -38.89253998]
[173.83386230 -52.08228683]
[180.89442444 -65.31665802]
[187.87168884 -78.59512329]
[194.76538086 -91.91716766]
[188.57926941 -106.27913666]
[193.12162781 -121.24246216]
[206.24766541 -129.74192810]
[221.75970459 -127.76433563]
[232.33340454 -116.24345398]
[232.97621155 -100.61908722]
[223.38459778 -88.26858521]
[208.08743286 -85.02347565]
[201.19374084 -71.70142365]
[200.91171265 -64.33526611]
[194.12879944 -58.25609589]
[187.06823730 -45.02172852]
[186.69366455 -37.65969467]
[179.83488464 -31.66623688]
[172.60858154 -18.52163506]
[165.38227844 -5.37703562]
[158.15597534 7.76756430]
[150.92967224 20.91216469]
[143.70336914 34.05676651]
[136.47706604 47.20136642]
[129.25076294 60.34596634]
[122.02445221 73.49056244]
[125.13227081 80.31636047]
[133.84716797 68.10773468]
[148.77758789 69.55084991]
[154.99291992 83.20256805]
[146.27775574 95.41101074]
[131.34790039 93.96794891]
[134.45571899 100.79374695]
[149.11474609 103.97385406]
[163.77375793 107.15396118]
[178.43278503 110.33406830]
[193.09181213 113.51416779]
[207.75082397 116.69427490]
[222.40985107 119.87438202]
[237.06887817 123.05448914]
[251.72789001 126.23459625]
[266.38690186 129.41470337]
[281.04592896 132.59481812]
[295.72463989 135.68275452]
[310.42248535 138.67840576]
[325.12030029 141.67405701]
[316.61523438 129.31832886]
[317.93627930 114.37660980]
[328.47723389 103.70477295]
[343.40151978 102.19950104]
[355.86123657 110.55146790]
[360.13937378 124.92844391]
[354.27291870 138.73368835]
[340.95184326 145.63304138]
[355.32968140 149.90832520]
[369.70748901 154.18360901]
[379.57791138 142.58642578]
[393.31478882 136.01237488]
[408.53811646 135.60046387]
[422.61041260 141.42205811]
[433.09350586 152.46853638]
[438.17117310 166.82601929]
[436.96365356 182.00697327]
[429.68017578 195.38124084]
[417.58264160 204.63162231]
[402.76702881 208.15545654]
[387.80023193 205.34219360]
[375.27529907 196.67926025]
[367.36230469 183.66755676]
[365.43218994 168.56144714]
[351.05438232 164.28614807]
[336.67654419 160.01086426]
[322.12466431 156.37187195]
[307.42681885 153.37622070]
[292.72900391 150.38056946]
[285.56558228 152.11985779]
[277.86584473 147.25382996]
[263.20681763 144.07373047]
[248.54779053 140.89361572]
[233.88876343 137.71351624]
[219.22973633 134.53340149]
[204.57072449 131.35330200]
[189.91169739 128.17318726]
[175.25267029 124.99308777]
[160.59365845 121.81298065]
[145.93463135 118.63287354]
[131.27560425 115.45276642]
[102.87284088 128.32754517]
[82.58619690 113.54405212]
[68.32034302 118.17931366]
[54.05450058 122.81456757]
[39.78865051 127.44982147]
[25.52280235 132.08506775]
[18.37923050 145.27482605]
[22.29185295 159.75553894]
[26.20447540 174.23626709]
[30.11709785 188.71699524]
[34.02972031 203.19772339]
[37.94234467 217.67843628]
[41.85496521 232.15916443]
[55.68154144 239.81431580]
[59.96503067 255.02705383]
[52.16412354 268.77191162]
[36.90695190 272.89434814]
[23.24532890 264.94854736]
[19.28445435 249.64863586]
[27.37424088 236.07179260]
[23.46161842 221.59106445]
[19.54899597 207.11033630]
[15.63637352 192.62962341]
[11.72375107 178.14889526]
[7.81112814 163.66816711]
[3.89850569 149.18743896]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 110]
[10 109]
[11 108]
[12 107]
[13 106]
[14 104]
[15 103]
[16 102]
[23 95]
[24 94]
[25 93]
[26 92]
[27 91]
[40 55]
[41 54]
[42 53]
[76 84]
[77 83]
[78 82]
[121 229]
[122 228]
[123 227]
[124 226]
[125 225]
[128 162]
[129 161]
[130 160]
[131 159]
[132 158]
[133 157]
[134 156]
[135 155]
[136 154]
[137 152]
[138 151]
[139 149]
[140 148]
[169 223]
[170 222]
[171 221]
[172 220]
[173 219]
[174 218]
[175 217]
[176 216]
[177 215]
[178 214]
[179 213]
[180 211]
[181 210]
[182 209]
[190 208]
[191 207]
[192 206]
[230 249]
[231 248]
[232 247]
[233 246]
[234 245]
[235 244]
[236 243]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
