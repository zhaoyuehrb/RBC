%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:28:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGUGGUCGCCGUGGGUUCUCGGUUGCGAGGCAGCUCGCUCGUUCUGCGAUCUAUUGAGAGUGGCUUCCAAGAGCCCCGUGCCUAUGUCUGGGAGGGAGGGAAGAUGGCAGCCGUGGCGGCAGGCGGCCUGGUGGGAAAGGGGCGCGACAUCAGCCUAGCGGCCCUGCAGCGCCACGACCCCUAUAUCAACCGCAUCGUGGACG\
) } def
/len { sequence length } bind def

/coor [
[167.36894226 194.49813843]
[166.09104919 179.55267334]
[173.43161011 166.47154236]
[186.85395813 159.77522278]
[201.72000122 161.77792358]
[188.43405151 154.81491089]
[175.14811707 147.85188293]
[161.86216736 140.88887024]
[148.57621765 133.92585754]
[135.29026794 126.96283722]
[122.00432587 119.99981689]
[105.19262695 129.27830505]
[86.21549988 126.34711456]
[72.98680115 112.42859650]
[58.21914291 115.05846405]
[43.45148087 117.68833923]
[28.68382263 120.31821442]
[13.91616249 122.94808197]
[-0.85149682 125.57795715]
[-15.61915684 128.20782471]
[-27.84903145 138.24479675]
[-41.73570633 132.85874939]
[-56.50336838 135.48861694]
[-60.78112793 153.87556458]
[-77.59144592 167.11793518]
[-101.52263641 167.05464172]
[-114.11312103 175.20816040]
[-126.70359802 183.36167908]
[-139.29408264 191.51518250]
[-151.88456726 199.66870117]
[-158.86241150 214.50924683]
[-175.22412109 215.61669922]
[-184.13816833 201.85182190]
[-176.43453979 187.37474060]
[-160.03807068 187.07821655]
[-147.44760132 178.92469788]
[-134.85711670 170.77119446]
[-122.26663208 162.61767578]
[-109.67615509 154.46417236]
[-111.44095612 147.17475891]
[-124.21562195 155.03656006]
[-135.64010620 145.31642151]
[-129.92590332 131.44747925]
[-114.97057343 132.59594727]
[-116.73538208 125.30653381]
[-131.66102600 123.81483459]
[-146.58666992 122.32313538]
[-161.51231384 120.83142853]
[-173.67367554 130.56481934]
[-188.78915405 128.83940125]
[-197.99349976 117.18541718]
[-212.91914368 115.69371796]
[-227.63551331 122.92979431]
[-241.10787964 113.57952881]
[-239.47703552 97.26167297]
[-224.42065430 90.76263428]
[-211.42744446 100.76807404]
[-196.50180054 102.25977325]
[-185.17309570 92.65790558]
[-170.01512146 93.95808411]
[-160.02059937 105.90578461]
[-145.09497070 107.39749146]
[-130.16932678 108.88919067]
[-115.24367523 110.38088989]
[-98.70840454 100.17370605]
[-80.80684662 99.79108429]
[-66.53048706 107.82750702]
[-59.13323975 120.72096252]
[-44.36558151 118.09108734]
[-33.19198608 108.24222565]
[-18.24902916 113.44017029]
[-3.48136902 110.81029510]
[11.28629017 108.18042755]
[26.05394936 105.55055237]
[40.82160950 102.92067719]
[55.58926773 100.29080963]
[70.35692596 97.66093445]
[70.38910675 87.60678864]
[73.95406342 77.43005371]
[81.09215546 68.39517212]
[77.67435455 53.78973770]
[74.25655365 39.18430710]
[70.83874512 24.57887459]
[56.22854233 20.05237579]
[45.91377258 8.89431667]
[42.59106064 -5.83069468]
[47.05508423 -20.14601707]
[58.01136780 -30.23687553]
[54.59356689 -44.84230423]
[51.17576218 -59.44773865]
[36.60428238 -64.51483154]
[27.10344505 -76.66957092]
[25.70493317 -92.03341675]
[32.85500717 -105.70381927]
[46.27210617 -113.31861115]
[61.67488098 -112.44792938]
[74.14836121 -103.36961365]
[79.71231079 -88.98052216]
[76.59128571 -73.87215424]
[65.78119659 -62.86553955]
[69.19899750 -48.26010895]
[72.61679840 -33.65467834]
[86.91295624 -29.47311974]
[97.26545715 -18.62499619]
[100.82153320 -3.95459485]
[96.52884674 10.62174225]
[85.44417572 21.16107178]
[88.86198425 35.76650238]
[92.27978516 50.37193298]
[95.69758606 64.97736359]
[110.63422394 66.35466003]
[116.66519165 52.62049103]
[122.69616699 38.88632202]
[128.72712708 25.15215302]
[129.55938721 8.21864510]
[146.06152344 4.33071804]
[154.36575317 19.11165428]
[142.46130371 31.18312263]
[136.43032837 44.91729355]
[130.39936829 58.65146255]
[124.36839294 72.38562775]
[131.69560242 89.84688568]
[128.96734619 106.71386719]
[142.25328064 113.67688751]
[155.53923035 120.63990784]
[168.82518005 127.60292053]
[182.11112976 134.56593323]
[195.39707947 141.52896118]
[208.68302917 148.49197388]
[251.09071350 137.23678589]
[266.01635742 138.72850037]
[280.94198608 140.22019958]
[289.79714966 137.95899963]
[296.08432007 141.85083008]
[310.98535156 143.57109070]
[325.88638306 145.29133606]
[333.63116455 133.63999939]
[345.58392334 126.49720764]
[359.38204956 125.20841217]
[372.32662964 129.96841431]
[381.91033936 139.79446411]
[386.30310059 152.72853088]
[401.17602539 154.67692566]
[416.04895020 156.62533569]
[430.92187500 158.57373047]
[445.79476929 160.52212524]
[458.24871826 151.16598511]
[473.30419922 153.35380554]
[482.14712524 165.28437805]
[497.02001953 167.23277283]
[506.68725586 157.85003662]
[519.80212402 155.77993774]
[531.54010010 161.55711365]
[537.71313477 172.87055969]
[552.55444336 175.04664612]
[567.39581299 177.22273254]
[582.42913818 170.67063904]
[595.45758057 180.63018799]
[593.07849121 196.85585022]
[577.73931885 202.65605164]
[565.21972656 192.06404114]
[550.37835693 189.88795471]
[535.53704834 187.71188354]
[522.48962402 198.31991577]
[505.47158813 196.16915894]
[495.07162476 182.10569763]
[480.19873047 180.15730286]
[468.58108521 189.40748596]
[453.47006226 187.64341736]
[443.84637451 175.39503479]
[428.97344971 173.44664001]
[414.10055542 171.49824524]
[399.22763062 169.54985046]
[384.35470581 167.60145569]
[374.84432983 180.66264343]
[359.95968628 187.18428040]
[343.72409058 185.30023193]
[330.57836914 175.43049622]
[324.16613770 160.19236755]
[309.26510620 158.47212219]
[294.36407471 156.75186157]
[279.45028687 155.14584351]
[264.52465820 153.65414429]
[249.59901428 152.16242981]
[244.78298950 157.91186523]
[259.55734253 160.50392151]
[264.69982910 174.59487915]
[255.06799316 186.09393311]
[240.29360962 183.50215149]
[235.15097046 169.41073608]
[230.33496094 175.16017151]
[234.42037964 189.59309387]
[238.50581360 204.02601624]
[242.59124756 218.45893860]
[252.72299194 232.05247498]
[242.46543884 245.55133057]
[226.65455627 239.43150330]
[228.15832520 222.54437256]
[224.07289124 208.11145020]
[219.98745728 193.67852783]
[215.90203857 179.24560547]
[214.80848694 194.20568848]
[205.49800110 205.96643066]
[191.18803406 210.46363831]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 129]
[6 128]
[7 127]
[8 126]
[9 125]
[10 124]
[11 123]
[14 77]
[15 76]
[16 75]
[17 74]
[18 73]
[19 72]
[20 71]
[22 69]
[23 68]
[26 39]
[27 38]
[28 37]
[29 36]
[30 35]
[45 64]
[46 63]
[47 62]
[48 61]
[51 58]
[52 57]
[80 110]
[81 109]
[82 108]
[83 107]
[88 102]
[89 101]
[90 100]
[111 121]
[112 120]
[113 119]
[114 118]
[130 184]
[131 183]
[132 182]
[134 181]
[135 180]
[136 179]
[142 174]
[143 173]
[144 172]
[145 171]
[146 170]
[149 167]
[150 166]
[154 163]
[155 162]
[156 161]
[191 201]
[192 200]
[193 199]
[194 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
