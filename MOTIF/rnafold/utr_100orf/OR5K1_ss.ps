%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:12:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCUCUCCUUCCUUUAAGCCAAAGAGACCUAAAUAACUGUGGCAUAUUAUAAAUUAGUGCCUUCUUUCUCCACAAUUUUUUUUCAGACAAGUCAGGAAUGGCUGAAGAAAAUCAUACCAUGAAAAAUGAGUUUAUCCUCACAGGAUUUACAGAUCACCCUGAGCUGAAGACUCUGCUGUUUGUGGUGUUCUUUGCCA\
) } def
/len { sequence length } bind def

/coor [
[38.53966141 119.43994904]
[31.50672722 121.75233459]
[24.17659760 121.47999573]
[17.46060371 118.70413208]
[12.17728424 113.81426239]
[8.95266533 107.45424652]
[-6.01713467 106.50289154]
[-20.98693466 105.55152893]
[-35.95673370 104.60017395]
[-47.75841904 114.76668549]
[-62.92637253 113.58862305]
[-72.54586029 102.27486420]
[-87.51566315 101.32350922]
[-102.48545837 100.37214661]
[-109.22933960 113.96611023]
[-120.63327789 123.91564941]
[-134.93901062 128.72807312]
[-149.95666504 127.69956207]
[-163.39990234 121.01791382]
[-173.23402405 109.72919464]
[-177.98397827 95.57407379]
[-192.95378113 94.62271881]
[-207.92356873 93.67135620]
[-222.89337158 92.72000122]
[-237.86317444 91.76863861]
[-252.83297729 90.81728363]
[-267.80276489 89.86592102]
[-271.94396973 104.78974915]
[-279.08596802 118.52608490]
[-288.91650391 130.47937012]
[-301.00677490 140.13189697]
[-314.83013916 147.06623840]
[-329.78518677 150.98330688]
[-345.22171021 151.71519470]
[-360.46911621 149.23248291]
[-374.86550903 143.64529419]
[-387.78640747 135.19851685]
[-398.67193604 124.26097870]
[-407.05087280 111.30941010]
[-412.56127930 96.90763855]
[-414.96597290 81.68203735]
[-429.94897461 80.96830750]
[-444.93197632 80.25458527]
[-459.91500854 79.54085541]
[-474.89801025 78.82712555]
[-482.59255981 92.05786896]
[-495.56054688 100.18744659]
[-510.82199097 101.34775543]
[-524.86999512 95.27215576]
[-534.47631836 83.35677338]
[-537.43365479 68.33968353]
[-533.06225586 53.67169571]
[-522.36676025 42.72341156]
[-507.80487061 38.01066589]
[-492.72280884 40.61641312]
[-480.58633423 49.94186783]
[-474.18426514 63.84411621]
[-459.20126343 64.55784607]
[-444.21826172 65.27156830]
[-429.23526001 65.98529816]
[-414.25222778 66.69902802]
[-410.71057129 52.59117889]
[-404.47412109 39.44482422]
[-395.78240967 27.76928329]
[-384.97000122 18.01730347]
[-372.45382690 10.56752110]
[-358.71694946 5.70975447]
[-344.29010010 3.63372850]
[-329.73098755 4.42166758]
[-315.60281372 8.04503918]
[-302.45251465 14.36558437]
[-290.78961182 23.14059067]
[-281.06631470 34.03221130]
[-273.66021729 46.62047195]
[-268.85940552 60.41946793]
[-266.85140991 74.89612579]
[-251.88162231 75.84748077]
[-236.91181946 76.79884338]
[-221.94201660 77.75019836]
[-206.97221375 78.70156097]
[-192.00241089 79.65291595]
[-177.03262329 80.60427856]
[-170.52894592 67.16435242]
[-159.34486389 57.21137619]
[-145.16394043 52.28529358]
[-130.13691711 53.16617966]
[-116.55548096 59.75088501]
[-106.50283051 71.06402588]
[-101.53410339 85.40235138]
[-86.56430054 86.35370636]
[-71.59449768 87.30506897]
[-60.62017059 77.30008698]
[-45.42510986 78.05165100]
[-35.00537491 89.63037109]
[-20.03557587 90.58173370]
[-5.06577587 91.53308868]
[9.90402412 92.48445129]
[28.81040573 80.37674713]
[48.04594040 93.33485413]
[63.04405212 93.09686279]
[78.04216766 92.85887909]
[93.04027557 92.62088776]
[100.41815186 89.35142517]
[108.27779388 92.50000000]
[123.27779388 92.50000000]
[138.27778625 92.50000000]
[153.27778625 92.50000000]
[168.27778625 92.50000000]
[159.72930908 80.17427826]
[163.87962341 65.75988007]
[177.67370605 59.86723328]
[190.95773315 66.83390808]
[193.95335388 81.53173828]
[184.45474243 93.14202118]
[199.40756226 94.33077240]
[214.36038208 95.51951599]
[229.31320190 96.70826721]
[244.26603699 97.89701843]
[259.21884155 99.08576965]
[274.17166138 100.27452087]
[289.12448120 101.46326447]
[304.07733154 102.65201569]
[319.03015137 103.84076691]
[328.26110840 90.12895203]
[343.06124878 82.98146057]
[359.35275269 84.26251984]
[372.69961548 93.52839661]
[379.51550293 108.17412567]
[394.48529053 109.12548828]
[409.45510864 110.07684326]
[424.42489624 111.02820587]
[439.39471436 111.97956085]
[454.36450195 112.93092346]
[463.13815308 110.35009003]
[469.56369019 114.01799011]
[484.51651001 115.20673370]
[499.48629761 116.15809631]
[514.46929932 116.87182617]
[529.45233154 117.58555603]
[544.43530273 118.29927826]
[554.83184814 104.96375275]
[570.96716309 100.49326324]
[586.43402100 106.45762634]
[595.21246338 120.32325745]
[610.20489502 120.79917908]
[625.19732666 121.27510071]
[640.18981934 121.75101471]
[654.38146973 113.53344727]
[668.45703125 121.94840240]
[667.93670654 138.33929443]
[653.35577393 145.84457397]
[639.71386719 136.74346924]
[624.72143555 136.26754761]
[609.72900391 135.79162598]
[594.73651123 135.31570435]
[587.56018066 146.58067322]
[575.65789795 152.87672424]
[562.09100342 152.46345520]
[550.40911865 145.34190369]
[543.72161865 133.28228760]
[528.73858643 132.56855774]
[513.75555420 131.85482788]
[498.77258301 131.14109802]
[494.69192505 133.64111328]
[488.99560547 133.59690857]
[483.32775879 130.15956116]
[468.37493896 128.97080994]
[453.41314697 127.90071869]
[438.44332886 126.94936371]
[423.47354126 125.99800110]
[408.50375366 125.04664612]
[393.53393555 124.09528351]
[378.56414795 123.14392853]
[371.76144409 134.99281311]
[360.46166992 142.79029846]
[346.83920288 144.96659851]
[333.54550171 141.04035950]
[323.19290161 131.72364807]
[317.84140015 118.79358673]
[302.88858032 117.60483551]
[287.93576050 116.41608429]
[272.98291016 115.22734070]
[258.03009033 114.03858948]
[243.07728577 112.84983826]
[228.12446594 111.66108704]
[213.17163086 110.47234344]
[198.21881104 109.28359222]
[183.26599121 108.09484100]
[168.27778625 107.50000000]
[153.27778625 107.50000000]
[138.27778625 107.50000000]
[123.27779388 107.50000000]
[108.27779388 107.50000000]
[93.27826691 107.61899567]
[78.28015137 107.85698700]
[63.28204346 108.09497833]
[48.28393173 108.33296967]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 97]
[7 96]
[8 95]
[9 94]
[12 91]
[13 90]
[14 89]
[21 82]
[22 81]
[23 80]
[24 79]
[25 78]
[26 77]
[27 76]
[41 61]
[42 60]
[43 59]
[44 58]
[45 57]
[99 197]
[100 196]
[101 195]
[102 194]
[104 193]
[105 192]
[106 191]
[107 190]
[108 189]
[114 188]
[115 187]
[116 186]
[117 185]
[118 184]
[119 183]
[120 182]
[121 181]
[122 180]
[123 179]
[128 173]
[129 172]
[130 171]
[131 170]
[132 169]
[133 168]
[135 167]
[136 166]
[137 163]
[138 162]
[139 161]
[140 160]
[144 155]
[145 154]
[146 153]
[147 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
