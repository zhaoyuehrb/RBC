%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:17:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACAAAGGGGUGGUCACCCUGCCCUCACCUUGACCUGUAAGUUGCCUAGGACAGUGGCCUGGUCCCAGGGGCUGUUGUGGGGAGUUGAAGAACACCCUGGCCUCCUCCAUCAUGUCGGCCAAGAGGGCAGAAUUGAAGAAAACACAUCUGAGCAAGAACUACAAGGCAGUUUGCCUGGAAUUGAAGCCAGAGCCGACCAAAACAUUUGAUU\
) } def
/len { sequence length } bind def

/coor [
[236.27851868 470.86480713]
[228.52697754 457.28363037]
[231.36959839 441.90658569]
[243.46418762 431.99423218]
[243.46418762 416.99423218]
[243.46418762 401.99423218]
[243.46418762 386.99423218]
[229.27629089 379.25869751]
[220.87745667 365.34329224]
[220.64135742 348.99749756]
[228.72712708 334.68179321]
[243.01011658 326.35040283]
[242.78889465 311.35205078]
[242.56765747 296.35366821]
[242.34643555 281.35531616]
[242.12519836 266.35693359]
[218.56912231 257.25308228]
[202.00144958 238.10720825]
[196.34651184 213.36117554]
[202.98744202 188.79409790]
[191.10398865 179.64074707]
[179.22055054 170.48739624]
[167.33711243 161.33406067]
[155.45365906 152.18070984]
[143.57022095 143.02735901]
[131.68676758 133.87400818]
[119.80332947 124.72067261]
[102.71823120 143.04165649]
[71.50600433 146.55195618]
[39.41888428 126.27303314]
[26.31929970 133.58062744]
[13.21971607 140.88821411]
[0.12013263 148.19581604]
[-5.62582350 163.17457581]
[-20.96215630 167.88377380]
[-34.12414169 158.71089172]
[-35.01503372 142.69259644]
[-22.95141411 132.11674500]
[-7.18745995 135.09622192]
[5.91212368 127.78863525]
[19.01170731 120.48104095]
[32.11128998 113.17344666]
[31.39336586 105.70788574]
[17.74469757 99.48583984]
[29.95751381 90.77677155]
[29.23958778 83.31121063]
[14.98747635 78.63389587]
[0.73536372 73.95657349]
[-13.51674843 69.27925873]
[-29.04150963 72.32759857]
[-38.72155762 61.00744247]
[-52.97366714 56.33012390]
[-67.22578430 51.65280914]
[-81.47789001 46.97549057]
[-95.73000336 42.29817581]
[-109.98211670 37.62085724]
[-121.82186890 42.73529053]
[-133.59555054 38.54724884]
[-139.17506409 27.81540489]
[-153.35662842 22.92839622]
[-167.53820801 18.04138756]
[-181.71978760 13.15437889]
[-197.70652771 16.80899429]
[-208.66508484 4.60890675]
[-203.32223511 -10.89547920]
[-187.17424011 -13.75458050]
[-176.83277893 -1.02719915]
[-162.65119934 3.85980940]
[-148.46961975 8.74681759]
[-134.28805542 13.63382626]
[-117.26509857 9.36664581]
[-105.30480194 23.36874580]
[-91.05268860 28.04606247]
[-76.80057526 32.72338104]
[-62.54846573 37.40069580]
[-48.29635239 42.07801437]
[-34.04423904 46.75532913]
[-19.53888512 43.37243652]
[-8.83943176 55.02714539]
[5.41268063 59.70446396]
[19.66479301 64.38178253]
[33.91690445 69.05909729]
[38.70950699 63.29013062]
[48.29471207 51.75220108]
[53.08731461 45.98323441]
[45.87652588 32.83012009]
[38.66573334 19.67700005]
[24.37531281 11.63238239]
[24.46753311 -4.76650572]
[38.84752655 -12.64989376]
[52.72238922 -3.90802693]
[51.81885147 12.46621037]
[59.02964401 25.61932755]
[66.24043274 38.77244568]
[73.60298920 37.34318924]
[70.74469757 22.61803246]
[85.46990204 19.75997353]
[88.32810211 34.48467255]
[95.69065094 33.05541611]
[97.45645905 18.15971375]
[99.22226715 3.26401234]
[100.98807526 -11.63168907]
[102.75388336 -26.52739143]
[89.47542572 -33.92678833]
[80.04328156 -45.84748459]
[75.89577484 -60.47166824]
[77.66538239 -75.56924438]
[85.08223724 -88.83795929]
[97.01533508 -98.25441742]
[111.64495850 -102.38267517]
[126.74019623 -100.59321594]
[139.99914551 -93.15891266]
[149.39988708 -81.21343994]
[153.50891113 -66.57839203]
[151.69958496 -51.48552322]
[144.24784851 -38.23637390]
[132.29002380 -28.85134315]
[117.64958191 -24.76158333]
[115.88378143 -9.86588192]
[114.11797333 5.02981949]
[112.35216522 19.92552185]
[110.58635712 34.82122421]
[142.96083069 76.73934937]
[128.95668030 112.83722687]
[140.84011841 121.99057007]
[152.72355652 131.14392090]
[164.60700989 140.29725647]
[176.49044800 149.45060730]
[188.37390137 158.60395813]
[200.25733948 167.75729370]
[212.14079285 176.91064453]
[218.08842468 171.96215820]
[224.69309998 167.94116211]
[231.81147766 164.93330383]
[239.28930664 163.00228882]
[246.96478271 162.18852234]
[254.67201233 162.50819397]
[262.24459839 163.95306396]
[269.51931763 166.49058533]
[276.33950806 170.06468201]
[282.55850220 174.59696960]
[288.04281616 179.98846436]
[292.67501831 186.12179565]
[296.35610962 192.86369324]
[299.00781250 200.06790161]
[300.57412720 207.57841492]
[301.02258301 215.23274231]
[300.34487915 222.86552429]
[314.66442871 227.33213806]
[328.98397827 231.79875183]
[343.30349731 236.26535034]
[352.42614746 235.83320618]
[357.80044556 240.90487671]
[372.05255127 245.58218384]
[380.06198120 233.55024719]
[390.90637207 224.01258850]
[403.84088135 217.61599731]
[417.97915649 214.79173279]
[432.35427856 215.72656250]
[445.98471069 220.35035706]
[457.94143677 228.34133911]
[467.41125488 239.14840698]
[473.75204468 252.02926636]
[476.53628540 266.10128784]
[475.58001709 280.40203857]
[489.76159668 285.28903198]
[503.94317627 290.17602539]
[518.12475586 295.06304932]
[532.30633545 299.95004272]
[549.25115967 299.39401245]
[554.47625732 315.52270508]
[540.42431641 325.00848389]
[527.41931152 314.13162231]
[513.23773193 309.24462891]
[499.05615234 304.35760498]
[484.87457275 299.47061157]
[470.69299316 294.58358765]
[461.77655029 307.38061523]
[449.60693359 317.15917969]
[435.16329956 323.12194824]
[419.61074829 324.77914429]
[404.20635986 321.98858643]
[390.19754028 314.96789551]
[378.72097778 304.27764893]
[370.71054077 290.77648926]
[366.82110596 275.55227661]
[367.37524414 259.83428955]
[353.12310791 255.15698242]
[338.83691406 250.58489990]
[324.51736450 246.11828613]
[310.19781494 241.65168762]
[295.87826538 237.18507385]
[289.13641357 247.76492310]
[280.06225586 256.42776489]
[269.18124390 262.67190552]
[257.12356567 266.13571167]
[257.34478760 281.13409424]
[257.56604004 296.13244629]
[257.78726196 311.13082886]
[258.00848389 326.12918091]
[270.56072998 332.30014038]
[279.18869019 343.22494507]
[282.25350952 356.73651123]
[279.21276855 370.18566895]
[270.71536255 380.96066284]
[258.46417236 386.99423218]
[258.46417236 401.99423218]
[258.46417236 416.99423218]
[258.46417236 431.99423218]
[270.55877686 441.90658569]
[273.40139771 457.28363037]
[265.64984131 470.86480713]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 209]
[5 208]
[6 207]
[7 206]
[12 200]
[13 199]
[14 198]
[15 197]
[16 196]
[20 131]
[21 130]
[22 129]
[23 128]
[24 127]
[25 126]
[26 125]
[27 124]
[30 42]
[31 41]
[32 40]
[33 39]
[46 82]
[47 81]
[48 80]
[49 79]
[51 77]
[52 76]
[53 75]
[54 74]
[55 73]
[56 72]
[59 70]
[60 69]
[61 68]
[62 67]
[85 94]
[86 93]
[87 92]
[99 122]
[100 121]
[101 120]
[102 119]
[103 118]
[148 192]
[149 191]
[150 190]
[151 189]
[153 188]
[154 187]
[165 177]
[166 176]
[167 175]
[168 174]
[169 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
