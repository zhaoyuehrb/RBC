%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:41:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUCGUGCGCCUACCAGACAGUGGCGGAGGACGGCGCUCGCUAGUCUCCCAGGUCGCGGUACACGGCGAGAACGGGCGGGGCGGUCUCGGCUGCGUCCGGGCGAUCCAGUGCUUAGUUCCGUCAUAUCCCUCUCCACGACCUCGGUCGAGCAUGUUCACCAGGGCCCAGGUGAGACGGAUUCUGCAGCGGGUGCCCGGGAAGCAGCGAUUUGGCAUCUACCGGUUCCUGCCCUUCUUUUUUGUCCUGGGAG\
) } def
/len { sequence length } bind def

/coor [
[31.97937012 222.17317200]
[23.84117508 234.77355957]
[15.70298195 247.37394714]
[7.72250032 260.07482910]
[-0.09902749 272.87417603]
[-0.69275534 288.68423462]
[-13.93137074 295.50979614]
[-21.75289917 308.30917358]
[-29.57442665 321.10852051]
[-37.39595413 333.90789795]
[-45.21748352 346.70724487]
[-41.72646332 361.88784790]
[-49.84093857 374.75680542]
[-64.33483124 377.99142456]
[-72.15635681 390.79077148]
[-63.48025131 403.30657959]
[-60.65124130 418.27041626]
[-64.15947723 433.08972168]
[-73.39712524 445.19699097]
[-86.76371765 452.49453735]
[-101.94341278 453.71801758]
[-116.30622101 448.65545654]
[-127.36371613 438.18399048]
[-133.20011902 424.11782837]
[-132.80421448 408.89407349]
[-126.24462891 395.15026855]
[-114.65782928 385.26766968]
[-100.05130768 380.95846558]
[-84.95571899 382.96923828]
[-77.13419342 370.16989136]
[-80.86808014 355.79650879]
[-73.11827087 342.70471191]
[-58.01684570 338.88574219]
[-50.19531631 326.08636475]
[-42.37379074 313.28701782]
[-34.55226135 300.48764038]
[-26.73073387 287.68829346]
[-26.69645500 272.79370117]
[-12.89839077 265.05264282]
[-5.07686281 252.25329590]
[-5.29915524 247.50660706]
[-2.55995417 242.56520081]
[3.10259295 239.23576355]
[11.24078655 226.63537598]
[19.37898064 214.03498840]
[27.43847466 201.38410950]
[35.41895676 188.68324280]
[43.39943695 175.98239136]
[51.37991714 163.28152466]
[59.36040115 150.58065796]
[67.34088135 137.87979126]
[75.32136536 125.17893219]
[83.30184174 112.47807312]
[77.11575317 101.49847412]
[78.17492676 87.76389313]
[63.18541718 88.32476044]
[48.19590378 88.88562775]
[39.66312408 101.84600067]
[25.13021088 107.28420258]
[10.18536472 103.10913086]
[0.57518613 90.92618561]
[-0.00501583 75.41996002]
[8.66785812 62.55291748]
[23.25891113 57.27268982]
[38.15758514 61.60963821]
[47.63503647 73.89611816]
[62.62454987 73.33525085]
[77.61405945 72.77438354]
[90.96213531 65.93122101]
[100.16755676 54.08806992]
[109.37297821 42.24491882]
[118.57839966 30.40176964]
[121.36318207 21.73060989]
[127.97314453 18.46930504]
[137.32548523 6.74183226]
[146.67784119 -4.98564005]
[156.03018188 -16.71311188]
[165.38253784 -28.44058418]
[174.73487854 -40.16805649]
[184.08721924 -51.89553070]
[193.43957520 -63.62300110]
[202.64498901 -75.46614838]
[211.70205688 -87.42314148]
[220.75912476 -99.38012695]
[229.81619263 -111.33711243]
[220.12927246 -130.63427734]
[221.61065674 -152.10221863]
[233.77342224 -169.76559448]
[253.16806030 -178.74598694]
[274.36041260 -176.60917664]
[282.18194580 -189.40853882]
[290.00347900 -202.20790100]
[297.82501221 -215.00726318]
[305.64651489 -227.80662537]
[305.68966675 -246.23294067]
[321.44061279 -253.99618530]
[329.10198975 -266.89205933]
[336.76333618 -279.78793335]
[344.42471313 -292.68380737]
[352.08605957 -305.57968140]
[359.74740601 -318.47555542]
[367.40878296 -331.37142944]
[369.09375000 -340.32156372]
[375.24688721 -344.37948608]
[383.06842041 -357.17883301]
[390.88995361 -369.97821045]
[398.71145630 -382.77755737]
[395.22045898 -397.95816040]
[403.33493042 -410.82711792]
[417.82882690 -414.06170654]
[425.65032959 -426.86108398]
[433.47186279 -439.66043091]
[426.15914917 -451.56774902]
[424.69146729 -465.39755249]
[429.29809570 -478.44979858]
[439.02804565 -488.20092773]
[451.94564819 -492.79165649]
[465.51556396 -491.38137817]
[473.49603271 -504.08224487]
[481.47653198 -516.78308105]
[489.45700073 -529.48394775]
[497.43750000 -542.18481445]
[505.41796875 -554.88568115]
[492.32531738 -547.56567383]
[480.41864014 -538.44256592]
[466.00439453 -534.29180908]
[451.06927490 -535.68548584]
[437.67184448 -542.43157959]
[427.65875244 -553.60015869]
[422.41009521 -567.65191650]
[422.64929199 -582.65002441]
[428.34338379 -596.52722168]
[438.70758057 -607.37084961]
[452.31329346 -613.68621826]
[467.28527832 -614.60296631]
[481.55841064 -609.99542236]
[482.88568115 -595.05426025]
[488.88406372 -608.80267334]
[494.88244629 -622.55108643]
[500.88082886 -636.29956055]
[498.50802612 -652.52612305]
[511.54025269 -662.48065186]
[526.57110596 -655.92272949]
[528.13812256 -639.59863281]
[514.62927246 -630.30114746]
[508.63088989 -616.55273438]
[502.63250732 -602.80426025]
[496.63412476 -589.05584717]
[502.43911743 -584.30694580]
[511.93692017 -595.91693115]
[521.43475342 -607.52691650]
[535.46496582 -612.83282471]
[533.04473877 -598.02905273]
[523.54687500 -586.41912842]
[514.04907227 -574.80914307]
[519.85406494 -570.06024170]
[532.14135742 -578.66387939]
[544.42864990 -587.26751709]
[556.71588135 -595.87115479]
[569.00317383 -604.47479248]
[569.13934326 -619.99127197]
[578.39691162 -632.44427490]
[593.21612549 -637.04541016]
[607.89874268 -632.02539062]
[616.79895020 -619.31451416]
[616.49450684 -603.80041504]
[607.10241699 -591.44860840]
[592.23413086 -587.00854492]
[577.60681152 -592.18750000]
[565.31958008 -583.58386230]
[553.03228760 -574.98022461]
[540.74499512 -566.37658691]
[528.45770264 -557.77294922]
[518.11883545 -546.90521240]
[510.13836670 -534.20434570]
[502.15786743 -521.50347900]
[494.17739868 -508.80261230]
[486.19689941 -496.10174561]
[478.21643066 -483.40087891]
[486.11605835 -469.29058838]
[485.81243896 -453.02828979]
[477.29379272 -439.06219482]
[462.80819702 -431.26016235]
[446.27124023 -431.83889771]
[438.44970703 -419.03955078]
[430.62817383 -406.24017334]
[434.36206055 -391.86682129]
[426.61224365 -378.77502441]
[411.51083374 -374.95602417]
[403.68930054 -362.15667725]
[395.86776733 -349.35729980]
[388.04623413 -336.55795288]
[380.30465698 -323.71008301]
[372.64328003 -310.81420898]
[364.98193359 -297.91833496]
[357.32058716 -285.02246094]
[349.65921021 -272.12658691]
[341.99786377 -259.23071289]
[334.33648682 -246.33482361]
[337.01739502 -234.55610657]
[330.76229858 -223.75637817]
[318.44589233 -219.98509216]
[310.62435913 -207.18572998]
[302.80282593 -194.38636780]
[294.98129272 -181.58700562]
[287.15979004 -168.78764343]
[293.08685303 -162.17231750]
[297.42712402 -154.40937805]
[299.96539307 -145.87313843]
[300.57351685 -136.97653198]
[299.21682739 -128.15112305]
[295.95611572 -119.82609558]
[290.94488525 -112.40748596]
[284.42218018 -106.25828552]
[276.70111084 -101.68077087]
[268.15386963 -98.90155792]
[259.19378662 -98.06045532]
[250.25537109 -99.20341492]
[241.77317810 -102.28004456]
[232.71611023 -90.32305908]
[223.65904236 -78.36607361]
[214.60198975 -66.40908813]
[214.35055542 -61.66384888]
[211.13296509 -57.01974487]
[205.16705322 -54.27065277]
[195.81469727 -42.54318237]
[186.46235657 -30.81571007]
[177.11000061 -19.08823776]
[167.75765991 -7.36076546]
[158.40530396 4.36670685]
[149.05296326 16.09417915]
[139.70062256 27.82165146]
[130.42155457 39.60719299]
[121.21613312 51.45034027]
[112.01071167 63.29349136]
[102.80528259 75.13664246]
[112.06939697 78.68009949]
[119.04576111 85.43413544]
[122.72535706 94.19434357]
[122.66656494 103.48725891]
[119.04231262 111.81762695]
[112.58618927 117.90895081]
[104.45047760 120.89874268]
[96.00270844 120.45854950]
[88.02222443 133.15940857]
[80.04174042 145.86027527]
[72.06126404 158.56114197]
[64.08078003 171.26200867]
[56.10029984 183.96286011]
[48.11981964 196.66372681]
[40.13933945 209.36459351]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 45]
[2 44]
[3 43]
[4 40]
[5 39]
[7 37]
[8 36]
[9 35]
[10 34]
[11 33]
[14 30]
[15 29]
[46 251]
[47 250]
[48 249]
[49 248]
[50 247]
[51 246]
[52 245]
[53 244]
[55 68]
[56 67]
[57 66]
[69 236]
[70 235]
[71 234]
[72 233]
[74 232]
[75 231]
[76 230]
[77 229]
[78 228]
[79 227]
[80 226]
[81 225]
[82 222]
[83 221]
[84 220]
[85 219]
[90 206]
[91 205]
[92 204]
[93 203]
[94 202]
[96 199]
[97 198]
[98 197]
[99 196]
[100 195]
[101 194]
[102 193]
[104 192]
[105 191]
[106 190]
[107 189]
[110 186]
[111 185]
[112 184]
[118 179]
[119 178]
[120 177]
[121 176]
[122 175]
[123 174]
[137 148]
[138 147]
[139 146]
[140 145]
[156 173]
[157 172]
[158 171]
[159 170]
[160 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
