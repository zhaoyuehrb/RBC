%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:40:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGGAAGUUCUGCCUUGUCUCCGCCGCGGGUCAGGGGUGAGAGCUGGAAUCUCUGCACGGGCCUUGGAAAACGACUGUCUUCUUCUGCCAAAAUGUCAGGAAUUGGAAAUAAAAGAGCAGCUGGAGAACCUGGCACCUCCAUGCCUCCUGAGAAGAAGGCAGCUGUUGAAGAUUCAGGGACCACAGUGGAAA\
) } def
/len { sequence length } bind def

/coor [
[-23.75413704 231.81355286]
[-34.31748962 242.46322632]
[-35.65244675 247.54083252]
[-38.52138901 251.22235107]
[-42.13157654 253.15643311]
[-45.66602325 253.35910034]
[-56.73663330 263.48043823]
[-67.80724335 273.60177612]
[-78.87785339 283.72314453]
[-89.94845581 293.84448242]
[-101.01906586 303.96582031]
[-112.00693512 314.17694092]
[-122.91133118 324.47714233]
[-133.81571960 334.77734375]
[-144.72012329 345.07754517]
[-155.62452698 355.37774658]
[-153.77946472 370.67160034]
[-161.20689392 383.96395874]
[-174.87545776 390.25952148]
[-189.45562744 387.33432007]
[-200.36001587 397.63449097]
[-211.26441956 407.93469238]
[-222.16880798 418.23489380]
[-229.53132629 433.50677490]
[-246.24450684 430.65966797]
[-248.13533020 413.81149292]
[-232.46900940 407.33050537]
[-221.56462097 397.03030396]
[-210.66021729 386.73010254]
[-199.75581360 376.42990112]
[-201.84606934 361.70684814]
[-194.78242493 348.41891479]
[-181.08869934 341.76043701]
[-165.92471313 344.47332764]
[-155.02032471 334.17312622]
[-144.11592102 323.87292480]
[-133.21153259 313.57272339]
[-122.30713654 303.27255249]
[-119.59934998 296.38348389]
[-111.14041138 292.89520264]
[-100.06980133 282.77386475]
[-88.99919128 272.65252686]
[-77.92858887 262.53118896]
[-66.85797882 252.40983582]
[-55.78736877 242.28848267]
[-44.96716690 231.89988708]
[-34.40381241 221.25019836]
[-37.75993347 208.31951904]
[-34.25664902 195.31575012]
[-24.70665741 185.66703796]
[-11.53105736 181.97171021]
[1.85386050 185.29908752]
[12.58915710 174.82276917]
[23.32445335 164.34643555]
[34.05974960 153.87011719]
[44.79504395 143.39378357]
[42.46541977 128.70668030]
[49.31185150 115.30554962]
[62.89537811 108.42505646]
[78.10150909 110.89077759]
[88.83680725 100.41445160]
[99.48648071 89.85110474]
[110.04983521 79.20142365]
[120.61318207 68.55175018]
[131.17652893 57.90207291]
[141.73988342 47.25239563]
[152.30323792 36.60271835]
[162.86659241 25.95304298]
[166.94020081 3.92546916]
[188.00459290 -1.02525520]
[197.85264587 -12.33966732]
[207.70069885 -23.65407944]
[217.54875183 -34.96849060]
[220.77285767 -50.45770264]
[234.96498108 -54.97798538]
[244.81303406 -66.29239655]
[254.66108704 -77.60681152]
[264.50912476 -88.92121887]
[274.35717773 -100.23563385]
[284.20523071 -111.55004883]
[294.05328369 -122.86445618]
[303.90133667 -134.17886353]
[313.74938965 -145.49328613]
[323.59744263 -156.80769348]
[333.44549561 -168.12210083]
[318.78634644 -164.94252014]
[304.46878052 -169.41548157]
[294.22668457 -180.37446594]
[290.73110962 -194.96148682]
[294.89370728 -209.37234497]
[305.62884521 -219.84883118]
[320.13693237 -223.65873718]
[334.63436890 -219.80848694]
[345.34033203 -209.30220032]
[349.46282959 -194.87982178]
[345.92630005 -180.30184937]
[357.47778320 -189.87074280]
[369.02923584 -199.43962097]
[380.58071899 -209.00849915]
[392.13220215 -218.57739258]
[403.68365479 -228.14627075]
[405.50738525 -233.06950378]
[408.72164917 -236.45372009]
[412.50320435 -238.02655029]
[416.04058838 -237.88360596]
[428.04537964 -246.87721252]
[424.98699951 -257.74969482]
[425.39004517 -269.01028442]
[429.19982910 -279.58618164]
[436.03793335 -288.47476196]
[445.23965454 -294.83862305]
[455.91857910 -298.08450317]
[467.05203247 -297.91851807]
[477.57897949 -294.37271118]
[486.50112915 -287.80050659]
[499.06567383 -295.99398804]
[511.63018799 -304.18743896]
[515.00476074 -319.39434814]
[527.86364746 -327.52468872]
[542.34033203 -324.21386719]
[554.90484619 -332.40731812]
[567.46936035 -340.60076904]
[580.03387451 -348.79425049]
[592.59838867 -356.98770142]
[597.29785156 -372.32702637]
[612.27294922 -378.08248901]
[626.03613281 -369.83901978]
[628.02941895 -353.92028809]
[616.72375488 -342.53778076]
[600.79187012 -344.42318726]
[588.22735596 -336.22973633]
[575.66284180 -328.03625488]
[563.09832764 -319.84280396]
[550.53381348 -311.64935303]
[547.72558594 -297.06683350]
[535.10009766 -288.57852173]
[519.82366943 -291.62292480]
[507.25912476 -283.42944336]
[494.69461060 -275.23599243]
[496.75048828 -256.46246338]
[488.96694946 -239.16572571]
[473.41937256 -228.15957642]
[454.35641479 -226.55299377]
[437.03897095 -234.87242126]
[425.03417969 -225.87881470]
[413.25253296 -216.59480286]
[401.70108032 -207.02590942]
[390.14959717 -197.45703125]
[378.59814453 -187.88815308]
[367.04666138 -178.31925964]
[355.49517822 -168.75038147]
[344.75988770 -158.27406311]
[334.91183472 -146.95964050]
[325.06378174 -135.64523315]
[315.21572876 -124.33081818]
[305.36770630 -113.01641083]
[295.51965332 -101.70199585]
[285.67160034 -90.38758850]
[275.82354736 -79.07317352]
[265.97549438 -67.75875854]
[256.12744141 -56.44434738]
[246.27938843 -45.12993622]
[243.75967407 -30.45000839]
[228.86315918 -25.12044144]
[219.01510620 -13.80602932]
[209.16705322 -2.49161744]
[199.31900024 8.82279396]
[201.53456116 16.41743851]
[200.54774475 24.36164474]
[196.44622803 31.34565163]
[189.83721924 36.18840408]
[181.75862122 38.03705978]
[173.51626587 36.51639557]
[162.95291138 47.16606903]
[152.38955688 57.81574631]
[141.82621765 68.46542358]
[131.26286316 79.11509705]
[120.69950867 89.76477814]
[110.13615417 100.41445160]
[107.14064789 107.91194916]
[99.31313324 111.14974976]
[88.57783508 121.62607574]
[90.67157745 136.88787842]
[83.46150208 150.29936218]
[69.89721680 156.81658936]
[55.27137375 154.12907410]
[44.53607559 164.60540771]
[33.80078125 175.08172607]
[23.06548309 185.55805969]
[12.33018684 196.03437805]
[15.00144577 212.72917175]
[7.27716589 227.58169556]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 47]
[2 46]
[6 45]
[7 44]
[8 43]
[9 42]
[10 41]
[11 40]
[12 38]
[13 37]
[14 36]
[15 35]
[16 34]
[20 30]
[21 29]
[22 28]
[23 27]
[52 190]
[53 189]
[54 188]
[55 187]
[56 186]
[60 182]
[61 181]
[62 179]
[63 178]
[64 177]
[65 176]
[66 175]
[67 174]
[68 173]
[70 167]
[71 166]
[72 165]
[73 164]
[75 162]
[76 161]
[77 160]
[78 159]
[79 158]
[80 157]
[81 156]
[82 155]
[83 154]
[84 153]
[85 152]
[96 151]
[97 150]
[98 149]
[99 148]
[100 147]
[101 146]
[105 145]
[106 144]
[115 139]
[116 138]
[117 137]
[120 134]
[121 133]
[122 132]
[123 131]
[124 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
