%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:54:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCCGCGCUCAGCAGGCGGGGCGGGAGCCGCGUGCGCCCGAGGACCCGGCCGGAAGGCUUGCGCCAGCUCAGGAUGAGGACAGGCUGGGCGACCCCUCGCCGCCCGGCGGGGCUCCUCAUGCUGCUCUUCUGGUUCUUCGAUCUCGCGGAGCCCUCUGGCCGCGCAGCUAAUG\
) } def
/len { sequence length } bind def

/coor [
[32.88889694 748.74877930]
[43.63162613 737.15704346]
[42.82418060 722.17877197]
[42.01673126 707.20050049]
[33.60554123 694.90820312]
[40.58876419 680.71154785]
[39.78131485 665.73327637]
[38.97386932 650.75500488]
[38.16641998 635.77679443]
[27.21335411 646.02520752]
[12.21702862 645.69323730]
[1.72823977 634.97009277]
[1.72761917 619.97009277]
[12.21551991 609.24609375]
[27.21181870 608.91284180]
[38.16641998 619.16186523]
[38.97386932 604.18365479]
[39.78131485 589.20538330]
[32.74034119 576.08007812]
[41.20928574 562.71636963]
[42.01673126 547.73815918]
[42.82418060 532.75988770]
[40.03510666 525.88842773]
[43.78294373 517.52075195]
[44.85913849 502.55938721]
[45.93532944 487.59805298]
[36.02223587 476.54064941]
[36.90051651 461.35238647]
[48.56575394 451.02960205]
[49.64194489 436.06826782]
[50.71813965 421.10690308]
[51.79433060 406.14556885]
[52.87052155 391.18423462]
[41.67869568 385.24426270]
[33.54365540 375.46932983]
[29.70680618 363.29562378]
[30.77462578 350.52935791]
[36.62310028 339.07882690]
[46.41094971 330.66915894]
[58.70048904 326.58233643]
[60.31304169 311.66928101]
[61.92559814 296.75619507]
[63.53815079 281.84313965]
[65.15070343 266.93005371]
[66.76325989 252.01699829]
[65.07859039 249.73678589]
[64.21123505 246.64089966]
[64.48060608 243.04302979]
[66.08461761 239.36801147]
[69.06422424 236.10562134]
[71.74257660 221.34667969]
[74.42092896 206.58773804]
[77.09928131 191.82878113]
[79.77763367 177.06983948]
[82.45598602 162.31089783]
[85.13434601 147.55195618]
[87.81269836 132.79301453]
[90.35846710 118.01062012]
[92.77145386 103.20597839]
[81.45628357 105.68579102]
[69.60166168 105.45562744]
[57.69815063 102.44126892]
[47.04405212 91.88237762]
[31.05574226 88.23464203]
[26.47982788 72.48684692]
[38.02361679 60.83897781]
[53.81185150 65.27335358]
[57.60294724 81.22827911]
[68.25704193 91.78717804]
[75.59778595 90.24979401]
[90.27925873 87.17503357]
[97.62000275 85.63764954]
[103.14186859 71.69100189]
[101.02809143 56.01163864]
[112.90727234 47.02640915]
[118.42913818 33.07976151]
[123.95101166 19.13311386]
[129.47288513 5.18646717]
[134.99475098 -8.76018047]
[140.51661682 -22.70682716]
[146.03848267 -36.65347672]
[135.87330627 -51.63422394]
[136.70233154 -69.56221008]
[148.00735474 -83.29873657]
[165.13630676 -87.48677826]
[170.15397644 -101.62265015]
[175.17166138 -115.75852203]
[180.18933105 -129.89439392]
[185.20701599 -144.03027344]
[190.22468567 -158.16613770]
[195.24237061 -172.30201721]
[200.26004028 -186.43789673]
[190.73831177 -198.57626343]
[189.31338501 -213.93768311]
[196.43992615 -227.62036133]
[209.84391785 -235.25822449]
[225.24816895 -234.41403198]
[237.73724365 -225.35719299]
[243.32592773 -210.97769165]
[240.23089600 -195.86396790]
[229.43975830 -184.83877563]
[214.39591980 -181.42021179]
[209.37823486 -167.28433228]
[204.36056519 -153.14846802]
[199.34288025 -139.01258850]
[194.32521057 -124.87671661]
[189.30752563 -110.74084473]
[184.28985596 -96.60497284]
[179.27217102 -82.46910095]
[187.57089233 -73.55731964]
[191.30264282 -61.88989258]
[189.69708252 -49.67294693]
[182.99932861 -39.24420929]
[172.43470764 -32.62565613]
[159.98513794 -31.13160706]
[154.46325684 -17.18495941]
[148.94139099 -3.23831201]
[143.41952515 10.70833492]
[137.89765930 24.65498352]
[132.37579346 38.60163116]
[126.85391998 52.54827881]
[129.36265564 67.23008728]
[117.08851624 77.21286774]
[111.56665039 91.15951538]
[107.57609558 105.61895752]
[105.16310883 120.42360687]
[106.87421417 129.43121338]
[102.57164001 135.47135925]
[99.89328766 150.23031616]
[97.21493530 164.98925781]
[94.53658295 179.74819946]
[91.85822296 194.50714111]
[89.17987061 209.26608276]
[86.50151825 224.02502441]
[83.82316589 238.78396606]
[81.67633057 253.62954712]
[80.06377411 268.54260254]
[78.45121765 283.45568848]
[76.83866882 298.36874390]
[75.22611237 313.28182983]
[73.61355591 328.19488525]
[88.02268982 338.20538330]
[95.35837555 354.04553223]
[93.68991852 371.33273315]
[83.56433868 385.33361816]
[67.83186340 392.26040649]
[66.75567627 407.22177124]
[65.67948151 422.18310547]
[64.60328674 437.14443970]
[63.52709579 452.10580444]
[73.59481812 463.99188232]
[72.29027557 479.14947510]
[60.89667511 488.67425537]
[59.82048035 503.63558960]
[58.74428940 518.59692383]
[57.80243301 533.56732178]
[56.99498367 548.54559326]
[56.18753433 563.52386475]
[63.17075729 577.72052002]
[54.75956726 590.01281738]
[53.95212173 604.99108887]
[53.14467239 619.96929932]
[53.14467239 634.96929932]
[53.95212173 649.94757080]
[54.75956726 664.92584229]
[55.56701660 679.90405273]
[64.03595734 693.26776123]
[56.99498367 706.39306641]
[57.80243301 721.37133789]
[58.60987854 736.34954834]
[70.53650665 746.71929932]
[71.55405426 762.49078369]
[61.05882263 774.30712891]
[45.27744675 775.15783691]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 170]
[3 169]
[4 168]
[6 166]
[7 165]
[8 164]
[9 163]
[16 162]
[17 161]
[18 160]
[20 158]
[21 157]
[22 156]
[24 155]
[25 154]
[26 153]
[29 150]
[30 149]
[31 148]
[32 147]
[33 146]
[40 141]
[41 140]
[42 139]
[43 138]
[44 137]
[45 136]
[50 135]
[51 134]
[52 133]
[53 132]
[54 131]
[55 130]
[56 129]
[57 128]
[58 126]
[59 125]
[62 69]
[63 68]
[72 124]
[73 123]
[75 121]
[76 120]
[77 119]
[78 118]
[79 117]
[80 116]
[81 115]
[85 109]
[86 108]
[87 107]
[88 106]
[89 105]
[90 104]
[91 103]
[92 102]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
