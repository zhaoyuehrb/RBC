%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:34:04 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TICRR)
} def

/sequence { (\
AUGGCAUGCUGUCACAAAGUAAUGCUGCUGCUGGACACCGCGGGCGGCGCCGCCCGCCACAGCCGGGUCCGGCGGGCCGCCCUGCGCCUCCUCACCUAUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 99 0.021460090 ubox
2 14 0.092009369 ubox
2 16 0.003900403 ubox
2 27 0.468416906 ubox
2 30 0.103576089 ubox
2 33 0.024933901 ubox
2 94 0.025430275 ubox
2 98 0.024692042 ubox
3 10 0.006498630 ubox
3 13 0.105845313 ubox
3 15 0.004061189 ubox
3 26 0.842988554 ubox
3 29 0.193808669 ubox
3 32 0.315156919 ubox
3 36 0.003423266 ubox
3 39 0.016819293 ubox
3 64 0.007890715 ubox
3 88 0.250666371 ubox
3 89 0.004308768 ubox
3 90 0.004846055 ubox
3 91 0.026996020 ubox
3 92 0.005618961 ubox
3 93 0.028489355 ubox
3 96 0.039872944 ubox
3 97 0.021453264 ubox
3 100 0.004720825 ubox
4 9 0.007533634 ubox
4 12 0.105982013 ubox
4 25 0.874539867 ubox
4 28 0.204178353 ubox
4 31 0.331250215 ubox
4 38 0.017048091 ubox
4 41 0.007723278 ubox
4 63 0.007896593 ubox
4 85 0.021450599 ubox
4 87 0.251085087 ubox
4 88 0.004351663 ubox
4 89 0.003465109 ubox
4 90 0.026656429 ubox
4 91 0.007273990 ubox
4 92 0.011962209 ubox
4 95 0.038148567 ubox
4 96 0.019302554 ubox
5 11 0.106023684 ubox
5 24 0.874721551 ubox
5 27 0.204207553 ubox
5 30 0.331333493 ubox
5 33 0.004055567 ubox
5 40 0.007690414 ubox
5 62 0.007887147 ubox
5 84 0.021564403 ubox
5 86 0.249307291 ubox
6 10 0.085944376 ubox
6 23 0.869907821 ubox
6 26 0.200389247 ubox
6 29 0.323946804 ubox
6 32 0.004495673 ubox
6 83 0.019590963 ubox
7 14 0.003778440 ubox
7 16 0.008488538 ubox
7 21 0.613637323 ubox
7 22 0.622167631 ubox
7 24 0.009812026 ubox
7 27 0.011628095 ubox
7 40 0.029202545 ubox
7 42 0.004567391 ubox
7 61 0.004569066 ubox
7 84 0.024004688 ubox
7 86 0.007259305 ubox
7 94 0.009493700 ubox
8 13 0.004258798 ubox
8 15 0.009502329 ubox
8 20 0.864594268 ubox
8 25 0.179423937 ubox
8 28 0.324952949 ubox
8 31 0.017993855 ubox
8 39 0.162652639 ubox
8 41 0.089492869 ubox
8 60 0.004557855 ubox
8 83 0.005378526 ubox
8 85 0.037301368 ubox
8 87 0.022409121 ubox
8 93 0.009984820 ubox
9 19 0.880185599 ubox
9 24 0.179211920 ubox
9 27 0.324332137 ubox
9 30 0.017983748 ubox
9 40 0.089340495 ubox
9 84 0.037378526 ubox
9 86 0.022080603 ubox
10 16 0.033838807 ubox
10 18 0.876381567 ubox
10 21 0.019219472 ubox
10 24 0.019881485 ubox
10 27 0.004351722 ubox
10 37 0.246335395 ubox
11 15 0.045906064 ubox
11 20 0.021038176 ubox
11 23 0.069894872 ubox
11 25 0.295033882 ubox
11 26 0.023680914 ubox
11 28 0.020256027 ubox
11 36 0.264425937 ubox
11 38 0.005877631 ubox
12 19 0.012190841 ubox
12 22 0.073342464 ubox
12 24 0.196664461 ubox
12 27 0.017039091 ubox
12 34 0.008337174 ubox
12 35 0.264332502 ubox
12 37 0.005421078 ubox
13 24 0.224075886 ubox
13 27 0.011722222 ubox
13 33 0.015221717 ubox
13 34 0.263851543 ubox
14 20 0.150628645 ubox
14 23 0.221000530 ubox
14 26 0.013017417 ubox
14 32 0.019246416 ubox
15 19 0.152114941 ubox
15 24 0.053218596 ubox
15 27 0.004675748 ubox
15 30 0.022907653 ubox
15 33 0.203764167 ubox
16 23 0.051731618 ubox
16 26 0.004149335 ubox
16 29 0.020583336 ubox
16 32 0.197503834 ubox
18 26 0.042464335 ubox
18 29 0.269196454 ubox
18 32 0.043682707 ubox
18 97 0.005093709 ubox
19 25 0.043112397 ubox
19 28 0.271657737 ubox
19 31 0.047471856 ubox
19 36 0.014277937 ubox
19 85 0.016880080 ubox
19 95 0.004808733 ubox
19 96 0.005170373 ubox
19 99 0.004381466 ubox
20 24 0.040340446 ubox
20 27 0.270418710 ubox
20 30 0.047404350 ubox
20 35 0.014195057 ubox
20 84 0.016883224 ubox
20 94 0.004643760 ubox
20 98 0.004554602 ubox
21 26 0.247191901 ubox
21 29 0.045729481 ubox
21 83 0.016466200 ubox
21 97 0.004397286 ubox
23 98 0.003248966 ubox
24 31 0.067623782 ubox
24 80 0.019384865 ubox
25 30 0.067752443 ubox
25 79 0.019393331 ubox
26 37 0.005525185 ubox
26 94 0.013911548 ubox
26 98 0.029450408 ubox
27 32 0.009213555 ubox
27 36 0.010057517 ubox
27 63 0.006771361 ubox
27 77 0.025646315 ubox
27 85 0.007554853 ubox
27 87 0.008236347 ubox
27 93 0.026962556 ubox
27 97 0.048367844 ubox
28 34 0.012256749 ubox
28 62 0.006824748 ubox
28 75 0.050722907 ubox
28 76 0.021079885 ubox
28 84 0.007548910 ubox
28 86 0.008128449 ubox
29 33 0.011089125 ubox
29 37 0.010380084 ubox
29 61 0.006822971 ubox
29 74 0.067549713 ubox
29 75 0.014797582 ubox
29 94 0.482227302 ubox
29 98 0.031398107 ubox
30 36 0.011666932 ubox
30 41 0.015254243 ubox
30 60 0.006817578 ubox
30 63 0.006784536 ubox
30 73 0.119450838 ubox
30 85 0.005570867 ubox
30 87 0.006243681 ubox
30 93 0.546594602 ubox
30 97 0.032389424 ubox
31 40 0.015015393 ubox
31 62 0.006839619 ubox
31 72 0.119545729 ubox
31 84 0.005559719 ubox
31 86 0.006072135 ubox
32 40 0.006220036 ubox
32 59 0.006393954 ubox
32 61 0.006837748 ubox
32 71 0.119469307 ubox
32 94 0.056744443 ubox
32 98 0.009035173 ubox
33 39 0.024824151 ubox
33 58 0.006418154 ubox
33 60 0.006830357 ubox
33 64 0.003502603 ubox
33 70 0.119598502 ubox
33 88 0.087771396 ubox
33 89 0.011210549 ubox
33 90 0.019654655 ubox
33 91 0.943634972 ubox
33 92 0.038657589 ubox
33 93 0.060024490 ubox
33 96 0.025726696 ubox
33 97 0.006335758 ubox
34 38 0.024537471 ubox
34 57 0.004362674 ubox
34 63 0.003502552 ubox
34 69 0.119602668 ubox
34 87 0.087874631 ubox
34 88 0.012654952 ubox
34 89 0.017845329 ubox
34 90 0.944972300 ubox
34 91 0.050342665 ubox
34 92 0.046407472 ubox
34 93 0.031949450 ubox
34 95 0.025495803 ubox
34 96 0.006084845 ubox
35 68 0.119569799 ubox
35 89 0.920660803 ubox
35 92 0.031645577 ubox
36 67 0.119399466 ubox
38 66 0.119097592 ubox
39 65 0.119137600 ubox
39 84 0.023271997 ubox
39 86 0.950732339 ubox
40 57 0.104220438 ubox
40 63 0.023986609 ubox
40 64 0.054728963 ubox
40 83 0.023706961 ubox
40 85 0.985664220 ubox
40 87 0.015076202 ubox
41 56 0.114029109 ubox
41 62 0.033561171 ubox
41 84 0.985357249 ubox
41 86 0.015092203 ubox
42 55 0.114593132 ubox
42 82 0.953234932 ubox
42 83 0.275081881 ubox
42 85 0.006649578 ubox
43 54 0.114596046 ubox
43 58 0.036441955 ubox
43 81 0.966910955 ubox
43 82 0.224810477 ubox
44 53 0.114596196 ubox
44 57 0.036533400 ubox
44 80 0.979880137 ubox
44 81 0.159002439 ubox
44 85 0.003676346 ubox
45 52 0.114591864 ubox
45 56 0.036539249 ubox
45 79 0.992659239 ubox
45 84 0.003680659 ubox
46 51 0.113013362 ubox
46 54 0.012281623 ubox
46 55 0.034433200 ubox
46 58 0.003297284 ubox
46 78 0.992666264 ubox
46 81 0.005596779 ubox
46 83 0.003515543 ubox
46 88 0.003330578 ubox
47 53 0.017327522 ubox
47 54 0.031992297 ubox
47 57 0.003301606 ubox
47 77 0.992621500 ubox
47 80 0.007506025 ubox
47 82 0.003524179 ubox
47 87 0.003332630 ubox
48 52 0.021048144 ubox
48 56 0.003301591 ubox
48 74 0.094633573 ubox
48 76 0.987222911 ubox
48 79 0.007521362 ubox
48 86 0.003332623 ubox
49 55 0.003229202 ubox
49 73 0.232892282 ubox
49 78 0.007354743 ubox
49 80 0.004549834 ubox
49 85 0.003307648 ubox
50 72 0.233762529 ubox
50 75 0.963865703 ubox
50 79 0.004553153 ubox
50 84 0.003297016 ubox
51 71 0.233466581 ubox
51 74 0.964704249 ubox
52 68 0.135753782 ubox
52 70 0.187080401 ubox
52 73 0.964520914 ubox
52 77 0.010447600 ubox
53 66 0.011998108 ubox
53 67 0.234522225 ubox
53 72 0.960791972 ubox
53 76 0.011625899 ubox
54 65 0.012165711 ubox
54 66 0.236987738 ubox
54 67 0.012120762 ubox
54 71 0.955526453 ubox
54 72 0.080743223 ubox
54 75 0.012681719 ubox
55 65 0.238619432 ubox
55 66 0.015967265 ubox
55 71 0.114096389 ubox
55 74 0.012690995 ubox
56 63 0.149698989 ubox
56 64 0.186419463 ubox
56 68 0.860372242 ubox
56 70 0.127738555 ubox
56 73 0.012700721 ubox
57 62 0.209326553 ubox
57 66 0.396939941 ubox
57 67 0.874850669 ubox
57 72 0.012701848 ubox
58 65 0.402933226 ubox
58 66 0.871539699 ubox
58 71 0.012674381 ubox
59 68 0.055911220 ubox
60 67 0.057378282 ubox
62 68 0.005350447 ubox
62 73 0.003468370 ubox
63 67 0.005425818 ubox
63 72 0.003657870 ubox
64 71 0.004425338 ubox
65 70 0.006971715 ubox
65 97 0.011578353 ubox
66 96 0.012397818 ubox
67 95 0.012420139 ubox
68 94 0.012209416 ubox
71 91 0.012222016 ubox
71 92 0.003250337 ubox
72 90 0.012224069 ubox
72 91 0.003435375 ubox
74 82 0.006741299 ubox
74 88 0.008977188 ubox
74 89 0.081910308 ubox
74 90 0.033760951 ubox
74 91 0.022068099 ubox
74 92 0.012944102 ubox
74 93 0.006312073 ubox
75 81 0.006768199 ubox
75 82 0.003294192 ubox
75 87 0.008754361 ubox
75 88 0.099265538 ubox
75 89 0.026242630 ubox
75 90 0.021645690 ubox
75 91 0.016054016 ubox
76 80 0.006665232 ubox
76 81 0.003280525 ubox
76 85 0.015139977 ubox
76 87 0.104529004 ubox
76 88 0.036708714 ubox
76 89 0.011830033 ubox
76 90 0.016848481 ubox
76 91 0.003465263 ubox
77 84 0.015064314 ubox
77 86 0.079739801 ubox
78 84 0.029820290 ubox
78 86 0.083891188 ubox
79 83 0.018430516 ubox
79 85 0.108122048 ubox
79 87 0.013846112 ubox
80 84 0.107356559 ubox
80 86 0.013851176 ubox
3 26 0.9500000 lbox
4 25 0.9500000 lbox
5 24 0.9500000 lbox
6 23 0.9500000 lbox
7 22 0.9500000 lbox
8 20 0.9500000 lbox
9 19 0.9500000 lbox
10 18 0.9500000 lbox
33 91 0.9500000 lbox
34 90 0.9500000 lbox
35 89 0.9500000 lbox
39 86 0.9500000 lbox
40 85 0.9500000 lbox
41 84 0.9500000 lbox
42 82 0.9500000 lbox
43 81 0.9500000 lbox
44 80 0.9500000 lbox
45 79 0.9500000 lbox
46 78 0.9500000 lbox
47 77 0.9500000 lbox
48 76 0.9500000 lbox
50 75 0.9500000 lbox
51 74 0.9500000 lbox
52 73 0.9500000 lbox
53 72 0.9500000 lbox
54 71 0.9500000 lbox
56 68 0.9500000 lbox
57 67 0.9500000 lbox
58 66 0.9500000 lbox
showpage
end
%%EOF
