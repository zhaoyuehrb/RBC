%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:54:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCUCUGCCCGGCUGCGGCGCUUCGGGCAGGCGGCGGCGGCGGCGGCGGCGGCGGCAGAGGGAGUUUCCGCUUUGUACUCCACCCCGGUAGCAGCUCCGCGGCAGGGACAGCUUCCUCCGGACGCUUGGCGGGCUUCGCUCUCGCCUUACGACAGCCCGGUCGGAUCAUGGGGUUGCCCAGGGGGCCGGAGGGCCAGGGUCUCCCGGAGGUGGAAACAAGAGAAGAUGAAGAACAAAAUGUCAAGUUGACUGAA\
AUUCUGGAGCUCU\
) } def
/len { sequence length } bind def

/coor [
[-151.07679749 677.29840088]
[-153.58804321 679.73547363]
[-156.42805481 681.04852295]
[-159.18898010 681.27362061]
[-169.51324463 692.15521240]
[-179.83749390 703.03686523]
[-190.16175842 713.91845703]
[-200.48602295 724.80010986]
[-210.81027222 735.68170166]
[-221.13453674 746.56335449]
[-212.54501343 776.60430908]
[-220.07029724 789.58007812]
[-220.30047607 805.39959717]
[-233.37870789 812.52764893]
[-240.90397644 825.50335693]
[-248.42924500 838.47912598]
[-255.95451355 851.45489502]
[-248.23152161 864.73083496]
[-248.19721985 880.08972168]
[-255.86085510 893.40002441]
[-269.16094971 901.08135986]
[-284.51983643 901.06750488]
[-297.80606079 893.36218262]
[-305.44567871 880.03808594]
[-305.38369751 864.67932129]
[-297.63674927 851.41729736]
[-284.28878784 843.81951904]
[-268.93026733 843.92962646]
[-261.40499878 830.95385742]
[-253.87973022 817.97808838]
[-246.35446167 805.00238037]
[-246.66253662 790.11096191]
[-233.04605103 782.05474854]
[-225.52078247 769.07904053]
[-236.15830994 758.50341797]
[-249.08990479 766.10437012]
[-257.06640625 779.76763916]
[-271.95938110 779.54650879]
[-284.89096069 787.14746094]
[-292.86749268 800.81072998]
[-307.76043701 800.58959961]
[-320.69204712 808.19055176]
[-328.30569458 822.71514893]
[-344.70001221 823.11340332]
[-353.00991821 808.97558594]
[-344.68688965 794.84545898]
[-328.29293823 795.25897217]
[-315.36135864 787.65802002]
[-308.30978394 774.53839111]
[-292.49188232 774.21582031]
[-279.56027222 766.61492920]
[-272.50872803 753.49530029]
[-256.69079590 753.17272949]
[-243.75921631 745.57183838]
[-232.01615906 736.23907471]
[-221.69189453 725.35742188]
[-211.36764526 714.47583008]
[-201.04338074 703.59417725]
[-190.71911621 692.71258545]
[-180.39485168 681.83099365]
[-170.07060242 670.94934082]
[-160.00329590 659.82958984]
[-150.19845581 648.47772217]
[-140.39361572 637.12579346]
[-130.58876038 625.77392578]
[-120.78392029 614.42205811]
[-110.97907257 603.07019043]
[-101.17423248 591.71832275]
[-91.36938477 580.36645508]
[-89.89499664 571.54467773]
[-85.19414520 564.01812744]
[-78.02804565 558.90423584]
[-69.51888275 556.93774414]
[-65.20130157 542.57257080]
[-60.88371658 528.20739746]
[-56.56612778 513.84222412]
[-52.24854279 499.47702026]
[-57.69554138 488.70089722]
[-54.24241257 476.71347046]
[-43.21201324 470.07254028]
[-38.72695923 455.75875854]
[-34.24190521 441.44497681]
[-29.75684929 427.13122559]
[-25.27179527 412.81744385]
[-20.78674126 398.50366211]
[-16.38534546 384.16394043]
[-12.06776047 369.79873657]
[-7.75017595 355.43356323]
[-3.43259072 341.06838989]
[-16.06103897 343.33471680]
[-25.98641777 336.26861572]
[-27.77323914 324.87042236]
[-39.06766510 314.99948120]
[-54.55030823 311.74395752]
[-59.04181290 297.54269409]
[-70.33624268 287.67175293]
[-86.24137878 281.80123901]
[-85.00327301 264.89254761]
[-68.41265106 261.40148926]
[-60.46527481 276.37731934]
[-49.17084885 286.24829102]
[-34.49605942 288.79776001]
[-29.19669914 303.70504761]
[-17.90227509 313.57601929]
[-5.30066299 313.94461060]
[3.25851846 324.57513428]
[10.16963577 311.26211548]
[17.08075333 297.94909668]
[23.99187088 284.63607788]
[30.90298843 271.32305908]
[27.55274773 259.72259521]
[33.17272949 248.58532715]
[45.24483109 244.10919189]
[52.31095505 230.87779236]
[59.22207260 217.56477356]
[65.97724152 204.17195129]
[72.73241425 190.77912903]
[79.48757935 177.38630676]
[86.24275208 163.99348450]
[92.99792480 150.60066223]
[99.75308990 137.20783997]
[106.50826263 123.81502533]
[70.03249359 120.74425507]
[60.95201111 71.73303223]
[62.17691803 56.78313446]
[50.58137131 46.64165878]
[47.22014236 31.79054642]
[53.17783356 17.97135925]
[65.97721100 10.40077114]
[67.20211792 -4.54913187]
[68.42702484 -19.49903488]
[69.65193176 -34.44893646]
[70.87683868 -49.39884186]
[72.10174561 -64.34874725]
[60.85700607 -75.21566010]
[59.27957916 -90.77347565]
[68.11427307 -103.67627716]
[83.18962097 -107.83174133]
[97.38750458 -101.27780151]
[104.00411224 -87.10901642]
[99.91529083 -72.01545715]
[87.05165100 -63.12383652]
[85.82674408 -48.17393494]
[84.60183716 -33.22402954]
[83.37693024 -18.27412796]
[82.15202332 -3.32422495]
[80.92711639 11.62567806]
[92.32349396 21.17872429]
[95.95230103 35.78337097]
[90.21850586 49.88928986]
[77.12682343 58.00803757]
[75.90191650 72.95793915]
[82.80132294 75.89872742]
[103.49953461 84.72106934]
[113.43628693 73.48448181]
[123.37303162 62.24788666]
[133.30978394 51.01129532]
[143.24653625 39.77470398]
[153.18328857 28.53811073]
[156.52914429 13.07474136]
[170.75639343 8.66623783]
[180.69313049 -2.57035470]
[179.47468567 -18.32760429]
[189.81848145 -30.27672386]
[205.58773804 -31.32851219]
[217.42681885 -20.85896111]
[218.31182861 -5.07947111]
[207.71769714 6.64826727]
[191.92973328 7.36639452]
[181.99298096 18.60298729]
[179.35786438 33.26263809]
[164.41987610 38.47486115]
[154.48312378 49.71145248]
[144.54637146 60.94804382]
[134.60963440 72.18463898]
[124.67288208 83.42122650]
[114.73612976 94.65782166]
[123.86175537 106.56256104]
[137.29379272 99.88571167]
[150.72583008 93.20886230]
[162.21792603 80.74418640]
[177.37681580 88.33659363]
[174.27751160 105.00485229]
[157.40267944 106.64090729]
[143.97064209 113.31775665]
[130.53860474 119.99460602]
[119.90108490 130.57019043]
[113.14591217 143.96301270]
[106.39074707 157.35583496]
[99.63557434 170.74865723]
[92.88040161 184.14147949]
[86.12523651 197.53430176]
[79.37006378 210.92712402]
[72.61489105 224.31994629]
[72.60599518 230.87493896]
[69.73844910 235.73046875]
[65.54235077 237.94392395]
[58.47623062 251.17530823]
[59.49825668 269.57727051]
[44.21600723 278.23416138]
[37.30488968 291.54718018]
[30.39377213 304.86019897]
[23.48265457 318.17321777]
[16.57153702 331.48623657]
[10.93259144 345.38595581]
[6.61500645 359.75115967]
[2.29742122 374.11633301]
[-2.02016377 388.48150635]
[-1.49172568 397.56472778]
[-6.47296143 402.98870850]
[-10.95801640 417.30249023]
[-15.44307041 431.61627197]
[-19.92812538 445.93005371]
[-24.41317940 460.24383545]
[-28.89823532 474.55761719]
[-24.47537422 492.44937134]
[-37.88336182 503.79461670]
[-42.20094681 518.15979004]
[-46.51853180 532.52496338]
[-50.83611679 546.89013672]
[-55.15370178 561.25537109]
[-47.18794632 548.54522705]
[-33.78582001 541.80853271]
[-18.83309364 542.99847412]
[-6.66510963 551.77001953]
[-0.80981517 565.58001709]
[-2.96487498 580.42437744]
[-12.50545788 591.99926758]
[-26.66539955 596.94860840]
[-41.33921051 593.83746338]
[-52.27114868 583.56994629]
[-44.44487381 596.36639404]
[-36.61860275 609.16284180]
[-28.79232979 621.95935059]
[-14.81282330 620.01080322]
[-1.18619335 623.52062988]
[10.04329109 631.92816162]
[17.20395279 643.94067383]
[19.24552727 657.73193359]
[15.89309406 671.21984863]
[7.68358326 682.38073730]
[15.35987854 695.26776123]
[23.03617477 708.15472412]
[30.71246910 721.04174805]
[44.01280212 731.55541992]
[37.59189606 747.24645996]
[20.73659706 745.42016602]
[17.82548141 728.71801758]
[10.14918518 715.83105469]
[2.47288966 702.94403076]
[-5.20340586 690.05706787]
[-21.10723114 691.76977539]
[-36.21797562 686.34777832]
[-47.48632050 674.83123779]
[-52.61478806 659.49542236]
[-50.52605057 643.40161133]
[-41.58879089 629.78558350]
[-49.41506577 616.98913574]
[-57.24133682 604.19268799]
[-65.06761169 591.39617920]
[-80.01751709 590.17132568]
[-89.82235718 601.52319336]
[-99.62720490 612.87506104]
[-109.43204498 624.22692871]
[-119.23689270 635.57879639]
[-129.04173279 646.93066406]
[-138.84658813 658.28253174]
[-148.65142822 669.63439941]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 61]
[5 60]
[6 59]
[7 58]
[8 57]
[9 56]
[10 55]
[11 34]
[12 33]
[14 31]
[15 30]
[16 29]
[17 28]
[35 54]
[36 53]
[38 51]
[39 50]
[41 48]
[42 47]
[62 268]
[63 267]
[64 266]
[65 265]
[66 264]
[67 263]
[68 262]
[69 261]
[73 221]
[74 220]
[75 219]
[76 218]
[77 217]
[80 215]
[81 214]
[82 213]
[83 212]
[84 211]
[85 210]
[86 208]
[87 207]
[88 206]
[89 205]
[92 104]
[93 103]
[95 101]
[96 100]
[106 204]
[107 203]
[108 202]
[109 201]
[110 200]
[113 198]
[114 197]
[115 194]
[116 193]
[117 192]
[118 191]
[119 190]
[120 189]
[121 188]
[122 187]
[124 152]
[125 151]
[129 147]
[130 146]
[131 145]
[132 144]
[133 143]
[134 142]
[154 177]
[155 176]
[156 175]
[157 174]
[158 173]
[159 172]
[161 170]
[162 169]
[178 186]
[179 185]
[180 184]
[231 260]
[232 259]
[233 258]
[234 257]
[241 251]
[242 250]
[243 249]
[244 248]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
