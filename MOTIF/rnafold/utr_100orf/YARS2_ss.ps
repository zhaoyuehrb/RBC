%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:38:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCUUCCCUAGGAGCUGUAAGUAGGUGGGUGUGGUGGGAGCCUCUGCAAUCCCAGCAUUCCCUUCGUGCCGCUACCAAGAUGGCGGCGCCCAUCUUGCGGUCCUUUUCCUGGGGCCGGUGGUCUGGUACCCUAAAUCUCUCAGUAUUGUUGCCCUUGGGGCUGCGUAAGGCCCACUCGG\
) } def
/len { sequence length } bind def

/coor [
[363.35302734 269.42968750]
[349.03814697 273.91125488]
[335.67291260 267.10171509]
[330.88381958 252.88676453]
[337.40371704 239.37782288]
[351.51306152 234.28350830]
[338.52267456 226.78350830]
[325.53228760 219.28350830]
[312.54190063 211.78350830]
[299.55154419 204.28350830]
[286.56115723 196.78350830]
[273.57077026 189.28350830]
[260.58038330 181.78350830]
[247.27522278 174.85728455]
[233.68061829 168.51800537]
[220.08599854 162.17872620]
[206.49137878 155.83946228]
[192.89675903 149.50018311]
[179.30213928 143.16090393]
[165.70751953 136.82164001]
[152.11291504 130.48236084]
[138.24798584 135.80207825]
[124.37080383 129.56681824]
[118.88500214 114.98793793]
[105.29038239 108.64865875]
[97.57957458 125.99668121]
[71.79264832 131.22587585]
[56.79493332 131.48765564]
[41.79721832 131.74945068]
[28.13418198 139.72640991]
[15.27381420 132.21241760]
[0.27609921 132.47419739]
[-14.72161579 132.73599243]
[-28.38465309 140.71295166]
[-41.24502182 133.19895935]
[-56.24273682 133.46073914]
[-71.24044800 133.72253418]
[-86.23816681 133.98431396]
[-101.23588562 134.24609375]
[-116.22674561 134.76959229]
[-131.20619202 135.55462646]
[-144.65748596 144.93518066]
[-159.39009094 137.73222351]
[-160.24835205 121.35554504]
[-146.34936523 112.65207672]
[-131.99122620 120.57518768]
[-117.01178741 119.79014587]
[-113.19105530 116.88237000]
[-107.49639893 116.36260986]
[-101.49766541 119.24838257]
[-86.49995422 118.98659515]
[-71.50223541 118.72481537]
[-56.50452042 118.46302795]
[-41.50680542 118.20124054]
[-28.91650772 110.24299622]
[-14.98340225 117.73827362]
[0.01431312 117.47648621]
[15.01202869 117.21469879]
[27.60232735 109.25645447]
[41.53543091 116.75173187]
[56.53314972 116.48994446]
[71.53086090 116.22815704]
[75.50525665 109.86779785]
[68.46315765 96.62359619]
[83.45404816 97.14707947]
[87.42844391 90.78672028]
[81.08916473 77.19210052]
[74.74989319 63.59748459]
[68.41062164 50.00286865]
[62.07134628 36.40824890]
[55.73207092 22.81363297]
[49.39279938 9.21901608]
[43.05352402 -4.37560034]
[36.71424866 -17.97021675]
[21.77922249 -23.13940430]
[14.94897747 -37.39153671]
[20.27577782 -52.27108002]
[34.59932709 -58.95026016]
[49.42171860 -53.46644211]
[55.94908905 -39.07307434]
[50.30886841 -24.30949020]
[56.64813995 -10.71487427]
[62.98741531 2.87974262]
[69.32669067 16.47435951]
[75.66596222 30.06897545]
[82.00523376 43.66359329]
[88.34451294 57.25820923]
[94.68378448 70.85282898]
[101.02305603 84.44744110]
[111.62966156 95.05404663]
[125.22427368 101.39331818]
[139.91854858 96.22456360]
[153.61512756 102.84714508]
[158.45217896 116.88774872]
[172.04679871 123.22702026]
[185.64141846 129.56629944]
[199.23603821 135.90556335]
[212.83065796 142.24484253]
[226.42526245 148.58412170]
[240.01988220 154.92338562]
[253.61450195 161.26266479]
[251.17465210 146.46241760]
[261.09097290 135.20779419]
[276.08062744 135.76448059]
[285.13482666 147.72363281]
[281.60391235 162.30212402]
[268.08038330 168.79313660]
[281.07077026 176.29313660]
[294.06115723 183.79313660]
[307.05154419 191.29313660]
[320.04190063 198.79313660]
[333.03228760 206.29313660]
[346.02267456 213.79313660]
[359.01306152 221.29313660]
[372.37814331 228.10298157]
[386.08132935 234.20404053]
[399.78451538 240.30508423]
[413.54040527 246.28631592]
[427.34799194 252.14729309]
[441.15557861 258.00827026]
[454.96313477 263.86923218]
[468.82131958 269.60946655]
[482.72909546 275.22857666]
[496.63684082 280.84768677]
[516.42889404 277.11975098]
[527.70745850 292.80587769]
[541.80279541 297.93618774]
[555.89819336 303.06649780]
[570.03784180 308.07360840]
[584.22064209 312.95712280]
[598.40338135 317.84063721]
[612.58618164 322.72415161]
[626.76892090 327.60769653]
[640.95172119 332.49121094]
[651.05627441 321.16979980]
[664.68872070 314.59722900]
[679.75823975 313.74700928]
[693.96673584 318.71759033]
[705.15930176 328.72216797]
[711.65112305 342.21298218]
[712.48101807 357.12069702]
[726.66375732 362.00424194]
[742.64959717 358.34567261]
[753.61114502 370.54309082]
[748.27209473 386.04876709]
[732.12481689 388.91183472]
[721.78027344 376.18701172]
[707.59747314 371.30349731]
[697.76538086 382.54000854]
[684.34399414 389.17413330]
[669.36468506 390.16702271]
[655.10809326 385.33630371]
[643.75659180 375.38858032]
[637.06054688 361.81634521]
[636.06823730 346.67398071]
[621.88543701 341.79046631]
[607.70263672 336.90695190]
[593.51989746 332.02340698]
[579.33709717 327.13989258]
[565.15429688 322.25637817]
[557.78558350 323.05383301]
[550.76788330 317.16189575]
[536.67254639 312.03158569]
[522.57714844 306.90127563]
[513.71026611 312.04827881]
[503.25567627 311.43719482]
[494.69653320 305.02890015]
[491.01776123 294.75543213]
[477.10998535 289.13632202]
[463.20223999 283.51724243]
[455.80184937 283.92794800]
[449.10217285 277.67678833]
[435.29458618 271.81582642]
[421.48703003 265.95486450]
[407.67944336 260.09390259]
[400.27301025 260.37539673]
[393.68347168 254.00827026]
[379.98028564 247.90721130]
[366.27709961 241.80616760]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 114]
[7 113]
[8 112]
[9 111]
[10 110]
[11 109]
[12 108]
[13 107]
[14 101]
[15 100]
[16 99]
[17 98]
[18 97]
[19 96]
[20 95]
[21 94]
[24 91]
[25 90]
[27 62]
[28 61]
[29 60]
[31 58]
[32 57]
[33 56]
[35 54]
[36 53]
[37 52]
[38 51]
[39 50]
[40 47]
[41 46]
[66 89]
[67 88]
[68 87]
[69 86]
[70 85]
[71 84]
[72 83]
[73 82]
[74 81]
[115 179]
[116 178]
[117 177]
[118 175]
[119 174]
[120 173]
[121 172]
[122 170]
[123 169]
[124 168]
[126 164]
[127 163]
[128 162]
[129 160]
[130 159]
[131 158]
[132 157]
[133 156]
[134 155]
[141 148]
[142 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
