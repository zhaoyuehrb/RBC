%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:23:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAUUCCAUCAUCUCUGAGCCAGCAGAGCAAUCCCCCAAAGUGCUGUUAGUUCCCCAAACAGCUCCAGCCGACCCCUCUUUAGGUCAGAACAUAGCUAAUCCCUUAAUCCCAUUUUCUGAUGAAAUGGACCACACUGCAUCCCAAAAUGCCCAGGAUCUCAUAGGCAUCCCUCAUCUAGGUGUUUCUGGAUCCUCAACAAAAUGGCAUUCCGAGCUGUCCCCAA\
) } def
/len { sequence length } bind def

/coor [
[-44.55337906 255.47651672]
[-47.36275482 262.14590454]
[-51.01222229 268.39212036]
[-55.43948746 274.10995483]
[-60.56916809 279.20318604]
[-66.31405640 283.58624268]
[-72.57663727 287.18560791]
[-79.25070190 289.94107056]
[-86.22318268 291.80673218]
[-93.37606049 292.75173950]
[-100.58834076 292.76080322]
[-107.73813629 291.83450317]
[-114.70469666 289.98919678]
[-121.37045288 287.25674438]
[-127.62303162 283.68402100]
[-133.35710144 279.33200073]
[-138.47618103 274.27481079]
[-150.91174316 282.66268921]
[-163.34730530 291.05059814]
[-175.78286743 299.43847656]
[-182.89707947 313.56994629]
[-197.77511597 314.27243042]
[-210.21067810 322.66033936]
[-222.64624023 331.04821777]
[-235.08180237 339.43612671]
[-247.51736450 347.82400513]
[-254.63159180 361.95547485]
[-269.50961304 362.65798950]
[-281.94519043 371.04586792]
[-280.20022583 386.25158691]
[-285.73239136 400.52230835]
[-297.27044678 410.57873535]
[-312.16302490 414.10998535]
[-326.98791504 410.30459595]
[-338.33847046 400.03698730]
[-343.60644531 385.66662598]
[-341.58123779 370.49569702]
[-332.72827148 358.01037598]
[-319.08187866 351.07968140]
[-303.77789307 351.29623413]
[-290.33306885 358.61029053]
[-277.89752197 350.22241211]
[-271.67276001 336.69088745]
[-255.90525818 335.38845825]
[-243.46969604 327.00054932]
[-231.03413391 318.61267090]
[-218.59857178 310.22476196]
[-206.16300964 301.83688354]
[-199.93826294 288.30535889]
[-184.17076111 287.00292969]
[-171.73519897 278.61502075]
[-159.29963684 270.22714233]
[-146.86407471 261.83923340]
[-152.62683105 238.55287170]
[-147.99487305 214.97825623]
[-133.80693054 195.54435730]
[-112.69998932 183.91552734]
[-88.61915588 182.30061340]
[-66.08036804 191.03340149]
[-56.12147522 179.81643677]
[-46.16258240 168.59945679]
[-36.20368958 157.38249207]
[-26.24479675 146.16552734]
[-16.28590393 134.94854736]
[-6.32701111 123.73158264]
[-8.89630318 104.41209412]
[3.77910089 89.20718384]
[23.85631561 88.22755432]
[33.33675385 76.60338593]
[42.81719208 64.97922516]
[40.83334732 50.11098862]
[28.63683701 41.37914276]
[16.44032478 32.64730072]
[4.24381399 23.91545486]
[-10.43690491 28.94100189]
[-25.25786209 24.34547615]
[-34.52009583 11.89595318]
[-34.66209030 -3.62047243]
[-25.62924576 -16.23741722]
[-10.89487362 -21.10341072]
[3.87535930 -16.34737778]
[13.00199604 -3.79810905]
[12.97565842 11.71894360]
[25.17217064 20.45078850]
[37.36868286 29.18263245]
[49.56519318 37.91447830]
[56.51906967 35.10492706]
[50.00189590 21.59469414]
[43.48471832 8.08446121]
[36.96754074 -5.42577267]
[30.45036507 -18.93600655]
[23.93318939 -32.44623947]
[17.41601181 -45.95647430]
[10.89883614 -59.46670532]
[4.38165998 -72.97694397]
[-5.42774153 -84.32487488]
[-4.72207928 -99.30826569]
[6.11042929 -109.68404388]
[21.11030960 -109.74400330]
[32.02542114 -99.45515442]
[32.85137177 -84.47944641]
[37.54830170 -70.23378754]
[42.24523544 -55.98812866]
[46.94216537 -41.74246979]
[51.63909912 -27.49681091]
[56.33603287 -13.25115013]
[61.03296280 0.99450934]
[65.72989655 15.24016953]
[70.42682648 29.48582840]
[77.38070679 26.67627907]
[80.08849335 11.92270756]
[82.79627991 -2.83086443]
[85.50406647 -17.58443642]
[88.21186066 -32.33800888]
[90.91964722 -47.09157944]
[93.62743378 -61.84515381]
[85.73770905 -75.81410980]
[91.87330627 -90.63754272]
[107.32750702 -94.94417572]
[120.24518585 -85.43032837]
[120.71699524 -69.39421082]
[108.38100433 -59.13736725]
[105.67321777 -44.38379288]
[102.96543121 -29.63022232]
[100.25764465 -14.87664890]
[97.54985809 -0.12307728]
[94.84206390 14.63049507]
[92.13427734 29.38406754]
[98.62947083 33.13406754]
[106.12947083 20.14368629]
[113.62947083 7.15330458]
[121.12968445 -5.83695173]
[134.11981201 1.66347921]
[126.61985016 14.65330505]
[119.11985016 27.64368629]
[111.61985016 40.63406754]
[118.11504364 44.38406754]
[129.53811646 34.66226959]
[140.96119690 24.94046974]
[152.38426208 15.21867085]
[153.40176392 -0.55282950]
[165.32836914 -10.92257881]
[181.08822632 -9.73838711]
[191.33131409 2.29718399]
[189.98056030 18.04364395]
[177.83737183 28.15889931]
[162.10606384 26.64174652]
[150.68298340 36.36354446]
[139.25991821 46.08534241]
[127.83683777 55.80714035]
[135.85592651 69.90618896]
[138.31915283 84.34668732]
[135.86729431 97.21925354]
[150.73551941 99.20309448]
[165.60375977 101.18694305]
[180.47198486 103.17079163]
[195.34022522 105.15463257]
[210.20845032 107.13848114]
[219.11825562 105.17272949]
[225.26988220 109.25522614]
[240.10896301 111.44647217]
[254.89138794 105.80814362]
[266.35183716 115.32167816]
[281.19091797 117.51292419]
[296.02999878 119.70417023]
[310.86907959 121.89541626]
[325.70816040 124.08666229]
[340.54724121 126.27790833]
[355.38635254 128.46914673]
[365.45574951 116.78111267]
[380.25219727 112.41435242]
[395.05419922 116.76229858]
[405.13845825 128.43753052]
[407.28717041 143.71452332]
[400.81463623 157.71846008]
[387.78625488 165.98071289]
[372.35931396 165.86483765]
[359.45654297 157.40780640]
[353.19509888 143.30824280]
[338.35601807 141.11698914]
[323.51693726 138.92575073]
[308.67782593 136.73449707]
[293.83874512 134.54325867]
[278.99966431 132.35200500]
[264.16058350 130.16076660]
[250.43955994 135.95582581]
[237.91772461 126.28555298]
[223.07862854 124.09430695]
[208.22460938 122.00671387]
[193.35638428 120.02286530]
[178.48814392 118.03902435]
[163.61991882 116.05517578]
[148.75167847 114.07132721]
[133.88345337 112.08748627]
[129.38652039 123.45676422]
[121.04042816 133.10534668]
[109.51865387 139.72680664]
[95.93618011 142.28182983]
[81.74325562 140.14582825]
[68.57052612 133.21440125]
[58.04229736 121.95121765]
[51.57910538 107.36900330]
[50.21335983 90.94239807]
[54.44136047 74.45966339]
[44.96092224 86.08383179]
[35.48048401 97.70799255]
[39.16589737 107.70124817]
[38.38220215 118.24263000]
[33.33718109 127.43952942]
[24.99765587 133.66857910]
[14.90489388 135.86206055]
[4.88996029 133.69047546]
[-5.06893301 144.90744019]
[-15.02782631 156.12442017]
[-24.98671913 167.34138489]
[-34.94561386 178.55836487]
[-44.90450668 189.77532959]
[-54.86339951 200.99229431]
[-50.51626968 206.80554199]
[-46.96136475 213.13121033]
[-44.25814819 219.86206055]
[-42.45164108 226.88406372]
[-41.57169342 234.07836914]
[-41.63247299 241.32328796]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 53]
[18 52]
[19 51]
[20 50]
[22 48]
[23 47]
[24 46]
[25 45]
[26 44]
[28 42]
[29 41]
[59 218]
[60 217]
[61 216]
[62 215]
[63 214]
[64 213]
[65 212]
[68 206]
[69 205]
[70 204]
[71 86]
[72 85]
[73 84]
[74 83]
[110 128]
[111 127]
[112 126]
[113 125]
[114 124]
[115 123]
[116 122]
[137 150]
[138 149]
[139 148]
[140 147]
[153 194]
[154 193]
[155 192]
[156 191]
[157 190]
[158 189]
[160 188]
[161 187]
[163 185]
[164 184]
[165 183]
[166 182]
[167 181]
[168 180]
[169 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
