%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:55:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAUCCGAGCCGGGCUGGCUGCAGAGAAACCGCAGGGAGAGCCUCACUGCUGAGCGCCCCUCGACGGCGGAGCGGCAGCAGCCUCCGUGGCCUCCAGCAUCCGACAAGAAGCUUCAGCCAUGCAGGCCCCACGGGAGCUCGCGGUGGGCAUCGACCUGGGCACCACCUACUCGUGCGUGGGCGUGUUUCAGCAGGGCCGCGUGGAGAUCCUGGCCAACG\
) } def
/len { sequence length } bind def

/coor [
[221.57655334 743.79364014]
[228.45713806 730.32098389]
[239.16569519 719.63537598]
[252.65307617 712.78369141]
[250.30656433 697.96838379]
[247.96003723 683.15301514]
[245.61352539 668.33770752]
[235.98049927 656.97753906]
[241.46371460 642.13684082]
[239.11720276 627.32153320]
[235.85389709 623.84271240]
[234.73710632 618.27899170]
[236.92150879 612.05017090]
[234.99902344 597.17388916]
[233.07652283 582.29760742]
[231.15403748 567.42132568]
[227.99140930 563.85070801]
[227.03395081 558.25738525]
[229.39532471 552.09350586]
[227.89843750 537.16839600]
[226.40153503 522.24328613]
[224.90463257 507.31814575]
[215.93585205 495.42654419]
[222.25737000 480.92312622]
[220.76046753 465.99798584]
[219.26356506 451.07287598]
[217.76666260 436.14773560]
[214.03024292 425.12017822]
[215.90469360 414.53729248]
[222.09844971 406.87310791]
[215.86723328 393.22863770]
[210.23309326 388.45324707]
[209.64599609 379.34454346]
[203.61024475 365.61245728]
[197.57449341 351.88040161]
[191.53872681 338.14831543]
[177.60903931 333.00061035]
[171.29231262 319.16030884]
[176.78616333 304.58447266]
[170.75041199 290.85238647]
[164.61677551 277.16378784]
[158.38554382 263.51928711]
[152.15431213 249.87481689]
[146.52017212 245.09944153]
[145.93309021 235.99072266]
[139.89732361 222.25865173]
[133.86157227 208.52658081]
[127.82582092 194.79452515]
[121.79006958 181.06245422]
[115.75431824 167.33038330]
[110.18894196 162.47505188]
[109.73197174 153.35887146]
[103.89292145 139.54202271]
[98.05387115 125.72515869]
[92.21482086 111.90830994]
[81.16370392 101.76568604]
[66.89785767 97.13042450]
[52.63200760 92.49517059]
[37.11630630 95.58929443]
[27.40290833 84.29774475]
[13.13706112 79.66248322]
[-1.12878692 75.02722931]
[-14.29344273 83.46677399]
[-29.79630089 81.41849518]
[-40.31738281 69.84953308]
[-40.88895798 54.22240067]
[-31.24114609 41.91574860]
[-15.92934704 38.74040222]
[-2.18332505 46.19566345]
[3.50646806 60.76138306]
[17.77231598 65.39663696]
[32.03816223 70.03189087]
[46.53347397 66.60622406]
[57.26726151 78.22932434]
[71.53311157 82.86457825]
[85.79895782 87.49983215]
[91.46707916 82.58837891]
[81.64435577 71.25197601]
[92.98092651 61.42943954]
[102.80332184 72.76546478]
[108.47144318 67.85401154]
[105.91361237 53.07370377]
[103.35578156 38.29339600]
[100.79794312 23.51309013]
[90.82073212 11.23441887]
[96.27442932 -2.62582850]
[93.71659851 -17.40613556]
[91.15876007 -32.18644333]
[88.60092926 -46.96675110]
[86.04309845 -61.74705887]
[83.48526764 -76.52736664]
[70.70079803 -81.66978455]
[62.19287491 -92.37171936]
[60.09901428 -105.77262878]
[64.86025238 -118.35734558]
[75.13355255 -126.87809753]
[72.78703308 -141.69342041]
[70.44052124 -156.50874329]
[60.63965607 -168.92863464]
[66.29071045 -182.70959473]
[63.94419479 -197.52491760]
[51.01254654 -206.61051941]
[48.37531281 -222.19322205]
[57.59712219 -235.02809143]
[73.20683289 -237.50042725]
[85.94348145 -228.14343262]
[88.25064850 -212.50845337]
[78.75952148 -199.87144470]
[81.10604095 -185.05612183]
[90.73905945 -173.69592285]
[85.25584412 -158.85527039]
[87.60236359 -144.03994751]
[89.94887543 -129.22462463]
[104.80877686 -122.24172974]
[112.65488434 -107.62999725]
[110.21903992 -91.05674744]
[98.26557159 -79.08519745]
[100.82340240 -64.30489349]
[103.38124084 -49.52458572]
[105.93907166 -34.74427795]
[108.49690247 -19.96396828]
[111.05473328 -5.18366146]
[120.84899902 6.03782320]
[115.57825470 20.95525742]
[118.13608551 35.73556519]
[120.69391632 50.51587296]
[123.25175476 65.29618073]
[137.88581848 68.58922577]
[146.52841187 56.32931137]
[147.46984863 39.95721054]
[162.23884583 32.82917786]
[175.64231873 42.27792358]
[173.89193726 58.58338928]
[158.78833008 64.97190857]
[150.14573669 77.23182678]
[131.29405212 105.73167419]
[106.03167725 106.06925201]
[111.87072754 119.88610840]
[117.70977783 133.70295715]
[123.54882812 147.51982117]
[129.48638916 161.29463196]
[135.52214050 175.02670288]
[141.55789185 188.75875854]
[147.59364319 202.49082947]
[153.62939453 216.22290039]
[159.66514587 229.95497131]
[165.79879761 243.64358521]
[172.03002930 257.28808594]
[178.26124573 270.93255615]
[184.66851807 277.43334961]
[184.48248291 284.81665039]
[190.51823425 298.54870605]
[204.97166443 304.35696411]
[210.89717102 318.36923218]
[205.27079773 332.11257935]
[211.30654907 345.84463501]
[217.34231567 359.57672119]
[223.37806702 373.30877686]
[229.51170349 386.99740601]
[235.74293518 400.64187622]
[247.35505676 410.13705444]
[261.96524048 413.53451538]
[276.57540894 416.93197632]
[287.91271973 410.79061890]
[300.00842285 413.91656494]
[306.51821899 424.10714722]
[321.07839966 427.71286011]
[335.63858032 431.31860352]
[350.19876099 434.92434692]
[364.75894165 438.53005981]
[378.16180420 430.15518188]
[393.54199219 433.79183960]
[401.77471924 447.28250122]
[397.97564697 462.62338257]
[384.39868164 470.71301270]
[369.09884644 466.75195312]
[361.15319824 453.09024048]
[346.59301758 449.48449707]
[332.03283691 445.87878418]
[317.47268677 442.27304077]
[302.91250610 438.66732788]
[286.33392334 444.43072510]
[273.17797852 431.54214478]
[258.56777954 428.14468384]
[243.95761108 424.74725342]
[232.69178772 434.65084839]
[234.18869019 449.57595825]
[235.68559265 464.50109863]
[237.18249512 479.42620850]
[246.25833130 492.38537598]
[239.82975769 505.82122803]
[241.32664490 520.74633789]
[242.82354736 535.67150879]
[244.32044983 550.59661865]
[246.03031921 565.49884033]
[247.95281982 580.37512207]
[249.87530518 595.25140381]
[251.79780579 610.12768555]
[253.93252563 624.97503662]
[256.27905273 639.79034424]
[266.07989502 652.21026611]
[260.42886353 665.99121094]
[262.77536011 680.80651855]
[265.12188721 695.62182617]
[267.46841431 710.43719482]
[282.41296387 712.78570557]
[295.89941406 719.63916016]
[306.60653687 730.32623291]
[313.48532104 743.79980469]
[315.86187744 758.73992920]
[313.50335693 773.68292236]
[306.64080811 787.16479492]
[295.94659424 797.86474609]
[282.46841431 804.73449707]
[267.52670288 807.10101318]
[252.58529663 804.73248291]
[239.10803223 797.86090088]
[228.41525269 787.15954590]
[221.55451965 773.67675781]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 205]
[5 204]
[6 203]
[7 202]
[9 200]
[10 199]
[13 198]
[14 197]
[15 196]
[16 195]
[19 194]
[20 193]
[21 192]
[22 191]
[24 189]
[25 188]
[26 187]
[27 186]
[30 160]
[31 159]
[33 158]
[34 157]
[35 156]
[36 155]
[39 152]
[40 151]
[41 149]
[42 148]
[43 147]
[45 146]
[46 145]
[47 144]
[48 143]
[49 142]
[50 141]
[52 140]
[53 139]
[54 138]
[55 137]
[56 76]
[57 75]
[58 74]
[60 72]
[61 71]
[62 70]
[81 127]
[82 126]
[83 125]
[84 124]
[86 122]
[87 121]
[88 120]
[89 119]
[90 118]
[91 117]
[96 113]
[97 112]
[98 111]
[100 109]
[101 108]
[128 135]
[129 134]
[161 185]
[162 184]
[163 183]
[166 181]
[167 180]
[168 179]
[169 178]
[170 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
