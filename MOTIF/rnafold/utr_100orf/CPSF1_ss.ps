%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:19:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCCGGCCGGACUGAGUUCGCUGCUGUCCCGGUUCCUCUCGAGUCGGCUCCAACUGCCAGCCCGGGUUGGCGCCAUGUACGCCGUGUACAAACAGGCGCAUCCGCCCACCGGUCUGGAGUUCUCCAUGUACUGCAACUUCUUCAACAACAGCGAGCGCAACCUGGUAGUGGCCG\
) } def
/len { sequence length } bind def

/coor [
[105.46252441 493.97341919]
[105.19478607 478.97579956]
[104.92705536 463.97821045]
[104.65931702 448.98059082]
[92.07356262 437.84741211]
[91.40512085 420.71987915]
[103.55368042 408.15441895]
[103.01829529 393.16397095]
[102.48291016 378.17352295]
[101.94752502 363.18310547]
[101.41213989 348.19265747]
[90.36981201 338.26275635]
[89.61331177 323.06796265]
[100.10355377 311.55307007]
[99.56816864 296.56262207]
[91.38153839 284.11962891]
[98.62134552 270.05209351]
[98.08596039 255.06164551]
[97.55057526 240.07119751]
[97.01519012 225.08076477]
[96.47980499 210.09031677]
[95.94441986 195.09986877]
[95.40903473 180.10943604]
[94.87364960 165.11898804]
[86.68701172 152.67599487]
[93.92682648 138.60844421]
[93.39144135 123.61800385]
[92.85605621 108.62756348]
[87.07818604 113.69282532]
[80.63597107 118.02238464]
[65.87430573 120.68567657]
[51.11263657 123.34897614]
[36.35096741 126.01227570]
[21.58929825 128.67556763]
[6.82763100 131.33886719]
[-7.93403721 134.00216675]
[-18.22802734 146.30717468]
[-34.26264572 145.78703308]
[-43.73750687 132.84072876]
[-39.38430405 117.39958191]
[-24.54244804 111.30870819]
[-10.59733486 119.24050140]
[4.16433287 116.57720184]
[18.92600060 113.91390228]
[33.68766785 111.25061035]
[48.44933701 108.58731079]
[63.21100616 105.92401123]
[77.97267151 103.26071167]
[63.89142990 98.09171295]
[59.95003128 83.61879730]
[69.46590424 72.02361298]
[84.42965698 73.06568146]
[92.24652100 85.86798096]
[91.97879028 70.87036896]
[91.71105194 55.87275696]
[91.44331360 40.87514877]
[88.15251923 32.31859207]
[91.30705261 25.60800934]
[91.30705261 10.60800934]
[91.30705261 -4.39199018]
[91.30705261 -19.39199066]
[83.56975555 -33.19216156]
[91.30705261 -45.91943359]
[91.30705261 -60.91943359]
[91.30705261 -75.91943359]
[91.30705261 -90.91943359]
[80.73712921 -99.29876709]
[76.98790741 -112.05270386]
[81.21607971 -124.45033264]
[91.66169739 -132.02679443]
[91.92942810 -147.02439880]
[92.19716644 -162.02200317]
[92.46489716 -177.01962280]
[84.07635498 -186.84515381]
[84.62667847 -199.35110474]
[93.27391815 -207.83888245]
[93.80930328 -222.82933044]
[94.34468842 -237.81976318]
[91.56589508 -243.87652588]
[92.19290924 -249.56587219]
[95.17621613 -253.33296204]
[96.24630737 -268.29473877]
[97.31639099 -283.25653076]
[98.38648224 -298.21832275]
[95.87143707 -307.03411865]
[99.61154175 -313.43682861]
[100.94850922 -328.37713623]
[102.28547668 -343.31741333]
[94.89730835 -357.95800781]
[104.10747528 -371.52655029]
[120.44135284 -370.06484985]
[127.09604645 -355.07662964]
[117.22577667 -341.98046875]
[115.88880920 -327.04016113]
[114.55183411 -312.09985352]
[113.34825897 -297.14822388]
[112.27817535 -282.18643188]
[111.20808411 -267.22467041]
[110.13800049 -252.26287842]
[109.33513641 -237.28437805]
[108.79975128 -222.29394531]
[108.26436615 -207.30349731]
[117.32011414 -192.28759766]
[107.46250916 -176.75187683]
[107.19477844 -161.75427246]
[106.92704010 -146.75666809]
[106.65930176 -131.75904846]
[118.83966827 -120.18376923]
[118.89636230 -103.04328156]
[106.30705261 -90.91943359]
[106.30705261 -75.91943359]
[106.30705261 -60.91943359]
[106.30705261 -45.91943359]
[114.04435730 -33.19216156]
[106.30705261 -19.39199066]
[106.30705261 -4.39199018]
[106.30705261 10.60800934]
[106.30705261 25.60800934]
[106.44092560 40.60741043]
[106.70866394 55.60502243]
[106.97639465 70.60263062]
[107.24413300 85.60024261]
[111.41487122 71.19174194]
[118.97351074 58.23538971]
[129.46362305 47.51356125]
[142.25175476 39.67368698]
[156.56570435 35.18917847]
[171.54112244 34.33083725]
[186.27372742 37.15048599]
[199.87388611 43.47786713]
[211.52035522 52.93089676]
[220.50985718 64.93875885]
[226.29957581 78.77635956]
[228.53988647 93.60811615]
[227.09552002 108.53841400]
[222.05368042 122.66568756]
[213.71882629 135.13687134]
[202.59426880 145.19888306]
[189.35174561 152.24412537]
[174.79090881 155.84719849]
[159.79101562 155.79049683]
[145.25782776 152.07746887]
[132.06893921 144.93231201]
[121.02075958 134.78649902]
[112.78042603 122.25266266]
[107.84649658 108.09217834]
[108.38188171 123.08261871]
[108.91726685 138.07305908]
[117.14219666 151.58828735]
[109.86408997 164.58360291]
[110.39947510 179.57405090]
[110.93486023 194.56448364]
[111.47024536 209.55493164]
[112.00563049 224.54537964]
[112.54101562 239.53581238]
[113.07640076 254.52626038]
[113.61178589 269.51669312]
[121.83671570 283.03192139]
[114.55861664 296.02725220]
[115.09400177 311.01770020]
[126.37897491 321.75485229]
[126.70838928 336.96493530]
[116.40258789 347.65725708]
[116.93797302 362.64770508]
[117.47335815 377.63815308]
[118.00874329 392.62860107]
[118.54412842 407.61904907]
[129.40638733 415.61575317]
[133.60844421 428.22775269]
[129.82546997 440.76840210]
[119.65692902 448.71286011]
[119.92466736 463.71044922]
[120.19239807 478.70806885]
[120.46013641 493.70568848]
[122.99435425 512.92095947]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 174]
[2 173]
[3 172]
[4 171]
[7 167]
[8 166]
[9 165]
[10 164]
[11 163]
[14 160]
[15 159]
[17 157]
[18 156]
[19 155]
[20 154]
[21 153]
[22 152]
[23 151]
[24 150]
[26 148]
[27 147]
[28 146]
[30 48]
[31 47]
[32 46]
[33 45]
[34 44]
[35 43]
[36 42]
[53 122]
[54 121]
[55 120]
[56 119]
[58 118]
[59 117]
[60 116]
[61 115]
[63 113]
[64 112]
[65 111]
[66 110]
[70 107]
[71 106]
[72 105]
[73 104]
[76 102]
[77 101]
[78 100]
[81 99]
[82 98]
[83 97]
[84 96]
[86 95]
[87 94]
[88 93]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
