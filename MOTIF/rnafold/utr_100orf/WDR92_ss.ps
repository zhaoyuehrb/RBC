%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:03:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCAGAAUACGGAAAGCGGGAGGGACAAAUUGCCAAUGUUUGGAGUCUGGUUUCCAGGUUGCCGUUUUUGGGGGCUCUGGGUGUGGCGGUUGCCGUAGCUGAAAUUGGCUGCACCAUGUCGGCCUUCGAGAAGCCUCAGAUCAUCGCCCAUAUCCAGAAGGGCUUCAACUACACGGUGUUUGACUGUAAGUGGGUGCCCUGCAGCGCCAAAUUUG\
) } def
/len { sequence length } bind def

/coor [
[117.15236664 188.02174377]
[115.64177704 173.09800720]
[106.66210175 161.21463013]
[112.97031403 146.70541382]
[111.45972443 131.78167725]
[104.71929169 128.49281311]
[98.89013672 142.31384277]
[96.09636688 157.05137634]
[81.28448486 159.41954041]
[74.03488922 146.28778076]
[83.93190765 135.01525879]
[91.23843384 121.91508484]
[84.49800873 118.62622070]
[71.80536652 126.61977386]
[59.11272430 134.61332703]
[46.42008209 142.60687256]
[33.72743988 150.60041809]
[26.17329979 164.50170898]
[11.28055191 164.73698425]
[-1.41208923 172.73054504]
[-14.10473061 180.72409058]
[-26.79737282 188.71763611]
[-25.97367668 201.18521118]
[-30.50069427 212.75355530]
[-39.46286774 221.25135803]
[-51.11850739 225.11166382]
[-63.23806763 223.66067505]
[-73.53060150 217.23443604]
[-86.44832611 224.85888672]
[-99.36605835 232.48335266]
[-112.28378296 240.10780334]
[-125.20151520 247.73225403]
[-127.59022522 263.18630981]
[-139.38777161 273.45043945]
[-155.02368164 273.67822266]
[-167.11518860 263.76208496]
[-169.95304871 248.38415527]
[-162.19728088 234.80541992]
[-147.50996399 229.43731689]
[-132.82597351 234.81452942]
[-119.90824127 227.19007874]
[-106.99050903 219.56561279]
[-94.07278442 211.94116211]
[-81.15505981 204.31671143]
[-80.29434204 186.67370605]
[-68.91183472 172.96101379]
[-51.42284393 168.79359436]
[-34.79092407 176.02499390]
[-22.09828186 168.03144836]
[-9.40563965 160.03790283]
[3.28700161 152.04434204]
[9.93328190 138.71482849]
[25.73389053 137.90777588]
[38.42653275 129.91423035]
[51.11917496 121.92068481]
[63.81181717 113.92713165]
[76.50445557 105.93357849]
[75.91062927 98.45712280]
[74.72296906 83.50421906]
[74.12913513 76.02776337]
[60.33379364 70.13806915]
[46.53844833 64.24837494]
[30.80855179 65.94570160]
[22.14143753 53.83246613]
[8.34609413 47.94277191]
[-5.44924879 42.05307770]
[-21.65659523 44.55385971]
[-31.71365929 31.60057831]
[-25.27459335 16.51845551]
[-8.96335697 14.82268524]
[0.44044715 28.25773239]
[14.23579025 34.14743042]
[28.03113365 40.03712463]
[42.77429581 37.91852951]
[52.42814636 50.45302963]
[66.22348785 56.34272766]
[80.01882935 62.23242188]
[93.59307861 55.84964371]
[97.85675812 41.46837234]
[102.12044525 27.08709908]
[106.38413239 12.70582676]
[110.64781189 -1.67544520]
[114.91149902 -16.05671692]
[119.17518616 -30.43799019]
[123.43886566 -44.81926346]
[127.70255280 -59.20053482]
[131.96623230 -73.58181000]
[136.22991943 -87.96308136]
[140.38987732 -102.37470245]
[144.44587708 -116.81591797]
[148.50187683 -131.25714111]
[152.55787659 -145.69836426]
[139.56704712 -154.92633057]
[130.53741455 -168.02320862]
[126.54596710 -183.39453125]
[128.05764771 -199.17654419]
[134.87133789 -213.46223450]
[146.14633179 -224.53167725]
[160.50607300 -231.05917358]
[176.20619202 -232.27198792]
[180.05366516 -246.77015686]
[183.90113831 -261.26831055]
[171.05786133 -270.94494629]
[162.93176270 -284.77661133]
[160.74203491 -300.62963867]
[164.79478455 -316.07165527]
[174.44062805 -328.74484253]
[188.17848206 -336.72586060]
[203.88917542 -338.81781006]
[207.52731323 -353.36990356]
[211.16546631 -367.92202759]
[214.80361938 -382.47412109]
[218.44177246 -397.02624512]
[221.97497559 -411.60418701]
[225.40304565 -426.20721436]
[223.13655090 -443.00897217]
[238.65428162 -449.83807373]
[249.51222229 -436.81729126]
[240.00605774 -422.77914429]
[236.57798767 -408.17611694]
[238.10871887 -400.94973755]
[232.99388123 -393.38809204]
[229.35572815 -378.83599854]
[225.71757507 -364.28387451]
[222.07942200 -349.73178101]
[218.44128418 -335.17965698]
[230.02479553 -327.26217651]
[238.22814941 -315.84249878]
[242.04972839 -302.28009033]
[241.01103210 -288.19790649]
[235.21643066 -275.28845215]
[225.34318542 -265.11026001]
[212.56219482 -258.89968872]
[198.39930725 -257.42083740]
[194.55183411 -242.92268372]
[190.70436096 -228.42451477]
[202.55838013 -220.69007874]
[211.45829773 -209.65657043]
[216.52398682 -196.39407349]
[217.24795532 -182.19404602]
[213.54620361 -168.44369507]
[205.76777649 -156.49035645]
[194.66175842 -147.50952148]
[181.30531311 -142.38926697]
[166.99909973 -141.64236450]
[162.94309998 -127.20114136]
[158.88710022 -112.75991821]
[154.83108521 -98.31870270]
[156.04806519 -91.03292084]
[150.61119080 -83.69939423]
[146.34750366 -69.31812286]
[142.08383179 -54.93685150]
[137.82014465 -40.55557632]
[133.55645752 -26.17430496]
[129.29277039 -11.79303265]
[125.02908325 2.58823919]
[120.76540375 16.96951103]
[116.50171661 31.35078430]
[112.23803711 45.73205566]
[107.97434998 60.11332703]
[158.97325134 100.89356995]
[171.99949646 108.33108521]
[185.02575684 115.76860046]
[198.05201721 123.20610809]
[211.07827759 130.64361572]
[226.89900208 130.76701355]
[234.11517334 143.79682922]
[247.14143372 151.23434448]
[262.96215820 151.35774231]
[270.17831421 164.38755798]
[283.20458984 171.82507324]
[296.23083496 179.26258850]
[308.85266113 176.62358093]
[319.54776001 183.08230591]
[322.86703491 194.71113586]
[335.78475952 202.33560181]
[348.70248413 209.96005249]
[361.62020874 217.58450317]
[374.53793335 225.20895386]
[390.36978149 222.61427307]
[402.17224121 233.48078918]
[400.89151001 249.47264099]
[387.51004028 258.32223511]
[372.29293823 253.24095154]
[366.91348267 238.12669373]
[353.99575806 230.50222778]
[341.07803345 222.87777710]
[328.16030884 215.25332642]
[315.24255371 207.62887573]
[297.70846558 208.40374756]
[288.79333496 192.28884888]
[275.76705933 184.85133362]
[262.74081421 177.41381836]
[247.85180664 177.82240295]
[239.70391846 164.26060486]
[226.67765808 156.82308960]
[211.78865051 157.23168945]
[203.64076233 143.66987610]
[190.61450195 136.23236084]
[177.58824158 128.79486084]
[164.56199646 121.35734558]
[151.53573608 113.91983032]
[145.24766541 118.00764465]
[146.04020691 132.98669434]
[132.67153931 126.18327332]
[126.38346863 130.27108765]
[127.89405060 145.19482422]
[136.98178101 158.14566040]
[130.56552124 171.58741760]
[132.07611084 186.51115417]
[145.55165100 194.20462036]
[151.90078735 208.36329651]
[148.68214417 223.54289246]
[137.13334656 233.90652466]
[121.69515991 235.46919250]
[108.30386353 227.62998962]
[102.10870361 213.40327454]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 210]
[2 209]
[4 207]
[5 206]
[13 57]
[14 56]
[15 55]
[16 54]
[17 53]
[19 51]
[20 50]
[21 49]
[22 48]
[28 44]
[29 43]
[30 42]
[31 41]
[32 40]
[60 77]
[61 76]
[62 75]
[64 73]
[65 72]
[66 71]
[78 160]
[79 159]
[80 158]
[81 157]
[82 156]
[83 155]
[84 154]
[85 153]
[86 152]
[87 151]
[88 150]
[89 148]
[90 147]
[91 146]
[92 145]
[100 136]
[101 135]
[102 134]
[109 126]
[110 125]
[111 124]
[112 123]
[113 122]
[114 120]
[115 119]
[161 202]
[162 201]
[163 200]
[164 199]
[165 198]
[167 196]
[168 195]
[170 193]
[171 192]
[172 191]
[175 189]
[176 188]
[177 187]
[178 186]
[179 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
