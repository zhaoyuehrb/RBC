%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:10:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCCGCCCCGCUCCCUACCUAAGGCGUGAGGCUACGAGCGGUCGGCUGUGGCAGCUUCUCUUGUCUCUGACGGCUUGUAGUUAUGGGGCAGGAGCCGCGGACGCUGCCGCCCUCCCCCAACUGGUACUGCGCCCGCUGCAGCGAUGCCGUGCCCGGGGGCCUCUUUGGCUUCGCCGCGCGGA\
) } def
/len { sequence length } bind def

/coor [
[110.74795532 226.08963013]
[119.76410675 222.55767822]
[114.02385712 208.69947815]
[108.28359985 194.84129333]
[102.54335022 180.98309326]
[96.80310059 167.12490845]
[81.94281006 165.08239746]
[72.67652893 176.87799072]
[70.23584747 192.50981140]
[56.28914261 197.73846436]
[47.02285767 209.53404236]
[37.75657272 221.32963562]
[35.31589127 236.96145630]
[21.36918640 242.19010925]
[12.10290432 253.98570251]
[16.46974564 268.87564087]
[11.21881580 283.47726440]
[-1.63079810 292.17593384]
[-17.13815498 291.62686157]
[-29.34036255 282.04113770]
[-33.54541779 267.10470581]
[-28.13639832 252.56091309]
[-15.19317627 244.00213623]
[0.30731189 244.71940613]
[9.57359505 232.92381287]
[11.35149288 218.13571167]
[25.96098137 212.06335449]
[35.22726440 200.26776123]
[44.49354935 188.47216797]
[46.27144623 173.68405151]
[60.88093567 167.61170959]
[70.14721680 155.81611633]
[66.22371674 141.33833313]
[52.26954269 135.83552551]
[38.31536484 130.33271790]
[24.36118889 124.82990265]
[10.40701199 119.32708740]
[-3.54716444 113.82427216]
[-17.50134087 108.32145691]
[-31.45551872 102.81864929]
[-47.13198090 104.95384216]
[-56.13342667 93.08694458]
[-70.08760071 87.58412933]
[-84.04177856 82.08131409]
[-97.99595642 76.57849884]
[-111.95013428 71.07569122]
[-120.05832672 75.97129059]
[-129.37321472 76.56388855]
[-137.78427124 72.84655762]
[-143.44436646 65.77461243]
[-145.17501831 57.02382660]
[-158.82916260 50.81378555]
[-172.48329163 44.60374832]
[-186.13743591 38.39370728]
[-199.79156494 32.18367004]
[-214.50099182 37.96367645]
[-228.95561218 31.57312584]
[-234.57978821 16.80341721]
[-228.03677368 2.41715646]
[-213.20841980 -3.05054212]
[-198.89215088 3.64420915]
[-193.58152771 18.52953339]
[-179.92739868 24.73957253]
[-166.27325439 30.94961166]
[-152.61912537 37.15964890]
[-138.96498108 43.36968994]
[-118.69444275 39.55562210]
[-106.44731903 57.12151337]
[-92.49314117 62.62432480]
[-78.53897095 68.12713623]
[-64.58479309 73.62995148]
[-50.63061523 79.13276672]
[-35.95224762 76.60397339]
[-25.95270538 88.86447144]
[-11.99852753 94.36728668]
[1.95564878 99.87009430]
[15.90982533 105.37290955]
[29.86400223 110.87572479]
[43.81818008 116.37854004]
[57.77235413 121.88134766]
[71.72653198 127.38416290]
[63.17539978 105.78327179]
[68.43376923 84.44428253]
[84.14891815 70.93533325]
[103.53987885 69.18151093]
[108.80364990 55.13542175]
[114.06742096 41.08932877]
[119.33119202 27.04323578]
[124.59496307 12.99714375]
[122.19243622 -2.64058089]
[133.90391541 -11.84331799]
[139.16769409 -25.88941002]
[144.43145752 -39.93550491]
[144.51525879 -49.09398651]
[149.90686035 -54.17518997]
[155.40968323 -68.12936401]
[153.27449036 -83.80583191]
[165.14138794 -92.80727386]
[170.64419556 -106.76145172]
[176.14701843 -120.71562958]
[181.64982605 -134.66979980]
[181.83569336 -151.62274170]
[198.17755127 -156.13716125]
[207.03942871 -141.68367004]
[195.60400391 -129.16699219]
[190.10118103 -115.21281433]
[184.59837341 -101.25863647]
[179.09556580 -87.30446625]
[181.62435913 -72.62609863]
[169.36386108 -62.62655258]
[163.86103821 -48.67237854]
[158.47755432 -34.67173386]
[153.21379089 -20.62564087]
[147.95001221 -6.57954741]
[150.72903442 8.05350685]
[138.64105225 18.26091576]
[133.37728882 32.30700684]
[128.11351013 46.35309982]
[122.84973907 60.39919281]
[117.58596802 74.44528198]
[129.59800720 85.16863251]
[135.16424561 101.37247467]
[131.92308044 119.24616241]
[119.71868134 134.06544495]
[134.70994568 134.57756042]
[149.70120239 135.08967590]
[164.69244385 135.60180664]
[179.68370056 136.11392212]
[193.73999023 128.85227966]
[206.19567871 137.01959229]
[221.18693542 137.53170776]
[236.17819214 138.04382324]
[246.13412476 129.81916809]
[258.62432861 130.56826782]
[266.97210693 139.34339905]
[281.95245361 140.11138916]
[296.93276978 140.87937927]
[311.28189087 132.93992615]
[325.19076538 141.62756348]
[324.35113525 158.00520325]
[309.62673950 165.22492981]
[296.16479492 155.85969543]
[281.18444824 155.09170532]
[266.20413208 154.32371521]
[251.04435730 163.14369202]
[235.66607666 153.03507996]
[220.67481995 152.52296448]
[205.68356323 152.01084900]
[192.69955444 159.30911255]
[179.17158508 151.10517883]
[164.18032837 150.59304810]
[149.18907166 150.08093262]
[134.19783020 149.56881714]
[119.20656586 149.05670166]
[110.66129303 161.38465881]
[116.40154266 175.24284363]
[122.14179993 189.10104370]
[127.88204956 202.95922852]
[133.62229919 216.81742859]
[141.08529663 229.82910156]
[150.14884949 241.78117371]
[159.21238708 253.73324585]
[174.84626770 257.33346558]
[181.64884949 271.86288452]
[174.40177917 286.17581177]
[158.66438293 289.29257202]
[146.50906372 278.82223511]
[147.26031494 262.79678345]
[138.19677734 250.84471130]
[129.13322449 238.89263916]
[115.58710480 245.33489990]
[119.13857269 259.90838623]
[122.69004059 274.48190308]
[126.24150085 289.05541992]
[129.79296875 303.62890625]
[139.41754150 317.58615112]
[128.67012024 330.69833374]
[113.09518433 324.00073242]
[115.21946716 307.18038940]
[111.66799927 292.60687256]
[108.11653137 278.03338623]
[104.56506348 263.45986938]
[101.01359558 248.88635254]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 159]
[3 158]
[4 157]
[5 156]
[6 155]
[7 32]
[8 31]
[10 29]
[11 28]
[12 27]
[14 25]
[15 24]
[33 81]
[34 80]
[35 79]
[36 78]
[37 77]
[38 76]
[39 75]
[40 74]
[42 72]
[43 71]
[44 70]
[45 69]
[46 68]
[51 66]
[52 65]
[53 64]
[54 63]
[55 62]
[85 120]
[86 119]
[87 118]
[88 117]
[89 116]
[91 114]
[92 113]
[93 112]
[95 111]
[96 110]
[98 108]
[99 107]
[100 106]
[101 105]
[124 154]
[125 153]
[126 152]
[127 151]
[128 150]
[130 148]
[131 147]
[132 146]
[135 144]
[136 143]
[137 142]
[160 170]
[161 169]
[162 168]
[171 183]
[172 182]
[173 181]
[174 180]
[175 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
