%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:11:03 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR1Q1)
} def

/sequence { (\
AUGGACAACAGCAACUGGACCAGUGUGUCCCAUUUUGUUCUCUUGGGCAUUUCCACCCACCCAGAAGAGCAAAUCCCACUCUUCCUUGUUUUCUCACUCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 33 0.174660207 ubox
1 89 0.005519054 ubox
2 10 0.096007151 ubox
2 13 0.033085147 ubox
2 22 0.016681993 ubox
2 32 0.204584017 ubox
2 55 0.004180103 ubox
2 63 0.011624875 ubox
2 78 0.037149474 ubox
2 88 0.005801860 ubox
2 96 0.408666229 ubox
2 100 0.084184793 ubox
3 9 0.120861515 ubox
3 12 0.040270428 ubox
3 16 0.004894002 ubox
3 21 0.022719873 ubox
3 30 0.371682754 ubox
3 31 0.188522788 ubox
3 40 0.017619364 ubox
3 41 0.005789685 ubox
3 42 0.003512063 ubox
3 43 0.047345758 ubox
3 54 0.004805385 ubox
3 62 0.012965167 ubox
3 76 0.030883128 ubox
3 77 0.043086793 ubox
3 82 0.006180417 ubox
3 84 0.003296549 ubox
3 85 0.046160793 ubox
3 90 0.003945637 ubox
3 91 0.096457085 ubox
3 92 0.015581180 ubox
3 93 0.196774078 ubox
3 94 0.529350363 ubox
3 95 0.463659573 ubox
3 98 0.058136457 ubox
3 99 0.102838565 ubox
4 15 0.005135533 ubox
4 20 0.022698077 ubox
4 29 0.386216965 ubox
4 30 0.159345704 ubox
4 39 0.017764047 ubox
4 40 0.006577340 ubox
4 42 0.051639796 ubox
4 53 0.004804838 ubox
4 61 0.012777173 ubox
4 75 0.031316383 ubox
4 76 0.042634926 ubox
4 81 0.006687492 ubox
4 84 0.046180939 ubox
4 90 0.124107629 ubox
4 91 0.019154244 ubox
4 92 0.197185122 ubox
4 93 0.719831482 ubox
4 94 0.138761847 ubox
4 95 0.300441823 ubox
4 97 0.073806685 ubox
4 98 0.074817040 ubox
4 99 0.078148531 ubox
5 28 0.398859399 ubox
5 38 0.017879806 ubox
5 39 0.005831597 ubox
5 41 0.051175272 ubox
5 52 0.004507299 ubox
5 74 0.028871753 ubox
5 80 0.006192789 ubox
5 82 0.003407304 ubox
5 83 0.042847662 ubox
5 89 0.128490391 ubox
5 90 0.016621591 ubox
5 91 0.195308104 ubox
5 92 0.712320471 ubox
5 94 0.298287170 ubox
5 98 0.076637620 ubox
6 17 0.012746463 ubox
6 27 0.398303103 ubox
6 37 0.017938720 ubox
6 88 0.129616788 ubox
7 16 0.012873756 ubox
7 26 0.265619741 ubox
7 36 0.017833247 ubox
7 39 0.049729611 ubox
7 87 0.128062703 ubox
7 90 0.660307557 ubox
7 91 0.097928554 ubox
7 92 0.226963634 ubox
8 24 0.045726136 ubox
8 26 0.193917529 ubox
8 28 0.117294219 ubox
8 35 0.016519572 ubox
8 38 0.054528533 ubox
8 82 0.005070110 ubox
8 86 0.119670553 ubox
8 89 0.709258644 ubox
8 90 0.075544691 ubox
8 91 0.242382909 ubox
9 17 0.039530390 ubox
9 23 0.045815154 ubox
9 25 0.272780624 ubox
9 27 0.119380455 ubox
9 37 0.054858173 ubox
9 88 0.710022054 ubox
10 16 0.045993878 ubox
10 24 0.203665674 ubox
10 26 0.100331099 ubox
10 34 0.004760813 ubox
10 36 0.054557973 ubox
10 39 0.027990621 ubox
10 80 0.011931730 ubox
10 82 0.018526092 ubox
10 83 0.005632546 ubox
10 86 0.050430192 ubox
10 87 0.702198902 ubox
10 90 0.447299023 ubox
10 91 0.028513844 ubox
10 92 0.027396884 ubox
10 94 0.053710422 ubox
10 98 0.005826222 ubox
11 15 0.046911102 ubox
11 24 0.056436215 ubox
11 26 0.234481223 ubox
11 28 0.061105847 ubox
11 33 0.004959345 ubox
11 35 0.050986175 ubox
11 38 0.045039794 ubox
11 79 0.012618700 ubox
11 81 0.018756552 ubox
11 82 0.005394231 ubox
11 85 0.067582460 ubox
11 86 0.670820651 ubox
11 89 0.515212646 ubox
11 90 0.022996620 ubox
11 91 0.030382815 ubox
11 93 0.056989228 ubox
11 97 0.006135221 ubox
12 23 0.079496724 ubox
12 25 0.298104451 ubox
12 27 0.065726539 ubox
12 37 0.047361647 ubox
12 88 0.519780035 ubox
13 24 0.210886826 ubox
13 26 0.061038349 ubox
13 34 0.053667703 ubox
13 35 0.011325629 ubox
13 36 0.046747444 ubox
13 39 0.003952613 ubox
13 83 0.039796981 ubox
13 87 0.515651587 ubox
13 90 0.118901302 ubox
13 91 0.018108611 ubox
13 92 0.007112396 ubox
14 24 0.299899170 ubox
14 26 0.004653176 ubox
14 33 0.061337635 ubox
14 34 0.015232123 ubox
14 35 0.043305236 ubox
14 38 0.004287909 ubox
14 43 0.003359068 ubox
14 82 0.036279808 ubox
14 86 0.441409288 ubox
14 89 0.132550219 ubox
14 90 0.015264679 ubox
14 91 0.005274496 ubox
15 23 0.402609302 ubox
15 25 0.005910852 ubox
15 37 0.004320413 ubox
15 64 0.008990778 ubox
15 88 0.134287990 ubox
16 22 0.402591962 ubox
16 32 0.073891644 ubox
16 55 0.012337131 ubox
16 59 0.013256963 ubox
16 63 0.014875238 ubox
16 78 0.018490752 ubox
16 88 0.003339293 ubox
17 21 0.396220340 ubox
17 30 0.236414452 ubox
17 31 0.068552059 ubox
17 40 0.008808337 ubox
17 41 0.005959197 ubox
17 54 0.013920484 ubox
17 58 0.014960674 ubox
17 62 0.015650150 ubox
17 76 0.009073899 ubox
17 77 0.018605293 ubox
17 81 0.007527700 ubox
17 82 0.033282411 ubox
17 83 0.005181571 ubox
17 84 0.027412445 ubox
17 85 0.863728162 ubox
17 86 0.020416614 ubox
18 29 0.241862987 ubox
18 30 0.053005684 ubox
18 39 0.008904144 ubox
18 40 0.006956054 ubox
18 53 0.013924329 ubox
18 57 0.014934458 ubox
18 61 0.015615379 ubox
18 75 0.009438895 ubox
18 76 0.018010718 ubox
18 80 0.005132523 ubox
18 81 0.033866665 ubox
18 82 0.003800093 ubox
18 83 0.027217573 ubox
18 84 0.864951955 ubox
18 85 0.021593764 ubox
18 90 0.004393630 ubox
19 26 0.010068427 ubox
19 28 0.245706776 ubox
19 38 0.008949485 ubox
19 39 0.006824181 ubox
19 52 0.013369981 ubox
19 74 0.009319151 ubox
19 80 0.031179324 ubox
19 82 0.025731507 ubox
19 83 0.844227797 ubox
19 89 0.004561856 ubox
20 25 0.010894675 ubox
20 27 0.243426805 ubox
20 37 0.008427034 ubox
20 88 0.004568288 ubox
21 27 0.036932109 ubox
21 37 0.007818466 ubox
22 26 0.036737766 ubox
22 34 0.014060154 ubox
22 36 0.008345893 ubox
22 51 0.008344225 ubox
22 80 0.505537955 ubox
22 82 0.650207104 ubox
22 83 0.006900877 ubox
22 86 0.003518576 ubox
22 98 0.003593921 ubox
23 33 0.021446267 ubox
23 35 0.007975024 ubox
23 50 0.009560970 ubox
23 56 0.015655492 ubox
23 60 0.003550564 ubox
23 79 0.512657237 ubox
23 81 0.684721295 ubox
23 82 0.013850872 ubox
23 85 0.003612136 ubox
23 97 0.004589561 ubox
24 32 0.022383059 ubox
24 49 0.009497593 ubox
24 55 0.015693365 ubox
24 59 0.003555155 ubox
24 78 0.512047815 ubox
24 96 0.004586181 ubox
25 31 0.023737388 ubox
25 33 0.024798177 ubox
25 48 0.009420857 ubox
25 50 0.021252350 ubox
25 54 0.014952725 ubox
25 58 0.003482356 ubox
25 60 0.003663643 ubox
25 74 0.005229304 ubox
25 77 0.509475567 ubox
25 79 0.698291121 ubox
25 95 0.004492244 ubox
25 97 0.003685234 ubox
26 32 0.062816400 ubox
26 47 0.003166837 ubox
26 49 0.025393524 ubox
26 59 0.003681512 ubox
26 73 0.012089807 ubox
26 78 0.700100370 ubox
26 96 0.003692506 ubox
27 31 0.069952231 ubox
27 33 0.021443749 ubox
27 48 0.025725713 ubox
27 50 0.007546257 ubox
27 58 0.003674107 ubox
27 74 0.094598324 ubox
27 77 0.697933166 ubox
27 79 0.038288638 ubox
27 95 0.003676218 ubox
28 32 0.021246603 ubox
28 47 0.007799219 ubox
28 49 0.007659752 ubox
28 73 0.081338380 ubox
28 78 0.037395209 ubox
29 46 0.007322345 ubox
29 47 0.027659266 ubox
30 45 0.006769658 ubox
30 46 0.027979515 ubox
31 37 0.006028738 ubox
31 45 0.028115887 ubox
31 88 0.009377320 ubox
32 36 0.005020897 ubox
32 44 0.027715595 ubox
32 74 0.252977507 ubox
32 87 0.008734596 ubox
32 89 0.004370455 ubox
33 72 0.017866718 ubox
33 73 0.230623371 ubox
33 88 0.004539360 ubox
34 71 0.009362807 ubox
34 72 0.188888968 ubox
34 73 0.901563497 ubox
35 69 0.007697917 ubox
35 71 0.133125357 ubox
35 72 0.964064774 ubox
35 73 0.021974024 ubox
36 49 0.011394883 ubox
36 68 0.009093549 ubox
36 71 0.984697622 ubox
36 72 0.016762077 ubox
37 48 0.012502136 ubox
37 62 0.003272397 ubox
37 70 0.996046656 ubox
38 47 0.012492355 ubox
38 66 0.010932001 ubox
38 68 0.004653539 ubox
38 69 0.995559429 ubox
39 46 0.012452920 ubox
39 65 0.012740523 ubox
39 67 0.004800339 ubox
39 68 0.995440100 ubox
40 45 0.012473995 ubox
40 64 0.013156179 ubox
40 67 0.995899346 ubox
40 69 0.007729187 ubox
41 63 0.012976418 ubox
41 65 0.407718462 ubox
41 66 0.901048598 ubox
41 68 0.008896301 ubox
42 64 0.576749196 ubox
42 67 0.009091261 ubox
43 63 0.520636623 ubox
43 64 0.729718848 ubox
43 65 0.027172849 ubox
43 66 0.008618882 ubox
44 55 0.023996093 ubox
44 59 0.464892088 ubox
44 63 0.843023447 ubox
44 64 0.017065416 ubox
44 65 0.004463233 ubox
45 54 0.024771825 ubox
45 57 0.005409851 ubox
45 58 0.471546083 ubox
45 61 0.072254444 ubox
45 62 0.877850488 ubox
46 53 0.024755296 ubox
46 54 0.003244429 ubox
46 56 0.005898887 ubox
46 57 0.471668251 ubox
46 58 0.007130027 ubox
46 60 0.072489170 ubox
46 61 0.877776373 ubox
46 62 0.004913170 ubox
47 52 0.017546373 ubox
47 53 0.004128423 ubox
47 56 0.471353501 ubox
47 57 0.008519674 ubox
47 60 0.874870734 ubox
47 61 0.005212530 ubox
59 89 0.012928986 ubox
60 88 0.016112628 ubox
62 88 0.019159028 ubox
63 86 0.012285934 ubox
63 87 0.017546177 ubox
63 94 0.008750397 ubox
64 84 0.084935508 ubox
64 85 0.009924203 ubox
64 93 0.009479947 ubox
64 95 0.005726787 ubox
65 83 0.086225850 ubox
65 92 0.008365643 ubox
65 94 0.005635005 ubox
66 82 0.086536471 ubox
66 91 0.007003730 ubox
66 92 0.008075226 ubox
67 81 0.086633616 ubox
67 90 0.005553806 ubox
67 91 0.009851313 ubox
67 95 0.004347406 ubox
68 80 0.086593737 ubox
68 89 0.004681368 ubox
68 90 0.010790659 ubox
68 94 0.004352921 ubox
69 79 0.086217811 ubox
69 89 0.011464171 ubox
69 93 0.004338171 ubox
70 88 0.012342622 ubox
71 87 0.012227004 ubox
71 91 0.003801477 ubox
71 92 0.003550979 ubox
72 83 0.005829386 ubox
72 86 0.011178047 ubox
72 90 0.005013217 ubox
72 91 0.004756363 ubox
73 82 0.008197578 ubox
73 89 0.005727010 ubox
73 90 0.005657009 ubox
73 91 0.003812183 ubox
74 88 0.005437023 ubox
77 88 0.061505728 ubox
78 87 0.060295730 ubox
78 89 0.146202694 ubox
79 88 0.156359694 ubox
87 96 0.109602186 ubox
87 100 0.029964691 ubox
88 95 0.123464889 ubox
88 97 0.083773476 ubox
88 99 0.037957674 ubox
89 96 0.079335054 ubox
3 94 0.9500000 lbox
4 93 0.9500000 lbox
5 92 0.9500000 lbox
7 90 0.9500000 lbox
8 89 0.9500000 lbox
9 88 0.9500000 lbox
10 87 0.9500000 lbox
11 86 0.9500000 lbox
17 85 0.9500000 lbox
18 84 0.9500000 lbox
19 83 0.9500000 lbox
22 82 0.9500000 lbox
23 81 0.9500000 lbox
25 79 0.9500000 lbox
26 78 0.9500000 lbox
27 77 0.9500000 lbox
34 73 0.9500000 lbox
35 72 0.9500000 lbox
36 71 0.9500000 lbox
37 70 0.9500000 lbox
38 69 0.9500000 lbox
39 68 0.9500000 lbox
40 67 0.9500000 lbox
41 66 0.9500000 lbox
43 64 0.9500000 lbox
44 63 0.9500000 lbox
45 62 0.9500000 lbox
46 61 0.9500000 lbox
47 60 0.9500000 lbox
showpage
end
%%EOF
