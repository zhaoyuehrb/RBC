%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:27:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGACAGCUGGGAAGGCGUCUCCCGGAAGACGACCUCCGCAGAGCUGAUGGCAUUGAGAUCCAUUCCCGGAGGGGUCAGCUCCUGACGGGUUCCUGAGCCAGUCUUAACCUGGGCAAAGGAGAUGAGGAGCCGAGCCUGAUGCAUUGUGAUGGCCAUCUGCCCAGAAUUGGCCCAAACGGACAAAAGUGCUCUUGCAAACCUUUCUGAUGAGACUGAGACUUUGAAGAACUCUACUGAUGAGGUACAGA\
) } def
/len { sequence length } bind def

/coor [
[118.42459106 186.34146118]
[107.49642944 197.23085022]
[92.41102600 200.46104431]
[77.98207855 195.00129700]
[68.81380463 182.59378052]
[67.83176422 167.19770813]
[75.34933472 153.72590637]
[88.96768188 146.47715759]
[90.09757996 131.51977539]
[91.22748566 116.56239319]
[77.11427307 111.48132324]
[68.45068359 123.72640991]
[59.78709030 135.97149658]
[57.39462280 144.76014709]
[50.93690109 148.31509399]
[42.12012100 160.45036316]
[33.37976456 172.64076233]
[24.71617508 184.88586426]
[16.05258369 197.13095093]
[7.38899326 209.37603760]
[-1.27459753 221.62112427]
[1.64039445 237.15426636]
[-7.35081720 250.15170288]
[-22.91390610 252.90231323]
[-35.81556702 243.77418518]
[-38.40147400 228.18289185]
[-29.13745499 215.37844849]
[-13.51968670 212.95753479]
[-4.85609579 200.71244812]
[3.80749488 188.46736145]
[12.47108555 176.22225952]
[21.13467598 163.97717285]
[22.42899895 156.72013855]
[29.98486710 151.63357544]
[38.80164719 139.49832153]
[47.54200363 127.30790710]
[56.20559311 115.06282043]
[64.86918640 102.81773376]
[68.04929352 88.15870667]
[65.23857117 73.42440033]
[62.42785263 58.69009399]
[59.52460861 43.97373581]
[56.52896118 29.27590942]
[53.53330994 14.57808304]
[50.53765869 -0.11974243]
[11.10361481 -15.76276684]
[17.12466621 -47.18739319]
[9.08726406 -59.85231400]
[1.04986227 -72.51723480]
[-6.98753977 -85.18215179]
[-15.02494144 -97.84706879]
[-23.06234360 -110.51198578]
[-31.17916298 -123.12615967]
[-39.37507629 -135.68907166]
[-47.57099152 -148.25199890]
[-62.77856445 -151.62358093]
[-70.91142273 -164.48092651]
[-67.60341644 -178.95823669]
[-75.79933167 -191.52116394]
[-83.99524689 -204.08407593]
[-98.01578522 -211.41448975]
[-98.48969269 -226.30155945]
[-106.68560791 -238.86447144]
[-114.88152313 -251.42739868]
[-123.07743835 -263.99032593]
[-127.05465698 -249.52720642]
[-140.03593445 -242.01144409]
[-154.55911255 -245.76341248]
[-162.27569580 -258.62631226]
[-158.74989319 -273.20605469]
[-146.00846863 -281.12161255]
[-131.37571716 -277.82281494]
[-138.60202026 -290.96743774]
[-145.82832336 -304.11203003]
[-159.25685120 -312.47775269]
[-158.60801697 -327.35821533]
[-165.83432007 -340.50280762]
[-179.26284790 -348.86853027]
[-178.61401367 -363.74899292]
[-185.84031677 -376.89358521]
[-193.06661987 -390.03817749]
[-200.29292297 -403.18276978]
[-207.51922607 -416.32739258]
[-214.74554443 -429.47198486]
[-226.15203857 -428.90786743]
[-236.90068054 -432.61273193]
[-245.45960999 -440.01824951]
[-250.62413025 -450.03164673]
[-251.68611145 -461.19683838]
[-248.53094482 -471.90603638]
[-241.64848328 -480.63146973]
[-248.37422180 -494.03909302]
[-255.09997559 -507.44671631]
[-261.82571411 -520.85437012]
[-268.55148315 -534.26196289]
[-283.28137207 -539.32830811]
[-289.91125488 -553.02130127]
[-284.99050903 -567.03283691]
[-291.71627808 -580.44042969]
[-298.44201660 -593.84808350]
[-305.25186157 -607.21313477]
[-312.14556885 -620.53521729]
[-327.44274902 -623.78033447]
[-337.03436279 -636.13079834]
[-336.39154053 -651.75518799]
[-325.81784058 -663.27606201]
[-310.30581665 -665.25366211]
[-297.17974854 -656.75421143]
[-292.63742065 -641.79089355]
[-298.82351685 -627.42889404]
[-291.92984009 -614.10687256]
[-286.07943726 -609.62213135]
[-285.03439331 -600.57379150]
[-278.30865479 -587.16619873]
[-271.58288574 -573.75854492]
[-257.40960693 -569.32531738]
[-250.39775085 -555.82391357]
[-255.14384460 -540.98773193]
[-248.41810608 -527.58007812]
[-241.69235229 -514.17248535]
[-234.96659851 -500.76486206]
[-228.24085999 -487.35723877]
[-209.63246155 -485.36709595]
[-195.89413452 -472.43829346]
[-192.72872925 -453.68774414]
[-201.60093689 -436.69830322]
[-194.37463379 -423.55368042]
[-187.14833069 -410.40908813]
[-179.92202759 -397.26449585]
[-172.69572449 -384.11987305]
[-165.46940613 -370.97528076]
[-152.55775452 -363.54977417]
[-152.68971252 -347.72912598]
[-145.46340942 -334.58450317]
[-132.55175781 -327.15899658]
[-132.68371582 -311.33834839]
[-125.45741272 -298.19372559]
[-118.23110962 -285.04913330]
[-110.51451874 -272.18624878]
[-102.31860352 -259.62332153]
[-94.12268829 -247.06039429]
[-85.92677307 -234.49746704]
[-72.49245453 -228.06564331]
[-71.43232727 -212.27999878]
[-63.23641205 -199.71707153]
[-55.04049683 -187.15415955]
[-40.45744324 -184.34877014]
[-31.96665573 -171.72494507]
[-35.00807190 -156.44790649]
[-26.81215668 -143.88499451]
[-18.61624146 -131.32206726]
[-12.34529305 -127.44715118]
[-10.39742470 -118.54939270]
[-2.36002278 -105.88446808]
[5.67737913 -93.21955109]
[13.71478081 -80.55463409]
[21.75218391 -67.88971710]
[29.78958511 -55.22479630]
[41.57539368 -63.26161575]
[59.16328430 -63.39626694]
[72.02618408 -71.11286163]
[84.88908386 -78.82945251]
[87.16727448 -94.30019379]
[98.89114380 -104.64837646]
[114.52504730 -104.98790741]
[126.68711853 -95.15846252]
[129.63481140 -79.80121613]
[121.97631073 -66.16738129]
[107.32772827 -60.69444275]
[92.60567474 -65.96655273]
[79.74277496 -58.24996185]
[66.87987518 -50.53336716]
[72.83709717 -36.76704788]
[87.26750946 -40.86132812]
[98.29782104 -52.99657822]
[114.26273346 -49.24775314]
[118.73890686 -33.47131729]
[107.12165070 -21.89672089]
[91.36179352 -26.43091393]
[76.93137360 -22.33663368]
[91.39099121 -26.32655716]
[105.59407043 -21.50239944]
[114.63242340 -9.53125954]
[115.38264465 5.44996786]
[107.58547211 18.26418304]
[93.93540192 24.48314667]
[79.14951324 21.95775604]
[68.33740997 11.56071663]
[65.23548889 -3.11539221]
[68.23113251 11.58243370]
[71.22678375 26.28026009]
[74.22243500 40.97808456]
[78.62656403 46.88938904]
[77.16216278 55.87937164]
[79.97287750 70.61367798]
[82.78359985 85.34799194]
[98.01990509 69.65988159]
[125.62780762 71.66950226]
[145.97152710 98.39391327]
[155.82031250 109.70767975]
[165.66909790 121.02145386]
[175.51788330 132.33522034]
[185.36666870 143.64898682]
[195.28634644 154.90066528]
[205.27651978 166.08978271]
[220.27139282 163.07298279]
[234.66795349 167.93467712]
[244.63185120 179.27429199]
[247.56239319 193.98034668]
[242.77073669 208.08374023]
[252.76091003 219.27285767]
[262.75109863 230.46197510]
[280.37707520 235.83197021]
[283.25415039 253.15441895]
[293.38415527 264.21710205]
[308.36257935 260.81979370]
[323.02819824 265.38214111]
[333.43603516 276.67697144]
[336.78637695 291.66598511]
[332.17807007 306.31723022]
[320.85067749 316.68957520]
[305.85125732 319.99295044]
[291.21450806 315.33874512]
[280.87771606 303.97891235]
[277.62136841 288.96917725]
[282.32144165 274.34710693]
[272.19146729 263.28442383]
[260.14001465 262.44500732]
[251.61004639 253.33363342]
[251.56196594 240.45214844]
[241.57179260 229.26303101]
[231.58161926 218.07391357]
[217.02755737 221.24330139]
[202.74618530 216.67181396]
[192.60350037 205.49182129]
[189.39762878 190.63856506]
[194.08740234 176.07995605]
[184.09722900 164.89083862]
[177.31533813 162.00195312]
[174.05290222 153.49778748]
[164.20411682 142.18400574]
[154.35533142 130.87023926]
[144.50654602 119.55646515]
[134.65774536 108.24269867]
[127.53952789 110.60509491]
[106.18486786 117.69229126]
[105.05496216 132.64967346]
[103.92506409 147.60705566]
[116.29991913 156.81936646]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 248]
[9 247]
[10 246]
[11 38]
[12 37]
[13 36]
[15 35]
[16 34]
[17 32]
[18 31]
[19 30]
[20 29]
[21 28]
[39 196]
[40 195]
[41 194]
[42 192]
[43 191]
[44 190]
[45 189]
[47 158]
[48 157]
[49 156]
[50 155]
[51 154]
[52 153]
[53 151]
[54 150]
[55 149]
[58 146]
[59 145]
[60 144]
[62 142]
[63 141]
[64 140]
[65 139]
[72 138]
[73 137]
[74 136]
[76 134]
[77 133]
[79 131]
[80 130]
[81 129]
[82 128]
[83 127]
[84 126]
[91 122]
[92 121]
[93 120]
[94 119]
[95 118]
[98 115]
[99 114]
[100 113]
[101 111]
[102 110]
[160 172]
[161 171]
[162 170]
[173 180]
[174 179]
[199 244]
[200 243]
[201 242]
[202 241]
[203 240]
[204 238]
[205 237]
[210 232]
[211 231]
[212 230]
[214 227]
[215 226]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
