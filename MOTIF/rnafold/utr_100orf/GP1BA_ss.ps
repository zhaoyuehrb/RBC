%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:06:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAGUCCUCCAUGGGGCUAGAAGAGAGAAGGACGGAGUCGAGUGGCACCCUAGAAGACGCUCUGUGCCUUCGGAGGUCUUUCUGCCUGCCUGUCCUCAUGCCUCUCCUCCUCUUGCUGCUCCUGCUGCCAAGCCCCUUACACCCCCACCCCAUCUGUGAGGUCUCCAAAGUGGCCAGCCACCUAGAAGUGAACUGUG\
) } def
/len { sequence length } bind def

/coor [
[29.54413033 192.05053711]
[16.97801781 183.85951233]
[7.15561962 172.52282715]
[0.83754641 158.91835022]
[-1.48695350 144.09954834]
[0.36212093 129.21395874]
[6.24158430 115.41425323]
[15.69615173 103.76903534]
[27.99369621 95.18006134]
[42.18194199 90.31243896]
[57.16219711 89.54309845]
[71.77445221 92.93161774]
[84.88329315 100.21265411]
[72.26448822 92.10304260]
[59.64568329 83.99343109]
[47.02688217 75.88381958]
[34.40807724 67.77420807]
[25.48643684 65.76374817]
[21.65481949 59.43448639]
[9.16627216 51.12568665]
[-3.61676550 52.89682770]
[-13.84969521 45.71059799]
[-16.35552025 33.86959457]
[-28.71066856 25.36369705]
[-41.06581879 16.85779953]
[-53.42096710 8.35190105]
[-65.77611542 -0.15399675]
[-81.53050995 -1.60648751]
[-87.62615204 -15.19664574]
[-99.98130035 -23.70254326]
[-112.33644867 -32.20844269]
[-124.69159698 -40.71434021]
[-140.44598389 -42.16683197]
[-146.54162598 -55.75698853]
[-158.89677429 -64.26288605]
[-167.75013733 -66.55539703]
[-171.37901306 -73.00304413]
[-183.59765625 -81.70389557]
[-201.95953369 -83.02348328]
[-208.63081360 -99.25005341]
[-220.98596191 -107.75595093]
[-233.34111023 -116.26184845]
[-254.76016235 -116.63971710]
[-262.86624146 -135.61401367]
[-275.61212158 -143.52239990]
[-288.35800171 -151.43078613]
[-301.10388184 -159.33915710]
[-313.78369141 -154.77745056]
[-326.58786011 -158.30337524]
[-334.89761353 -168.41246033]
[-335.84994507 -181.26869202]
[-348.46875000 -189.37829590]
[-361.08755493 -197.48791504]
[-373.70635986 -205.59751892]
[-386.32516479 -213.70713806]
[-399.00790405 -221.71638489]
[-411.75378418 -229.62477112]
[-424.49966431 -237.53314209]
[-433.45208740 -239.40180969]
[-437.38363647 -245.66947937]
[-450.00244141 -253.77908325]
[-462.62124634 -261.88870239]
[-475.24005127 -269.99832153]
[-487.85885620 -278.10791016]
[-503.24673462 -274.50399780]
[-516.63177490 -282.90740967]
[-520.07275391 -298.33251953]
[-511.52835083 -311.62796021]
[-496.06768799 -314.90570068]
[-482.86334229 -306.22116089]
[-479.74923706 -290.72671509]
[-467.13043213 -282.61712646]
[-454.51162720 -274.50750732]
[-441.89282227 -266.39788818]
[-429.27401733 -258.28826904]
[-416.59127808 -250.27902222]
[-403.84539795 -242.37065125]
[-391.09951782 -234.46226501]
[-383.75051880 -233.60617065]
[-378.21554565 -226.32594299]
[-365.59674072 -218.21632385]
[-352.97793579 -210.10671997]
[-340.35913086 -201.99710083]
[-327.74032593 -193.88748169]
[-311.48007202 -198.16314697]
[-296.86816406 -189.18336487]
[-293.19549561 -172.08503723]
[-280.44961548 -164.17666626]
[-267.70373535 -156.26828003]
[-254.95785522 -148.35989380]
[-246.74061584 -151.77163696]
[-237.73846436 -151.00170898]
[-229.98715210 -146.09703064]
[-225.29801941 -138.05371094]
[-224.83522034 -128.61700439]
[-212.48007202 -120.11109924]
[-200.12492371 -111.60520172]
[-188.16937256 -113.49028015]
[-177.80438232 -106.49588013]
[-174.89680481 -93.92253876]
[-162.67816162 -85.22167969]
[-150.39088440 -76.61803436]
[-138.03573608 -68.11213684]
[-123.16506195 -67.26804352]
[-116.18569946 -53.06948853]
[-103.83055115 -44.56359100]
[-91.47540283 -36.05769348]
[-79.12025452 -27.55179405]
[-64.24958038 -26.70770264]
[-57.27021790 -12.50914574]
[-44.91506958 -4.00324774]
[-32.55992126 4.50265026]
[-20.20477104 13.00854874]
[-7.84962273 21.51444626]
[9.68928146 21.95536804]
[17.47507286 38.63713837]
[29.96362114 46.94593811]
[42.51769257 55.15540314]
[55.13649368 63.26501465]
[67.75529480 71.37462616]
[80.37409973 79.48423767]
[92.99290466 87.59384918]
[104.65911865 79.28928375]
[123.05453491 83.74568939]
[138.00735474 84.93444061]
[152.96017456 86.12319183]
[167.91299438 87.31194305]
[182.87478638 88.38202667]
[197.84457397 89.33338928]
[212.81437683 90.28474426]
[227.81248474 90.52273560]
[242.80494690 90.04681396]
[252.19033813 81.18920135]
[264.69424438 81.10724640]
[273.60388184 89.29911804]
[288.60198975 89.06113434]
[303.60012817 88.82314301]
[318.59823608 88.58515167]
[333.59634399 88.34716034]
[348.59445190 88.10917664]
[363.59255981 87.87118530]
[369.52636719 73.84585571]
[380.65621948 63.45131683]
[395.05380249 58.48849106]
[410.22463989 59.81721497]
[423.54028320 67.20727539]
[432.69375610 79.37830353]
[436.09915161 94.22159576]
[433.16641235 109.16545868]
[424.40371704 121.62078094]
[411.32925415 129.42959595]
[396.20819092 131.23899841]
[381.66040039 126.73547363]
[370.20635986 116.69929504]
[363.83056641 102.86929321]
[348.83242798 103.10728455]
[333.83432007 103.34527588]
[318.83621216 103.58326721]
[303.83810425 103.82125092]
[288.83999634 104.05924225]
[273.84188843 104.29723358]
[259.29934692 114.11163330]
[243.28085327 105.03926849]
[228.28840637 105.51518250]
[238.40417480 116.59089661]
[237.87219238 131.58146667]
[226.99676514 141.91224670]
[211.99865723 141.67404175]
[201.45680237 131.00308228]
[201.40116882 116.00318146]
[211.86302185 105.25454712]
[196.89321899 104.30318451]
[181.92341614 103.35182953]
[175.04130554 106.06794739]
[166.72424316 102.26476288]
[151.77142334 101.07601166]
[136.81860352 99.88726044]
[121.86578369 98.69851685]
[113.26213837 110.98579407]
[119.49336243 124.63027191]
[125.72458649 138.27474976]
[140.61813354 143.56225586]
[147.33509827 157.86813354]
[141.89042664 172.70494080]
[127.51433563 179.27027893]
[112.73591614 173.66905212]
[106.32293701 159.22434998]
[112.08010864 144.50598145]
[105.84888458 130.86149597]
[99.61766052 117.21701813]
[104.96009064 131.23338318]
[106.23322296 146.17926025]
[103.33847046 160.89729309]
[96.49998474 174.24775696]
[86.24732971 185.19686890]
[73.37442017 192.89675903]
[58.87808609 196.75115967]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 122]
[14 121]
[15 120]
[16 119]
[17 118]
[19 117]
[20 116]
[23 114]
[24 113]
[25 112]
[26 111]
[27 110]
[29 108]
[30 107]
[31 106]
[32 105]
[34 103]
[35 102]
[37 101]
[38 100]
[40 97]
[41 96]
[42 95]
[44 90]
[45 89]
[46 88]
[47 87]
[51 84]
[52 83]
[53 82]
[54 81]
[55 80]
[56 78]
[57 77]
[58 76]
[60 75]
[61 74]
[62 73]
[63 72]
[64 71]
[124 178]
[125 177]
[126 176]
[127 175]
[128 173]
[129 172]
[130 171]
[131 164]
[132 163]
[135 161]
[136 160]
[137 159]
[138 158]
[139 157]
[140 156]
[141 155]
[179 190]
[180 189]
[181 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
