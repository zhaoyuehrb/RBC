%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:42:54 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR8D2)
} def

/sequence { (\
AUGGCUACUUCAAACCAUUCUUCAGGGGCUGAGUUUAUCCUGGCAGGCUUGACACAACGCCCAGAACUUCAACUGCCACUCUUCCUCCUGUUCCUUGGAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 18 0.190578891 ubox
2 12 0.297848523 ubox
2 17 0.233858119 ubox
2 78 0.008718890 ubox
3 9 0.063849173 ubox
3 10 0.024434983 ubox
3 11 0.330432995 ubox
3 16 0.246246888 ubox
3 20 0.004614378 ubox
3 40 0.010538711 ubox
3 77 0.010021796 ubox
3 94 0.008962296 ubox
4 8 0.068152168 ubox
4 9 0.025677761 ubox
4 10 0.274902384 ubox
4 15 0.245484256 ubox
4 19 0.003657650 ubox
4 29 0.003252222 ubox
4 39 0.010541408 ubox
4 76 0.010023584 ubox
4 93 0.008959090 ubox
5 28 0.003251566 ubox
5 75 0.009991056 ubox
5 98 0.005678230 ubox
6 37 0.005501136 ubox
6 97 0.005494418 ubox
7 34 0.009296006 ubox
7 36 0.005010919 ubox
7 96 0.005096966 ubox
8 33 0.009623896 ubox
8 98 0.003722032 ubox
9 32 0.007443750 ubox
9 33 0.007084072 ubox
9 97 0.003318218 ubox
9 99 0.039620792 ubox
9 100 0.026604975 ubox
10 31 0.004133934 ubox
10 32 0.010275256 ubox
10 98 0.039119323 ubox
10 99 0.037165584 ubox
11 31 0.012055594 ubox
11 97 0.039998147 ubox
11 98 0.025054568 ubox
12 19 0.003709107 ubox
12 30 0.012016472 ubox
12 96 0.039618587 ubox
13 18 0.003646931 ubox
13 92 0.003633720 ubox
13 95 0.035629580 ubox
13 96 0.005576392 ubox
14 91 0.004832970 ubox
14 95 0.006689538 ubox
15 26 0.007536190 ubox
15 27 0.011325712 ubox
15 90 0.003633606 ubox
15 98 0.954281090 ubox
16 25 0.007678703 ubox
16 26 0.011262403 ubox
16 97 0.958762398 ubox
17 91 0.008023970 ubox
17 96 0.945581729 ubox
18 25 0.003694411 ubox
18 66 0.004789354 ubox
18 99 0.032507080 ubox
18 100 0.098252754 ubox
19 24 0.003310893 ubox
19 65 0.005194270 ubox
19 98 0.037696503 ubox
19 99 0.157085717 ubox
20 64 0.005218371 ubox
20 97 0.039759183 ubox
20 98 0.161899126 ubox
21 63 0.005146327 ubox
21 66 0.004903275 ubox
21 97 0.157668553 ubox
21 98 0.012327287 ubox
21 99 0.178145970 ubox
21 100 0.019989876 ubox
22 65 0.005413024 ubox
22 97 0.022219871 ubox
22 98 0.188571501 ubox
22 99 0.027681022 ubox
23 42 0.003323874 ubox
23 64 0.005444873 ubox
23 90 0.965185344 ubox
23 97 0.194063043 ubox
23 98 0.026915606 ubox
24 41 0.003374910 ubox
24 89 0.966423440 ubox
24 95 0.183805212 ubox
24 96 0.172015095 ubox
25 40 0.003396899 ubox
25 85 0.003479409 ubox
25 86 0.004596842 ubox
25 87 0.080954127 ubox
25 88 0.963564561 ubox
25 94 0.207353916 ubox
25 95 0.146659251 ubox
26 39 0.003393642 ubox
26 62 0.007769707 ubox
26 84 0.003489553 ubox
26 85 0.009359447 ubox
26 86 0.112767217 ubox
26 87 0.960249988 ubox
26 88 0.003251540 ubox
26 93 0.207617093 ubox
26 94 0.146439628 ubox
27 61 0.007841183 ubox
27 77 0.006371552 ubox
27 83 0.003424687 ubox
27 84 0.011779870 ubox
27 85 0.900081722 ubox
27 86 0.352409931 ubox
27 87 0.003509006 ubox
27 92 0.207244952 ubox
27 93 0.146004093 ubox
28 60 0.007854773 ubox
28 76 0.006465096 ubox
28 83 0.012070858 ubox
28 84 0.903237730 ubox
28 85 0.341329233 ubox
28 86 0.003181867 ubox
28 91 0.229391327 ubox
28 92 0.106551459 ubox
29 59 0.007845647 ubox
29 75 0.006478657 ubox
29 90 0.249520744 ubox
30 56 0.006766344 ubox
30 71 0.006040089 ubox
30 90 0.014760467 ubox
31 39 0.011246045 ubox
31 55 0.007286694 ubox
31 70 0.006116076 ubox
31 81 0.965236229 ubox
31 83 0.043104299 ubox
31 84 0.021797238 ubox
31 87 0.250821314 ubox
32 38 0.011200386 ubox
32 41 0.005245236 ubox
32 68 0.005159429 ubox
32 69 0.004546118 ubox
32 80 0.965443382 ubox
32 82 0.045322564 ubox
32 83 0.021118551 ubox
32 86 0.250972525 ubox
32 89 0.007269892 ubox
33 40 0.007427053 ubox
33 44 0.003398047 ubox
33 53 0.007616383 ubox
33 67 0.006676569 ubox
33 73 0.003435243 ubox
33 79 0.965093418 ubox
33 81 0.045696525 ubox
33 82 0.018006683 ubox
33 85 0.249925960 ubox
33 88 0.007533575 ubox
34 43 0.003544380 ubox
34 52 0.007590862 ubox
34 66 0.006724071 ubox
34 72 0.003571256 ubox
34 78 0.706860137 ubox
35 42 0.004415828 ubox
35 51 0.007453701 ubox
35 65 0.006585104 ubox
35 66 0.004342874 ubox
35 71 0.003775023 ubox
35 72 0.004490621 ubox
36 42 0.003565995 ubox
36 65 0.004199476 ubox
36 71 0.004202644 ubox
36 75 0.005442018 ubox
37 41 0.009254303 ubox
37 74 0.005466819 ubox
38 65 0.008021839 ubox
39 47 0.008157915 ubox
39 64 0.006517966 ubox
40 46 0.008204141 ubox
40 64 0.023322696 ubox
41 45 0.007434071 ubox
41 63 0.024076581 ubox
41 71 0.012913267 ubox
41 78 0.696995338 ubox
42 61 0.009499798 ubox
42 62 0.023866156 ubox
42 68 0.006484965 ubox
42 70 0.013366902 ubox
42 77 0.998750144 ubox
43 60 0.010075723 ubox
43 61 0.016984691 ubox
43 67 0.006717398 ubox
43 69 0.012676831 ubox
43 76 0.999008283 ubox
44 59 0.010588329 ubox
44 75 0.998798006 ubox
45 68 0.014693184 ubox
45 69 0.005249793 ubox
45 74 0.991006373 ubox
46 61 0.479675072 ubox
46 62 0.038738841 ubox
46 67 0.017486376 ubox
46 68 0.010169201 ubox
46 70 0.005251967 ubox
46 73 0.863291503 ubox
46 74 0.060732016 ubox
46 77 0.013032784 ubox
47 60 0.559211176 ubox
47 61 0.033574225 ubox
47 67 0.022988546 ubox
47 68 0.009752339 ubox
47 69 0.007050375 ubox
47 73 0.123245125 ubox
47 76 0.013040966 ubox
48 59 0.559851105 ubox
48 64 0.015959261 ubox
48 75 0.013009935 ubox
49 57 0.506942297 ubox
49 63 0.013529604 ubox
49 64 0.060403410 ubox
49 65 0.015355019 ubox
49 66 0.020801881 ubox
49 72 0.594993794 ubox
50 56 0.513050443 ubox
50 59 0.028249989 ubox
50 63 0.069657641 ubox
50 64 0.014609549 ubox
50 65 0.021577539 ubox
50 71 0.692855932 ubox
51 55 0.505497453 ubox
51 58 0.054337416 ubox
51 62 0.070976575 ubox
51 69 0.046995958 ubox
51 70 0.703867880 ubox
52 68 0.056057321 ubox
52 69 0.657741849 ubox
56 69 0.012616627 ubox
57 68 0.026276637 ubox
62 75 0.034283182 ubox
63 69 0.021699712 ubox
63 74 0.064017634 ubox
64 68 0.020424167 ubox
64 70 0.217245077 ubox
64 73 0.078516216 ubox
65 69 0.189259036 ubox
82 100 0.005567777 ubox
83 99 0.007881951 ubox
84 98 0.008087889 ubox
85 97 0.008085943 ubox
86 99 0.015156042 ubox
87 98 0.016642374 ubox
88 97 0.016727896 ubox
91 99 0.015913601 ubox
91 100 0.027091798 ubox
92 98 0.017114560 ubox
92 99 0.036807547 ubox
93 97 0.017081022 ubox
93 98 0.037534756 ubox
15 98 0.9500000 lbox
16 97 0.9500000 lbox
17 96 0.9500000 lbox
23 90 0.9500000 lbox
24 89 0.9500000 lbox
25 88 0.9500000 lbox
26 87 0.9500000 lbox
27 85 0.9500000 lbox
28 84 0.9500000 lbox
31 81 0.9500000 lbox
32 80 0.9500000 lbox
33 79 0.9500000 lbox
34 78 0.9500000 lbox
42 77 0.9500000 lbox
43 76 0.9500000 lbox
44 75 0.9500000 lbox
45 74 0.9500000 lbox
46 73 0.9500000 lbox
49 72 0.9500000 lbox
50 71 0.9500000 lbox
51 70 0.9500000 lbox
52 69 0.9500000 lbox
showpage
end
%%EOF
