%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:37:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGAGUUCAGUCAUACUGCACCAGCUGAGCAAUGCAUGGAGUGGACCUGUAGGCGACUUGCAUCGUCUUCAACAUGAAGAUAGCCACAGUGUCAGUGCUUCUGCCCUUGGCUCUUUGCCUCAUACAAGAUGCUGCCAGUAAGAAUGAAGAUCAGGAAAUGUGCCAUGAAUUUC\
) } def
/len { sequence length } bind def

/coor [
[210.36064148 425.72662354]
[205.57112122 411.51181030]
[200.65347290 397.34082031]
[195.60809326 383.21481323]
[181.64202881 372.61297607]
[185.05360413 354.53387451]
[179.75401306 340.50125122]
[174.45443726 326.46862793]
[169.15484619 312.43603516]
[157.41992188 303.26318359]
[159.78253174 287.61938477]
[154.48295593 273.58676147]
[142.74801636 264.41394043]
[145.11064148 248.77014160]
[139.81105042 234.73751831]
[134.51145935 220.70491028]
[129.21188354 206.67228699]
[123.91228485 192.63966370]
[114.22148132 189.26828003]
[107.86771393 180.93338013]
[107.15455627 170.25665283]
[112.56092834 160.76828003]
[107.77140808 146.55348206]
[102.98188019 132.33868408]
[98.19235992 118.12388611]
[78.87344360 103.54020691]
[89.70029449 77.62867737]
[81.05971527 65.36734009]
[72.41912842 53.10600662]
[63.77854919 40.84467316]
[45.67791748 41.13941956]
[31.13534546 30.62369347]
[25.83762932 13.64142132]
[31.71719551 -2.98204613]
[22.63958359 -14.92344189]
[13.56196976 -26.86483765]
[5.84945679 -31.82500267]
[4.43058443 -39.10476685]
[-4.42995787 -51.20810318]
[-13.29049969 -63.31144333]
[-22.15104103 -75.41477966]
[-31.01158333 -87.51811981]
[-49.79638290 -94.76936340]
[-51.13427734 -114.03906250]
[-60.42600250 -125.81462860]
[-69.71772766 -137.59017944]
[-79.11537933 -149.28138733]
[-88.61818695 -160.88726807]
[-98.12099457 -172.49316406]
[-107.62380219 -184.09904480]
[-115.51036072 -188.77754211]
[-117.19113159 -196.00132751]
[-126.48285675 -207.77690125]
[-135.77458191 -219.55245972]
[-136.46041870 -204.56814575]
[-144.26942444 -191.76113892]
[-157.27607727 -184.28939819]
[-172.27319336 -183.99528503]
[-185.56278992 -190.95133972]
[-193.86791992 -203.44232178]
[-195.14071655 -218.38822937]
[-189.06732178 -232.10369873]
[-177.14532471 -241.20675659]
[-162.31443787 -243.45280457]
[-148.23265076 -238.28868103]
[-155.49690247 -251.41235352]
[-162.76115417 -264.53604126]
[-170.02539062 -277.65969849]
[-177.28964233 -290.78335571]
[-184.55389404 -303.90704346]
[-191.81814575 -317.03070068]
[-204.77877808 -327.96038818]
[-197.86407471 -343.44018555]
[-181.07508850 -341.08093262]
[-178.69447327 -324.29495239]
[-171.43022156 -311.17129517]
[-164.16596985 -298.04760742]
[-156.90173340 -284.92395020]
[-149.63748169 -271.80026245]
[-142.37322998 -258.67660522]
[-135.10899353 -245.55293274]
[-126.08413696 -240.36753845]
[-123.99901581 -228.84417725]
[-114.70729065 -217.06861877]
[-105.41556549 -205.29306030]
[-96.01791382 -193.60185242]
[-86.51510620 -181.99597168]
[-77.01229858 -170.39007568]
[-67.50949097 -158.78419495]
[-60.81590271 -155.58982849]
[-57.94216919 -146.88191223]
[-48.65044403 -135.10635376]
[-39.35871887 -123.33078766]
[-29.10219383 -123.04495239]
[-20.52706718 -117.01931763]
[-16.62136841 -107.05706024]
[-18.90824509 -96.37866211]
[-10.04770279 -84.27532196]
[-1.18716133 -72.17198181]
[7.67338037 -60.06864548]
[16.53392220 -47.96530914]
[25.50336647 -35.94245148]
[34.58097839 -24.00105476]
[43.65859222 -12.05965900]
[55.66156769 -14.12072086]
[67.46797943 -10.85047531]
[76.80960083 -2.81325197]
[81.86456299 8.50476933]
[81.61250305 20.97010612]
[76.03988647 32.20409012]
[84.68046570 44.46542358]
[93.32104492 56.72676086]
[101.96163177 68.98809814]
[116.26058197 73.52020264]
[130.38659668 68.47482300]
[144.51260376 63.42944336]
[158.63861084 58.38406754]
[163.90530396 43.66007614]
[177.43025208 35.81088257]
[192.82739258 38.54263687]
[202.82664490 50.56548691]
[202.70668030 66.20260620]
[192.52415466 78.07063293]
[177.08692932 80.56584167]
[163.68399048 72.51007843]
[149.55798340 77.55545807]
[135.43197632 82.60083008]
[121.30596161 87.64620972]
[122.42444611 98.28112030]
[118.95665741 107.40606689]
[112.40715790 113.33435822]
[117.19667816 127.54915619]
[121.98620605 141.76396179]
[126.77572632 155.97875977]
[142.49169922 168.56674194]
[137.94490051 187.34007263]
[143.24449158 201.37269592]
[148.54408264 215.40531921]
[153.84367371 229.43792725]
[159.14326477 243.47055054]
[171.25724792 253.64707947]
[168.51556396 268.28717041]
[173.81515503 282.31979370]
[185.92913818 292.49633789]
[183.18745422 307.13644409]
[188.48704529 321.16903687]
[193.78663635 335.20166016]
[199.08622742 349.23428345]
[210.51570129 355.26034546]
[214.63029480 367.08438110]
[209.73410034 378.16943359]
[214.77947998 392.29544067]
[220.63287354 399.35406494]
[219.78591919 406.72229004]
[224.57543945 420.93707275]
[239.68592834 420.53143311]
[254.24421692 424.59930420]
[266.95581055 432.77899170]
[276.69036865 444.34313965]
[282.58233643 458.26348877]
[284.10778809 473.30224609]
[281.13107300 488.12219238]
[273.91687012 501.40551758]
[263.10671997 511.97109985]
[249.66177368 518.87945557]
[234.77760315 521.51629639]
[219.77769470 519.64715576]
[205.99578857 513.43823242]
[194.65740967 503.44158936]
[186.77073669 490.54617310]
[183.03704834 475.89862061]
[183.78834534 460.80136108]
[188.95780945 446.59686279]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 155]
[2 154]
[3 152]
[4 151]
[6 148]
[7 147]
[8 146]
[9 145]
[11 143]
[12 142]
[14 140]
[15 139]
[16 138]
[17 137]
[18 136]
[22 134]
[23 133]
[24 132]
[25 131]
[27 113]
[28 112]
[29 111]
[30 110]
[34 104]
[35 103]
[36 102]
[38 101]
[39 100]
[40 99]
[41 98]
[42 97]
[44 93]
[45 92]
[46 91]
[47 89]
[48 88]
[49 87]
[50 86]
[52 85]
[53 84]
[54 83]
[65 81]
[66 80]
[67 79]
[68 78]
[69 77]
[70 76]
[71 75]
[114 128]
[115 127]
[116 126]
[117 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
