%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:08:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGAUCACUUCCCUUGCAGACUUUGGAAGGGAGAGCACUUUAUUACAGACCUUGGAAGCAAGAGGAUUGCAUUCAGCCUAGUUCCUGGUUGCUGGCCAAAGGGAUCAUGGACAUUGAAGCAUAUUUUGAAAGAAUUGGCUAUAAGAACUCUAGGAACAAAUUGGACUUGGAAACAUUAACUGACAUUCUUGAGCACCAGAUCCGGG\
) } def
/len { sequence length } bind def

/coor [
[94.66925812 221.05531311]
[94.21620941 206.06216431]
[90.87127686 199.46978760]
[93.87126923 190.83950806]
[93.64472198 175.84123230]
[93.41817474 160.84294128]
[93.19162750 145.84465027]
[78.87683868 145.24972534]
[64.46179962 140.02719116]
[51.46902847 130.11761475]
[42.21824646 141.92536926]
[32.96746445 153.73312378]
[23.71668053 165.54086304]
[14.46589661 177.34861755]
[5.21511364 189.15637207]
[-4.03566933 200.96412659]
[-6.45582104 216.59913635]
[-20.39564514 221.84608459]
[-29.64642715 233.65383911]
[-29.14782143 249.68914795]
[-41.46665192 259.96658325]
[-57.15296555 256.60220337]
[-64.17356873 242.17686462]
[-57.14285278 227.75643921]
[-41.45418167 224.40306091]
[-32.20339584 212.59530640]
[-30.44492340 197.80487061]
[-15.84342194 191.71334839]
[-6.59263849 179.90559387]
[2.65814447 168.09783936]
[11.90892792 156.29008484]
[21.15970993 144.48233032]
[30.41049385 132.67457581]
[39.66127777 120.86682892]
[36.94885635 113.87448883]
[23.16959381 119.80170441]
[9.39033031 125.72891998]
[-4.38893366 131.65614319]
[-18.16819763 137.58335876]
[-31.94746208 143.51057434]
[-45.72672653 149.43778992]
[-58.90936279 156.59446716]
[-70.98810577 147.70042419]
[-68.06734467 132.98753357]
[-53.50664139 129.38195801]
[-39.33486557 124.46660614]
[-25.16308784 119.55124664]
[-10.99131012 114.63588715]
[3.18046641 109.72053528]
[17.35224342 104.80517578]
[31.52401924 99.88981628]
[28.81160164 92.89747620]
[14.01814842 90.41680145]
[-0.77530342 87.93611908]
[-15.56875610 85.45543671]
[-30.73362160 91.69714355]
[-43.55456161 81.47190857]
[-40.84249496 65.29857635]
[-25.38735962 59.81488419]
[-13.08807659 70.66198730]
[1.70537615 73.14266968]
[16.49882889 75.62334442]
[31.29228020 78.10402679]
[41.49091721 67.10458374]
[37.90118027 52.54045486]
[34.31144714 37.97632599]
[30.72171211 23.41219902]
[27.13197708 8.84807110]
[23.43235779 -5.68853188]
[19.62306786 -20.19678116]
[15.81377602 -34.70503235]
[10.60646248 -42.21273041]
[12.05827999 -49.46118927]
[8.46854496 -64.02531433]
[4.87881041 -78.58944702]
[1.28907526 -93.15357208]
[-2.30065966 -107.71769714]
[-10.95112610 -111.48004913]
[-16.81257629 -118.69477081]
[-18.66778374 -127.66294098]
[-16.22429085 -136.34614563]
[-10.15234756 -142.82974243]
[-13.07870197 -157.54151917]
[-16.00505638 -172.25329590]
[-18.93141174 -186.96507263]
[-29.21232224 -198.99060059]
[-24.10665894 -212.98280334]
[-27.03301430 -227.69458008]
[-29.95936966 -242.40635681]
[-32.88572311 -257.11813354]
[-35.81208038 -271.82992554]
[-46.09299088 -283.85543823]
[-40.98732758 -297.84765625]
[-43.91368103 -312.55941772]
[-57.19205856 -321.13031006]
[-60.43903351 -336.59747314]
[-51.72822952 -349.78448486]
[-36.22761536 -352.86773682]
[-23.13343048 -344.01800537]
[-20.21422005 -328.48565674]
[-29.20190239 -315.48577881]
[-26.27554703 -300.77398682]
[-16.20394897 -289.80075073]
[-21.10029984 -274.75628662]
[-18.17394447 -260.04449463]
[-15.24759007 -245.33271790]
[-12.32123470 -230.62094116]
[-9.39488029 -215.90914917]
[0.67671752 -204.93591309]
[-4.21963263 -189.89143372]
[-1.29327786 -175.17964172]
[1.63307703 -160.46786499]
[4.55943203 -145.75608826]
[19.46953964 -131.48715210]
[12.26346779 -111.30743408]
[15.85320282 -96.74330902]
[19.44293785 -82.17917633]
[23.03267288 -67.61505127]
[26.62240791 -53.05092621]
[30.32202530 -38.51432037]
[34.13131714 -24.00607300]
[37.94060898 -9.49782276]
[42.68087006 -3.82527089]
[41.69610596 5.25833607]
[45.28583908 19.82246399]
[48.87557220 34.38658905]
[52.46530914 48.95071793]
[56.05504227 63.51484680]
[66.48183441 54.96691513]
[78.42852783 49.23431015]
[91.16681671 46.54522705]
[103.94772339 46.94601822]
[116.04557037 50.30455017]
[126.79914856 56.32381821]
[135.64785767 64.56475067]
[142.16067505 74.47663116]
[146.05673218 85.43293762]
[147.21615601 96.77054596]
[145.68130493 107.82965088]
[159.86080933 112.72269440]
[174.04029846 117.61573792]
[183.17576599 117.45706940]
[188.39604187 122.69123840]
[202.50003052 127.79788208]
[216.60400391 132.90452576]
[230.70797729 138.01115417]
[244.81196594 143.11779785]
[258.91595459 148.22444153]
[270.15170288 146.55970764]
[277.87118530 153.04861450]
[292.70040894 155.30558777]
[307.52963257 157.56254578]
[322.35885620 159.81951904]
[337.18811035 162.07649231]
[352.01733398 164.33345032]
[364.66296387 155.23806763]
[379.66973877 157.73820496]
[388.26287842 169.84992981]
[403.09210205 172.10688782]
[419.66067505 168.51261902]
[427.70111084 183.43869019]
[415.58419800 195.29685974]
[400.83514404 186.93612671]
[386.00592041 184.67915344]
[374.19860840 193.68598938]
[359.12750244 191.60835266]
[349.76037598 179.16268921]
[334.93112183 176.90571594]
[320.10189819 174.64874268]
[305.27267456 172.39178467]
[290.44345093 170.13481140]
[275.61419678 167.87785339]
[286.82077026 177.84844971]
[293.52255249 191.26806641]
[294.76080322 206.21687317]
[290.35833740 220.55625916]
[280.94500732 232.23484802]
[267.86749268 239.58186340]
[252.99668884 241.54623413]
[238.46000671 237.84695435]
[226.33708191 229.01321411]
[218.36225891 216.30880737]
[215.67640686 201.55122375]
[218.66375732 186.85171509]
[226.89697266 174.31318665]
[239.19816589 165.72944641]
[253.80929565 162.32841492]
[239.70532227 157.22178650]
[225.60134888 152.11514282]
[211.49736023 147.00849915]
[197.39338684 141.90185547]
[183.28939819 136.79521179]
[169.14726257 131.79524231]
[154.96777344 126.90219116]
[140.78826904 122.00915527]
[136.19862366 128.94383240]
[130.44360352 134.94670105]
[123.70851135 139.82452393]
[116.21014404 143.42024231]
[108.18991852 145.61810303]
[108.41646576 160.61639404]
[108.64301300 175.61466980]
[108.86956024 190.61296082]
[109.20936584 205.60911560]
[109.66241455 220.60227966]
[116.18438721 236.25155640]
[102.95213318 246.85079956]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 205]
[2 204]
[4 203]
[5 202]
[6 201]
[7 200]
[10 34]
[11 33]
[12 32]
[13 31]
[14 30]
[15 29]
[16 28]
[18 26]
[19 25]
[52 63]
[53 62]
[54 61]
[55 60]
[64 128]
[65 127]
[66 126]
[67 125]
[68 124]
[69 122]
[70 121]
[71 120]
[73 119]
[74 118]
[75 117]
[76 116]
[77 115]
[82 113]
[83 112]
[84 111]
[85 110]
[87 108]
[88 107]
[89 106]
[90 105]
[91 104]
[93 102]
[94 101]
[139 195]
[140 194]
[141 193]
[143 192]
[144 191]
[145 190]
[146 189]
[147 188]
[148 187]
[150 172]
[151 171]
[152 170]
[153 169]
[154 168]
[155 167]
[158 164]
[159 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
