%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:43:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUGUGGGCAGCCGGCCGUGCGCCUGCGCGGUGGCCCUUCCAUCCCGGCAGUCGUGGCUGCAGCGCUGAGGCGAGAGGUUGGUGGGUGUCUCCGGCCAUAAUGACCCAGGCUGAGAAGGGUGAUACGGAGAACGGAAAGGAGAAGGGCGGCGAGAAGGAGAAGGAGCAGCGCGGCGUGAAGCGGCCCAUCGUGCCCGCGC\
) } def
/len { sequence length } bind def

/coor [
[162.21890259 740.12524414]
[148.02148438 732.65447998]
[145.15211487 716.87011719]
[155.81190491 704.88061523]
[156.27841187 689.88781738]
[156.74490356 674.89508057]
[157.21139526 659.90234375]
[157.67790222 644.90960693]
[158.14439392 629.91687012]
[158.61090088 614.92413330]
[159.07739258 599.93139648]
[144.63465881 589.77862549]
[139.12390137 572.84124756]
[144.92890930 555.83624268]
[159.90599060 545.62701416]
[159.90599060 530.62701416]
[159.90599060 515.62701416]
[159.90599060 500.62704468]
[159.90599060 485.62704468]
[159.90599060 470.62704468]
[159.55609131 455.63113403]
[158.85649109 440.64746094]
[158.15687561 425.66375732]
[157.45727539 410.68008423]
[156.75765991 395.69641113]
[153.30291748 389.15673828]
[156.16552734 380.47463989]
[155.69903564 365.48190308]
[155.23252869 350.48916626]
[154.76603699 335.49639893]
[149.46214294 327.49554443]
[151.85751343 316.94601440]
[147.71298218 302.52993774]
[136.76031494 292.43597412]
[140.38340759 277.03518677]
[136.23887634 262.61911011]
[132.09434509 248.20306396]
[127.94982147 233.78698730]
[123.80529785 219.37092590]
[119.66077423 204.95486450]
[115.51624298 190.53880310]
[111.83927155 187.48072815]
[110.04862976 182.07754517]
[111.47449493 175.60968018]
[107.78031158 161.07170105]
[104.08612823 146.53370667]
[78.55636597 149.31881714]
[52.04245377 137.44601440]
[33.01336670 111.16860962]
[18.19441032 108.84513855]
[3.37545323 106.52166748]
[-11.44350338 104.19818878]
[-26.26246071 101.87471771]
[-41.36019897 108.27708435]
[-54.28898239 98.18854523]
[-51.74878693 81.98732758]
[-36.35274506 76.33985138]
[-23.93898773 87.05576324]
[-9.12003040 89.37923431]
[5.69892597 91.70270538]
[20.51788330 94.02617645]
[35.33683777 96.34965515]
[38.07172394 89.36607361]
[43.54150009 75.39891052]
[46.27638626 68.41532898]
[33.82056427 60.05754852]
[21.36474609 51.69976425]
[4.97529602 51.13585281]
[-2.49117851 36.53503799]
[6.64619064 22.91738510]
[22.98766136 24.29156494]
[29.72253036 39.24394226]
[42.17834854 47.60172653]
[54.63417053 55.95951080]
[60.55460739 51.35533905]
[51.34626389 39.51446152]
[42.13809967 27.67344093]
[53.97926331 18.46546173]
[63.18714142 30.30611610]
[72.39548492 42.14699173]
[78.31592560 37.54281998]
[73.28317261 23.41230583]
[68.25041962 9.28179264]
[63.21767426 -4.84872150]
[51.29868317 -15.25296307]
[54.31727219 -29.83848190]
[49.28452301 -43.96899796]
[35.46678162 -52.12065506]
[33.36754608 -68.02577209]
[44.59717560 -79.48330688]
[60.54125214 -77.70401001]
[68.96884918 -64.05281830]
[63.41503525 -49.00174713]
[68.44778442 -34.87123108]
[80.00679779 -25.47769928]
[77.34819031 -9.88147163]
[82.38093567 4.24904251]
[87.41368866 18.37955666]
[92.44643402 32.51007080]
[100.09415436 39.15493774]
[106.14704132 46.57351303]
[110.53833008 54.49146652]
[116.22466278 40.61106110]
[114.29635620 24.90780640]
[126.28090668 16.06361198]
[131.96723938 2.18320584]
[137.65356445 -11.69720078]
[143.33988953 -25.57760811]
[133.87933350 -37.67693329]
[131.75181580 -52.88776016]
[137.52961731 -67.11845398]
[149.65853882 -76.54102325]
[164.87596130 -78.62085724]
[179.08847046 -72.79847717]
[188.47297668 -60.64007950]
[190.50509644 -45.41621780]
[184.63819885 -31.22202492]
[172.45045471 -21.87567329]
[157.22029114 -19.89128113]
[151.53396606 -6.01087523]
[145.84764099 7.86953163]
[140.16131592 21.74993896]
[142.49633789 36.46037292]
[130.10507202 46.29738617]
[124.41873932 60.17779541]
[128.67648315 63.12532043]
[132.58181763 66.52600861]
[144.63427734 57.59637833]
[148.40869141 42.00364685]
[163.01312256 35.36359406]
[177.24429321 42.76990128]
[180.18527222 58.54108429]
[169.57998657 70.57884216]
[153.56390381 69.64883423]
[141.51145935 78.57846832]
[146.19535828 93.06661224]
[145.97102356 108.29142761]
[140.86228943 122.63528442]
[131.41195679 134.57415771]
[118.62411499 142.83952332]
[122.31829834 157.37751770]
[126.01248169 171.91549683]
[129.93231201 186.39427185]
[134.07684326 200.81033325]
[138.22135925 215.22640991]
[142.36589050 229.64247131]
[146.51040649 244.05853271]
[150.65493774 258.47460938]
[154.79946899 272.89065552]
[166.04856873 284.01577759]
[162.12904358 298.38540649]
[166.27357483 312.80148315]
[169.96154785 298.26193237]
[178.06221008 285.63735962]
[189.74249268 276.22616577]
[203.80117798 270.99612427]
[218.79248047 270.48513794]
[233.17466736 274.74575806]
[245.46865845 283.33978271]
[254.41015625 295.38345337]
[259.07958984 309.63815308]
[258.99676514 324.63790894]
[254.17019653 338.84017944]
[245.09625244 350.78436279]
[232.70809937 359.24212646]
[218.27973938 363.34362793]
[203.29501343 362.66714478]
[189.29493713 357.28216553]
[177.71928406 347.74255371]
[169.75877380 335.02990723]
[170.22528076 350.02267456]
[170.69177246 365.01541138]
[171.15827942 380.00814819]
[171.74134827 394.99682617]
[172.44094849 409.98049927]
[173.14054871 424.96417236]
[173.84016418 439.94784546]
[174.53976440 454.93151855]
[177.36763000 459.33621216]
[178.14082336 463.92593384]
[177.13395691 467.88537598]
[174.90599060 470.62704468]
[174.90599060 485.62704468]
[174.90599060 500.62704468]
[174.90599060 515.62701416]
[174.90599060 530.62701416]
[174.90599060 545.62701416]
[185.90650940 551.58215332]
[193.28611755 561.59289551]
[195.69232178 573.72106934]
[192.72827148 585.65075684]
[185.01666260 595.13037109]
[174.07014465 600.39788818]
[173.60363770 615.39062500]
[173.13714600 630.38336182]
[172.67063904 645.37609863]
[172.20414734 660.36883545]
[171.73765564 675.36157227]
[171.27114868 690.35437012]
[170.80465698 705.34710693]
[180.69844055 717.97613525]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 200]
[5 199]
[6 198]
[7 197]
[8 196]
[9 195]
[10 194]
[11 193]
[15 187]
[16 186]
[17 185]
[18 184]
[19 183]
[20 182]
[21 178]
[22 177]
[23 176]
[24 175]
[25 174]
[27 173]
[28 172]
[29 171]
[30 170]
[32 152]
[33 151]
[35 149]
[36 148]
[37 147]
[38 146]
[39 145]
[40 144]
[41 143]
[44 142]
[45 141]
[46 140]
[49 62]
[50 61]
[51 60]
[52 59]
[53 58]
[65 74]
[66 73]
[67 72]
[81 99]
[82 98]
[83 97]
[84 96]
[86 94]
[87 93]
[102 125]
[103 124]
[105 122]
[106 121]
[107 120]
[108 119]
[127 135]
[128 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
