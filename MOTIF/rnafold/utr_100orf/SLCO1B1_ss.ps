%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:20:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGGGUGGACUUGUUGCAGUUGCUGUAGGAUUCUAAAUCCAGGUGAUUGUUUCAAACUGAGCAUCAACAACAAAAACAUUUGUAUGAUAUCUAUAUUUCAAUCAUGGACCAAAAUCAACAUUUGAAUAAAACAGCAGAGGCACAACCUUCAGAGAAUAAGAAAACAAGAUACUGCAAUGGAUUGAAGAUGUUCUUGGCAGCUC\
) } def
/len { sequence length } bind def

/coor [
[272.56057739 361.11428833]
[274.39266968 338.29769897]
[284.53524780 317.74966431]
[273.80743408 307.26568604]
[263.07965088 296.78167725]
[252.35183716 286.29769897]
[241.62402344 275.81369019]
[239.15641785 290.60931396]
[226.12741089 298.04202271]
[212.13539124 292.63616943]
[207.48815918 278.37423706]
[215.60931396 265.76284790]
[230.51521301 264.09246826]
[220.62142944 252.81802368]
[210.72763062 241.54359436]
[203.94970703 238.58815002]
[200.77023315 230.01972961]
[191.05038452 218.59500122]
[176.22955322 217.65765381]
[166.20948792 206.20982361]
[167.29315186 190.67073059]
[157.57330322 179.24600220]
[147.85345459 167.82127380]
[138.13360596 156.39653015]
[128.41374207 144.97180176]
[118.69389343 133.54707336]
[108.97403717 122.12234497]
[94.31967926 123.18762207]
[81.81697845 115.46962738]
[76.20183563 101.89187622]
[79.60123444 87.59750366]
[69.88137817 76.17277527]
[60.16152573 64.74804688]
[50.44166946 53.32331467]
[42.49335098 48.81210327]
[40.66203690 41.64822769]
[31.11839867 30.07588959]
[21.57476234 18.50355339]
[11.00887394 7.85639286]
[-0.48999718 -1.77563512]
[-11.98886871 -11.40766239]
[-23.48773956 -21.03969002]
[-29.93037987 -22.55811501]
[-34.02183914 -26.51096916]
[-35.18551636 -31.14737129]
[-46.38381195 -41.12725830]
[-57.58211136 -51.10714340]
[-68.78041077 -61.08702850]
[-79.97870636 -71.06691742]
[-91.17700958 -81.04679871]
[-102.87297058 -74.05878448]
[-116.04758453 -70.65299988]
[-129.63125610 -71.09618378]
[-142.52392578 -75.34294891]
[-153.68415833 -83.04028320]
[-162.21325684 -93.55685425]
[-167.42768860 -106.03478241]
[-168.91378784 -119.45960236]
[-166.56056213 -132.74278259]
[-160.56800842 -144.80993652]
[-171.45521545 -155.12831116]
[-184.34913635 -155.56396484]
[-193.20501709 -164.38629150]
[-193.65849304 -176.47732544]
[-204.38629150 -186.96131897]
[-215.11410522 -197.44531250]
[-225.84190369 -207.92930603]
[-236.69877625 -207.17597961]
[-245.98547363 -212.41659546]
[-250.75209045 -221.70909119]
[-249.63838196 -231.87232971]
[-260.03985596 -242.68014526]
[-270.44134521 -253.48797607]
[-280.84283447 -264.29580688]
[-291.24432373 -275.10360718]
[-307.14193726 -279.12832642]
[-311.34426880 -294.97991943]
[-299.52832031 -306.35159302]
[-283.84933472 -301.54519653]
[-280.43649292 -285.50509644]
[-270.03500366 -274.69729614]
[-259.63351440 -263.88946533]
[-249.23204041 -253.08163452]
[-238.83055115 -242.27381897]
[-219.91177368 -238.29125977]
[-215.35791016 -218.65711975]
[-204.63011169 -208.17312622]
[-193.90229797 -197.68913269]
[-183.17448425 -187.20513916]
[-165.96440125 -183.78332520]
[-161.13684082 -166.01551819]
[-150.24963379 -155.69714355]
[-135.67549133 -163.33607483]
[-119.34159851 -165.52893066]
[-103.21859741 -161.99342346]
[-89.25772858 -153.13941956]
[-79.15473175 -140.02157593]
[-74.14385986 -124.21366119]
[-74.84712219 -107.61980438]
[-81.19712067 -92.24509430]
[-69.99882507 -82.26521301]
[-58.80052567 -72.28532410]
[-47.60222626 -62.30544281]
[-36.40392685 -52.32555389]
[-25.20562935 -42.34566879]
[-13.85571194 -32.53856277]
[-2.35684085 -22.90653419]
[9.14203072 -13.27450657]
[20.64090157 -3.64247870]
[16.24892616 -17.98509216]
[18.42691994 -32.82612610]
[26.75464439 -45.30206299]
[39.62530136 -53.00571442]
[54.55553818 -54.45068741]
[68.66462708 -49.35818481]
[79.23027039 -38.71078110]
[84.21386719 -24.56285858]
[82.65384674 -9.64420033]
[74.85121918 3.16669035]
[62.31145859 11.39800072]
[47.45407486 13.46152973]
[33.14709854 8.95991611]
[42.69073486 20.53225327]
[52.23437119 32.10459137]
[61.86640167 43.60346222]
[71.58625031 55.02819061]
[81.30610657 66.45291901]
[91.02596283 77.87765503]
[105.68032074 76.81237793]
[118.18302155 84.53037262]
[123.79816437 98.10812378]
[120.39876556 112.40249634]
[130.11862183 123.82722473]
[139.83847046 135.25195312]
[149.55833435 146.67668152]
[159.27818298 158.10140991]
[168.99803162 169.52613831]
[178.71789551 180.95086670]
[194.22987366 182.37083435]
[203.92442322 194.09559631]
[202.47511292 208.87515259]
[212.19496155 220.29988098]
[222.00207520 231.64979553]
[231.89585876 242.92424011]
[241.78965759 254.19868469]
[252.10801697 265.08587646]
[262.83581543 275.56988525]
[273.56362915 286.05386353]
[284.29144287 296.53787231]
[295.01925659 307.02185059]
[301.86550903 302.30911255]
[309.28683472 298.57293701]
[317.14492798 295.88217163]
[325.29336548 294.28610229]
[333.58041382 293.81375122]
[341.85195923 294.47311401]
[349.95419312 296.25119019]
[357.73654175 299.11416626]
[365.05456543 303.00814819]
[371.77249146 307.85998535]
[377.76580811 313.57885742]
[382.92355347 320.05783081]
[387.15042114 327.17599487]
[390.36837769 334.80053711]
[392.51828003 342.78936768]
[393.56088257 350.99368286]
[393.47753906 359.26083374]
[392.27053833 367.43704224]
[389.96304321 375.37033081]
[386.59872437 382.91339111]
[382.24081421 389.92620850]
[376.97100830 396.27877808]
[370.88787842 401.85336304]
[378.74984741 414.62792969]
[386.61181641 427.40249634]
[394.47378540 440.17706299]
[409.82269287 441.48733521]
[421.32257080 451.46762085]
[424.70065308 466.13229370]
[418.86566162 479.81039429]
[426.72763062 492.58496094]
[434.58959961 505.35952759]
[442.45156860 518.13409424]
[457.94714355 520.23669434]
[468.42761230 531.84246826]
[468.94442749 547.47149658]
[459.25350952 559.74426270]
[443.93069458 562.86590576]
[430.21087646 555.36254883]
[424.57217407 540.77697754]
[429.67700195 525.99603271]
[421.81503296 513.22149658]
[413.95306396 500.44692993]
[406.09112549 487.67236328]
[391.25103760 486.71847534]
[379.68136597 477.09524536]
[375.95312500 462.33197021]
[381.69921875 448.03903198]
[373.83724976 435.26446533]
[365.97528076 422.48989868]
[358.11331177 409.71533203]
[336.00592041 415.14996338]
[313.43008423 412.02963257]
[293.58233643 400.77761841]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[13 145]
[14 144]
[15 143]
[17 142]
[18 141]
[21 138]
[22 137]
[23 136]
[24 135]
[25 134]
[26 133]
[27 132]
[31 128]
[32 127]
[33 126]
[34 125]
[36 124]
[37 123]
[38 122]
[39 109]
[40 108]
[41 107]
[42 106]
[45 105]
[46 104]
[47 103]
[48 102]
[49 101]
[50 100]
[60 92]
[61 91]
[64 89]
[65 88]
[66 87]
[67 86]
[71 84]
[72 83]
[73 82]
[74 81]
[75 80]
[173 201]
[174 200]
[175 199]
[176 198]
[180 194]
[181 193]
[182 192]
[183 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
