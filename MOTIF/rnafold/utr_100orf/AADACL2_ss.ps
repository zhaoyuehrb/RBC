%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:21:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAAGAUGAUCAUAUCACCUGAGAGAGUUCCCAAGUCUACAAUUGCUCUACUAGUUACUAUUCAGUGUUUGUGAAAAAUUUUAAUCUCAGUACUGUGAAGAAGCUGGAAAAAGGGAUAUUAUGGGGCUAAAAGCUCUCUGUUUGGGGCUGCUUUGUGUUCUUUUUGUCUCUCAUUUUUACACACCCAUGCCAGACAACAUUGAAGAAAGCUGGAAAAUAA\
) } def
/len { sequence length } bind def

/coor [
[-101.29448700 517.32171631]
[-114.21950531 509.70965576]
[-122.36113739 497.11148071]
[-123.99188995 482.20056152]
[-129.01071167 496.33602905]
[-126.33673859 511.92965698]
[-137.88648987 521.33453369]
[-142.90531921 535.47003174]
[-147.92414856 549.60546875]
[-152.94296265 563.74096680]
[-152.54470825 580.69024658]
[-168.72134399 585.76495361]
[-178.07588196 571.62530518]
[-167.07843018 558.72210693]
[-162.05960083 544.58666992]
[-157.04078674 530.45117188]
[-152.02195740 516.31573486]
[-155.05491638 501.73318481]
[-143.14617920 491.31719971]
[-138.12734985 477.18176270]
[-143.91435242 472.41091919]
[-157.96463013 477.66351318]
[-155.48834229 462.86929321]
[-161.27532959 458.09848022]
[-174.19406128 465.72125244]
[-187.11277771 473.34402466]
[-200.03150940 480.96679688]
[-212.95022583 488.58956909]
[-210.15223694 503.48745728]
[-212.62144470 518.44335938]
[-220.05964661 531.65124512]
[-231.56867981 541.51623535]
[-245.75874329 546.84710693]
[-260.91632080 547.00006104]
[-275.21109009 541.95666504]
[-286.91683960 532.32592773]
[-294.62008667 519.27087402]
[-297.39062500 504.36782837]
[-294.89385986 489.41650391]
[-287.43130493 476.22232056]
[-275.90414429 466.37854004]
[-261.70428467 461.07388306]
[-246.54643250 460.94885254]
[-232.26098633 466.01855469]
[-220.57299805 475.67083740]
[-207.65426636 468.04806519]
[-194.73554993 460.42529297]
[-181.81683350 452.80255127]
[-168.89810181 445.17977905]
[-142.02931213 441.09906006]
[-125.96136475 453.59548950]
[-117.35286713 441.31161499]
[-108.74436951 429.02774048]
[-100.13587189 416.74386597]
[-91.52737427 404.45996094]
[-82.91887665 392.17608643]
[-88.41231537 380.01239014]
[-87.16991425 366.61499023]
[-79.40959167 355.49133301]
[-67.06961060 349.60662842]
[-53.32544708 350.59356689]
[-44.54320526 338.43328857]
[-35.76096344 326.27301025]
[-26.97872162 314.11273193]
[-18.19647980 301.95248413]
[-9.41423798 289.79220581]
[-0.63199598 277.63192749]
[8.15024567 265.47164917]
[16.93248749 253.31138611]
[24.64688683 240.44715881]
[31.23735619 226.97253418]
[37.82782364 213.49789429]
[44.41829300 200.02326965]
[50.91282272 186.50213623]
[57.31108856 172.93518066]
[63.70935059 159.36822510]
[70.10761261 145.80126953]
[76.50587463 132.23431396]
[82.90414429 118.66736603]
[78.36438751 113.13922119]
[75.55245972 106.56177521]
[74.69293213 99.46029663]
[75.85443878 92.40191650]
[78.94422150 85.95033264]
[83.71553040 80.62075806]
[77.90148926 66.79335785]
[71.69499969 60.10158920]
[72.10462189 52.72784424]
[66.48771667 38.81920242]
[60.87081909 24.91055489]
[55.25391388 11.00191021]
[40.48506927 -0.00207629]
[43.61503601 -17.27285957]
[37.80099106 -31.10025597]
[24.41765213 -40.57750702]
[26.20273972 -56.87921143]
[41.31990814 -63.23556900]
[54.21791077 -53.10770798]
[51.62838745 -36.91429901]
[57.44243240 -23.08690453]
[68.51678467 -18.23163605]
[73.47589111 -6.76545763]
[69.16255951 5.38500834]
[74.77946472 19.29365349]
[80.39636230 33.20229721]
[86.01326752 47.11094284]
[91.72888184 60.97931671]
[97.54293060 74.80670929]
[101.82649994 74.75315857]
[106.05775452 75.42272186]
[110.11550903 76.79621887]
[113.88352966 78.83430481]
[125.45752716 69.29267883]
[137.03152466 59.75104904]
[148.60551453 50.20941925]
[160.17950439 40.66778564]
[171.75349426 31.12615776]
[183.32748413 21.58452606]
[181.46395874 7.93156815]
[186.54780579 -4.75936079]
[197.15261841 -13.21489620]
[210.44319153 -15.31118774]
[222.93318176 -10.60655785]
[234.64164734 -19.98270035]
[246.35009766 -29.35884476]
[258.05856323 -38.73498917]
[269.76699829 -48.11112976]
[271.64718628 -63.57407761]
[283.65481567 -72.91603088]
[298.38476562 -71.02826691]
[310.09323120 -80.40440369]
[321.80169678 -89.78054810]
[333.51013184 -99.15669250]
[345.21859741 -108.53283691]
[351.51544189 -125.84053802]
[368.95730591 -127.80455780]
[380.53131104 -137.34619141]
[392.10528564 -146.88781738]
[403.67929077 -156.42945862]
[408.91183472 -171.97140503]
[425.03909302 -174.94519043]
[435.47073364 -162.29161072]
[429.47558594 -147.02760315]
[413.22091675 -144.85545349]
[401.64694214 -135.31382751]
[390.07293701 -125.77220154]
[378.49893188 -116.23056793]
[377.03012085 -104.22817230]
[367.47216797 -96.18383026]
[354.59472656 -96.82437897]
[342.88629150 -87.44823456]
[331.17782593 -78.07209778]
[319.46936035 -68.69595337]
[307.76092529 -59.31980896]
[306.38366699 -44.53336716]
[294.64318848 -34.85783386]
[279.14315796 -36.40267563]
[267.43469238 -27.02653313]
[255.72624207 -17.65038872]
[244.01779175 -8.27424526]
[232.30932617 1.10189807]
[233.60263062 17.47001839]
[224.79431152 31.52307892]
[209.18955994 37.61475372]
[192.86911011 33.15851974]
[181.29512024 42.70014954]
[169.72113037 52.24177933]
[158.14714050 61.78340912]
[146.57315063 71.32504272]
[134.99916077 80.86666870]
[123.42516327 90.40830231]
[119.98118591 115.53998566]
[96.47109222 125.06562805]
[90.07283020 138.63258362]
[83.67456818 152.19953918]
[77.27630615 165.76649475]
[70.87804413 179.33345032]
[64.47977448 192.90039062]
[63.65116119 201.98960876]
[57.89292526 206.61373901]
[51.30245590 220.08836365]
[44.71198654 233.56300354]
[38.12151718 247.03762817]
[50.91912842 239.21324158]
[65.83577728 237.63412476]
[79.98799133 242.60552979]
[90.64006042 253.16647339]
[95.73287964 267.27545166]
[94.28197479 282.20510864]
[86.56782532 295.06948853]
[74.08161163 303.38177490]
[59.23699188 305.53521729]
[44.90351868 301.11349487]
[33.85193253 290.97140503]
[28.21857262 277.06939697]
[29.09276009 262.09362793]
[20.31051826 274.25390625]
[11.52827644 286.41415405]
[2.74603486 298.57443237]
[-6.03620720 310.73471069]
[-14.81844902 322.89498901]
[-23.60069084 335.05526733]
[-32.38293076 347.21554565]
[-41.16517258 359.37579346]
[-35.67476273 375.37799072]
[-40.75643539 391.34024048]
[-54.21767807 401.02890015]
[-70.63499451 400.78457642]
[-79.24349213 413.06848145]
[-87.85198975 425.35235596]
[-96.46048737 437.63623047]
[-105.06898499 449.92010498]
[-113.67748260 462.20401001]
[-100.58215332 454.88879395]
[-85.59708405 454.21966553]
[-71.90188599 460.33859253]
[-62.40246201 471.94726562]
[-59.11445236 486.58245850]
[-62.73552322 501.13882446]
[-72.49733734 512.52770996]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 20]
[5 19]
[7 17]
[8 16]
[9 15]
[10 14]
[24 49]
[25 48]
[26 47]
[27 46]
[28 45]
[51 213]
[52 212]
[53 211]
[54 210]
[55 209]
[56 208]
[61 204]
[62 203]
[63 202]
[64 201]
[65 200]
[66 199]
[67 198]
[68 197]
[69 196]
[70 183]
[71 182]
[72 181]
[73 180]
[74 178]
[75 177]
[76 176]
[77 175]
[78 174]
[79 173]
[85 108]
[86 107]
[88 106]
[89 105]
[90 104]
[91 103]
[93 100]
[94 99]
[112 171]
[113 170]
[114 169]
[115 168]
[116 167]
[117 166]
[118 165]
[123 161]
[124 160]
[125 159]
[126 158]
[127 157]
[130 154]
[131 153]
[132 152]
[133 151]
[134 150]
[136 147]
[137 146]
[138 145]
[139 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
