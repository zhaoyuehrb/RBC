%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:06:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACUGCAUUUACAGCGCGCAUAGCGCCCACGCACGCGCACUGGGGUGUCCGCCGGGCAUCGCUCUGUCCAGUUAUUCCAGUUUCUCUGGGAGCAGCCGAGUUGACCCCACGGUCUGAGAUGUCCAAGCUGCCCGCAGACAGCAGUGUCCCGCAGACAGGCGCGGCGAAUGGUGACAGAGACGUCCCGCAGGCGGAGGUAGGCCGCGGGAGGCGGGAGC\
) } def
/len { sequence length } bind def

/coor [
[193.98420715 170.05885315]
[192.08283997 166.17189026]
[179.34953308 158.24328613]
[166.61621094 150.31469727]
[153.88288879 142.38609314]
[141.14958191 134.45750427]
[128.41625977 126.52890778]
[123.01407623 132.13360596]
[116.50252533 136.62892151]
[109.11133575 139.79489136]
[101.11383820 141.45953369]
[92.81686401 141.50740051]
[84.54899597 139.88609314]
[76.64755249 136.61032104]
[69.44486237 131.76315308]
[58.99079895 142.52012634]
[48.53673553 153.27709961]
[38.08267212 164.03408813]
[27.62860870 174.79106140]
[29.01532364 184.10562134]
[26.00918961 192.88493347]
[19.40274048 199.20436096]
[10.76246357 201.74024963]
[2.05859160 200.04600525]
[-8.84656715 210.34539795]
[-19.75172615 220.64479065]
[-23.92575264 236.50384521]
[-39.81614685 240.55693054]
[-51.07622910 228.63456726]
[-46.12259674 213.00148010]
[-30.05111885 209.73963928]
[-19.14596176 199.44024658]
[-8.24080181 189.14083862]
[-4.06501484 168.92521667]
[16.87163162 164.33699036]
[27.32569504 153.58001709]
[37.77975845 142.82304382]
[48.23382187 132.06607056]
[58.68788528 121.30908966]
[54.05263138 107.04323578]
[39.27232361 104.48540497]
[24.49201584 101.92757416]
[9.71170712 99.36974335]
[-5.06860018 96.81190491]
[-19.84890747 94.25407410]
[-34.62921524 91.69624329]
[-49.40952301 89.13840485]
[-64.18982697 86.58057404]
[-69.07640839 88.37787628]
[-73.70241547 88.14840698]
[-77.34075928 86.32957458]
[-79.54261017 83.58365631]
[-94.19981384 80.39517975]
[-109.32929230 85.02221680]
[-120.12101746 74.75636292]
[-134.77822876 71.56788635]
[-149.43542480 68.37940216]
[-164.09263611 65.19092560]
[-178.74983215 62.00244522]
[-191.90806580 70.75666046]
[-207.38583374 67.56067657]
[-216.00044250 54.31061935]
[-212.64100647 38.86750793]
[-199.30061340 30.39346886]
[-183.89387512 33.91599655]
[-175.56135559 47.34524155]
[-160.90414429 50.53372192]
[-146.24694824 53.72220230]
[-131.58975220 56.91067886]
[-116.93254089 60.09915924]
[-102.85144806 55.24405670]
[-91.01132965 65.73797607]
[-76.35413361 68.92645264]
[-61.63199615 71.80027008]
[-46.85168839 74.35810089]
[-32.07138062 76.91593170]
[-17.29107475 79.47377014]
[-2.51076722 82.03160095]
[12.26954079 84.58943176]
[27.04984856 87.14726257]
[41.83015442 89.70510101]
[56.61046219 92.26293182]
[62.34701538 79.70500183]
[71.47128296 69.89608765]
[82.86468506 63.66280746]
[95.24031830 61.41746140]
[96.31040955 46.45568085]
[97.38049316 31.49389648]
[98.45058441 16.53211594]
[99.41381836 1.56307495]
[100.27014923 -13.41246128]
[97.63705444 -22.15204239]
[101.24713898 -28.59525871]
[102.31723022 -43.55704117]
[103.38731384 -58.51882172]
[104.45740509 -73.48060608]
[105.52748871 -88.44238281]
[95.91378784 -106.16564178]
[107.45245361 -121.68640900]
[108.09485626 -136.67265320]
[91.80063629 -148.27238464]
[85.87476349 -167.22441101]
[92.56071472 -185.76829529]
[108.97480011 -196.42091370]
[108.76060486 -211.41938782]
[108.54641724 -226.41786194]
[108.33222198 -241.41633606]
[99.47058105 -255.21499634]
[107.22919464 -269.66268921]
[123.62667084 -269.89688110]
[131.79469299 -255.67662048]
[123.33069611 -241.63052368]
[123.54488373 -226.63204956]
[123.75907898 -211.63357544]
[123.97327423 -196.63511658]
[133.51649475 -192.68823242]
[141.23374939 -185.76829529]
[146.23056030 -176.64321899]
[147.91647339 -166.33840942]
[146.07475281 -156.02148438]
[140.88978577 -146.87002563]
[132.92906189 -139.93711853]
[123.08109283 -136.03024292]
[122.43869019 -121.04400635]
[129.99191284 -114.17408752]
[132.57458496 -104.06929779]
[129.10124207 -94.00255585]
[120.48927307 -87.37229919]
[119.41918182 -72.41051483]
[118.34909821 -57.44873428]
[117.27900696 -42.48695374]
[116.20892334 -27.52516937]
[115.24568939 -12.55612946]
[114.38935089 2.41940713]
[117.14385986 9.27217388]
[113.41236115 17.60220337]
[112.34227753 32.56398392]
[111.27218628 47.52576828]
[110.20210266 62.48754883]
[128.46444702 73.52280426]
[138.15148926 92.53468323]
[136.34484863 113.79559326]
[149.07817078 121.72418976]
[161.81149292 129.65278625]
[174.54481506 137.58137512]
[187.27812195 145.50997925]
[200.01144409 153.43856812]
[212.96597290 161.00032043]
[226.13116455 168.18905640]
[239.29634094 175.37779236]
[252.46153259 182.56652832]
[265.62670898 189.75526428]
[278.79190063 196.94398499]
[283.22781372 191.65808105]
[289.17111206 187.48500061]
[296.32601929 184.85092163]
[304.27789307 184.09936523]
[312.51733398 185.45872498]
[320.47277832 189.01683044]
[327.54959106 194.70486450]
[333.17324829 202.29223633]
[348.13504028 203.36231995]
[363.09683228 204.43241882]
[372.98645020 192.47520447]
[388.02395630 188.64721680]
[402.42706299 194.42039490]
[410.65753174 207.57482910]
[409.55056763 223.05236816]
[399.53179932 234.90158081]
[384.45367432 238.56622314]
[370.11401367 232.63713074]
[362.02673340 219.39419556]
[347.06494141 218.32411194]
[332.10317993 217.25401306]
[328.55590820 223.86210632]
[341.77206421 230.95666504]
[354.98825073 238.05120850]
[369.74987793 240.71469116]
[371.77816772 255.57693481]
[358.27005005 262.09844971]
[347.89370728 251.26739502]
[334.67752075 244.17283630]
[321.46133423 237.07827759]
[317.91406250 243.68637085]
[327.07379150 255.56491089]
[336.23348999 267.44345093]
[345.39321899 279.32196045]
[354.55294800 291.20050049]
[363.71264648 303.07904053]
[371.42581177 307.95965576]
[372.91690063 315.19323730]
[381.90606689 327.20135498]
[390.89523315 339.20947266]
[406.40823364 338.85324097]
[419.14868164 347.71102905]
[424.21765137 362.37680054]
[419.66601562 377.21130371]
[407.24395752 386.51034546]
[391.72802734 386.69824219]
[379.08441162 377.70278931]
[374.17483521 362.98287964]
[378.88711548 348.19863892]
[369.89794922 336.19052124]
[360.90878296 324.18240356]
[351.83413696 312.23876953]
[342.67440796 300.36022949]
[333.51467896 288.48168945]
[324.35498047 276.60314941]
[315.19525146 264.72463989]
[306.03552246 252.84608459]
[274.74017334 238.65576172]
[271.60317993 210.10917664]
[258.43798828 202.92044067]
[245.27279663 195.73170471]
[232.10760498 188.54296875]
[218.94242859 181.35423279]
[205.77723694 174.16549683]
[203.05793762 174.81985474]
[199.91636658 174.44012451]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 147]
[3 146]
[4 145]
[5 144]
[6 143]
[7 142]
[15 39]
[16 38]
[17 37]
[18 36]
[19 35]
[24 33]
[25 32]
[26 31]
[40 82]
[41 81]
[42 80]
[43 79]
[44 78]
[45 77]
[46 76]
[47 75]
[48 74]
[52 73]
[53 72]
[55 70]
[56 69]
[57 68]
[58 67]
[59 66]
[86 139]
[87 138]
[88 137]
[89 136]
[90 134]
[91 133]
[93 132]
[94 131]
[95 130]
[96 129]
[97 128]
[99 124]
[100 123]
[104 115]
[105 114]
[106 113]
[107 112]
[148 217]
[149 216]
[150 215]
[151 214]
[152 213]
[153 212]
[161 174]
[162 173]
[163 172]
[184 210]
[185 209]
[186 208]
[187 207]
[188 206]
[189 205]
[191 204]
[192 203]
[193 202]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
