%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:28:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUUUGCUUUUAGCCCUCACCGGGGGCAGGAGGGACCAAGGCUGGGCCCAGAACACAUAGUCCUAGGGUAACAGUGAAGGGGUCGUGAGGGGACAGUGACUCCCUUCCAACCCCUUCUUCAUAGGGACUGUUGGCAAACAAAGAAAAUCAACUGGGAAAAUGAAGACCUGCUGGAAAAUUCCAGUUUUCUUCUUUGUGUGCAGUUUCCUGGAACCCUGGGCAUCUGCAGCUGUCAAGCGUCGCCCCAGAUUCCCU\
GUCA\
) } def
/len { sequence length } bind def

/coor [
[115.61576843 145.29750061]
[101.67601013 149.94035339]
[86.38043213 150.20889282]
[71.12267303 145.72248840]
[64.31281281 159.08760071]
[64.94165039 174.89630127]
[52.26960373 182.72372437]
[45.45974731 196.08882141]
[38.64989090 209.45391846]
[31.84003258 222.81901550]
[25.03017426 236.18411255]
[23.92950630 245.22039795]
[18.05643845 249.66880798]
[11.08559036 262.95065308]
[4.11474323 276.23248291]
[-2.85610437 289.51434326]
[-9.82695198 302.79617310]
[-16.79780006 316.07800293]
[-18.80484390 332.91275024]
[-35.53726959 335.64443970]
[-42.79421997 320.32214355]
[-30.07963943 309.10717773]
[-23.10879326 295.82531738]
[-16.13794518 282.54348755]
[-9.16709709 269.26165771]
[-2.19624949 255.97981262]
[4.77459812 242.69796753]
[11.66507626 229.37425232]
[18.47493362 216.00915527]
[25.28479195 202.64405823]
[32.09465027 189.27896118]
[38.90450668 175.91386414]
[37.78858185 161.06111145]
[50.94771576 152.27774048]
[57.75757217 138.91264343]
[53.31260681 132.87174988]
[44.56914902 145.05995178]
[30.27567291 140.51060486]
[30.18561172 125.51087952]
[44.42267227 120.78998566]
[39.97770691 114.74910736]
[25.19181442 117.27445984]
[10.40592289 119.79981232]
[-4.37996817 122.32517242]
[-18.29194450 134.41064453]
[-34.49861526 127.64550018]
[-49.25291443 130.34931946]
[-64.00720978 133.05314636]
[-78.76151276 135.75697327]
[-93.49920654 138.54989624]
[-108.21975708 141.43179321]
[-120.27629089 151.67633057]
[-134.25299072 146.52842712]
[-148.97355652 149.41032410]
[-159.08393860 161.86662292]
[-175.12451172 161.58430481]
[-184.79029846 148.77993774]
[-180.66654968 133.27592468]
[-165.91664124 126.96563721]
[-151.85545349 134.68977356]
[-137.13490295 131.80787659]
[-126.13127899 121.76946259]
[-111.10165405 126.71124268]
[-96.38110352 123.82933807]
[-90.43905640 119.47350311]
[-81.46533203 121.00267792]
[-66.71103668 118.29885101]
[-51.95673752 115.59502411]
[-37.20243835 112.89120483]
[-30.09073448 103.12976837]
[-17.84358025 100.74219513]
[-6.90532351 107.53928375]
[7.88056755 105.01392365]
[22.66645813 102.48857117]
[37.45235062 99.96321106]
[41.82829666 85.61569977]
[30.96849632 75.26849365]
[20.10869598 64.92127991]
[9.24889565 54.57407379]
[-1.61090446 44.22686386]
[-12.47070408 33.87965393]
[-23.33050346 23.53244400]
[-34.19030380 13.18523407]
[-47.50973511 15.05948830]
[-59.30893326 9.01738644]
[-65.39226532 -2.54136443]
[-63.74184418 -15.30251694]
[-74.47583008 -25.78018761]
[-85.20981598 -36.25785828]
[-95.94379425 -46.73552704]
[-106.67778015 -57.21319962]
[-117.41176605 -67.69087219]
[-128.14575195 -78.16854095]
[-143.68724060 -76.43757629]
[-156.67663574 -85.14443970]
[-160.98075867 -100.17801666]
[-154.56732178 -114.43991852]
[-140.46455383 -121.19610596]
[-125.33135223 -117.25651550]
[-116.31315613 -104.48130035]
[-117.66808319 -88.90252686]
[-106.93409729 -78.42485046]
[-96.20011139 -67.94718170]
[-85.46612549 -57.46951294]
[-74.73213959 -46.99184418]
[-63.99815750 -36.51417160]
[-53.26417542 -26.03650093]
[-36.45737457 -26.94968224]
[-23.95420074 -15.18223667]
[-23.84309387 2.32543445]
[-12.98329449 12.67264366]
[-2.12349486 23.01985359]
[8.73630524 33.36706161]
[19.59610558 43.71427155]
[30.45590591 54.06148148]
[41.31570435 64.40869141]
[52.17550659 74.75589752]
[75.58028412 55.81710815]
[103.52706146 53.24664688]
[126.38797760 65.68209076]
[137.48657227 86.94662476]
[152.32916260 84.77928925]
[167.17176819 82.61195374]
[182.01435852 80.44461823]
[196.85694885 78.27728271]
[211.69955444 76.10994720]
[226.54214478 73.94261169]
[241.35746765 71.59609222]
[256.14337158 69.07073975]
[270.92926025 66.54537964]
[278.99142456 56.50311661]
[291.33676147 54.69041824]
[301.28521729 61.53805923]
[316.10055542 59.19154358]
[330.91586304 56.84502792]
[340.63815308 36.80343628]
[360.94781494 28.17677307]
[381.72335815 34.96507645]
[393.53109741 25.71429443]
[405.33886719 16.46351051]
[417.14660645 7.21272802]
[428.95437622 -2.03805518]
[440.76211548 -11.28883839]
[452.56985474 -20.53962135]
[464.37762451 -29.79040527]
[462.85342407 -43.47212601]
[468.23855591 -56.02390671]
[479.03140259 -64.21651459]
[492.35452271 -65.99974823]
[504.72134399 -61.01463699]
[516.64001465 -70.12207794]
[528.55865479 -79.22951508]
[540.47735596 -88.33695221]
[552.39599609 -97.44438934]
[564.31469727 -106.55182648]
[576.23333740 -115.65926361]
[588.15197754 -124.76670074]
[584.31787109 -139.44917297]
[586.39154053 -154.44059753]
[594.02624512 -167.46078491]
[606.03161621 -176.54142761]
[620.55950928 -180.32359314]
[635.38824463 -178.26109314]
[648.26245117 -170.69905090]
[660.18109131 -179.80648804]
[663.72381592 -195.45349121]
[678.22814941 -202.30944824]
[692.56762695 -195.11506653]
[695.74218750 -179.38925171]
[685.31665039 -167.19549561]
[669.28857422 -167.88781738]
[657.36987305 -158.78038025]
[661.28417969 -144.37178040]
[659.37860107 -129.52206421]
[651.91271973 -116.49803925]
[639.99713135 -107.29987335]
[625.42858887 -103.35385895]
[610.41894531 -105.29136658]
[597.25946045 -112.84803772]
[585.34075928 -103.74060059]
[573.42211914 -94.63316345]
[561.50341797 -85.52571869]
[549.58477783 -76.41828156]
[537.66613770 -67.31084442]
[525.74743652 -58.20341110]
[513.82879639 -49.09597015]
[514.74505615 -32.69177246]
[505.60211182 -18.84116364]
[489.84494019 -13.12324142]
[473.62838745 -17.98265266]
[461.82064819 -8.73186970]
[450.01290894 0.51891387]
[438.20513916 9.76969719]
[426.39739990 19.02047920]
[414.58963013 28.27126312]
[402.78189087 37.52204514]
[390.97412109 46.77283096]
[396.66662598 53.39533234]
[400.62847900 62.06122971]
[414.15420532 68.54615021]
[427.67996216 75.03106689]
[441.20571899 81.51598358]
[454.73144531 88.00090027]
[468.34619141 80.79359436]
[483.41806030 82.95973206]
[494.19692993 93.46115875]
[496.69534302 108.12049103]
[510.22109985 114.60540771]
[523.74682617 121.09032440]
[537.27258301 127.57524109]
[550.79833984 134.06016541]
[567.09924316 132.26760864]
[576.58258057 145.64660645]
[569.49279785 160.43397522]
[553.12316895 161.41775513]
[544.31341553 147.58590698]
[530.78765869 141.10098267]
[517.26190186 134.61607361]
[503.73617554 128.13114929]
[490.21041870 121.64623260]
[477.21646118 128.87773132]
[462.27920532 127.04956818]
[451.15252686 116.65481567]
[448.24655151 101.52664948]
[434.72079468 95.04173279]
[421.19503784 88.55681610]
[407.66931152 82.07189941]
[394.14355469 75.58697510]
[384.61013794 87.16774750]
[393.57290649 99.19558716]
[402.53567505 111.22342682]
[417.80242920 117.21159363]
[419.98202515 133.46525574]
[406.83227539 143.26403809]
[391.88052368 136.52778625]
[390.50784302 120.18618774]
[381.54507446 108.15834808]
[372.58230591 96.13050842]
[359.16552734 95.73005676]
[347.27923584 90.78128815]
[338.34005737 82.29150391]
[333.26239014 71.66035461]
[318.44708252 74.00686646]
[303.63174438 76.35338593]
[290.58920288 88.11415100]
[273.45462036 81.33127594]
[258.66873169 83.85662842]
[243.88282776 86.38198090]
[240.45524597 89.66773224]
[234.93681335 90.85440826]
[228.70948792 88.78520203]
[213.86688232 90.95253754]
[199.02429199 93.11988068]
[184.18170166 95.28721619]
[169.33909607 97.45455170]
[154.49650574 99.62188721]
[139.65390015 101.78922272]
[139.30987549 114.06131744]
[135.08378601 126.22810364]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 35]
[5 34]
[7 32]
[8 31]
[9 30]
[10 29]
[11 28]
[13 27]
[14 26]
[15 25]
[16 24]
[17 23]
[18 22]
[41 75]
[42 74]
[43 73]
[44 72]
[46 69]
[47 68]
[48 67]
[49 66]
[50 64]
[51 63]
[53 61]
[54 60]
[76 117]
[77 116]
[78 115]
[79 114]
[80 113]
[81 112]
[82 111]
[83 110]
[87 107]
[88 106]
[89 105]
[90 104]
[91 103]
[92 102]
[93 101]
[121 257]
[122 256]
[123 255]
[124 254]
[125 253]
[126 252]
[127 251]
[128 248]
[129 247]
[130 246]
[133 244]
[134 243]
[135 242]
[138 197]
[139 196]
[140 195]
[141 194]
[142 193]
[143 192]
[144 191]
[145 190]
[150 186]
[151 185]
[152 184]
[153 183]
[154 182]
[155 181]
[156 180]
[157 179]
[164 172]
[165 171]
[199 228]
[200 227]
[201 226]
[202 225]
[203 224]
[207 220]
[208 219]
[209 218]
[210 217]
[211 216]
[229 238]
[230 237]
[231 236]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
