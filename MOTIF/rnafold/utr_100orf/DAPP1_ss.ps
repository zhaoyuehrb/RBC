%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:17:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGGCUGCUGUCUCACAGAGCGAGAAGGUGUCAGGAGCAGCCCAGUUGUGUCUCUCUCUCUACCUCUGUGAAGGGCGCGAAUGGGCAGAGCAGAACUUCUAGAAGGGAAGAUGAGCACCCAGGAUCCCUCAGAUCUGUGGAGCAGAUCCGAUGGAGAGGCUGAGCUGCUCCAGGACUUGG\
) } def
/len { sequence length } bind def

/coor [
[3.76573801 413.61914062]
[-7.35256958 422.63583374]
[-20.54811859 428.14395142]
[-34.74570465 429.70440674]
[-48.79122162 427.19940186]
[-55.53178024 440.59957886]
[-62.27233505 453.99975586]
[-63.33882523 463.09841919]
[-69.24663544 467.57156372]
[-76.21748352 480.85339355]
[-83.18833160 494.13525391]
[-90.15917969 507.41708374]
[-92.16622162 524.25183105]
[-108.89865112 526.98352051]
[-116.15560150 511.66122437]
[-103.44101715 500.44622803]
[-96.47016907 487.16439819]
[-89.49932098 473.88253784]
[-82.52847290 460.60070801]
[-75.67251587 447.25921631]
[-68.93196106 433.85900879]
[-62.19140625 420.45883179]
[-73.43231201 409.56860352]
[-80.77042389 395.72247314]
[-83.47801971 380.26800537]
[-81.27867126 364.71343994]
[-74.37545013 350.58059692]
[-63.43221283 339.25588989]
[-49.50980759 331.85440063]
[-33.96321869 329.11007690]
[-18.30969620 331.30291748]
[-11.80143929 317.78836060]
[-5.29318333 304.27383423]
[-7.55640459 286.88253784]
[7.71577692 276.61602783]
[13.98979378 262.99118042]
[20.26381111 249.36631775]
[26.53782845 235.74145508]
[32.81184387 222.11660767]
[39.08586121 208.49174500]
[45.35987854 194.86689758]
[51.63389587 181.24203491]
[49.92932892 166.44528198]
[62.72947311 157.14653015]
[69.00348663 143.52166748]
[75.27750397 129.89682007]
[81.55152130 116.27195740]
[87.82553864 102.64710236]
[89.24747467 87.71465302]
[85.65773773 73.15052795]
[82.06800842 58.58639908]
[76.96328735 50.97948456]
[78.54431152 43.73991013]
[75.20649719 29.11599159]
[71.86868286 14.49207211]
[66.30831909 0.56072885]
[58.65932846 -12.34248638]
[51.01033783 -25.24570274]
[43.25027084 -38.08242035]
[35.37970352 -50.85168839]
[27.50913620 -63.62095261]
[19.63856888 -76.39022064]
[5.81091356 -84.07829285]
[5.71950006 -98.97261810]
[-2.15106726 -111.74188995]
[-10.02163410 -124.51115417]
[-28.17206955 -133.24275208]
[-27.95274162 -152.56265259]
[-36.25936508 -165.05264282]
[-44.56598663 -177.54264832]
[-52.87261200 -190.03263855]
[-68.25375366 -194.59332275]
[-74.14427185 -209.51583862]
[-66.02545166 -223.35290527]
[-50.12536240 -225.48991394]
[-38.64119339 -214.28752136]
[-40.38261414 -198.33926392]
[-32.07599258 -185.84927368]
[-23.76936722 -173.35926819]
[-15.46274471 -160.86927795]
[-5.27350616 -159.75559998]
[2.78074050 -153.06634521]
[5.87369537 -142.83387756]
[2.74763203 -132.38172913]
[10.61819935 -119.61245728]
[18.48876762 -106.84318542]
[31.75346756 -100.06845856]
[32.40783691 -84.26078796]
[40.27840424 -71.49152374]
[48.14897156 -58.72225571]
[56.01953888 -45.95298767]
[62.22187805 -41.89810944]
[63.91355515 -32.89469147]
[71.56254578 -19.99147606]
[79.21153259 -7.08826017]
[94.19823456 -7.73540163]
[109.18360138 -8.38247108]
[115.69185638 -21.89700317]
[122.20011139 -35.41153717]
[128.70837402 -48.92607117]
[135.21662903 -62.44060135]
[131.29644775 -77.99732971]
[141.12924194 -90.67391205]
[157.17213440 -90.74595642]
[167.11839294 -78.15819550]
[163.33808899 -62.56689072]
[148.73115540 -55.93234634]
[142.22290039 -42.41781235]
[135.71464539 -28.90328026]
[129.20639038 -15.38874817]
[122.69813538 -1.87421465]
[111.10373688 8.84908295]
[98.14588165 13.07123947]
[86.49259949 11.15425873]
[89.83041382 25.77817726]
[93.16822815 40.40209579]
[96.63213348 54.99666214]
[100.22187042 69.56079102]
[103.81159973 84.12491608]
[105.42954254 69.21243286]
[116.62963104 59.23455429]
[131.62924194 59.34288788]
[142.68403625 69.48149872]
[144.08641052 84.41580200]
[135.11230469 96.43518066]
[120.39305115 99.33364868]
[135.21240234 101.65458679]
[150.03175354 103.97553253]
[164.86291504 98.46669769]
[176.23973083 108.08010101]
[191.05908203 110.40103912]
[205.89024353 104.89221191]
[217.26705933 114.50561523]
[232.08641052 116.82655334]
[246.90576172 119.14749908]
[261.72512817 121.46843719]
[276.54446411 123.78937531]
[291.36383057 126.11031342]
[306.18316650 128.43125916]
[322.76708984 124.90851593]
[330.74307251 139.86914062]
[318.57507324 151.67491150]
[303.86224365 143.25061035]
[289.04287720 140.92967224]
[274.22354126 138.60873413]
[259.40417480 136.28779602]
[244.58482361 133.96684265]
[229.76547241 131.64590454]
[214.94612122 129.32496643]
[201.17492676 134.99980164]
[188.73814392 125.22039795]
[173.91879272 122.89945984]
[160.14761353 128.57429504]
[147.71081543 118.79488373]
[132.89146423 116.47394562]
[118.07211304 114.15299988]
[111.20078278 114.49168396]
[105.44659424 112.54571533]
[101.45039368 108.92111969]
[95.17637634 122.54597473]
[88.90235901 136.17083740]
[82.62834167 149.79568481]
[76.35432434 163.42054749]
[77.61013031 179.19183350]
[65.25875092 187.51605225]
[58.98473358 201.14091492]
[52.71071625 214.76576233]
[46.43670273 228.39062500]
[40.16268539 242.01547241]
[33.88866806 255.64033508]
[27.61465073 269.26519775]
[21.34063339 282.89004517]
[25.07142448 295.25457764]
[19.54524994 306.48220825]
[8.22134972 310.78210449]
[1.71309364 324.29663086]
[-4.79516268 337.81115723]
[5.80362320 347.57482910]
[13.20963764 359.91806030]
[16.82907295 373.83370972]
[16.37665749 388.18933105]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 22]
[6 21]
[7 20]
[9 19]
[10 18]
[11 17]
[12 16]
[31 177]
[32 176]
[33 175]
[35 172]
[36 171]
[37 170]
[38 169]
[39 168]
[40 167]
[41 166]
[42 165]
[44 163]
[45 162]
[46 161]
[47 160]
[48 159]
[49 119]
[50 118]
[51 117]
[53 116]
[54 115]
[55 114]
[56 95]
[57 94]
[58 93]
[59 91]
[60 90]
[61 89]
[62 88]
[64 86]
[65 85]
[66 84]
[68 80]
[69 79]
[70 78]
[71 77]
[97 111]
[98 110]
[99 109]
[100 108]
[101 107]
[126 156]
[127 155]
[128 154]
[130 152]
[131 151]
[133 149]
[134 148]
[135 147]
[136 146]
[137 145]
[138 144]
[139 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
