%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:01:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGGCGUGCACGCGGGCGCGGCUGCGUGAGAGGCGCGCGGCGGCGCAGUAAACAGUCUCCUUCCACAAAACCAUGGCGUCGCUCAAAUGUAGCACCGUCGUCUGCGUGAUCUGCUUGGAGAAGCCCAAAUACCGCUGUCCAGCCUGCCGCGUGCCCUACUGCUCGGUAGUCU\
) } def
/len { sequence length } bind def

/coor [
[150.74128723 343.81942749]
[152.08099365 339.60641479]
[148.32966614 325.08309937]
[144.57833862 310.55975342]
[140.82701111 296.03640747]
[137.07568359 281.51306152]
[133.32434082 266.98971558]
[129.57301331 252.46636963]
[125.82168579 237.94302368]
[122.07035828 223.41967773]
[111.79704285 216.99237061]
[108.56713867 204.89669800]
[114.64544678 193.49491882]
[111.15693665 178.90620422]
[107.66842651 164.31750488]
[104.17991638 149.72880554]
[100.69139862 135.14009094]
[97.20288849 120.55139160]
[83.76480865 113.88671875]
[70.03968048 119.93824768]
[60.53390884 132.58541870]
[45.76685333 130.64035034]
[32.04172897 136.69187927]
[18.31660461 142.74340820]
[4.59148169 148.79493713]
[-9.13364220 154.84646606]
[-22.85876465 160.89797974]
[-36.58388901 166.94950867]
[-50.30901337 173.00103760]
[-57.42951965 187.37733459]
[-73.13879395 190.63282776]
[-85.38603210 180.27015686]
[-84.77619171 164.23870850]
[-71.77709961 154.83641052]
[-56.36053848 159.27592468]
[-42.63541794 153.22439575]
[-28.91029358 147.17286682]
[-15.18516922 141.12133789]
[-1.46004593 135.06980896]
[12.26507759 129.01828003]
[25.99020195 122.96675110]
[39.71532440 116.91522980]
[48.23938370 104.70090485]
[63.98815536 106.21311951]
[77.71327972 100.16159821]
[84.37795258 86.72351074]
[80.88944244 72.13480377]
[77.40093231 57.54610443]
[73.91241455 42.95739746]
[69.00863647 57.13318634]
[59.43895340 68.68399048]
[46.42237854 76.13844299]
[31.61700821 78.54696655]
[16.90879059 75.60276794]
[4.17130327 67.68087006]
[-4.97291613 55.79040146]
[-9.35904980 41.44599915]
[-8.42837811 26.47489929]
[-2.29945374 12.78416252]
[8.24700260 2.11775517]
[21.86755371 -4.16560411]
[36.82717133 -5.26552200]
[51.22025681 -1.04188824]
[63.21337891 7.96727848]
[71.27791595 20.61216736]
[71.27791595 5.61216736]
[71.27791595 -9.38783264]
[57.46929932 -19.12744713]
[52.22664642 -35.01677322]
[57.42364120 -50.74637985]
[70.82921600 -60.19350815]
[70.55840302 -75.19106293]
[62.57321548 -88.84929657]
[70.07947540 -101.71417999]
[69.80866241 -116.71173859]
[69.53784943 -131.70928955]
[69.26703644 -146.70684814]
[61.28184891 -160.36508179]
[68.78810883 -173.22996521]
[68.51729584 -188.22752380]
[60.53210449 -201.88575745]
[68.03836060 -214.75064087]
[67.76755524 -229.74819946]
[56.21972656 -240.53816223]
[55.76734543 -256.33596802]
[66.67879486 -267.76907349]
[82.48050690 -268.05441284]
[93.79760742 -257.02270508]
[93.91586304 -241.21884155]
[82.76510620 -230.01901245]
[83.03591919 -215.02145386]
[91.00173950 -202.43594360]
[83.51484680 -188.49833679]
[83.78565979 -173.50077820]
[91.75148010 -160.91526794]
[84.26459503 -146.97766113]
[84.53540802 -131.98010254]
[84.80621338 -116.98255157]
[85.07702637 -101.98499298]
[93.04284668 -89.39949036]
[85.55596161 -75.46187592]
[85.82677460 -60.46432114]
[97.44505310 -53.84857559]
[104.32482147 -42.25846863]
[104.57244110 -28.67416763]
[98.01589966 -16.65075302]
[86.27791595 -9.38783264]
[86.27791595 5.61216736]
[86.27791595 20.61216736]
[90.30752563 25.36067390]
[91.40486145 32.26808929]
[88.50112152 39.46888733]
[91.98963165 54.05759048]
[95.47814941 68.64629364]
[98.96665955 83.23500061]
[109.93414307 82.99197388]
[120.32766724 90.13126373]
[135.31788635 89.58972931]
[150.30812073 89.04819489]
[165.29833984 88.50665283]
[174.65840149 79.59960175]
[187.17727661 79.47583771]
[196.11871338 87.65520477]
[211.11627197 87.38439178]
[226.11381531 87.11357880]
[234.13113403 73.93305969]
[248.01165771 67.19993591]
[263.32614136 69.06273651]
[275.18780518 78.92703247]
[279.81164551 93.64517975]
[275.72216797 108.52066040]
[264.22436523 118.80676270]
[248.98712158 121.22123718]
[234.87257385 114.99362183]
[226.38462830 102.11113739]
[211.38708496 102.38195038]
[196.38952637 102.65276337]
[181.88325500 112.50256348]
[165.83987427 103.49687958]
[150.84965515 104.03841400]
[135.85942078 104.57994843]
[120.86920929 105.12148285]
[111.79159546 117.06288147]
[115.28010559 131.65158081]
[118.76861572 146.24029541]
[122.25712585 160.82899475]
[125.74564362 175.41769409]
[129.23414612 190.00640869]
[142.20364380 203.05574036]
[136.59370422 219.66835022]
[140.34503174 234.19169617]
[144.09635925 248.71504211]
[147.84768677 263.23837280]
[151.59901428 277.76171875]
[155.35035706 292.28506470]
[159.10168457 306.80841064]
[162.85301208 321.33175659]
[166.60433960 335.85510254]
[170.87754822 350.23355103]
[175.66706848 364.44833374]
[180.45660400 378.66314697]
[185.24612427 392.87792969]
[190.03564453 407.09274292]
[200.82293701 420.17211914]
[191.24090576 434.15859985]
[175.14846802 428.82287598]
[175.82084656 411.88226318]
[171.03132629 397.66744995]
[166.24180603 383.45266724]
[161.45228577 369.23785400]
[156.66275024 355.02307129]
[154.17594910 353.65948486]
[152.08930969 351.21163940]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 158]
[3 157]
[4 156]
[5 155]
[6 154]
[7 153]
[8 152]
[9 151]
[10 150]
[13 148]
[14 147]
[15 146]
[16 145]
[17 144]
[18 143]
[19 45]
[20 44]
[22 42]
[23 41]
[24 40]
[25 39]
[26 38]
[27 37]
[28 36]
[29 35]
[46 115]
[47 114]
[48 113]
[49 112]
[65 109]
[66 108]
[67 107]
[71 102]
[72 101]
[74 99]
[75 98]
[76 97]
[77 96]
[79 94]
[80 93]
[82 91]
[83 90]
[117 142]
[118 141]
[119 140]
[120 139]
[123 137]
[124 136]
[125 135]
[159 171]
[160 170]
[161 169]
[162 168]
[163 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
