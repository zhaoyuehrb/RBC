%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:53:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCAGGCUGCGGAUCCCCGUAGGCGAGCGAGCGGCUAGGUUCGUGAUCUGGAGAGACGCUCAGAUUAUUAAGUUCCUGCAACUUAACUGGGAACUGAUCAAGAUUUCAAGCUAAAGAUGGUGGUGAUGAACAGCCUGAGGGUCAUUCUUCAAGCCUCUCCAGGCAAAUUGCUGUGGAGAAAGUUCCAGAUUCCGAGAUUCAUGCCAGCGAGGCCCU\
) } def
/len { sequence length } bind def

/coor [
[3.66093087 458.72680664]
[0.15094545 444.14447021]
[-6.52374506 457.57757568]
[-13.19843578 471.01068115]
[-8.39592934 485.82870483]
[-15.35637379 499.35671997]
[-29.51268768 503.84384155]
[-36.18737793 517.27697754]
[-42.76510239 530.75781250]
[-49.24552155 544.28570557]
[-55.72594452 557.81359863]
[-62.20636368 571.34155273]
[-68.68678284 584.86944580]
[-66.88880920 601.16973877]
[-80.26464844 610.65753174]
[-95.05438232 603.57263184]
[-96.04360962 587.20336914]
[-82.21468353 578.38903809]
[-75.73426819 564.86108398]
[-69.25384521 551.33319092]
[-62.77342606 537.80529785]
[-56.29300690 524.27740479]
[-56.23816299 516.89086914]
[-49.62049103 510.60226440]
[-42.94580078 497.16915894]
[-47.91979980 483.17648315]
[-41.34207535 469.45831299]
[-26.63154793 464.33599854]
[-19.95685768 450.90289307]
[-13.28216648 437.46978760]
[-14.12209797 426.77142334]
[-5.34740257 418.50708008]
[-0.46615121 404.32351685]
[4.31277466 390.10516357]
[8.98912716 375.85272217]
[13.66547966 361.60031128]
[1.72201502 349.19308472]
[-2.31003666 332.35842896]
[2.76865792 315.71624756]
[15.64437675 303.88067627]
[32.82870865 300.18099976]
[37.09239197 285.79974365]
[41.35607910 271.41845703]
[45.61976242 257.03720093]
[41.81928635 242.63560486]
[53.16007233 231.60395813]
[57.42375565 217.22268677]
[61.68744278 202.84141541]
[65.95112610 188.46014404]
[70.21481323 174.07887268]
[74.47849274 159.69760132]
[78.74217987 145.31632996]
[83.00586700 130.93505859]
[87.26954651 116.55377960]
[76.49092102 92.31683350]
[99.31909943 71.42546844]
[95.47162628 56.92729568]
[91.62414551 42.42912674]
[80.60597992 31.07524872]
[84.81990051 16.78916550]
[80.97242737 2.29099607]
[77.12495422 -12.20717430]
[73.27748108 -26.70534325]
[69.43000793 -41.20351410]
[56.58663940 -41.10531235]
[44.01138687 -44.92082977]
[32.89502716 -52.47287750]
[24.34351730 -63.22315598]
[19.26902199 -76.30804443]
[18.29511642 -90.60708618]
[21.68576431 -104.83870697]
[29.30584335 -117.67507935]
[19.40888596 -128.94674683]
[9.51192856 -140.21839905]
[-0.38502860 -151.49005127]
[-10.28198624 -162.76170349]
[-20.17894363 -174.03337097]
[-30.07590103 -185.30502319]
[-44.93763351 -181.64613342]
[-59.79463196 -185.32421875]
[-71.23286438 -195.49404907]
[-76.62390137 -209.81867981]
[-74.72893524 -225.00642395]
[-65.98340607 -237.56726074]
[-52.39697647 -244.61476135]
[-37.09170532 -244.52951050]
[-23.58463287 -237.33105469]
[-14.97958755 -224.67358398]
[-13.25394440 -209.46566772]
[-18.80424309 -195.20198059]
[-8.90728664 -183.93032837]
[0.98967069 -172.65866089]
[10.88662815 -161.38700867]
[20.78358459 -150.11535645]
[30.68054199 -138.84368896]
[40.57749939 -127.57203674]
[47.89117432 -129.23341370]
[44.56841278 -143.86076355]
[41.24565506 -158.48811340]
[33.56558609 -171.37284851]
[43.44657135 -182.65850830]
[57.23318863 -176.74842834]
[55.87300110 -161.81086731]
[59.19575882 -147.18353271]
[62.51852036 -132.55618286]
[69.83219147 -134.21755981]
[73.88819122 -148.65878296]
[77.94419098 -163.10000610]
[82.00019836 -177.54121399]
[77.03685760 -195.27636719]
[90.06831360 -207.03332520]
[93.91578674 -221.53149414]
[97.76325989 -236.02966309]
[101.61073303 -250.52783203]
[92.46328735 -263.21081543]
[93.65995789 -278.80255127]
[104.63571167 -289.94110107]
[120.20812988 -291.36715698]
[133.02439880 -282.40737915]
[137.03306580 -267.29235840]
[130.34136963 -253.15887451]
[116.10890961 -246.68035889]
[112.26142883 -232.18218994]
[108.41395569 -217.68402100]
[104.56648254 -203.18585205]
[110.36592102 -192.57388306]
[107.28302765 -180.46620178]
[96.44141388 -173.48521423]
[92.38541412 -159.04400635]
[88.32941437 -144.60278320]
[84.27341461 -130.16156006]
[102.18804932 -115.88131714]
[111.41545105 -95.71812439]
[110.56684113 -74.29602814]
[100.48615265 -56.21232605]
[83.92817688 -45.05098724]
[87.77565002 -30.55281830]
[91.62312317 -16.05464935]
[95.47059631 -1.55647850]
[99.31807709 12.94169140]
[110.06104279 23.25856400]
[106.12231445 38.58165359]
[109.96979523 53.07982254]
[113.81726837 67.57799530]
[117.39158630 53.01007462]
[117.12353516 38.01247025]
[123.58592987 24.47594452]
[135.41638184 15.25421906]
[150.12086487 12.29137993]
[164.59941101 16.21203995]
[175.79972839 26.18966293]
[181.36059570 40.12080383]
[180.10971069 55.06855392]
[172.31076050 67.88169098]
[159.60791016 75.85899353]
[144.67739868 77.31849670]
[130.61734009 82.54486847]
[145.46185303 84.69904327]
[160.30636597 86.85321045]
[175.15087891 89.00738525]
[189.99539185 91.16156006]
[204.83990479 93.31572723]
[219.69955444 95.36288452]
[234.57356262 97.30291748]
[249.44758606 99.24295044]
[264.32159424 101.18297577]
[280.80969238 97.23598480]
[289.16680908 111.98709106]
[277.30566406 124.10111237]
[262.38156128 116.05699158]
[247.50755310 114.11695862]
[232.63352966 112.17692566]
[217.75952148 110.23690033]
[210.72404480 112.48758698]
[202.68572998 108.16024017]
[187.84121704 106.00606537]
[172.99670410 103.85189819]
[158.15219116 101.69772339]
[143.30767822 99.54354858]
[128.46318054 97.38938141]
[125.43280792 107.98777771]
[118.91505432 115.93514252]
[110.42916107 120.28366852]
[101.65081787 120.81746674]
[97.38713837 135.19873047]
[93.12345123 149.58001709]
[88.85976410 163.96128845]
[84.59608459 178.34255981]
[80.33239746 192.72383118]
[76.06871033 207.10510254]
[71.80503082 221.48637390]
[67.54134369 235.86764526]
[71.03685760 251.29786682]
[60.00103378 261.30087280]
[55.73735046 275.68212891]
[51.47366714 290.06341553]
[47.20998001 304.44470215]
[56.94338608 312.92355347]
[62.72768784 324.41134644]
[63.73574829 337.18676758]
[59.85312271 349.35055542]
[51.68983078 359.10775757]
[40.48479462 365.03256226]
[27.91790962 366.27664185]
[23.24155617 380.52908325]
[18.56520271 394.78152466]
[18.86363602 403.90573120]
[13.71740913 409.20477295]
[8.83615780 423.38833618]
[21.68661118 415.65103149]
[36.67452621 415.04898071]
[50.10418320 421.73062134]
[58.66410446 434.04840088]
[60.24359131 448.96499634]
[54.45316696 462.80230713]
[42.72064209 472.14831543]
[27.93900871 474.69848633]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 30]
[3 29]
[4 28]
[7 25]
[8 24]
[9 22]
[10 21]
[11 20]
[12 19]
[13 18]
[32 209]
[33 208]
[34 206]
[35 205]
[36 204]
[41 197]
[42 196]
[43 195]
[44 194]
[46 192]
[47 191]
[48 190]
[49 189]
[50 188]
[51 187]
[52 186]
[53 185]
[54 184]
[56 144]
[57 143]
[58 142]
[60 140]
[61 139]
[62 138]
[63 137]
[64 136]
[72 96]
[73 95]
[74 94]
[75 93]
[76 92]
[77 91]
[78 90]
[106 131]
[107 130]
[108 129]
[109 128]
[111 125]
[112 124]
[113 123]
[114 122]
[157 180]
[158 179]
[159 178]
[160 177]
[161 176]
[162 175]
[163 173]
[164 172]
[165 171]
[166 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
