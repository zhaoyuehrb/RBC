%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:58:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUGCCGGAUGUUGUUGUAUGUCCGAGAGACACGUGAGGUUCUGCUACGUCAUUACCAGGCACGCGCAGGAAACAUGGCGGCGGCGGGUGUUGUGAGCGGGAAGGUUUUUGGUUUCUUCUUGAUUCAAUCUUGAUAAGUAGUAUGUGUCCAGGACUUUAUCCAUACUCCAGUUUGUUGGAGUAUGGUAGGAGUAUGAUUAUAUAUGAACAAGAAGGAGUAUAUAUUCACUCAUCUUGUGGAA\
) } def
/len { sequence length } bind def

/coor [
[75.99295807 213.16220093]
[60.48745728 212.56298828]
[48.31630707 202.93788147]
[44.15956497 187.98793030]
[49.61558151 173.46168518]
[62.58640671 164.94480896]
[63.16565704 149.95599365]
[48.56669235 146.51068115]
[42.38341522 160.17695618]
[36.20014191 173.84323120]
[30.01686668 187.50950623]
[23.83359146 201.17578125]
[17.65031624 214.84205627]
[23.45913315 229.54013062]
[17.09691620 244.00724792]
[2.33825469 249.66035461]
[-12.06079769 243.14553833]
[-17.55753899 228.32792664]
[-10.89085007 213.99856567]
[3.98404050 208.65878296]
[10.16731548 194.99250793]
[16.35058975 181.32623291]
[22.53386497 167.65995789]
[28.71714020 153.99368286]
[34.90041351 140.32740784]
[28.71714020 126.66112518]
[14.37006092 122.28376007]
[0.02298230 117.90639496]
[-14.32409668 113.52902985]
[-28.67117500 109.15166473]
[-43.01825333 104.77429199]
[-57.36533356 100.39692688]
[-66.46407318 100.88688660]
[-71.86828613 95.86974335]
[-86.15782166 91.30802155]
[-101.65737915 94.48200989]
[-111.42880249 83.24063110]
[-125.71833038 78.67890930]
[-140.00785828 74.11718750]
[-159.50959778 79.27670288]
[-171.85473633 64.37794495]
[-186.25698853 60.18565750]
[-200.65924072 55.99337387]
[-215.06147766 51.80109024]
[-229.46372986 47.60880280]
[-243.86598206 43.41651917]
[-258.26821899 39.22423553]
[-267.35989380 39.83129883]
[-272.82827759 34.88415146]
[-287.17535400 30.50678444]
[-296.27407837 30.99674416]
[-301.67831421 25.97960091]
[-315.96783447 21.41787720]
[-331.46740723 24.59186554]
[-341.23883057 13.35048866]
[-355.52835083 8.78876591]
[-369.81787109 4.22704315]
[-384.10742188 -0.33467916]
[-395.89199829 4.87258625]
[-407.69046021 0.79489869]
[-413.36752319 -9.87112141]
[-427.59713745 -14.61644363]
[-436.70547485 -14.36092091]
[-441.97872925 -19.51554871]
[-456.14605713 -24.44368553]
[-470.31341553 -29.37182045]
[-484.51217651 -34.20864868]
[-498.74179077 -38.95397186]
[-510.18133545 -28.70544624]
[-525.21582031 -25.56544304]
[-539.80108643 -30.37860870]
[-550.01367188 -41.85022736]
[-553.10656738 -56.89448547]
[-548.24768066 -71.46456146]
[-536.74414062 -81.64117432]
[-521.69024658 -84.68685913]
[-507.13546753 -79.78235626]
[-496.99496460 -68.24694061]
[-493.99645996 -53.18358612]
[-479.76684570 -48.43826294]
[-472.44351196 -49.30184555]
[-465.38528442 -43.53915787]
[-451.21792603 -38.61102295]
[-437.05059814 -33.68288803]
[-422.85183716 -28.84605789]
[-408.62222290 -24.10073471]
[-391.63183594 -28.53033638]
[-379.54568481 -14.62421036]
[-365.25616455 -10.06248760]
[-350.96661377 -5.50076485]
[-336.67709351 -0.93904245]
[-322.19961548 -4.43931627]
[-311.40612793 7.12834692]
[-297.11657715 11.69006920]
[-282.79797363 16.15970612]
[-268.45089722 20.53707314]
[-254.07594299 24.82198715]
[-239.67369080 29.01427078]
[-225.27143860 33.20655441]
[-210.86920166 37.39884186]
[-196.46694946 41.59112549]
[-182.06469727 45.78340912]
[-167.66246033 49.97569275]
[-159.20863342 44.28382492]
[-148.79856873 44.17064285]
[-139.85375977 49.91405869]
[-135.44613647 59.82765579]
[-121.15660858 64.38938141]
[-106.86708069 68.95110321]
[-92.38960266 65.45082855]
[-81.59609985 77.01849365]
[-67.30656433 81.58021545]
[-52.98796463 86.04985046]
[-38.64088821 90.42721558]
[-24.29380798 94.80458069]
[-9.94672966 99.18195343]
[4.40034866 103.55931854]
[18.74742699 107.93668365]
[33.09450531 112.31404877]
[45.95422363 104.59215546]
[48.83320999 89.87103271]
[51.71219635 75.14990997]
[54.59117889 60.42879105]
[52.82022476 54.09571838]
[54.27927017 48.63174057]
[57.73846817 45.36787033]
[60.99553680 30.72575569]
[64.25260925 16.08364296]
[58.81899643 0.61082983]
[69.70587158 -11.65326023]
[85.71375275 -8.09238434]
[90.37509918 7.63033485]
[78.89472198 19.34071159]
[75.63764954 33.98282623]
[72.38058472 48.62493896]
[69.31230164 63.30777359]
[66.43331909 78.02890015]
[63.55433273 92.75002289]
[60.67534637 107.47113800]
[73.60640717 75.05050659]
[104.27630615 67.67086029]
[125.44309998 86.28947449]
[140.04206848 82.84415436]
[154.64102173 79.39884186]
[169.23999023 75.95352173]
[183.83895874 72.50820923]
[198.43792725 69.06288910]
[213.03689575 65.61757660]
[221.37002563 52.45715332]
[236.22453308 49.17108154]
[248.71961975 57.19654846]
[263.31860352 53.75123215]
[270.74102783 43.22035217]
[282.95520020 40.64244080]
[293.31301880 46.86406326]
[307.95513916 43.60699463]
[322.59722900 40.34992599]
[337.23934937 37.09285736]
[351.88146973 33.83578873]
[360.38336182 20.78374672]
[375.27893066 17.68919754]
[387.66967773 25.87487602]
[402.31176758 22.61780739]
[416.95388794 19.36073875]
[431.59600830 16.10367012]
[446.23812866 12.84660149]
[460.88024902 9.58953285]
[475.52233887 6.33246422]
[490.16445923 3.07539558]
[504.80657959 -0.18167293]
[519.44866943 -3.43874145]
[534.09082031 -6.69580984]
[545.80120850 -18.17618942]
[561.52392578 -13.51484394]
[565.08477783 2.49303508]
[552.82067871 13.37991333]
[537.34790039 7.94630384]
[522.70574951 11.20337296]
[508.06365967 14.46044159]
[493.42153931 17.71751022]
[478.77941895 20.97457886]
[464.13729858 24.23164749]
[449.49517822 27.48871613]
[434.85308838 30.74578285]
[420.21096802 34.00285339]
[405.56884766 37.25992203]
[390.92672729 40.51699066]
[383.17443848 53.18338776]
[368.37164307 56.69509888]
[355.13854980 48.47790146]
[340.49642944 51.73497009]
[325.85430908 54.99203873]
[311.21218872 58.24910736]
[296.57006836 61.50617599]
[284.28430176 74.05027008]
[266.76391602 68.35019684]
[252.16494751 71.79551697]
[244.57637024 84.56066895]
[229.82002258 88.26268005]
[216.48220825 80.21654510]
[201.88323975 83.66185760]
[187.28427124 87.10717773]
[172.68531799 90.55249023]
[158.08634949 93.99780273]
[143.48738098 97.44312286]
[128.88841248 100.88843536]
[128.68481445 115.51263428]
[120.80745697 129.76824951]
[105.78523254 139.60778809]
[113.17345428 152.66207886]
[120.56166840 165.71635437]
[127.94989014 178.77062988]
[135.33811951 191.82490540]
[142.72633362 204.87918091]
[154.91201782 209.06259155]
[160.80088806 220.06954956]
[157.72206116 231.75346375]
[164.94158936 244.90177917]
[172.16113281 258.05010986]
[179.38066101 271.19842529]
[194.79074097 273.01748657]
[206.16566467 283.57165527]
[209.13154602 298.80267334]
[202.54794312 312.85385132]
[188.94638062 320.32223511]
[173.55693054 318.33612061]
[162.29716492 307.65917969]
[159.49668884 292.39688110]
[166.23234558 278.41796875]
[159.01280212 265.26965332]
[151.79327393 252.12132263]
[144.57374573 238.97299194]
[129.09584045 230.68269348]
[129.67205811 212.26741028]
[122.28383636 199.21313477]
[114.89561462 186.15884399]
[107.50739288 173.10456848]
[100.11917114 160.05029297]
[92.73094940 146.99601746]
[78.15446472 150.53524780]
[77.57521820 165.52404785]
[89.85006714 175.01657104]
[94.16873932 189.92054749]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 241]
[7 240]
[8 25]
[9 24]
[10 23]
[11 22]
[12 21]
[13 20]
[26 119]
[27 118]
[28 117]
[29 116]
[30 115]
[31 114]
[32 113]
[34 112]
[35 111]
[37 109]
[38 108]
[39 107]
[41 103]
[42 102]
[43 101]
[44 100]
[45 99]
[46 98]
[47 97]
[49 96]
[50 95]
[52 94]
[53 93]
[55 91]
[56 90]
[57 89]
[58 88]
[61 86]
[62 85]
[64 84]
[65 83]
[66 82]
[67 80]
[68 79]
[120 139]
[121 138]
[122 137]
[123 136]
[126 135]
[127 134]
[128 133]
[142 206]
[143 205]
[144 204]
[145 203]
[146 202]
[147 201]
[148 200]
[151 197]
[152 196]
[155 194]
[156 193]
[157 192]
[158 191]
[159 190]
[162 187]
[163 186]
[164 185]
[165 184]
[166 183]
[167 182]
[168 181]
[169 180]
[170 179]
[171 178]
[172 177]
[209 239]
[210 238]
[211 237]
[212 236]
[213 235]
[214 234]
[217 232]
[218 231]
[219 230]
[220 229]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
