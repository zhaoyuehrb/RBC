%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:47:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGAGGCCCCAGCAGCCGAAGGGAAACCGGCGCGUCCCCCGCCCGCCCAGGCGUCAGCUGAUGGGCUGCCUGCCGAGGAGGCCGCAGCAGUCGCCGCGCGAACAUGGCGGCCGAAAUCCACUCCAGGCCGCAGAGCAGCCGCCCGGUGCUGCUGAGCAAGAUCGAGGGGCACCAGGACGCCGUCACGGCCGCGCUGCUCAUCC\
) } def
/len { sequence length } bind def

/coor [
[86.01263428 163.88603210]
[75.42325592 153.26222229]
[71.87825012 138.68714905]
[76.40544128 124.38664246]
[87.69002533 114.50800323]
[74.26257324 121.19407654]
[60.83512497 127.88014984]
[47.40767288 134.56622314]
[33.98022461 141.25230408]
[20.65732765 148.14436340]
[7.44214582 155.24076843]
[-5.77303743 162.33715820]
[-18.98822021 169.43356323]
[-29.13030815 188.30676270]
[-49.71238708 186.81623840]
[-62.58573151 194.51539612]
[-75.45907593 202.21455383]
[-77.49990845 212.90550232]
[-84.93682861 220.54885864]
[-95.13890839 222.78710938]
[-104.68243408 219.11648560]
[-117.78677368 226.41555786]
[-130.89111328 233.71463013]
[-132.99093628 237.52967834]
[-135.90423584 240.20584106]
[-139.17199707 241.62718201]
[-142.34474182 241.83908081]
[-145.03456116 241.03115845]
[-158.56338501 247.50967407]
[-172.09219360 253.98817444]
[-178.48498535 260.52075195]
[-185.87960815 260.46047974]
[-199.50657654 266.72988892]
[-213.13356018 272.99929810]
[-220.02413940 287.48721313]
[-235.67956543 290.99252319]
[-248.09033203 280.82629395]
[-247.73596191 264.78713989]
[-234.88829041 255.17897034]
[-219.40296936 259.37231445]
[-205.77598572 253.10292053]
[-192.14900208 246.83351135]
[-178.57070923 240.45936584]
[-165.04188538 233.98085022]
[-151.51307678 227.50234985]
[-138.19017029 220.61029053]
[-125.08583832 213.31121826]
[-111.98150635 206.01216125]
[-103.30393982 188.73608398]
[-83.15823364 189.34120178]
[-70.28488159 181.64204407]
[-57.41154099 173.94288635]
[-56.67583084 165.08489990]
[-51.87067032 157.44413757]
[-43.96829987 152.80445862]
[-34.67971039 152.31724548]
[-26.08462334 156.21838379]
[-12.86944103 149.12197876]
[0.34574232 142.02557373]
[13.56092548 134.92916870]
[15.77288818 130.69068909]
[20.67371750 127.79954529]
[27.29414940 127.82485199]
[40.72159958 121.13877869]
[54.14904785 114.45270538]
[67.57649994 107.76662445]
[81.00394440 101.08055115]
[88.10034943 87.86537170]
[86.25702667 72.97905731]
[84.41370392 58.09275436]
[82.57037354 43.20644379]
[80.72705078 28.32013702]
[66.68183136 22.26380920]
[57.61370087 10.07095337]
[55.87765884 -4.92413044]
[61.84046936 -18.68279457]
[73.80886078 -27.54977036]
[71.96553802 -42.43607712]
[70.12220764 -57.32238388]
[67.82133484 -72.14486694]
[65.06509399 -86.88946533]
[62.30884933 -101.63406372]
[59.55260849 -116.37865448]
[56.79636383 -131.12326050]
[54.04012299 -145.86784363]
[39.36534882 -149.91906738]
[27.95128059 -159.89935303]
[22.02657318 -173.78884888]
[22.71709061 -188.81163025]
[29.83236694 -201.99049377]
[41.91399384 -210.73690796]
[39.15774918 -225.48150635]
[36.40150833 -240.22610474]
[33.64526367 -254.97070312]
[24.79144287 -269.42913818]
[36.23384857 -281.93942261]
[51.42281723 -274.40737915]
[48.38986206 -257.72692871]
[51.14610291 -242.98234558]
[53.90234756 -228.23774719]
[56.65858841 -213.49314880]
[71.08393860 -209.70175171]
[82.47949219 -199.98316956]
[88.55023956 -186.22427368]
[88.04307556 -171.13246155]
[81.00506592 -157.70288086]
[68.78472137 -148.62409973]
[71.54096222 -133.87950134]
[74.29720306 -119.13490295]
[77.05344391 -104.39030457]
[79.80969238 -89.64570618]
[82.56593323 -74.90110779]
[84.80581665 -73.20677185]
[86.50756073 -70.52063751]
[87.28913116 -67.04392242]
[86.84856415 -63.11261749]
[85.00851440 -59.16571045]
[86.85184479 -44.27940369]
[88.69516754 -29.39309502]
[102.46485138 -23.71318245]
[111.60349274 -11.82448483]
[113.57739258 3.14114642]
[107.75714874 17.17758369]
[95.61335754 26.47681236]
[97.45668793 41.36312103]
[99.30001068 56.24942780]
[101.14333344 71.13573456]
[102.98665619 86.02204132]
[106.79394531 87.03188324]
[110.26638031 89.08222961]
[113.11919403 92.06339264]
[115.10322571 95.78781128]
[116.02613831 100.00152588]
[129.83972168 105.84832001]
[143.65330505 111.69510651]
[157.46688843 117.54189301]
[171.28047180 123.38867950]
[185.09405518 129.23547363]
[198.90763855 135.08226013]
[212.76582336 140.82250977]
[226.66781616 146.45588684]
[263.97576904 120.99996948]
[278.72036743 123.75621033]
[293.70730591 118.68643188]
[304.79614258 128.63061523]
[319.54074097 131.38685608]
[334.28533936 134.14309692]
[349.02993774 136.89933777]
[363.77453613 139.65559387]
[378.51913452 142.41183472]
[393.50604248 137.34204102]
[404.59487915 147.28623962]
[419.33947754 150.04248047]
[434.10485840 152.68510437]
[448.89016724 155.21395874]
[461.64312744 145.87924194]
[477.24850464 148.37884521]
[486.44787598 161.22981262]
[483.78341675 176.80787659]
[470.83590698 185.87086487]
[455.28689575 183.04185486]
[446.36129761 169.99925232]
[431.57601929 167.47039795]
[424.44894409 169.44247437]
[416.58325195 164.78707886]
[401.83865356 162.03083801]
[387.90634155 167.29776001]
[375.76287842 157.15643311]
[361.01828003 154.40017700]
[346.27368164 151.64393616]
[331.52908325 148.88769531]
[316.78448486 146.13145447]
[302.03988647 143.37521362]
[288.10760498 148.64213562]
[275.96414185 138.50080872]
[261.21954346 135.74456787]
[257.17355347 142.05963135]
[249.08163452 154.68977356]
[245.03565979 161.00485229]
[253.70227051 173.24780273]
[262.36886597 185.49075317]
[271.03549194 197.73371887]
[285.12191772 207.16815186]
[279.95571899 223.31579590]
[263.00897217 222.82159424]
[258.79254150 206.40031433]
[250.12591553 194.15736389]
[241.45932007 181.91441345]
[232.79270935 169.67146301]
[221.03443909 160.35786438]
[207.13244629 154.72448730]
[199.74850464 155.12620544]
[193.06085205 148.89584351]
[179.24726868 143.04905701]
[165.43368530 137.20227051]
[151.62010193 131.35546875]
[137.80651855 125.50868988]
[123.99293518 119.66190338]
[110.17935181 113.81510925]
[122.05213165 122.98228455]
[127.44985962 136.97744751]
[124.80753326 151.74288940]
[114.89125824 162.99755859]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 67]
[6 66]
[7 65]
[8 64]
[9 63]
[10 60]
[11 59]
[12 58]
[13 57]
[15 52]
[16 51]
[17 50]
[21 48]
[22 47]
[23 46]
[28 45]
[29 44]
[30 43]
[32 42]
[33 41]
[34 40]
[68 128]
[69 127]
[70 126]
[71 125]
[72 124]
[77 119]
[78 118]
[79 117]
[80 112]
[81 111]
[82 110]
[83 109]
[84 108]
[85 107]
[91 101]
[92 100]
[93 99]
[94 98]
[133 199]
[134 198]
[135 197]
[136 196]
[137 195]
[138 194]
[139 193]
[140 191]
[141 190]
[142 176]
[143 175]
[145 173]
[146 172]
[147 171]
[148 170]
[149 169]
[150 168]
[152 166]
[153 165]
[154 163]
[155 162]
[179 189]
[180 188]
[181 187]
[182 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
