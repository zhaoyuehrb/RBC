%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:37:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUUCUUGCUGAGGUCAAAGGCCUGCGUCAGUUGCACUGUAGCCUCGGCAGUGAACCGGGAGGUACUACCAGGUCGCCGUCGUUGCUCCGCUCGCUCUGAGAGAGCAUGGCCCUGAGAGGCGUCUCCGUGCGGCUGCUGAGCCGCGGACCCGGCCUGCACGUCCUUCGCACGUGGGUCUCGUCGGCGGCGCAGACCGAGAAAGGCG\
) } def
/len { sequence length } bind def

/coor [
[76.82617950 187.69718933]
[73.41976166 173.08909607]
[75.68257904 158.26075745]
[83.29091644 145.33354187]
[95.15789795 136.15600586]
[83.11608887 145.09997559]
[71.07427216 154.04396057]
[59.10001755 163.07818604]
[47.19400024 172.20214844]
[35.28798294 181.32611084]
[23.38196754 190.45008850]
[11.47595024 199.57405090]
[-0.43006653 208.69801331]
[-12.33608341 217.82197571]
[-24.24209976 226.94595337]
[-36.14811707 236.06991577]
[-48.05413437 245.19387817]
[-47.79196167 260.59640503]
[-56.54721069 273.05429077]
[-70.79083252 277.91055298]
[-84.99278259 273.50115967]
[-96.89879608 282.62512207]
[-108.73590088 291.83831787]
[-120.50343323 301.14022827]
[-122.77538300 313.83773804]
[-132.76939392 321.34298706]
[-144.79956055 320.06811523]
[-156.70558167 329.19207764]
[-162.48754883 344.53811646]
[-178.71037292 346.93643188]
[-188.68539429 333.91986084]
[-182.15116882 318.87872314]
[-165.82954407 317.28604126]
[-153.92352295 308.16207886]
[-148.08178711 291.61465454]
[-129.80532837 289.37268066]
[-118.03779602 280.07080078]
[-114.73928833 273.45571899]
[-106.02276611 270.71911621]
[-94.11674500 261.59515381]
[-94.68153381 246.73516846]
[-86.28857422 234.24427795]
[-71.98261261 229.02961731]
[-57.17810059 233.28787231]
[-45.27208328 224.16389465]
[-33.36606598 215.03993225]
[-21.46005058 205.91596985]
[-9.55403328 196.79199219]
[2.35198402 187.66802979]
[14.25800133 178.54406738]
[26.16401863 169.42010498]
[38.07003403 160.29612732]
[49.97605133 151.17216492]
[53.37361908 144.60743713]
[62.13029480 142.00215149]
[74.17211151 133.05816650]
[86.21392059 124.11418915]
[75.54850769 101.73896027]
[86.94881439 83.23048401]
[82.50697327 68.90323639]
[78.06513214 54.57598495]
[73.51573181 40.28252792]
[68.85903931 26.02366257]
[57.21982193 15.30735874]
[60.62369537 0.80691385]
[55.96700287 -13.45195007]
[50.32722092 -20.63942528]
[51.34922028 -27.96026039]
[46.90737915 -42.28750992]
[33.20467377 -49.69518661]
[28.90411186 -64.28833008]
[36.05064392 -77.30610657]
[31.60880089 -91.63336182]
[27.16695786 -105.96060944]
[22.72511673 -120.28785706]
[18.13777924 -125.05242157]
[16.84111404 -130.58757019]
[18.37208557 -135.11291504]
[14.36290741 -149.56719971]
[10.35372829 -164.02148438]
[6.34454870 -178.47578430]
[3.13822508 -181.40904236]
[1.22541189 -184.86291504]
[0.61088723 -188.36653137]
[1.14591658 -191.49588013]
[2.55686426 -193.91984558]
[-0.57651263 -208.58892822]
[-3.70988941 -223.25801086]
[-6.84326649 -237.92709351]
[-9.97664356 -252.59617615]
[-20.35745811 -260.25305176]
[-22.66460991 -272.53662109]
[-16.19720459 -282.76025391]
[-19.10973740 -297.47476196]
[-22.02227020 -312.18930054]
[-34.49959183 -322.27374268]
[-34.25065613 -338.31484985]
[-21.46642685 -348.00729370]
[-5.95387125 -343.91580200]
[0.38710740 -329.17907715]
[-7.30774784 -315.10183716]
[-4.39521551 -300.38729858]
[-1.48268318 -285.67279053]
[10.77059269 -273.11090088]
[4.69243813 -255.72955322]
[7.82581520 -241.06047058]
[10.95919228 -226.39138794]
[14.09256840 -211.72230530]
[17.22594643 -197.05322266]
[20.79883766 -182.48495483]
[24.80801773 -168.03067017]
[28.81719589 -153.57638550]
[32.82637405 -139.12208557]
[37.05236435 -124.72969818]
[41.49420547 -110.40245056]
[45.93605042 -96.07520294]
[50.37789154 -81.74795532]
[63.63502884 -75.05587006]
[68.34378815 -60.58927917]
[61.23462677 -46.72935104]
[65.67646790 -32.40210342]
[70.22586823 -18.10864449]
[74.88256073 -3.84977961]
[86.18869781 5.84663391]
[83.11790466 21.36696815]
[87.77459717 35.62583160]
[92.84012604 41.00909805]
[92.39237976 50.13414383]
[96.83422089 64.46138763]
[101.27606201 78.78864288]
[116.70426178 83.57693481]
[125.57730865 98.89665985]
[121.41055298 117.69570923]
[135.83430481 121.81340790]
[150.25805664 125.93111420]
[164.71234131 129.94029236]
[179.19635010 133.84072876]
[193.68037415 137.74114990]
[208.16438293 141.64158630]
[213.21058655 140.29423523]
[217.80880737 140.95243835]
[221.26986694 143.10939026]
[223.20574951 146.05812073]
[237.49920654 150.60752869]
[251.79266357 155.15692139]
[266.08612061 159.70631409]
[280.37957764 164.25570679]
[295.87640381 161.06835938]
[305.65750122 172.30130005]
[319.95095825 176.85070801]
[334.24444580 181.40010071]
[348.15740967 174.39530945]
[362.58819580 179.21266174]
[369.18045044 192.51971436]
[383.47390747 197.06910706]
[397.76736450 201.61851501]
[412.06082153 206.16790771]
[426.35427856 210.71730042]
[440.64773560 215.26669312]
[454.94119263 219.81610107]
[474.41760254 214.62078857]
[486.81170654 229.46122742]
[501.23547363 233.57891846]
[515.90008545 227.07284546]
[530.06280518 234.60911560]
[532.85931396 250.40655518]
[522.14428711 262.34674072]
[506.13739014 261.27014160]
[497.11776733 248.00267029]
[482.69400024 243.88497925]
[474.24374390 249.63340759]
[463.80505371 249.78398132]
[454.82223511 244.04548645]
[450.39181519 234.10955811]
[436.09835815 229.56015015]
[421.80490112 225.01075745]
[407.51144409 220.46136475]
[393.21795654 215.91197205]
[378.92449951 211.36256409]
[364.63104248 206.81317139]
[351.55993652 213.86166382]
[336.99951172 209.45155334]
[329.69503784 195.69355774]
[315.40158081 191.14416504]
[301.10812378 186.59477234]
[286.63366699 190.10752869]
[275.83020020 178.54917908]
[261.53671265 173.99977112]
[247.24327087 169.45037842]
[232.94979858 164.90098572]
[218.65634155 160.35159302]
[204.26394653 156.12559509]
[189.77993774 152.22517395]
[175.29592896 148.32473755]
[160.81192017 144.42430115]
[153.53463745 145.72062683]
[146.14035034 140.35485840]
[131.71659851 136.23716736]
[117.29285431 132.11946106]
[131.63389587 136.51657104]
[143.31599426 145.92552185]
[150.66789246 159.00030518]
[152.63781738 173.87039185]
[148.94393921 188.40844727]
[140.11473083 200.53466797]
[127.41329956 208.51423645]
[112.65671539 211.20559692]
[97.95609283 208.22370911]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 57]
[6 56]
[7 55]
[8 53]
[9 52]
[10 51]
[11 50]
[12 49]
[13 48]
[14 47]
[15 46]
[16 45]
[17 44]
[21 40]
[22 39]
[23 37]
[24 36]
[27 34]
[28 33]
[59 130]
[60 129]
[61 128]
[62 126]
[63 125]
[65 123]
[66 122]
[68 121]
[69 120]
[72 117]
[73 116]
[74 115]
[75 114]
[78 113]
[79 112]
[80 111]
[81 110]
[86 109]
[87 108]
[88 107]
[89 106]
[90 105]
[93 103]
[94 102]
[95 101]
[133 199]
[134 198]
[135 197]
[136 195]
[137 194]
[138 193]
[139 192]
[143 191]
[144 190]
[145 189]
[146 188]
[147 187]
[149 185]
[150 184]
[151 183]
[154 180]
[155 179]
[156 178]
[157 177]
[158 176]
[159 175]
[160 174]
[162 170]
[163 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
