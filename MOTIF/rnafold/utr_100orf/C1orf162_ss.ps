%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:19:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGUUUAGUAAGAUCUUUGCUACACACAAUGUGAUGCUGGCAGUGGCAGGGGCAGUAAUCUUUAUUUCGUCAUUUUUGAAACAUAGAAGCCGUAACGGAAGCAAGUGAAAUGCUCAGUCUUAGACGACUGCGUCGUGCUAUGACCGGACUUUUUCUUGAAAGGGGAUGACAGCAUGGGAGGCAAUGGCUCCACAUGUAAACCCGACACUGAAAGACAAGGCACUCUCUCCACAGCAGCCCCAACAACUAGCCCUG\
CACCCUGUCUCUCUAACC\
) } def
/len { sequence length } bind def

/coor [
[-6.87851572 465.07040405]
[-24.40563202 472.93496704]
[-43.57741928 473.44546509]
[-48.31070328 487.67907715]
[-45.32339478 503.21569824]
[-56.68150330 512.85119629]
[-61.41478729 527.08483887]
[-66.14807129 541.31842041]
[-70.88135529 555.55206299]
[-75.61463928 569.78570557]
[-80.34792328 584.01928711]
[-74.47756958 598.94976807]
[-82.61506653 612.77581787]
[-98.51802063 614.89135742]
[-109.98705292 603.67352295]
[-108.22410583 587.72760010]
[-94.58155060 579.28601074]
[-89.84826660 565.05236816]
[-85.11498260 550.81878662]
[-80.38169098 536.58514404]
[-75.64840698 522.35150146]
[-70.91512299 508.11791992]
[-74.24098969 493.59936523]
[-62.54432678 482.94580078]
[-57.81104279 468.71218872]
[-66.89788055 462.72024536]
[-74.43850708 454.85723877]
[-80.05515289 445.51083374]
[-83.46501923 435.14312744]
[-84.49456787 424.26791382]
[-83.08831024 413.42501831]
[-79.31180573 403.15380859]
[-73.34859467 393.96600342]
[-65.49129486 386.32052612]
[-56.12726593 380.60031128]
[-45.71946335 377.09326172]
[-34.78359222 375.97775269]
[-23.86255074 377.31356812]
[-18.16204643 363.43899536]
[-12.46154118 349.56439209]
[-12.82498646 342.21084595]
[-6.61531925 335.56399536]
[-0.75611132 321.75567627]
[-2.90727019 307.01724243]
[9.60587597 297.33572388]
[15.46508408 283.52740479]
[21.32429123 269.71908569]
[27.18350029 255.91076660]
[33.04270554 242.10244751]
[38.90191650 228.29412842]
[44.76112366 214.48580933]
[50.54107285 200.64413452]
[56.24157715 186.76953125]
[61.94208527 172.89494324]
[67.64258575 159.02035522]
[53.30399704 148.47564697]
[42.23059845 134.54129028]
[35.19669724 118.19166565]
[32.69412994 100.56999207]
[17.77392387 99.02487183]
[2.85371590 97.47975159]
[-7.53401089 108.85522461]
[-22.45376778 111.89730072]
[-36.14205933 105.64472961]
[-43.43651581 92.68598938]
[-58.35672379 91.14086914]
[-73.27693176 89.59574890]
[-88.19713593 88.05062866]
[-103.11734772 86.50551605]
[-114.22282410 97.51470184]
[-129.81088257 98.75824738]
[-142.52131653 89.64897156]
[-146.35264587 74.48800659]
[-139.49584961 60.43389130]
[-125.18846893 54.12255096]
[-110.18603516 58.53400421]
[-101.57222748 71.58530426]
[-86.65202332 73.13042450]
[-71.73181152 74.67554474]
[-56.81160355 76.22066498]
[-41.89139557 77.76578522]
[-32.09623337 66.57682800]
[-17.41714668 63.26194382]
[-3.43738914 69.29682159]
[4.39883518 82.55954742]
[19.31904411 84.10466766]
[34.23925018 85.64978027]
[35.71647263 80.04924011]
[37.66971970 74.59643555]
[40.08453369 69.33174896]
[27.57677460 61.05189514]
[15.06901455 52.77204132]
[-1.47597599 49.07074356]
[-2.49943352 32.14771652]
[13.47891521 26.47949409]
[23.34886551 40.26428223]
[35.85662460 48.54413605]
[48.36438751 56.82398605]
[55.42418671 49.56785202]
[63.49243546 43.45265198]
[72.38659668 38.61673737]
[81.90547180 35.16950607]
[79.50800323 20.36234093]
[77.11054230 5.55517530]
[74.71308136 -9.25199127]
[64.86955261 -21.63809395]
[70.47317505 -35.43840790]
[68.07571411 -50.24557495]
[65.67824554 -65.05274200]
[63.28078461 -79.85990906]
[50.74687195 -89.10862732]
[48.52643585 -104.15934753]
[57.42091370 -116.05152130]
[55.02345276 -130.85868835]
[45.05409241 -139.00387573]
[43.34511566 -151.35963440]
[50.27092361 -161.24865723]
[48.04338837 -176.08235168]
[45.81585312 -190.91603088]
[36.11498260 -203.41416931]
[41.87646484 -217.14933777]
[39.64892960 -231.98301697]
[37.42139435 -246.81669617]
[35.10885620 -261.63735962]
[32.71139145 -276.44451904]
[30.31392860 -291.25170898]
[27.91646576 -306.05886841]
[25.51900291 -320.86602783]
[17.01881027 -335.53515625]
[28.76156616 -347.76397705]
[43.76319504 -339.86538696]
[40.32616806 -323.26348877]
[42.72363281 -308.45632935]
[45.12109375 -293.64916992]
[47.51855850 -278.84197998]
[49.91602325 -264.03482056]
[54.07160950 -257.95718384]
[52.25507355 -249.04423523]
[54.48260880 -234.21055603]
[56.71014404 -219.37687683]
[66.25168610 -207.93972778]
[60.64953232 -193.14355469]
[62.87706757 -178.30987549]
[65.10460663 -163.47619629]
[76.75981903 -150.33544922]
[69.83061981 -133.25614929]
[72.22808075 -118.44898987]
[84.42073059 -109.97107697]
[87.06303406 -94.98866272]
[78.08795166 -82.25737000]
[80.48541260 -67.45020294]
[82.88288116 -52.64303970]
[85.28034210 -37.83587265]
[94.95238495 -26.50887680]
[89.52024841 -11.64945412]
[91.91770935 3.15771198]
[94.31517029 17.96487808]
[96.71263885 32.77204514]
[120.22557068 35.80240631]
[141.22932434 46.79710770]
[157.11817932 64.39215088]
[165.92095947 86.40470123]
[180.85789490 85.03074646]
[195.79484558 83.65679932]
[210.73178101 82.28284454]
[223.76522827 73.31401825]
[237.14772034 79.85301971]
[252.08465576 78.47906494]
[255.99057007 63.85138321]
[264.64916992 51.46587372]
[276.99957275 42.80633545]
[291.54010010 38.90211105]
[306.51080322 40.20577621]
[320.10647583 46.54076004]
[330.69436646 57.12497330]
[337.01025391 70.66732025]
[351.94717407 69.29336548]
[366.88412476 67.91941833]
[381.82107544 66.54546356]
[396.75802612 65.17151642]
[411.68682861 63.71195221]
[426.60705566 62.16683578]
[436.55871582 50.18343353]
[451.71194458 48.82900620]
[463.07495117 58.39025879]
[477.99517822 56.84513855]
[490.92492676 47.72747040]
[504.38150024 54.11260223]
[519.30169678 52.56748199]
[526.51843262 41.22156906]
[538.76861572 36.16630173]
[551.50738525 39.03538132]
[560.14636230 48.56627274]
[575.08331299 47.19232178]
[590.01214600 45.73276138]
[604.93237305 44.18764114]
[619.85253906 42.64252472]
[628.46636963 29.59122467]
[643.46881104 25.17976761]
[657.77618408 31.49110794]
[664.63299561 45.54522324]
[660.80163574 60.70619202]
[648.09124756 69.81546783]
[632.50317383 68.57192230]
[621.39770508 57.56273270]
[606.47747803 59.10784912]
[591.55725098 60.65296936]
[585.25152588 64.45349884]
[576.45727539 62.12926483]
[561.52032471 63.50321579]
[551.31091309 76.88871002]
[534.24108887 78.76764679]
[520.84680176 67.48769379]
[505.92660522 69.03281403]
[494.06405640 78.03996277]
[479.54028320 71.76535034]
[464.62008667 73.31047058]
[455.45748901 84.99732971]
[440.34829712 86.77684021]
[428.15216064 77.08704376]
[413.23196411 78.63216400]
[406.92620850 82.43269348]
[398.13195801 80.10845947]
[383.19503784 81.48240662]
[368.25808716 82.85636139]
[353.32113647 84.23030853]
[338.38418579 85.60426331]
[334.64474487 100.07153320]
[326.16534424 112.40962219]
[313.95343018 121.11847687]
[299.47177124 125.13127136]
[284.46298218 123.94509125]
[270.74011230 117.68386078]
[259.96740723 107.08571625]
[253.45860291 93.41600800]
[238.52166748 94.78996277]
[226.55661011 103.66051483]
[212.10574341 97.21978760]
[197.16879272 98.59374237]
[182.23185730 99.96768951]
[167.29490662 101.34164429]
[166.31103516 111.54348755]
[163.78961182 121.47766876]
[159.78910828 130.91384888]
[154.40229797 139.63325500]
[147.75407410 147.43367004]
[139.99858093 154.13426208]
[131.31564331 159.57965088]
[121.90660858 163.64358521]
[111.98961639 166.23181152]
[101.79463196 167.28434753]
[91.55803680 166.77677917]
[81.51718140 164.72085571]
[75.81667328 178.59545898]
[70.11616516 192.47004700]
[64.41566467 206.34463501]
[64.05442047 215.43363953]
[58.56944275 220.34501648]
[52.71023560 234.15333557]
[46.85102844 247.96165466]
[40.99181747 261.76998901]
[35.13261032 275.57830811]
[29.27340317 289.38662720]
[23.41419601 303.19494629]
[25.14626503 318.92105103]
[13.05220795 327.61489868]
[7.19300032 341.42321777]
[1.41304898 355.26489258]
[-4.28745556 369.13949585]
[-9.98795986 383.01406860]
[4.26461840 396.13327026]
[12.35508060 413.69885254]
[13.05891228 432.99310303]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 25]
[4 24]
[6 22]
[7 21]
[8 20]
[9 19]
[10 18]
[11 17]
[38 270]
[39 269]
[40 268]
[42 267]
[43 266]
[45 264]
[46 263]
[47 262]
[48 261]
[49 260]
[50 259]
[51 258]
[52 256]
[53 255]
[54 254]
[55 253]
[59 87]
[60 86]
[61 85]
[65 81]
[66 80]
[67 79]
[68 78]
[69 77]
[90 98]
[91 97]
[92 96]
[102 158]
[103 157]
[104 156]
[105 155]
[107 153]
[108 152]
[109 151]
[110 150]
[113 147]
[114 146]
[117 144]
[118 143]
[119 142]
[121 140]
[122 139]
[123 138]
[124 136]
[125 135]
[126 134]
[127 133]
[128 132]
[162 241]
[163 240]
[164 239]
[165 238]
[167 236]
[168 235]
[176 227]
[177 226]
[178 225]
[179 224]
[180 223]
[181 221]
[182 220]
[185 217]
[186 216]
[188 214]
[189 213]
[193 210]
[194 209]
[195 207]
[196 206]
[197 205]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
