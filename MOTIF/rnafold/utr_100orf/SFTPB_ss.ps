%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:51:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUAAAUGCUCUUCUGACUAAUGCAAACCAUGUGUCCAUAGAACCAGAAGAUUUUUCCAGGGGAAAAGAGCCCCCACGCCCCGCCCAGCUAUAAGGGGCCAUGCACCAAGCAGGGUACCCAGGCUGCAGAGGUGCCAUGGCUGAGUCACACCUGCUGCAGUGGCUGCUGCUGCUGCUGCCCACGCUCUGUGGCCCAGGCA\
) } def
/len { sequence length } bind def

/coor [
[90.83338928 256.53823853]
[81.84414673 269.33383179]
[66.71991730 273.30767822]
[52.60188293 266.58346558]
[46.15616226 252.33612061]
[50.42622375 237.29283142]
[63.39587021 228.55656433]
[64.80049133 213.62248230]
[66.20511627 198.68838501]
[67.60973358 183.75430298]
[54.61935425 176.25430298]
[42.38836670 184.93778992]
[30.15737534 193.62126160]
[17.92638588 202.30474854]
[5.69539595 210.98823547]
[-6.53559399 219.67172241]
[-14.09060287 238.35517883]
[-33.39657974 239.34794617]
[-45.35019684 248.40945435]
[-57.30381393 257.47097778]
[-69.04171753 266.81021118]
[-80.55746460 276.42205811]
[-92.07320404 286.03393555]
[-103.58895111 295.64578247]
[-115.10469818 305.25762939]
[-117.97084045 321.04257202]
[-132.16671753 328.51629639]
[-146.80247498 321.94558716]
[-150.65080261 306.37091064]
[-140.75959778 293.73986816]
[-124.71654510 293.74188232]
[-113.20079803 284.13003540]
[-101.68505859 274.51818848]
[-90.16931152 264.90634155]
[-78.65356445 255.29447937]
[-77.97661591 251.82635498]
[-75.58136749 248.51538086]
[-71.56079102 246.16777039]
[-66.36532593 245.51736450]
[-54.41171265 236.45584106]
[-42.45809555 227.39433289]
[-41.97933578 217.17738342]
[-35.82318497 208.73590088]
[-25.82994843 205.00352478]
[-15.21907711 207.44073486]
[-2.98808765 198.75724792]
[9.24290276 190.07376099]
[21.47389221 181.39027405]
[33.70488358 172.70678711]
[45.93587112 164.02331543]
[45.64288712 156.52903748]
[30.74609947 158.28565979]
[15.84931278 160.04228210]
[1.20506287 163.28973389]
[-7.53959417 151.10240173]
[0.22698632 138.26962280]
[15.07999897 140.36392212]
[30.06845856 140.95220947]
[45.05691910 141.54048157]
[44.76393509 134.04620361]
[31.89235878 126.34409332]
[19.02078247 118.64198303]
[6.14920759 110.93987274]
[-8.06987476 117.15254211]
[-23.21780777 113.78806305]
[-33.46990204 102.14013672]
[-34.88402176 86.68763733]
[-26.91640282 73.37235260]
[-12.63076210 67.31429291]
[2.47978210 70.84290314]
[12.60491657 82.60135651]
[13.85132027 98.06829834]
[26.72289658 105.77040863]
[39.59447098 113.47251892]
[52.46604538 121.17463684]
[53.85115814 97.86761475]
[64.80476379 80.24745178]
[80.67604065 71.39508057]
[75.18034363 57.43809891]
[69.68463898 43.48111725]
[64.18894196 29.52413940]
[58.69324112 15.56715965]
[43.46783066 14.49492455]
[30.21969986 6.91536283]
[21.57927132 -5.66659880]
[19.26210785 -20.75280190]
[23.72828674 -35.34786987]
[34.09104156 -46.55393982]
[48.29284286 -52.14604187]
[63.51391220 -51.01385880]
[76.73209381 -43.38218307]
[85.32290649 -30.76629448]
[87.58064270 -15.67108345]
[83.05702209 -1.09371698]
[72.65022278 10.07145977]
[78.14591980 24.02843857]
[83.64161682 37.98542023]
[89.13732147 51.94239807]
[94.63301849 65.89937592]
[119.78288269 66.50656891]
[140.68942261 85.25507355]
[144.89831543 115.98143768]
[126.71883392 144.65361023]
[141.02752686 140.15234375]
[155.33621216 135.65107727]
[166.17852783 124.12915039]
[180.64108276 127.69059753]
[194.94976807 123.18933105]
[202.20390320 117.62456512]
[209.51737976 118.73141479]
[223.89466858 114.45433044]
[238.27195740 110.17723846]
[252.64926147 105.90015411]
[266.99267578 101.51084137]
[281.30136108 97.00957489]
[295.61004639 92.50830078]
[309.91876221 88.00703430]
[320.76104736 76.48510742]
[335.22360229 80.04655457]
[349.53228760 75.54528809]
[354.28533936 70.93083954]
[359.82406616 69.61347198]
[364.35900879 71.13450623]
[378.80139160 67.08264923]
[393.24377441 63.03078461]
[407.68615723 58.97892761]
[422.12854004 54.92706680]
[436.57092285 50.87520981]
[451.01330566 46.82334900]
[465.42358398 42.65874863]
[479.80087280 38.38166428]
[494.17816162 34.10457611]
[508.55545044 29.82748985]
[522.93273926 25.55040359]
[526.53063965 21.74632072]
[530.80187988 19.89349747]
[534.88830566 19.92100716]
[538.08496094 21.42685890]
[552.64691162 17.82836914]
[567.20886230 14.22987938]
[581.77087402 10.63139057]
[595.69696045 0.96182024]
[608.84375000 11.66686249]
[602.19647217 27.26333237]
[585.36932373 25.19335747]
[570.80737305 28.79184723]
[556.24542236 32.39033508]
[541.68347168 35.98882675]
[527.20983887 39.92769623]
[512.83251953 44.20478439]
[498.45526123 48.48186874]
[484.07797241 52.75895691]
[469.70065308 57.03604126]
[464.18142700 61.96048355]
[455.06515503 61.26573563]
[440.62277222 65.31759644]
[426.18038940 69.36945343]
[411.73800659 73.42131042]
[397.29562378 77.47316742]
[382.85324097 81.52503204]
[368.41085815 85.57688904]
[354.03356934 89.85397339]
[339.72488403 94.35524750]
[329.90603638 105.55521393]
[314.42001343 102.31571960]
[300.11132812 106.81699371]
[285.80264282 111.31826019]
[271.49395752 115.81953430]
[266.05236816 120.82962799]
[256.92633057 120.27744293]
[242.54904175 124.55453491]
[228.17175293 128.83161926]
[213.79446411 133.10870361]
[199.45103455 137.49801636]
[185.14234924 141.99928284]
[175.32348633 153.19924927]
[159.83747864 149.95976257]
[145.52879333 154.46102905]
[131.22010803 158.96231079]
[125.39872742 172.78662109]
[132.17723083 186.16764832]
[138.95573425 199.54867554]
[145.73423767 212.92970276]
[160.47154236 219.26937866]
[164.56437683 234.78158569]
[154.87306213 247.56666565]
[138.83197021 247.81700134]
[128.74642944 235.34056091]
[132.35321045 219.70820618]
[125.57471466 206.32717896]
[118.79620361 192.94615173]
[112.01770020 179.56512451]
[104.64923096 180.96357727]
[107.44590759 195.70054626]
[92.70888519 198.49699402]
[89.91229248 183.76046753]
[82.54382324 185.15892029]
[81.13920593 200.09301758]
[79.73458099 215.02709961]
[78.32995605 229.96119690]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 200]
[8 199]
[9 198]
[10 197]
[11 50]
[12 49]
[13 48]
[14 47]
[15 46]
[16 45]
[18 41]
[19 40]
[20 39]
[21 35]
[22 34]
[23 33]
[24 32]
[25 31]
[60 75]
[61 74]
[62 73]
[63 72]
[78 99]
[79 98]
[80 97]
[81 96]
[82 95]
[103 179]
[104 178]
[105 177]
[107 175]
[108 174]
[110 173]
[111 172]
[112 171]
[113 170]
[114 168]
[115 167]
[116 166]
[117 165]
[119 163]
[120 162]
[123 161]
[124 160]
[125 159]
[126 158]
[127 157]
[128 156]
[129 155]
[130 153]
[131 152]
[132 151]
[133 150]
[134 149]
[138 148]
[139 147]
[140 146]
[141 145]
[180 192]
[181 191]
[182 190]
[183 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
