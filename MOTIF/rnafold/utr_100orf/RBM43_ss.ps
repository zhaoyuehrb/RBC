%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:08:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGAAGGACCGCCCUUUUCUUCGUAGCCUCCAAGGGAGCUGGAACAAAAAACGAAACCAAAACCUGCCUGCUCGCUCCUCUCCCCAUCGCCUGCGUUCCGCUGGUUGUGGGCUUUCUGCGGCCGCUGAGGGCGCGUCUCCCCUCCGCCAUGGCAUCAGUUUUGAAUGUCAAGGAAUCCAAAGCUCCUGAAAGAACGGUUGUAGUUGCUGGUCUUCCAGUUGACCUUUUUAGUGAUCAAUUAUUGGCCG\
) } def
/len { sequence length } bind def

/coor [
[-1.56044519 93.66844940]
[-5.36338043 80.88512421]
[-19.91169167 77.23181152]
[-33.36297989 85.08679199]
[-48.06499100 81.17456818]
[-55.47061157 68.30241394]
[-70.01892090 64.64910889]
[-84.56723785 60.99580002]
[-99.11554718 57.34249496]
[-113.68661499 53.78103638]
[-128.27986145 50.31156540]
[-142.87310791 46.84209824]
[-157.46635437 43.37263107]
[-172.05958557 39.90316391]
[-186.65283203 36.43369675]
[-201.24607849 32.96422958]
[-212.48764038 45.10538101]
[-228.22999573 49.88628006]
[-244.14189148 46.09066010]
[-255.89526367 34.84845734]
[-260.34249878 19.30166245]
[-274.97833252 16.01658630]
[-289.61419678 12.73151112]
[-304.25006104 9.44643497]
[-318.88592529 6.16135883]
[-333.52175903 2.87628293]
[-340.58773804 15.68090630]
[-351.96905518 25.49215508]
[-366.42736816 30.87586403]
[-382.25723267 30.90056801]
[-397.48669434 25.28537750]
[-410.12301636 14.46889877]
[-418.41253662 -0.41354614]
[-433.12661743 2.50120687]
[-445.16024780 12.77263069]
[-459.14840698 7.65593624]
[-473.86248779 10.57068920]
[-488.57659912 13.48544216]
[-503.29067993 16.40019608]
[-515.32427979 26.67161942]
[-529.31243896 21.55492401]
[-544.02655029 24.46967697]
[-544.71282959 39.52930832]
[-548.98388672 53.98688889]
[-556.59130859 67.00188446]
[-567.09295654 77.81761169]
[-579.87811279 85.80525970]
[-594.20355225 90.50044250]
[-609.23645020 91.63018036]
[-624.10272217 89.12879944]
[-637.93811035 83.14172363]
[-649.93829346 74.01702881]
[-659.40545654 62.28522110]
[-665.78936768 48.62836456]
[-668.71875000 33.84045792]
[-668.02331543 18.78124809]
[-663.74353027 4.32625723]
[-656.12817383 -8.68412113]
[-645.61999512 -19.49347878]
[-632.82995605 -27.47337723]
[-618.50170898 -32.15987015]
[-603.46813965 -33.28049850]
[-588.60339355 -30.77010155]
[-574.77160645 -24.77463722]
[-562.77697754 -15.64267159]
[-553.31689453 -3.90512586]
[-546.94128418 9.75559521]
[-532.22723389 6.84084272]
[-521.24603271 -3.22209907]
[-506.20541382 1.68611300]
[-491.49133301 -1.22863996]
[-476.77725220 -4.14339304]
[-462.06317139 -7.05814552]
[-451.08197021 -17.12108803]
[-436.04138184 -12.21287537]
[-421.32730103 -15.12762833]
[-418.82150269 -22.19664955]
[-433.57122803 -19.46787643]
[-443.30917358 -30.87717819]
[-438.29730225 -45.01511383]
[-423.54754639 -47.74356461]
[-413.80993652 -36.33469009]
[-411.30416870 -43.40371323]
[-420.89758301 -54.93482590]
[-430.49096680 -66.46594238]
[-440.08438110 -77.99705505]
[-449.67779541 -89.52817535]
[-464.45181274 -95.18846130]
[-466.64367676 -109.92090607]
[-476.23709106 -121.45201874]
[-485.83047485 -132.98313904]
[-500.60452271 -138.64341736]
[-502.79638672 -153.37586975]
[-512.38977051 -164.90698242]
[-521.98321533 -176.43809509]
[-536.76135254 -184.74728394]
[-532.86785889 -201.24810791]
[-515.93408203 -202.07469177]
[-510.45208740 -186.03149414]
[-500.85867310 -174.50038147]
[-491.26525879 -162.96926880]
[-477.17742920 -158.13375854]
[-474.29937744 -142.57653809]
[-464.70596313 -131.04542542]
[-455.11257935 -119.51430511]
[-441.02471924 -114.67880249]
[-438.14666748 -99.12157440]
[-428.55325317 -87.59046173]
[-418.95986938 -76.05934906]
[-409.36645508 -64.52822876]
[-399.77304077 -52.99711609]
[-379.53271484 -59.87718201]
[-359.01519775 -57.37917709]
[-342.21206665 -46.60531616]
[-332.12545776 -30.20702362]
[-330.23669434 -11.75957298]
[-315.60083008 -8.47449684]
[-300.96496582 -5.18942070]
[-286.32913208 -1.90434492]
[-271.69326782 1.38073111]
[-257.05740356 4.66580725]
[-248.49684143 -5.95830107]
[-236.13685608 -11.89079952]
[-222.36079407 -11.92460918]
[-209.85235596 -5.99622583]
[-201.07276917 4.79083109]
[-197.77661133 18.37098312]
[-183.18336487 21.84045029]
[-168.59011841 25.30991936]
[-153.99688721 28.77938652]
[-139.40364075 32.24885559]
[-124.81038666 35.71832275]
[-110.21714783 39.18778992]
[-103.00080872 37.68100739]
[-95.46223450 42.79418182]
[-80.91392517 46.44749069]
[-66.36561584 50.10079575]
[-51.81730652 53.75410461]
[-39.20895004 45.90777206]
[-24.40285110 49.40549850]
[-16.25838280 62.68350220]
[-1.71007299 66.33681488]
[10.55113697 55.40462875]
[27.07887459 53.92912292]
[41.36635208 62.69039536]
[47.66981888 78.39906311]
[62.26306534 81.86853027]
[76.85630798 85.33800507]
[91.44955444 88.80747223]
[106.08541107 85.52239227]
[117.79600525 76.14892578]
[129.50660706 66.77545166]
[141.21719360 57.40198517]
[152.92779541 48.02851486]
[164.63839722 38.65504456]
[176.28962708 29.20788765]
[187.88102722 19.68741798]
[193.14195251 4.15504265]
[209.27462769 1.21073306]
[219.68313599 13.88334274]
[213.66009521 29.13637733]
[197.40150452 31.27882195]
[185.81008911 40.79929352]
[182.64393616 47.45672226]
[174.01185608 50.36564255]
[162.30126953 59.73911285]
[150.59066772 69.11257935]
[138.88006592 78.48605347]
[127.16947937 87.85951996]
[115.45887756 97.23298645]
[121.78385925 110.83426666]
[136.49794006 107.91950989]
[151.21202087 105.00476074]
[165.92610168 102.09000397]
[171.49009705 87.70092773]
[183.96359253 78.62265015]
[199.36637878 77.75201416]
[212.78344727 85.36684418]
[219.93348694 99.03726959]
[218.53492737 114.40110779]
[209.03405762 126.55581665]
[194.46255493 131.62287903]
[179.47015381 127.98539734]
[168.84085083 116.80408478]
[154.12677002 119.71884155]
[139.41268921 122.63359070]
[124.69860840 125.54834747]
[123.28767395 132.91442871]
[120.46579742 147.64660645]
[119.05486298 155.01269531]
[131.65036011 163.15846252]
[144.24586487 171.30422974]
[156.84135437 179.44998169]
[169.43685913 187.59574890]
[178.31811523 189.62007141]
[182.13897705 195.92457581]
[194.63069153 204.22860718]
[207.12242126 212.53263855]
[219.61415100 220.83665466]
[232.10586548 229.14068604]
[231.60554504 214.14903259]
[242.92988586 204.31240845]
[257.70407104 206.90541077]
[265.00195312 220.01040649]
[259.42645264 233.93569946]
[245.10047913 238.38288879]
[257.04385376 247.45790100]
[268.98721313 256.53292847]
[280.93060303 265.60794067]
[292.87396240 274.68295288]
[309.20199585 276.20861816]
[315.79791260 291.22280884]
[305.87640381 304.28021240]
[289.64389038 301.94848633]
[283.79895020 286.62631226]
[271.85559082 277.55130005]
[259.91220093 268.47628784]
[247.96884155 259.40127563]
[236.02546692 250.32624817]
[223.80184937 241.63241577]
[211.31011963 233.32838440]
[198.81838989 225.02435303]
[186.32667542 216.72033691]
[173.83494568 208.41630554]
[161.29109192 200.19125366]
[148.69558716 192.04548645]
[136.10009766 183.89971924]
[123.50460052 175.75396729]
[110.90910339 167.60820007]
[101.70423889 179.45178223]
[89.16718292 187.68721008]
[74.64203644 191.43156433]
[59.68604660 190.28341675]
[45.90263367 184.36584473]
[34.76952744 174.31329346]
[27.48030090 161.20347595]
[24.81643867 146.44190979]
[27.06352806 131.61117554]
[33.98066330 118.30128479]
[44.82625580 107.93918610]
[58.43754578 101.63579559]
[73.35527802 100.06690979]
[87.98008728 103.40071106]
[73.38684082 99.93124390]
[58.79359818 96.46177673]
[44.20035172 92.99230957]
[34.44741440 102.71258545]
[21.27136993 106.32206726]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 142]
[3 141]
[6 138]
[7 137]
[8 136]
[9 135]
[10 133]
[11 132]
[12 131]
[13 130]
[14 129]
[15 128]
[16 127]
[21 121]
[22 120]
[23 119]
[24 118]
[25 117]
[26 116]
[33 76]
[34 75]
[36 73]
[37 72]
[38 71]
[39 70]
[41 68]
[42 67]
[83 111]
[84 110]
[85 109]
[86 108]
[87 107]
[89 105]
[90 104]
[91 103]
[93 101]
[94 100]
[95 99]
[146 246]
[147 245]
[148 244]
[149 243]
[150 170]
[151 169]
[152 168]
[153 167]
[154 166]
[155 165]
[156 163]
[157 162]
[171 187]
[172 186]
[173 185]
[174 184]
[190 229]
[191 228]
[192 227]
[193 226]
[194 225]
[196 224]
[197 223]
[198 222]
[199 221]
[200 220]
[206 219]
[207 218]
[208 217]
[209 216]
[210 215]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
