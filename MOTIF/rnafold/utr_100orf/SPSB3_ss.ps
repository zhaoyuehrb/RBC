%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:48:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGGGAUUGUUUACGUCUCGCUCCGGGGCGGAAAGUGGGUCAGGGCCGGGCCGGCGGAGCGCGCAGCGGGGGCUGCAGAUUCUUUCCACCAUGGCCAGACGCCCCCGGAACAGCAGGGCCUGGCACUUCGUCCUGAGUGCAGCCCGCCGAGACGCAGAUGCCCGGGCCGUGGCUCUAGCAGGCUCCACUA\
) } def
/len { sequence length } bind def

/coor [
[93.42385101 285.95919800]
[95.76182556 270.49737549]
[107.52560425 260.19458008]
[107.03482056 245.20260620]
[106.54403687 230.21064758]
[106.05324554 215.21867371]
[95.04051208 205.25598145]
[94.32921600 190.05899048]
[104.85366821 178.57536316]
[104.36288452 163.58338928]
[103.87210083 148.59143066]
[103.38130951 133.59945679]
[96.36201477 130.95758057]
[82.32342529 125.67382812]
[75.30413055 123.03195190]
[65.05024719 133.97991943]
[54.79636383 144.92787170]
[44.54248047 155.87583923]
[34.28859711 166.82380676]
[24.03471184 177.77175903]
[13.78082657 188.71972656]
[7.36632395 204.41336060]
[-9.48971844 202.59397888]
[-12.40764904 185.89302063]
[2.83286572 178.46583557]
[13.08675003 167.51788330]
[23.34063530 156.56991577]
[33.59452057 145.62194824]
[43.84840393 134.67399597]
[54.10228729 123.72602844]
[64.35617065 112.77806854]
[64.11495209 102.28681946]
[66.74749756 92.67083740]
[71.75337982 84.65958405]
[78.46434021 78.77631378]
[86.11820221 75.30528259]
[93.93700409 74.28322601]
[101.20192719 75.51486969]
[106.48567200 61.47628021]
[111.76942444 47.43769073]
[117.05317688 33.39910507]
[122.33692932 19.36051369]
[127.62068176 5.32192564]
[125.24040222 -10.31920147]
[136.96496582 -19.50526619]
[142.24871826 -33.54385376]
[147.53247070 -47.58244324]
[152.81622314 -61.62103271]
[157.98493958 -75.70237732]
[163.03829956 -89.82553864]
[168.09164429 -103.94869995]
[173.14498901 -118.07186127]
[177.02726746 -132.56074524]
[179.71252441 -147.31843567]
[182.39778137 -162.07612610]
[185.08303833 -176.83381653]
[187.76828003 -191.59150696]
[190.45353699 -206.34919739]
[188.90983582 -215.36895752]
[193.30534363 -221.32553101]
[196.23170471 -236.03730774]
[199.03759766 -250.77253723]
[201.72285461 -265.53021240]
[204.40811157 -280.28790283]
[207.09335327 -295.04559326]
[192.67240906 -306.03784180]
[188.77182007 -326.42297363]
[200.70803833 -346.53573608]
[196.82575989 -361.02462769]
[192.94346619 -375.51348877]
[189.06118774 -390.00238037]
[185.17889404 -404.49127197]
[181.29661560 -418.98016357]
[177.41432190 -433.46905518]
[170.76338196 -435.28598022]
[165.04739380 -439.04824829]
[160.81283569 -444.35784912]
[158.45256042 -450.67083740]
[158.16950989 -457.35305786]
[159.95962524 -463.74362183]
[163.61544800 -469.22055054]
[168.74954224 -473.26104736]
[166.30612183 -488.06069946]
[163.86268616 -502.86035156]
[151.30010986 -512.07012939]
[149.03294373 -527.11389160]
[157.89045715 -539.03363037]
[155.44702148 -553.83325195]
[153.00358582 -568.63293457]
[144.45788574 -583.27557373]
[156.16261292 -595.54077148]
[171.18870544 -587.68884277]
[167.80323792 -571.07635498]
[170.24667358 -556.27667236]
[172.69010925 -541.47705078]
[184.90902710 -533.03704834]
[187.59783936 -518.06286621]
[178.66233826 -505.30380249]
[181.10575867 -490.50415039]
[183.54919434 -475.70449829]
[200.24327087 -459.69677734]
[191.90321350 -437.35134888]
[195.78549194 -422.86245728]
[199.66778564 -408.37356567]
[203.55006409 -393.88467407]
[207.43235779 -379.39578247]
[211.31463623 -364.90689087]
[215.19692993 -350.41799927]
[222.23759460 -347.83364868]
[219.67308044 -362.61279297]
[231.18988037 -372.22338867]
[245.27131653 -367.05493164]
[247.83612061 -352.27581787]
[236.31893921 -342.66491699]
[243.35961914 -340.08056641]
[255.69364929 -348.61706543]
[268.02767944 -357.15356445]
[280.36169434 -365.69006348]
[292.69570923 -374.22656250]
[305.02972412 -382.76309204]
[303.69464111 -398.06384277]
[310.20333862 -411.97543335]
[322.80499268 -420.75573730]
[338.10986328 -422.04284668]
[352.00097656 -415.49060059]
[360.74172974 -402.86145020]
[361.98089600 -387.55264282]
[355.38510132 -373.68212891]
[342.72863770 -364.98098755]
[327.41601562 -363.78982544]
[313.56622314 -370.42904663]
[301.23220825 -361.89254761]
[288.89819336 -353.35604858]
[276.56417847 -344.81954956]
[264.23013306 -336.28305054]
[251.89611816 -327.74655151]
[243.83419800 -300.58160400]
[221.85104370 -292.36035156]
[219.16580200 -277.60266113]
[216.48054504 -262.84497070]
[213.79528809 -248.08728027]
[215.69406128 -240.93214417]
[210.94348145 -233.11096191]
[208.01712036 -218.39916992]
[205.21122742 -203.66394043]
[202.52597046 -188.90625000]
[199.84072876 -174.14857483]
[197.15547180 -159.39088440]
[194.47021484 -144.63319397]
[191.78495789 -129.87550354]
[202.76843262 -140.09133911]
[217.36366272 -143.55242920]
[231.76477051 -139.35620117]
[242.21644592 -128.59690857]
[245.99328613 -114.08017731]
[242.11041260 -99.59144592]
[231.58035278 -88.90885925]
[217.14895630 -84.81803894]
[202.57940674 -88.38573456]
[191.67092896 -98.68161011]
[187.26814270 -113.01851654]
[182.21479797 -98.89535522]
[177.16145325 -84.77219391]
[172.10810852 -70.64903259]
[172.81597900 -63.28016281]
[166.85481262 -56.33728409]
[161.57106018 -42.29869461]
[156.28730774 -28.26010513]
[151.00355530 -14.22151566]
[153.76176453 0.41547766]
[141.65927124 10.60567665]
[136.37551880 24.64426613]
[131.09176636 38.68285370]
[125.80801392 52.72144318]
[120.52426147 66.76003265]
[115.24051666 80.79862213]
[131.08467102 102.55893707]
[118.37328339 133.10867310]
[118.86406708 148.10064697]
[119.35485077 163.09260559]
[119.84564209 178.08457947]
[131.09861755 188.85528564]
[131.38278198 204.06625366]
[121.04521942 214.72789001]
[121.53600311 229.71984863]
[122.02678680 244.71182251]
[122.51757812 259.70379639]
[134.93000793 269.21511841]
[138.27423096 284.49093628]
[130.97119141 298.31845093]
[116.46919250 304.16870117]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 187]
[4 186]
[5 185]
[6 184]
[9 181]
[10 180]
[11 179]
[12 178]
[15 31]
[16 30]
[17 29]
[18 28]
[19 27]
[20 26]
[21 25]
[38 176]
[39 175]
[40 174]
[41 173]
[42 172]
[43 171]
[45 169]
[46 168]
[47 167]
[48 166]
[49 164]
[50 163]
[51 162]
[52 161]
[53 150]
[54 149]
[55 148]
[56 147]
[57 146]
[58 145]
[60 144]
[61 143]
[62 141]
[63 140]
[64 139]
[65 138]
[68 108]
[69 107]
[70 106]
[71 105]
[72 104]
[73 103]
[74 102]
[82 100]
[83 99]
[84 98]
[87 95]
[88 94]
[89 93]
[115 136]
[116 135]
[117 134]
[118 133]
[119 132]
[120 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
