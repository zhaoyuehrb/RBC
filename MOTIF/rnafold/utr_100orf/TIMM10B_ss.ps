%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:25:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAGGUUACUUCCGGGGCGGCACCGAGAAGCUGAAACGGAAGUGGCGUACGGCAUGCGCCGGUGGCGUGAUGGAGCGGCAGCAGCAGCAGCAACAGCAACUGCGAAACCUGCGUGACUUCCUGUUGGUCUACAAUCGGAUGACAGAACUCUGCUUCCAGCGCUGUGUGC\
) } def
/len { sequence length } bind def

/coor [
[-115.78965759 316.95889282]
[-117.95033264 331.80245972]
[-129.87176514 340.90625000]
[-144.76048279 339.08245850]
[-154.13206482 327.37036133]
[-152.64648438 312.44491577]
[-165.05114746 320.87844849]
[-177.45579529 329.31198120]
[-189.86045837 337.74548340]
[-202.26512146 346.17901611]
[-214.66978455 354.61254883]
[-227.07444763 363.04608154]
[-239.47909546 371.47961426]
[-251.88375854 379.91314697]
[-264.28842163 388.34667969]
[-264.90084839 403.73925781]
[-274.34902954 415.68014526]
[-288.84530640 419.72018433]
[-302.77410889 414.51187134]
[-315.17877197 422.94540405]
[-327.58343506 431.37893677]
[-339.98809814 439.81243896]
[-340.33801270 455.32559204]
[-349.76626587 467.64984131]
[-364.64749146 472.04632568]
[-379.25955200 466.82449341]
[-387.98379517 453.99221802]
[-387.46557617 438.48379517]
[-377.90420532 426.26254272]
[-362.97616577 422.02774048]
[-348.42163086 427.40780640]
[-336.01696777 418.97427368]
[-323.61230469 410.54074097]
[-311.20764160 402.10720825]
[-310.92813110 387.23913574]
[-301.83978271 375.24472046]
[-287.26092529 370.85040283]
[-272.72195435 375.94201660]
[-260.31729126 367.50848389]
[-247.91262817 359.07495117]
[-235.50796509 350.64141846]
[-223.10331726 342.20788574]
[-210.69865417 333.77438354]
[-198.29399109 325.34085083]
[-185.88932800 316.90731812]
[-173.48468018 308.47378540]
[-161.08001709 300.04025269]
[-149.15876770 290.93618774]
[-137.75715637 281.18920898]
[-126.35554504 271.44226074]
[-114.95393372 261.69531250]
[-103.55232239 251.94834900]
[-100.49971008 245.18606567]
[-91.85054779 242.12939453]
[-80.27179718 232.59353638]
[-77.09547424 225.88847351]
[-68.39162445 222.99122620]
[-56.63964462 213.66967773]
[-44.88766861 204.34814453]
[-33.13569260 195.02661133]
[-27.97255135 181.05552673]
[-12.35236263 178.54151917]
[-0.60038477 169.21997070]
[4.56275511 155.24888611]
[20.18294334 152.73487854]
[31.93492126 143.41334534]
[43.68689728 134.09181213]
[55.43887711 124.77027130]
[58.73784256 118.12468719]
[67.49345398 115.38781738]
[79.41468811 106.28375244]
[82.91342926 81.51637268]
[110.54998779 73.18082428]
[116.70134735 59.50014877]
[122.85269928 45.81947708]
[129.00405884 32.13880539]
[135.02949524 18.40220642]
[140.92848206 4.61083698]
[146.70054626 -9.23413658]
[152.34518433 -23.13154793]
[157.98983765 -37.02895737]
[163.63447571 -50.92636871]
[154.82595825 -68.94485474]
[161.94140625 -87.37136841]
[180.00964355 -94.56855011]
[184.88014221 -108.75580597]
[189.75062561 -122.94306946]
[194.62112427 -137.13032532]
[187.93177795 -151.19767761]
[193.07325745 -165.51620483]
[206.52555847 -171.80676270]
[211.39605713 -185.99401855]
[207.72282410 -201.97650146]
[219.91014099 -212.94924927]
[235.42073059 -207.62445068]
[238.29864502 -191.47981262]
[225.58331299 -181.12353516]
[220.71281433 -166.93627930]
[227.46482849 -153.70956421]
[222.72755432 -139.25227356]
[208.80838013 -132.25984192]
[203.93788147 -118.07257843]
[199.06739807 -103.88531494]
[194.19689941 -89.69805908]
[201.06237793 -81.97920227]
[204.10894775 -72.02363586]
[202.71748352 -61.62405777]
[197.07438660 -52.68266296]
[188.14991760 -46.86323929]
[177.53187561 -45.28173065]
[171.88723755 -31.38431931]
[166.24259949 -17.48690796]
[160.59796143 -3.58949637]
[160.99572754 3.81919575]
[154.71986389 10.50983238]
[148.82086182 24.30120087]
[149.08245850 31.71595001]
[142.68473816 38.29016495]
[136.53337097 51.97083664]
[130.38201904 65.65151215]
[124.23065948 79.33218384]
[131.00366211 92.71599579]
[145.67012024 95.86161804]
[160.33657837 99.00724792]
[175.00303650 102.15287018]
[186.26142883 95.80829620]
[198.43118286 98.75617981]
[205.09599304 108.87961578]
[219.70219421 112.29414368]
[234.30839539 115.70867157]
[248.91459656 119.12320709]
[262.20651245 110.57331085]
[277.63305664 114.00801849]
[286.04193115 127.38957977]
[282.44430542 142.77894592]
[268.97460938 151.04588318]
[253.62413025 147.28576660]
[245.50006104 133.72940063]
[230.89385986 130.31486511]
[216.28765869 126.90033722]
[201.68147278 123.48580933]
[185.20495605 129.47938538]
[171.85740662 116.81932831]
[157.19094849 113.67370605]
[142.52449036 110.52807617]
[127.85803223 107.38245392]
[120.15856934 117.95515442]
[109.20885468 123.42631531]
[97.80720520 123.24396515]
[88.51876068 118.20498657]
[76.59751892 127.30905914]
[64.76041412 136.52224731]
[53.00843430 145.84378052]
[41.25645828 155.16531372]
[29.50447845 164.48684692]
[23.50075912 179.12467957]
[8.72115040 180.97195435]
[-3.03082681 190.29348755]
[-9.03454685 204.93132019]
[-23.81415558 206.77859497]
[-35.56613159 216.10012817]
[-47.31811142 225.42166138]
[-59.07008743 234.74319458]
[-70.73594666 244.17228699]
[-82.31469727 253.70814514]
[-93.80535889 263.34997559]
[-105.20697784 273.09692383]
[-116.60858917 282.84387207]
[-128.01020813 292.59085083]
[-139.41181946 302.33779907]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 47]
[7 46]
[8 45]
[9 44]
[10 43]
[11 42]
[12 41]
[13 40]
[14 39]
[15 38]
[19 34]
[20 33]
[21 32]
[22 31]
[48 170]
[49 169]
[50 168]
[51 167]
[52 166]
[54 165]
[55 164]
[57 163]
[58 162]
[59 161]
[60 160]
[62 158]
[63 157]
[65 155]
[66 154]
[67 153]
[68 152]
[70 151]
[71 150]
[73 121]
[74 120]
[75 119]
[76 118]
[77 116]
[78 115]
[79 113]
[80 112]
[81 111]
[82 110]
[85 104]
[86 103]
[87 102]
[88 101]
[91 98]
[92 97]
[122 146]
[123 145]
[124 144]
[125 143]
[128 141]
[129 140]
[130 139]
[131 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
