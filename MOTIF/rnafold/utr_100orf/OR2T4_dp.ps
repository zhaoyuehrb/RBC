%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:27:36 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR2T4)
} def

/sequence { (\
AUGGACAACAUCACCUGGAUGGCCAGCCACACUGGAUGGUCGGAUUUCAUCCUGAUGGGACUCUUCAGACAAUCCAAACAUCCAAUGGCCAAUAUCACCU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.321051814 ubox
1 20 0.004865363 ubox
1 93 0.020377494 ubox
1 95 0.011762411 ubox
2 10 0.377382321 ubox
2 13 0.140023049 ubox
2 17 0.029431749 ubox
2 19 0.006005846 ubox
2 21 0.003781418 ubox
2 25 0.519959037 ubox
2 29 0.103402913 ubox
2 84 0.012847728 ubox
2 91 0.109277609 ubox
2 92 0.017404748 ubox
2 94 0.013150276 ubox
2 97 0.051913047 ubox
3 9 0.394100974 ubox
3 12 0.160528947 ubox
3 15 0.227535371 ubox
3 16 0.053333775 ubox
3 20 0.015694956 ubox
3 24 0.577183008 ubox
3 28 0.118868940 ubox
3 83 0.014312188 ubox
3 90 0.121712044 ubox
3 93 0.011654378 ubox
3 96 0.059289000 ubox
3 99 0.201166727 ubox
3 100 0.029488162 ubox
4 11 0.108746550 ubox
4 12 0.110442512 ubox
4 14 0.227011318 ubox
4 15 0.055833684 ubox
4 23 0.570769950 ubox
4 27 0.118844230 ubox
4 82 0.014308520 ubox
4 89 0.111701853 ubox
4 95 0.039036013 ubox
4 96 0.050140163 ubox
4 98 0.200584285 ubox
4 99 0.033121278 ubox
5 11 0.105763597 ubox
5 81 0.013084231 ubox
5 95 0.046698227 ubox
6 17 0.133077693 ubox
6 21 0.275721615 ubox
6 87 0.034062888 ubox
7 16 0.131259335 ubox
7 20 0.262255304 ubox
7 86 0.031544348 ubox
9 17 0.263796854 ubox
9 21 0.626034024 ubox
9 57 0.011809204 ubox
9 87 0.021026069 ubox
10 16 0.246995545 ubox
10 20 0.638682304 ubox
10 56 0.011834020 ubox
10 86 0.021309912 ubox
10 93 0.010524780 ubox
10 95 0.004020536 ubox
11 18 0.093242009 ubox
11 19 0.648810199 ubox
11 22 0.022859475 ubox
11 55 0.011842974 ubox
11 85 0.021271387 ubox
11 88 0.024609816 ubox
11 92 0.010760618 ubox
11 94 0.003926952 ubox
12 17 0.117126815 ubox
12 18 0.648225704 ubox
12 21 0.026676444 ubox
12 54 0.011844734 ubox
12 87 0.028094192 ubox
13 20 0.023768182 ubox
13 53 0.011583273 ubox
13 86 0.027232225 ubox
14 22 0.108501514 ubox
14 88 0.051985299 ubox
15 21 0.108850773 ubox
15 22 0.008652077 ubox
15 26 0.130389344 ubox
15 87 0.051931607 ubox
16 21 0.008179174 ubox
16 25 0.228057794 ubox
16 29 0.008108345 ubox
16 49 0.003897084 ubox
16 76 0.007294856 ubox
16 84 0.067385328 ubox
16 91 0.009213284 ubox
16 94 0.074309172 ubox
16 97 0.266344806 ubox
17 24 0.240690937 ubox
17 28 0.009152722 ubox
17 48 0.004066820 ubox
17 52 0.010752378 ubox
17 75 0.007637427 ubox
17 83 0.071587870 ubox
17 90 0.009690583 ubox
17 93 0.080397550 ubox
17 96 0.295432716 ubox
17 99 0.193139356 ubox
17 100 0.026089703 ubox
18 23 0.239643409 ubox
18 27 0.009150100 ubox
18 47 0.003990942 ubox
18 51 0.010762093 ubox
18 74 0.007638555 ubox
18 82 0.071599432 ubox
18 89 0.008610939 ubox
18 95 0.279967137 ubox
18 96 0.439704027 ubox
18 98 0.189946927 ubox
18 99 0.029107173 ubox
19 46 0.003919208 ubox
19 50 0.010755171 ubox
19 73 0.007569677 ubox
19 81 0.071374861 ubox
19 93 0.139559117 ubox
19 95 0.444929159 ubox
20 29 0.010503100 ubox
20 42 0.005366853 ubox
20 49 0.010382178 ubox
20 72 0.007199848 ubox
20 80 0.070308374 ubox
20 91 0.440206653 ubox
20 92 0.100789711 ubox
20 94 0.415847744 ubox
20 97 0.155168372 ubox
21 28 0.013043837 ubox
21 41 0.038625888 ubox
21 48 0.009845010 ubox
21 79 0.061367040 ubox
21 90 0.490740891 ubox
21 93 0.397713977 ubox
21 96 0.156084050 ubox
21 99 0.010283128 ubox
22 27 0.013451298 ubox
22 40 0.068364732 ubox
22 47 0.007973315 ubox
22 89 0.492953749 ubox
22 95 0.142748457 ubox
22 98 0.010896470 ubox
22 99 0.003516760 ubox
23 35 0.009865967 ubox
23 39 0.070172346 ubox
23 43 0.008029012 ubox
23 88 0.492780313 ubox
24 34 0.010186099 ubox
24 38 0.070191770 ubox
24 42 0.008028772 ubox
24 87 0.491286589 ubox
25 33 0.026867059 ubox
25 37 0.065718129 ubox
25 86 0.474407326 ubox
26 32 0.054893179 ubox
26 40 0.009133314 ubox
26 89 0.845605118 ubox
27 35 0.069882292 ubox
27 39 0.009260181 ubox
27 88 0.855758479 ubox
28 34 0.070311146 ubox
28 38 0.009259961 ubox
28 87 0.855543787 ubox
29 33 0.057097708 ubox
29 37 0.008567796 ubox
29 86 0.844334929 ubox
30 87 0.130777105 ubox
31 86 0.150141609 ubox
32 68 0.007127668 ubox
32 88 0.004831012 ubox
33 67 0.007158788 ubox
33 76 0.217364008 ubox
33 84 0.935544518 ubox
33 87 0.003419447 ubox
34 52 0.006205475 ubox
34 66 0.007161683 ubox
34 75 0.226730769 ubox
34 83 0.971130891 ubox
35 51 0.006299048 ubox
35 65 0.007144690 ubox
35 74 0.226771382 ubox
35 82 0.971252685 ubox
36 50 0.006354707 ubox
36 64 0.007085116 ubox
36 73 0.226446467 ubox
36 81 0.971016785 ubox
37 49 0.006364092 ubox
37 71 0.009120501 ubox
37 72 0.197349851 ubox
37 80 0.970615406 ubox
38 48 0.006373885 ubox
38 62 0.007069603 ubox
38 70 0.009685702 ubox
38 79 0.968902637 ubox
39 47 0.006052587 ubox
39 56 0.031163584 ubox
39 61 0.007388275 ubox
39 70 0.226991486 ubox
39 79 0.056679657 ubox
40 55 0.033334079 ubox
40 60 0.007375394 ubox
40 69 0.228581859 ubox
40 78 0.075939184 ubox
41 54 0.034049901 ubox
41 59 0.007346715 ubox
41 68 0.227238280 ubox
42 52 0.044320489 ubox
42 53 0.022880222 ubox
42 62 0.013120471 ubox
42 63 0.014364207 ubox
42 64 0.075358798 ubox
42 65 0.005326832 ubox
42 66 0.065015192 ubox
42 75 0.971082095 ubox
43 51 0.044827637 ubox
43 52 0.022491988 ubox
43 61 0.013712710 ubox
43 62 0.013156067 ubox
43 63 0.077116613 ubox
43 65 0.064963670 ubox
43 66 0.189764112 ubox
43 74 0.972481586 ubox
44 50 0.044462923 ubox
44 62 0.076611589 ubox
44 64 0.063097973 ubox
44 65 0.189756711 ubox
44 73 0.971888565 ubox
45 49 0.039432747 ubox
45 60 0.092765562 ubox
45 69 0.006648547 ubox
45 72 0.963875907 ubox
46 59 0.094631423 ubox
46 60 0.016098537 ubox
46 67 0.003349446 ubox
46 68 0.007500841 ubox
46 69 0.019547448 ubox
46 71 0.917574014 ubox
46 72 0.064996832 ubox
47 55 0.015994869 ubox
47 58 0.096994523 ubox
47 59 0.014526268 ubox
47 60 0.030125668 ubox
47 67 0.008414039 ubox
47 68 0.011617853 ubox
47 69 0.211478960 ubox
47 71 0.085930233 ubox
48 54 0.016743501 ubox
48 57 0.097867361 ubox
48 58 0.011591242 ubox
48 59 0.029746535 ubox
48 68 0.190384121 ubox
49 53 0.013592836 ubox
49 56 0.095856908 ubox
49 73 0.004379125 ubox
50 55 0.087652509 ubox
50 58 0.007226917 ubox
50 59 0.141167449 ubox
50 60 0.199783423 ubox
50 69 0.628509586 ubox
50 72 0.009167824 ubox
51 57 0.007811178 ubox
51 58 0.164618770 ubox
51 59 0.204595989 ubox
51 68 0.450482573 ubox
52 57 0.165049570 ubox
52 58 0.204294387 ubox
52 59 0.008512673 ubox
52 68 0.830484304 ubox
53 57 0.184047078 ubox
53 58 0.008627949 ubox
53 67 0.952197264 ubox
53 71 0.016149947 ubox
54 63 0.067551805 ubox
54 65 0.017875809 ubox
54 66 0.953910067 ubox
54 70 0.018480293 ubox
54 82 0.005866056 ubox
55 62 0.063939541 ubox
55 64 0.030418868 ubox
55 65 0.927231148 ubox
55 81 0.006023679 ubox
56 67 0.050432805 ubox
56 71 0.004223713 ubox
56 76 0.013939169 ubox
56 80 0.006019110 ubox
57 63 0.682868573 ubox
57 64 0.454831920 ubox
57 65 0.031262189 ubox
57 66 0.051568319 ubox
57 70 0.005227085 ubox
57 75 0.020200966 ubox
57 79 0.006020667 ubox
58 62 0.446595469 ubox
58 63 0.486277214 ubox
58 64 0.102700574 ubox
58 65 0.048319902 ubox
58 66 0.011869507 ubox
58 74 0.020094297 ubox
58 75 0.033217332 ubox
59 63 0.105971265 ubox
59 64 0.041073742 ubox
59 65 0.013277740 ubox
59 66 0.044700007 ubox
59 73 0.016784766 ubox
59 74 0.033329988 ubox
60 64 0.013126379 ubox
60 65 0.040422822 ubox
60 73 0.032695649 ubox
61 68 0.030751240 ubox
62 67 0.028788222 ubox
62 69 0.046592772 ubox
63 68 0.048718468 ubox
65 71 0.003263566 ubox
68 74 0.004420322 ubox
69 73 0.003884416 ubox
79 87 0.005364492 ubox
80 86 0.005427319 ubox
81 85 0.004900944 ubox
85 93 0.006247916 ubox
85 95 0.007441738 ubox
86 92 0.006482525 ubox
86 94 0.007942116 ubox
86 97 0.018264867 ubox
87 93 0.007932455 ubox
87 96 0.021047914 ubox
87 99 0.026283811 ubox
88 95 0.016170894 ubox
88 98 0.026483742 ubox
88 99 0.003237156 ubox
2 25 0.9500000 lbox
3 24 0.9500000 lbox
4 23 0.9500000 lbox
9 21 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
12 18 0.9500000 lbox
26 89 0.9500000 lbox
27 88 0.9500000 lbox
28 87 0.9500000 lbox
29 86 0.9500000 lbox
33 84 0.9500000 lbox
34 83 0.9500000 lbox
35 82 0.9500000 lbox
36 81 0.9500000 lbox
37 80 0.9500000 lbox
38 79 0.9500000 lbox
42 75 0.9500000 lbox
43 74 0.9500000 lbox
44 73 0.9500000 lbox
45 72 0.9500000 lbox
46 71 0.9500000 lbox
52 68 0.9500000 lbox
53 67 0.9500000 lbox
54 66 0.9500000 lbox
55 65 0.9500000 lbox
showpage
end
%%EOF
