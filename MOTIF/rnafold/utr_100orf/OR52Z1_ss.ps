%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:23:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUGUAGUCUUUCACUAAUGGCACUAGGCCUGGAAUAAACUGUACAUACGGCUCCUUUCUUUCGCAAUCACACUAAUUCCCAGGAUGUGUGGUAUGUCCUGAUGGGAAUCCCAGGGCUGGAAGGCUUGCAUACCUGGAUCUCCAUCCCUUUUUCUUUUAUGUACAUUGUGGCUGUUGCAGGCAAUAUCUUCUUGAUCUUCC\
) } def
/len { sequence length } bind def

/coor [
[83.42765808 479.41946411]
[75.95845032 466.41134644]
[71.88706207 451.97445679]
[71.45890808 436.98513794]
[65.13138580 450.58523560]
[64.34729767 459.69338989]
[58.59824371 464.34643555]
[52.05997849 477.84646606]
[45.52171326 491.34652710]
[54.21174622 504.01058960]
[55.38949585 519.32427979]
[48.73815536 533.16821289]
[36.04690170 541.81854248]
[20.72961617 542.94824219]
[6.90657139 536.25354004]
[-1.70390069 523.53527832]
[-2.78562760 508.21450806]
[3.95236993 494.41250610]
[16.69760513 485.84194946]
[32.02167130 484.80825806]
[38.55993652 471.30822754]
[45.09820557 457.80816650]
[51.53129578 444.25769043]
[57.85882187 430.65762329]
[56.47446823 426.64425659]
[56.70788193 421.98059082]
[58.82133865 417.34289551]
[62.79164886 413.49954224]
[64.65312958 398.61550903]
[66.51461029 383.73147583]
[68.37609100 368.84741211]
[70.23757172 353.96337891]
[64.13952637 340.37429810]
[73.52959442 327.64099121]
[75.39108276 312.75692749]
[77.25256348 297.87289429]
[79.11404419 282.98883057]
[70.31074524 265.77758789]
[82.70587921 249.88630676]
[84.10356903 234.95156860]
[85.26882935 219.99690247]
[86.20137024 205.02592468]
[87.13391876 190.05493164]
[88.06645966 175.08395386]
[88.99900818 160.11296082]
[89.93154907 145.14198303]
[90.86409760 130.17100525]
[91.79663849 115.20001221]
[81.92224121 105.68867493]
[81.57035828 90.72714996]
[72.82924652 78.53727722]
[54.11014175 71.06954193]
[53.02832031 51.76786041]
[43.91232681 39.85573578]
[34.79633713 27.94361305]
[25.68034744 16.03148651]
[11.14901924 9.77440643]
[9.55875206 -5.03506088]
[0.44276139 -16.94718552]
[-13.27712536 -15.58021927]
[-25.78090286 -21.12869263]
[-33.84429550 -32.04479599]
[-35.44610214 -45.41217422]
[-30.27394676 -57.72468567]
[-39.20357895 -69.77713776]
[-48.13321304 -81.82958984]
[-57.15629959 -93.81224823]
[-66.27228546 -105.72437286]
[-75.38828278 -117.63649750]
[-84.50427246 -129.54861450]
[-93.62026215 -141.46073914]
[-102.73625183 -153.37286377]
[-111.85224152 -165.28498840]
[-126.65512085 -161.70803833]
[-141.63192749 -164.46757507]
[-154.18785095 -173.08552551]
[-162.14747620 -186.06874084]
[-164.13177490 -201.16783142]
[-159.79693604 -215.76676941]
[-149.89401245 -227.33621216]
[-136.13874817 -233.87168884]
[-120.91429901 -234.24085999]
[-106.85842133 -228.37979126]
[-96.40636444 -217.30393982]
[-91.36901855 -202.93226624]
[-92.61913300 -187.75474548]
[-99.94011688 -174.40098572]
[-90.82412720 -162.48886108]
[-81.70813751 -150.57673645]
[-72.59214783 -138.66461182]
[-63.47615433 -126.75248718]
[-54.36016464 -114.84036255]
[-45.24417496 -102.92823792]
[-38.67785645 -99.52441406]
[-36.08075714 -90.75922394]
[-27.15112686 -78.70677185]
[-18.22149277 -66.65431976]
[-1.82314348 -67.33461761]
[11.88826084 -58.01540756]
[17.40034103 -42.20388794]
[12.35488605 -26.06317711]
[21.47087669 -14.15105152]
[35.35017014 -8.74600506]
[37.59247208 6.91549683]
[46.70846176 18.82762146]
[55.82445145 30.73974609]
[64.94044495 42.65187073]
[75.15843964 43.08379745]
[83.62744904 49.20024109]
[87.40605164 59.17496490]
[85.01911163 69.79616547]
[93.76023102 81.98603058]
[108.57918549 84.30950165]
[120.63163757 75.37986755]
[132.68409729 66.45024109]
[144.73655701 57.52060318]
[151.21885681 43.08834457]
[166.05126953 41.72858047]
[178.10372925 32.79895020]
[190.15617371 23.86931610]
[202.20863342 14.93968296]
[213.90487671 5.54830456]
[225.22721863 -4.29062414]
[236.54956055 -14.12955379]
[235.06571960 -29.57551956]
[242.97317505 -42.92662048]
[257.23132324 -49.04908371]
[272.35763550 -45.58869934]
[282.53573608 -33.87605286]
[283.85192871 -18.41490173]
[275.80010986 -5.15036726]
[261.47637939 0.81706291]
[246.38848877 -2.80720925]
[235.06614685 7.03171968]
[223.74380493 16.87064934]
[238.28605652 20.54796600]
[244.62319946 34.14357758]
[238.08836365 47.64527893]
[223.49400330 51.11002731]
[211.58781433 41.98628235]
[211.13825989 26.99213791]
[199.08581543 35.92177200]
[187.03335571 44.85140228]
[174.98089600 53.78103638]
[169.36065674 67.57459259]
[153.66618347 69.57305908]
[141.61372375 78.50269318]
[129.56127930 87.43232727]
[117.50881958 96.36196136]
[131.75584412 91.66916656]
[146.17799377 95.79245758]
[155.79138184 107.30691528]
[157.27388000 122.23347473]
[150.11317444 135.41392517]
[136.78379822 142.29347229]
[121.89204407 140.49472046]
[110.58406830 130.63928223]
[106.76762390 116.13256073]
[105.83507538 131.10354614]
[104.90253448 146.07452393]
[103.96998596 161.04551697]
[103.03744507 176.01649475]
[102.10489655 190.98747253]
[101.17235565 205.95846558]
[100.23980713 220.92944336]
[102.84101868 227.02043152]
[102.08401489 232.66203308]
[99.03830719 236.34925842]
[97.64061737 251.28399658]
[105.05976868 259.25039673]
[106.82931519 269.76904297]
[102.60263062 279.32257080]
[93.99809265 284.85031128]
[92.13661194 299.73437500]
[90.27512360 314.61840820]
[88.41364288 329.50247192]
[94.37855530 344.15615845]
[85.12162018 355.82485962]
[83.26013947 370.70889282]
[81.39865875 385.59295654]
[79.53717804 400.47698975]
[77.67569733 415.36105347]
[86.00217438 402.88427734]
[97.11998749 392.81478882]
[110.35778046 385.76065063]
[124.91619873 382.14782715]
[139.91612244 382.19445801]
[154.45179749 385.89773560]
[167.64547729 393.03405762]
[178.70046997 403.17245483]
[186.94920349 415.70074463]
[191.89361572 429.86242676]
[193.23509216 444.80230713]
[190.89266968 459.61828613]
[185.00776672 473.41567993]
[175.93576050 485.36132812]
[164.22445679 494.73391724]
[150.58103943 500.96743774]
[135.82936096 503.68554688]
[120.86020660 502.72406006]
[106.57748413 498.14105225]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 24]
[5 23]
[7 22]
[8 21]
[9 20]
[28 182]
[29 181]
[30 180]
[31 179]
[32 178]
[34 176]
[35 175]
[36 174]
[37 173]
[39 169]
[40 168]
[41 165]
[42 164]
[43 163]
[44 162]
[45 161]
[46 160]
[47 159]
[48 158]
[50 112]
[51 111]
[53 107]
[54 106]
[55 105]
[56 104]
[58 102]
[59 101]
[64 97]
[65 96]
[66 95]
[67 93]
[68 92]
[69 91]
[70 90]
[71 89]
[72 88]
[73 87]
[113 149]
[114 148]
[115 147]
[116 146]
[118 144]
[119 143]
[120 142]
[121 141]
[122 135]
[123 134]
[124 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
