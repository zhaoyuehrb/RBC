%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:39:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAGGUGAAAGGUCAUAGUCCUGUUUGGCGGCCAUUUCUCUUGAAACUGCGGCUCGGGACCUGCGGUACCUGCUGUAGUCACGAGGGACGGGCGGCGGCCUGGUCGGCAGAGAGUAGCCUGCAACAUUCGGCCGUGGUUACGAUGAGUUUACCCCUCAAUCCCAAACCUUUCCUCAAUGGACUAACAGGAAAGCCAGUGAUGGUGAAACUUAAGUGGGGAAUGGAGUACAAGGGCUAUCUGG\
) } def
/len { sequence length } bind def

/coor [
[495.27938843 358.21307373]
[482.52014160 350.32623291]
[469.76092529 342.43942261]
[457.00167847 334.55261230]
[445.17477417 337.02587891]
[434.48556519 330.57818604]
[430.93499756 318.19329834]
[418.27838135 310.14285278]
[405.62173462 302.09240723]
[391.18353271 305.56723022]
[378.23324585 297.58322144]
[374.68643188 282.41555786]
[362.02981567 274.36511230]
[349.37316895 266.31466675]
[337.71743774 273.40972900]
[324.07681274 274.80200195]
[311.10348511 270.16351318]
[301.34454346 260.34451294]
[296.74200439 247.21817017]
[298.24636841 233.32339478]
[285.69442749 225.11065674]
[268.13616943 225.06724548]
[259.99002075 208.54164124]
[247.33338928 200.49121094]
[234.67675781 192.44076538]
[219.59733582 198.95368958]
[203.44721985 195.14924622]
[192.64608765 182.33586121]
[191.60858154 165.44284058]
[178.84933472 157.55601501]
[166.09010315 149.66918945]
[153.33087158 141.78237915]
[140.57164001 133.89555359]
[127.81240845 126.00872803]
[108.31719208 140.41229248]
[82.16570282 140.70436096]
[59.20259857 124.56195831]
[49.33782959 96.24413300]
[34.36890411 95.27914429]
[19.39997482 94.31415558]
[4.43104792 93.34916687]
[-10.53787994 92.38418579]
[-25.50680733 91.41919708]
[-40.47573471 90.45420837]
[-52.28667068 100.60997772]
[-67.45354462 99.41810608]
[-77.06272888 88.09559631]
[-92.03165436 87.13060760]
[-107.00058746 86.16561890]
[-121.96951294 85.20063782]
[-136.93844604 84.23564911]
[-151.90736389 83.27066040]
[-166.87629700 82.30567169]
[-181.84523010 81.34069061]
[-187.89848328 83.91014099]
[-193.50457764 83.16473389]
[-197.18559265 80.15324402]
[-212.12471008 78.80316162]
[-227.06382751 77.45307922]
[-242.01132202 76.19918823]
[-256.96658325 75.04155731]
[-271.92184448 73.88392639]
[-288.18035889 78.68984222]
[-297.29928589 64.39711761]
[-286.08947754 51.67796707]
[-270.76422119 58.92866516]
[-255.80895996 60.08629608]
[-240.85369873 61.24392700]
[-233.95753479 58.63234711]
[-225.71374512 62.51395798]
[-210.77461243 63.86404419]
[-195.83549500 65.21412659]
[-180.88023376 66.37175751]
[-165.91131592 67.33674622]
[-150.94238281 68.30173492]
[-135.97344971 69.26671600]
[-121.00452423 70.23170471]
[-106.03559875 71.19669342]
[-91.06667328 72.16168213]
[-76.09774017 73.12666321]
[-65.11430359 63.13167953]
[-49.91993713 63.89707565]
[-39.51074982 75.48528290]
[-24.54182053 76.45027161]
[-9.57289314 77.41525269]
[5.39603424 78.38024139]
[20.36496162 79.34523010]
[35.33388901 80.31021881]
[50.30281830 81.27519989]
[57.35247040 68.03501892]
[48.19553375 56.15434265]
[39.03859329 44.27366638]
[29.88165665 32.39298630]
[20.72472000 20.51231003]
[5.36271715 14.77289391]
[2.91942191 -1.44321966]
[15.90828705 -11.45428371]
[30.96748161 -4.96177387]
[32.60539627 11.35537243]
[41.76233673 23.23604965]
[50.91927338 35.11672974]
[60.07621002 46.99740601]
[69.23314667 58.87808228]
[82.81867981 52.51936722]
[79.56161499 37.87725449]
[69.01237488 26.08640099]
[73.80149841 11.98272896]
[70.54443359 -2.65938520]
[67.28736115 -17.30149841]
[52.99977493 -23.35497093]
[45.02788162 -36.66769409]
[46.43703842 -52.12065125]
[56.68539429 -63.77186584]
[71.83224487 -67.14121246]
[86.05332184 -60.93310547]
[93.88032532 -47.53468704]
[92.30361938 -32.09792328]
[81.92947388 -20.55856705]
[85.18654633 -5.91645384]
[88.44361115 8.72566032]
[98.75988007 19.46920967]
[94.20372772 34.62018585]
[97.46079254 49.26229858]
[109.63288116 51.74113083]
[120.45746613 56.99755859]
[129.33776855 64.53058624]
[135.83764648 73.72130585]
[139.70191956 83.88024139]
[140.86328125 94.29722595]
[139.43629456 104.29017639]
[135.69921875 113.24949646]
[148.45846558 121.13631439]
[161.21769714 129.02313232]
[173.97692871 136.90995789]
[186.73616028 144.79678345]
[199.49539185 152.68359375]
[211.81387329 146.52708435]
[225.45783997 147.24980164]
[236.87475586 154.55664062]
[243.14477539 166.45210266]
[242.72720337 179.78413391]
[255.38383484 187.83457947]
[268.04046631 195.88500977]
[280.76263428 193.85063171]
[291.13360596 200.79859924]
[293.90716553 212.55873108]
[306.45910645 220.77145386]
[321.15042114 213.16218567]
[337.57998657 214.00178528]
[351.26187134 222.96603394]
[358.50836182 237.52539062]
[357.42361450 253.65803528]
[370.08026123 261.70849609]
[382.73687744 269.75891113]
[397.97781372 266.54147339]
[410.69876099 274.88607788]
[413.67218018 289.43579102]
[426.32879639 297.48623657]
[438.98544312 305.53668213]
[457.40597534 305.90921021]
[464.88851929 321.79336548]
[477.64773560 329.68017578]
[490.40698242 337.56701660]
[503.16619873 345.45382690]
[522.36193848 334.30825806]
[545.21270752 337.20339966]
[562.21643066 353.95617676]
[565.68914795 378.41781616]
[579.79187012 383.52795410]
[595.40246582 380.95486450]
[604.73248291 392.56521606]
[618.83520508 397.67535400]
[632.93792725 402.78546143]
[647.04064941 407.89559937]
[661.14331055 413.00573730]
[675.24603271 418.11587524]
[671.22607422 403.66458130]
[679.91064453 391.43435669]
[694.87939453 390.46673584]
[705.06628418 401.47708130]
[702.94030762 416.32565308]
[690.07366943 424.03518677]
[703.81842041 430.04199219]
[717.56317139 436.04879761]
[729.44238281 429.72866821]
[742.60144043 431.37316895]
[752.27203369 440.16088867]
[755.07995605 452.72335815]
[768.74621582 458.90664673]
[781.23376465 450.07440186]
[796.36566162 448.68771362]
[810.06884766 455.01922607]
[818.70526123 467.27764893]
[820.03723145 482.11312866]
[833.70349121 488.29641724]
[847.36975098 494.47967529]
[861.03607178 500.66296387]
[877.29315186 498.50924683]
[887.07098389 511.67456055]
[880.31097412 526.61560059]
[863.96722412 527.96228027]
[854.85278320 514.32922363]
[841.18646240 508.14596558]
[827.52020264 501.96267700]
[813.85394287 495.77941895]
[801.83123779 504.57260132]
[786.92224121 506.17797852]
[773.12017822 500.06481934]
[764.17242432 487.78332520]
[762.56292725 472.57290649]
[748.89666748 466.38964844]
[733.41613770 472.98699951]
[717.64758301 466.20343018]
[711.55639648 449.79354858]
[697.81164551 443.78674316]
[684.06689453 437.77993774]
[670.13592529 432.21859741]
[656.03320312 427.10845947]
[641.93048096 421.99832153]
[627.82775879 416.88818359]
[613.72503662 411.77804565]
[599.62237549 406.66793823]
[585.02050781 409.60650635]
[574.68176270 397.63067627]
[560.57904053 392.52053833]
[549.83673096 402.98971558]
[554.58209229 417.21932983]
[559.32739258 431.44894409]
[573.57440186 438.28985596]
[578.73242188 453.22875977]
[571.74121094 467.40264893]
[556.74865723 472.40240479]
[542.64947510 465.26177979]
[537.80847168 450.21716309]
[545.09777832 436.19424438]
[540.35247803 421.96463013]
[535.60711670 407.73501587]
[525.33587646 407.87173462]
[515.55407715 405.35699463]
[506.92199707 400.45327759]
[499.99795532 393.58108521]
[495.20220947 385.28408813]
[492.79202271 376.18682861]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 164]
[2 163]
[3 162]
[4 161]
[7 159]
[8 158]
[9 157]
[12 154]
[13 153]
[14 152]
[20 147]
[21 146]
[23 143]
[24 142]
[25 141]
[29 136]
[30 135]
[31 134]
[32 133]
[33 132]
[34 131]
[38 89]
[39 88]
[40 87]
[41 86]
[42 85]
[43 84]
[44 83]
[47 80]
[48 79]
[49 78]
[50 77]
[51 76]
[52 75]
[53 74]
[54 73]
[57 72]
[58 71]
[59 70]
[60 68]
[61 67]
[62 66]
[90 103]
[91 102]
[92 101]
[93 100]
[94 99]
[104 123]
[105 122]
[107 120]
[108 119]
[109 118]
[168 225]
[169 224]
[171 222]
[172 221]
[173 220]
[174 219]
[175 218]
[176 217]
[182 216]
[183 215]
[184 214]
[188 211]
[189 210]
[194 205]
[195 204]
[196 203]
[197 202]
[226 237]
[227 236]
[228 235]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
