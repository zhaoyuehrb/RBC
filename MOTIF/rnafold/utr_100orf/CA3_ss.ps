%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:12:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUAAAAGCGCGGGCUCGCGGCGACUCUGCACCACGCAGGGGAAGAGAAAGCAGGAGCCGUCCAGCACGGAGGAAGGCGACCAUGGCCAAGGAGUGGGGCUACGCCAGUCACAACGGUCCUGACCACUGGCAUGAACUUUUCCCAAAUGCCAAGGGGGAAAACCAGUCGCCCGUUGAGCUGC\
) } def
/len { sequence length } bind def

/coor [
[85.28428650 363.30364990]
[84.56127167 378.59207153]
[76.80619049 391.78741455]
[63.80110168 399.85748291]
[48.53448486 400.94787598]
[34.51448822 394.80798340]
[24.96281242 382.84869385]
[22.07435608 367.81823730]
[26.51287079 353.17041016]
[37.25841522 342.27124023]
[51.84173965 337.62527466]
[54.39039612 322.84338379]
[56.93905258 308.06149292]
[59.48770905 293.27960205]
[57.52111816 286.13671875]
[62.20812988 278.26800537]
[65.00878906 263.53176880]
[67.80944061 248.79554749]
[70.61009979 234.05932617]
[73.28485107 219.29972839]
[75.83350372 204.51782227]
[78.38216400 189.73593140]
[80.80453491 174.93283081]
[83.10044861 160.10957336]
[85.39636230 145.28631592]
[87.69227600 130.46307373]
[89.98818207 115.63981628]
[78.11391449 106.47457123]
[64.35575104 112.45058441]
[50.59757996 118.42660522]
[36.83940887 124.40261841]
[29.64001274 138.73957825]
[13.91308403 141.90867615]
[1.72297609 131.47888184]
[2.42089653 115.45101166]
[15.47146130 106.12029266]
[30.86339188 110.64444733]
[44.62156296 104.66843414]
[58.37973022 98.69241333]
[72.13790131 92.71640015]
[80.57762146 80.31595612]
[81.08973694 65.32469940]
[81.60186005 50.33344269]
[82.11397552 35.34218597]
[82.62609100 20.35093117]
[83.13820648 5.35967636]
[83.65032196 -9.63157845]
[84.16243744 -24.62283325]
[70.36314392 -29.38815117]
[58.51358032 -37.87621307]
[49.58952332 -49.37195969]
[44.32125092 -62.91333389]
[43.13378143 -77.37179565]
[46.11262512 -91.54637146]
[52.99776459 -104.26338959]
[42.39116287 -114.86999512]
[24.50693703 -119.20932770]
[20.60553551 -136.30873108]
[9.81939220 -146.73269653]
[-0.96675032 -157.15667725]
[-16.26701736 -161.18313599]
[-20.04200363 -175.59141541]
[-30.82814598 -186.01539612]
[-41.61428833 -196.43936157]
[-56.87273788 -193.61811829]
[-70.86082458 -200.33474731]
[-78.19984436 -214.00654602]
[-76.06780243 -229.37646484]
[-65.28450012 -240.53442383]
[-49.99634171 -243.18997192]
[-36.08194351 -236.32199097]
[-28.89166451 -222.57138062]
[-31.19032097 -207.22550964]
[-20.40417671 -196.80152893]
[-9.61803532 -186.37756348]
[4.91073513 -183.09669495]
[9.45721817 -167.94281006]
[20.24336052 -157.51884460]
[31.02950478 -147.09487915]
[43.14049911 -146.98348999]
[52.21318436 -138.36651611]
[52.99776459 -125.47659302]
[63.60436630 -114.86999512]
[75.76864624 -121.46699524]
[89.27259064 -124.48915863]
[90.29622650 -139.45419312]
[91.31986237 -154.41921997]
[92.34349823 -169.38424683]
[93.36713409 -184.34928894]
[80.92716217 -193.47346497]
[75.41622925 -207.88293457]
[78.59285736 -222.97972107]
[89.44339752 -233.94645691]
[104.50547791 -237.28370667]
[118.97284698 -231.92658997]
[128.22901917 -219.58450317]
[129.32037354 -204.19580078]
[121.89868164 -190.67092896]
[108.33216858 -183.32565308]
[107.30853271 -168.36061096]
[106.28489685 -153.39558411]
[105.26126099 -138.43055725]
[104.23762512 -123.46552277]
[116.82662964 -118.83457184]
[127.73819733 -111.03287506]
[139.53379822 -120.29916382]
[151.32937622 -129.56544495]
[163.12496948 -138.83172607]
[174.92056274 -148.09800720]
[186.71615601 -157.36428833]
[172.02221680 -160.37895203]
[163.63217163 -172.81304932]
[166.33634949 -187.56729126]
[178.59078979 -196.21763611]
[193.39875793 -193.82511902]
[202.30555725 -181.75578308]
[200.22555542 -166.90026855]
[212.90692139 -174.91169739]
[225.58827209 -182.92314148]
[232.73254395 -197.68428040]
[249.10566711 -198.60771179]
[257.86437988 -184.74348450]
[249.99847412 -170.35392761]
[233.59971619 -170.24177551]
[220.91835022 -162.23034668]
[208.23698425 -154.21890259]
[195.98243713 -145.56869507]
[184.18684387 -136.30241394]
[172.39126587 -127.03613281]
[160.59567261 -117.76985168]
[148.80007935 -108.50357056]
[137.00448608 -99.23728943]
[142.74636841 -83.84350586]
[143.21189880 -67.38990021]
[138.33161926 -51.63798904]
[128.60939026 -38.28050995]
[115.07054138 -28.75952148]
[99.15369415 -24.11071777]
[98.64157867 -9.11946201]
[98.12946320 5.87179327]
[97.61734772 20.86304855]
[97.10522461 35.85430527]
[96.59310913 50.84555817]
[96.08099365 65.83681488]
[95.56887817 80.82807159]
[103.20549011 67.91752625]
[109.87042999 54.47957230]
[121.86911011 45.47781372]
[136.63494873 42.83777618]
[151.00947571 47.12417603]
[161.91787720 57.42013550]
[167.02679443 71.52328491]
[165.24342346 86.41689301]
[156.94920349 98.91513824]
[143.91627502 106.34517670]
[129.45301819 102.36843872]
[140.23916626 112.79240417]
[156.03488159 112.27201080]
[167.51484680 123.13414001]
[167.86820984 138.93447876]
[156.88531494 150.29896545]
[141.08212280 150.48526001]
[129.83439636 139.38282776]
[129.81520081 123.57854462]
[119.02905273 113.15457916]
[104.81143951 117.93572998]
[102.51552582 132.75898743]
[100.21961212 147.58222961]
[97.92369843 162.40548706]
[95.62778473 177.22874451]
[97.40909576 186.21270752]
[93.16405487 192.28459167]
[90.61540222 207.06648254]
[88.06674194 221.84837341]
[89.69441223 230.86145020]
[85.34632111 236.85997009]
[82.54566956 251.59620667]
[79.74501038 266.33242798]
[76.94435120 281.06866455]
[74.26959991 295.82824707]
[71.72094727 310.61013794]
[69.17228699 325.39202881]
[66.62363434 340.17391968]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 183]
[12 182]
[13 181]
[14 180]
[16 179]
[17 178]
[18 177]
[19 176]
[20 174]
[21 173]
[22 172]
[23 170]
[24 169]
[25 168]
[26 167]
[27 166]
[28 40]
[29 39]
[30 38]
[31 37]
[41 145]
[42 144]
[43 143]
[44 142]
[45 141]
[46 140]
[47 139]
[48 138]
[55 83]
[56 82]
[58 79]
[59 78]
[60 77]
[62 75]
[63 74]
[64 73]
[85 103]
[86 102]
[87 101]
[88 100]
[89 99]
[105 132]
[106 131]
[107 130]
[108 129]
[109 128]
[110 127]
[117 126]
[118 125]
[119 124]
[156 165]
[157 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
