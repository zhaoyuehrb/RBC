%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:16:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCAGCCCAGGCGCUGCUGCUGGCGCCAGACGGCACCGGCCGCUGGUAGAGCGCGUGCCGCGAGAUGCGGCCUCAGGACAGCACCGGGGUCGCGGAGCUCCAGGAGCCCGGGCUGCCGCUAACGGACGAUGCACCCCCGGGCGCCACUGAGGAGCCGGCGGCCG\
) } def
/len { sequence length } bind def

/coor [
[204.82435608 185.63066101]
[193.12236023 176.24644470]
[181.42037964 166.86224365]
[169.71838379 157.47802734]
[158.01638794 148.09381104]
[146.31440735 138.70960999]
[134.61241150 129.32539368]
[122.91042328 119.94118500]
[98.68241882 126.48867035]
[81.50792694 113.11299133]
[67.00072479 116.92626953]
[52.49352264 120.73954010]
[37.98631668 124.55281830]
[23.47911453 128.36608887]
[15.93407631 133.59684753]
[8.65937710 132.11105347]
[-5.91779661 135.64744568]
[-13.56105518 140.73359680]
[-20.80614853 139.10958862]
[-35.44800949 142.36779785]
[-50.08986664 145.62600708]
[-55.97794342 157.77000427]
[-67.62245178 164.19882202]
[-80.64900208 162.75410461]
[-90.31014252 154.18844604]
[-105.01138306 157.16729736]
[-119.71262360 160.14616394]
[-134.41386414 163.12501526]
[-149.11509705 166.10388184]
[-156.94645691 170.89535522]
[-164.12446594 168.99668884]
[-178.87974548 171.69511414]
[-193.63504028 174.39353943]
[-208.39031982 177.09196472]
[-220.52841187 188.11914062]
[-236.06268311 182.86381531]
[-239.01281738 166.73220825]
[-226.34394836 156.31913757]
[-211.08874512 162.33666992]
[-196.33346558 159.63824463]
[-181.57817078 156.93983459]
[-166.82289124 154.24140930]
[-152.09394836 151.40263367]
[-137.39271545 148.42378235]
[-122.69147491 145.44491577]
[-107.99024200 142.46606445]
[-93.28900146 139.48721313]
[-84.62505341 125.09668732]
[-67.90982819 121.32928467]
[-53.34807968 130.98414612]
[-38.70621872 127.72593689]
[-24.06435966 124.46772003]
[-9.45418072 121.07027435]
[5.12299299 117.53388977]
[19.66584015 113.85889435]
[34.17304230 110.04561615]
[48.68024445 106.23233795]
[63.18745041 102.41906738]
[77.69464874 98.60578918]
[62.81276703 100.48449707]
[49.89478683 92.86046600]
[44.34667587 78.92424011]
[48.49023056 64.50789642]
[60.59143829 55.64444351]
[75.58613586 56.04309082]
[87.19929504 65.53701782]
[90.57086182 80.15441895]
[89.14501953 65.22233582]
[87.71917725 50.29026031]
[86.29334259 35.35818100]
[84.86750031 20.42610168]
[83.44165802 5.49402189]
[82.01581573 -9.43805695]
[80.58997345 -24.37013626]
[76.64334106 -32.65943146]
[79.28191376 -39.59965897]
[78.14061737 -54.55617905]
[65.98568726 -64.65732574]
[64.61666107 -80.40220642]
[74.84574890 -92.44966125]
[90.60422516 -93.65215302]
[102.54286194 -83.29625702]
[103.57867432 -67.52594757]
[93.09713745 -55.69747162]
[94.23843384 -40.74095154]
[95.52205658 -25.79597664]
[96.94789886 -10.86389732]
[98.37373352 4.06818151]
[99.79957581 19.00025940]
[101.22541809 33.93233871]
[102.65126038 48.86441803]
[104.07710266 63.79649734]
[105.50293732 78.72857666]
[119.76879120 83.36383057]
[129.69917297 72.12161255]
[133.05642700 63.57659912]
[139.92723083 60.76220322]
[150.06985474 49.71108627]
[160.21247864 38.65996933]
[170.35510254 27.60885048]
[176.61053467 11.85112762]
[193.48411560 13.49992752]
[196.57083130 30.17051697]
[181.40621948 37.75147629]
[171.26359558 48.80259323]
[161.12097168 59.85371017]
[150.97834778 70.90482330]
[140.94139099 82.05199432]
[131.01100159 93.29421234]
[132.29463196 108.23918915]
[143.99662781 117.62340546]
[155.69860840 127.00761414]
[167.40060425 136.39183044]
[179.10260010 145.77603149]
[190.80458069 155.16024780]
[202.50657654 164.54446411]
[214.20855713 173.92866516]
[228.23770142 179.23747253]
[243.22070312 179.95120239]
[250.91525269 166.72045898]
[263.88323975 158.59086609]
[279.14468384 157.43057251]
[293.19268799 163.50616455]
[302.79904175 175.42155457]
[305.75631714 190.43864441]
[301.38497925 205.10662842]
[290.68948364 216.05491638]
[276.12759399 220.76765442]
[261.04550171 218.16191101]
[248.90902710 208.83645630]
[242.50698853 194.93420410]
[227.52397156 194.22047424]
[223.65098572 200.64309692]
[238.26112366 204.04072571]
[239.54437256 218.98573303]
[225.72731018 224.82427979]
[215.90502930 213.48832703]
[212.03204346 219.91094971]
[219.65538025 232.82934570]
[227.27870178 245.74774170]
[240.95581055 253.70054626]
[240.76052856 268.59387207]
[248.38385010 281.51226807]
[256.00717163 294.43066406]
[263.63049316 307.34906006]
[279.86102295 316.00234985]
[279.39532471 333.52581787]
[287.26321411 346.29675293]
[301.94284058 353.60705566]
[302.68154907 369.98953247]
[288.71939087 378.59133911]
[274.41946411 370.56362915]
[274.49230957 354.16464233]
[266.62438965 341.39370728]
[254.90641785 338.27871704]
[248.25454712 327.66442871]
[250.71211243 314.97238159]
[243.08879089 302.05398560]
[235.46545410 289.13558960]
[227.84213257 276.21719360]
[214.71028137 269.18838501]
[214.36030579 253.37106323]
[206.73698425 240.45266724]
[199.11364746 227.53427124]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 117]
[2 116]
[3 115]
[4 114]
[5 113]
[6 112]
[7 111]
[8 110]
[10 59]
[11 58]
[12 57]
[13 56]
[14 55]
[16 54]
[17 53]
[19 52]
[20 51]
[21 50]
[25 47]
[26 46]
[27 45]
[28 44]
[29 43]
[31 42]
[32 41]
[33 40]
[34 39]
[67 93]
[68 92]
[69 91]
[70 90]
[71 89]
[72 88]
[73 87]
[74 86]
[76 85]
[77 84]
[94 109]
[95 108]
[97 107]
[98 106]
[99 105]
[100 104]
[118 132]
[119 131]
[138 164]
[139 163]
[140 162]
[142 160]
[143 159]
[144 158]
[145 157]
[147 154]
[148 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
