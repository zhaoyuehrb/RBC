%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:12:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAAGCUGGGCGGAACCGGAAGAUGGUGUGAGCCACGGGCUGCCGGGGGCCUGGGGCUCGGCGUCGGUCCCCGGGGGAUGUGGAGAGCUGGCAGCAUGUCGGCCGAGCUGGGAGUCGGGUGCGCAUUGCGGGCGGUGAACGAGCGCGUGCAGCAGGCUGUGGCGCGGCGGCCGCGGG\
) } def
/len { sequence length } bind def

/coor [
[71.70442200 120.10717773]
[68.05509186 111.59677887]
[66.84555054 102.61292267]
[68.06137848 93.82661438]
[54.38706589 87.66114044]
[40.71274948 81.49566650]
[27.03843498 75.33019257]
[11.27763176 76.71136475]
[2.85545874 64.42656708]
[-10.81885719 58.26109314]
[-24.49317169 52.09561539]
[-40.25397491 53.47679520]
[-48.67614746 41.19199371]
[-62.35046387 35.02651978]
[-67.47158813 38.87340164]
[-73.43071747 41.10871887]
[-79.73777771 41.57296371]
[-85.88088226 40.25128174]
[-91.36784363 37.27285385]
[-95.76564026 32.89863968]
[-98.73453522 27.49865913]
[-100.05429077 21.52074623]
[-99.64037323 15.45343685]
[-112.45068359 7.64984560]
[-125.26098633 -0.15374632]
[-141.07186890 -0.72532773]
[-147.91596985 -13.95436954]
[-160.72627258 -21.75796127]
[-173.53657532 -29.56155205]
[-189.34745789 -30.13313484]
[-196.19155884 -43.36217499]
[-209.00186157 -51.16576767]
[-221.81217957 -58.96936035]
[-234.88990784 -66.31599426]
[-248.21875000 -73.19652557]
[-261.54760742 -80.07704926]
[-274.87646484 -86.95758057]
[-287.39910889 -83.78660583]
[-298.36807251 -89.81555939]
[-302.15130615 -101.32516479]
[-315.35665894 -108.43985748]
[-331.17562866 -108.17386627]
[-338.71026611 -121.02215576]
[-351.91561890 -128.13684082]
[-365.12097168 -135.25154114]
[-378.32632446 -142.36622620]
[-391.53164673 -149.48091125]
[-404.73699951 -156.59561157]
[-417.94235229 -163.71029663]
[-431.14770508 -170.82498169]
[-444.35305786 -177.93968201]
[-453.42236328 -179.26264954]
[-457.72705078 -185.29824829]
[-470.80477905 -192.64488220]
[-486.62597656 -192.65811157]
[-493.93267822 -205.63737488]
[-507.01040649 -212.98400879]
[-523.78106689 -215.47013855]
[-526.03466797 -232.27363586]
[-510.51174927 -239.09085083]
[-499.66375732 -226.06173706]
[-486.58602905 -218.71510315]
[-471.70025635 -219.22734070]
[-463.45812988 -205.72261047]
[-450.38040161 -198.37596130]
[-437.23834229 -191.14501953]
[-424.03302002 -184.03033447]
[-410.82766724 -176.91564941]
[-397.62231445 -169.80094910]
[-384.41696167 -162.68626404]
[-371.21160889 -155.57157898]
[-358.00628662 -148.45687866]
[-344.80093384 -141.34219360]
[-331.59558105 -134.22750854]
[-316.72116089 -135.00238037]
[-308.24197388 -121.64520264]
[-295.03662109 -114.53050995]
[-277.56250000 -116.00421906]
[-267.99594116 -100.28643036]
[-254.66708374 -93.40590668]
[-241.33822632 -86.52537537]
[-228.00936890 -79.64485168]
[-225.27767944 -80.39150238]
[-222.08149719 -80.08444214]
[-218.82687378 -78.53964233]
[-215.97933960 -75.72561646]
[-214.00857544 -71.77966309]
[-201.19827271 -63.97607422]
[-188.38796997 -56.17248154]
[-173.49336243 -56.15906525]
[-165.73298645 -42.37186050]
[-152.92268372 -34.56826782]
[-140.11238098 -26.76467514]
[-125.21777344 -26.75125885]
[-117.45739746 -12.96405315]
[-104.64708710 -5.16046143]
[-91.83678436 2.64313054]
[-68.25067139 0.11800446]
[-56.18498993 21.35220337]
[-42.51067352 27.51767921]
[-27.72794724 25.69550705]
[-18.32769585 38.42129898]
[-4.65338087 44.58677673]
[9.02093506 50.75225449]
[23.80365944 48.93008041]
[33.20391083 61.65587234]
[46.87822723 67.82135010]
[60.55254364 73.98682404]
[74.22686005 80.15229797]
[90.66290283 67.32308197]
[112.41524506 66.80611420]
[130.92863464 79.88442993]
[138.28157043 102.28388214]
[153.24420166 103.34196472]
[168.20683289 104.40005493]
[183.16947937 105.45813751]
[193.18098450 93.75019836]
[207.99368286 90.22353363]
[221.87846375 96.02671814]
[229.59133911 108.74086761]
[244.55397034 109.79895020]
[259.51660156 110.85703278]
[274.47924805 111.91511536]
[289.44186401 112.97320557]
[294.18734741 110.65780640]
[298.87411499 110.43704224]
[302.70761108 111.93267059]
[305.16165161 114.50395966]
[320.04733276 116.35243225]
[334.93298340 118.20091248]
[347.32382202 108.76135254]
[362.39367676 110.84802246]
[371.31649780 122.71894836]
[386.20214844 124.56742096]
[399.69055176 115.88164520]
[414.84454346 121.14812469]
[420.03930664 136.32685852]
[411.28982544 149.77403259]
[395.30798340 151.17411804]
[384.35366821 139.45309448]
[369.46801758 137.60461426]
[357.91275024 146.93261719]
[342.79022217 145.27005005]
[333.08450317 133.08657837]
[318.19885254 131.23809814]
[303.31317139 129.38963318]
[288.38378906 127.93583679]
[273.42117310 126.87775421]
[258.45852661 125.81967163]
[243.49589539 124.76158142]
[228.53324890 123.70349884]
[219.10791016 135.20571899]
[204.54464722 138.99719238]
[190.37565613 133.42108154]
[182.11138916 120.42077637]
[167.14875793 119.36268616]
[152.18611145 118.30460358]
[137.22348022 117.24652100]
[128.53570557 129.47445679]
[134.45889282 143.25546265]
[140.38208008 157.03645325]
[146.30525208 170.81744385]
[152.22843933 184.59844971]
[166.99946594 190.21914673]
[173.39341736 204.67227173]
[167.61686707 219.38305664]
[153.09693909 225.62384033]
[138.44805908 219.69207764]
[132.36114502 205.10697937]
[138.44744873 190.52163696]
[132.52426147 176.74063110]
[126.60107422 162.95964050]
[120.67789459 149.17863464]
[114.75470734 135.39764404]
[104.70343781 137.32698059]
[94.69686890 136.51155090]
[85.45685577 133.11437988]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 109]
[5 108]
[6 107]
[7 106]
[9 104]
[10 103]
[11 102]
[13 100]
[14 99]
[23 97]
[24 96]
[25 95]
[27 93]
[28 92]
[29 91]
[31 89]
[32 88]
[33 87]
[34 82]
[35 81]
[36 80]
[37 79]
[40 77]
[41 76]
[43 74]
[44 73]
[45 72]
[46 71]
[47 70]
[48 69]
[49 68]
[50 67]
[51 66]
[53 65]
[54 64]
[56 62]
[57 61]
[113 158]
[114 157]
[115 156]
[116 155]
[120 151]
[121 150]
[122 149]
[123 148]
[124 147]
[128 146]
[129 145]
[130 144]
[133 141]
[134 140]
[159 174]
[160 173]
[161 172]
[162 171]
[163 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
