%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:35:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGUCGCGCGCAGGACUCGAGGGCUUCUAGCCACCGUCCCCGCCAGCGCCGCGCCCCGCCACAGGGCGGCAUGAGCCCACCCGCGGCCGCAGCCCUAGCGCCCUGCUCCUCCGCCUGGGCGGCCCGGCUGCGGUGACGGCUCUCGCUGCCCGACUGGGGGCCAUGAAGCCGAGUCCGGCCGGGACGGCGAAGGAGCUGGAGCCUCCGGCGCCGGCCCGAGGCGAGCAGCGCACGGCGGAGCCCGAGGGGCGCU\
GGCGGGAGA\
) } def
/len { sequence length } bind def

/coor [
[-42.87178802 439.60330200]
[-49.87894440 452.86602783]
[-56.88610077 466.12872314]
[-63.89326096 479.39144897]
[-70.90042114 492.65417480]
[-77.90757751 505.91690063]
[-77.51306152 521.73315430]
[-90.29970551 529.37194824]
[-97.30686188 542.63470459]
[-90.33474731 554.50329590]
[-90.13052368 568.15856934]
[-96.64069366 580.04064941]
[-108.07524109 587.10461426]
[-121.39842224 587.60040283]
[-128.56231689 600.77917480]
[-135.72621155 613.95788574]
[-137.06684875 622.95910645]
[-143.05393982 627.24963379]
[-150.37356567 640.34246826]
[-149.60583496 656.72363281]
[-163.55271912 665.35015869]
[-177.86685181 657.34777832]
[-177.82307434 640.94873047]
[-163.46643066 633.02288818]
[-156.14680481 619.92999268]
[-148.90492249 606.79400635]
[-141.74102783 593.61523438]
[-134.57713318 580.43652344]
[-142.10864258 565.83343506]
[-139.41296387 549.45648193]
[-127.35893250 537.80645752]
[-110.56958771 535.62750244]
[-103.56243134 522.36480713]
[-104.45813751 507.49716187]
[-91.17029572 498.90972900]
[-84.16313934 485.64703369]
[-77.15598297 472.38430786]
[-70.14881897 459.12158203]
[-63.14166641 445.85885620]
[-56.13450623 432.59613037]
[-49.44374847 419.17102051]
[-43.07315445 405.59106445]
[-36.70256042 392.01107788]
[-30.33196640 378.43112183]
[-23.96137047 364.85116577]
[-17.59077644 351.27117920]
[-11.22018147 337.69122314]
[-4.84958696 324.11123657]
[1.52100766 310.53128052]
[7.89160252 296.95132446]
[14.26219749 283.37133789]
[20.63279152 269.79138184]
[12.13245106 251.17311096]
[20.32044029 232.09297180]
[40.23078156 225.23379517]
[45.95048904 211.36711121]
[43.65086365 196.65110779]
[56.06577301 186.84393311]
[61.78548431 172.97724915]
[67.50519562 159.11056519]
[73.22489929 145.24388123]
[78.94461060 131.37719727]
[72.21732330 125.61212921]
[67.01731873 118.43910217]
[63.63043213 110.25244141]
[62.24286270 101.50218201]
[47.43455887 99.11176300]
[32.62625122 96.72135162]
[17.81794739 94.33093262]
[6.10484743 104.69130707]
[-9.52868843 105.04709625]
[-21.70098114 95.23030853]
[-24.66464996 79.87613678]
[-17.02033806 66.23434448]
[-2.37745571 60.74617004]
[12.35007381 66.00296021]
[20.20836258 79.52262878]
[35.01666641 81.91304016]
[49.82497406 84.30345917]
[64.63327789 86.69387817]
[69.11560059 75.65054321]
[77.07884979 66.16214752]
[87.96963501 59.33010483]
[80.96247864 46.06738281]
[73.95532227 32.80466461]
[59.12178802 28.05028534]
[52.20446777 14.50018215]
[56.82845306 0.38797659]
[49.82129669 -12.87474346]
[42.81413651 -26.13746262]
[35.80698013 -39.40018463]
[28.79982185 -52.66290283]
[21.79266548 -65.92562103]
[14.78550720 -79.18834686]
[7.77834940 -92.45106506]
[0.77119166 -105.71378326]
[-14.50916767 -106.39044189]
[-27.31466675 -114.57066345]
[-34.26013947 -127.97315979]
[-33.56919098 -142.95242310]
[-25.52742195 -155.49018860]
[-32.53458023 -168.75291443]
[-39.54173660 -182.01562500]
[-46.54889679 -195.27835083]
[-53.55605316 -208.54107666]
[-69.37541962 -217.99578857]
[-67.99450684 -235.50445557]
[-75.15839386 -248.68318176]
[-90.38323212 -252.92344666]
[-98.07763672 -266.72821045]
[-93.67663574 -281.90737915]
[-79.79129028 -289.45538330]
[-64.65950775 -284.89416504]
[-57.25872040 -270.92977905]
[-61.97967911 -255.84707642]
[-54.81578445 -242.66835022]
[-43.32646561 -238.95086670]
[-37.24330521 -228.05827332]
[-40.29333115 -215.54823303]
[-33.28617477 -202.28550720]
[-26.27901840 -189.02279663]
[-19.27186012 -175.76007080]
[-12.26470184 -162.49734497]
[2.62445617 -162.07479858]
[15.38791370 -154.20394897]
[22.54529762 -140.91342163]
[22.08623123 -125.72506714]
[14.03391171 -112.72093964]
[21.04106903 -99.45822144]
[28.04822731 -86.19550323]
[35.05538559 -72.93277740]
[42.06254196 -59.67005920]
[49.06969833 -46.40734100]
[56.07685852 -33.14462280]
[63.08401489 -19.88190079]
[70.09117126 -6.61918116]
[84.35484314 -2.48598337]
[91.65003204 10.86448097]
[87.21804047 25.79750633]
[94.22519684 39.06022644]
[101.23235321 52.32294464]
[115.97982788 55.06376266]
[127.28424835 45.20425034]
[132.59872437 30.30233765]
[147.27609253 27.76774025]
[158.58050537 17.90822983]
[169.88493347 8.04871750]
[181.18936157 -1.81079471]
[192.49378967 -11.67030621]
[203.79821777 -21.52981949]
[215.04399109 -31.45616341]
[226.23074341 -41.44899368]
[237.41749573 -51.44182587]
[248.60423279 -61.43465805]
[253.74166870 -76.39852142]
[268.38796997 -79.10694122]
[279.57470703 -89.09976959]
[290.76144409 -99.09259796]
[301.94821167 -109.08543396]
[313.13494873 -119.07826233]
[324.14224243 -129.26843262]
[334.96658325 -139.65272522]
[345.79095459 -150.03700256]
[345.86819458 -165.84111023]
[357.15661621 -176.90216064]
[372.95901489 -176.65783691]
[383.90011597 -165.25308228]
[383.48870850 -149.45414734]
[371.96893311 -138.63426208]
[356.17523193 -139.21264648]
[345.35089111 -128.82836914]
[334.52651978 -118.44408417]
[334.07833862 -114.97811890]
[331.94906616 -111.55204773]
[328.17312622 -108.94474030]
[323.12777710 -107.89151764]
[311.94104004 -97.89868164]
[300.75430298 -87.90585327]
[289.56753540 -77.91302490]
[278.38079834 -67.92018890]
[274.04351807 -53.67107773]
[258.59707642 -50.24790955]
[247.41032410 -40.25507736]
[236.22357178 -30.26224709]
[225.03681946 -20.26941681]
[222.15167236 -13.49227905]
[213.65771484 -10.22539330]
[202.35330200 -0.36588162]
[191.04887390 9.49363041]
[179.74444580 19.35314178]
[168.44001770 29.21265411]
[157.13560486 39.07216644]
[152.62969971 53.26885986]
[137.14376831 56.50867462]
[125.83934021 66.36818695]
[137.28404236 85.23968506]
[137.29364014 106.08624268]
[151.32373047 111.39252472]
[165.35382080 116.69880676]
[179.38391113 122.00508881]
[195.21345520 114.52191162]
[211.23583984 120.69643402]
[217.69020081 136.24252319]
[231.78221130 141.38211060]
[245.87422180 146.52169800]
[259.96621704 151.66128540]
[274.05822754 156.80087280]
[289.67413330 154.26040649]
[298.97988892 165.89019775]
[313.07189941 171.02978516]
[327.16390991 176.16937256]
[343.21337891 172.80094910]
[353.95223999 185.19485474]
[348.33325195 200.60131836]
[332.13674927 203.17147827]
[322.02432251 190.26138306]
[307.93231201 185.12179565]
[293.84030151 179.98220825]
[279.23236084 182.89028931]
[268.91864014 170.89286804]
[254.82664490 165.75329590]
[240.73463440 160.61370850]
[226.64262390 155.47412109]
[212.55062866 150.33453369]
[201.76339722 157.34663391]
[188.71177673 156.86846924]
[178.15690613 148.85076904]
[174.07762146 136.03517151]
[160.04753113 130.72889709]
[146.01744080 125.42261505]
[131.98736572 120.11633301]
[126.28438568 127.14753723]
[119.07263947 132.62042236]
[110.76609039 136.22084045]
[101.84154510 137.74211121]
[92.81129456 137.09690857]
[87.09158325 150.96359253]
[81.37187958 164.83027649]
[75.65216827 178.69696045]
[69.93245697 192.56364441]
[71.82297516 208.27148438]
[59.81717300 217.08682251]
[54.09746552 230.95350647]
[60.20960236 238.39208984]
[63.19261169 247.48516846]
[62.68072128 256.98348999]
[58.78530502 265.59808350]
[52.07405853 272.17498779]
[43.48865891 275.85000610]
[34.21276093 276.16198730]
[27.84216499 289.74194336]
[21.47157097 303.32189941]
[15.10097504 316.90188599]
[8.73038101 330.48184204]
[2.35978580 344.06179810]
[-4.01080894 357.64178467]
[-10.38140392 371.22174072]
[-16.75199890 384.80172729]
[-23.12259293 398.38168335]
[-29.49318695 411.96163940]
[-35.86378098 425.54162598]
[-35.35621262 429.77899170]
[-36.12739944 433.58355713]
[-37.88916397 436.61062622]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 40]
[2 39]
[3 38]
[4 37]
[5 36]
[6 35]
[8 33]
[9 32]
[14 28]
[15 27]
[16 26]
[18 25]
[19 24]
[41 261]
[42 260]
[43 259]
[44 258]
[45 257]
[46 256]
[47 255]
[48 254]
[49 253]
[50 252]
[51 251]
[52 250]
[55 243]
[56 242]
[58 240]
[59 239]
[60 238]
[61 237]
[62 236]
[66 80]
[67 79]
[68 78]
[69 77]
[83 141]
[84 140]
[85 139]
[88 136]
[89 135]
[90 134]
[91 133]
[92 132]
[93 131]
[94 130]
[95 129]
[96 128]
[101 123]
[102 122]
[103 121]
[104 120]
[105 119]
[107 116]
[108 115]
[142 195]
[143 194]
[145 192]
[146 191]
[147 190]
[148 189]
[149 188]
[150 187]
[151 185]
[152 184]
[153 183]
[154 182]
[156 180]
[157 179]
[158 178]
[159 177]
[160 176]
[161 172]
[162 171]
[163 170]
[197 231]
[198 230]
[199 229]
[200 228]
[203 224]
[204 223]
[205 222]
[206 221]
[207 220]
[209 218]
[210 217]
[211 216]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
