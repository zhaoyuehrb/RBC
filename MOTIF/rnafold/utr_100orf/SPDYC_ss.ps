%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:42:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGCCCUGAUUGGUGGACGGGCUGCUUUGGGCAGGGCCGCCCUCAGGCUAUAUAAGCGCACUCGCGGCGGCGUUGGUGUUAUGCUCUGGGCCAUUCCUGAGCUCGGGUCACCCUGCCCCAUCUCCAUCUCCUAUGAGAUGAGUGACUCCCAAGACCCCACCACUUCCCCUGUAGUUACCA\
) } def
/len { sequence length } bind def

/coor [
[210.59376526 600.57769775]
[219.16807556 587.99194336]
[232.12359619 579.98730469]
[230.07000732 565.12854004]
[228.01641846 550.26983643]
[220.12236023 546.11206055]
[214.96014404 538.66674805]
[213.79981995 529.54248047]
[217.02944946 520.78344727]
[224.03916931 514.41101074]
[222.75321960 499.46621704]
[211.94459534 485.65432739]
[219.85592651 469.03900146]
[218.31361389 454.11849976]
[216.77130127 439.19799805]
[215.22898865 424.27749634]
[213.68666077 409.35699463]
[212.14434814 394.43652344]
[209.04933167 390.76956177]
[208.24131775 385.11257935]
[210.81423950 378.97863770]
[209.78501892 364.01400757]
[201.19268799 351.84759521]
[207.96484375 337.54907227]
[206.93562317 322.58441162]
[203.67698669 317.40206909]
[201.79884338 311.70452881]
[201.35588074 305.84469604]
[202.31573486 300.17132568]
[204.56422424 295.00823975]
[207.91540527 290.63586426]
[200.08340454 277.84289551]
[192.25141907 265.04992676]
[184.41943359 252.25697327]
[176.58744812 239.46400452]
[168.75546265 226.67103577]
[160.92346191 213.87806702]
[153.09147644 201.08511353]
[138.59494019 197.86235046]
[130.46995544 185.00004578]
[133.94856262 169.81658936]
[126.11657715 157.02363586]
[118.28458405 144.23066711]
[110.45259857 131.43769836]
[97.12931061 136.81546021]
[81.31632233 136.18579102]
[65.81523132 128.52377319]
[53.78996277 114.12054443]
[48.15547180 94.68067932]
[33.75322342 90.48838806]
[19.35097694 86.29610443]
[4.65290737 92.72621918]
[-9.47067833 85.11676025]
[-12.18537521 69.30505371]
[-1.40869904 57.42049026]
[14.59240532 58.57989120]
[23.54326057 71.89385986]
[37.94551086 76.08614349]
[52.34775543 80.27842712]
[60.39820099 67.62179565]
[50.49591827 56.35481644]
[40.59363556 45.08783722]
[30.69135475 33.82085800]
[20.78907204 22.55387878]
[5.86712646 17.29592323]
[3.27692437 2.62826777]
[-6.62535763 -8.63871098]
[-16.52763939 -19.90568924]
[-32.22705078 -24.64494133]
[-35.70850754 -40.67028046]
[-23.39058304 -51.49621201]
[-7.94490480 -45.98594666]
[-5.26066017 -29.80797195]
[4.64162159 -18.54099274]
[14.54390335 -7.27401400]
[28.75757217 -2.82194901]
[32.05605316 12.65159607]
[41.95833206 23.91857529]
[51.86061478 35.18555450]
[61.76289749 46.45253372]
[71.66517639 57.71951294]
[78.80994415 55.43865204]
[82.00411224 40.78268814]
[93.09947205 50.87693024]
[100.24423981 48.59606552]
[101.78655243 33.67556763]
[103.32887268 18.75507164]
[104.87118530 3.83457279]
[98.59384155 -10.68801403]
[107.59876251 -22.55227280]
[109.14107513 -37.47277069]
[110.68339539 -52.39326859]
[103.49726868 -67.13408661]
[112.89317322 -80.57466125]
[129.20539856 -78.88848114]
[135.65333557 -63.81015015]
[125.60388947 -50.85095215]
[124.06157684 -35.93045425]
[122.51926422 -21.00995827]
[128.90692139 -7.55458498]
[119.79168701 5.37688780]
[118.24936676 20.29738617]
[116.70705414 35.21788406]
[115.16474152 50.13838196]
[138.14839172 74.67771149]
[139.24746704 104.07828522]
[123.24555969 123.60571289]
[131.07754517 136.39868164]
[138.90954590 149.19163513]
[146.74153137 161.98460388]
[161.84606934 165.79124451]
[169.60658264 178.87670898]
[165.88444519 193.25311279]
[173.71643066 206.04608154]
[181.54841614 218.83905029]
[189.38041687 231.63201904]
[197.21240234 244.42497253]
[205.04438782 257.21795654]
[212.87637329 270.01092529]
[220.70835876 282.80386353]
[234.23881531 289.27896118]
[249.11465454 287.35299683]
[257.24728394 283.13821411]
[264.26211548 285.52389526]
[279.16885376 283.85357666]
[294.07556152 282.18325806]
[302.27932739 278.10870361]
[309.25219727 280.61447144]
[324.18536377 279.20025635]
[339.11856079 277.78607178]
[354.05175781 276.37188721]
[368.98492432 274.95770264]
[382.02990723 265.01986694]
[397.05233765 271.59698486]
[398.59844971 287.92309570]
[385.07772827 297.20327759]
[370.39910889 289.89089966]
[355.46594238 291.30508423]
[340.53274536 292.71926880]
[325.59954834 294.13345337]
[310.66638184 295.54763794]
[295.74588013 297.08996582]
[280.83917236 298.76028442]
[265.93246460 300.43060303]
[251.04063416 302.22882080]
[236.16479492 304.15481567]
[251.14739990 303.43255615]
[263.43710327 312.03271484]
[267.89089966 326.35626221]
[262.64492798 340.40899658]
[249.89454651 348.31011963]
[234.97557068 346.75311279]
[224.13136292 336.38955688]
[221.90028381 321.55520630]
[222.92950439 336.51983643]
[231.59545898 349.75659180]
[224.74967957 362.98477173]
[225.77890015 377.94943237]
[227.06484985 392.89419556]
[228.60716248 407.81469727]
[230.14947510 422.73519897]
[231.69180298 437.65570068]
[233.23411560 452.57620239]
[234.77642822 467.49667358]
[244.28543091 476.23519897]
[245.25053406 488.71121216]
[237.69799805 498.18026733]
[238.98394775 513.12506104]
[252.31871033 529.87939453]
[242.87516785 548.21618652]
[244.92875671 563.07495117]
[246.98234558 577.93371582]
[261.62335205 582.12432861]
[273.28991699 591.91265869]
[279.96075439 605.60278320]
[280.48013306 620.82281494]
[274.75799561 634.93585205]
[263.78579712 645.49664307]
[249.46452332 650.67553711]
[234.27540588 649.57519531]
[220.85006714 642.38635254]
[211.51452637 630.35437012]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 172]
[4 171]
[5 170]
[10 168]
[11 167]
[13 164]
[14 163]
[15 162]
[16 161]
[17 160]
[18 159]
[21 158]
[22 157]
[24 155]
[25 154]
[31 120]
[32 119]
[33 118]
[34 117]
[35 116]
[36 115]
[37 114]
[38 113]
[41 110]
[42 109]
[43 108]
[44 107]
[49 59]
[50 58]
[51 57]
[60 81]
[61 80]
[62 79]
[63 78]
[64 77]
[66 75]
[67 74]
[68 73]
[85 104]
[86 103]
[87 102]
[88 101]
[90 99]
[91 98]
[92 97]
[121 146]
[122 145]
[124 144]
[125 143]
[126 142]
[128 141]
[129 140]
[130 139]
[131 138]
[132 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
