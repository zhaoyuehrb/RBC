%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:53:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCCGCACUAGUACCCCGGAGCCCAUGGGCGCGCCGAGCCGGGCGCGGGGGCGCUGAACGGCGGAGCGGGAGCGGCCGGAGGAGCCAUGGACUGCAGCCUCGUGCGGACGCUCGUGCACAGAUACUGUGCAGGAGAAGAGAAUUGGGUGGACAGCAGGACCAUCUACGUGGGACACAGGGAGCCAC\
) } def
/len { sequence length } bind def

/coor [
[-151.31289673 183.77603149]
[-159.31111145 175.60908508]
[-173.98849487 178.70336914]
[-188.66587830 181.79765320]
[-203.34324646 184.89193726]
[-218.02062988 187.98622131]
[-232.69801331 191.08050537]
[-247.37538147 194.17477417]
[-259.28265381 204.59243774]
[-273.33227539 199.64700317]
[-288.00964355 202.74128723]
[-299.91690063 213.15895081]
[-313.96652222 208.21351624]
[-328.64392090 211.30780029]
[-340.55117798 221.72546387]
[-354.60079956 216.78002930]
[-369.27816772 219.87431335]
[-383.92932129 223.09046936]
[-398.55325317 226.42828369]
[-413.17718506 229.76609802]
[-427.29821777 244.13482666]
[-445.51574707 237.68621826]
[-460.02066040 241.50825500]
[-474.52554321 245.33030701]
[-488.99816895 249.27276611]
[-503.43753052 253.33537292]
[-506.18112183 263.67956543]
[-512.92749023 271.88269043]
[-522.40209961 276.50076294]
[-532.85815430 276.75723267]
[-542.39910889 272.67288208]
[-549.32208252 265.04980469]
[-563.94598389 268.38760376]
[-578.56988525 271.72543335]
[-593.19378662 275.06323242]
[-607.81774902 278.40106201]
[-622.44165039 281.73886108]
[-630.63677979 295.25241089]
[-646.00677490 298.93188477]
[-659.43292236 290.59436035]
[-662.94970703 275.18630981]
[-654.47070312 261.84909058]
[-639.02630615 258.49539185]
[-625.77947998 267.11495972]
[-611.15551758 263.77713013]
[-596.53161621 260.43933105]
[-581.90771484 257.10150146]
[-567.28381348 253.76368713]
[-552.65985107 250.42587280]
[-543.55993652 233.21878052]
[-524.45251465 228.14463806]
[-507.50015259 238.89601135]
[-493.06079102 234.83340454]
[-487.46282959 229.98612976]
[-478.34759521 230.82540894]
[-463.84268188 227.00337219]
[-449.33779907 223.18132019]
[-444.99414062 213.90669250]
[-436.07000732 208.44810486]
[-425.39547729 208.82040405]
[-416.51498413 215.14218140]
[-401.89105225 211.80436707]
[-387.26715088 208.46655273]
[-381.43453979 203.90434265]
[-372.37246704 205.19692993]
[-357.69509888 202.10264587]
[-346.83764648 191.90631104]
[-331.73818970 196.63041687]
[-317.06082153 193.53614807]
[-306.20336914 183.33979797]
[-291.10394287 188.06391907]
[-276.42654419 184.96963501]
[-265.56912231 174.77330017]
[-250.46966553 179.49740601]
[-235.79228210 176.40312195]
[-221.11491394 173.30883789]
[-206.43753052 170.21455383]
[-191.76016235 167.12026978]
[-177.08277893 164.02598572]
[-162.40539551 160.93170166]
[-153.36882019 145.02714539]
[-135.27093506 140.68547058]
[-119.46967316 151.11026001]
[-104.90325165 147.52983093]
[-97.43328094 134.69491577]
[-82.71186066 130.85635376]
[-69.30007172 138.77857971]
[-54.73365402 135.19816589]
[-41.81867981 120.82224274]
[-22.54538345 126.68772125]
[-8.10601902 122.62511444]
[-1.06678104 109.54900360]
[13.51891327 105.22325134]
[27.18661499 112.69530487]
[41.62598038 108.63269806]
[56.06534195 104.57009125]
[70.50470734 100.50748444]
[68.79793549 90.39903259]
[70.75003815 79.37232208]
[76.71944427 68.78803253]
[86.55616760 60.12092209]
[99.57314301 54.77171326]
[114.58593750 53.87485123]
[120.86865997 40.25400925]
[127.15139008 26.63316536]
[125.11621857 10.36079216]
[138.35247803 0.67917502]
[153.24382019 7.54793215]
[154.47132874 23.90107536]
[140.77223206 32.91589355]
[134.48950195 46.53673553]
[128.20677185 60.15757751]
[139.45349121 70.08286285]
[152.18740845 62.15523148]
[164.92132568 54.22759628]
[172.54743958 40.36567307]
[187.44120789 40.20760727]
[200.17512512 32.27997589]
[212.90904236 24.35234070]
[225.64295959 16.42470741]
[238.37687683 8.49707413]
[251.11079407 0.56944048]
[263.84469604 -7.35819292]
[274.09545898 -20.86222076]
[289.90942383 -14.75037575]
[288.41415405 2.13750696]
[271.77233887 5.37572384]
[259.03842163 13.30335712]
[246.30450439 21.23098946]
[233.57060242 29.15862465]
[220.83668518 37.08625793]
[208.10276794 45.01388931]
[195.36885071 52.94152451]
[188.65354919 66.23641205]
[172.84896851 66.96151733]
[160.11505127 74.88914490]
[147.38113403 82.81678009]
[147.56811523 90.31445312]
[162.54388428 89.46226501]
[175.53086853 81.95639801]
[188.61532593 89.29104614]
[188.98901367 104.28638458]
[176.28611755 112.26364136]
[162.94171143 105.41443634]
[147.94206238 105.30978394]
[148.12904358 112.80745697]
[161.24229431 120.09049988]
[174.35554504 127.37355042]
[187.46879578 134.65658569]
[200.58203125 141.93963623]
[213.69528198 149.22268677]
[226.80853271 156.50572205]
[240.35258484 149.11912537]
[255.73841858 150.25036621]
[268.05645752 159.53849792]
[273.37606812 174.01971436]
[269.99978638 189.07308960]
[259.00494385 199.89515686]
[243.89999390 203.03263855]
[229.50483704 197.48437500]
[220.41294861 185.02079773]
[219.52548218 169.61897278]
[206.41224670 162.33593750]
[193.29899597 155.05288696]
[180.18574524 147.76983643]
[167.07249451 140.48680115]
[153.95924377 133.20375061]
[140.84600830 125.92070007]
[99.33531952 138.93237305]
[74.56731415 114.94685364]
[60.12794876 119.00946045]
[45.68858719 123.07206726]
[31.24922180 127.13467407]
[23.48289299 140.63732910]
[8.78145123 144.55169678]
[-4.04341221 137.06448364]
[-18.48277664 141.12709045]
[-23.25840187 150.92613220]
[-32.45493698 156.35823059]
[-42.90291214 155.83238220]
[-51.15322876 149.76457214]
[-65.71965027 153.34500122]
[-73.93048859 166.58206177]
[-88.75391388 170.00561523]
[-101.32283020 162.09625244]
[-115.88925171 165.67668152]
[-119.95865631 176.87103271]
[-128.84158325 184.62496948]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 80]
[3 79]
[4 78]
[5 77]
[6 76]
[7 75]
[8 74]
[10 72]
[11 71]
[13 69]
[14 68]
[16 66]
[17 65]
[18 63]
[19 62]
[20 61]
[22 57]
[23 56]
[24 55]
[25 53]
[26 52]
[32 49]
[33 48]
[34 47]
[35 46]
[36 45]
[37 44]
[83 186]
[84 185]
[87 182]
[88 181]
[90 177]
[91 176]
[94 173]
[95 172]
[96 171]
[97 170]
[103 112]
[104 111]
[105 110]
[113 137]
[114 136]
[115 135]
[117 133]
[118 132]
[119 131]
[120 130]
[121 129]
[122 128]
[123 127]
[146 168]
[147 167]
[148 166]
[149 165]
[150 164]
[151 163]
[152 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
