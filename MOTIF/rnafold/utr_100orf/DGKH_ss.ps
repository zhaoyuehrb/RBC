%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:58:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCACCCGCUGACCAACGCCGCCGCCCCCGCCGGGCGGUGCUGUGUCCCCGCAGGAGUCGGAGAGGAUGGCAGGGGCCGGAGGCCAGCACCACCCUCCGGGCGCCGCUGGAGGAGCGGCCGCCGGAGCCGGCGCCGCGGUCACCUCCGCCGCUGCCUCGGCGGGGC\
) } def
/len { sequence length } bind def

/coor [
[95.34314728 285.42422485]
[80.86997223 279.50296021]
[73.63477325 265.63986206]
[77.05378723 250.38061523]
[89.51266479 240.93019104]
[90.07688904 225.94081116]
[90.64111328 210.95143127]
[91.20533752 195.96203613]
[91.76956177 180.97265625]
[92.33378601 165.98327637]
[92.89801025 150.99388123]
[93.46223450 136.00450134]
[87.28062439 131.75743103]
[73.74287415 138.21723938]
[74.91739655 123.26326752]
[68.73578644 119.01618958]
[54.94604111 124.91897583]
[41.15629578 130.82176208]
[27.36655045 136.72454834]
[13.69027996 142.88569641]
[0.13232650 149.30300903]
[-13.42562675 155.72032166]
[-26.98358154 162.13763428]
[-40.54153442 168.55494690]
[-54.09948730 174.97225952]
[-67.65744019 181.38957214]
[-81.21539307 187.80688477]
[-87.94792175 202.36889648]
[-103.56427765 206.04437256]
[-116.08493042 196.01376343]
[-115.90509796 179.97172546]
[-103.16274261 170.22431946]
[-87.63270569 174.24891663]
[-74.07475281 167.83161926]
[-60.51679993 161.41430664]
[-46.95884705 154.99699402]
[-33.40089417 148.57968140]
[-19.84293938 142.16236877]
[-6.28498554 135.74505615]
[7.27296829 129.32774353]
[9.70605469 125.17281342]
[14.79552555 122.52490234]
[21.46376228 122.93480682]
[35.25350952 117.03202057]
[49.04325485 111.12923431]
[62.83300018 105.22644806]
[66.35914612 89.99523163]
[75.39855194 78.51658630]
[87.55986023 72.45292664]
[100.12765503 72.21012878]
[110.64710236 76.98931885]
[120.69105530 65.84844208]
[130.73500061 54.70756531]
[140.77894592 43.56668854]
[136.92356873 30.30790138]
[140.10865784 16.98374557]
[149.39543152 7.06024075]
[162.27239990 3.06410480]
[175.33395386 5.93992615]
[185.58569336 -5.01004410]
[195.83743286 -15.96001434]
[206.08917236 -26.90998459]
[216.34091187 -37.85995483]
[215.99684143 -53.43298721]
[226.54954529 -64.39177704]
[241.39817810 -64.62382507]
[251.64991760 -75.57379913]
[261.90164185 -86.52376556]
[265.68515015 -101.88591766]
[280.03179932 -105.88874817]
[290.28353882 -116.83872223]
[293.88555908 -125.28069305]
[300.83261108 -127.89594269]
[311.28851318 -138.65113831]
[315.36032104 -153.93939209]
[329.77975464 -157.67164612]
[340.23565674 -168.42683411]
[350.69155884 -179.18202209]
[361.14746094 -189.93721008]
[371.60336304 -200.69239807]
[355.31369019 -209.37001038]
[346.37332153 -230.39437866]
[348.06280518 -245.29891968]
[338.02246094 -257.50415039]
[339.63641357 -273.22579956]
[351.94711304 -283.13653564]
[367.65081787 -281.35647583]
[377.43084717 -268.94168091]
[375.48483276 -253.25765991]
[362.96734619 -243.60943604]
[361.27786255 -228.70489502]
[367.57684326 -224.63391113]
[380.92697144 -231.47311401]
[380.17480469 -216.49195862]
[386.47378540 -212.42097473]
[399.36907959 -220.08329773]
[412.26440430 -227.74562073]
[425.15969849 -235.40794373]
[438.05499268 -243.07026672]
[450.95028687 -250.73258972]
[454.95611572 -265.78552246]
[468.14294434 -273.37252808]
[482.46893311 -269.46081543]
[495.36425781 -277.12313843]
[508.25955200 -284.78546143]
[521.15484619 -292.44778442]
[534.05017090 -300.11010742]
[546.94543457 -307.77243042]
[552.28051758 -322.90240479]
[567.48266602 -328.02832031]
[580.89007568 -319.21801758]
[582.21771240 -303.22998047]
[570.44714355 -292.32888794]
[554.60778809 -294.87710571]
[541.71246338 -287.21478271]
[528.81719971 -279.55245972]
[515.92187500 -271.89013672]
[503.02658081 -264.22781372]
[490.13125610 -256.56549072]
[486.71731567 -242.11280823]
[473.74877930 -234.15841675]
[458.61260986 -237.83728027]
[445.71731567 -230.17497253]
[432.82202148 -222.51264954]
[419.92672729 -214.85032654]
[407.03140259 -207.18800354]
[394.13610840 -199.52568054]
[382.35855103 -190.23649597]
[371.90264893 -179.48130798]
[361.44674683 -168.72612000]
[350.99084473 -157.97093201]
[340.53494263 -147.21574402]
[337.21099854 -132.69676208]
[322.04370117 -128.19523621]
[311.58779907 -117.44004059]
[301.23352051 -106.58698273]
[290.98178101 -95.63700867]
[287.93154907 -81.05807495]
[272.85162354 -76.27202606]
[262.59988403 -65.32205963]
[252.34814453 -54.37208939]
[253.09355164 -39.54036713]
[242.85281372 -28.28950119]
[227.29087830 -27.60821533]
[217.03913879 -16.65824509]
[206.78739929 -5.70827532]
[196.53565979 5.24169493]
[186.28392029 16.19166565]
[189.90361023 32.18326187]
[183.22555542 47.33929443]
[168.69331360 55.62418747]
[151.91981506 53.61063766]
[141.87586975 64.75151062]
[131.83192444 75.89238739]
[121.78797913 87.03326416]
[128.91946411 112.34362793]
[108.45162201 136.56872559]
[107.88739777 151.55810547]
[107.32317352 166.54750061]
[106.75894928 181.53688049]
[106.19472504 196.52626038]
[105.63050079 211.51565552]
[105.06626892 226.50503540]
[104.50204468 241.49441528]
[116.21521759 251.85470581]
[118.47741699 267.32778931]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 164]
[6 163]
[7 162]
[8 161]
[9 160]
[10 159]
[11 158]
[12 157]
[16 46]
[17 45]
[18 44]
[19 43]
[20 40]
[21 39]
[22 38]
[23 37]
[24 36]
[25 35]
[26 34]
[27 33]
[51 155]
[52 154]
[53 153]
[54 152]
[59 148]
[60 147]
[61 146]
[62 145]
[63 144]
[66 141]
[67 140]
[68 139]
[70 137]
[71 136]
[73 135]
[74 134]
[76 132]
[77 131]
[78 130]
[79 129]
[80 128]
[82 91]
[83 90]
[95 127]
[96 126]
[97 125]
[98 124]
[99 123]
[100 122]
[103 119]
[104 118]
[105 117]
[106 116]
[107 115]
[108 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
