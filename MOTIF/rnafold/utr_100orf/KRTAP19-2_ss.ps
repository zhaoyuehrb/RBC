%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:27:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAAACCCAACUCACUAUCUCUGACACCGUGAGCUACUAGGGCAGCUACUGUGGAGGUCUGGGCUAUGGCUGUGGAGGCUUUGGUGGCAUGUGCUAUGGCUACGGCUGUGGAUGUGGCAGCUUCUGCAGACUGGGCUAUGGCUGCGGCUAUGAAGGAUGCAGAUAUGGUUGUGGCCACAGAGGCUGUG\
) } def
/len { sequence length } bind def

/coor [
[-125.48886108 452.76452637]
[-135.50747681 463.92819214]
[-150.14707947 467.19650269]
[-163.96241760 461.35385132]
[-171.81478882 448.57339478]
[-170.78382874 433.60971069]
[-181.52182007 444.08325195]
[-192.25982666 454.55682373]
[-191.12843323 475.53616333]
[-205.61332703 490.34768677]
[-226.02726746 489.70263672]
[-236.04568481 500.86648560]
[-246.06410217 512.03033447]
[-256.08251953 523.19415283]
[-266.10095215 534.35803223]
[-259.84515381 548.24273682]
[-259.78414917 563.47149658]
[-265.92843628 577.40588379]
[-277.21353149 587.63171387]
[-291.68420410 592.37719727]
[-306.83331299 590.82019043]
[-320.03619385 583.23046875]
[-329.00537109 570.92303467]
[-332.18688965 556.03015137]
[-329.02951050 541.13214111]
[-320.08026123 528.81011963]
[-306.88967896 521.19903564]
[-291.74310303 519.61755371]
[-277.26477051 524.33959961]
[-267.24636841 513.17578125]
[-257.22793579 502.01190186]
[-247.20953369 490.84808350]
[-237.19111633 479.68423462]
[-240.55995178 470.91213989]
[-240.49150085 461.45764160]
[-236.95288086 452.62759399]
[-230.39376831 445.65792847]
[-221.68971252 441.54080200]
[-212.02539062 440.88339233]
[-202.73338318 443.81881714]
[-191.99537659 433.34527588]
[-181.25737000 422.87170410]
[-171.23895264 411.70785522]
[-161.98440552 399.90307617]
[-152.72984314 388.09826660]
[-143.47529602 376.29348755]
[-134.22073364 364.48867798]
[-132.45753479 349.69882202]
[-117.85408020 343.61196899]
[-108.59952545 331.80715942]
[-99.34497070 320.00238037]
[-90.09040833 308.19757080]
[-90.15747833 304.65438843]
[-88.49983215 300.90393066]
[-85.03948975 297.76257324]
[-80.06845093 296.05026245]
[-70.23697662 284.72143555]
[-60.40550613 273.39260864]
[-50.57403183 262.06381226]
[-51.87827682 247.27073669]
[-42.06914902 235.64164734]
[-26.54398537 234.37394714]
[-16.71251297 223.04512024]
[-6.88103867 211.71630859]
[2.95043468 200.38748169]
[12.78190804 189.05867004]
[22.61338043 177.72985840]
[32.44485474 166.40103149]
[34.94307709 151.71743774]
[49.83177948 146.36605835]
[59.66325378 135.03724670]
[69.49472809 123.70841980]
[79.32620239 112.37960052]
[76.05714417 102.72031403]
[77.07592773 92.57385254]
[82.20011139 83.75731659]
[90.51202393 77.84963226]
[100.52310181 75.90877533]
[110.44049835 78.28234100]
[120.82444763 67.45766449]
[131.20838928 56.63298798]
[141.59233093 45.80830765]
[145.56210327 30.49323463]
[159.95631409 26.66490746]
[170.34025574 15.84022999]
[180.72419739 5.01555252]
[191.10815430 -5.80912542]
[201.49209595 -16.63380241]
[205.18417358 -25.01001167]
[212.13973999 -27.55029297]
[222.70217896 -38.20087814]
[233.26460266 -48.85146332]
[243.73815918 -59.58946609]
[254.12211609 -70.41414642]
[264.50604248 -81.23882294]
[274.89001465 -92.06349945]
[285.27395630 -102.88817596]
[295.65789795 -113.71285248]
[306.04183960 -124.53753662]
[316.42578125 -135.36221313]
[326.80975342 -146.18688965]
[330.50180054 -154.56309509]
[337.45736694 -157.10337830]
[348.01980591 -167.75396729]
[358.58224487 -178.40455627]
[369.05581665 -189.14254761]
[379.43975830 -199.96722412]
[389.82369995 -210.79190063]
[400.20764160 -221.61659241]
[410.59158325 -232.44126892]
[420.97552490 -243.26594543]
[431.35949707 -254.09062195]
[435.32925415 -269.40570068]
[449.72344971 -273.23400879]
[460.10739136 -284.05868530]
[463.49423218 -300.10430908]
[479.16537476 -304.93612671]
[490.99975586 -293.58361816]
[486.82315063 -277.72521973]
[470.93206787 -273.67474365]
[460.54812622 -262.85006714]
[457.32110596 -248.30924988]
[442.18417358 -243.70666504]
[431.80020142 -232.88198853]
[421.41625977 -222.05731201]
[411.03231812 -211.23263550]
[400.64837646 -200.40795898]
[390.26443481 -189.58328247]
[379.88049316 -178.75860596]
[377.51440430 -171.74186707]
[369.23284912 -167.84211731]
[358.67041016 -157.19152832]
[348.10797119 -146.54093933]
[337.63442993 -135.80294800]
[327.25045776 -124.97826385]
[316.86651611 -114.15358734]
[306.48257446 -103.32891083]
[296.09863281 -92.50423431]
[285.71469116 -81.67955017]
[275.33071899 -70.85487366]
[264.94677734 -60.03019714]
[254.56283569 -49.20552063]
[252.19676208 -42.18878174]
[243.91519165 -38.28903198]
[233.35276794 -27.63844490]
[222.79032898 -16.98785782]
[212.31677246 -6.24985552]
[201.93283081 4.57482195]
[191.54887390 15.39949894]
[181.16493225 26.22417641]
[170.78099060 37.04885483]
[167.55395508 51.58967590]
[152.41702271 56.19225693]
[142.03306580 67.01693726]
[131.64912415 77.84161377]
[121.26517487 88.66629028]
[122.79747009 107.80615234]
[109.85483551 121.98960876]
[90.65501404 122.21107483]
[80.82354736 133.53990173]
[70.99207306 144.86871338]
[61.16059875 156.19754028]
[57.95915985 171.69145203]
[43.77367401 176.23251343]
[33.94219971 187.56132507]
[24.11072731 198.89013672]
[14.27925301 210.21896362]
[4.44778013 221.54777527]
[-5.38369322 232.87660217]
[-15.21516705 244.20541382]
[-14.28400707 259.75439453]
[-24.41590309 271.10336304]
[-39.24521255 271.89526367]
[-49.07668686 283.22409058]
[-58.90816116 294.55291748]
[-68.73963165 305.88171387]
[-78.28561401 317.45211792]
[-87.54017639 329.25692749]
[-96.79473114 341.06170654]
[-106.04928589 352.86651611]
[-108.47443390 368.50073242]
[-122.41593933 373.74325562]
[-131.67050171 385.54803467]
[-140.92504883 397.35284424]
[-150.17961121 409.15762329]
[-159.43415833 420.96243286]
[-144.66802979 418.32400513]
[-131.11557007 424.75292969]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 42]
[7 41]
[8 40]
[11 33]
[12 32]
[13 31]
[14 30]
[15 29]
[43 186]
[44 185]
[45 184]
[46 183]
[47 182]
[49 180]
[50 179]
[51 178]
[52 177]
[56 176]
[57 175]
[58 174]
[59 173]
[62 170]
[63 169]
[64 168]
[65 167]
[66 166]
[67 165]
[68 164]
[70 162]
[71 161]
[72 160]
[73 159]
[79 156]
[80 155]
[81 154]
[82 153]
[84 151]
[85 150]
[86 149]
[87 148]
[88 147]
[90 146]
[91 145]
[92 144]
[93 142]
[94 141]
[95 140]
[96 139]
[97 138]
[98 137]
[99 136]
[100 135]
[101 134]
[103 133]
[104 132]
[105 131]
[106 129]
[107 128]
[108 127]
[109 126]
[110 125]
[111 124]
[112 123]
[114 121]
[115 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
