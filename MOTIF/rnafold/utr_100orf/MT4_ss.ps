%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:27:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGGGAGCCUCUGGCUGCUGCUCACUCAGCCUCCCUUCCCCAGCCGUGACAGCACUGGAGCCUUUCGGACACCUGGACCAUGGACCCCAGGGAAUGUGUCUGCAUGUCUGGAGGAAUCUGCAUGUGUGGAGACAACUGCAAAUGCACAACCUGCAACUGUAAAACAUAUUGGAAGAGCU\
) } def
/len { sequence length } bind def

/coor [
[111.41996765 114.64372253]
[94.53443909 116.16612244]
[83.97396851 126.81864929]
[73.41349030 137.47117615]
[62.85300827 148.12370300]
[52.29253006 158.77622986]
[41.73205566 169.42875671]
[31.17157555 180.08128357]
[35.54822540 193.38232422]
[33.76968384 207.20475769]
[26.24032211 218.85337830]
[14.48020077 226.08169556]
[0.81851202 227.52510071]
[-12.06766605 222.95820618]
[-22.81143761 233.42584229]
[-33.55521011 243.89347839]
[-44.29898453 254.36111450]
[-55.04275513 264.82873535]
[-51.85925674 279.92407227]
[-57.36363220 294.33605957]
[-69.79945374 303.46588135]
[-85.19849396 304.40026855]
[-98.64698029 296.84106445]
[-105.85353851 283.20034790]
[-104.51860046 267.83084106]
[-95.06812286 255.63691711]
[-80.51772308 250.50958252]
[-65.51039124 254.08497620]
[-54.76661682 243.61734009]
[-44.02284622 233.14970398]
[-33.27907181 222.68206787]
[-22.53529930 212.21443176]
[-26.89667892 196.66802979]
[-22.80678558 180.95108032]
[-11.28844452 169.36947632]
[4.58717346 165.14530945]
[20.51905060 169.52079773]
[31.07952881 158.86827087]
[41.64000702 148.21574402]
[52.20048141 137.56323242]
[62.76095963 126.91069794]
[73.32144165 116.25817108]
[83.88191986 105.60564423]
[81.10393524 95.96127319]
[84.29574585 85.19794464]
[69.70565033 81.71524811]
[55.08588028 78.35930634]
[40.43753815 75.13037109]
[25.78919601 71.90142822]
[10.32684898 77.36474609]
[-1.95812881 66.50144196]
[1.57199574 50.48675156]
[17.28573227 45.79521942]
[29.01813698 57.25308609]
[43.66648102 60.48202515]
[58.31482315 63.71096802]
[65.54319763 62.07593536]
[73.18833923 67.12516022]
[87.77843475 70.60784912]
[102.59579468 68.27418518]
[115.40914154 60.47559357]
[128.22248840 52.67699814]
[140.96768188 44.76749802]
[153.64375305 36.74769211]
[166.31980896 28.72788239]
[178.99588013 20.70807457]
[191.67195129 12.68826675]
[176.82093811 14.79719639]
[165.24731445 5.25511694]
[164.48614502 -9.72555733]
[175.03297424 -20.39159012]
[190.02125549 -19.79881096]
[199.69267273 -8.33357811]
[195.58036804 -22.75886536]
[191.46804810 -37.18415070]
[187.35574341 -51.60943985]
[183.24343872 -66.03472900]
[168.32719421 -69.69549561]
[157.25083923 -80.33551025]
[152.99386597 -95.09266663]
[156.70135498 -109.99736023]
[167.37603760 -121.04031372]
[182.14646912 -125.25101471]
[197.03947449 -121.49681091]
[208.04890442 -110.78756714]
[212.21328735 -96.00401306]
[208.41242981 -81.12284851]
[197.66871643 -70.14703369]
[201.78103638 -55.72174835]
[205.89334106 -41.29646301]
[210.00564575 -26.87117386]
[214.11796570 -12.44588757]
[214.66003418 -3.07504344]
[212.15206909 5.47918749]
[227.05670166 3.79048061]
[241.96133423 2.10177398]
[256.86596680 0.41306734]
[271.77062988 -1.27563930]
[286.67526245 -2.96434593]
[301.57989502 -4.65305281]
[316.11422729 -15.93915272]
[331.92062378 -8.34161568]
[346.79370117 -10.28875256]
[361.66677856 -12.23589039]
[376.53985596 -14.18302727]
[384.66845703 -18.41015434]
[391.68771362 -16.03257179]
[406.59234619 -17.72127914]
[414.79309082 -21.80669022]
[421.77001953 -19.30763817]
[436.70172119 -20.73740578]
[449.70156860 -29.75487900]
[463.10839844 -23.26594353]
[478.04010010 -24.69571114]
[492.97180176 -26.12547874]
[499.08023071 -38.49878311]
[510.41885376 -46.17137909]
[523.96026611 -47.22404861]
[536.15234375 -41.48810959]
[543.84991455 -30.56163979]
[558.80419922 -31.73203659]
[573.75842285 -32.90243530]
[588.71270752 -34.07283020]
[603.66699219 -35.24322891]
[616.82135010 -44.03371811]
[630.11358643 -37.31307220]
[645.06781006 -38.48347092]
[660.02209473 -39.65386963]
[674.97637939 -40.82426453]
[689.93066406 -41.99466324]
[700.00811768 -54.16922760]
[715.75030518 -55.56889725]
[727.81762695 -45.36326981]
[729.05078125 -29.60716248]
[718.71813965 -17.64839554]
[702.94989014 -16.58189583]
[691.10101318 -27.04039383]
[676.14678955 -25.86999702]
[661.19250488 -24.69959831]
[646.23822021 -23.52920151]
[631.28393555 -22.35880280]
[619.19921875 -13.65202808]
[604.83740234 -20.28895950]
[589.88311768 -19.11856270]
[574.92883301 -17.94816399]
[559.97460938 -16.77776718]
[545.02032471 -15.60736942]
[536.90075684 -1.35445297]
[521.73779297 5.32613182]
[505.41659546 1.62535024]
[494.40158081 -11.19377613]
[479.46987915 -9.76400852]
[464.53814697 -8.33424091]
[452.60635376 0.58096659]
[438.13150024 -5.80570269]
[423.19979858 -4.37593508]
[408.28106689 -2.81663918]
[393.37643433 -1.12793255]
[378.48699951 0.69005787]
[363.61392212 2.63719511]
[348.74084473 4.58433199]
[333.86773682 6.53146935]
[326.23641968 15.93882847]
[313.84201050 17.66917610]
[303.26861572 10.25158691]
[288.36395264 11.94029331]
[273.45932007 13.62899971]
[258.55468750 15.31770611]
[243.65003967 17.00641251]
[228.74540710 18.69511986]
[213.84077454 20.38382721]
[199.69175720 25.36433411]
[187.01568604 33.38414001]
[174.33961487 41.40394974]
[161.66355896 49.42375946]
[148.98748779 57.44356537]
[145.00523376 63.69372177]
[136.02108765 65.49034882]
[123.20773315 73.28894043]
[110.39438629 81.08753967]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 43]
[3 42]
[4 41]
[5 40]
[6 39]
[7 38]
[8 37]
[14 32]
[15 31]
[16 30]
[17 29]
[18 28]
[45 59]
[46 58]
[47 56]
[48 55]
[49 54]
[60 180]
[61 179]
[62 178]
[63 176]
[64 175]
[65 174]
[66 173]
[67 172]
[73 92]
[74 91]
[75 90]
[76 89]
[77 88]
[94 171]
[95 170]
[96 169]
[97 168]
[98 167]
[99 166]
[100 165]
[102 162]
[103 161]
[104 160]
[105 159]
[107 158]
[108 157]
[110 156]
[111 155]
[113 153]
[114 152]
[115 151]
[120 147]
[121 146]
[122 145]
[123 144]
[124 143]
[126 141]
[127 140]
[128 139]
[129 138]
[130 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
