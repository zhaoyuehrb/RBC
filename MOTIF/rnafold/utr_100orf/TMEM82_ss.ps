%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:09:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGCCCAGUGACGUUGGUCUGUCCUUACGCAGACCUGGCCGGAGGCUGGGGCUCCUUCCGGGGCUGCCAUGUUCUCUCUUCCAUCCCUCCCCUCCUGGCUCCCCGGCCUCCCCUCCCUCGAGUGGGGCUCUAGCCUCCUUGACUCCCUCCUGCAAGGCCUGAUCGGGG\
) } def
/len { sequence length } bind def

/coor [
[56.62199402 276.33218384]
[42.47021866 268.77526855]
[39.69676208 252.97377014]
[50.42918396 241.04924011]
[50.98673630 226.05960083]
[51.54428482 211.06996155]
[44.93604660 207.52296448]
[37.84205246 220.73944092]
[30.74805832 233.95591736]
[28.08535957 248.71769714]
[13.22325516 250.74693298]
[6.70071220 237.23928833]
[17.53158188 226.86192322]
[24.62557793 213.64544678]
[31.71957207 200.42897034]
[25.11133385 196.88197327]
[12.92709923 205.63093567]
[0.74286377 214.37991333]
[-11.44137192 223.12887573]
[-23.62560654 231.87783813]
[-35.80984116 240.62680054]
[-47.99407578 249.37577820]
[-50.30577850 265.01007080]
[-63.04514694 274.36337280]
[-78.65414429 271.88650513]
[-87.87222290 259.04895020]
[-85.23046112 243.46702576]
[-72.29617310 234.38519287]
[-56.74304199 237.19154358]
[-44.55880737 228.44256592]
[-32.37457275 219.69360352]
[-20.19033813 210.94464111]
[-8.00610256 202.19567871]
[4.17813301 193.44670105]
[16.36236763 184.69773865]
[30.56668663 154.49635315]
[58.16737747 151.63589478]
[65.38390350 138.48593140]
[72.60043335 125.33596039]
[79.81696320 112.18598938]
[83.15242004 84.61905670]
[78.49065399 70.36184692]
[73.82888794 56.10464478]
[69.16712189 41.84743500]
[64.50535583 27.59023094]
[59.84359360 13.33302402]
[55.18182755 -0.92418283]
[50.52005768 -15.18138885]
[45.85829163 -29.43859673]
[41.19652557 -43.69580078]
[36.53475952 -57.95301056]
[22.71969986 -65.14897156]
[18.19510651 -79.67420959]
[25.14049149 -92.80041504]
[20.47872543 -107.05762482]
[5.53324366 -110.31028748]
[-5.70330763 -120.53949738]
[-10.28062439 -134.92402649]
[-7.06483126 -149.57034302]
[2.98261738 -160.56645203]
[-1.67914867 -174.82365417]
[-6.34091473 -189.08085632]
[-11.00268078 -203.33805847]
[-24.84264946 -205.51361084]
[-36.33523178 -213.40959167]
[-43.26373672 -225.43368530]
[-44.32180405 -239.20426941]
[-39.35935593 -252.02212524]
[-29.40082741 -261.39944458]
[-33.79677200 -275.74084473]
[-38.19271469 -290.08224487]
[-53.17824173 -293.44818115]
[-64.46224213 -303.86773682]
[-69.00936890 -318.53808594]
[-65.59647369 -333.51296997]
[-55.14160919 -344.76425171]
[-40.45707703 -349.26538086]
[-25.49294662 -345.80557251]
[-14.27449036 -335.31549072]
[-9.81941891 -320.61691284]
[-13.32612324 -305.66369629]
[-23.85131836 -294.47817993]
[-19.45537376 -280.13677979]
[-15.05942917 -265.79537964]
[0.75502604 -262.56817627]
[12.86151600 -251.75245667]
[17.90162277 -236.22192383]
[14.41355801 -220.17498779]
[3.25452566 -207.99983215]
[7.91629171 -193.74263000]
[12.57805824 -179.48541260]
[17.23982430 -165.22821045]
[31.84274673 -162.29219055]
[43.09021759 -152.37501526]
[47.89533615 -138.06497192]
[44.87269592 -123.17334747]
[34.73593140 -111.71939087]
[39.39769745 -97.46218109]
[52.75623322 -90.97487640]
[57.68702698 -76.58245087]
[50.79196930 -62.61477661]
[55.45373535 -48.35756683]
[60.11550140 -34.10036087]
[64.77726746 -19.84315491]
[69.43903351 -5.58594894]
[74.10079956 8.67125797]
[78.76256561 22.92846489]
[83.42433167 37.18566895]
[88.08609772 51.44287872]
[92.74786377 65.70008087]
[97.40962982 79.95729065]
[98.21372986 64.97885895]
[108.85430145 54.40633011]
[123.83758545 53.69832611]
[135.42767334 63.22039032]
[137.64059448 78.05625916]
[129.33380127 90.54614258]
[114.79406738 94.24124146]
[129.68470764 96.04929352]
[144.57533264 97.85733795]
[159.46597290 99.66539001]
[174.35659790 101.47344208]
[183.29417419 99.39601898]
[189.50627136 103.45599365]
[204.36071777 105.54052734]
[219.21516418 107.62505341]
[234.06962585 109.70957947]
[248.92407227 111.79410553]
[263.91674805 105.14944458]
[277.00631714 115.02847290]
[274.72735596 131.26849365]
[259.42425537 137.16316223]
[246.83953857 126.64855957]
[231.98509216 124.56403351]
[217.13064575 122.47950745]
[202.27618408 120.39497375]
[187.42173767 118.31044769]
[172.54855347 116.36407471]
[157.65791321 114.55602264]
[142.76728821 112.74797058]
[127.87665558 110.93992615]
[112.98601532 109.13187408]
[125.18695068 117.85753632]
[139.57057190 122.11331177]
[150.84396362 132.00828552]
[156.92909241 145.71855164]
[156.70431519 160.71685791]
[150.21104431 174.23860168]
[138.64619446 183.79130554]
[124.14150238 187.61413574]
[109.37062836 185.00241089]
[97.05626678 176.43756104]
[89.46833801 163.49833679]
[88.00551605 148.56983948]
[92.93826294 134.40249634]
[92.96693420 119.40251923]
[85.75040436 132.55249023]
[78.53387451 145.70245361]
[71.31734467 158.85243225]
[77.88411713 164.86717224]
[82.33641052 173.30740356]
[83.79222870 183.38479614]
[81.67486572 193.99864197]
[75.81974030 203.85615540]
[66.53392029 211.62751770]
[65.97637177 226.61715698]
[65.41881561 241.60678101]
[75.23572540 254.29566956]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 167]
[5 166]
[6 165]
[16 35]
[17 34]
[18 33]
[19 32]
[20 31]
[21 30]
[22 29]
[37 159]
[38 158]
[39 157]
[40 156]
[41 111]
[42 110]
[43 109]
[44 108]
[45 107]
[46 106]
[47 105]
[48 104]
[49 103]
[50 102]
[51 101]
[54 98]
[55 97]
[60 92]
[61 91]
[62 90]
[63 89]
[69 84]
[70 83]
[71 82]
[118 142]
[119 141]
[120 140]
[121 139]
[122 138]
[124 137]
[125 136]
[126 135]
[127 134]
[128 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
