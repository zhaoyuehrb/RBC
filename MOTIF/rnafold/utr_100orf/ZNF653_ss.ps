%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:19:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUUCCAUUCUUGGUCUCCUUUUGGCGCCCUGGGGCAGCGAGAGACCGUGAGAAAUUUCUCGGCGGCGCCGAAGAUGCGCGCCACUUCCGGUCUGGCUCCUAACAACGGGGGAGGCUGGUAACCAGGGUGGGGGGGAUGGCGGAGCGGGCGCUAGAGCCCGAGGCGGAGGCGGAGGCUGAGGCGGGCGCGGGCGGGGAGGCAGCAGCCGAGGAGGGCGCAGCGGGCCGAAAGGCGC\
) } def
/len { sequence length } bind def

/coor [
[405.93121338 428.11053467]
[395.53668213 417.29602051]
[385.14215088 406.48150635]
[374.74761963 395.66699219]
[364.35308838 384.85244751]
[353.95858765 374.03793335]
[343.56405640 363.22341919]
[331.49154663 362.67425537]
[322.74359131 353.76574707]
[322.39117432 340.88446045]
[312.14031982 329.93368530]
[301.88943481 318.98291016]
[291.63854980 308.03210449]
[277.29220581 304.02813721]
[273.50991821 288.66571045]
[263.25906372 277.71493530]
[253.00817871 266.76412964]
[242.75730896 255.81335449]
[232.50643921 244.86257935]
[213.63703918 240.59140015]
[209.41316223 220.86819458]
[198.87680054 210.19183350]
[188.34042358 199.51545715]
[177.80406189 188.83908081]
[167.26770020 178.16270447]
[156.73132324 167.48632812]
[146.19496155 156.80995178]
[135.65858459 146.13359070]
[125.12222290 135.45721436]
[114.58585358 124.78083801]
[104.04948425 114.10446167]
[89.70619965 109.71468353]
[74.99926758 112.66530609]
[60.29233932 115.61592865]
[48.28378677 125.91667175]
[34.28318787 120.83409882]
[19.57625771 123.78472900]
[7.56770372 134.08546448]
[-6.43289471 129.00289917]
[-21.13982582 131.95352173]
[-35.82696152 135.00114441]
[-50.49366379 138.14564514]
[-65.16036987 141.29013062]
[-79.82707214 144.43463135]
[-94.49377441 147.57911682]
[-109.16047668 150.72361755]
[-113.80449677 165.36358643]
[-125.15714264 175.70829773]
[-140.16459656 178.97508240]
[-154.78993225 174.28518677]
[-165.09901428 162.90017700]
[-168.31874084 147.88255310]
[-163.58302307 133.27198792]
[-152.16575623 122.99864960]
[-137.13812256 119.82601166]
[-122.54247284 124.60749817]
[-112.30496979 136.05691528]
[-97.63826752 132.91241455]
[-82.97156525 129.76792908]
[-68.30486298 126.62342834]
[-53.63815689 123.47893524]
[-38.97145462 120.33444214]
[-33.10105515 115.86734009]
[-24.09045029 117.24658966]
[-9.38352013 114.29596710]
[1.57309544 104.20627594]
[16.62563133 109.07779694]
[31.33256340 106.12716675]
[42.28917694 96.03748322]
[57.34171677 100.90900421]
[72.04864502 97.95837402]
[86.75557709 95.00775146]
[71.82327271 93.58426666]
[62.80279541 81.59965515]
[65.56697083 66.85654449]
[78.31616974 58.95350647]
[92.74996185 63.03585052]
[99.47114563 76.44530487]
[96.90976715 61.66561508]
[84.79017639 47.79080582]
[91.50102997 31.56717110]
[88.74478149 16.82257462]
[85.98854065 2.07797790]
[83.23229980 -12.66661835]
[80.47605896 -27.41121483]
[77.42842865 -42.09835052]
[74.09061432 -56.72227097]
[70.75279999 -71.34619141]
[67.41498566 -85.97010803]
[64.07717133 -100.59402466]
[60.73936081 -115.21794128]
[50.12522507 -126.95040894]
[54.83644867 -141.08029175]
[51.49863434 -155.70420837]
[48.16082001 -170.32812500]
[44.82300568 -184.95204163]
[41.48519135 -199.57595825]
[37.38024902 -214.00335693]
[32.51961517 -228.19398499]
[27.65897942 -242.38462830]
[22.79834366 -256.57525635]
[17.93770981 -270.76589966]
[3.06697440 -275.19769287]
[-6.33199167 -287.54431152]
[-6.64509392 -303.05822754]
[2.24806190 -315.77404785]
[16.92787552 -320.80221558]
[31.74966049 -316.20938110]
[41.01413727 -303.76150513]
[41.15892410 -288.24511719]
[32.12834930 -275.62652588]
[36.98898315 -261.43591309]
[41.84961700 -247.24526978]
[46.71025085 -233.05462646]
[51.57088852 -218.86398315]
[57.11226654 -232.80288696]
[69.73343658 -240.90882874]
[84.71424103 -240.15026855]
[96.45207214 -230.81092834]
[100.55712891 -216.38357544]
[95.49418640 -202.26385498]
[83.15670776 -193.73234558]
[68.15875244 -193.97972107]
[56.10911179 -202.91377258]
[59.44692612 -188.28985596]
[62.78474045 -173.66593933]
[66.12255096 -159.04202271]
[69.46036530 -144.41810608]
[79.83576202 -133.73164368]
[75.36328125 -118.55575562]
[78.70109558 -103.93183899]
[82.03890991 -89.30792236]
[85.37672424 -74.68400574]
[88.71453857 -60.06008530]
[92.05235291 -45.43616486]
[94.80879211 -43.26538086]
[96.65886688 -39.65976334]
[96.94319916 -35.05605316]
[95.22064972 -30.16745758]
[97.97689819 -15.42286110]
[100.73313904 -0.67826492]
[103.48937988 14.06633186]
[106.24562073 28.81092834]
[116.03721619 35.89411545]
[118.46267700 48.14179611]
[111.68946075 59.10423279]
[114.25083923 73.88392639]
[114.72586060 103.56809998]
[125.26222992 114.24446869]
[135.79859924 124.92084503]
[146.33496094 135.59721375]
[156.87133789 146.27359009]
[167.40769958 156.94996643]
[177.94406128 167.62634277]
[188.48043823 178.30271912]
[199.01679993 188.97908020]
[209.55317688 199.65545654]
[220.08953857 210.33183289]
[230.92893982 209.77421570]
[240.10206604 215.15417480]
[244.71192932 224.49348450]
[243.45721436 234.61170959]
[253.70808411 245.56248474]
[263.95895386 256.51327515]
[274.20983887 267.46405029]
[284.46072388 278.41482544]
[299.54025269 283.20205688]
[302.58935547 297.78125000]
[312.84020996 308.73202515]
[323.09109497 319.68280029]
[333.34194946 330.63357544]
[351.08724976 335.58334351]
[354.37857056 352.82888794]
[364.77310181 363.64340210]
[375.16763306 374.45794678]
[385.56213379 385.27246094]
[395.95666504 396.08697510]
[406.35119629 406.90148926]
[416.74572754 417.71600342]
[423.35043335 416.12719727]
[430.07241821 416.64205933]
[436.26290894 419.17919922]
[441.33416748 423.46359253]
[444.81527710 429.05599976]
[446.39581299 435.39794922]
[445.95336914 441.86730957]
[443.56228638 447.83947754]
[453.06863403 459.44247437]
[462.57495117 471.04547119]
[472.08129883 482.64846802]
[488.96127319 481.44015503]
[503.09130859 490.44757080]
[509.00253296 505.94927979]
[504.54779053 521.75781250]
[514.20642090 533.23431396]
[523.86511230 544.71081543]
[537.49206543 542.70855713]
[550.22955322 547.65734863]
[558.79370117 558.16662598]
[561.03320312 571.42761230]
[556.46929932 583.96313477]
[565.97564697 595.56616211]
[580.70660400 601.33752441]
[582.78753662 616.08599854]
[592.29388428 627.68902588]
[600.13800049 632.33264160]
[601.84790039 639.50848389]
[611.20019531 651.23596191]
[620.55255127 662.96343994]
[636.28356934 664.48370361]
[646.26745605 676.73510742]
[644.58099365 692.44915771]
[632.22473145 702.30297852]
[616.52935791 700.45043945]
[606.80676270 687.99066162]
[608.82507324 672.31579590]
[599.47277832 660.58831787]
[590.12042236 648.86083984]
[580.69085693 637.19537354]
[571.18450928 625.59234619]
[557.13348389 620.65093994]
[554.37261963 605.07250977]
[544.86627197 593.46948242]
[528.50836182 594.94360352]
[514.35681152 586.28454590]
[508.09915161 570.73999023]
[512.38861084 554.36950684]
[502.72991943 542.89294434]
[493.07125854 531.41644287]
[479.91052246 533.59924316]
[467.28689575 528.96118164]
[458.53018188 518.61181641]
[456.00619507 505.18182373]
[460.47830200 492.15481567]
[450.97195435 480.55178833]
[441.46563721 468.94879150]
[431.95928955 457.34579468]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 179]
[2 178]
[3 177]
[4 176]
[5 175]
[6 174]
[7 173]
[10 171]
[11 170]
[12 169]
[13 168]
[15 166]
[16 165]
[17 164]
[18 163]
[19 162]
[21 158]
[22 157]
[23 156]
[24 155]
[25 154]
[26 153]
[27 152]
[28 151]
[29 150]
[30 149]
[31 148]
[32 72]
[33 71]
[34 70]
[36 68]
[37 67]
[39 65]
[40 64]
[41 62]
[42 61]
[43 60]
[44 59]
[45 58]
[46 57]
[78 147]
[79 146]
[81 143]
[82 142]
[83 141]
[84 140]
[85 139]
[86 135]
[87 134]
[88 133]
[89 132]
[90 131]
[91 130]
[93 128]
[94 127]
[95 126]
[96 125]
[97 124]
[98 115]
[99 114]
[100 113]
[101 112]
[102 111]
[187 237]
[188 236]
[189 235]
[190 234]
[194 229]
[195 228]
[196 227]
[201 223]
[202 222]
[204 220]
[205 219]
[207 218]
[208 217]
[209 216]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
