%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:49:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCCCGCCUCGCGCCGCGCGCACGUGACUGCGCCCCCGGCCCCGCCCCCGGCCUGCCCCCCGCCCCCACUGGCCGCUCGGCCGCGCGCGGGUCGGCCGGCUCUAUGGGGAAAGCGGCGGCUCCGAGCCGAGGCGGCGGCUGUGGCGGCCGCUCCCGCGGGCUCUCGUCGCUGUUCACGGUUGUCCCCUGCCUGUCGUGCCACA\
) } def
/len { sequence length } bind def

/coor [
[294.81390381 240.02191162]
[282.34985352 231.67642212]
[269.88580322 223.33091736]
[255.00546265 222.67910767]
[247.84315491 208.57194519]
[235.37910461 200.22645569]
[222.91505432 191.88095093]
[210.45098877 183.53546143]
[197.98693848 175.18995667]
[185.52287292 166.84446716]
[173.05882263 158.49897766]
[160.59475708 150.15347290]
[153.28428650 149.04367065]
[148.00500488 141.58337402]
[135.67028809 133.04785156]
[123.27054596 124.60710144]
[110.80649567 116.26160431]
[97.31369019 124.09757996]
[79.04692078 120.00405121]
[68.15971375 130.32241821]
[57.27250671 140.64079285]
[46.38529968 150.95915222]
[35.49809265 161.27752686]
[35.32489395 177.08087158]
[23.96950531 188.07316589]
[8.16887951 187.73289490]
[-2.70275211 176.26193237]
[-2.19544458 160.46577454]
[9.38982582 149.71603394]
[25.17972374 150.39031982]
[36.06692886 140.07194519]
[46.95413589 129.75358582]
[57.84134293 119.43521118]
[68.72855377 109.11684418]
[54.25786972 113.06645966]
[42.65729141 103.55716705]
[43.69086075 88.59281921]
[56.48863983 80.76869965]
[70.27896118 86.67032623]
[60.91378021 74.95309448]
[51.54860306 63.23587036]
[42.18342590 51.51864243]
[32.72874069 39.87351608]
[23.18510246 28.30117798]
[13.64146614 16.72884178]
[4.09782934 5.15650320]
[-5.70927858 -6.19341421]
[-15.77467632 -17.31491470]
[-25.84007454 -28.43641472]
[-35.90547180 -39.55791473]
[-46.30696106 -50.36573792]
[-57.03476715 -60.84973526]
[-67.76257324 -71.33373260]
[-78.49037933 -81.81772614]
[-93.76793671 -85.92950439]
[-97.46246338 -100.35863495]
[-108.19027710 -110.84262848]
[-118.91808319 -121.32662201]
[-136.85777283 -125.47008514]
[-140.93624878 -142.53648376]
[-151.82345581 -152.85485840]
[-162.71066284 -163.17321777]
[-173.59786987 -173.49159241]
[-184.48507690 -183.80995178]
[-195.22660828 -179.78262329]
[-206.64372253 -180.05563354]
[-217.08619690 -184.55116272]
[-225.05900574 -192.58390808]
[-229.43634033 -202.96517944]
[-229.62043762 -214.17872620]
[-225.62300110 -224.60224915]
[-236.02449036 -235.41006470]
[-246.42597961 -246.21789551]
[-256.82745361 -257.02572632]
[-267.22894287 -267.83352661]
[-283.12655640 -271.85824585]
[-287.32888794 -287.70983887]
[-275.51293945 -299.08151245]
[-259.83395386 -294.27511597]
[-256.42111206 -278.23501587]
[-246.01963806 -267.42721558]
[-235.61814880 -256.61938477]
[-225.21665955 -245.81155396]
[-214.81517029 -235.00373840]
[-196.48843384 -238.64324951]
[-179.53334045 -230.44134521]
[-170.87377930 -213.54655457]
[-174.16670227 -194.69715881]
[-163.27951050 -184.37879944]
[-152.39230347 -174.06042480]
[-141.50509644 -163.74205017]
[-130.61788940 -153.42369080]
[-118.51835632 -153.43367004]
[-109.36329651 -144.92221069]
[-108.43408203 -132.05442810]
[-97.70627594 -121.57043457]
[-86.97846985 -111.08644104]
[-72.46823883 -107.72454834]
[-68.00638580 -92.54553223]
[-57.27857590 -82.06153870]
[-46.55076981 -71.57753754]
[-35.82296371 -61.09354401]
[-33.01699829 -60.99338150]
[-30.08179474 -59.77302933]
[-27.44519424 -57.37772751]
[-25.54691887 -53.90882111]
[-24.78397179 -49.62331390]
[-14.71857357 -38.50181198]
[-4.65317631 -27.38031197]
[5.41222143 -16.25881195]
[8.90135956 -15.72038841]
[12.30224991 -13.46234131]
[14.80820084 -9.54496956]
[15.67016697 -4.38713312]
[25.21380424 7.18520451]
[34.75743866 18.75754166]
[44.30107880 30.32987976]
[50.98524857 33.49163437]
[53.90065384 42.15346146]
[63.26583099 53.87068939]
[72.63101196 65.58792114]
[81.99618530 77.30514526]
[112.63111877 79.30303192]
[119.15198517 103.79754639]
[131.61604309 112.14304352]
[140.49256897 114.31888580]
[144.20581055 120.71315002]
[156.54051208 129.24867249]
[168.94026184 137.68942261]
[181.40431213 146.03491211]
[193.86837769 154.38041687]
[206.33242798 162.72590637]
[218.79649353 171.07139587]
[231.26054382 179.41690063]
[243.72459412 187.76239014]
[256.18865967 196.10789490]
[271.96051025 197.35662842]
[278.23129272 210.86686707]
[290.69534302 219.21235657]
[303.15939331 227.55786133]
[315.68704224 235.80760193]
[328.27752686 243.96112061]
[340.86801147 252.11462402]
[353.45849609 260.26812744]
[366.04898071 268.42166138]
[378.63946533 276.57516479]
[391.22991943 284.72866821]
[397.80990601 285.44781494]
[402.35406494 288.87066650]
[404.07598877 293.32995605]
[416.41070557 301.86547852]
[416.36099243 286.86553955]
[427.95828247 277.35226440]
[442.65893555 280.33395386]
[449.63308716 293.61404419]
[443.74295044 307.40921021]
[429.32858276 311.55676270]
[440.97372437 321.01144409]
[452.61883545 330.46612549]
[464.26394653 339.92080688]
[475.90908813 349.37548828]
[487.55419922 358.83020020]
[501.17590332 350.57070923]
[516.77581787 347.47924805]
[532.46490479 349.91149902]
[546.34954834 357.55526733]
[556.76043701 369.47058105]
[562.45300293 384.20513916]
[562.75640869 399.97137451]
[557.65222168 414.86325073]
[569.44085693 424.13836670]
[581.22949219 433.41351318]
[593.01812744 442.68862915]
[609.31811523 444.48941040]
[615.65991211 459.61267090]
[605.51965332 472.50091553]
[589.32873535 469.89581299]
[583.74304199 454.47726440]
[571.95434570 445.20214844]
[560.16571045 435.92703247]
[548.37707520 426.65188599]
[536.57562256 434.47531128]
[522.91400146 438.27667236]
[508.72488403 437.67138672]
[495.39645386 432.70541382]
[484.23684692 423.85205078]
[476.34573364 411.96673584]
[472.50592041 398.20452881]
[473.10562134 383.90780640]
[478.09951782 370.47531128]
[466.45440674 361.02062988]
[454.80926514 351.56594849]
[443.16415405 342.11126709]
[431.51901245 332.65655518]
[419.87390137 323.20187378]
[407.87518311 314.20016479]
[395.54046631 305.66467285]
[383.07641602 297.31915283]
[370.48593140 289.16564941]
[357.89544678 281.01214600]
[345.30496216 272.85861206]
[332.71450806 264.70510864]
[320.12402344 256.55160522]
[307.53353882 248.39808655]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 140]
[2 139]
[3 138]
[5 136]
[6 135]
[7 134]
[8 133]
[9 132]
[10 131]
[11 130]
[12 129]
[14 128]
[15 127]
[16 125]
[17 124]
[19 34]
[20 33]
[21 32]
[22 31]
[23 30]
[39 122]
[40 121]
[41 120]
[42 119]
[43 117]
[44 116]
[45 115]
[46 114]
[47 110]
[48 109]
[49 108]
[50 107]
[51 102]
[52 101]
[53 100]
[54 99]
[56 97]
[57 96]
[58 95]
[60 92]
[61 91]
[62 90]
[63 89]
[64 88]
[71 84]
[72 83]
[73 82]
[74 81]
[75 80]
[141 204]
[142 203]
[143 202]
[144 201]
[145 200]
[146 199]
[147 198]
[150 197]
[151 196]
[157 195]
[158 194]
[159 193]
[160 192]
[161 191]
[162 190]
[170 181]
[171 180]
[172 179]
[173 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
