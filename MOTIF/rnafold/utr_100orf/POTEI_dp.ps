%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:18:34 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (POTEI)
} def

/sequence { (\
AUGGUAGCUGAGGUUGAUUCAAUGCCGGCUGCCUCUUCUGUGAAGAAGCCAUUUGUUCUCAGGAGCAAGAUGGGCAAGUGGUGCCGCCACUGCUUCCCCU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 52 0.005249445 ubox
1 71 0.022087335 ubox
2 51 0.006557644 ubox
2 67 0.004238172 ubox
2 70 0.022889909 ubox
2 92 0.003607788 ubox
3 26 0.008546987 ubox
3 33 0.997747537 ubox
3 34 0.008592394 ubox
3 50 0.005512539 ubox
3 96 0.006285817 ubox
3 97 0.007369653 ubox
3 98 0.007941617 ubox
3 99 0.011364596 ubox
4 25 0.008555817 ubox
4 32 0.999868086 ubox
4 33 0.006709383 ubox
4 49 0.004061002 ubox
4 96 0.003863234 ubox
4 97 0.004808734 ubox
4 98 0.006697318 ubox
5 24 0.008549869 ubox
5 31 0.999681988 ubox
6 23 0.008463211 ubox
6 30 0.999482200 ubox
7 29 0.999952375 ubox
8 28 0.999948143 ubox
9 21 0.009799944 ubox
9 27 0.998234770 ubox
10 20 0.011331335 ubox
10 26 0.991712081 ubox
11 19 0.011525315 ubox
12 18 0.010990842 ubox
12 20 0.007376761 ubox
12 26 0.106291445 ubox
13 19 0.007025035 ubox
13 23 0.991149840 ubox
13 25 0.111192219 ubox
14 22 0.992050191 ubox
14 24 0.109246417 ubox
15 21 0.990802279 ubox
15 24 0.007244732 ubox
16 20 0.975391265 ubox
16 23 0.005164411 ubox
17 23 0.010098234 ubox
18 22 0.009744894 ubox
27 50 0.008380234 ubox
28 49 0.008402527 ubox
29 48 0.008400571 ubox
30 47 0.008310409 ubox
31 49 0.004230769 ubox
32 48 0.004840373 ubox
33 48 0.009286327 ubox
33 69 0.022232011 ubox
34 43 0.027178568 ubox
34 46 0.367774271 ubox
34 47 0.018420569 ubox
34 64 0.007237458 ubox
34 68 0.035199680 ubox
34 70 0.041190802 ubox
35 42 0.028582982 ubox
35 45 0.386697364 ubox
35 48 0.797706843 ubox
35 63 0.007393418 ubox
35 65 0.417281129 ubox
35 69 0.041868852 ubox
36 43 0.003818893 ubox
36 44 0.386576270 ubox
36 46 0.003761091 ubox
36 47 0.811338475 ubox
36 48 0.005843869 ubox
36 62 0.003723328 ubox
36 64 0.424313790 ubox
36 65 0.008636632 ubox
36 68 0.037579563 ubox
37 42 0.004564120 ubox
37 43 0.386214612 ubox
37 46 0.814752355 ubox
37 47 0.005361273 ubox
37 63 0.425492285 ubox
37 64 0.012757910 ubox
37 67 0.029136682 ubox
38 42 0.383053334 ubox
38 45 0.815345952 ubox
38 48 0.007180798 ubox
38 62 0.426738468 ubox
38 63 0.012247112 ubox
38 65 0.020751031 ubox
39 44 0.807186727 ubox
39 47 0.007279528 ubox
39 61 0.426670074 ubox
39 62 0.010200708 ubox
39 64 0.020387895 ubox
40 49 0.006533096 ubox
40 52 0.005124270 ubox
40 60 0.425920184 ubox
41 48 0.006617484 ubox
41 51 0.005645952 ubox
41 61 0.021640331 ubox
42 50 0.005796872 ubox
42 57 0.007183327 ubox
42 58 0.423506003 ubox
42 60 0.022829227 ubox
42 96 0.017393334 ubox
43 56 0.008341751 ubox
43 57 0.424299075 ubox
43 59 0.016393165 ubox
43 95 0.017429486 ubox
44 54 0.008026571 ubox
44 56 0.417999320 ubox
44 59 0.043042995 ubox
44 94 0.017209589 ubox
45 53 0.013003221 ubox
45 54 0.089658671 ubox
45 58 0.046533803 ubox
45 93 0.016209746 ubox
45 96 0.017993666 ubox
45 99 0.003402227 ubox
46 52 0.012816739 ubox
46 53 0.097602338 ubox
46 54 0.402539159 ubox
46 57 0.045795556 ubox
46 95 0.018333151 ubox
47 52 0.096932970 ubox
47 53 0.392054137 ubox
47 54 0.019093184 ubox
47 56 0.044763301 ubox
47 57 0.008936928 ubox
47 94 0.018614592 ubox
47 95 0.004531420 ubox
47 100 0.013972012 ubox
48 52 0.266367394 ubox
48 53 0.017212518 ubox
48 56 0.014924110 ubox
48 66 0.004934216 ubox
48 75 0.111946064 ubox
48 82 0.005057575 ubox
48 93 0.016152664 ubox
48 94 0.004178276 ubox
48 99 0.015491242 ubox
49 55 0.017355802 ubox
49 65 0.004949226 ubox
49 73 0.778853709 ubox
49 74 0.100555587 ubox
49 81 0.005785940 ubox
49 92 0.010546375 ubox
50 72 0.806031854 ubox
50 73 0.086967848 ubox
50 80 0.005808975 ubox
51 71 0.813382147 ubox
51 79 0.005808779 ubox
52 63 0.004376983 ubox
52 68 0.015485901 ubox
52 69 0.457925199 ubox
52 70 0.713368587 ubox
52 78 0.005804610 ubox
53 62 0.005230484 ubox
53 67 0.013159537 ubox
53 68 0.657396813 ubox
53 69 0.594087103 ubox
53 70 0.014640187 ubox
53 77 0.005808992 ubox
54 61 0.005854900 ubox
54 67 0.794734511 ubox
54 68 0.416398709 ubox
54 69 0.009475086 ubox
54 76 0.005856729 ubox
55 60 0.005918592 ubox
55 66 0.903402558 ubox
55 75 0.005867905 ubox
56 64 0.007913179 ubox
56 65 0.903346112 ubox
56 74 0.005852182 ubox
57 63 0.009260207 ubox
57 64 0.903096500 ubox
57 73 0.005822869 ubox
58 62 0.013841940 ubox
58 63 0.902744617 ubox
58 65 0.005282395 ubox
58 72 0.005828161 ubox
59 64 0.004994457 ubox
59 70 0.005634451 ubox
60 69 0.005728702 ubox
64 94 0.003539394 ubox
65 93 0.003887316 ubox
66 72 0.009245396 ubox
66 92 0.003904318 ubox
67 71 0.008726615 ubox
67 91 0.003463977 ubox
68 100 0.062992746 ubox
69 96 0.036571889 ubox
69 99 0.071215961 ubox
70 95 0.034082100 ubox
72 94 0.005045110 ubox
72 95 0.078570710 ubox
72 96 0.028264717 ubox
72 97 0.034138788 ubox
72 98 0.294159580 ubox
72 99 0.490821699 ubox
72 100 0.013607957 ubox
73 85 0.004881501 ubox
73 93 0.004816087 ubox
73 94 0.194018694 ubox
73 95 0.021644968 ubox
73 96 0.034157862 ubox
73 97 0.302525959 ubox
73 98 0.497644958 ubox
73 99 0.024428995 ubox
74 84 0.005175715 ubox
74 93 0.784583077 ubox
74 94 0.013012247 ubox
74 95 0.018479735 ubox
74 96 0.308073704 ubox
74 97 0.501883506 ubox
74 98 0.029421979 ubox
74 99 0.016462734 ubox
75 83 0.005179197 ubox
75 92 0.786296567 ubox
76 82 0.004845181 ubox
76 91 0.554447149 ubox
76 95 0.560951220 ubox
77 91 0.575709866 ubox
77 94 0.595609914 ubox
77 95 0.004490979 ubox
78 87 0.005274130 ubox
78 90 0.802175434 ubox
78 93 0.596642526 ubox
79 86 0.005275263 ubox
79 89 0.802283947 ubox
79 92 0.595360654 ubox
80 85 0.005235258 ubox
80 88 0.802530676 ubox
80 91 0.594178422 ubox
81 87 0.802257795 ubox
81 90 0.596492382 ubox
82 86 0.750500830 ubox
82 89 0.595781590 ubox
83 88 0.588895376 ubox
86 93 0.003974367 ubox
87 92 0.003961659 ubox
3 33 0.9500000 lbox
4 32 0.9500000 lbox
5 31 0.9500000 lbox
6 30 0.9500000 lbox
7 29 0.9500000 lbox
8 28 0.9500000 lbox
9 27 0.9500000 lbox
10 26 0.9500000 lbox
13 23 0.9500000 lbox
14 22 0.9500000 lbox
15 21 0.9500000 lbox
16 20 0.9500000 lbox
35 48 0.9500000 lbox
36 47 0.9500000 lbox
37 46 0.9500000 lbox
38 45 0.9500000 lbox
39 44 0.9500000 lbox
49 73 0.9500000 lbox
50 72 0.9500000 lbox
51 71 0.9500000 lbox
52 70 0.9500000 lbox
53 69 0.9500000 lbox
54 68 0.9500000 lbox
55 66 0.9500000 lbox
56 65 0.9500000 lbox
57 64 0.9500000 lbox
58 63 0.9500000 lbox
74 93 0.9500000 lbox
75 92 0.9500000 lbox
76 91 0.9500000 lbox
78 90 0.9500000 lbox
79 89 0.9500000 lbox
80 88 0.9500000 lbox
81 87 0.9500000 lbox
82 86 0.9500000 lbox
showpage
end
%%EOF
