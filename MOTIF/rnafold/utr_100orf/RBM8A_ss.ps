%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:29:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGUUAGCCUUUGAUUGGUCAGCUUGACUGGCGACCUUUCCCCUCUGCGACAGUUUCCCGAGGUACCUAGUGUCUGAGCGGCACAGACGAGAUCUCGAUCGAAGGCGAGAUGGCGGACGUGCUAGAUCUUCACGAGGCUGGGGGCGAAGAUUUCGCCAUGGAUGAGGAUGGGGACGAGAGCAUUCACAAACUGAAAGAAAAAGCGAAGA\
) } def
/len { sequence length } bind def

/coor [
[113.91874695 257.34637451]
[106.85492706 270.92434692]
[94.28360748 279.65478516]
[79.09359741 281.53152466]
[64.77544403 276.12329102]
[54.61935425 264.67285156]
[50.95912552 249.81144714]
[54.63584900 234.95411682]
[64.80464172 223.51495361]
[79.12879181 218.12261963]
[80.91125488 203.22889709]
[82.69372559 188.33518982]
[84.47618866 173.44146729]
[86.25865936 158.54774475]
[79.56851959 155.15774536]
[67.00690460 163.35566711]
[66.18824768 148.37776184]
[59.49810791 144.98776245]
[48.54219818 155.23315430]
[37.58628845 165.47854614]
[26.63038063 175.72393799]
[22.49986839 183.87112427]
[15.43425083 186.03881836]
[4.32701683 196.11994934]
[-6.78021669 206.20109558]
[-8.98929310 222.09132385]
[-22.86302757 230.14732361]
[-37.75867844 224.18920898]
[-42.24957657 208.78753662]
[-32.89068985 195.75715637]
[-16.86135483 195.09385681]
[-5.75412178 185.01271057]
[5.35311174 174.93157959]
[16.38498878 164.76803589]
[27.34089851 154.52264404]
[38.29680634 144.27725220]
[49.25271606 134.03186035]
[46.37581253 95.40083313]
[66.32526398 67.87533569]
[94.80700684 61.08580017]
[95.69982147 46.11239243]
[96.59263611 31.13898849]
[97.48545837 16.16558266]
[98.37827301 1.19217706]
[99.15959167 -13.78746033]
[99.82937622 -28.77249908]
[100.49916077 -43.75753784]
[93.38578796 -57.88943481]
[101.68367767 -70.25852203]
[102.35346222 -85.24356079]
[90.58181000 -75.94688416]
[75.66879272 -77.55992126]
[66.15726471 -89.15866852]
[67.49585724 -104.09881592]
[78.91776276 -113.82198334]
[93.88000488 -112.75829315]
[103.81120300 -101.51797485]
[105.81521606 -116.38350677]
[107.81923676 -131.24903870]
[97.78220367 -136.78958130]
[90.21849060 -145.67463684]
[86.21338654 -156.85098267]
[86.41884613 -168.92533875]
[90.95205688 -180.33789062]
[99.36197662 -189.56378174]
[110.67038727 -195.31654358]
[123.48447418 -196.72637939]
[123.26114655 -211.72471619]
[123.03781891 -226.72305298]
[122.81449127 -241.72138977]
[122.59116364 -256.71972656]
[122.36783600 -271.71804810]
[114.42592621 -285.40151978]
[121.97288513 -298.24255371]
[121.74955750 -313.24090576]
[121.41458130 -328.23715210]
[120.96797180 -343.23049927]
[120.52136230 -358.22384644]
[120.07476044 -373.21722412]
[106.93421173 -391.36837769]
[117.92569733 -410.01303101]
[116.58746338 -424.95321655]
[115.24922943 -439.89340210]
[113.91099548 -454.83358765]
[112.57276154 -469.77377319]
[99.41989136 -477.79299927]
[93.57929993 -491.85504150]
[97.09725952 -506.48678589]
[108.42086792 -516.12597656]
[107.08263397 -531.06616211]
[95.23827362 -541.18292236]
[94.09394073 -556.35345459]
[103.81172180 -567.58288574]
[102.47348785 -582.52307129]
[101.13525391 -597.46325684]
[99.79701996 -612.40344238]
[98.45878601 -627.34362793]
[97.12055206 -642.28381348]
[83.73471069 -650.13232422]
[77.54941559 -664.36334229]
[80.94305420 -679.50476074]
[92.61069489 -689.73443604]
[108.06589508 -691.11877441]
[121.36581421 -683.12554932]
[127.39636230 -668.82824707]
[123.83866119 -653.72454834]
[112.06073761 -643.62207031]
[113.39897156 -628.68188477]
[114.73720551 -613.74169922]
[116.07543945 -598.80151367]
[117.41367340 -583.86132812]
[118.75190735 -568.92114258]
[130.31068420 -559.59747314]
[131.88067627 -544.46508789]
[122.02281189 -532.40441895]
[123.36104584 -517.46423340]
[136.21746826 -509.99090576]
[142.27976990 -496.21728516]
[139.03126526 -481.34109497]
[127.51294708 -471.11199951]
[128.85118103 -456.17181396]
[130.18942261 -441.23162842]
[131.52764893 -426.29144287]
[132.86589050 -411.35125732]
[139.84896851 -407.70419312]
[144.88136292 -401.52130127]
[147.08607483 -393.76251221]
[146.03277588 -385.67089844]
[141.81938171 -378.57351685]
[135.06811523 -373.66381836]
[135.51470947 -358.67047119]
[135.96131897 -343.67712402]
[136.40792847 -328.68377686]
[139.74919128 -322.09152222]
[136.74789429 -313.46423340]
[136.97122192 -298.46588135]
[144.89715576 -285.85522461]
[137.36618042 -271.94137573]
[137.58950806 -256.94305420]
[137.81283569 -241.94471741]
[138.03616333 -226.94638062]
[138.25949097 -211.94804382]
[138.48281860 -196.94970703]
[150.24006653 -187.63481140]
[164.89184570 -190.84809875]
[179.54364014 -194.06137085]
[194.19541931 -197.27464294]
[208.84721375 -200.48791504]
[223.49899292 -203.70118713]
[237.67520142 -213.00019836]
[250.53517151 -201.95222473]
[243.47894287 -186.53645325]
[226.71228027 -189.04939270]
[212.06048584 -185.83612061]
[197.40869141 -182.62284851]
[182.75691223 -179.40957642]
[168.10511780 -176.19630432]
[153.45333862 -172.98303223]
[152.91262817 -151.86082458]
[140.95956421 -135.54106140]
[122.68476105 -129.24502563]
[120.68074799 -114.37949371]
[118.67673492 -99.51396179]
[117.33850098 -84.57377625]
[116.66871643 -69.58873749]
[123.82999420 -56.52867126]
[115.48419952 -43.08775330]
[114.81441498 -28.10271454]
[114.14463043 -13.11767483]
[116.98632812 -6.29517078]
[113.35167694 2.08499289]
[112.45886230 17.05839920]
[111.56604767 32.03180313]
[110.67322540 47.00521088]
[109.78041077 61.97861481]
[119.53611755 63.17507553]
[129.21144104 66.94459534]
[138.11795044 73.29788208]
[145.56269836 82.06075287]
[150.89764404 92.87394714]
[153.56867981 105.20603943]
[153.16061401 118.37908936]
[149.43502808 131.60594177]
[142.35794067 144.03700256]
[151.13854980 156.19847107]
[159.91915894 168.35992432]
[168.69975281 180.52137756]
[184.24484253 184.48744202]
[190.70463562 199.17248535]
[183.12371826 213.31141663]
[167.31752014 216.05804443]
[155.41122437 205.30538940]
[156.53829956 189.30198669]
[147.75770569 177.14051819]
[138.97709656 164.97906494]
[130.19648743 152.81761169]
[122.93546295 154.69575500]
[126.69176483 169.21781921]
[130.44805908 183.73988342]
[134.20413208 198.26199341]
[119.68196106 202.01785278]
[115.92600250 187.49618530]
[112.16970062 172.97412109]
[108.41340637 158.45205688]
[101.15237427 160.33021545]
[99.36990356 175.22393799]
[97.58744049 190.11764526]
[95.80497742 205.01136780]
[94.02250671 219.90509033]
[106.66964722 228.52531433]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 209]
[11 208]
[12 207]
[13 206]
[14 205]
[18 37]
[19 36]
[20 35]
[21 34]
[23 33]
[24 32]
[25 31]
[40 175]
[41 174]
[42 173]
[43 172]
[44 171]
[45 169]
[46 168]
[47 167]
[49 165]
[50 164]
[57 163]
[58 162]
[59 161]
[67 143]
[68 142]
[69 141]
[70 140]
[71 139]
[72 138]
[74 136]
[75 135]
[76 133]
[77 132]
[78 131]
[79 130]
[81 124]
[82 123]
[83 122]
[84 121]
[85 120]
[89 116]
[90 115]
[93 112]
[94 111]
[95 110]
[96 109]
[97 108]
[98 107]
[144 158]
[145 157]
[146 156]
[147 155]
[148 154]
[149 153]
[184 196]
[185 195]
[186 194]
[187 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
