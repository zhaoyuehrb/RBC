%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:03:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGUUCUUUCCGGCUUCGCUGCUGGUGUCGGCUCCGAGAGCUCUGGCUUAUCAGGACUCCAUAGUUCUCCAACAGAGAAAUCUUGAAAAGGACUGACCAGUUUUUGCAGUUCUAAAACCAUGGCCCAUGGUUCAGUGACAUUCAGGGAUGUGGCCAUAGACUUCUCACAGGAAGAAUGGGAAUUCCUGGAUCCUGCUCAGAGGGACUUAUAUAGGGAUG\
) } def
/len { sequence length } bind def

/coor [
[74.49392700 280.89367676]
[84.16823578 269.19869995]
[97.41587830 261.79165649]
[95.29074860 246.94296265]
[93.16561890 232.09426880]
[91.04048920 217.24555969]
[88.91535950 202.39686584]
[86.79023743 187.54817200]
[84.66510773 172.69947815]
[82.53997803 157.85076904]
[67.81534576 154.98980713]
[60.28458786 167.96237183]
[52.75382996 180.93495178]
[45.22307587 193.90753174]
[37.69231796 206.88011169]
[41.98832703 222.08930969]
[34.19872665 235.84059143]
[18.94495583 239.97555542]
[5.27679968 232.04100037]
[1.30333638 216.74436951]
[9.38195038 203.16085815]
[24.71974373 199.34934998]
[32.25049973 186.37677002]
[39.78125381 173.40420532]
[47.31201172 160.43162537]
[54.84276962 147.45904541]
[51.64363480 140.67556763]
[38.81539154 148.44964600]
[31.26314926 161.40971375]
[16.48923492 164.00421143]
[4.97313452 154.39279175]
[4.88349485 139.39306641]
[16.28389740 129.64468384]
[31.08674812 132.06173706]
[45.24537277 127.10861969]
[42.04624176 120.32514191]
[27.24622917 117.88389587]
[12.44621849 115.44265747]
[-2.35379362 113.00141907]
[-17.15380478 110.56018066]
[-35.68663406 118.50308990]
[-50.07984924 105.58464813]
[-64.94327545 103.56510925]
[-79.80670166 101.54557800]
[-94.67012787 99.52603912]
[-109.53356171 97.50650024]
[-115.60456848 107.86495972]
[-124.78428650 115.54988861]
[-135.98416138 119.68041229]
[-147.88627625 119.79532623]
[-159.09846497 115.90448761]
[-168.31704712 108.48496246]
[-174.47853088 98.42263031]
[-176.88218689 86.90647888]
[-191.64601135 84.25510406]
[-206.40982056 81.60372925]
[-221.17362976 78.95235443]
[-235.93745422 76.30097961]
[-250.70126343 73.64961243]
[-265.93719482 79.71575165]
[-278.63919067 69.34311676]
[-275.74050903 53.20218277]
[-260.22308350 47.89736176]
[-248.04989624 58.88579559]
[-233.28607178 61.53717041]
[-218.52226257 64.18854523]
[-203.75845337 66.83992004]
[-188.99462891 69.49129486]
[-174.23081970 72.14266205]
[-163.17912292 57.77185440]
[-146.28054810 50.97515488]
[-128.18774414 53.71719742]
[-113.92973328 65.32334900]
[-107.51402283 82.64307404]
[-92.65059662 84.66261292]
[-77.78717041 86.68214417]
[-62.92374039 88.70168304]
[-48.06031418 90.72122192]
[-40.52482986 83.83312988]
[-30.22610474 82.19145966]
[-20.52236176 86.57575989]
[-14.71256447 95.76016235]
[0.08744702 98.20140839]
[14.88745880 100.64264679]
[29.68746948 103.08388519]
[44.48748016 105.52513123]
[48.79162216 88.91204834]
[57.61278534 75.41044617]
[69.49181366 66.09333038]
[82.77478027 61.45390320]
[79.18504333 46.88977814]
[75.59531403 32.32564926]
[72.00557709 17.76152229]
[68.41584015 3.19739509]
[64.82611084 -11.36673260]
[61.23637390 -25.93085861]
[46.36047745 -29.53174782]
[34.86960220 -39.64205551]
[29.40426445 -53.93851089]
[31.22035599 -69.13589478]
[39.90055466 -81.74195099]
[53.45021439 -88.85990906]
[68.75572205 -88.85411072]
[82.29998016 -81.72589111]
[90.97062683 -69.11325836]
[92.77519989 -53.91450500]
[87.29903412 -39.62219620]
[75.80049896 -29.52059364]
[79.39023590 -14.95646667]
[82.97997284 -0.39233986]
[86.56970215 14.17178726]
[90.15943909 28.73591423]
[93.74917603 43.30004120]
[97.33891296 57.86417007]
[105.95359039 56.66812515]
[114.92869568 57.27490997]
[123.87970734 59.77714920]
[129.88972473 46.03379822]
[135.89973450 32.29044342]
[141.90974426 18.54709053]
[147.91975403 4.80373669]
[153.92976379 -8.93961716]
[159.93977356 -22.68297005]
[160.74620056 -39.61772919]
[177.24238586 -43.53082657]
[185.56915283 -28.76257324]
[173.68312073 -16.67295837]
[167.67311096 -2.92960525]
[161.66310120 10.81374836]
[155.65309143 24.55710220]
[149.64308167 38.30045319]
[143.63307190 52.04380798]
[137.62306213 65.78716278]
[145.96769714 78.25180054]
[160.96427917 77.93197632]
[175.96087646 77.61215210]
[184.46653748 74.30249023]
[191.17256165 77.39589691]
[206.17218018 77.28928375]
[212.04742432 74.28324890]
[217.71018982 74.63699341]
[221.59823608 77.39893341]
[236.59483337 77.71875000]
[251.59141541 78.03857422]
[266.58801270 78.35839844]
[281.58459473 78.67821503]
[296.58117676 78.99803925]
[311.57778931 79.31785583]
[326.57437134 79.63768005]
[341.57095337 79.95750427]
[348.38381958 70.22544098]
[358.93896484 65.04045105]
[370.56628418 65.58541870]
[380.38592529 71.60968018]
[386.02151489 81.51979065]
[401.00296021 82.26579285]
[415.98440552 83.01178741]
[430.96585083 83.75778961]
[438.58764648 76.01084137]
[448.99942017 73.77932739]
[458.71749878 77.56320953]
[464.62466431 85.88994598]
[479.57885742 87.06152344]
[494.53302002 88.23309326]
[509.48721313 89.40466309]
[524.44140625 90.57624054]
[538.99932861 83.02651978]
[552.66894531 92.08598328]
[551.38806152 108.43503571]
[536.47442627 115.25516510]
[523.26983643 105.53041077]
[508.31564331 104.35884094]
[493.36145020 103.18727112]
[478.40728760 102.01570129]
[463.45309448 100.84412384]
[446.65206909 110.42413330]
[430.21984863 98.73922729]
[415.23840332 97.99322510]
[400.25695801 97.24723053]
[385.27551270 96.50122833]
[372.46011353 109.58080292]
[353.83462524 109.12401581]
[341.25112915 94.95409393]
[326.25454712 94.63426971]
[311.25796509 94.31444550]
[296.26138306 93.99462891]
[281.26477051 93.67480469]
[266.26818848 93.35498810]
[251.27159119 93.03516388]
[236.27500916 92.71533966]
[221.27841187 92.39552307]
[206.27879333 92.28890991]
[191.27917480 92.39552307]
[176.28068542 92.60874176]
[161.28410339 92.92856598]
[146.28750610 93.24839020]
[147.53562927 110.01521301]
[142.68179321 126.76791382]
[131.91835022 141.28298950]
[116.24562073 151.48251343]
[97.38867188 155.72564697]
[99.51380157 170.57434082]
[101.63893127 185.42304993]
[103.76406097 200.27174377]
[105.88919067 215.12043762]
[108.01432037 229.96913147]
[110.13944244 244.81784058]
[112.26457214 259.66653442]
[127.05802917 263.06036377]
[139.62432861 271.57229614]
[148.26396179 284.05111694]
[151.80853271 298.80917358]
[149.77862549 313.85058594]
[142.44879150 327.14111328]
[130.81031799 336.88330078]
[116.43722534 341.75964355]
[101.27334595 341.11059570]
[87.36947632 335.02398682]
[76.60599518 324.32296753]
[70.43857574 310.45474243]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 208]
[4 207]
[5 206]
[6 205]
[7 204]
[8 203]
[9 202]
[10 201]
[11 26]
[12 25]
[13 24]
[14 23]
[15 22]
[36 86]
[37 85]
[38 84]
[39 83]
[40 82]
[42 78]
[43 77]
[44 76]
[45 75]
[46 74]
[54 69]
[55 68]
[56 67]
[57 66]
[58 65]
[59 64]
[90 114]
[91 113]
[92 112]
[93 111]
[94 110]
[95 109]
[96 108]
[117 133]
[118 132]
[119 131]
[120 130]
[121 129]
[122 128]
[123 127]
[134 196]
[135 195]
[136 194]
[138 193]
[139 192]
[142 191]
[143 190]
[144 189]
[145 188]
[146 187]
[147 186]
[148 185]
[149 184]
[150 183]
[155 180]
[156 179]
[157 178]
[158 177]
[162 175]
[163 174]
[164 173]
[165 172]
[166 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
