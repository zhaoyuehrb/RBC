%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:50:16 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (KMT2D)
} def

/sequence { (\
AUGGACAGCCAGAAGCUGGCUGGUGAGGAUAAAGAUUCAGAACCGGCAGCUGAUGGACCUGCAGCUUCUGAGGACCCAAGUGCCACUGAGUCAGACCUGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 24 0.044109883 ubox
1 30 0.027305706 ubox
2 22 0.003605846 ubox
2 23 0.045367462 ubox
2 25 0.050359682 ubox
2 29 0.028848868 ubox
2 31 0.009364037 ubox
2 63 0.004802320 ubox
2 85 0.005393378 ubox
2 93 0.004227591 ubox
2 99 0.028772149 ubox
3 21 0.006238337 ubox
3 24 0.073596615 ubox
3 30 0.010060225 ubox
3 59 0.036410659 ubox
3 60 0.020620268 ubox
3 62 0.005351152 ubox
3 77 0.003225820 ubox
3 84 0.006201623 ubox
3 92 0.003438053 ubox
3 97 0.157860662 ubox
3 98 0.047790291 ubox
4 20 0.006349538 ubox
4 58 0.036209915 ubox
4 59 0.021574465 ubox
4 76 0.003217342 ubox
4 83 0.006196461 ubox
4 92 0.009156168 ubox
4 96 0.157423808 ubox
4 97 0.049288421 ubox
5 24 0.168988575 ubox
5 81 0.004289385 ubox
5 91 0.009185338 ubox
6 18 0.009528614 ubox
6 22 0.986420822 ubox
6 23 0.125180122 ubox
6 25 0.008648569 ubox
6 61 0.025768428 ubox
6 80 0.004297140 ubox
6 82 0.003858805 ubox
6 90 0.009111705 ubox
6 99 0.004689046 ubox
7 17 0.009586654 ubox
7 21 0.995644322 ubox
7 24 0.006310271 ubox
7 60 0.029804239 ubox
7 81 0.003390272 ubox
7 98 0.003999686 ubox
8 16 0.009590717 ubox
8 20 0.996747958 ubox
8 24 0.007238638 ubox
8 59 0.029846356 ubox
8 97 0.003817747 ubox
9 15 0.009576948 ubox
9 19 0.996755283 ubox
9 23 0.008242826 ubox
9 56 0.079070170 ubox
10 18 0.996745596 ubox
10 22 0.008248058 ubox
10 55 0.079312036 ubox
11 17 0.994280792 ubox
11 21 0.008243315 ubox
11 54 0.079128043 ubox
12 16 0.972488542 ubox
12 20 0.008225410 ubox
14 51 0.079185430 ubox
15 50 0.079376928 ubox
16 49 0.079376405 ubox
17 48 0.077685338 ubox
18 47 0.054982181 ubox
19 47 0.057308918 ubox
19 100 0.005352689 ubox
20 46 0.079368151 ubox
20 99 0.005409827 ubox
21 45 0.079363956 ubox
22 44 0.079995776 ubox
22 97 0.021152084 ubox
23 30 0.082611769 ubox
23 43 0.080067506 ubox
23 96 0.027826813 ubox
23 100 0.393841168 ubox
24 29 0.083873945 ubox
24 31 0.014887116 ubox
24 39 0.012350014 ubox
24 42 0.078852027 ubox
24 93 0.003320559 ubox
24 95 0.027695068 ubox
24 99 0.385189771 ubox
25 30 0.012880343 ubox
25 38 0.017455449 ubox
25 98 0.128574197 ubox
26 37 0.017423741 ubox
26 98 0.890530698 ubox
27 36 0.017144133 ubox
27 38 0.054194674 ubox
27 92 0.004313880 ubox
27 97 0.920817528 ubox
27 98 0.050375452 ubox
28 37 0.054643136 ubox
28 38 0.055548984 ubox
28 92 0.004710752 ubox
28 96 0.919361567 ubox
28 97 0.054350470 ubox
29 36 0.054373675 ubox
29 37 0.054878822 ubox
29 91 0.004607656 ubox
30 35 0.051609953 ubox
30 90 0.004082352 ubox
30 99 0.006074107 ubox
31 98 0.006499989 ubox
33 98 0.005407208 ubox
34 92 0.994303542 ubox
34 97 0.003478480 ubox
35 91 0.996336754 ubox
36 90 0.995742437 ubox
37 89 0.996169173 ubox
38 88 0.996732320 ubox
39 87 0.996225446 ubox
40 86 0.991996867 ubox
44 70 0.013809674 ubox
45 69 0.013906100 ubox
45 84 0.994713099 ubox
46 68 0.013918084 ubox
46 83 0.996697785 ubox
47 82 0.995764495 ubox
48 66 0.014078007 ubox
48 81 0.884226991 ubox
49 65 0.014613569 ubox
49 81 0.454181935 ubox
50 64 0.014615387 ubox
50 80 0.775577206 ubox
51 63 0.014598720 ubox
51 78 0.603863317 ubox
51 79 0.757404217 ubox
52 62 0.014561662 ubox
52 77 0.608359150 ubox
54 61 0.005878625 ubox
54 78 0.356234804 ubox
55 60 0.003813346 ubox
55 76 0.919475958 ubox
55 77 0.371074515 ubox
56 75 0.922897128 ubox
56 76 0.366853867 ubox
58 73 0.988460087 ubox
59 72 0.989681172 ubox
59 73 0.115671976 ubox
60 70 0.003814401 ubox
60 71 0.985875606 ubox
60 72 0.106027145 ubox
61 69 0.007863334 ubox
61 100 0.073263779 ubox
62 70 0.984897989 ubox
62 99 0.077874168 ubox
63 69 0.984842855 ubox
63 98 0.077877442 ubox
64 68 0.963333771 ubox
64 97 0.077643946 ubox
64 100 0.007982114 ubox
65 94 0.004795222 ubox
65 99 0.008047002 ubox
66 93 0.004769621 ubox
66 95 0.015275062 ubox
67 94 0.003881834 ubox
67 95 0.075254027 ubox
68 90 0.005773500 ubox
68 94 0.078136482 ubox
69 89 0.005767285 ubox
69 93 0.078052096 ubox
70 92 0.074457863 ubox
71 87 0.006481041 ubox
71 91 0.071578220 ubox
72 84 0.048668127 ubox
72 86 0.007361333 ubox
72 87 0.007534326 ubox
73 83 0.048648674 ubox
73 86 0.007579388 ubox
73 92 0.025141945 ubox
74 81 0.046906672 ubox
74 91 0.031226735 ubox
75 80 0.046865055 ubox
75 90 0.038022432 ubox
77 88 0.044050945 ubox
78 87 0.037077542 ubox
79 87 0.042657550 ubox
80 86 0.048797240 ubox
81 85 0.043968007 ubox
86 94 0.009455425 ubox
87 93 0.009502097 ubox
88 92 0.009360941 ubox
93 98 0.007363914 ubox
6 22 0.9500000 lbox
7 21 0.9500000 lbox
8 20 0.9500000 lbox
9 19 0.9500000 lbox
10 18 0.9500000 lbox
11 17 0.9500000 lbox
12 16 0.9500000 lbox
26 98 0.9500000 lbox
27 97 0.9500000 lbox
28 96 0.9500000 lbox
34 92 0.9500000 lbox
35 91 0.9500000 lbox
36 90 0.9500000 lbox
37 89 0.9500000 lbox
38 88 0.9500000 lbox
39 87 0.9500000 lbox
40 86 0.9500000 lbox
45 84 0.9500000 lbox
46 83 0.9500000 lbox
47 82 0.9500000 lbox
48 81 0.9500000 lbox
51 78 0.9500000 lbox
52 77 0.9500000 lbox
55 76 0.9500000 lbox
56 75 0.9500000 lbox
58 73 0.9500000 lbox
59 72 0.9500000 lbox
60 71 0.9500000 lbox
62 70 0.9500000 lbox
63 69 0.9500000 lbox
64 68 0.9500000 lbox
showpage
end
%%EOF
