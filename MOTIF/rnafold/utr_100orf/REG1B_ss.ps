%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:01:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUAUAAAGCUCCUACUCUGUCUGACCUGACAAGCCACCUCAAGUGGACAAGGCACUUACCAACAGAGAUUGCUGAUUUGCUCCUUAAGCAAGAGAUUCACUGCCGCUAAGCAUGGCUCAGACCAACUCGUUCUUCAUGCUGAUCUCCUCCCUGAUGUUCCUGUCUCUGAGCCAAGGCCAGGAGUCCCAGACAGAGCUGCCUAAUCCCCGAA\
) } def
/len { sequence length } bind def

/coor [
[95.48262787 1040.33947754]
[81.37628174 1035.11206055]
[68.47077942 1027.38146973]
[57.20567322 1017.41088867]
[47.96464920 1005.53997803]
[41.06245422 992.17309570]
[36.73417664 977.76544189]
[35.12723160 962.80773926]
[36.29635620 947.80950928]
[40.20172501 933.28149414]
[46.71032333 919.71856689]
[55.60047531 907.58270264]
[66.56938171 897.28717041]
[79.24344635 889.18267822]
[93.19100189 883.54522705]
[107.93698883 880.56689453]
[107.71575928 865.56854248]
[107.49452209 850.57019043]
[107.27329254 835.57183838]
[107.05206299 820.57342529]
[106.83083344 805.57507324]
[106.60960388 790.57672119]
[106.38837433 775.57830811]
[106.16713715 760.57995605]
[93.30075836 743.17553711]
[104.49242401 723.76116943]
[103.38722992 708.80194092]
[102.28203583 693.84271240]
[101.17684937 678.88348389]
[99.14617157 676.95312500]
[97.75719452 674.10266113]
[97.36396027 670.57226562]
[98.22719574 666.72564697]
[100.47420502 663.01422119]
[100.25297546 648.01580811]
[100.03174591 633.01745605]
[86.15390778 621.07757568]
[85.39928436 602.46612549]
[98.71379089 588.98712158]
[98.05029297 574.00177002]
[97.38679504 559.01647949]
[96.72328949 544.03112793]
[88.59671021 537.83972168]
[85.14631653 527.99072266]
[87.73889923 517.65539551]
[95.75286102 510.30398560]
[95.53163147 495.30563354]
[95.31039429 480.30725098]
[95.08916473 465.30889893]
[94.86793518 450.31051636]
[91.62666321 443.66983032]
[94.75568390 435.08969116]
[94.75568390 420.08969116]
[87.01838684 407.36242676]
[94.75568390 393.56225586]
[94.75568390 378.56225586]
[80.38982391 374.39102173]
[67.76866913 366.33261108]
[57.91968155 355.03289795]
[51.64749146 341.40203857]
[49.46817017 326.54113770]
[51.56679916 311.65328979]
[57.78176117 297.94628906]
[67.61716461 286.53445435]
[80.28240204 278.34823608]
[94.75568390 274.05825806]
[94.75568390 259.05825806]
[94.75568390 244.05824280]
[94.75568390 229.05824280]
[94.75568390 214.05824280]
[94.75568390 199.05824280]
[94.64506531 184.05865479]
[94.42383575 169.06028748]
[94.09200287 154.06396484]
[93.64958954 139.07048035]
[93.20717621 124.07701111]
[72.70366669 109.71152496]
[73.05184174 81.07773590]
[64.16362762 68.99471283]
[55.27540588 56.91168213]
[46.38718414 44.82865524]
[37.49896622 32.74562836]
[21.91927719 28.91772270]
[15.32938290 14.29059505]
[22.78448486 0.08492708]
[38.56567001 -2.80190921]
[50.56695938 7.84462023]
[49.58199310 23.85740852]
[58.47021103 35.94043732]
[67.35842896 48.02346420]
[76.24665070 60.10649109]
[85.13487244 72.18952179]
[99.66581726 68.46774292]
[101.65112305 53.59970474]
[103.63642883 38.73166656]
[90.96024323 30.30103302]
[83.23299408 17.25585747]
[81.94124603 2.21087289]
[87.28785706 -11.84525585]
[98.16228485 -22.14361763]
[112.37081909 -26.68047333]
[114.35613251 -41.54851151]
[116.34143829 -56.41654968]
[109.14318085 -67.11804962]
[111.10186005 -79.45996857]
[120.62897491 -86.91231537]
[122.83335114 -101.74945068]
[125.03772736 -116.58659363]
[127.24210358 -131.42373657]
[120.71868896 -146.46955872]
[130.70306396 -159.47895813]
[146.92416382 -157.06896973]
[152.69509888 -141.71878052]
[142.07923889 -129.21936035]
[139.87486267 -114.38221741]
[137.67048645 -99.54507446]
[135.46611023 -84.70793915]
[142.78167725 -68.75575256]
[131.20947266 -54.43124008]
[129.22416687 -39.56320190]
[127.23886108 -24.69516563]
[139.75921631 -16.58923721]
[147.55058289 -3.79846025]
[149.02185059 11.16804886]
[143.82788086 25.34700584]
[132.94856262 35.90767288]
[118.50447083 40.71697617]
[116.51916504 55.58501434]
[114.53385162 70.45304871]
[123.72431946 79.11178589]
[128.65492249 90.17966461]
[128.91754150 101.78299713]
[124.86076355 112.11125946]
[117.47822571 119.69937897]
[108.20065308 123.63459778]
[108.64306641 138.62806702]
[109.08547974 153.62155151]
[112.46620941 162.10563660]
[109.42220306 168.83905029]
[109.64343262 183.83741760]
[112.89866638 192.37046814]
[109.75568390 199.05824280]
[109.75568390 214.05824280]
[109.75568390 229.05824280]
[109.75568390 244.05824280]
[109.75568390 259.05825806]
[109.75568390 274.05825806]
[124.22897339 278.34823608]
[136.89421082 286.53445435]
[146.72961426 297.94628906]
[152.94458008 311.65328979]
[155.04319763 326.54113770]
[152.86387634 341.40203857]
[146.59169006 355.03289795]
[136.74270630 366.33261108]
[124.12155151 374.39102173]
[109.75568390 378.56225586]
[109.75568390 393.56225586]
[117.49298859 407.36242676]
[109.75568390 420.08969116]
[109.75568390 435.08969116]
[109.86630249 450.08929443]
[110.08753204 465.08764648]
[110.30876923 480.08602905]
[110.52999878 495.08438110]
[110.75122833 510.08276367]
[121.85669708 526.90747070]
[111.70861053 543.36767578]
[112.37210846 558.35296631]
[113.03561401 573.33831787]
[113.69911194 588.32360840]
[123.86225128 594.48834229]
[129.72821045 604.68878174]
[129.94032288 616.33380127]
[124.56153870 626.52905273]
[115.03011322 632.79626465]
[115.25134277 647.79461670]
[115.47257233 662.79296875]
[116.13607788 677.77832031]
[117.24126434 692.73754883]
[118.34645844 707.69677734]
[119.45165253 722.65600586]
[126.67116547 726.84008789]
[131.59410095 733.46087646]
[133.47886658 741.39660645]
[132.09091187 749.33886719]
[127.72914886 756.00781250]
[121.16551208 760.35876465]
[121.38674164 775.35711670]
[121.60797119 790.35546875]
[121.82920074 805.35382080]
[122.05043030 820.35223389]
[122.27165985 835.35058594]
[122.49289703 850.34893799]
[122.71412659 865.34729004]
[122.93535614 880.34570312]
[137.76277161 882.88781738]
[151.87052917 888.11138916]
[164.77810669 895.83856201]
[176.04591370 905.80609131]
[185.29013062 917.67449951]
[192.19592285 931.03955078]
[196.52809143 945.44604492]
[198.13906860 960.40325928]
[196.97398376 975.40185547]
[193.07254028 989.93090820]
[186.56759644 1003.49554443]
[177.68070984 1015.63385010]
[166.71458435 1025.93237305]
[154.04269409 1034.04028320]
[140.09666443 1039.68139648]
[125.35147858 1042.66369629]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 196]
[17 195]
[18 194]
[19 193]
[20 192]
[21 191]
[22 190]
[23 189]
[24 188]
[26 182]
[27 181]
[28 180]
[29 179]
[34 178]
[35 177]
[36 176]
[39 171]
[40 170]
[41 169]
[42 168]
[46 166]
[47 165]
[48 164]
[49 163]
[50 162]
[52 161]
[53 160]
[55 158]
[56 157]
[66 147]
[67 146]
[68 145]
[69 144]
[70 143]
[71 142]
[72 140]
[73 139]
[74 137]
[75 136]
[76 135]
[78 92]
[79 91]
[80 90]
[81 89]
[82 88]
[93 129]
[94 128]
[95 127]
[101 121]
[102 120]
[103 119]
[106 117]
[107 116]
[108 115]
[109 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
