%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:57:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAUUUCCUUUCACUUUCGGUCUCUGGCUGUCACCCGGCUUGGCCCCUUCCACACCCAACUGGGGCAAGCCUGACCCGGCGACAGGAGGCAUGAGGGGCCCCCGGCCGAAAUGACAGUGCUGGCGCCAGCCUGGAGCCCAACAACCUAUCUCCUCCUGCUGCUGCUGCUGAGCUCGGGACUCAGUGGGACCCAGGACUGCUCCUUCCAAC\
) } def
/len { sequence length } bind def

/coor [
[78.91736603 415.20849609]
[64.84585571 410.01306152]
[53.55326462 400.13998413]
[46.52532959 386.88827515]
[44.68669891 372.00137329]
[48.27927399 357.43795776]
[56.83039093 345.11407471]
[69.21499634 336.65112305]
[83.80369568 333.16256714]
[98.67708588 335.10739136]
[111.87831116 342.22973633]
[121.67173767 353.59454346]
[118.78646088 338.87463379]
[115.90119171 324.15475464]
[113.01591492 309.43487549]
[104.05723572 304.52011108]
[99.18021393 295.29171753]
[100.20867157 284.68405151]
[107.04335022 276.22262573]
[104.59762573 261.42333984]
[102.15189362 246.62408447]
[99.70616913 231.82481384]
[97.26044464 217.02554321]
[94.81471252 202.22627258]
[85.10578918 190.93086243]
[90.48945618 176.05381775]
[88.04372406 161.25454712]
[85.59799957 146.45527649]
[83.15227509 131.65600586]
[71.67757416 121.99519348]
[56.67798996 122.10685730]
[41.67840576 122.21852112]
[26.67881966 122.33019257]
[22.17872429 124.97522736]
[17.57444382 125.57012939]
[13.66434956 124.41851807]
[11.01060390 122.09688568]
[-3.97900558 121.53868103]
[-18.96861458 120.98046875]
[-33.95822525 120.42225647]
[-48.94783401 119.86404419]
[-63.93744278 119.30583191]
[-72.62960052 122.11371613]
[-79.14559174 118.62607574]
[-94.12522888 117.84475708]
[-109.10486603 117.06343079]
[-124.08450317 116.28211212]
[-130.59367371 130.01889038]
[-141.86753845 140.21537781]
[-156.18695068 145.31666565]
[-171.36827087 144.54484558]
[-185.09648132 138.01760864]
[-195.27812195 126.73033905]
[-200.36056519 112.40423584]
[-199.56878662 97.22393799]
[-193.02349854 83.50431824]
[-181.72283936 73.33753967]
[-167.39006042 68.27394104]
[-152.21081543 69.08570099]
[-138.49983215 75.64902496]
[-128.34791565 86.96305084]
[-123.30318451 101.30247498]
[-108.32354736 102.08379364]
[-93.34391022 102.86511993]
[-78.36427307 103.64643860]
[-63.37923431 104.31622314]
[-48.38962555 104.87443542]
[-33.40001297 105.43264771]
[-18.41040421 105.99085999]
[-3.42079449 106.54906464]
[11.56881523 107.10727692]
[26.56715202 107.33060455]
[41.56673813 107.21894073]
[56.56632233 107.10726929]
[71.56590271 106.99560547]
[80.21762085 82.40758514]
[102.93116760 76.51763916]
[109.41065979 62.98929596]
[115.89015961 49.46094894]
[122.36965179 35.93260574]
[128.84915161 22.40425873]
[127.83216858 6.61577272]
[140.30812073 -1.52056932]
[146.78761292 -15.04891491]
[153.26710510 -28.57726097]
[159.74659729 -42.10560608]
[166.22610474 -55.63395309]
[172.70559692 -69.16230011]
[179.18508911 -82.69064331]
[170.62696838 -95.36762238]
[169.57020569 -110.52612305]
[176.19871521 -124.08817291]
[188.64236450 -132.45547485]
[203.50332642 -133.46397400]
[209.98283386 -146.99232483]
[216.46232605 -160.52066040]
[219.01815796 -175.30131531]
[217.45762634 -190.21992493]
[215.89710999 -205.13853455]
[214.33659363 -220.05712891]
[206.67523193 -235.18128967]
[219.08746338 -246.73001099]
[233.62089539 -237.99986267]
[229.25518799 -221.61766052]
[230.81571960 -206.69905090]
[232.37623596 -191.78044128]
[233.93676758 -176.86184692]
[241.25048828 -175.20071411]
[244.57275391 -189.82817078]
[243.21246338 -204.76635742]
[256.99923706 -210.67605591]
[266.87991333 -199.39012146]
[259.20022583 -186.50590515]
[255.87794495 -171.87844849]
[263.19168091 -170.21731567]
[271.04342651 -182.99816895]
[278.89520264 -195.77900696]
[280.72082520 -204.72914124]
[286.96020508 -208.69046021]
[295.00137329 -221.35298157]
[303.04254150 -234.01551819]
[311.08370972 -246.67803955]
[311.23434448 -263.07647705]
[325.64230347 -270.90863037]
[339.48596191 -262.11740112]
[338.52410889 -245.74647522]
[323.74624634 -238.63685608]
[315.70507812 -225.97433472]
[307.66387939 -213.31181335]
[299.62271118 -200.64929199]
[291.67602539 -187.92724609]
[283.82427979 -175.14640808]
[275.97253418 -162.36557007]
[288.99053955 -169.81747437]
[299.26190186 -158.88589478]
[304.34353638 -144.77288818]
[303.39859009 -129.80268860]
[296.58267212 -116.44067383]
[285.01828003 -106.88740540]
[270.60992432 -102.71617889]
[255.73045349 -104.61392975]
[242.83033752 -112.26814270]
[234.03404236 -124.41825104]
[230.79020691 -139.06250000]
[229.99067688 -154.04116821]
[223.51116943 -140.51281738]
[217.03167725 -126.98447418]
[225.56089783 -114.77308655]
[226.84112549 -99.83264160]
[220.42877197 -86.16706085]
[207.95530701 -77.48896027]
[192.71343994 -76.21114349]
[186.23393250 -62.68280029]
[179.75444031 -49.15445709]
[173.27494812 -35.62611008]
[166.79545593 -22.09776497]
[160.31596375 -8.56941891]
[153.83645630 4.95892668]
[155.31689453 19.77977562]
[142.37750244 28.88375473]
[135.89799500 42.41210175]
[129.41850281 55.94044495]
[122.93901062 69.46879578]
[116.45951080 82.99713898]
[122.00234985 89.29791260]
[125.13357544 97.38189697]
[125.29267120 106.32716370]
[122.27044678 115.04222107]
[116.25716400 122.39916992]
[107.84056091 127.37898254]
[97.95154572 129.21026611]
[100.39727020 144.00953674]
[102.84299469 158.80880737]
[105.28872681 173.60807800]
[115.17258453 185.96203613]
[109.61398315 199.78054810]
[112.05971527 214.57981873]
[114.50543976 229.37908936]
[116.95116425 244.17835999]
[119.39689636 258.97763062]
[121.84262085 273.77688599]
[135.32359314 288.76440430]
[127.73580933 306.54959106]
[130.62107849 321.26947021]
[133.50634766 335.98937988]
[136.39163208 350.70925903]
[140.89926147 365.01596069]
[146.97308350 378.73123169]
[153.04692078 392.44647217]
[157.26483154 395.52160645]
[159.64353943 399.50845337]
[160.14375305 403.55380249]
[159.07048035 406.91244507]
[164.52584839 420.88525391]
[169.98120117 434.85803223]
[175.43655396 448.83084106]
[188.57092285 458.65023804]
[186.36584473 474.90045166]
[171.08970642 480.86465454]
[158.45730591 470.40740967]
[161.46376038 454.28619385]
[156.00840759 440.31341553]
[150.55303955 426.34060669]
[145.09768677 412.36779785]
[139.33164978 398.52032471]
[133.25782776 384.80505371]
[127.18399048 371.08978271]
[125.67476654 386.01367188]
[118.94138336 399.41744995]
[107.86972046 409.53765869]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 186]
[13 185]
[14 184]
[15 183]
[19 181]
[20 180]
[21 179]
[22 178]
[23 177]
[24 176]
[26 174]
[27 173]
[28 172]
[29 171]
[30 75]
[31 74]
[32 73]
[33 72]
[37 71]
[38 70]
[39 69]
[40 68]
[41 67]
[42 66]
[44 65]
[45 64]
[46 63]
[47 62]
[77 164]
[78 163]
[79 162]
[80 161]
[81 160]
[83 158]
[84 157]
[85 156]
[86 155]
[87 154]
[88 153]
[89 152]
[94 147]
[95 146]
[96 145]
[97 107]
[98 106]
[99 105]
[100 104]
[115 133]
[116 132]
[117 131]
[119 130]
[120 129]
[121 128]
[122 127]
[187 207]
[188 206]
[189 205]
[193 204]
[194 203]
[195 202]
[196 201]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
