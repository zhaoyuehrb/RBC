%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:54:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCAGCGGGCGCGGAGCCGGAAGUGUUGUGGCCGCCGCCGCCGCGCGUCGCGGAGGCACGUGUGGAGCCCCGGCAGCAGGAGCGUCGCAGGUCCUUGGCCCUUGCCAGACAUUAGCACCAUGAGCUUCGUGGCAUACGAGGAGCUGAUCAAGGAGGGUGACACGGCCAUCCUGUCACUGGGCCAUGGUGCAAUGGUGGCGGUGCGUGUGCAGCGUGGGG\
) } def
/len { sequence length } bind def

/coor [
[53.95213318 343.91528320]
[38.96207428 344.46124268]
[25.66321182 337.52291870]
[17.53539467 324.91583252]
[16.70499229 309.94070435]
[8.59537983 322.55950928]
[0.48576802 335.17831421]
[-7.62384415 347.79711914]
[-8.57574940 363.58966064]
[-21.96566391 370.11343384]
[-30.07527542 382.73223877]
[-38.18488693 395.35104370]
[-46.29449844 407.96984863]
[-54.40411377 420.58865356]
[-55.35601807 436.38119507]
[-68.74593353 442.90493774]
[-76.85554504 455.52374268]
[-74.86408234 471.44271851]
[-86.17105103 482.82394409]
[-102.10271454 480.93670654]
[-110.43766022 467.22872925]
[-104.78203583 452.21560669]
[-89.47434998 447.41412354]
[-81.36473083 434.79534912]
[-80.99288177 419.90536499]
[-67.02291870 412.47903442]
[-58.91330338 399.86022949]
[-50.80369186 387.24142456]
[-42.69408035 374.62261963]
[-34.58446503 362.00381470]
[-34.21261597 347.11386108]
[-20.24264717 339.68750000]
[-12.13303471 327.06869507]
[-4.02342272 314.44989014]
[4.08618975 301.83111572]
[11.27492428 288.66592407]
[17.50614929 275.02142334]
[23.73737526 261.37695312]
[21.98637772 246.58563232]
[34.75727463 237.24674988]
[40.98849869 223.60226440]
[47.12214279 209.91363525]
[53.15789795 196.18157959]
[59.19365311 182.44950867]
[65.22940826 168.71743774]
[71.26515961 154.98536682]
[77.30091095 141.25331116]
[83.33666992 127.52124023]
[89.37242126 113.78916931]
[84.94134521 99.45858765]
[72.20803070 91.52999115]
[56.40350342 90.80369568]
[49.68920517 77.50830078]
[36.95588684 69.57970428]
[24.22257042 61.65111160]
[11.48925304 53.72251511]
[2.55679774 51.84509277]
[-1.36814725 45.58869171]
[-13.98694992 37.47908020]
[-29.77949524 36.52717590]
[-36.30325699 23.13726044]
[-48.92205811 15.02764893]
[-61.54086304 6.91803646]
[-74.15966797 -1.19157588]
[-86.77846527 -9.30118847]
[-102.57101440 -10.25309372]
[-109.09477234 -23.64300728]
[-121.71357727 -31.75261879]
[-137.50611877 -32.70452499]
[-144.02987671 -46.09444046]
[-156.64868164 -54.20405197]
[-171.52632141 -49.38847351]
[-185.99916077 -55.31056595]
[-193.23355103 -69.17410278]
[-189.81364441 -84.43314362]
[-177.35421753 -93.88282776]
[-161.73822021 -93.06131744]
[-150.33906555 -82.35649872]
[-148.53907776 -66.82285309]
[-135.92027283 -58.71324158]
[-121.03031158 -58.34138870]
[-113.60396576 -44.37142181]
[-100.98516083 -36.26181030]
[-86.09519958 -35.88995743]
[-78.66885376 -21.91999054]
[-66.05005646 -13.81037903]
[-53.43125153 -5.70076656]
[-40.81244659 2.40884566]
[-28.19364357 10.51845741]
[-13.30368137 10.89030933]
[-5.87733793 24.86027718]
[6.74146509 32.96989059]
[19.41784859 40.98919678]
[32.15116501 48.91779327]
[44.88448334 56.84638977]
[57.61780167 64.77498627]
[72.51155853 64.93417358]
[80.13662720 78.79667664]
[92.86994171 86.72527313]
[89.16278839 72.19058990]
[98.86467743 60.75059891]
[113.80966187 62.03418350]
[121.41874695 74.96097565]
[115.28740692 88.65071106]
[129.18623352 83.00955200]
[143.08505249 77.36839294]
[156.98388672 71.72723389]
[162.71170044 60.17549133]
[174.39892578 55.76119995]
[185.59111023 60.33945847]
[199.56907654 54.89734268]
[213.54704285 49.45523071]
[227.52499390 44.01311493]
[234.38096619 37.98741150]
[241.74160767 38.59465408]
[255.79585266 33.35269165]
[269.85009766 28.11072731]
[283.90435791 22.86876488]
[297.95858765 17.62680244]
[312.01284790 12.38483906]
[326.06707764 7.14287663]
[340.12133789 1.90091372]
[347.06265259 -4.02627325]
[354.41387939 -3.31398869]
[368.54153442 -8.35472965]
[382.66918945 -13.39547062]
[396.79687500 -18.43621063]
[407.19436646 -30.36108398]
[421.78158569 -27.35074234]
[435.90924072 -32.39148331]
[450.03692627 -37.43222427]
[464.16458130 -42.47296524]
[478.29223633 -47.51370621]
[472.89273071 -53.24362946]
[469.48510742 -61.29487610]
[468.78656006 -71.01741028]
[471.31536865 -81.56893921]
[477.34362793 -91.97261810]
[489.60354614 -100.61521912]
[489.69046021 -116.13204956]
[498.90844727 -128.61436462]
[513.71301270 -133.26248169]
[528.41143799 -128.28907776]
[537.35198975 -115.60653687]
[537.09674072 -100.09156036]
[527.74389648 -87.70996857]
[512.88977051 -83.22274017]
[498.24615479 -88.35530090]
[485.98623657 -79.71270752]
[488.60720825 -72.68558502]
[496.47015381 -51.60421371]
[511.39526367 -53.10111237]
[526.32037354 -54.59801483]
[541.24554443 -56.09491730]
[554.20465088 -65.17076111]
[567.64056396 -58.74217987]
[582.56567383 -60.23907852]
[597.49078369 -61.73598099]
[607.29980469 -74.12785339]
[623.00769043 -75.87118530]
[635.29516602 -65.93169403]
[636.87231445 -50.20629501]
[626.80346680 -38.02459717]
[611.06225586 -36.61377716]
[598.98767090 -46.81085587]
[584.06256104 -45.31395721]
[569.13745117 -43.81705475]
[557.24584961 -34.84828186]
[542.74243164 -41.16979218]
[527.81732178 -39.67289352]
[512.89215088 -38.17599106]
[497.96704102 -36.67908859]
[483.33297729 -33.38603973]
[469.20532227 -28.34530067]
[455.07766724 -23.30455971]
[440.94998169 -18.26381874]
[426.82232666 -13.22307777]
[417.43533325 -1.65875280]
[401.83761597 -4.30854607]
[387.70993042 0.73219502]
[373.58227539 5.77293587]
[359.45462036 10.81367683]
[345.36328125 15.95515919]
[331.30905151 21.19712257]
[317.25479126 26.43908501]
[303.20056152 31.68104744]
[289.14630127 36.92301178]
[275.09207153 42.16497421]
[261.03781128 47.40693665]
[246.98356628 52.64889908]
[232.96711731 57.99107361]
[218.98915100 63.43318939]
[205.01118469 68.87530518]
[191.03323364 74.31742096]
[180.80381775 88.58013916]
[162.62504578 85.62606049]
[148.72621155 91.26721954]
[134.82739258 96.90837097]
[120.92856598 102.54953003]
[103.10448456 119.82492828]
[97.06873322 133.55699158]
[91.03298187 147.28906250]
[84.99723053 161.02113342]
[78.96147156 174.75318909]
[72.92572021 188.48526001]
[66.88996887 202.21733093]
[60.85421371 215.94940186]
[60.26712036 225.05812073]
[54.63298035 229.83349609]
[48.40175247 243.47796631]
[49.70705032 259.24523926]
[37.38185501 267.60818481]
[31.15062904 281.25265503]
[24.91940498 294.89715576]
[37.96809769 287.49905396]
[52.96808243 287.52169800]
[65.99438477 294.95913696]
[73.63848877 307.86523438]
[73.90019226 322.86297607]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 35]
[6 34]
[7 33]
[8 32]
[10 30]
[11 29]
[12 28]
[13 27]
[14 26]
[16 24]
[17 23]
[36 214]
[37 213]
[38 212]
[40 210]
[41 209]
[42 207]
[43 206]
[44 205]
[45 204]
[46 203]
[47 202]
[48 201]
[49 200]
[50 99]
[51 98]
[53 96]
[54 95]
[55 94]
[56 93]
[58 92]
[59 91]
[61 89]
[62 88]
[63 87]
[64 86]
[65 85]
[67 83]
[68 82]
[70 80]
[71 79]
[104 199]
[105 198]
[106 197]
[107 196]
[110 194]
[111 193]
[112 192]
[113 191]
[115 190]
[116 189]
[117 188]
[118 187]
[119 186]
[120 185]
[121 184]
[122 183]
[124 182]
[125 181]
[126 180]
[127 179]
[129 177]
[130 176]
[131 175]
[132 174]
[133 173]
[138 149]
[139 148]
[151 172]
[152 171]
[153 170]
[154 169]
[156 167]
[157 166]
[158 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
