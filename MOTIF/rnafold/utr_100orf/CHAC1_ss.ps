%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:46:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUGGAGCUACCGAGCGGUGCCAGGCCAGGUGUGUGCGUCCGUCGGUCUUUCCGUGCCCACGCCGGAGACCAGCCCCGGAGGCCGCCUGGGCCUAUCCCUGUGCCAGGCACCAUGAAGCAGGAGUCUGCAGCCCCGAACACCCCGCCCACCUCGCAGUCCCCUACGCCGUCCGCUCAGUUCCCCCGAAACGACGGCGACCCUCAAGCGCUGU\
) } def
/len { sequence length } bind def

/coor [
[284.02569580 193.24168396]
[280.22567749 186.87669373]
[266.47515869 180.88311768]
[252.72460938 174.88954163]
[238.97409058 168.89596558]
[224.21536255 170.90330505]
[214.65632629 158.29635620]
[200.90579224 152.30278015]
[187.11164856 146.41029358]
[173.27461243 140.61921692]
[165.89248657 140.93650818]
[159.27795410 134.64022827]
[145.52743530 128.64665222]
[134.15921021 132.77651978]
[122.65518188 127.89752960]
[117.39420319 116.12271118]
[103.73313904 109.92792511]
[89.85397339 104.23857117]
[75.77539825 99.06231689]
[61.69681931 93.88605499]
[47.61824036 88.70980072]
[33.53966141 83.53353882]
[19.46108437 78.35728455]
[4.98173952 74.43955994]
[-9.78610897 71.81074524]
[-24.55395699 69.18193054]
[-39.32180405 66.55311584]
[-54.08965302 63.92429733]
[-68.87639618 61.40394974]
[-83.68124390 58.99221039]
[-98.48609161 56.58046722]
[-113.29093933 54.16872406]
[-128.09577942 51.75698090]
[-132.97236633 53.60595703]
[-137.60745239 53.41962814]
[-141.26666260 51.63038254]
[-143.49340820 48.89930344]
[-158.17771912 45.83809280]
[-173.26649475 50.59619904]
[-184.14686584 40.42434692]
[-198.83117676 37.36313248]
[-213.51548767 34.30191803]
[-228.19979858 31.24070549]
[-239.39593506 37.64156723]
[-251.56236267 34.79111481]
[-258.30252075 24.74808884]
[-272.94030762 21.47164345]
[-287.57809448 18.19519615]
[-306.52661133 25.07823181]
[-320.17108154 11.37543392]
[-334.89874268 8.53011322]
[-349.62640381 5.68479204]
[-364.35406494 2.83947134]
[-379.08172607 -0.00584923]
[-393.80938721 -2.85116982]
[-402.82650757 -1.40654492]
[-408.73168945 -5.84787226]
[-423.41598511 -8.90908527]
[-438.81484985 -3.26930141]
[-451.22326660 -13.99140549]
[-447.87649536 -30.04541779]
[-432.21743774 -34.91634369]
[-420.35476685 -23.59339523]
[-405.67047119 -20.53218269]
[-390.96408081 -17.57883644]
[-376.23641968 -14.73351574]
[-361.50875854 -11.88819504]
[-346.78106689 -9.04287434]
[-332.05340576 -6.19755316]
[-317.32574463 -3.35223269]
[-309.41250610 -9.81261253]
[-299.03164673 -10.87437439]
[-289.58493042 -5.94697475]
[-284.30166626 3.55740666]
[-269.66387939 6.83385324]
[-255.02607727 10.11029911]
[-238.58415222 3.97318864]
[-225.13859558 16.55639648]
[-210.45428467 19.61760902]
[-195.76997375 22.67882156]
[-181.08566284 25.74003601]
[-167.04721069 20.76296806]
[-155.11651611 31.15377998]
[-140.43220520 34.21499252]
[-125.68404388 36.95213699]
[-110.87919617 39.36387634]
[-96.07434845 41.77561951]
[-81.26950073 44.18736267]
[-66.46465302 46.59910583]
[-59.35908508 44.57246780]
[-51.46083832 49.15644836]
[-36.69298935 51.78526306]
[-21.92514229 54.41407776]
[-7.15729380 57.04289246]
[7.61055422 59.67170715]
[-3.39366198 49.47821808]
[-8.96470642 35.55114365]
[-8.02652454 20.58051109]
[-0.76032776 7.45792007]
[11.43040848 -1.28198504]
[26.19103050 -3.95108080]
[40.67050171 -0.03382806]
[52.07209778 9.71315098]
[58.19358826 23.40721512]
[57.85259247 38.40333939]
[51.11498260 51.80500031]
[39.28212738 61.02365875]
[24.63734245 64.27870178]
[38.71591949 69.45496368]
[52.79449844 74.63121796]
[66.87307739 79.80747986]
[80.95165253 84.98373413]
[95.03022766 90.15999603]
[91.18808746 75.66040802]
[100.00729370 63.52692032]
[114.98483276 62.70638657]
[125.07672119 73.80384827]
[122.84151459 88.63637543]
[109.92792511 96.26686096]
[123.58898926 102.46164703]
[141.86950684 100.23838043]
[151.52099609 114.89613342]
[165.27153015 120.88970184]
[179.06568909 126.78218842]
[192.90272522 132.57325745]
[202.02487183 132.99925232]
[206.89936829 138.55224609]
[220.64990234 144.54582214]
[236.39215088 142.96717834]
[244.96766663 155.14543152]
[258.71820068 161.13900757]
[272.46871948 167.13258362]
[286.21923828 173.12615967]
[276.72460938 161.51358032]
[270.63446045 147.80555725]
[268.38137817 132.97573853]
[270.12536621 118.07746124]
[275.74258423 104.16894531]
[284.83401489 92.23807526]
[296.75393677 83.13229370]
[310.65570068 77.49836731]
[325.55187988 75.73645782]
[340.38439941 77.97172546]
[354.09973145 84.04539490]
[365.72372437 93.52606201]
[374.43069458 105.74032593]
[379.60226440 119.82063293]
[380.87103271 134.76687622]
[378.14694214 149.51745605]
[371.62344360 163.02462769]
[361.76391602 174.32904053]
[349.26864624 182.62773132]
[335.02517700 187.33125305]
[320.04516602 188.10554504]
[305.39501953 184.89645386]
[316.96392822 194.44422913]
[328.53286743 203.99201965]
[340.10177612 213.53979492]
[351.67068481 223.08757019]
[367.49801636 214.07846069]
[385.53720093 211.83795166]
[403.02206421 216.68331909]
[417.28149414 227.84730530]
[426.14755249 243.59942627]
[428.28497314 261.51422119]
[423.39230347 278.84472656]
[435.50164795 287.69708252]
[447.61096191 296.54946899]
[459.72027588 305.40182495]
[471.82958984 314.25421143]
[483.93890381 323.10656738]
[496.04821777 331.95895386]
[510.75262451 327.36697388]
[525.17285156 332.25674438]
[533.84619141 344.55462646]
[533.61761475 359.42358398]
[545.72692871 368.27597046]
[560.08215332 362.62521362]
[575.20910645 365.65493774]
[586.28076172 376.39837646]
[589.76428223 391.42730713]
[584.54803467 405.94604492]
[572.29650879 415.32174683]
[556.91912842 416.56265259]
[543.32281494 409.27279663]
[535.84594727 395.77832031]
[536.87457275 380.38528442]
[524.76519775 371.53289795]
[510.66662598 376.26232910]
[496.31683350 371.72946167]
[487.28207397 359.47274780]
[487.19583130 344.06826782]
[475.08651733 335.21588135]
[462.97720337 326.36352539]
[450.86788940 317.51113892]
[438.75857544 308.65878296]
[426.64926147 299.80639648]
[414.53994751 290.95404053]
[404.99417114 298.20419312]
[393.88589478 302.74719238]
[381.96673584 304.26763916]
[370.04519653 302.65484619]
[358.93188477 298.01104736]
[349.38436890 290.64465332]
[342.05563354 281.05010986]
[337.44931030 269.87448120]
[335.88504028 257.87387085]
[337.47647095 245.86230469]
[342.12292480 234.65649414]
[330.55398560 225.10871887]
[318.98507690 215.56092834]
[307.41616821 206.01315308]
[295.84722900 196.46537781]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 133]
[3 132]
[4 131]
[5 130]
[7 128]
[8 127]
[9 125]
[10 124]
[12 123]
[13 122]
[16 120]
[17 119]
[18 113]
[19 112]
[20 111]
[21 110]
[22 109]
[23 108]
[24 95]
[25 94]
[26 93]
[27 92]
[28 91]
[29 89]
[30 88]
[31 87]
[32 86]
[33 85]
[37 84]
[38 83]
[40 81]
[41 80]
[42 79]
[43 78]
[46 76]
[47 75]
[48 74]
[50 70]
[51 69]
[52 68]
[53 67]
[54 66]
[55 65]
[57 64]
[58 63]
[155 213]
[156 212]
[157 211]
[158 210]
[159 209]
[166 198]
[167 197]
[168 196]
[169 195]
[170 194]
[171 193]
[172 192]
[176 188]
[177 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
