%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:02:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGCGGUGACGGCGGCGGCGGCGGCGGUAGCAGCGGCGGCGGCGGCGGGGACUGGCAUCGGGGCCCCGAGCCGAGCGGAGCCGGACCCCGGGCGAGCGCGUCUGCAGCCACCCCAGCUCAUACCUCUCUGCCUCCCCGCUCUCAAGGAGGGUCUGCCGCAUGUGAUGAAAGUGUCUACUCUCAGGGAAAGCUCAGCCAUGGCUUCCCCACUGCCCCGGGAGAUGGAGGAGGAGCUGGUGCCUACUGGCUCUGAG\
CCAGGUGACA\
) } def
/len { sequence length } bind def

/coor [
[99.70266724 190.43037415]
[92.20907593 190.74031067]
[88.52679443 205.28132629]
[84.84451294 219.82232666]
[81.16223145 234.36332703]
[85.27502441 249.64060974]
[74.65012360 260.07904053]
[70.96784210 274.62005615]
[75.94834900 290.24459839]
[64.70877838 302.18627930]
[48.81143951 298.16055298]
[44.61015320 282.30868530]
[56.42684174 270.93777466]
[60.10912323 256.39675903]
[55.73294067 242.15954590]
[66.62122345 230.68104553]
[70.30350494 216.14004517]
[73.98578644 201.59904480]
[77.66807556 187.05802917]
[79.30570984 159.07122803]
[98.04203033 147.51730347]
[97.51067352 132.52671814]
[96.97930908 117.53614044]
[86.43552399 106.86708832]
[71.45226288 106.15872192]
[57.30209732 113.23568726]
[44.95441437 104.90597534]
[29.97115135 104.19760895]
[14.98788643 103.48924255]
[0.83772087 110.56620789]
[-11.50996208 102.23650360]
[-26.49322701 101.52813721]
[-41.47649002 100.81977081]
[-56.45975494 100.11140442]
[-68.09494781 110.46804810]
[-83.28002167 109.53621674]
[-93.08178711 98.38001251]
[-108.06505585 97.67164612]
[-123.04831696 96.96327972]
[-132.78367615 108.90183258]
[-147.50997925 112.77346039]
[-161.52648926 107.29611969]
[-169.53417969 94.76556396]
[-184.51745605 94.05719757]
[-194.54608154 102.13321686]
[-206.99092102 101.25460052]
[-215.23774719 92.43379974]
[-230.21160889 91.54853058]
[-245.18545532 90.66325378]
[-260.15930176 89.77798462]
[-275.13317871 88.89271545]
[-289.36593628 95.80206299]
[-301.61437988 87.32711029]
[-316.58822632 86.44184113]
[-331.56207275 85.55656433]
[-346.53591919 84.67129517]
[-361.50979614 83.78601837]
[-375.74255371 90.69537354]
[-387.99099731 82.22042084]
[-402.96484375 81.33514404]
[-417.93869019 80.44987488]
[-435.57037354 90.26644897]
[-451.20565796 78.85724640]
[-466.19625854 78.32588196]
[-481.18682861 77.79451752]
[-493.85855103 87.63358307]
[-509.41720581 83.72109222]
[-515.92755127 69.05838013]
[-508.39538574 54.89342117]
[-492.59875488 52.09236145]
[-480.65548706 62.80393600]
[-465.66488647 63.33529663]
[-450.67431641 63.86665726]
[-443.88589478 56.28426743]
[-433.83767700 53.61659241]
[-423.76632690 56.97156525]
[-417.05343628 65.47602081]
[-402.07955933 66.36128998]
[-387.10571289 67.24656677]
[-373.94400024 60.27389145]
[-360.62451172 68.81216431]
[-345.65066528 69.69744110]
[-330.67681885 70.58271027]
[-315.70294189 71.46798706]
[-300.72909546 72.35325623]
[-287.56738281 65.38058472]
[-274.24789429 73.91886139]
[-259.27404785 74.80413055]
[-244.30018616 75.68939972]
[-229.32633972 76.57467651]
[-214.35247803 77.45994568]
[-199.08946228 68.77042389]
[-183.80908203 79.07392883]
[-168.82582092 79.78229523]
[-159.67166138 68.06310272]
[-145.20091248 63.93255997]
[-130.90556335 69.17625427]
[-122.33995056 81.98001862]
[-107.35668945 82.68838501]
[-92.37342072 83.39675140]
[-81.56285858 73.21504211]
[-66.35760498 73.71998596]
[-55.75138855 85.12813568]
[-40.76812363 85.83650208]
[-25.78486061 86.54486847]
[-10.80159569 87.25323486]
[2.27686644 80.12561035]
[15.69625187 88.50598145]
[30.67951775 89.21434784]
[45.66278076 89.92271423]
[58.74124146 82.79508209]
[72.16062927 91.17545319]
[87.14389038 91.88381958]
[101.66290283 88.11573792]
[114.41066742 80.21039581]
[127.15843201 72.30505371]
[139.90620422 64.39971161]
[152.65397644 56.49437332]
[165.40173340 48.58903503]
[178.14950562 40.68369293]
[179.68800354 27.32311249]
[188.50364685 17.42534828]
[201.21934509 14.44589138]
[213.15362549 19.25205421]
[225.99386597 11.49781799]
[238.83412170 3.74358296]
[251.67436218 -4.01065207]
[264.51458740 -11.76488781]
[265.05810547 -23.60079765]
[271.17135620 -33.61036682]
[281.24520874 -39.37993240]
[292.73284912 -39.58356857]
[302.79312134 -34.28611374]
[315.81292725 -41.73491669]
[328.83273315 -49.18371582]
[341.85253906 -56.63251877]
[354.87234497 -64.08132172]
[354.32260132 -87.77117920]
[376.07519531 -106.25283813]
[380.60925293 -120.55117035]
[385.14331055 -134.84950256]
[389.67733765 -149.14784241]
[394.21139526 -163.44618225]
[398.74545288 -177.74452209]
[397.76962280 -194.67036438]
[413.76385498 -200.29357910]
[423.59497070 -186.48106384]
[413.04379272 -173.21046448]
[408.50973511 -158.91213989]
[403.97567749 -144.61380005]
[399.44165039 -130.31546021]
[394.90759277 -116.01712799]
[390.37353516 -101.71878815]
[395.67684937 -96.41548920]
[402.48672485 -109.78057861]
[417.30203247 -107.43401337]
[419.64849854 -92.61867523]
[406.28344727 -85.80888367]
[411.58673096 -80.50558472]
[425.88507080 -85.03963470]
[440.18341064 -89.57367706]
[447.38830566 -95.13246918]
[454.67745972 -94.07576752]
[469.02835083 -98.44062805]
[483.37924194 -102.80549622]
[479.97915649 -116.67910767]
[488.67346191 -133.04489136]
[501.32699585 -141.10023499]
[513.98046875 -149.15557861]
[521.46679688 -163.09352112]
[536.35821533 -163.40142822]
[549.01171875 -171.45677185]
[561.66522217 -179.51211548]
[568.75830078 -194.29792786]
[585.12811279 -195.27810669]
[593.93481445 -181.44432068]
[586.11883545 -167.02758789]
[569.72058105 -166.85859680]
[557.06707764 -158.80325317]
[544.41351318 -150.74790955]
[537.83233643 -137.38613892]
[522.03582764 -136.50207520]
[509.38232422 -128.44673157]
[496.72882080 -120.39138031]
[501.43139648 -106.14759064]
[516.39373779 -107.20964813]
[531.35614014 -108.27169800]
[546.31848145 -109.33375549]
[561.28082275 -110.39581299]
[569.58648682 -114.11415863]
[576.42596436 -111.38099670]
[591.39984131 -112.26626587]
[599.74884033 -115.88625336]
[606.55554199 -113.07250977]
[621.53881836 -113.78087616]
[635.03796387 -123.09246063]
[649.73345947 -115.81419373]
[650.50793457 -99.43334198]
[636.56457520 -90.80111694]
[622.24719238 -98.79761505]
[607.26391602 -98.08924866]
[592.28509521 -97.29241180]
[577.31121826 -96.40714264]
[562.34289551 -95.43345642]
[547.38055420 -94.37140656]
[532.41815186 -93.30934906]
[517.45581055 -92.24729156]
[502.49346924 -91.18523407]
[487.74411011 -88.45460510]
[473.39321899 -84.08974457]
[459.04232788 -79.72487640]
[444.71746826 -75.27534485]
[430.41912842 -70.74129486]
[416.12078857 -66.20725250]
[406.44461060 -48.99167633]
[390.44436646 -40.50400162]
[374.02563477 -41.91859055]
[362.32113647 -51.06151199]
[349.30133057 -43.61270905]
[336.28152466 -36.16390991]
[323.26171875 -28.71510887]
[310.24191284 -21.26630783]
[306.47894287 -3.32642174]
[290.50573730 6.30186749]
[272.26882935 1.07535517]
[259.42858887 8.82959080]
[246.58834839 16.58382607]
[233.74810791 24.33806038]
[220.90786743 32.09229660]
[217.56416321 48.58978271]
[203.02825928 57.73073196]
[186.05485535 53.43146133]
[173.30708313 61.33679962]
[160.55931091 69.24214172]
[147.81153870 77.14748383]
[135.06378174 85.05282593]
[122.31600952 92.95816040]
[109.56823730 100.86350250]
[113.16363525 107.60225677]
[111.96989441 117.00477600]
[112.50125885 131.99536133]
[113.03261566 146.98594666]
[126.64013672 151.22691345]
[136.52259827 164.97904968]
[136.37071228 184.63008118]
[141.24119568 198.81733704]
[146.11169434 213.00459290]
[150.98217773 227.19184875]
[155.85267639 241.37910461]
[160.72315979 255.56637573]
[171.58485413 268.58404541]
[162.08273315 282.62490845]
[145.96012878 277.38104248]
[146.53590393 260.43685913]
[141.66542053 246.24960327]
[136.79492188 232.06234741]
[131.92443848 217.87509155]
[127.05393982 203.68782043]
[122.18344879 189.50056458]
[114.68985748 189.81050110]
[115.30973053 204.79769897]
[115.92960358 219.78488159]
[116.54923248 234.77207947]
[101.56202698 235.39144897]
[100.94242096 220.40475464]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 19]
[3 18]
[4 17]
[5 16]
[7 14]
[8 13]
[21 242]
[22 241]
[23 240]
[24 113]
[25 112]
[27 110]
[28 109]
[29 108]
[31 106]
[32 105]
[33 104]
[34 103]
[37 100]
[38 99]
[39 98]
[43 94]
[44 93]
[47 91]
[48 90]
[49 89]
[50 88]
[51 87]
[53 85]
[54 84]
[55 83]
[56 82]
[57 81]
[59 79]
[60 78]
[61 77]
[63 73]
[64 72]
[65 71]
[114 238]
[115 237]
[116 236]
[117 235]
[118 234]
[119 233]
[120 232]
[124 229]
[125 228]
[126 227]
[127 226]
[128 225]
[133 222]
[134 221]
[135 220]
[136 219]
[137 218]
[139 153]
[140 152]
[141 151]
[142 150]
[143 149]
[144 148]
[159 214]
[160 213]
[161 212]
[163 211]
[164 210]
[165 209]
[167 184]
[168 183]
[169 182]
[171 180]
[172 179]
[173 178]
[185 208]
[186 207]
[187 206]
[188 205]
[189 204]
[191 203]
[192 202]
[194 201]
[195 200]
[245 259]
[246 258]
[247 257]
[248 256]
[249 255]
[250 254]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
