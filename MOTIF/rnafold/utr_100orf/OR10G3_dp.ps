%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:00:02 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR10G3)
} def

/sequence { (\
AUGGAAAGAAUCAACAGCACACUGUUGACUGCGUUUAUCCUGACAGGAAUUCCGUAUCCACUCAGGCUAAGGACACUCUUUUUUGUGUUCUUUUUUCUAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 34 0.006796347 ubox
1 38 0.025632209 ubox
1 55 0.003688640 ubox
2 33 0.007536151 ubox
2 37 0.030050801 ubox
2 54 0.003849079 ubox
2 60 0.007081161 ubox
2 99 0.899062130 ubox
3 30 0.003450311 ubox
3 32 0.008116540 ubox
3 36 0.031158815 ubox
3 53 0.004019508 ubox
3 59 0.008139296 ubox
3 68 0.003645463 ubox
3 95 0.013702372 ubox
3 96 0.008168578 ubox
3 97 0.103383619 ubox
3 98 0.983248778 ubox
4 29 0.003591162 ubox
4 35 0.031580080 ubox
4 36 0.010291109 ubox
4 52 0.004019638 ubox
4 58 0.008138980 ubox
4 67 0.003705852 ubox
4 94 0.017485574 ubox
4 95 0.010552848 ubox
4 96 0.103867459 ubox
4 97 0.991930801 ubox
5 34 0.031241100 ubox
5 35 0.010876869 ubox
5 36 0.006627414 ubox
5 51 0.003961032 ubox
5 57 0.007615065 ubox
5 93 0.018152358 ubox
5 94 0.011163526 ubox
5 95 0.106093912 ubox
5 96 0.990596758 ubox
6 34 0.011130249 ubox
6 35 0.008188883 ubox
6 36 0.005598647 ubox
6 50 0.003430934 ubox
6 92 0.019189969 ubox
6 93 0.012146708 ubox
6 94 0.107523276 ubox
6 95 0.987101880 ubox
6 96 0.034703347 ubox
7 30 0.062802436 ubox
7 34 0.009365626 ubox
7 35 0.007264169 ubox
7 36 0.005803143 ubox
7 68 0.005306489 ubox
7 91 0.019928384 ubox
7 92 0.011593510 ubox
7 93 0.106675459 ubox
7 94 0.979121312 ubox
7 95 0.048606038 ubox
7 96 0.006222190 ubox
7 98 0.045225818 ubox
8 29 0.070123279 ubox
8 34 0.009300461 ubox
8 35 0.008541008 ubox
8 36 0.030955786 ubox
8 67 0.005979573 ubox
8 90 0.019894433 ubox
8 91 0.008644383 ubox
8 92 0.098112519 ubox
8 93 0.958021656 ubox
8 94 0.059667387 ubox
8 95 0.014690535 ubox
8 96 0.003305480 ubox
8 97 0.046879381 ubox
9 34 0.009101855 ubox
9 35 0.035048660 ubox
9 36 0.012094537 ubox
9 89 0.015600099 ubox
9 91 0.084235708 ubox
9 92 0.901244381 ubox
9 93 0.066080261 ubox
9 94 0.017722014 ubox
9 95 0.005080993 ubox
9 96 0.046251099 ubox
10 34 0.038289164 ubox
10 35 0.014670759 ubox
10 38 0.005599773 ubox
10 88 0.007684296 ubox
10 91 0.623430116 ubox
10 92 0.057565203 ubox
10 93 0.017852845 ubox
10 94 0.005567772 ubox
10 95 0.040223897 ubox
11 28 0.910661549 ubox
11 33 0.022049511 ubox
11 37 0.003625631 ubox
12 27 0.999005509 ubox
12 31 0.008457206 ubox
13 26 0.998926660 ubox
13 30 0.008165224 ubox
13 35 0.006348419 ubox
14 25 0.999108722 ubox
14 34 0.007504661 ubox
15 24 0.999572424 ubox
15 27 0.022725602 ubox
15 31 0.011832452 ubox
15 33 0.007546199 ubox
16 23 0.998145380 ubox
16 26 0.022831930 ubox
16 30 0.011906336 ubox
16 89 0.004643240 ubox
17 22 0.989858101 ubox
17 25 0.022927396 ubox
17 29 0.011909333 ubox
17 32 0.009286396 ubox
17 34 0.003228679 ubox
17 88 0.005183952 ubox
18 24 0.022950514 ubox
18 27 0.011508094 ubox
18 31 0.009291349 ubox
18 33 0.003282369 ubox
18 87 0.005215200 ubox
19 23 0.018607457 ubox
19 26 0.010202229 ubox
19 30 0.008534867 ubox
19 86 0.005220172 ubox
20 24 0.003507442 ubox
20 27 0.006595137 ubox
20 31 0.003282536 ubox
20 85 0.005224401 ubox
21 26 0.005659660 ubox
21 30 0.003203048 ubox
21 84 0.005038308 ubox
27 32 0.007108937 ubox
27 35 0.010688902 ubox
27 78 0.005243507 ubox
28 34 0.073795571 ubox
28 35 0.011864377 ubox
28 38 0.003857115 ubox
28 77 0.005182997 ubox
29 33 0.096198575 ubox
29 46 0.003493966 ubox
29 65 0.008028077 ubox
29 71 0.017026228 ubox
29 72 0.008914444 ubox
30 37 0.046661804 ubox
30 45 0.003648268 ubox
30 56 0.042927462 ubox
30 64 0.007987892 ubox
30 69 0.014811523 ubox
30 70 0.017050997 ubox
30 71 0.008637300 ubox
30 75 0.006827104 ubox
31 36 0.044815705 ubox
31 44 0.003604414 ubox
31 55 0.047304203 ubox
31 63 0.007822077 ubox
31 67 0.034215491 ubox
31 68 0.014872222 ubox
31 74 0.007581153 ubox
32 42 0.003290481 ubox
32 54 0.047748182 ubox
32 66 0.025356360 ubox
33 44 0.007691655 ubox
33 53 0.047405141 ubox
33 61 0.006957939 ubox
33 67 0.048513414 ubox
33 74 0.003196070 ubox
34 43 0.007723563 ubox
34 60 0.006800341 ubox
34 66 0.016347321 ubox
34 70 0.054100527 ubox
34 71 0.141215166 ubox
34 72 0.004147054 ubox
34 73 0.003328781 ubox
35 42 0.007607719 ubox
35 65 0.003520121 ubox
35 69 0.066379187 ubox
35 70 0.618079977 ubox
35 71 0.008421420 ubox
35 72 0.003335528 ubox
36 69 0.806058216 ubox
36 70 0.023221219 ubox
36 71 0.003176930 ubox
37 50 0.007552324 ubox
37 68 0.811049120 ubox
38 48 0.047132120 ubox
38 49 0.005603410 ubox
38 66 0.007793136 ubox
39 47 0.048591992 ubox
39 65 0.007016496 ubox
39 66 0.993782264 ubox
40 46 0.048581437 ubox
40 65 0.998680197 ubox
41 45 0.043766462 ubox
41 64 0.998501758 ubox
42 63 0.998688404 ubox
43 55 0.007444038 ubox
43 62 0.991367001 ubox
44 54 0.010532292 ubox
45 62 0.005525312 ubox
46 53 0.025304658 ubox
46 58 0.006074659 ubox
46 59 0.997797627 ubox
46 61 0.007780115 ubox
47 52 0.025247934 ubox
47 57 0.005075865 ubox
47 58 0.998306868 ubox
48 57 0.973901465 ubox
49 55 0.173302552 ubox
49 57 0.148704464 ubox
50 54 0.162660787 ubox
50 56 0.207980526 ubox
52 66 0.003704992 ubox
53 65 0.003752684 ubox
54 61 0.008038954 ubox
55 60 0.007533868 ubox
55 69 0.005407920 ubox
56 68 0.007580504 ubox
57 66 0.005533960 ubox
58 65 0.007436694 ubox
58 66 0.038961172 ubox
59 65 0.039387111 ubox
64 98 0.006518440 ubox
65 97 0.006855554 ubox
66 96 0.005918449 ubox
69 92 0.298568089 ubox
69 93 0.018267454 ubox
70 91 0.670415824 ubox
70 92 0.027013680 ubox
71 88 0.003488620 ubox
71 89 0.006142023 ubox
71 90 0.980376372 ubox
71 91 0.055803286 ubox
72 88 0.004991767 ubox
72 89 0.994153156 ubox
72 90 0.075639183 ubox
73 86 0.005171571 ubox
73 88 0.997958275 ubox
73 89 0.053515247 ubox
74 85 0.005280803 ubox
74 87 0.999914166 ubox
75 84 0.005165815 ubox
75 86 0.999712187 ubox
76 85 0.999813778 ubox
2 99 0.9500000 lbox
3 98 0.9500000 lbox
4 97 0.9500000 lbox
5 96 0.9500000 lbox
6 95 0.9500000 lbox
7 94 0.9500000 lbox
8 93 0.9500000 lbox
9 92 0.9500000 lbox
10 91 0.9500000 lbox
11 28 0.9500000 lbox
12 27 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
35 70 0.9500000 lbox
36 69 0.9500000 lbox
37 68 0.9500000 lbox
39 66 0.9500000 lbox
40 65 0.9500000 lbox
41 64 0.9500000 lbox
42 63 0.9500000 lbox
43 62 0.9500000 lbox
46 59 0.9500000 lbox
47 58 0.9500000 lbox
48 57 0.9500000 lbox
71 90 0.9500000 lbox
72 89 0.9500000 lbox
73 88 0.9500000 lbox
74 87 0.9500000 lbox
75 86 0.9500000 lbox
76 85 0.9500000 lbox
showpage
end
%%EOF
