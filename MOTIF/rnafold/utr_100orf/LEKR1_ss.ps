%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:00:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCGACUGGCGGCGCGGUCGCCCGGGAGACCGGGAAAGCCGUUUCACACCCGUCCUAGUCGAAGUCGAGAUUUCCUUUGGCUUCAAAGCUCUCUCACCAUAUUUUGGGAAGUUAUGGAUCAUCACAUUCCCAUGCAUGCGUUGCCUGAAGAAAUCCAAAAGAUGUUGCCUGAAGAAAAAGUUUGUAAGUACUGUGGAGUCAGCUAUCUAAUUC\
) } def
/len { sequence length } bind def

/coor [
[-135.81356812 276.79226685]
[-143.87573242 264.14309692]
[-146.66317749 249.40437317]
[-143.77714539 234.68463135]
[-135.62928772 222.08840942]
[-147.95486450 230.63711548]
[-160.28042603 239.18582153]
[-172.60600281 247.73451233]
[-184.93157959 256.28320312]
[-197.25714111 264.83190918]
[-202.52319336 272.29180908]
[-209.82585144 273.41394043]
[-222.27502441 281.78161621]
[-234.72418213 290.14932251]
[-247.17335510 298.51699829]
[-259.04580688 307.68463135]
[-270.29022217 317.61251831]
[-281.53463745 327.54040527]
[-292.77905273 337.46829224]
[-293.54571533 354.94635010]
[-306.46255493 366.23876953]
[-323.21337891 364.72412109]
[-334.31152344 374.81524658]
[-345.40969849 384.90637207]
[-356.50784302 394.99752808]
[-367.60598755 405.08865356]
[-372.07946777 420.86584473]
[-388.04373169 424.61743164]
[-399.07611084 412.48410034]
[-393.82745361 396.94757080]
[-377.69711304 393.99050903]
[-366.59896851 383.89935303]
[-355.50082397 373.80822754]
[-344.40267944 363.71710205]
[-333.30450439 353.62597656]
[-334.49987793 340.79806519]
[-327.99224854 329.45407104]
[-315.96255493 323.84603882]
[-302.70693970 326.22387695]
[-291.46252441 316.29598999]
[-280.21810913 306.36810303]
[-268.97369385 296.44018555]
[-283.95101929 297.26470947]
[-297.04772949 289.95196533]
[-304.20379639 276.76901245]
[-303.20080566 261.80258179]
[-294.34967041 249.69236755]
[-280.39428711 244.19258118]
[-265.66091919 247.00820923]
[-254.71696472 257.26635742]
[-250.95510864 271.78698730]
[-255.54104614 286.06784058]
[-243.09187317 277.70016479]
[-230.64271545 269.33245850]
[-218.19354248 260.96478271]
[-205.80584717 252.50634766]
[-193.48027039 243.95764160]
[-181.15470886 235.40895081]
[-168.82913208 226.86024475]
[-156.50355530 218.31153870]
[-144.17799377 209.76284790]
[-144.39717102 194.76445007]
[-156.96726990 186.57954407]
[-169.53736877 178.39465332]
[-182.10746765 170.20974731]
[-194.67756653 162.02485657]
[-207.24766541 153.83995056]
[-219.81776428 145.65505981]
[-232.38787842 137.47015381]
[-244.95797729 129.28526306]
[-260.36712646 132.79713440]
[-273.70166016 124.31388092]
[-277.05044556 108.86844635]
[-268.42666626 95.62435150]
[-252.94670105 92.43906403]
[-239.79450989 101.20237732]
[-236.77307129 116.71515656]
[-224.20297241 124.90005493]
[-211.63287354 133.08496094]
[-199.06277466 141.26985168]
[-186.49267578 149.45474243]
[-173.92257690 157.63964844]
[-161.35246277 165.82453918]
[-148.78236389 174.00944519]
[-136.21226501 182.19433594]
[-129.46516418 186.19944763]
[-124.79435730 191.49470520]
[-122.35660553 197.30557251]
[-108.72872925 191.03811646]
[-95.10085297 184.77067566]
[-81.47297668 178.50321960]
[-67.93813324 172.03730774]
[-54.49920654 165.37432861]
[-41.06028366 158.71134949]
[-36.46529388 152.92565918]
[-27.37596512 152.05079651]
[-13.84112072 145.58489990]
[-0.30627528 139.11898804]
[4.39950371 125.03384399]
[18.03365135 118.28368378]
[32.77553940 123.31504059]
[46.31038284 116.84912872]
[59.84523010 110.38322449]
[73.38007355 103.91731262]
[86.91491699 97.45140839]
[97.00605011 86.35325623]
[102.15923309 72.26621246]
[107.31241608 58.17916870]
[112.46559143 44.09212875]
[117.61877441 30.00508690]
[122.77195740 15.91804600]
[127.82207489 1.79373169]
[132.76887512 -12.36710167]
[130.01554871 -27.94688797]
[141.51725769 -37.41048431]
[146.46406555 -51.57131577]
[151.41085815 -65.73214722]
[150.92631531 -82.67916870]
[167.07690430 -87.83618927]
[176.50329590 -73.74437714]
[165.57168579 -60.78535461]
[160.62489319 -46.62451935]
[155.67810059 -32.46368790]
[158.78526306 -17.89677811]
[146.92970276 -7.42030525]
[141.98291016 6.74052811]
[142.74436951 14.08956146]
[136.85899353 21.07122612]
[131.70581055 35.15826797]
[126.55263519 49.24530792]
[121.39945221 63.33235168]
[116.24627686 77.41938782]
[111.09309387 91.50643158]
[116.17906952 97.01850128]
[131.43699646 113.55469513]
[145.89225769 109.54905701]
[160.34753418 105.54341125]
[167.77914429 100.23752594]
[175.04331970 101.58650208]
[189.55557251 97.79250336]
[204.06782532 93.99849701]
[218.58009338 90.20449829]
[233.09234619 86.41049957]
[238.82260132 72.11118317]
[251.72319031 64.02243042]
[266.73550415 65.06864166]
[278.11688232 74.63954163]
[292.62915039 70.84553528]
[298.15243530 56.34474564]
[311.16259766 47.88806534]
[326.65695190 48.72726822]
[338.67761230 58.53966141]
[342.60241699 73.55217743]
[336.92214966 87.99220276]
[323.82101440 96.30724335]
[308.33666992 95.30001068]
[296.42315674 85.35779572]
[281.91088867 89.15179443]
[276.66992188 103.06834412]
[264.09048462 111.32798767]
[248.88174438 110.58796692]
[236.88633728 100.92275238]
[222.37408447 104.71675110]
[207.86183167 108.51075745]
[193.34957886 112.30475616]
[178.83732605 116.09875488]
[164.35316467 119.99868011]
[149.89790344 124.00432587]
[135.44262695 128.00996399]
[150.04873657 131.42491150]
[158.14688110 144.05107117]
[162.11952209 158.51544189]
[161.60650635 173.50666809]
[156.65432739 187.66561890]
[147.71195984 199.70863342]
[135.59013367 208.54386902]
[121.38783264 213.37031555]
[106.39265442 213.75041199]
[91.96406555 209.64967346]
[79.41020203 201.43989563]
[69.86919403 189.86538696]
[64.20605469 175.97550964]
[62.93420792 161.02952576]
[66.16896057 146.38246155]
[73.61704254 133.36224365]
[84.60280609 123.14956665]
[93.38082886 110.98625183]
[79.84598541 117.45215607]
[66.31113434 123.91806793]
[52.77629089 130.38397217]
[39.24144745 136.84988403]
[33.89198303 151.47933960]
[20.07361794 157.84388733]
[6.15963268 152.65382385]
[-7.37521219 159.11973572]
[-20.91005707 165.58564758]
[-34.39730072 172.15026855]
[-47.83622360 178.81324768]
[-61.27514648 185.47622681]
[-65.24543762 190.75674438]
[-70.49760437 192.91743469]
[-75.20552063 192.13108826]
[-88.83339691 198.39854431]
[-102.46128082 204.66600037]
[-116.08915710 210.93345642]
[-101.10166168 210.32102966]
[-86.95877075 215.31889343]
[-75.68378448 225.21205139]
[-68.88970947 238.58518982]
[-67.54852295 253.52510071]
[-71.85208893 267.89450073]
[-81.18473816 279.63763428]
[-94.21132660 287.07458496]
[-109.06826019 289.14135742]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 61]
[6 60]
[7 59]
[8 58]
[9 57]
[10 56]
[12 55]
[13 54]
[14 53]
[15 52]
[16 42]
[17 41]
[18 40]
[19 39]
[22 35]
[23 34]
[24 33]
[25 32]
[26 31]
[62 85]
[63 84]
[64 83]
[65 82]
[66 81]
[67 80]
[68 79]
[69 78]
[70 77]
[88 205]
[89 204]
[90 203]
[91 202]
[92 199]
[93 198]
[94 197]
[96 196]
[97 195]
[98 194]
[101 191]
[102 190]
[103 189]
[104 188]
[105 187]
[106 133]
[107 132]
[108 131]
[109 130]
[110 129]
[111 128]
[112 126]
[113 125]
[115 123]
[116 122]
[117 121]
[135 169]
[136 168]
[137 167]
[139 166]
[140 165]
[141 164]
[142 163]
[143 162]
[147 158]
[148 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
