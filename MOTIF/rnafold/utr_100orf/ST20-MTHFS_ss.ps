%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:55:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCCGGUGGCGGAGGACGUCCCGGAGGAUCCCUCUGGUCGGGCGCCUGGCUUUGUGUAGCCAGCCAGGCUGGAGUGCAAUGGCGCGAUCUCGGCUCACUGCAACCUCUGUCUCCCAGGUUCAGGUGAUUGCCCACAGUGAGUAUCAAAAGUCCAAAAGAAUUUCCAUCUUUCUGAGCA\
) } def
/len { sequence length } bind def

/coor [
[298.76174927 228.17785645]
[285.90423584 220.45228577]
[273.04672241 212.72671509]
[258.70169067 216.56800842]
[245.55230713 208.91635132]
[241.62045288 193.84390259]
[228.76295471 186.11833191]
[213.86854553 186.19546509]
[206.02449036 172.45568848]
[193.16697693 164.73011780]
[180.30947876 157.00454712]
[167.45196533 149.27897644]
[154.59445190 141.55340576]
[141.73693848 133.82783508]
[128.87944031 126.10226440]
[116.02192688 118.37669373]
[96.08316040 133.48143005]
[64.99230194 125.03644562]
[52.13478851 132.76200867]
[48.25381470 145.08164978]
[37.36256409 151.24711609]
[25.58274841 148.42091370]
[12.59236717 155.92091370]
[-0.39801404 163.42091370]
[-13.38839531 170.92091370]
[-26.37877655 178.42091370]
[-39.36915588 185.92091370]
[-52.35953903 193.42091370]
[-63.05345917 206.57676697]
[-78.65554810 199.94267273]
[-76.59980011 183.11381531]
[-59.85953903 180.43054199]
[-46.86915588 172.93054199]
[-33.87877655 165.43054199]
[-20.88839531 157.93054199]
[-7.89801407 150.43054199]
[5.09236717 142.93054199]
[18.08274841 135.43054199]
[26.00837898 119.78659821]
[44.40921783 119.90450287]
[57.26672745 112.17893219]
[56.87420654 104.68920898]
[43.50896835 97.87963104]
[56.08916855 89.70977020]
[55.69664764 82.22004700]
[42.10203171 75.88077545]
[28.50741577 69.54149628]
[14.91279888 63.20222473]
[1.31818175 56.86294937]
[-12.27643490 50.52367783]
[-25.87105179 44.18440247]
[-39.46566772 37.84513092]
[-52.00074387 46.72023392]
[-67.29546356 48.12278366]
[-81.23562622 41.67549896]
[-90.07139587 29.11266899]
[-91.42599487 13.81362820]
[-84.93504333 -0.10625539]
[-72.34458160 -8.90260410]
[-57.04137039 -10.20924377]
[-43.14189911 -3.67469501]
[-34.38505936 8.94328117]
[-33.12639618 24.25051308]
[-19.53177834 30.58978653]
[-5.93716097 36.92906189]
[7.65745544 43.26833344]
[21.25207329 49.60760880]
[34.84669113 55.94688034]
[48.44130707 62.28615570]
[62.03592300 68.62542725]
[74.24765778 59.91488647]
[72.67972565 44.99705887]
[63.54230499 32.08125305]
[69.90685272 18.61493301]
[68.33892822 3.69710469]
[66.77100372 -11.22072411]
[65.20307159 -26.13855171]
[62.48408890 -29.60529327]
[61.16064072 -33.37920761]
[61.15605164 -36.97842407]
[62.24338150 -39.99671936]
[64.08369446 -42.14644623]
[63.56019974 -57.13731003]
[63.03670883 -72.12817383]
[59.60168839 -80.62306976]
[62.63720322 -87.38473511]
[62.37541580 -102.38245392]
[53.47002792 -116.15293121]
[61.18275833 -130.62518311]
[77.57940674 -130.91137695]
[85.79251099 -116.71712494]
[77.37313080 -102.64424133]
[77.63491821 -87.64652252]
[78.02757263 -72.65166473]
[78.55106354 -57.66080093]
[79.07455444 -42.66994095]
[80.12090302 -27.70648003]
[81.68882751 -12.78865051]
[83.25675964 2.12917757]
[84.82468414 17.04700661]
[93.84996033 28.89578819]
[87.59755707 43.42913055]
[89.16548157 58.34695816]
[123.52310181 75.85437775]
[123.74749756 105.51918793]
[136.60501099 113.24475861]
[149.46250916 120.97032928]
[162.32002258 128.69589233]
[175.17753601 136.42146301]
[188.03504944 144.14704895]
[200.89254761 151.87261963]
[213.75006104 159.59819031]
[229.56411743 160.07363892]
[236.48852539 173.26083374]
[249.34603882 180.98640442]
[264.50009155 177.38192749]
[277.42938232 185.39991760]
[280.77230835 199.86920166]
[293.62982178 207.59477234]
[306.48733521 215.32034302]
[321.18618774 218.31086731]
[336.04022217 216.22326660]
[350.89422607 214.13568115]
[365.12017822 202.46401978]
[381.12460327 209.63388062]
[395.93991089 207.28736877]
[410.75524902 204.94085693]
[419.84085083 192.00920105]
[435.42355347 189.37197876]
[448.25842285 198.59378052]
[450.73074341 214.20349121]
[441.37374878 226.94013977]
[425.73876953 229.24729919]
[413.10177612 219.75617981]
[398.28643799 222.10269165]
[383.47109985 224.44921875]
[376.09506226 234.05885315]
[363.75091553 236.12147522]
[352.98184204 228.98970032]
[338.12780762 231.07730103]
[323.27380371 233.16488647]
[320.04495239 239.93428040]
[334.08142090 245.22363281]
[348.11791992 250.51300049]
[362.54684448 254.61245728]
[364.55963135 269.47680664]
[351.74050903 277.26593018]
[339.47537231 268.63244629]
[326.53134155 261.05273438]
[313.58728027 253.47305298]
[310.35845947 260.24246216]
[318.08401489 273.09994507]
[331.82379150 280.94400024]
[331.74667358 295.83840942]
[339.47222900 308.69592285]
[347.30972290 321.48553467]
[355.25851440 334.20623779]
[363.20730591 346.92697144]
[371.15609741 359.64770508]
[379.10488892 372.36840820]
[394.61441040 374.36541748]
[405.17370605 385.89953613]
[405.79693604 401.52468872]
[396.18984985 413.86318970]
[380.88864136 417.08914185]
[367.11804199 409.67935181]
[361.38012695 395.13250732]
[366.38415527 380.31719971]
[358.43536377 367.59649658]
[350.48657227 354.87576294]
[342.53778076 342.15502930]
[334.58898926 329.43432617]
[328.36053467 325.41674805]
[326.61474609 316.42150879]
[318.88916016 303.56399536]
[305.70196533 296.63958740]
[305.22653198 280.82553101]
[297.50094604 267.96801758]
[290.47668457 252.20330811]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 120]
[2 119]
[3 118]
[6 115]
[7 114]
[9 112]
[10 111]
[11 110]
[12 109]
[13 108]
[14 107]
[15 106]
[16 105]
[18 41]
[19 40]
[22 38]
[23 37]
[24 36]
[25 35]
[26 34]
[27 33]
[28 32]
[45 70]
[46 69]
[47 68]
[48 67]
[49 66]
[50 65]
[51 64]
[52 63]
[71 103]
[72 102]
[74 100]
[75 99]
[76 98]
[77 97]
[82 96]
[83 95]
[84 94]
[86 93]
[87 92]
[121 141]
[122 140]
[123 139]
[125 136]
[126 135]
[127 134]
[151 178]
[152 177]
[154 175]
[155 174]
[156 172]
[157 171]
[158 170]
[159 169]
[160 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
