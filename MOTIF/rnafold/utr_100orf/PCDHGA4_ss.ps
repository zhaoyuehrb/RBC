%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:59:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCACAAGAUUUCUGCAGCACAAAGCACUGGCUCUGGAGCUUUAUGAAAGCUUCAAGCGGAAGCCCUGAGAGCUCUGGCUGUGAAUGCACUUUAUUUUGGACCCAGAAGAUCCUGGGGCUCCUCAGGCCUCGACAGAGGGAAAACCGAAGCACAGGCGACUCCGCGGCGGGGUUGUAAUGGCGG\
) } def
/len { sequence length } bind def

/coor [
[89.57629395 98.24318695]
[74.75303650 95.94727325]
[65.76906586 97.72858429]
[59.69718552 93.48354340]
[44.91529083 90.93488312]
[30.13339806 88.38623047]
[15.35150528 85.83757019]
[0.56961292 83.28891754]
[-14.21228027 80.74026489]
[-26.16167831 92.69529724]
[-42.71664810 95.15663147]
[-57.33420563 87.35140991]
[-64.35586548 72.52524567]
[-79.17911530 70.22933197]
[-94.00237274 67.93341827]
[-108.82562256 65.63750458]
[-125.82085419 72.69706726]
[-139.06726074 61.20171356]
[-153.92755127 59.15921402]
[-168.78784180 57.11671448]
[-183.64813232 55.07421494]
[-189.94097900 57.22436142]
[-195.52896118 56.03519440]
[-198.97753906 52.69990540]
[-213.75942993 50.15124893]
[-224.89126587 60.79964447]
[-239.98233032 62.82775879]
[-253.21739197 55.66553116]
[-259.62054443 42.24399567]
[-274.40243530 39.69534302]
[-289.18432617 37.14668655]
[-303.96621704 34.59803009]
[-318.74810791 32.04937363]
[-333.52999878 29.50071716]
[-348.51031494 28.73272896]
[-363.47537231 29.75636673]
[-378.44039917 30.78000259]
[-393.40542603 31.80363846]
[-408.37045288 32.82727432]
[-423.33547974 33.85091019]
[-438.30050659 34.87454605]
[-453.26556396 35.89818192]
[-468.65515137 43.01132965]
[-479.75054932 30.19228172]
[-470.50399780 15.98180771]
[-454.28918457 20.93315125]
[-439.32415771 19.90951538]
[-424.35913086 18.88587952]
[-409.39410400 17.86224365]
[-394.42904663 16.83860588]
[-379.46401978 15.81497097]
[-364.49899292 14.79133415]
[-349.53396606 13.76769829]
[-348.07080078 6.41180849]
[-345.14443970 -8.29997063]
[-343.68124390 -15.65585995]
[-357.11541748 -22.32844734]
[-373.43966675 -20.76299477]
[-382.73587036 -34.27271271]
[-375.44088745 -48.95996475]
[-359.05917358 -49.71575928]
[-350.44284058 -35.76260376]
[-337.00866699 -29.09001732]
[-329.52212524 -19.82297707]
[-325.41149902 -9.87934589]
[-324.56512451 -0.23943126]
[-326.61682129 8.20633984]
[-330.98135376 14.71882534]
[-316.19946289 17.26748085]
[-301.41757202 19.81613731]
[-286.63568115 22.36479187]
[-271.85379028 24.91344833]
[-257.07186890 27.46210480]
[-246.54383850 16.95980072]
[-231.67448425 14.64326477]
[-218.13394165 21.60796547]
[-211.21076965 35.36935806]
[-196.42887878 37.91801453]
[-181.60563660 40.21392441]
[-166.74534607 42.25642395]
[-151.88505554 44.29892349]
[-137.02476501 46.34142685]
[-127.18534851 39.27923584]
[-114.77494049 40.87535477]
[-106.52970886 50.81425476]
[-91.70645905 53.11016846]
[-76.88320160 55.40607834]
[-62.05995560 57.70199203]
[-53.56092072 47.38885498]
[-40.97265625 42.58916855]
[-27.55072403 44.65884781]
[-16.82326889 53.16222763]
[-11.66362381 65.95836639]
[3.11826873 68.50702667]
[17.90016174 71.05567932]
[32.68205261 73.60433960]
[47.46394730 76.15299225]
[62.24583817 78.70164490]
[77.04895020 81.12402344]
[91.87220001 83.41992950]
[105.52633667 77.20989227]
[113.53777313 64.52853394]
[121.54920959 51.84717560]
[129.56065369 39.16581345]
[137.57208252 26.48445511]
[133.84884644 11.12499428]
[142.14811707 -2.32482767]
[157.54608154 -5.88546944]
[170.90740967 2.55553412]
[174.30505371 17.99028587]
[165.72325134 31.26161957]
[150.25344849 34.49589157]
[142.24200439 47.17724991]
[134.23057556 59.85861206]
[126.21913147 72.53997040]
[118.20769501 85.22132874]
[122.42755890 91.42155457]
[134.82800293 82.98183441]
[147.22845459 74.54211426]
[159.62890625 66.10238647]
[172.02947998 57.66286087]
[180.46881104 70.06356812]
[168.06861877 78.50283813]
[155.66818237 86.94255829]
[143.26773071 95.38227844]
[130.86727905 103.82199860]
[135.08714294 110.02222443]
[149.82336426 107.22157288]
[164.55958557 104.42091370]
[179.29582214 101.62025452]
[191.35716248 90.50918579]
[206.92749023 95.65669250]
[209.98939514 111.76745605]
[197.39303589 122.26811218]
[182.09646606 116.35648346]
[167.36024475 119.15713501]
[152.62402344 121.95779419]
[137.88780212 124.75845337]
[135.19606018 131.75877380]
[149.47100830 136.36589050]
[163.74597168 140.97300720]
[178.70606995 139.87959290]
[187.64389038 151.92597961]
[182.26028442 165.92658997]
[167.55416870 168.88125610]
[157.18084717 158.04669189]
[143.49670410 151.90306091]
[129.81256104 145.75941467]
[127.12081909 152.75973511]
[136.18437195 164.71182251]
[143.88241577 169.67416382]
[145.29855347 176.94621277]
[154.15672302 189.05128479]
[171.16603088 196.07687378]
[172.40420532 213.57194519]
[181.46775818 225.52401733]
[190.53129578 237.47608948]
[199.59484863 249.42816162]
[208.65838623 261.38024902]
[217.72193909 273.33233643]
[226.78547668 285.28439331]
[235.84902954 297.23648071]
[244.91258240 309.18853760]
[259.30090332 318.15582275]
[254.66716003 334.46426392]
[237.71331787 334.52621460]
[232.96049500 318.25210571]
[223.89695740 306.30001831]
[214.83340454 294.34793091]
[205.76986694 282.39587402]
[196.70631409 270.44378662]
[187.64277649 258.49169922]
[178.57922363 246.53964233]
[169.51567078 234.58755493]
[160.45213318 222.63548279]
[148.50090027 220.67169189]
[140.85403442 210.76757812]
[142.05163574 197.90945435]
[133.19346619 185.80438232]
[124.23229218 173.77536011]
[115.16874695 161.82328796]
[87.33979797 148.76893616]
[74.74029541 127.19163513]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 100]
[2 99]
[4 98]
[5 97]
[6 96]
[7 95]
[8 94]
[9 93]
[13 88]
[14 87]
[15 86]
[16 85]
[18 82]
[19 81]
[20 80]
[21 79]
[24 78]
[25 77]
[29 73]
[30 72]
[31 71]
[32 70]
[33 69]
[34 68]
[35 53]
[36 52]
[37 51]
[38 50]
[39 49]
[40 48]
[41 47]
[42 46]
[56 63]
[57 62]
[101 116]
[102 115]
[103 114]
[104 113]
[105 112]
[127 138]
[128 137]
[129 136]
[130 135]
[149 181]
[150 180]
[152 179]
[153 178]
[155 175]
[156 174]
[157 173]
[158 172]
[159 171]
[160 170]
[161 169]
[162 168]
[163 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
