%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:23:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGCAGAGGAUUCCUGCAGAGGAUCAAGACAGCACGUGGACCUCGCACAGCCUCUCCCACAGGUACCAUGAAGGUCUCCGCGGCAGCCCUCGCUGUCAUCCUCAUUGCUACUGCCCUCUGCGCUCCUGCAUCUGCCUCCCCAUAUUCCUCGGACACCACACCCUGCU\
) } def
/len { sequence length } bind def

/coor [
[57.68215942 70.62738037]
[46.73618317 60.37137985]
[38.29780197 56.76728058]
[35.68431091 49.82154846]
[24.93087006 39.36384964]
[14.17742634 28.90614891]
[3.42398310 18.44845200]
[-7.32946014 7.99075270]
[-18.08290291 -2.46694613]
[-28.83634567 -12.92464447]
[-42.79973602 -6.98330784]
[-57.93323135 -6.84100533]
[-71.93044281 -12.48828411]
[-82.67006683 -23.03570747]
[-88.53736115 -36.85379791]
[-88.66692352 -51.82472610]
[-83.07013702 -65.66687775]
[-93.82357788 -76.12458038]
[-104.57701874 -86.58227539]
[-115.52299500 -96.83827972]
[-126.65772247 -106.88904572]
[-137.79244995 -116.93981171]
[-148.92716980 -126.99057770]
[-160.06190491 -137.04135132]
[-171.19662476 -147.09211731]
[-176.38151550 -148.19473267]
[-180.22007751 -150.92219543]
[-182.31614685 -154.47863770]
[-182.65180969 -158.02694702]
[-193.20901489 -168.68272400]
[-203.76620483 -179.33850098]
[-214.32339478 -189.99427795]
[-224.88059998 -200.65005493]
[-235.43778992 -211.30583191]
[-257.78515625 -214.76156616]
[-264.32751465 -235.66943359]
[-276.67227173 -244.19039917]
[-292.42489624 -245.66212463]
[-298.50393677 -259.25970459]
[-310.84869385 -267.78067017]
[-323.19345093 -276.30166626]
[-335.53820801 -284.82263184]
[-347.88296509 -293.34359741]
[-360.22772217 -301.86456299]
[-372.65115356 -310.27044678]
[-385.15216064 -318.56045532]
[-398.89190674 -311.83981323]
[-414.05072021 -312.89184570]
[-426.56448364 -321.33413696]
[-433.12844849 -334.81634521]
[-432.06982422 -349.67382812]
[-444.57083130 -357.96386719]
[-457.07183838 -366.25390625]
[-469.57287598 -374.54394531]
[-484.51812744 -369.94256592]
[-498.90441895 -376.07192993]
[-505.93893433 -390.03793335]
[-502.30020142 -405.24627686]
[-489.70629883 -414.51602173]
[-474.10372925 -413.47030640]
[-462.85952759 -402.60284424]
[-461.28283691 -387.04495239]
[-448.78182983 -378.75491333]
[-436.28079224 -370.46487427]
[-423.77978516 -362.17486572]
[-410.50515747 -368.93133545]
[-395.53134155 -368.13079834]
[-382.88513184 -359.88827515]
[-376.01748657 -346.33346558]
[-376.86215210 -331.06149292]
[-364.36111450 -322.77145386]
[-357.01904297 -321.69100952]
[-351.70675659 -314.20932007]
[-339.36199951 -305.68835449]
[-327.01724243 -297.16738892]
[-314.67248535 -288.64642334]
[-302.32772827 -280.12542725]
[-289.98297119 -271.60446167]
[-275.11334229 -270.74221802]
[-268.15130615 -256.53515625]
[-255.80654907 -248.01419067]
[-253.26026917 -249.46557617]
[-250.53222656 -250.53694153]
[-249.41789246 -265.49548340]
[-257.02328491 -280.02444458]
[-248.01618958 -293.72860718]
[-231.66235352 -292.51034546]
[-224.78520203 -277.62286377]
[-234.45933533 -264.38116455]
[-235.57366943 -249.42260742]
[-227.27227783 -242.84675598]
[-223.25057983 -232.80337524]
[-224.78201294 -221.86303711]
[-214.22480774 -211.20726013]
[-203.66761780 -200.55146790]
[-193.11042786 -189.89569092]
[-182.55322266 -179.23991394]
[-171.99603271 -168.58413696]
[-161.14585876 -158.22683716]
[-150.01113892 -148.17607117]
[-138.87640381 -138.12530518]
[-127.74168396 -128.07453918]
[-116.60695648 -118.02377319]
[-105.47222900 -107.97300720]
[-100.70362091 -107.32313538]
[-96.30496216 -103.64473724]
[-94.11932373 -97.33572388]
[-83.36588287 -86.87802124]
[-72.61243439 -76.42032623]
[-58.93170166 -82.40085602]
[-43.96298599 -82.68874359]
[-29.98668289 -77.20897675]
[-19.14393425 -66.76760101]
[-13.10860443 -52.93327713]
[-12.82892418 -37.80169296]
[-18.37864685 -23.67808723]
[-7.62520456 -13.22038937]
[3.12823868 -2.76269054]
[13.88168144 7.69500780]
[24.63512421 18.15270615]
[35.38856888 28.61040497]
[46.14200974 39.06810379]
[56.99218750 49.42540359]
[67.93816376 59.68140793]
[89.27377319 49.61648941]
[112.85891724 50.11815643]
[133.74725342 61.08119965]
[147.55801392 80.20641327]
[151.39474487 103.48280334]
[166.05329895 106.66509247]
[181.49816895 101.15257263]
[193.81767273 111.97670746]
[190.33856201 128.00254822]
[174.63983154 132.74409485]
[162.87101746 121.32363892]
[148.21246338 118.14134979]
[146.04927063 123.08712006]
[143.38037109 127.77936554]
[154.70001221 137.62141418]
[166.01963806 147.46347046]
[180.25617981 141.84391785]
[195.47230530 143.49562073]
[208.17144775 152.03903198]
[215.43547058 165.51095581]
[215.59512329 180.81564331]
[208.61372375 194.43615723]
[196.09555054 203.24264526]
[180.91719055 205.21141052]
[166.56652832 199.89006042]
[156.34121704 188.50138855]
[152.59097290 173.66244507]
[156.17758179 158.78309631]
[144.85795593 148.94104004]
[133.53833008 139.09898376]
[125.97840881 144.48226929]
[117.57525635 148.42169189]
[108.60162354 150.78939819]
[99.34878540 151.50849915]
[90.11709595 150.55569458]
[81.20618439 147.96188354]
[72.90531158 143.81127930]
[65.48390961 138.23858643]
[59.18287659 131.42471313]
[54.20672607 123.59081268]
[50.71699142 114.99117279]
[48.82693863 105.90493011]
[48.59792709 96.62702179]
[50.03738022 87.45859528]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 124]
[2 123]
[4 122]
[5 121]
[6 120]
[7 119]
[8 118]
[9 117]
[10 116]
[17 109]
[18 108]
[19 107]
[20 104]
[21 103]
[22 102]
[23 101]
[24 100]
[25 99]
[29 98]
[30 97]
[31 96]
[32 95]
[33 94]
[34 93]
[36 81]
[37 80]
[39 78]
[40 77]
[41 76]
[42 75]
[43 74]
[44 73]
[45 71]
[46 70]
[51 65]
[52 64]
[53 63]
[54 62]
[83 90]
[84 89]
[129 136]
[130 135]
[138 154]
[139 153]
[140 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
