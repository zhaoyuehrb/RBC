%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:22:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUCUCCCCAACCCCGGUCCCGCCUCUCCACCCCUCACCAACAUGGCCGCCUCAGCAACAGCCCCCCUCCUGUGCGUCACGGACGCGGCGACUCCUGACGUCAUAGGAAGGCGCCGGUUUCGGCGGGGGCUGCACGUGCGCAGGGGUGUGGAAACUUACCGGCUGAGCCAUGGAUACACCGUUAAGGCGCAGCCGACGGCUGGGAGGCCUAAGGCCCGAAUCCCCCGAGAGCCUCACCUCAGUUUCGCGGACGAG\
ACGGGCCCUUGUGG\
) } def
/len { sequence length } bind def

/coor [
[583.63079834 478.96066284]
[569.59393311 484.24893188]
[555.10583496 480.36355591]
[545.59863281 468.76129150]
[544.63671875 453.79217529]
[552.58081055 441.06854248]
[566.45245361 435.36083984]
[581.04992676 438.80856323]
[572.09252930 426.77673340]
[561.93298340 426.21954346]
[553.56988525 420.04757690]
[549.89025879 410.09280396]
[552.32678223 399.53817749]
[543.65179443 387.30117798]
[534.97680664 375.06414795]
[526.30181885 362.82711792]
[517.62683105 350.59011841]
[508.95184326 338.35308838]
[500.27685547 326.11605835]
[483.49728394 330.56018066]
[466.24865723 328.28152466]
[451.12875366 319.59234619]
[440.42651367 305.77258301]
[435.77557373 288.88162231]
[437.90490723 271.45123291]
[424.66070557 264.40914917]
[411.41650391 257.36709595]
[396.54653931 258.22363281]
[387.99414062 244.91320801]
[374.74993896 237.87112427]
[361.50570679 230.82905579]
[348.26150513 223.78698730]
[335.01730347 216.74490356]
[321.77307129 209.70283508]
[308.52886963 202.66076660]
[299.65704346 209.32504272]
[288.89410400 212.22666931]
[277.77304077 210.91297913]
[267.89251709 205.53446960]
[260.68710327 196.82875061]
[257.21905518 186.01953125]
[258.02172852 174.64466858]
[245.03134155 167.14466858]
[232.04095459 159.64466858]
[219.05056763 152.14466858]
[206.01678467 144.72038269]
[192.94001770 137.37202454]
[178.05415344 137.88232422]
[169.81379700 124.37651062]
[156.73703003 117.02816010]
[143.66026306 109.67981720]
[130.58349609 102.33147430]
[117.50673676 94.98312378]
[122.00102997 124.44063568]
[82.18104553 144.09320068]
[67.50882721 147.21186829]
[55.69057846 158.58117676]
[40.01257324 153.77159119]
[36.60300064 137.73080444]
[48.96933365 126.96019745]
[64.39015198 132.53965759]
[79.06237030 129.42097473]
[80.06294250 121.98802185]
[82.06408691 107.12210846]
[83.06465912 99.68915558]
[69.73940277 92.80165863]
[53.92730713 93.33850861]
[46.17374039 80.62114716]
[32.84848785 73.73365021]
[19.52323341 66.84615326]
[6.19798040 59.95865250]
[-7.12727308 53.07115555]
[-20.45252800 46.18365860]
[-33.77778244 39.29616165]
[-47.14287949 32.48630524]
[-60.54736710 25.75431824]
[-73.95185852 19.02232933]
[-87.35634613 12.29034233]
[-100.76083374 5.55835438]
[-109.79846954 4.51136017]
[-114.28144073 -1.33073902]
[-127.60669708 -8.21823597]
[-140.93194580 -15.10573292]
[-154.24897766 -7.31725264]
[-169.66175842 -7.98772287]
[-182.25215149 -16.90319824]
[-188.00259399 -31.21878433]
[-185.07814026 -46.36642838]
[-174.41197205 -57.51257324]
[-159.40763855 -61.10052490]
[-144.85295105 -55.98537827]
[-135.39227295 -43.79936218]
[-134.04444885 -28.43098640]
[-120.71920013 -21.54348946]
[-107.39394379 -14.65599251]
[-94.02884674 -7.84613514]
[-80.62435913 -1.11414754]
[-67.21987152 5.61784029]
[-53.81538010 12.34982777]
[-40.41089249 19.08181572]
[-33.04950714 19.27471733]
[-26.89028358 25.97090912]
[-13.56503010 32.85840607]
[-0.23977652 39.74590302]
[13.08547688 46.63339996]
[26.41073036 53.52089691]
[39.73598480 60.40839386]
[53.06123734 67.29589081]
[67.92021942 66.26639557]
[76.62689972 79.47640228]
[89.95215607 86.36389923]
[101.04074860 76.26226044]
[95.42164612 62.35449982]
[89.80255127 48.44674301]
[84.18344879 34.53898621]
[78.56434631 20.63122749]
[65.31555939 10.96678162]
[67.32962036 -5.30821705]
[82.53464508 -11.45144558]
[95.28900146 -1.14327729]
[92.47210693 15.01212788]
[98.09120941 28.91988564]
[103.71030426 42.82764435]
[109.32940674 56.73540115]
[114.94850159 70.64315796]
[124.85507965 81.90635681]
[137.93185425 89.25470734]
[151.00862122 96.60305023]
[164.08538818 103.95140076]
[177.16213989 111.29974365]
[192.98335266 111.31504822]
[200.28836060 124.29526520]
[213.36512756 131.64361572]
[222.34426880 133.10995483]
[226.55056763 139.15429688]
[239.54095459 146.65429688]
[252.53134155 154.15429688]
[265.52172852 161.65429688]
[282.70632935 153.14236450]
[301.39291382 156.72163391]
[314.01400757 170.75689697]
[315.57092285 189.41654968]
[328.81515503 196.45861816]
[342.05935669 203.50070190]
[355.30358887 210.54277039]
[368.54779053 217.58483887]
[381.79199219 224.62692261]
[395.03622437 231.66899109]
[410.85348511 231.31614685]
[418.45855713 244.12286377]
[431.70278931 251.16494751]
[444.94699097 258.20703125]
[451.78723145 251.17143250]
[459.96804810 245.78338623]
[469.10147095 242.28965759]
[478.75628662 240.84738159]
[488.47824097 241.51707458]
[497.81164551 244.26004028]
[506.32046509 248.94052124]
[513.60888672 255.33250427]
[526.14123535 247.08987427]
[538.67352295 238.84724426]
[551.20587158 230.60461426]
[563.73815918 222.36196899]
[576.27050781 214.11933899]
[583.54864502 200.07159424]
[598.43383789 199.54226685]
[610.96618652 191.29963684]
[623.49847412 183.05700684]
[635.88500977 174.59690857]
[648.12207031 165.92192078]
[660.35906982 157.24693298]
[672.59606934 148.57194519]
[676.69659424 133.06176758]
[691.43701172 126.72937012]
[705.50976562 134.43241882]
[708.11944580 150.26177979]
[697.26409912 162.07455444]
[681.27105713 160.80895996]
[669.03405762 169.48394775]
[656.79705811 178.15893555]
[644.55999756 186.83392334]
[643.60540771 190.19349670]
[640.99645996 193.26605225]
[636.88165283 195.28808594]
[631.74108887 195.58930969]
[619.20880127 203.83195496]
[606.67645264 212.07458496]
[600.29473877 225.53276062]
[584.51312256 226.65165710]
[571.98077393 234.89428711]
[559.44848633 243.13691711]
[546.91613770 251.37956238]
[534.38385010 259.62219238]
[521.85156250 267.86483765]
[525.61090088 285.21029663]
[522.32580566 302.65179443]
[512.51385498 317.44107056]
[521.18884277 329.67810059]
[529.86383057 341.91513062]
[538.53881836 354.15213013]
[547.21380615 366.38916016]
[555.88879395 378.62619019]
[564.56378174 390.86318970]
[583.25164795 398.48251343]
[584.12438965 417.81933594]
[593.08178711 429.85119629]
[602.58923340 441.45327759]
[612.62622070 452.60043335]
[622.72784424 463.68902588]
[632.89385986 474.71865845]
[643.05981445 485.74829102]
[653.22576904 496.77792358]
[663.39178467 507.80755615]
[673.62176514 518.77789307]
[683.91534424 529.68847656]
[694.20898438 540.59906006]
[704.50262451 551.50970459]
[720.06701660 552.13134766]
[730.35083008 563.34289551]
[729.66223145 578.17736816]
[739.95587158 589.08795166]
[755.52032471 589.70959473]
[765.80407715 600.92114258]
[765.11553955 615.75561523]
[775.40911865 626.66619873]
[785.70275879 637.57684326]
[800.80090332 642.30505371]
[803.90698242 656.87219238]
[814.20062256 667.78277588]
[824.49426270 678.69335938]
[839.59240723 683.42163086]
[842.69848633 697.98876953]
[852.99212646 708.89935303]
[868.79504395 709.10845947]
[879.76153564 720.48876953]
[879.38537598 736.28857422]
[867.88977051 747.13409424]
[852.09478760 746.59094238]
[841.37139893 734.98132324]
[842.08148193 719.19299316]
[831.78790283 708.28234863]
[817.42596436 704.33453369]
[813.58361816 688.98699951]
[803.29003906 678.07641602]
[792.99639893 667.16583252]
[778.63452148 663.21795654]
[774.79217529 647.87042236]
[764.49853516 636.95983887]
[754.20489502 626.04925537]
[739.35552979 625.87408447]
[728.76086426 614.95581055]
[729.04528809 599.38159180]
[718.75164795 588.47094727]
[703.90222168 588.29583740]
[693.30761719 577.37756348]
[693.59204102 561.80334473]
[683.29840088 550.89270020]
[673.00476074 539.98211670]
[662.71112061 529.07147217]
[655.85968018 526.37249756]
[652.36212158 517.97357178]
[642.19616699 506.94390869]
[632.03015137 495.91427612]
[621.86419678 484.88464355]
[611.69824219 473.85501099]
[604.87860107 471.07647705]
[601.47906494 462.63739014]
[591.44207764 451.49023438]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 207]
[9 206]
[13 204]
[14 203]
[15 202]
[16 201]
[17 200]
[18 199]
[19 198]
[25 152]
[26 151]
[27 150]
[29 148]
[30 147]
[31 146]
[32 145]
[33 144]
[34 143]
[35 142]
[42 138]
[43 137]
[44 136]
[45 135]
[46 133]
[47 132]
[49 130]
[50 129]
[51 128]
[52 127]
[53 126]
[55 62]
[56 61]
[65 111]
[66 110]
[68 108]
[69 107]
[70 106]
[71 105]
[72 104]
[73 103]
[74 102]
[75 100]
[76 99]
[77 98]
[78 97]
[79 96]
[81 95]
[82 94]
[83 93]
[112 125]
[113 124]
[114 123]
[115 122]
[116 121]
[160 195]
[161 194]
[162 193]
[163 192]
[164 191]
[165 190]
[167 188]
[168 187]
[169 186]
[170 182]
[171 181]
[172 180]
[173 179]
[208 269]
[209 268]
[210 266]
[211 265]
[212 264]
[213 263]
[214 262]
[215 260]
[216 259]
[217 258]
[218 257]
[221 254]
[222 253]
[225 250]
[226 249]
[227 248]
[229 246]
[230 245]
[231 244]
[233 242]
[234 241]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
