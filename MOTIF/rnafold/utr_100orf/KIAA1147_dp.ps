%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:23:28 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (KIAA1147)
} def

/sequence { (\
AUGGUGGAGCAGGGAGACGCGGCGCCGCUGCUGCGCUGGGCCGAGGGCCCCGCCGUCUCCCUGCCGCAGGCCCCGCAGCCGCAGGCGGGAGGCUGGGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 66 0.012663825 ubox
2 68 0.112728051 ubox
3 65 0.017875877 ubox
3 67 0.096854481 ubox
3 72 0.009157349 ubox
3 100 0.003311631 ubox
4 64 0.013197294 ubox
4 67 0.692947932 ubox
4 71 0.009256837 ubox
5 63 0.007077018 ubox
5 66 0.697712539 ubox
5 68 0.628466553 ubox
5 70 0.007880990 ubox
6 65 0.685852591 ubox
6 67 0.697591326 ubox
7 64 0.467040266 ubox
9 64 0.882654936 ubox
10 63 0.997178179 ubox
11 62 0.999523675 ubox
12 61 0.999983221 ubox
13 60 0.999991506 ubox
14 59 0.999989301 ubox
15 58 0.999844718 ubox
16 57 0.999934552 ubox
17 56 0.996919327 ubox
18 35 0.022634827 ubox
18 55 0.993520967 ubox
19 25 0.003189159 ubox
19 28 0.018924875 ubox
19 31 0.249795025 ubox
19 34 0.766094920 ubox
19 36 0.013289483 ubox
19 53 0.392076181 ubox
19 54 0.421893314 ubox
19 56 0.070289088 ubox
20 24 0.003260784 ubox
20 27 0.019165997 ubox
20 30 0.252860763 ubox
20 33 0.777542626 ubox
20 35 0.013676573 ubox
20 38 0.029676171 ubox
20 43 0.008086825 ubox
20 52 0.554282323 ubox
20 55 0.097442235 ubox
21 26 0.019116999 ubox
21 29 0.252775536 ubox
21 32 0.777552438 ubox
21 34 0.014927929 ubox
21 37 0.107773880 ubox
21 42 0.008214883 ubox
21 49 0.008058118 ubox
21 50 0.025188344 ubox
21 51 0.545319744 ubox
21 54 0.127870794 ubox
22 28 0.252975828 ubox
22 31 0.778221746 ubox
22 34 0.031818816 ubox
22 36 0.233179093 ubox
22 41 0.008216543 ubox
22 48 0.008911450 ubox
22 49 0.033900203 ubox
22 50 0.497182163 ubox
22 53 0.134091168 ubox
23 27 0.251138227 ubox
23 30 0.777841801 ubox
23 33 0.031916279 ubox
23 35 0.233730678 ubox
23 38 0.054080436 ubox
23 40 0.008210604 ubox
23 47 0.009616459 ubox
23 52 0.134101135 ubox
24 29 0.527301476 ubox
24 31 0.034237110 ubox
24 32 0.010268184 ubox
24 34 0.233543822 ubox
24 36 0.102014800 ubox
24 37 0.052847337 ubox
24 48 0.492454577 ubox
24 51 0.117396712 ubox
24 53 0.003609965 ubox
25 30 0.034765029 ubox
25 33 0.229527166 ubox
25 35 0.072939294 ubox
25 39 0.007339658 ubox
25 46 0.027085085 ubox
25 47 0.492363217 ubox
25 52 0.003601023 ubox
26 33 0.041870903 ubox
26 35 0.153472454 ubox
26 38 0.007469092 ubox
26 43 0.004612744 ubox
26 45 0.035393589 ubox
26 46 0.491465311 ubox
27 32 0.039638785 ubox
27 34 0.174912270 ubox
27 36 0.022683556 ubox
27 41 0.039304951 ubox
27 42 0.010035317 ubox
27 48 0.008556610 ubox
28 33 0.174898277 ubox
28 35 0.022729208 ubox
28 39 0.003501481 ubox
28 40 0.039288726 ubox
28 45 0.372619744 ubox
28 46 0.005120944 ubox
28 47 0.008552372 ubox
29 38 0.004514839 ubox
29 39 0.037336453 ubox
29 43 0.147075769 ubox
29 44 0.350789131 ubox
29 45 0.010171812 ubox
29 46 0.008246463 ubox
30 36 0.030077502 ubox
30 41 0.418435772 ubox
30 42 0.136891596 ubox
31 35 0.029946839 ubox
31 39 0.014811947 ubox
31 40 0.431070201 ubox
31 45 0.019731022 ubox
32 38 0.017129536 ubox
32 39 0.425921303 ubox
32 43 0.036323087 ubox
32 44 0.019276119 ubox
32 55 0.009929642 ubox
33 37 0.009229542 ubox
33 41 0.228046980 ubox
33 42 0.039807398 ubox
33 53 0.138414863 ubox
33 54 0.143191839 ubox
33 56 0.005393028 ubox
34 40 0.229100685 ubox
34 43 0.013219269 ubox
34 52 0.139599832 ubox
34 55 0.007018050 ubox
35 41 0.045317884 ubox
35 42 0.012234485 ubox
35 51 0.136967922 ubox
35 53 0.801058763 ubox
35 54 0.052228684 ubox
36 40 0.045246138 ubox
36 45 0.016569111 ubox
36 52 0.803725436 ubox
37 44 0.016539381 ubox
37 52 0.017617365 ubox
38 49 0.003579910 ubox
38 50 0.864216052 ubox
38 51 0.039769974 ubox
39 49 0.869227956 ubox
39 50 0.032644315 ubox
40 48 0.869556216 ubox
40 49 0.023218855 ubox
41 47 0.869844233 ubox
42 46 0.863515934 ubox
46 54 0.007496884 ubox
47 53 0.007594995 ubox
48 52 0.007545873 ubox
64 98 0.003258859 ubox
65 97 0.004664515 ubox
67 95 0.004704936 ubox
68 94 0.004559514 ubox
69 93 0.004078374 ubox
69 100 0.991308619 ubox
70 99 0.999850739 ubox
71 92 0.003675592 ubox
71 97 0.006051641 ubox
71 98 0.998578790 ubox
72 89 0.004845029 ubox
72 96 0.008416960 ubox
72 97 0.997262277 ubox
72 98 0.051212308 ubox
73 88 0.005393085 ubox
73 95 0.010217054 ubox
73 96 0.995802294 ubox
73 97 0.072057427 ubox
73 98 0.010657697 ubox
74 87 0.005479873 ubox
74 95 0.980277389 ubox
74 96 0.088010746 ubox
74 97 0.011863396 ubox
75 82 0.020860840 ubox
75 86 0.005869239 ubox
75 93 0.884786745 ubox
75 94 0.265937439 ubox
76 81 0.020856607 ubox
76 85 0.005869792 ubox
76 92 0.904834727 ubox
76 95 0.193080991 ubox
77 94 0.358548042 ubox
78 86 0.048150259 ubox
78 93 0.415788203 ubox
78 99 0.003527395 ubox
79 85 0.048337079 ubox
79 88 0.480041438 ubox
79 89 0.770042482 ubox
79 92 0.415946543 ubox
79 98 0.003535775 ubox
80 84 0.047992312 ubox
80 87 0.495198170 ubox
80 88 0.760712570 ubox
80 91 0.415758761 ubox
80 97 0.003535440 ubox
81 86 0.496540229 ubox
82 95 0.003559427 ubox
83 94 0.004155017 ubox
84 93 0.003661287 ubox
84 94 0.020948375 ubox
85 93 0.023009785 ubox
86 92 0.023114210 ubox
87 94 0.007041155 ubox
88 93 0.007748918 ubox
5 68 0.9500000 lbox
6 67 0.9500000 lbox
9 64 0.9500000 lbox
10 63 0.9500000 lbox
11 62 0.9500000 lbox
12 61 0.9500000 lbox
13 60 0.9500000 lbox
14 59 0.9500000 lbox
15 58 0.9500000 lbox
16 57 0.9500000 lbox
17 56 0.9500000 lbox
18 55 0.9500000 lbox
19 34 0.9500000 lbox
20 33 0.9500000 lbox
21 32 0.9500000 lbox
22 31 0.9500000 lbox
23 30 0.9500000 lbox
35 53 0.9500000 lbox
36 52 0.9500000 lbox
38 50 0.9500000 lbox
39 49 0.9500000 lbox
40 48 0.9500000 lbox
41 47 0.9500000 lbox
42 46 0.9500000 lbox
69 100 0.9500000 lbox
70 99 0.9500000 lbox
71 98 0.9500000 lbox
72 97 0.9500000 lbox
73 96 0.9500000 lbox
74 95 0.9500000 lbox
75 93 0.9500000 lbox
76 92 0.9500000 lbox
79 89 0.9500000 lbox
80 88 0.9500000 lbox
showpage
end
%%EOF
