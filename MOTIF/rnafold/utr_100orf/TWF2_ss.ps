%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:40:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGGGGGCGGGUCCUGCGGCACCGCCCGGGAAGCUGCGCGAGGGUCGACAGCCUCCGCCACAUCCUCCACCUCUCUUGGUCCAGCGAGCGUUGCCGGGCCAGGGUCAAGCGGAGGGCUCCGACGGCGCGGACGGAGCGAAGCGCCGAGCCAUGGCGCACCAAACGGGCAUCCACGCCACGGAAGAGCUGAAGGAAUUCUUUGCCAAGGCACGGGCUGGCUCUGUGCGGCUCAUCAAGGUUGUGAUUGAGG\
) } def
/len { sequence length } bind def

/coor [
[79.99953461 107.00354767]
[65.00419617 106.62959290]
[50.00886154 106.25563049]
[35.01352310 105.88166809]
[24.69978523 118.06038666]
[9.43320274 121.15102386]
[3.26389599 134.82360840]
[-2.90541053 148.49620056]
[-9.07471657 162.16879272]
[-15.24402332 175.84138489]
[-21.41333008 189.51396179]
[-27.49729156 203.22474670]
[-33.49567032 216.97317505]
[-39.49405289 230.72160339]
[-37.12124634 246.94818115]
[-50.15349197 256.90270996]
[-65.18433380 250.34483337]
[-66.75132751 234.02072144]
[-53.24248505 224.72323608]
[-47.24410629 210.97479248]
[-41.24572372 197.22636414]
[-41.45098495 189.85848999]
[-35.08591843 183.34466553]
[-28.91661072 169.67207336]
[-22.74730492 155.99948120]
[-16.57799911 142.32688904]
[-10.40869141 128.65431213]
[-4.23938513 114.98171997]
[-9.70713806 107.31668854]
[-11.72180080 98.11939240]
[-25.99916267 93.51972198]
[-40.27652359 88.92005157]
[-49.37719727 89.26892853]
[-54.70256424 84.17302704]
[-68.92147064 79.39572906]
[-70.42158508 97.14006805]
[-85.94631958 113.13058472]
[-99.90942383 118.61070251]
[-113.87252808 124.09082031]
[-120.69553375 130.12329102]
[-128.04402161 129.55102539]
[-142.07435608 134.85664368]
[-156.10469055 140.16226196]
[-170.13504028 145.46788025]
[-174.09577942 160.47096252]
[-186.13993835 170.25451660]
[-201.63627625 171.05657959]
[-214.62612915 162.56875610]
[-220.11463928 148.05476379]
[-215.99136353 133.09555054]
[-203.84179688 123.44322205]
[-188.33767700 122.80930328]
[-175.44065857 131.43754578]
[-161.41032410 126.13192749]
[-147.37997437 120.82630920]
[-133.34963989 115.52068329]
[-119.35264587 110.12771606]
[-105.38954163 104.64759827]
[-91.42643738 99.16748047]
[-90.26241302 91.75836182]
[-105.07482910 94.12316132]
[-111.90100861 80.76639557]
[-101.30724335 70.14697266]
[-87.93436432 76.94012451]
[-86.77033997 69.53100586]
[-98.38031769 60.03318405]
[-109.99028778 50.53536606]
[-121.60025787 41.03754807]
[-133.21023560 31.53973007]
[-146.08105469 32.04792786]
[-155.55206299 23.92016602]
[-156.91188049 11.91698742]
[-168.40254211 2.27517319]
[-188.40605164 -0.35436675]
[-194.16625977 -18.82851219]
[-205.89373779 -28.18085861]
[-217.62120056 -37.53320694]
[-229.34867859 -46.88555145]
[-241.07614136 -56.23789978]
[-252.80361938 -65.59024811]
[-264.53109741 -74.94259644]
[-276.25857544 -84.29494476]
[-287.98602295 -93.64728546]
[-303.59957886 -96.20229340]
[-308.72604370 -110.18688202]
[-320.45349121 -119.53922272]
[-332.18096924 -128.89157104]
[-343.90844727 -138.24392700]
[-360.06179810 -143.39224243]
[-359.58639526 -160.33952332]
[-343.16979980 -164.57414246]
[-334.55609131 -149.97138977]
[-322.82861328 -140.61904907]
[-311.10116577 -131.26669312]
[-299.37368774 -121.91435242]
[-284.59896851 -120.02828979]
[-278.63369751 -105.37476349]
[-266.90621948 -96.02241516]
[-255.17874146 -86.67006683]
[-243.45127869 -77.31771851]
[-231.72380066 -67.96537018]
[-219.99632263 -58.61302567]
[-208.26885986 -49.26067734]
[-196.54138184 -39.90833282]
[-184.81391907 -30.55598450]
[-174.83653259 -32.60663605]
[-165.16883850 -28.75912857]
[-159.07723999 -20.05451202]
[-158.76072693 -9.21549320]
[-147.27006531 0.42632061]
[-129.83894348 2.55171537]
[-123.71240997 19.92975807]
[-112.10243988 29.42757607]
[-100.49246979 38.92539597]
[-88.88249969 48.42321396]
[-77.27252197 57.92103195]
[-64.14417267 65.17681885]
[-49.92526245 69.95411682]
[-35.67685318 74.64269257]
[-21.39949036 79.24236298]
[-7.12212992 83.84203339]
[7.14879560 74.38963318]
[24.33847237 77.08254242]
[35.38748550 90.88632965]
[50.38282394 91.26029205]
[65.37815857 91.63425446]
[80.37349701 92.00821686]
[97.49612427 78.95721436]
[117.20316315 87.62585449]
[131.69204712 83.74356842]
[143.01942444 72.69816589]
[157.31559753 76.87776184]
[171.80447388 72.99547577]
[186.29336548 69.11318970]
[200.78225708 65.23090363]
[215.27114868 61.34861755]
[229.76002502 57.46633530]
[244.24891663 53.58404922]
[251.34956360 42.83707428]
[263.47741699 39.89174271]
[274.01705933 45.79443359]
[288.55322266 42.09307480]
[303.08935547 38.39171219]
[310.60952759 33.25445938]
[317.82980347 34.73601913]
[332.41098022 31.21615791]
[346.99215698 27.69629669]
[358.59140015 16.93672371]
[372.77890015 21.47143555]
[387.36007690 17.95157433]
[401.94125366 14.43171406]
[413.54049683 3.67214084]
[427.72799683 8.20685291]
[442.30917358 4.68699169]
[456.89035034 1.16713059]
[471.47152710 -2.35273027]
[483.04574585 -46.54938126]
[496.79418945 -52.54776382]
[496.78091431 -66.66695404]
[502.12924194 -79.68720245]
[512.00256348 -89.65876007]
[524.88952637 -95.10198212]
[538.83502197 -95.22689056]
[551.73712158 -90.04762268]
[561.66345215 -80.37533569]
[575.48559570 -86.20185852]
[589.27117920 -92.11442566]
[603.01959229 -98.11280823]
[616.76806641 -104.11119080]
[622.30798340 -118.91270447]
[636.72595215 -125.38550568]
[651.46807861 -119.68940735]
[657.78808594 -105.20378876]
[651.93646240 -90.52272034]
[637.38482666 -84.35621643]
[622.76641846 -90.36275482]
[609.01800537 -84.36437225]
[595.26959229 -78.36598969]
[590.40856934 -72.82534790]
[581.31213379 -72.37971497]
[567.48999023 -66.55319214]
[566.99530029 -50.56901169]
[559.54675293 -36.35195923]
[546.59320068 -26.77683449]
[530.70214844 -23.80480194]
[515.05120850 -28.08187103]
[502.79257202 -38.79932785]
[489.04412842 -32.80094910]
[489.93029785 -25.35348511]
[492.58880615 -3.01109791]
[507.36093140 -0.40637517]
[522.13305664 2.19834757]
[536.90515137 4.80307007]
[550.81872559 -3.18397927]
[565.68463135 2.84797883]
[570.09899902 18.27174187]
[560.67559814 31.25551987]
[544.64318848 31.83926964]
[534.30041504 19.57518578]
[519.52832031 16.97046471]
[504.75622559 14.36574078]
[489.98410034 11.76101875]
[474.99139404 12.22844124]
[460.41021729 15.74830246]
[445.82904053 19.26816368]
[431.24786377 22.78802490]
[420.69158936 33.29583359]
[405.46112061 29.01288605]
[390.87994385 32.53274536]
[376.29876709 36.05260849]
[365.74249268 46.56041718]
[350.51202393 42.27746964]
[335.93084717 45.79732895]
[321.34967041 49.31719208]
[306.79074097 52.92787170]
[292.25457764 56.62923431]
[277.71841431 60.33059311]
[265.81741333 73.24288940]
[248.13121033 68.07293701]
[233.64231873 71.95522308]
[219.15342712 75.83750916]
[204.66453552 79.71979523]
[190.17565918 83.60208130]
[175.68676758 87.48435974]
[161.19787598 91.36664581]
[150.90684509 102.13436890]
[135.57434082 98.23246002]
[121.08544922 102.11474609]
[118.54705811 110.25059509]
[113.00873566 116.72844696]
[117.43006897 131.06204224]
[121.85139465 145.39562988]
[126.27272034 159.72921753]
[130.78330994 174.03497314]
[135.38298035 188.31233215]
[139.98265076 202.58970642]
[154.15901184 209.57585144]
[159.16409302 224.56666565]
[152.02845764 238.66838074]
[136.98554993 243.51467896]
[122.96006775 236.23034668]
[118.27307892 221.13705444]
[125.70529175 207.18937683]
[121.10562134 192.91200256]
[116.50595093 178.63464355]
[111.47682953 173.24617004]
[111.93913269 164.15055847]
[107.51779938 149.81695557]
[103.09647369 135.48336792]
[98.67514801 121.14977264]
[90.72476959 119.05356598]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 127]
[2 126]
[3 125]
[4 124]
[6 28]
[7 27]
[8 26]
[9 25]
[10 24]
[11 23]
[12 21]
[13 20]
[14 19]
[30 121]
[31 120]
[32 119]
[34 118]
[35 117]
[37 59]
[38 58]
[39 57]
[41 56]
[42 55]
[43 54]
[44 53]
[65 116]
[66 115]
[67 114]
[68 113]
[69 112]
[72 110]
[73 109]
[75 105]
[76 104]
[77 103]
[78 102]
[79 101]
[80 100]
[81 99]
[82 98]
[83 97]
[85 95]
[86 94]
[87 93]
[88 92]
[129 228]
[130 227]
[132 225]
[133 224]
[134 223]
[135 222]
[136 221]
[137 220]
[138 219]
[141 217]
[142 216]
[143 215]
[145 214]
[146 213]
[147 212]
[149 210]
[150 209]
[151 208]
[153 206]
[154 205]
[155 204]
[156 203]
[157 188]
[158 187]
[165 181]
[166 180]
[167 178]
[168 177]
[169 176]
[190 202]
[191 201]
[192 200]
[193 199]
[230 250]
[231 249]
[232 248]
[233 247]
[234 245]
[235 244]
[236 243]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
