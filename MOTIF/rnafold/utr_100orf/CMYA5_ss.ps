%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:13:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCGGAGGGAGAACACCAGGCGCGGCGCGGGCGGCUCCGGCUCCGGCCCCGGCCCAGGCCCGGGAGAGGCGAUGGCGAGCCGCGAUAGCAACCACGCUGGCGAGAGCUUUCUCGGCUCCGACGGGGACGAGGAGGCGACCCGGGAGCUGGAGACCGAGGAGGAGUCGGAGG\
) } def
/len { sequence length } bind def

/coor [
[-134.58506775 488.06930542]
[-136.80816650 496.14276123]
[-143.14057922 509.74057007]
[-149.47299194 523.33837891]
[-145.14883423 533.36791992]
[-147.03955078 543.90148926]
[-154.27819824 551.48254395]
[-164.28424072 553.75976562]
[-171.10623169 567.11865234]
[-164.84300232 581.44720459]
[-169.30485535 596.43469238]
[-182.38502502 605.00457764]
[-197.90747070 603.11041260]
[-208.54295349 591.64654541]
[-209.26972961 576.02587891]
[-199.74464417 563.62396240]
[-184.46513367 560.29669189]
[-177.64314270 546.93780518]
[-180.08267212 527.77703857]
[-163.07081604 517.00598145]
[-156.73838806 503.40814209]
[-150.40597534 489.81033325]
[-161.34423828 479.54611206]
[-174.51239014 486.72940063]
[-182.92195129 500.13052368]
[-197.80021667 499.43304443]
[-210.96836853 506.61636353]
[-219.04281616 520.88995361]
[-235.44146729 520.76348877]
[-243.29481506 506.36703491]
[-234.52397156 492.51046753]
[-218.15165710 493.44821167]
[-204.98352051 486.26489258]
[-197.51582336 473.37759399]
[-181.69569397 473.56124878]
[-168.52754211 466.37796021]
[-157.31378174 456.41543579]
[-148.62974548 444.18484497]
[-139.94570923 431.95425415]
[-131.26167297 419.72366333]
[-122.57763672 407.49304199]
[-113.89360046 395.26245117]
[-105.20956421 383.03186035]
[-96.52552795 370.80126953]
[-87.84149170 358.57064819]
[-89.55098724 346.57290649]
[-82.38567352 336.30578613]
[-69.75000000 333.60290527]
[-60.84530258 321.53201294]
[-59.51621628 306.69680786]
[-45.09738541 300.18469238]
[-36.19269180 288.11380005]
[-27.28800011 276.04290771]
[-26.57738304 256.74053955]
[-8.03967953 248.88099670]
[0.42083538 236.49473572]
[8.88135052 224.10845947]
[17.34186554 211.72218323]
[17.70641899 194.19221497]
[34.33559418 186.32176208]
[42.56979752 173.78390503]
[50.80400085 161.24604797]
[59.03820419 148.70819092]
[67.27240753 136.17033386]
[75.50661469 123.63247681]
[67.89420319 111.29768372]
[66.10463715 96.91390228]
[70.46247101 83.08982086]
[80.17735291 72.33264923]
[74.34285736 58.51386642]
[68.50836945 44.69508362]
[53.36574173 41.30681229]
[43.13195419 29.64280128]
[41.74210739 14.18809414]
[49.73062897 0.88534421]
[64.02577209 -5.15026999]
[79.13075256 -1.59793139]
[89.23740387 10.17641258]
[90.45951080 25.64528656]
[82.32715607 38.86059570]
[88.16164398 52.67937469]
[93.99613190 66.49816132]
[97.52989960 66.05418396]
[101.09071350 65.98191071]
[104.86325836 51.46406555]
[100.84545135 36.16152573]
[111.53499603 25.78930664]
[115.30754089 11.27145863]
[119.08008575 -3.24638844]
[122.85263062 -17.76423645]
[114.63205719 -31.26230049]
[118.44493866 -46.59975433]
[132.02915955 -54.67715454]
[147.32545471 -50.70232773]
[155.25877380 -37.03346634]
[151.12245178 -21.78006172]
[137.37048340 -13.99168968]
[133.59793091 0.52615762]
[129.82537842 15.04400539]
[126.05284119 29.56185341]
[130.34048462 43.82598114]
[119.38110352 55.23661041]
[115.60855865 69.75446320]
[119.88916779 72.38042450]
[123.73677826 75.60768127]
[127.06762695 79.36596680]
[129.80920410 83.57346344]
[144.21891785 79.40691376]
[158.62863159 75.24036407]
[173.03834534 71.07380676]
[187.44805908 66.90725708]
[201.85777283 62.74070358]
[216.26748657 58.57415009]
[230.67720032 54.40759659]
[245.08691406 50.24104309]
[256.19482422 38.97494888]
[270.57043457 42.87250900]
[284.98016357 38.70595932]
[299.38986206 34.53940582]
[313.79959106 30.37285233]
[327.33590698 20.16481209]
[340.89224243 30.34627151]
[334.86145020 46.19132614]
[317.96612549 44.78256607]
[303.55642700 48.94911957]
[289.14669800 53.11566925]
[274.73699951 57.28222275]
[264.65975952 68.25029755]
[249.25346375 64.65075684]
[234.84375000 68.81730652]
[220.43403625 72.98386383]
[206.02432251 77.15041351]
[191.61460876 81.31697083]
[177.20489502 85.48352051]
[162.79518127 89.65007782]
[148.38546753 93.81662750]
[133.97575378 97.98317719]
[128.01922607 119.32207489]
[110.19079590 132.47410583]
[88.04447174 131.86668396]
[79.81026459 144.40454102]
[71.57606506 156.94239807]
[63.34185791 169.48025513]
[55.10765457 182.01811218]
[46.87345123 194.55596924]
[48.71976852 207.34490967]
[41.57427597 217.62583923]
[29.72813606 220.18270874]
[21.26762009 232.56896973]
[12.80710506 244.95524597]
[4.34659052 257.34152222]
[6.98124170 267.94094849]
[3.40181136 278.02655029]
[-4.97388506 284.32879639]
[-15.21710777 284.94760132]
[-24.12180138 297.01849365]
[-33.02649307 309.08938599]
[-34.99250793 324.78796387]
[-48.77441025 330.43670654]
[-57.67910385 342.50759888]
[-59.29496765 360.83413696]
[-75.61089325 367.25469971]
[-84.29492950 379.48529053]
[-92.97896576 391.71588135]
[-101.66300201 403.94650269]
[-110.34703827 416.17709351]
[-119.03107452 428.40768433]
[-127.71511078 440.63827515]
[-136.39915466 452.86889648]
[-145.08319092 465.09948730]
[-140.52777100 468.52395630]
[-136.87496948 473.71234131]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 22]
[3 21]
[4 20]
[8 18]
[9 17]
[23 36]
[24 35]
[26 33]
[27 32]
[37 170]
[38 169]
[39 168]
[40 167]
[41 166]
[42 165]
[43 164]
[44 163]
[45 162]
[48 160]
[49 159]
[51 157]
[52 156]
[53 155]
[55 151]
[56 150]
[57 149]
[58 148]
[60 145]
[61 144]
[62 143]
[63 142]
[64 141]
[65 140]
[69 82]
[70 81]
[71 80]
[84 103]
[85 102]
[87 100]
[88 99]
[89 98]
[90 97]
[107 137]
[108 136]
[109 135]
[110 134]
[111 133]
[112 132]
[113 131]
[114 130]
[115 129]
[117 127]
[118 126]
[119 125]
[120 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
