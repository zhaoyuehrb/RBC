%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:51:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCUUUGCAUCUCCGCCUCCCGUGCUCCGCCUCCGGUCUUACGUUUCGCCCCCGGCAGCGCCGACAGCGGACCCAAGAUGGCGACCGAGUUGGAGUACGAGUCUGUGCUGUGUGUGAAGCCAGACGUCAGCGUCUACCGGAUUCCGCCCCGGGCCUCCAACCGCGGUUACAGGGCCU\
) } def
/len { sequence length } bind def

/coor [
[105.15667725 351.63253784]
[101.79779053 335.94503784]
[112.07955933 323.62982178]
[112.07955933 308.62982178]
[112.07955933 293.62982178]
[112.07955933 278.62982178]
[112.07955933 263.62982178]
[112.07955933 248.62982178]
[101.28188324 243.01029968]
[93.86332703 233.26867676]
[91.28665924 221.22416687]
[94.10314941 209.15922546]
[101.83602905 199.38708496]
[113.05991364 193.80825806]
[113.58632660 178.81750488]
[114.11274719 163.82673645]
[114.63916016 148.83598328]
[92.91955566 146.91265869]
[75.54256439 136.46209717]
[65.35542297 120.71649170]
[63.34919357 103.59929657]
[68.65248871 88.80020142]
[56.02722168 80.70065308]
[43.40195084 72.60111237]
[30.77668381 64.50157166]
[18.15141487 56.40202713]
[5.52614641 48.30248260]
[-7.09912205 40.20294189]
[-19.72439003 32.10339737]
[-32.34965897 24.00385475]
[-48.14295959 23.06454849]
[-54.67739868 9.67984390]
[-67.30266571 1.58030057]
[-79.92794037 -6.51924229]
[-88.86914062 -8.52860355]
[-92.70196533 -14.87335396]
[-105.18314362 -23.19322205]
[-117.66432190 -31.51309013]
[-130.14550781 -39.83295822]
[-142.97848511 -35.68585205]
[-155.66886902 -39.63834381]
[-163.64024353 -50.02996063]
[-164.15403748 -62.92184448]
[-176.48727417 -71.45947266]
[-188.82052612 -79.99710083]
[-201.15376282 -88.53472900]
[-213.91923523 -96.41145325]
[-227.08154297 -103.60543823]
[-240.24386597 -110.79943085]
[-253.40618896 -117.99341583]
[-267.38439941 -111.51921082]
[-282.32000732 -114.48260498]
[-292.52603149 -125.54158020]
[-294.24252319 -140.31289673]
[-307.40484619 -147.50688171]
[-320.56713867 -154.70086670]
[-333.72946167 -161.89485168]
[-350.52792358 -164.18568420]
[-352.97689819 -180.96183777]
[-337.53430176 -187.95918274]
[-326.53549194 -175.05715942]
[-313.37316895 -167.86317444]
[-300.21084595 -160.66918945]
[-287.04852295 -153.47520447]
[-273.68890381 -160.00651550]
[-258.86978149 -157.38777161]
[-248.31077576 -146.41685486]
[-246.21220398 -131.15573120]
[-233.04988098 -123.96174622]
[-219.88755798 -116.76776123]
[-206.72525024 -109.57376862]
[-209.70614624 -124.27459717]
[-201.55491638 -136.86654663]
[-186.92214966 -140.16540527]
[-174.15647888 -132.28901672]
[-170.54122925 -117.73120880]
[-178.13905334 -104.79779816]
[-192.61613464 -100.86797333]
[-180.28289795 -92.33034515]
[-167.94964600 -83.79271698]
[-155.61640930 -75.25508881]
[-139.22837830 -78.97406769]
[-124.93204498 -69.51539612]
[-121.82563782 -52.31413651]
[-109.34445953 -43.99426651]
[-96.86328125 -35.67440033]
[-84.38210297 -27.35453224]
[-71.82839203 -19.14451027]
[-59.20312500 -11.04496765]
[-46.57785797 -2.94542503]
[-31.68760300 -2.58545232]
[-24.25011635 11.37858677]
[-11.62484837 19.47812843]
[1.00042057 27.57767296]
[13.62568951 35.67721558]
[26.25095749 43.77675629]
[38.87622452 51.87630081]
[51.50149536 59.97584534]
[64.12676239 68.07538605]
[76.75202942 76.17492676]
[107.51261902 58.53960419]
[146.14537048 78.32369232]
[157.51290894 68.53701019]
[168.88044739 58.75032043]
[180.24797058 48.96363449]
[191.61550903 39.17694855]
[196.09442139 31.18183327]
[203.26948547 29.32038689]
[214.80702209 19.73470688]
[226.34455872 10.14902592]
[225.20327759 -5.32602119]
[233.40455627 -18.49866486]
[247.79486084 -24.30375099]
[262.84078979 -20.50910950]
[272.75689697 -8.57385540]
[273.73025513 6.91266203]
[265.38653564 19.99556160]
[250.93412781 25.64419937]
[235.93023682 21.68656158]
[224.39270020 31.27224159]
[212.85516357 40.85792160]
[201.40219116 50.54447937]
[190.03465271 60.33116531]
[178.66712952 70.11785126]
[167.29959106 79.90454102]
[155.93206787 89.69122314]
[157.11181641 97.09785461]
[171.77975464 93.95911407]
[186.44769287 90.82037354]
[201.11563110 87.68163300]
[215.28005981 82.74517059]
[225.40162659 93.81557465]
[219.21908569 107.48217010]
[204.22300720 107.19000244]
[189.30578613 108.76370239]
[174.38856506 110.33740997]
[159.47134399 111.91111755]
[160.65109253 119.31774902]
[174.49665833 125.08838654]
[188.34222412 130.85902405]
[202.18780518 136.62966919]
[215.36541748 128.43638611]
[230.83978271 129.58708191]
[242.66064453 139.63928223]
[246.28266907 154.72770691]
[240.31311035 169.05055237]
[227.04737854 177.10038757]
[211.58641052 175.78190613]
[199.87528992 165.60206604]
[196.41716003 150.47523499]
[182.57159424 144.70458984]
[168.72602844 138.93394470]
[154.88046265 133.16331482]
[148.56782532 137.21308899]
[157.95185852 148.91522217]
[167.33589172 160.61734009]
[179.40501404 169.52444458]
[178.91488647 184.51643372]
[166.28977966 192.61622620]
[152.45799255 186.81263733]
[149.39251709 172.12864685]
[142.66754150 158.72062683]
[135.94255066 145.31262207]
[129.62991333 149.36239624]
[129.10350037 164.35316467]
[128.57708740 179.34391785]
[128.05067444 194.33467102]
[142.65179443 205.04415894]
[147.87725830 222.21748352]
[141.82250977 238.94952393]
[127.07955933 248.62982178]
[127.07955933 263.62982178]
[127.07955933 278.62982178]
[127.07955933 293.62982178]
[127.07955933 308.62982178]
[127.07955933 323.62982178]
[137.36132812 335.94503784]
[134.00244141 351.63253784]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 176]
[4 175]
[5 174]
[6 173]
[7 172]
[8 171]
[14 167]
[15 166]
[16 165]
[17 164]
[22 100]
[23 99]
[24 98]
[25 97]
[26 96]
[27 95]
[28 94]
[29 93]
[30 92]
[32 90]
[33 89]
[34 88]
[36 87]
[37 86]
[38 85]
[39 84]
[43 81]
[44 80]
[45 79]
[46 78]
[47 71]
[48 70]
[49 69]
[50 68]
[54 64]
[55 63]
[56 62]
[57 61]
[102 126]
[103 125]
[104 124]
[105 123]
[106 122]
[108 121]
[109 120]
[110 119]
[138 153]
[139 152]
[140 151]
[141 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
