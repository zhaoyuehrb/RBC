%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:37:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGAUGCUGCCGCAUUGGCCGCUGCGGCACGGACGGCGCAGCCUCGGGCGCGGCCCGGCACAGGCGCCGGCGGUCCCCGCCAGCUAGCAGCCCGGCGAGGCGCUGGCCCACCCAUGGUCCUCGGGCGGCGGCCCCUGCGCCCAGCCCUGCGCGUAGCCUCCGUCUCUCGCCCGGGGCCGCCGAGCCCCCGACACGGGCGAGAUGCUGAACGGCGCAGGCCUGGACAAAGCUCUUAAGAUGUCCCUGCCGCGGAG\
GUCGAGGAUCCGCUCGUCCGUGGGACCUGUUCGUUCUUCUUUGGGCU\
) } def
/len { sequence length } bind def

/coor [
[213.63948059 491.63409424]
[208.46049500 477.55651855]
[203.28150940 463.47894287]
[198.10250854 449.40136719]
[192.92352295 435.32379150]
[187.74453735 421.24621582]
[176.08876038 411.97305298]
[178.58552551 396.35009766]
[173.40653992 382.27252197]
[167.53276062 396.07464600]
[154.20130920 402.95013428]
[139.55029297 399.73330688]
[130.32542419 387.90530396]
[130.77404785 372.91201782]
[140.68960571 361.65673828]
[155.50674438 359.32165527]
[168.40321350 366.98184204]
[164.25869751 352.56579590]
[160.11416626 338.14971924]
[155.96963501 323.73367310]
[151.82511902 309.31759644]
[140.87245178 299.22360229]
[144.49554443 283.82284546]
[140.35101318 269.40676880]
[136.20648193 254.99070740]
[132.06196594 240.57464600]
[127.91743469 226.15858459]
[123.77291107 211.74252319]
[119.62837982 197.32646179]
[115.48385620 182.91038513]
[104.53119659 172.81640625]
[108.15427399 157.41563416]
[104.00975037 142.99957275]
[99.86522675 128.58351135]
[95.72069550 114.16744232]
[85.08663940 103.58837128]
[70.64928436 99.51863098]
[56.21192932 95.44889832]
[41.77457047 91.37916565]
[27.33721542 87.30942535]
[12.89985943 83.23969269]
[-1.53749692 79.16995239]
[-5.60136986 80.34926605]
[-9.45031738 80.21640778]
[-12.70535946 78.99398804]
[-15.09596252 77.00312042]
[-16.48245430 74.62058258]
[-30.73865891 69.95575714]
[-44.99486542 65.29093170]
[-59.25106812 60.62610245]
[-73.53126526 56.03524399]
[-87.83506775 51.51847458]
[-103.32457733 54.74118805]
[-113.13129425 43.53059006]
[-127.43509674 39.01382446]
[-141.73890686 34.49705505]
[-156.04270935 29.98028946]
[-170.34651184 25.46352386]
[-184.65031433 20.94675636]
[-193.99684143 31.55177116]
[-207.82098389 36.74657822]
[-223.09292603 34.76290131]
[-236.16477966 25.47994614]
[-243.64093018 10.58568764]
[-258.23461914 7.11804247]
[-267.25646973 8.17807961]
[-272.96124268 3.53805137]
[-287.51818848 -0.08071584]
[-302.07510376 -3.69948316]
[-316.63204956 -7.31825018]
[-331.18899536 -10.93701744]
[-345.74594116 -14.55578518]
[-360.30288696 -18.17455292]
[-366.67440796 -16.73549271]
[-372.03051758 -18.44127655]
[-375.12258911 -22.02221870]
[-389.60134888 -25.94204712]
[-404.94390869 -22.07989120]
[-415.20700073 -32.87424850]
[-429.68579102 -36.79407883]
[-444.16455078 -40.71390915]
[-458.64334106 -44.63373566]
[-476.35574341 -39.51617050]
[-488.21057129 -52.48400497]
[-502.72921753 -56.25350571]
[-517.24786377 -60.02300644]
[-534.09814453 -58.15107346]
[-540.56152344 -73.82463837]
[-527.28973389 -84.37432861]
[-513.47833252 -74.54164124]
[-498.95971680 -70.77214050]
[-484.44107056 -67.00263977]
[-473.88842773 -72.85237122]
[-461.78546143 -69.86698914]
[-454.72351074 -59.11251068]
[-440.24475098 -55.19268417]
[-425.76596069 -51.27285385]
[-411.28717041 -47.35302353]
[-396.98022461 -51.49555206]
[-385.68151855 -40.42082214]
[-371.20275879 -36.50099182]
[-356.68411255 -32.73149109]
[-342.12716675 -29.11272621]
[-327.57022095 -25.49395752]
[-313.01327515 -21.87519073]
[-298.45635986 -18.25642395]
[-283.89941406 -14.63765621]
[-269.34246826 -11.01888943]
[-254.76696777 -7.47563553]
[-240.17327881 -4.00799084]
[-232.67327881 -16.99837112]
[-242.97319031 -27.90304565]
[-253.27310181 -38.80772018]
[-268.54476929 -46.17063904]
[-265.69720459 -62.88374329]
[-248.84896851 -64.77411652]
[-242.36842346 -49.10762787]
[-232.06851196 -38.20295334]
[-221.76861572 -27.29827881]
[-199.45625305 -26.24841118]
[-183.69006348 -12.51340485]
[-180.13354492 6.64295197]
[-165.82974243 11.15971851]
[-151.52593994 15.67648602]
[-137.22213745 20.19325256]
[-122.91833496 24.71002007]
[-108.61453247 29.22678566]
[-94.14813232 25.68100548]
[-83.31830597 37.21467209]
[-69.01450348 41.73143768]
[-61.72623825 40.75400162]
[-54.58624268 46.36989594]
[-40.33003616 51.03472519]
[-26.07383156 55.69955063]
[-11.81762695 60.36437988]
[2.53223872 64.73259735]
[16.96959496 68.80233765]
[31.40695190 72.87207031]
[45.84430695 76.94180298]
[60.28166199 81.01154327]
[74.71901703 85.08127594]
[89.15637207 89.15101624]
[103.38820648 84.41234589]
[112.50419617 72.50022125]
[121.62018585 60.58809280]
[123.86248779 44.92658997]
[137.74177551 39.52154541]
[146.85777283 27.60942078]
[155.97377014 15.69729519]
[165.08975220 3.78517032]
[174.20574951 -8.12695408]
[183.32173157 -20.03907967]
[192.43772888 -31.95120430]
[201.49183655 -43.91042709]
[210.48384094 -55.91642761]
[210.84576416 -60.13245010]
[212.35466003 -63.67579651]
[214.66642761 -66.27297211]
[217.38414001 -67.78710175]
[220.10598755 -68.22344971]
[229.58802795 -79.84630585]
[232.31631470 -95.43049622]
[246.35699463 -100.40128326]
[255.83903503 -112.02413940]
[258.56732178 -127.60832977]
[272.60800171 -132.57911682]
[282.09005737 -144.20198059]
[291.57211304 -155.82482910]
[301.05413818 -167.44769287]
[310.53619385 -179.07054138]
[320.01824951 -190.69340515]
[329.50027466 -202.31625366]
[338.98233032 -213.93911743]
[348.09832764 -225.85124207]
[356.83944702 -238.04110718]
[365.58056641 -250.23097229]
[374.32165527 -262.42083740]
[383.06277466 -274.61071777]
[380.24639893 -290.16204834]
[389.31991577 -303.10217285]
[404.90014648 -305.75396729]
[417.74362183 -296.54415894]
[420.23056030 -280.93676758]
[410.88546753 -268.19137573]
[395.25265503 -265.86959839]
[386.51153564 -253.67973328]
[377.77041626 -241.48986816]
[369.02929688 -229.29998779]
[360.28817749 -217.11012268]
[375.19262695 -218.80068970]
[386.98675537 -209.53256226]
[388.86846924 -194.65106201]
[379.75247192 -182.73893738]
[364.89633179 -180.66641235]
[352.86822510 -189.62876892]
[350.60519409 -204.45706177]
[341.12313843 -192.83421326]
[331.64108276 -181.21134949]
[322.15905762 -169.58850098]
[312.67700195 -157.96563721]
[303.19494629 -146.34278870]
[293.71292114 -134.71992493]
[284.23086548 -123.09706879]
[282.18078613 -108.34422302]
[267.46188354 -102.54209137]
[257.97985840 -90.91923523]
[255.92977905 -76.16638947]
[241.21089172 -70.36425781]
[231.72883606 -58.74140167]
[222.48983765 -46.92443085]
[213.49783325 -34.91843414]
[212.01060486 -27.71688843]
[204.34985352 -22.83521271]
[195.23385620 -10.92308903]
[186.11787415 0.98903620]
[177.00187683 12.90116119]
[167.88589478 24.81328583]
[158.76989746 36.72541046]
[149.65390015 48.63753510]
[148.06364441 63.44700241]
[133.53231812 69.70408630]
[124.41632080 81.61621094]
[115.30033112 93.52833557]
[129.01133728 87.44490051]
[139.94653320 77.17739868]
[153.69593811 71.18122864]
[168.66069031 70.15367126]
[183.10064697 74.21419525]
[195.33663940 82.89063263]
[203.94580078 95.17404938]
[207.92703247 109.63606262]
[206.81736755 124.59496307]
[200.74583435 138.31124878]
[190.41848755 149.18994141]
[177.03622437 155.96598816]
[162.15518188 157.85145569]
[147.50584412 154.62709045]
[134.79167175 146.66783142]
[125.49113464 134.89923096]
[120.68535614 120.68721008]
[110.13676453 110.02291870]
[114.28128815 124.43898010]
[118.42581177 138.85504150]
[122.57034302 153.27110291]
[133.81944275 164.39622498]
[129.89991760 178.76586914]
[134.04444885 193.18193054]
[138.18896484 207.59799194]
[142.33349609 222.01405334]
[146.47802734 236.43011475]
[150.62254333 250.84619141]
[154.76707458 265.26223755]
[158.91160583 279.67831421]
[170.16070557 290.80343628]
[166.24118042 305.17306519]
[170.38571167 319.58914185]
[174.53022766 334.00518799]
[178.67475891 348.42126465]
[182.81929016 362.83731079]
[187.48411560 377.09353638]
[192.66310120 391.17111206]
[204.68931580 401.45120239]
[201.82211304 416.06723022]
[207.00109863 430.14480591]
[212.18008423 444.22238159]
[217.35906982 458.29995728]
[222.53805542 472.37753296]
[227.71705627 486.45510864]
[241.78552246 493.14208984]
[246.83721924 507.49252319]
[240.37550354 520.86346436]
[245.55448914 534.94104004]
[250.73347473 549.01861572]
[255.91246033 563.09619141]
[261.09146118 577.17376709]
[278.33447266 589.94958496]
[273.76382446 610.10198975]
[279.37811279 624.01171875]
[284.99240112 637.92138672]
[290.60668945 651.83111572]
[296.22097778 665.74078369]
[310.86294556 671.68963623]
[316.93289185 686.28179932]
[310.82962036 700.86004639]
[296.17410278 706.77539062]
[281.66119385 700.51831055]
[275.90112305 685.80102539]
[282.31127930 671.35510254]
[276.69699097 657.44537354]
[271.08270264 643.53570557]
[265.46841431 629.62597656]
[259.85412598 615.71630859]
[251.30798340 613.64721680]
[244.55029297 607.80944824]
[241.15888977 599.40039062]
[242.00061035 590.23480225]
[247.01388550 582.35272217]
[241.83488464 568.27514648]
[236.65589905 554.19757080]
[231.47691345 540.12005615]
[226.29792786 526.04248047]
[212.71153259 520.04699707]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 268]
[2 267]
[3 266]
[4 265]
[5 264]
[6 263]
[8 261]
[9 260]
[17 259]
[18 258]
[19 257]
[20 256]
[21 255]
[23 253]
[24 252]
[25 251]
[26 250]
[27 249]
[28 248]
[29 247]
[30 246]
[32 244]
[33 243]
[34 242]
[35 241]
[36 142]
[37 141]
[38 140]
[39 139]
[40 138]
[41 137]
[42 136]
[47 135]
[48 134]
[49 133]
[50 132]
[51 130]
[52 129]
[54 127]
[55 126]
[56 125]
[57 124]
[58 123]
[59 122]
[64 110]
[65 109]
[67 108]
[68 107]
[69 106]
[70 105]
[71 104]
[72 103]
[73 102]
[76 101]
[77 100]
[79 98]
[80 97]
[81 96]
[82 95]
[84 92]
[85 91]
[86 90]
[111 119]
[112 118]
[113 117]
[143 223]
[144 222]
[145 221]
[147 219]
[148 218]
[149 217]
[150 216]
[151 215]
[152 214]
[153 213]
[154 211]
[155 210]
[160 209]
[161 208]
[163 206]
[164 205]
[166 203]
[167 202]
[168 201]
[169 200]
[170 199]
[171 198]
[172 197]
[173 196]
[174 189]
[175 188]
[176 187]
[177 186]
[178 185]
[271 301]
[272 300]
[273 299]
[274 298]
[275 297]
[277 292]
[278 291]
[279 290]
[280 289]
[281 288]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
