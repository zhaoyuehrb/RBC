%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:55:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUGGCUCCCAGCCCCGCAGCGGCCGAGCUGCAGCCCGGGCUCAGUCUCCGCCGCCGCCGUGAACAUGGAGCCCCCGGACGCACCGGCCCAGGCGCGCGGGGCCCCGCGGCUGCUGUUGCUCGCAGUCCUGCUGGCGGCGCACCCAGAUGCCCAGGCGGAGGUGC\
) } def
/len { sequence length } bind def

/coor [
[128.36187744 123.61266327]
[113.44205475 125.16142273]
[111.89311218 110.24207306]
[104.43321991 111.01668549]
[99.98622131 125.34233093]
[95.53922272 139.66798401]
[96.61795807 156.58757019]
[80.65821838 162.30796814]
[70.74328613 148.55549622]
[81.21357727 135.22097778]
[85.66057587 120.89533234]
[90.10757446 106.56968689]
[90.38973999 91.57233429]
[86.48474121 77.08955383]
[82.57975006 62.60676956]
[78.53870392 48.16135788]
[74.36196899 33.75459290]
[70.04991150 19.38775063]
[65.60290527 5.06210375]
[61.15590668 -9.26354408]
[56.70890427 -23.58919144]
[51.15303040 -30.89492798]
[52.31573105 -38.22629929]
[48.13899231 -52.63306427]
[43.96225739 -67.03982544]
[39.51525497 -81.36547852]
[34.79956436 -95.60493469]
[30.08387375 -109.84439850]
[25.36818123 -124.08386230]
[20.65249062 -138.32331848]
[3.78757048 -151.49880981]
[8.65177250 -171.53273010]
[3.14040017 -185.48352051]
[-2.37097192 -199.43432617]
[-7.88234425 -213.38511658]
[-13.39371586 -227.33592224]
[-18.90508842 -241.28671265]
[-24.54743576 -255.18505859]
[-30.32025909 -269.02972412]
[-36.09308243 -282.87435913]
[-41.86590576 -296.71902466]
[-45.49291229 -299.27969360]
[-47.85344315 -302.54370117]
[-48.88229752 -306.01754761]
[-48.68426514 -309.23849487]
[-47.50868225 -311.82815552]
[-52.22437286 -326.06762695]
[-56.94006348 -340.30709839]
[-62.63238144 -347.50701904]
[-61.60779953 -354.85894775]
[-66.05480194 -369.18460083]
[-70.50180054 -383.51025391]
[-74.94879913 -397.83590698]
[-79.53034973 -412.11907959]
[-84.24604034 -426.35855103]
[-88.96173096 -440.59802246]
[-93.67742157 -454.83746338]
[-98.79299164 -468.93823242]
[-104.30435944 -482.88900757]
[-109.81573486 -496.83981323]
[-115.32711029 -510.79061890]
[-120.96945190 -524.68896484]
[-126.74227905 -538.53363037]
[-141.89790344 -540.59619141]
[-153.90698242 -549.90631104]
[-159.60566711 -563.88458252]
[-157.55624390 -578.73907471]
[-148.40829468 -590.49407959]
[-154.18112183 -604.33874512]
[-159.95394897 -618.18341064]
[-174.18336487 -625.59307861]
[-177.12059021 -641.36499023]
[-166.51246643 -653.40020752]
[-150.49661255 -652.46643066]
[-141.35902405 -639.27990723]
[-146.10928345 -623.95623779]
[-140.33647156 -610.11157227]
[-134.56364441 -596.26690674]
[-119.77450562 -594.49298096]
[-107.77918243 -585.49475098]
[-101.85927582 -571.60870361]
[-103.69678497 -556.52496338]
[-112.89762115 -544.30645752]
[-107.12479401 -530.46179199]
[-101.62458801 -525.47692871]
[-101.37630463 -516.30200195]
[-95.86493683 -502.35119629]
[-90.35356140 -488.40039062]
[-84.84219360 -474.44958496]
[-81.72582245 -472.71530151]
[-79.31073761 -469.36340332]
[-78.35797119 -464.74783325]
[-79.43795776 -459.55316162]
[-74.72226715 -445.31372070]
[-70.00657654 -431.07424927]
[-65.29088593 -416.83477783]
[-60.18098831 -411.45056152]
[-60.62315369 -402.28289795]
[-56.17615128 -387.95724487]
[-51.72915268 -373.63162231]
[-47.28215027 -359.30596924]
[-42.70059967 -345.02276611]
[-37.98490906 -330.78332520]
[-33.26921844 -316.54385376]
[-28.02124786 -302.49185181]
[-22.24842453 -288.64718628]
[-16.47560310 -274.80255127]
[-10.70277882 -260.95788574]
[-5.20257092 -255.97305298]
[-4.95428991 -246.79809570]
[0.55708212 -232.84729004]
[6.06845427 -218.89648438]
[11.57982635 -204.94569397]
[17.09119797 -190.99488831]
[22.60257149 -177.04409790]
[31.28610229 -174.86280823]
[38.07862854 -168.82017517]
[41.35435867 -160.19174194]
[40.25092697 -150.88964844]
[34.89195251 -143.03901672]
[39.60764313 -128.79954529]
[44.32333374 -114.56008911]
[49.03902435 -100.32062531]
[53.75471497 -86.08116913]
[57.58184814 -83.15945435]
[59.58920670 -77.78501129]
[58.36902237 -71.21656036]
[62.54575729 -56.80979919]
[66.72249603 -42.40303421]
[71.03455353 -28.03619194]
[75.48155212 -13.71054459]
[79.92855835 0.61510289]
[84.37555695 14.94075108]
[89.38327026 20.42013359]
[88.76873016 29.57785606]
[92.94547272 43.98462296]
[97.84922791 49.55723572]
[97.06253052 58.70177841]
[100.96752930 73.18456268]
[104.87252045 87.66734314]
[147.37915039 100.62281036]
[154.67459106 113.72916412]
[161.97003174 126.83551788]
[169.26547241 139.94187927]
[176.56091309 153.04823303]
[188.46035767 154.02629089]
[198.29835510 160.57705688]
[203.67915344 170.96553040]
[203.36038208 182.54028320]
[197.53802490 192.40986633]
[204.33529663 205.78137207]
[211.13258362 219.15286255]
[225.16529846 227.63902283]
[224.56195068 244.02706909]
[209.94320679 251.45838928]
[196.34757996 242.28826904]
[197.76109314 225.95014954]
[190.96380615 212.57864380]
[184.16651917 199.20715332]
[166.47448730 194.62773132]
[157.55726624 178.31224060]
[163.45455933 160.34367371]
[156.15911865 147.23731995]
[148.86367798 134.13096619]
[141.56823730 121.02460480]
[134.27279663 107.91825104]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 12]
[5 11]
[6 10]
[13 140]
[14 139]
[15 138]
[16 136]
[17 135]
[18 133]
[19 132]
[20 131]
[21 130]
[23 129]
[24 128]
[25 127]
[26 124]
[27 123]
[28 122]
[29 121]
[30 120]
[32 115]
[33 114]
[34 113]
[35 112]
[36 111]
[37 110]
[38 108]
[39 107]
[40 106]
[41 105]
[46 104]
[47 103]
[48 102]
[50 101]
[51 100]
[52 99]
[53 98]
[54 96]
[55 95]
[56 94]
[57 93]
[58 89]
[59 88]
[60 87]
[61 86]
[62 84]
[63 83]
[68 78]
[69 77]
[70 76]
[141 166]
[142 165]
[143 164]
[144 163]
[145 162]
[150 159]
[151 158]
[152 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
