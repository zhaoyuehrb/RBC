%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:57:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGGCCCGCCCCCCGCCUCCCGCCGCCUCCGGGCUCCCGGCUCCCGGCCGCGCCUCGCCCCAUGCACUCGCCGCGCCGCGCAGCCCGCGCACGCCCGGAUGGCUCCUCGCGCCGCGGGCGGCGCACCCCUUAGCGCCCGGGCCGCCGCCGCCAGCCCCCCGCCGUUCCAGACGCCGCCGCGGUGCCCGGUGCCGCUGC\
) } def
/len { sequence length } bind def

/coor [
[524.30187988 366.93438721]
[516.28222656 360.12384033]
[511.78268433 350.52386475]
[511.67749023 339.84143066]
[498.68710327 332.34143066]
[485.69671631 324.84143066]
[471.42092896 328.93252563]
[458.13998413 321.51150513]
[453.94567871 306.50997925]
[440.95532227 299.00997925]
[427.96493530 291.50997925]
[414.97454834 284.00997925]
[400.08374023 284.34704590]
[392.00109863 270.74624634]
[379.01071167 263.24624634]
[366.02035522 255.74624634]
[353.02996826 248.24624634]
[340.03958130 240.74624634]
[329.91232300 246.02073669]
[318.37719727 245.74497986]
[308.30633545 239.87182617]
[302.26306152 229.76214600]
[301.84997559 217.87117004]
[289.10034180 209.96881104]
[276.35070801 202.06646729]
[254.76013184 203.53857422]
[244.39926147 183.67362976]
[231.18081665 176.58331299]
[217.96237183 169.49298096]
[204.68891907 162.50616455]
[191.36128235 155.62330627]
[178.03363037 148.74043274]
[164.70599365 141.85755920]
[151.37834167 134.97470093]
[138.05068970 128.09182739]
[124.72305298 121.20896149]
[115.06829834 130.37031555]
[102.09062958 135.17004395]
[87.74464417 134.44613647]
[74.36681366 127.90395355]
[64.29519653 116.22811890]
[49.42737961 118.21506500]
[34.55955887 120.20201111]
[19.69174004 122.18894958]
[4.79309940 130.28010559]
[-7.10620642 118.20356750]
[1.20432329 103.42617035]
[17.70479584 107.32112885]
[32.57261658 105.33419037]
[47.44043350 103.34724426]
[62.30825424 101.36029816]
[64.75891876 86.56184387]
[51.32532501 79.88811493]
[37.89173508 73.21439362]
[24.45814323 66.54066467]
[14.35599613 70.59986877]
[3.90358186 68.46856689]
[-3.49155092 61.08826065]
[-5.55486822 51.07038498]
[-18.77331161 43.98005676]
[-31.41151810 52.61338425]
[-46.61553955 54.37302780]
[-60.89160156 48.85463715]
[-70.95916748 37.32629776]
[-74.50479126 22.43713570]
[-70.71370697 7.60857296]
[-60.45708466 -3.75189590]
[-46.09181595 -9.03371811]
[-30.91893768 -7.02316904]
[-18.42506409 1.81774139]
[-11.48119545 15.45743656]
[-11.68298435 30.76161385]
[1.53545952 37.85194397]
[20.76063919 35.82739258]
[31.13187027 53.10707092]
[44.56546021 59.78079987]
[57.99905014 66.45452881]
[71.43264008 73.12825012]
[75.51079559 73.75397491]
[79.37644196 74.78655243]
[72.80789948 61.30121613]
[66.23935699 47.81587982]
[59.67081451 34.33054733]
[45.03440094 27.76129913]
[41.18451309 12.18702793]
[51.07445526 -0.44501936]
[67.11750793 -0.44461748]
[77.00681305 12.18792534]
[73.15615082 27.76200294]
[79.72469330 41.24733734]
[86.29323578 54.73267365]
[92.86177063 68.21800995]
[114.39590454 70.78002167]
[129.54942322 86.29303741]
[131.60592651 107.88131714]
[144.93356323 114.76418304]
[158.26121521 121.64704895]
[171.58885193 128.52992249]
[184.91650391 135.41278076]
[198.24414062 142.29565430]
[211.57179260 149.17852783]
[220.64073181 150.33766174]
[225.05270386 156.27453613]
[238.27114868 163.36486816]
[251.48959351 170.45518494]
[258.91177368 166.59561157]
[267.16171265 165.99526978]
[274.88684082 168.67807007]
[280.85018921 174.13568115]
[284.12808228 181.42207336]
[284.25305176 189.31684875]
[297.00268555 197.21919250]
[309.75231934 205.12153625]
[328.01004028 200.08856201]
[343.88107300 209.82496643]
[347.53958130 227.75587463]
[360.52996826 235.25587463]
[373.52035522 242.75587463]
[386.51071167 250.25587463]
[399.50109863 257.75585938]
[415.32104492 257.95526123]
[422.47454834 271.01959229]
[435.46493530 278.51959229]
[448.45532227 286.01959229]
[461.44567871 293.51959229]
[476.53454590 289.65118408]
[489.60177612 297.44232178]
[493.19671631 311.85107422]
[506.18710327 319.35107422]
[519.17749023 326.85107422]
[538.27185059 320.62344360]
[555.53057861 330.28570557]
[560.06066895 349.22583008]
[573.38830566 356.10867310]
[586.71594238 362.99154663]
[600.04357910 369.87442017]
[613.42462158 376.65292358]
[626.85821533 383.32666016]
[640.34356689 389.89520264]
[653.87982178 396.35815430]
[667.41607666 402.82110596]
[680.95233154 409.28405762]
[694.48858643 415.74700928]
[708.02484131 422.20999146]
[717.12554932 423.08511353]
[721.72094727 428.88119507]
[735.15454102 435.55490112]
[748.58813477 442.22863770]
[762.02172852 448.90237427]
[775.45532227 455.57608032]
[791.25677490 454.78668213]
[799.21258545 467.37857056]
[812.64611816 474.05227661]
[825.10357666 470.68905640]
[836.15759277 476.53051758]
[840.13317871 487.96047974]
[853.46081543 494.84335327]
[864.38610840 484.35925293]
[878.12469482 477.99288940]
[893.18627930 476.43490601]
[907.93707275 479.85421753]
[920.77709961 487.87997437]
[930.31353760 499.64160156]
[935.51190186 513.86328125]
[935.80828857 529.00231934]
[931.17065430 543.41656494]
[922.10198975 555.54254150]
[909.58605957 564.06475830]
[894.98034668 568.05895996]
[879.86932373 567.09173584]
[865.89208984 561.26812744]
[854.56469727 551.21972656]
[847.11596680 538.03662109]
[844.35382080 523.14874268]
[846.57794189 508.17098999]
[833.25030518 501.28811646]
[815.79418945 503.05755615]
[805.97241211 487.48587036]
[792.53881836 480.81213379]
[777.69818115 482.07891846]
[768.78155518 469.00967407]
[755.34796143 462.33596802]
[741.91436768 455.66223145]
[728.48077393 448.98849487]
[715.04718018 442.31478882]
[701.56188965 435.74624634]
[688.02563477 429.28326416]
[674.48937988 422.82031250]
[660.95312500 416.35736084]
[647.41687012 409.89440918]
[633.88061523 403.43145752]
[626.48400879 403.38638306]
[620.18450928 396.76025391]
[606.75091553 390.08651733]
[599.35589600 389.92584229]
[593.16076660 383.20205688]
[579.83306885 376.31921387]
[566.50543213 369.43634033]
[553.17779541 362.55346680]
[544.58734131 368.19793701]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 130]
[5 129]
[6 128]
[9 125]
[10 124]
[11 123]
[12 122]
[14 120]
[15 119]
[16 118]
[17 117]
[18 116]
[23 113]
[24 112]
[25 111]
[27 105]
[28 104]
[29 103]
[30 101]
[31 100]
[32 99]
[33 98]
[34 97]
[35 96]
[36 95]
[41 51]
[42 50]
[43 49]
[44 48]
[52 78]
[53 77]
[54 76]
[55 75]
[59 73]
[60 72]
[80 92]
[81 91]
[82 90]
[83 89]
[133 199]
[134 198]
[135 197]
[136 196]
[137 194]
[138 193]
[139 191]
[140 190]
[141 189]
[142 188]
[143 187]
[144 186]
[146 185]
[147 184]
[148 183]
[149 182]
[150 181]
[152 179]
[153 178]
[156 176]
[157 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
