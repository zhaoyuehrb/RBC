%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:31:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCAGACCUGUCAGCCCGCCACACUCCAGCCAGUCCCUUCCGAUCACCUCCAGACACCACGCUCUCCUUUCGGAGCCCGCCCGCCGGAAGUGGCGGCCCGGAACUACUCCCACAGGGGGGCGGGGAAGGAAGAUGGCGGCGCCCAGCGUCCCGUGAGGAGAGAGGACACAGGGAUCCCGGGGAGCGGCCCCAGACUCGUAAAUUAUGGCCGCAUCUCCGCACACUCUCUCCUCACGCCUCCUGACAGGUUGCGUA\
GGAGGCUCUGUCUGGUAUCUUGAAAGAAGAACUAUACAGGACUCCCCUC\
) } def
/len { sequence length } bind def

/coor [
[210.23030090 337.27624512]
[208.87255859 325.76998901]
[210.76947021 314.32083130]
[215.78210449 303.83270264]
[223.52503967 295.13671875]
[216.13682556 282.08242798]
[208.74859619 269.02816772]
[201.36038208 255.97387695]
[193.97215271 242.91960144]
[186.58393860 229.86532593]
[179.19570923 216.81105042]
[171.80749512 203.75675964]
[164.41926575 190.70248413]
[157.03105164 177.64820862]
[142.23593140 176.15077209]
[131.02694702 166.10972595]
[127.84257507 151.21968079]
[134.10894775 137.14706421]
[126.72073364 124.09278107]
[129.12117004 138.89945984]
[124.83181000 153.27310181]
[114.70940399 164.34274292]
[100.77577209 169.89736938]
[85.81397247 168.82751465]
[72.81243134 161.34686279]
[64.36804962 148.94960022]
[62.16746902 134.11189270]
[66.65023804 119.79739380]
[76.92099762 108.86522675]
[62.06578445 106.78613281]
[47.21057129 104.70703125]
[32.35535812 102.62793732]
[20.75547981 114.97078705]
[4.24507475 117.91972351]
[-10.61236763 110.50433350]
[-18.03063583 95.83469391]
[-32.90647507 93.90872192]
[-47.78231430 91.98274994]
[-62.65815735 90.05677032]
[-77.53399658 88.13079834]
[-92.40983582 86.20481873]
[-106.95382690 89.87527466]
[-119.13433075 98.62944031]
[-123.13415527 114.16587830]
[-137.83320618 120.59375000]
[-151.95562744 112.98213196]
[-154.66790771 97.17001343]
[-143.88941956 85.28710175]
[-127.88849640 86.44893646]
[-115.70799255 77.69477844]
[-116.90032196 70.29016113]
[-131.70956421 72.67481995]
[-146.51878357 75.05947876]
[-159.86639404 81.90356445]
[-170.50001526 71.32404327]
[-163.72409058 57.94170761]
[-148.90344238 60.25024414]
[-134.09422302 57.86558533]
[-119.28498077 55.48092651]
[-120.47731018 48.07630920]
[-134.79014587 43.58823776]
[-149.10298157 39.10017014]
[-163.41581726 34.61210251]
[-177.72865295 30.12403297]
[-192.04148865 25.63596344]
[-206.35432434 21.14789391]
[-220.66716003 16.65982437]
[-234.97999573 12.17175579]
[-247.42668152 21.24843979]
[-262.65341187 21.25561142]
[-274.82073975 12.40009975]
[-279.38583374 -1.75256419]
[-293.69866943 -6.24063301]
[-308.01150513 -10.72870255]
[-322.32434082 -15.21677113]
[-343.83441162 -8.85356712]
[-357.65139771 -25.53247261]
[-372.13693237 -29.42719460]
[-386.62249756 -33.32191467]
[-404.32641602 -28.17386055]
[-416.20330811 -41.12192154]
[-430.72821045 -44.86723328]
[-445.25308228 -48.61254501]
[-459.77798462 -52.35785675]
[-474.30288696 -56.10316849]
[-488.82778931 -59.84848022]
[-504.47378540 -54.93578339]
[-516.36663818 -66.22704315]
[-512.27197266 -82.10676575]
[-496.40203857 -86.23926544]
[-485.08248901 -74.37337494]
[-470.55758667 -70.62806702]
[-456.03268433 -66.88275146]
[-441.50778198 -63.13744354]
[-426.98287964 -59.39213181]
[-412.45797729 -55.64682007]
[-401.91555786 -61.51400757]
[-389.80801392 -58.54933548]
[-382.72778320 -47.80746460]
[-368.24221802 -43.91274261]
[-353.75668335 -40.01802063]
[-348.00799561 -45.24388123]
[-340.58297729 -47.82999039]
[-332.64508057 -47.29358292]
[-325.46871948 -43.64738464]
[-320.23477173 -37.40922165]
[-317.83627319 -29.52960587]
[-303.52343750 -25.04153633]
[-289.21060181 -20.55346870]
[-274.89776611 -16.06539917]
[-263.06893921 -25.07742310]
[-248.02366638 -25.39989471]
[-235.52732849 -16.69961166]
[-230.49192810 -2.14107847]
[-216.17909241 2.34699059]
[-201.86625671 6.83505964]
[-187.55342102 11.32312870]
[-173.24058533 15.81119823]
[-158.92774963 20.29926682]
[-144.61491394 24.78733635]
[-130.30207825 29.27540588]
[-115.98924255 33.76347351]
[-91.54230499 50.21983337]
[-90.48386383 71.32897949]
[-75.60801697 73.25495911]
[-60.73218155 75.18093109]
[-45.85633850 77.10690308]
[-30.98049927 79.03288269]
[-16.10466003 80.95885468]
[-7.89700317 70.46425629]
[4.51932812 65.34286499]
[17.95343971 67.02616119]
[28.89566422 75.18183136]
[34.43445206 87.77272034]
[49.28966522 89.85182190]
[64.14488220 91.93091583]
[79.00009155 94.01000977]
[89.41379547 83.21395111]
[86.80061340 68.44332886]
[84.18743896 53.67270660]
[81.57426453 38.90208435]
[78.96109009 24.13146019]
[70.24784851 9.58788013]
[81.81099701 -2.81090927]
[96.92623138 4.86801863]
[93.73171234 21.51828575]
[96.34488678 36.28890991]
[98.95806885 51.05953217]
[101.57124329 65.83015442]
[104.18441772 80.60077667]
[111.25530243 83.10129547]
[125.39707184 88.10233307]
[132.46795654 90.60284424]
[143.78578186 80.75872040]
[155.10360718 70.91459656]
[166.42143250 61.07047653]
[177.73927307 51.22634888]
[189.05709839 41.38222504]
[200.37492371 31.53810310]
[211.69274902 21.69397926]
[223.01057434 11.84985447]
[234.32839966 2.00573015]
[245.64622498 -7.83839369]
[256.96405029 -17.68251801]
[253.43595886 -25.44091034]
[251.56297302 -33.74528885]
[251.41957092 -42.24711609]
[253.00770569 -50.59040070]
[256.25692749 -58.42662811]
[261.02743530 -65.42929077]
[267.11624146 -71.30751801]
[274.26556396 -75.81813049]
[282.17401123 -78.77572632]
[290.50903320 -80.06027985]
[298.92111206 -79.62201691]
[307.05831909 -77.48332214]
[314.58099365 -73.73764038]
[321.17602539 -68.54541016]
[333.35650635 -77.29957581]
[345.53701782 -86.05374146]
[357.71752930 -94.80790710]
[369.89801025 -103.56206512]
[382.07852173 -112.31623077]
[394.21377563 -121.13301086]
[406.30346680 -130.01217651]
[418.39315796 -138.89132690]
[430.48284912 -147.77049255]
[442.57250977 -156.64964294]
[454.66220093 -165.52880859]
[450.12710571 -179.97566223]
[450.53109741 -195.11222839]
[455.83038330 -209.29660034]
[465.45010376 -220.99015808]
[478.34680176 -228.92448425]
[493.12155151 -232.23892212]
[508.17169189 -230.57394409]
[521.86468506 -224.11015320]
[532.71520996 -213.54869080]
[539.54632568 -200.03518677]
[541.61700439 -185.03549194]
[538.70263672 -170.17663574]
[531.11938477 -157.07043457]
[519.68975830 -147.13851929]
[505.65362549 -141.45825195]
[490.53347778 -140.64576721]
[475.96948242 -144.78921509]
[463.54138184 -153.43911743]
[451.45169067 -144.55996704]
[439.36199951 -135.68080139]
[427.27230835 -126.80164337]
[415.18261719 -117.92248535]
[403.09292603 -109.04332733]
[399.57968140 -102.58399200]
[390.83267212 -100.13572693]
[378.65219116 -91.38156891]
[366.47167969 -82.62740326]
[354.29116821 -73.87323761]
[342.11068726 -65.11907196]
[329.93017578 -56.36491013]
[333.76181030 -34.92258835]
[326.06335449 -14.46929455]
[308.93142700 -0.78498095]
[287.13955688 2.22299457]
[266.80819702 -6.36469030]
[255.49035645 3.47943377]
[244.17253113 13.32355785]
[232.85470581 23.16768265]
[221.53688049 33.01180649]
[210.21903992 42.85593033]
[198.90121460 52.70005417]
[187.58338928 62.54417801]
[176.26556396 72.38830566]
[164.94773865 82.23242950]
[153.62991333 92.07655334]
[142.31207275 101.92067719]
[139.77500916 116.70455933]
[147.16323853 129.75883484]
[162.45378113 131.63107300]
[173.57994080 142.02635193]
[176.41798401 156.80503845]
[170.08532715 170.25999451]
[177.47355652 183.31427002]
[184.86177063 196.36854553]
[192.24998474 209.42282104]
[199.63821411 222.47709656]
[207.02642822 235.53138733]
[214.41465759 248.58566284]
[221.80287170 261.63995361]
[229.19110107 274.69421387]
[236.57931519 287.74850464]
[255.21376038 285.88644409]
[272.71801758 292.39697266]
[285.53567505 305.90902710]
[291.08374023 323.63397217]
[288.27322388 341.94104004]
[277.72238159 357.10101318]
[285.64205933 369.83987427]
[293.56170654 382.57876587]
[301.48135376 395.31765747]
[313.81243896 398.98672485]
[320.15371704 409.71844482]
[317.58807373 421.50762939]
[325.37609863 434.32739258]
[333.16412354 447.14718628]
[340.95214844 459.96694946]
[348.74017334 472.78674316]
[362.51791382 480.56387329]
[362.51324463 495.45846558]
[370.30126953 508.27825928]
[378.08929443 521.09802246]
[385.87728882 533.91778564]
[392.97073364 539.59118652]
[393.67874146 546.90997314]
[401.33428955 559.80932617]
[408.98983765 572.70861816]
[416.64541626 585.60797119]
[431.77258301 590.95098877]
[436.89053345 606.15576172]
[428.07321167 619.55853271]
[412.08450317 620.87780762]
[401.18957520 609.10156250]
[403.74609375 593.26348877]
[396.09054565 580.36419678]
[388.43496704 567.46484375]
[380.77941895 554.56555176]
[373.05752563 541.70581055]
[365.26950073 528.88604736]
[357.48147583 516.06628418]
[349.69345093 503.24649048]
[336.47274780 496.38632202]
[335.92037964 480.57476807]
[328.13235474 467.75497437]
[320.34432983 454.93518066]
[312.55633545 442.11541748]
[304.76831055 429.29562378]
[288.93746948 421.67349243]
[288.74246216 403.23730469]
[280.82281494 390.49841309]
[272.90316772 377.75952148]
[264.98352051 365.02066040]
[253.83195496 367.70892334]
[242.35343933 367.19094849]
[231.45300293 363.49688721]
[221.99305725 356.90777588]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 250]
[6 249]
[7 248]
[8 247]
[9 246]
[10 245]
[11 244]
[12 243]
[13 242]
[14 241]
[18 237]
[19 236]
[29 137]
[30 136]
[31 135]
[32 134]
[36 129]
[37 128]
[38 127]
[39 126]
[40 125]
[41 124]
[42 50]
[43 49]
[60 122]
[61 121]
[62 120]
[63 119]
[64 118]
[65 117]
[66 116]
[67 115]
[68 114]
[72 110]
[73 109]
[74 108]
[75 107]
[77 101]
[78 100]
[79 99]
[81 96]
[82 95]
[83 94]
[84 93]
[85 92]
[86 91]
[138 150]
[139 149]
[140 148]
[141 147]
[142 146]
[153 235]
[154 234]
[155 233]
[156 232]
[157 231]
[158 230]
[159 229]
[160 228]
[161 227]
[162 226]
[163 225]
[164 224]
[178 219]
[179 218]
[180 217]
[181 216]
[182 215]
[183 214]
[184 212]
[185 211]
[186 210]
[187 209]
[188 208]
[189 207]
[256 300]
[257 299]
[258 298]
[259 297]
[262 295]
[263 294]
[264 293]
[265 292]
[266 291]
[268 289]
[269 288]
[270 287]
[271 286]
[273 285]
[274 284]
[275 283]
[276 282]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
