%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:50:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUGGCUGUCCCCGCACGGUUCCCAGCUAAUUCCCCGCUACCGGGUUGCGGCCGGAAGCCGGGCGCCGCGGCUCUGCUUCCCUCGGGGAUCUGGCGACAUGGCCAGAAAGGCUCUCAAGCUUGCUUCGUGGACCAGCAUGGCUCUUGCUGCCUCUGGCAUCUACUUCUACAGUAACAAGUACUUGGACCCUAAUGACU\
) } def
/len { sequence length } bind def

/coor [
[101.06787109 175.78384399]
[99.42185974 160.87442017]
[97.77584076 145.96501160]
[83.11183929 142.80793762]
[75.47621918 155.71907043]
[67.84059906 168.63018799]
[60.20497894 181.54132080]
[52.56935883 194.45245361]
[44.93373871 207.36358643]
[51.86174011 222.78936768]
[48.26905441 239.14335632]
[35.76405716 250.02679443]
[19.40202713 251.30236816]
[11.97014713 264.33184814]
[12.59704304 280.71899414]
[-1.42346537 289.22531128]
[-15.66828156 281.10021973]
[-15.48355961 264.70211792]
[-1.05932558 256.89996338]
[6.37255430 243.87049866]
[-0.22838439 232.26008606]
[-0.22810940 218.79612732]
[6.48031569 206.99772644]
[18.23654175 200.00148010]
[32.02260590 199.72796631]
[39.65822601 186.81683350]
[47.29384995 173.90570068]
[54.92947006 160.99456787]
[62.56509018 148.08345032]
[70.20071411 135.17231750]
[57.99378967 118.30619049]
[54.50313568 97.90805054]
[60.33612061 78.18318939]
[46.30446243 72.88106537]
[32.27280045 67.57894135]
[18.24114037 62.27681732]
[4.20947933 56.97469330]
[-9.82218170 51.67257309]
[-18.05132103 62.25501251]
[-31.57217979 68.25803375]
[-47.71911240 67.11727142]
[-62.65424347 57.83431625]
[-77.58766937 59.24594116]
[-92.52110291 60.65756607]
[-103.81407166 72.05267334]
[-119.74804688 70.18502045]
[-128.09983826 56.48731232]
[-122.46266937 41.46726227]
[-107.16089630 36.64696503]
[-93.93272400 45.72413635]
[-78.99929810 44.31251144]
[-64.06586456 42.90088654]
[-62.25780487 35.62208939]
[-58.64167786 21.06449318]
[-56.83361435 13.78569412]
[-69.37072754 5.55035162]
[-81.90783691 -2.68499064]
[-94.44494629 -10.92033291]
[-106.98205566 -19.15567589]
[-119.51916504 -27.39101791]
[-135.30140686 -28.50073433]
[-141.69099426 -41.95518875]
[-154.22811890 -50.19053268]
[-166.76522827 -58.42587280]
[-179.30233765 -66.66121674]
[-194.72547913 -63.21128464]
[-208.02581787 -71.74805450]
[-211.31250000 -87.20681763]
[-202.63558960 -100.41616058]
[-187.14292908 -103.53921509]
[-174.02607727 -94.72312927]
[-171.06698608 -79.19832611]
[-158.52987671 -70.96298218]
[-145.99276733 -62.72764206]
[-133.45565796 -54.49230194]
[-118.57015991 -53.97163010]
[-111.28382874 -39.92812729]
[-98.74671173 -31.69278526]
[-86.20960236 -23.45744324]
[-73.67249298 -15.22210121]
[-61.13538361 -6.98675871]
[-48.59827423 1.24858344]
[-22.97190857 1.98006582]
[-6.29007959 17.61682320]
[-4.52005863 37.64091110]
[9.51160145 42.94303513]
[23.54326248 48.24515915]
[37.57492447 53.54727936]
[51.60658264 58.84940338]
[65.63824463 64.15152740]
[77.91049194 55.52644730]
[77.67488098 40.52829742]
[77.43927002 25.53014755]
[77.20365906 10.53199768]
[76.96804810 -4.46615124]
[76.73243713 -19.46430016]
[65.20997620 -30.28133774]
[64.79467010 -46.08016968]
[75.73292542 -57.48762894]
[91.53527069 -57.73587036]
[102.82643890 -46.67761993]
[102.90760040 -30.87354088]
[91.73059082 -19.69991112]
[91.96620178 -4.70176125]
[92.20181274 10.29638863]
[92.43741608 25.29453850]
[92.67302704 40.29268646]
[92.90863800 55.29083633]
[105.48387909 52.91296005]
[118.79797363 54.16224289]
[126.22985077 41.13277054]
[133.66172791 28.10329819]
[141.09361267 15.07382584]
[148.52549744 2.04435325]
[147.89859009 -14.34280777]
[161.91911316 -22.84912109]
[176.16392517 -14.72402191]
[175.97920227 1.67408550]
[161.55496216 9.47623348]
[154.12309265 22.50570679]
[146.69120789 35.53517914]
[139.25932312 48.56465149]
[131.82745361 61.59412384]
[135.89575195 67.89482880]
[145.36619568 56.26250839]
[159.35565186 61.67501831]
[158.53083801 76.65232849]
[144.03237915 80.49623108]
[148.10069275 86.79692841]
[163.03411865 85.38530731]
[177.96754456 83.97367859]
[192.90098572 82.56205750]
[207.83441162 81.15042877]
[222.74382019 79.50441742]
[237.62554932 77.62442017]
[252.50726318 75.74442291]
[267.38897705 73.86441803]
[273.55484009 64.89022064]
[283.44024658 60.87817383]
[293.68548584 62.93098831]
[300.94982910 70.13275909]
[315.88327026 68.72113800]
[330.81671143 67.30951691]
[339.54687500 54.33576965]
[354.58816528 50.05865860]
[368.83853149 56.49769974]
[375.56936646 70.61257172]
[371.60260010 85.73867035]
[358.81121826 94.73390961]
[343.23489380 93.35101318]
[332.22833252 82.24294281]
[317.29489136 83.65456390]
[302.36148071 85.06619263]
[287.47164917 97.39424896]
[269.26898193 88.74613953]
[254.38726807 90.62614441]
[239.50553894 92.50614166]
[224.62382507 94.38613892]
[221.03616333 97.55084991]
[215.41976929 98.48962402]
[209.24603271 96.08386230]
[194.31260681 97.49548340]
[179.37918091 98.90711212]
[164.44573975 100.31873322]
[149.51231384 101.73036194]
[142.26113892 115.74665070]
[131.65408325 125.51389313]
[141.39579773 136.91998291]
[151.13751221 148.32608032]
[160.87924194 159.73216248]
[168.83970642 164.23063660]
[170.68269348 171.39477539]
[180.24404907 182.95246887]
[189.80540466 194.51017761]
[199.36676025 206.06787109]
[215.13902283 209.00306702]
[222.55055237 223.23152161]
[215.91584778 237.83837891]
[200.32449341 241.61851501]
[187.73684692 231.67211914]
[187.80906677 215.62922668]
[178.24771118 204.07153320]
[168.68635559 192.51382446]
[159.12498474 180.95613098]
[149.47314453 169.47389221]
[139.73143005 158.06779480]
[129.98971558 146.66171265]
[120.24798584 135.25561523]
[116.89391327 139.95254517]
[112.68525696 144.31900024]
[114.33126831 159.22840881]
[115.97728729 174.13781738]
[129.52212524 181.70863342]
[135.99954224 195.80908203]
[132.91883850 211.01727295]
[121.46460724 221.48532104]
[106.04123688 223.18807983]
[92.57933044 215.47079468]
[86.25526428 201.30090332]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 192]
[2 191]
[3 190]
[4 30]
[5 29]
[6 28]
[7 27]
[8 26]
[9 25]
[13 20]
[14 19]
[33 90]
[34 89]
[35 88]
[36 87]
[37 86]
[38 85]
[42 52]
[43 51]
[44 50]
[55 82]
[56 81]
[57 80]
[58 79]
[59 78]
[60 77]
[62 75]
[63 74]
[64 73]
[65 72]
[91 108]
[92 107]
[93 106]
[94 105]
[95 104]
[96 103]
[110 123]
[111 122]
[112 121]
[113 120]
[114 119]
[129 165]
[130 164]
[131 163]
[132 162]
[133 161]
[134 158]
[135 157]
[136 156]
[137 155]
[141 153]
[142 152]
[143 151]
[167 188]
[168 187]
[169 186]
[170 185]
[172 184]
[173 183]
[174 182]
[175 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
