%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:45:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAAAUGACCAAAUGAUUGAUGCAGAUACUGUGUUAUAUUAGACUUUUUUUCUAAUUCUUUACAGGUUGUCUAACAAAGAGAAUGGAAGAGGCCAUCCUACUCAAUCAAACUUCUUUAGUGACAUAUUUUCGGCUUAGAGGUUUAUCUGUAAAUCAUAAGGCACGGAUAGCUAUGUUUUCCA\
) } def
/len { sequence length } bind def

/coor [
[169.93388367 430.05676270]
[166.93811035 424.04821777]
[165.95169067 417.35488892]
[167.10417175 410.63574219]
[170.31294250 404.56237793]
[175.28828430 399.75189209]
[171.71777344 385.18304443]
[167.06024170 379.42050171]
[168.21331787 370.33343506]
[164.89343262 355.70544434]
[152.19389343 348.00759888]
[148.61868286 333.22000122]
[156.77900696 319.95175171]
[153.45912170 305.32373047]
[150.13925171 290.69573975]
[146.81936646 276.06774902]
[143.49948120 261.43972778]
[140.17961121 246.81173706]
[136.66731262 243.54226685]
[135.18695068 238.02294922]
[137.00598145 231.62480164]
[134.19020081 216.89146423]
[131.37442017 202.15812683]
[128.55865479 187.42477417]
[125.74286652 172.69143677]
[122.92709351 157.95808411]
[120.11131287 143.22474670]
[117.29553223 128.49140930]
[44.62718582 121.97048187]
[29.64099884 121.32691193]
[14.65480995 120.68334198]
[-0.33137709 120.03977203]
[-15.31756496 119.39620209]
[-23.61296463 132.24662781]
[-37.13743591 139.17378235]
[-52.21316147 138.40641785]
[-64.79644775 130.25064087]
[-71.56233215 116.98080444]
[-86.54852295 116.33723450]
[-101.53470612 115.69366455]
[-116.52089691 115.05009460]
[-131.50708008 114.40651703]
[-146.49327087 113.76294708]
[-156.91542053 125.42110443]
[-172.40026855 127.60136414]
[-185.63633728 119.27426147]
[-190.37396240 104.37161255]
[-184.37617493 89.92998505]
[-170.47494507 82.76828003]
[-155.23402405 86.26802826]
[-145.84970093 98.77676392]
[-130.86351013 99.42033386]
[-115.87732697 100.06390381]
[-100.89113617 100.70747375]
[-85.90494537 101.35104370]
[-70.91876221 101.99462128]
[-63.04015732 89.35368347]
[-49.80399704 82.30669403]
[-34.71798706 82.83460999]
[-21.83717918 90.89572144]
[-14.67399311 104.41001129]
[0.31219429 105.05358124]
[15.29838181 105.69715118]
[30.28456879 106.34072876]
[45.27075577 106.98429871]
[52.77075577 93.99391174]
[44.72031403 81.33728027]
[36.66987228 68.68064880]
[22.73482704 61.18898010]
[22.43269348 46.29743958]
[14.38224983 33.64080429]
[6.33180666 20.98417282]
[-8.95323372 16.11107254]
[-14.53850842 1.07164931]
[-6.13947392 -12.59713840]
[9.80084991 -14.40976715]
[21.05441093 -2.97574306]
[18.98843956 12.93372917]
[27.03888321 25.59036255]
[35.08932495 38.24699783]
[48.44855118 44.83337784]
[49.32650375 60.63020706]
[57.37694550 73.28684235]
[65.42739105 85.94347382]
[72.72687531 84.22081757]
[94.62532043 79.05284119]
[96.16763306 64.13233948]
[86.47554779 51.93803406]
[88.25222015 36.82849884]
[99.93735504 27.66372108]
[101.47966766 12.74322224]
[103.02198792 -2.17727566]
[95.83586121 -16.91809082]
[105.23176575 -30.35866737]
[121.54399109 -28.67248917]
[127.99192810 -13.59415531]
[117.94248199 -0.63496071]
[116.40016937 14.28553772]
[114.85785675 29.20603561]
[124.42124176 40.56724930]
[123.06966400 55.72072601]
[111.08813477 65.67465973]
[109.54582214 80.59515381]
[115.54461670 85.09676361]
[120.39974213 70.90423584]
[135.39794922 71.13603210]
[139.81217957 85.47181702]
[127.54220581 94.09997559]
[133.54100037 98.60158539]
[147.43585205 92.95066833]
[161.33071899 87.29974365]
[175.22557068 81.64882660]
[189.12043762 75.99790955]
[203.01528931 70.34699249]
[216.91015625 64.69607544]
[222.64280701 53.12371445]
[234.35191345 48.71020889]
[245.55445862 53.31530762]
[259.54428101 47.90374756]
[273.53408813 42.49218369]
[274.69799805 27.27350807]
[282.35717773 14.07125568]
[294.99093628 5.50674295]
[310.09082031 3.28046107]
[324.65872192 7.83443975]
[335.80221558 18.26448250]
[341.30868530 32.49969864]
[340.08486938 47.71367264]
[332.37374878 60.88566208]
[319.70635986 69.40036011]
[304.59783936 71.56716156]
[290.04797363 66.95584869]
[278.94564819 56.48200226]
[264.95584106 61.89356613]
[250.96601868 67.30513000]
[240.72537231 81.54325867]
[222.56106567 78.59093475]
[208.66621399 84.24185181]
[194.77134705 89.89276886]
[180.87649536 95.54368591]
[166.98162842 101.19460297]
[153.08677673 106.84552765]
[139.19190979 112.49644470]
[132.02886963 125.67562866]
[134.84465027 140.40896606]
[137.66043091 155.14231873]
[140.47621155 169.87565613]
[143.29199219 184.60899353]
[146.10777283 199.34234619]
[148.92355347 214.07568359]
[151.73931885 228.80902100]
[154.80760193 243.49186707]
[158.12748718 258.11987305]
[161.44737244 272.74786377]
[164.76724243 287.37585449]
[168.08712769 302.00387573]
[171.40699768 316.63186646]
[184.49540710 325.07763672]
[187.65386963 339.95980835]
[179.52143860 352.38555908]
[182.84132385 367.01358032]
[186.28663635 381.61251831]
[189.85713196 396.18139648]
[207.94599915 411.72863770]
[201.08941650 433.82098389]
[206.13897705 447.94549561]
[211.18853760 462.07000732]
[223.11990356 472.46005249]
[220.11866760 487.04916382]
[225.16822815 501.17367554]
[230.21778870 515.29821777]
[241.24327087 528.17742920]
[231.91950989 542.33740234]
[215.73187256 537.29785156]
[216.09327698 520.34777832]
[211.04371643 506.22323608]
[205.99415588 492.09872437]
[194.42396545 482.71893311]
[197.06402588 467.11956787]
[192.01446533 452.99505615]
[186.96490479 438.87054443]
[180.48936462 437.82763672]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 163]
[7 162]
[9 161]
[10 160]
[13 157]
[14 156]
[15 155]
[16 154]
[17 153]
[18 152]
[21 151]
[22 150]
[23 149]
[24 148]
[25 147]
[26 146]
[27 145]
[28 144]
[29 65]
[30 64]
[31 63]
[32 62]
[33 61]
[38 56]
[39 55]
[40 54]
[41 53]
[42 52]
[43 51]
[66 84]
[67 83]
[68 82]
[70 80]
[71 79]
[72 78]
[86 103]
[87 102]
[90 99]
[91 98]
[92 97]
[109 143]
[110 142]
[111 141]
[112 140]
[113 139]
[114 138]
[115 137]
[118 135]
[119 134]
[120 133]
[165 181]
[166 180]
[167 179]
[169 177]
[170 176]
[171 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
