%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:37:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGAACGUGCUCCGCGGGCUCAGUCCGCCCGCCGCUGCGUCCCGGAGUGCAAGUGAGCUUCUCGGCUGCCCCGCGGGCCGGGGUGCGGAGCCGACAUGCGCCCGCUUCUCGGCCUCCUUCUGGUCUUCGCCGGCUGCACCUUCGCCUUGUACUUGCUGUCGACGCGACUGCCCCGCGGGCGGAGACUGGGCUCCA\
) } def
/len { sequence length } bind def

/coor [
[-15.13875484 185.34226990]
[-27.53554344 193.78736877]
[-39.93233109 202.23246765]
[-42.99962997 217.50431824]
[-55.69203949 225.89224243]
[-70.23251343 222.87393188]
[-82.62930298 231.31901550]
[-94.88984680 239.96072388]
[-107.01102448 248.79684448]
[-119.13220215 257.63296509]
[-131.25338745 266.46908569]
[-143.37455750 275.30520630]
[-155.49574280 284.14132690]
[-167.61692810 292.97744751]
[-179.73809814 301.81356812]
[-184.83689880 309.40673828]
[-192.12376404 310.69210815]
[-204.38430786 319.33383179]
[-216.64485168 327.97552490]
[-228.90539551 336.61724854]
[-235.72766113 350.89193726]
[-250.58811951 351.90005493]
[-262.84866333 360.54177856]
[-275.10919189 369.18347168]
[-287.36975098 377.82519531]
[-286.60745239 393.23370361]
[-294.31643677 406.59689331]
[-308.03677368 413.65063477]
[-323.39041138 412.14407349]
[-335.47802734 402.55798340]
[-340.44247437 387.95120239]
[-336.69967651 372.98474121]
[-325.44390869 362.43432617]
[-310.26684570 359.66656494]
[-296.01144409 365.56463623]
[-283.75091553 356.92294312]
[-271.49035645 348.28121948]
[-259.22982788 339.63952637]
[-253.28450012 325.98294067]
[-237.54710388 324.35668945]
[-225.28656006 315.71499634]
[-213.02601624 307.07327271]
[-200.76547241 298.43157959]
[-188.57421875 289.69238281]
[-176.45304871 280.85626221]
[-164.33186340 272.02014160]
[-152.21067810 263.18402100]
[-140.08950806 254.34791565]
[-127.96832275 245.51179504]
[-115.84714508 236.67567444]
[-103.72596741 227.83955383]
[-102.11367798 223.33288574]
[-97.64669037 219.79614258]
[-91.07439423 218.92222595]
[-78.67761230 210.47714233]
[-76.16393280 195.84098816]
[-63.71212769 187.09985352]
[-48.37742615 189.83567810]
[-35.98063660 181.39057922]
[-23.58384895 172.94548035]
[-23.93717575 161.52842712]
[-18.67617416 151.25465393]
[-9.00708103 144.73388672]
[2.72848773 143.68502808]
[13.62021351 148.48448181]
[26.28000259 140.43901062]
[29.22015190 128.69773865]
[39.71135712 121.89307404]
[52.42096710 124.13442993]
[65.20744324 116.29185486]
[77.99391937 108.44927216]
[90.78039551 100.60669708]
[87.57637787 97.45993805]
[85.61952972 92.71221161]
[85.50669098 86.86047363]
[87.64518738 80.59542847]
[86.45041656 65.64308929]
[85.25564575 50.69074631]
[84.06087494 35.73840332]
[82.86610413 20.78606224]
[81.67133331 5.83372116]
[80.47656250 -9.11862087]
[79.28179169 -24.07096291]
[78.08702087 -39.02330399]
[69.27510071 -52.16334152]
[75.97407532 -65.46646118]
[74.77930450 -80.41880798]
[73.58453369 -95.37114716]
[72.38976288 -110.32348633]
[68.58293152 -118.63986969]
[71.29709625 -125.52347565]
[70.34091949 -140.49296570]
[57.15991211 -148.68080139]
[51.34014511 -163.06517029]
[55.11943054 -178.11497498]
[67.04456329 -188.04325867]
[82.53007507 -189.03240967]
[95.62148285 -180.70205688]
[101.28486633 -166.25540161]
[97.34254456 -151.24748230]
[85.31040955 -141.44914246]
[86.26659393 -126.47965240]
[87.34210205 -111.51825714]
[88.53687286 -96.56591797]
[89.73164368 -81.61357880]
[90.92641449 -66.66123199]
[99.65287781 -54.59068680]
[93.03936005 -40.21807480]
[94.23413086 -25.26573372]
[95.42890167 -10.31339169]
[96.62367249 4.63895035]
[97.81844330 19.59129143]
[99.01321411 34.54363251]
[100.20798492 49.49597549]
[101.40275574 64.44831848]
[102.59752655 79.40065765]
[106.08943176 64.81276703]
[118.46205902 56.33230972]
[133.32739258 58.33776855]
[143.01042175 69.79371643]
[142.51179504 84.78543091]
[132.08894348 95.57264709]
[117.12123871 96.58529663]
[131.66532898 100.25537109]
[146.20942688 103.92545319]
[160.75350952 107.59552765]
[175.29759216 111.26560211]
[189.84169006 114.93567657]
[204.38577271 118.60575867]
[218.92987061 122.27583313]
[233.47395325 125.94590759]
[248.01805115 129.61598206]
[263.29187012 125.49036407]
[273.73922729 136.10650635]
[288.28329468 139.77658081]
[307.39761353 133.39678955]
[320.68688965 147.43331909]
[335.34060669 150.63774109]
[349.99432373 153.84214783]
[358.80889893 147.44456482]
[369.47018433 146.97056580]
[378.44039917 152.33537292]
[382.87582397 161.55647278]
[397.41992188 165.22654724]
[411.96401978 168.89662170]
[426.50808716 172.56669617]
[441.78192139 168.44108582]
[452.22927856 179.05722046]
[466.77334595 182.72729492]
[481.31744385 186.39736938]
[490.41583252 185.46276855]
[496.06326294 190.24366760]
[510.54699707 194.14521790]
[525.11267090 187.42054749]
[539.38653564 194.74418640]
[542.41894531 210.49803162]
[531.88366699 222.59710693]
[515.86248779 221.76002502]
[506.64544678 208.62892151]
[492.16174316 204.72738647]
[477.64736938 200.94146729]
[463.10327148 197.27139282]
[448.55920410 193.60130310]
[434.32565308 197.98944092]
[422.83801270 187.11079407]
[408.29394531 183.44071960]
[393.74984741 179.77064514]
[379.20574951 176.10057068]
[361.04995728 182.73348999]
[346.78991699 168.49588013]
[332.13619995 165.29147339]
[317.48245239 162.08705139]
[309.39889526 168.36062622]
[298.97738647 169.15972900]
[289.64752197 163.97889709]
[284.61322021 154.32066345]
[270.06915283 150.65058899]
[255.83560181 155.03872681]
[244.34797668 144.16007996]
[229.80387878 140.49000549]
[215.25979614 136.81991577]
[200.71569824 133.14984131]
[186.17161560 129.47976685]
[171.62751770 125.80969238]
[157.08343506 122.13961792]
[142.53933716 118.46954346]
[127.99525452 114.79946136]
[113.45116425 111.12938690]
[98.62297058 113.39317322]
[85.83649445 121.23575592]
[73.05001831 129.07832336]
[60.26354218 136.92091370]
[51.86835480 153.30400085]
[34.32548141 153.09880066]
[21.66569328 161.14427185]
[18.26234055 179.77197266]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 60]
[2 59]
[3 58]
[6 55]
[7 54]
[8 51]
[9 50]
[10 49]
[11 48]
[12 47]
[13 46]
[14 45]
[15 44]
[17 43]
[18 42]
[19 41]
[20 40]
[22 38]
[23 37]
[24 36]
[25 35]
[65 195]
[66 194]
[69 192]
[70 191]
[71 190]
[72 189]
[76 116]
[77 115]
[78 114]
[79 113]
[80 112]
[81 111]
[82 110]
[83 109]
[84 108]
[86 106]
[87 105]
[88 104]
[89 103]
[91 102]
[92 101]
[123 188]
[124 187]
[125 186]
[126 185]
[127 184]
[128 183]
[129 182]
[130 181]
[131 180]
[132 179]
[134 177]
[135 176]
[137 172]
[138 171]
[139 170]
[143 168]
[144 167]
[145 166]
[146 165]
[148 163]
[149 162]
[150 161]
[152 160]
[153 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
