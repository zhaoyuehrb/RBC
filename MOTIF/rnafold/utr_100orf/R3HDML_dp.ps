%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:17:37 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (R3HDML)
} def

/sequence { (\
AUGCCCCUGCUGCCCAGCACCGUGGGCCUGGCAGGCCUGCUCUUCUGGGCUGGCCAGGCAGUGAACGCCUUGAUAAUGCCUAAUGCUACCCCAGCCCCGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 19 0.017931338 ubox
2 33 0.009848440 ubox
2 39 0.027519080 ubox
2 60 0.011348921 ubox
2 99 0.007421044 ubox
3 10 0.026560136 ubox
3 13 0.007574794 ubox
3 18 0.020601342 ubox
3 27 0.015914217 ubox
3 32 0.010945221 ubox
3 36 0.086158668 ubox
3 38 0.037767095 ubox
3 40 0.929490589 ubox
3 59 0.012678153 ubox
3 86 0.007503020 ubox
3 95 0.012120125 ubox
3 98 0.008182192 ubox
4 9 0.026487792 ubox
4 12 0.007589418 ubox
4 17 0.020064158 ubox
4 26 0.015969794 ubox
4 31 0.010901303 ubox
4 35 0.078374803 ubox
4 39 0.930692338 ubox
4 58 0.012512156 ubox
4 85 0.007493312 ubox
4 94 0.011600915 ubox
4 100 0.041084695 ubox
5 25 0.015963130 ubox
5 30 0.010832427 ubox
5 34 0.068637052 ubox
5 35 0.038272272 ubox
5 57 0.012311268 ubox
5 99 0.041757353 ubox
5 100 0.016911306 ubox
6 24 0.015940050 ubox
6 31 0.004919669 ubox
6 34 0.029244685 ubox
6 35 0.980353482 ubox
6 58 0.004036175 ubox
6 99 0.016862160 ubox
6 100 0.018425586 ubox
7 17 0.016442518 ubox
7 30 0.004963636 ubox
7 34 0.982784530 ubox
7 57 0.004341130 ubox
7 99 0.018714617 ubox
8 16 0.018766534 ubox
8 19 0.138377266 ubox
8 22 0.014410217 ubox
8 33 0.985366050 ubox
8 56 0.004980637 ubox
9 15 0.018754295 ubox
9 18 0.156115838 ubox
9 21 0.014902771 ubox
9 32 0.985998299 ubox
9 54 0.015017429 ubox
9 55 0.003686022 ubox
9 95 0.017687306 ubox
10 17 0.156112121 ubox
10 31 0.985934732 ubox
10 53 0.015479356 ubox
10 94 0.017710582 ubox
11 16 0.146042660 ubox
11 19 0.032580984 ubox
11 30 0.912870298 ubox
11 52 0.014495062 ubox
11 93 0.017124240 ubox
12 18 0.035968034 ubox
12 27 0.982266029 ubox
12 29 0.045528900 ubox
12 50 0.022571900 ubox
12 92 0.010108618 ubox
13 17 0.035713441 ubox
13 26 0.986123455 ubox
13 49 0.023338495 ubox
14 25 0.986135574 ubox
14 48 0.023351867 ubox
15 24 0.986086009 ubox
15 47 0.023358506 ubox
16 23 0.957820738 ubox
16 46 0.023349602 ubox
16 87 0.006956013 ubox
17 23 0.077884587 ubox
17 45 0.023266144 ubox
17 86 0.007173349 ubox
18 22 0.132105206 ubox
18 85 0.007172784 ubox
19 84 0.006860464 ubox
20 100 0.160233473 ubox
21 99 0.162137856 ubox
22 40 0.029270297 ubox
22 98 0.162038995 ubox
23 39 0.029270149 ubox
23 82 0.006552743 ubox
23 93 0.007017826 ubox
23 99 0.003821818 ubox
24 38 0.029322865 ubox
24 81 0.006695840 ubox
24 92 0.007188691 ubox
24 97 0.161989104 ubox
24 98 0.005845928 ubox
25 37 0.029452086 ubox
25 80 0.006707301 ubox
25 91 0.007184689 ubox
25 96 0.162009203 ubox
25 97 0.005921332 ubox
26 36 0.029456031 ubox
26 59 0.004309896 ubox
26 79 0.006591167 ubox
26 90 0.007158063 ubox
26 95 0.161985177 ubox
26 96 0.005902401 ubox
27 35 0.029456276 ubox
27 58 0.004589554 ubox
27 78 0.006540292 ubox
27 94 0.126013758 ubox
28 34 0.029447885 ubox
28 57 0.005307771 ubox
28 94 0.101970641 ubox
28 100 0.008374552 ubox
29 33 0.026530048 ubox
29 56 0.005710320 ubox
29 88 0.061722320 ubox
29 93 0.143837384 ubox
29 99 0.008539342 ubox
30 41 0.004406597 ubox
30 55 0.006256425 ubox
30 80 0.020317118 ubox
30 87 0.066206010 ubox
30 90 0.013101967 ubox
30 91 0.029031813 ubox
30 92 0.143667845 ubox
30 96 0.005601382 ubox
30 98 0.008531862 ubox
31 40 0.005011263 ubox
31 54 0.006263892 ubox
31 79 0.020504817 ubox
31 86 0.070858784 ubox
31 89 0.012972778 ubox
31 90 0.028780492 ubox
31 91 0.140384628 ubox
31 95 0.005649631 ubox
31 97 0.008436174 ubox
32 39 0.005017130 ubox
32 53 0.006209508 ubox
32 72 0.005521997 ubox
32 78 0.020641073 ubox
32 85 0.074361541 ubox
32 94 0.005673065 ubox
33 38 0.004520118 ubox
33 71 0.005114313 ubox
33 77 0.018595781 ubox
33 84 0.066951776 ubox
33 87 0.012094895 ubox
34 51 0.005841273 ubox
34 55 0.165564328 ubox
34 86 0.005514701 ubox
34 96 0.004037877 ubox
35 50 0.006406824 ubox
35 54 0.166361924 ubox
35 95 0.004332702 ubox
36 49 0.006431599 ubox
36 53 0.166473520 ubox
36 94 0.003818340 ubox
36 100 0.069961403 ubox
37 48 0.006434365 ubox
37 52 0.166017117 ubox
37 94 0.003654654 ubox
37 99 0.071086589 ubox
37 100 0.142983468 ubox
38 47 0.006387099 ubox
38 93 0.003827363 ubox
38 99 0.146098532 ubox
39 46 0.004503151 ubox
39 50 0.166171623 ubox
39 92 0.003780574 ubox
39 95 0.041616499 ubox
39 98 0.150272992 ubox
40 49 0.166559881 ubox
40 94 0.039339014 ubox
40 100 0.048115610 ubox
41 48 0.166327906 ubox
41 93 0.028820910 ubox
41 99 0.059587525 ubox
41 100 0.075579005 ubox
42 47 0.166080322 ubox
42 48 0.005237794 ubox
42 94 0.012468025 ubox
42 99 0.127798086 ubox
42 100 0.120057843 ubox
43 47 0.004759421 ubox
43 93 0.010642542 ubox
43 94 0.005684812 ubox
43 99 0.120289175 ubox
43 100 0.029638524 ubox
44 93 0.003544394 ubox
44 99 0.040942185 ubox
44 100 0.336962600 ubox
45 94 0.629071966 ubox
45 99 0.544602194 ubox
45 100 0.324978983 ubox
46 93 0.639000065 ubox
46 99 0.333340018 ubox
47 91 0.031657183 ubox
47 92 0.640946354 ubox
47 97 0.686927969 ubox
47 98 0.294119609 ubox
48 90 0.037916989 ubox
48 91 0.640617766 ubox
48 96 0.708595527 ubox
48 97 0.240192193 ubox
49 89 0.043218358 ubox
49 90 0.639517711 ubox
49 95 0.728657481 ubox
49 96 0.169904396 ubox
50 94 0.748171206 ubox
51 88 0.624411783 ubox
51 93 0.746008663 ubox
52 80 0.009439466 ubox
52 87 0.649341872 ubox
52 90 0.013458930 ubox
52 91 0.031138756 ubox
52 92 0.740218110 ubox
53 79 0.010505760 ubox
53 86 0.679316145 ubox
53 89 0.014223988 ubox
53 90 0.040015352 ubox
53 91 0.711752247 ubox
54 78 0.011295131 ubox
54 85 0.702433734 ubox
55 63 0.003661063 ubox
55 72 0.142156860 ubox
55 78 0.003893905 ubox
55 85 0.108387040 ubox
56 62 0.003602250 ubox
56 70 0.179622462 ubox
56 71 0.101345050 ubox
56 81 0.779410791 ubox
56 84 0.078490600 ubox
56 87 0.026596201 ubox
57 69 0.213214802 ubox
57 70 0.018008932 ubox
57 80 0.796951552 ubox
57 81 0.003562402 ubox
57 86 0.018245747 ubox
57 87 0.530647638 ubox
57 90 0.136040682 ubox
58 68 0.213563800 ubox
58 69 0.014079448 ubox
58 79 0.797048849 ubox
58 86 0.547457140 ubox
58 89 0.135952060 ubox
59 67 0.213740908 ubox
59 72 0.004366317 ubox
59 78 0.796983188 ubox
59 85 0.547692097 ubox
60 70 0.016362960 ubox
60 71 0.006529112 ubox
60 77 0.769163208 ubox
60 81 0.015695067 ubox
60 84 0.536532227 ubox
60 87 0.132817605 ubox
61 68 0.087788886 ubox
61 69 0.022321842 ubox
61 70 0.011635783 ubox
61 74 0.473963750 ubox
61 77 0.076135018 ubox
61 79 0.044757927 ubox
61 80 0.021845733 ubox
61 84 0.071652986 ubox
61 86 0.135797592 ubox
61 89 0.004257736 ubox
62 67 0.084437661 ubox
62 72 0.031532800 ubox
62 73 0.498477525 ubox
62 75 0.170450949 ubox
62 76 0.126987343 ubox
62 78 0.044151511 ubox
62 82 0.268491897 ubox
62 83 0.121416772 ubox
62 85 0.134222130 ubox
62 88 0.004569639 ubox
63 71 0.088037665 ubox
63 74 0.178518932 ubox
63 77 0.023369652 ubox
63 81 0.305938354 ubox
63 84 0.093467934 ubox
63 87 0.004465145 ubox
64 70 0.089494972 ubox
64 71 0.501386092 ubox
65 70 0.411134081 ubox
66 72 0.285206163 ubox
66 78 0.133886949 ubox
66 99 0.003543718 ubox
67 71 0.177991754 ubox
67 77 0.103445781 ubox
67 79 0.501398247 ubox
67 86 0.009606291 ubox
67 95 0.003257600 ubox
67 98 0.003527814 ubox
68 78 0.501035750 ubox
68 85 0.009669877 ubox
68 94 0.003168911 ubox
70 76 0.296326419 ubox
70 83 0.025081562 ubox
70 94 0.003283347 ubox
71 75 0.255733153 ubox
71 78 0.005958732 ubox
71 82 0.027809990 ubox
71 88 0.007006848 ubox
71 93 0.005639677 ubox
72 77 0.017678911 ubox
72 81 0.027961236 ubox
72 87 0.007492964 ubox
72 92 0.006007621 ubox
73 84 0.019147829 ubox
74 82 0.014969214 ubox
74 83 0.019753600 ubox
74 85 0.010136900 ubox
74 88 0.018051628 ubox
75 81 0.015716332 ubox
75 84 0.010862646 ubox
75 87 0.017978360 ubox
76 84 0.033634163 ubox
77 83 0.035264527 ubox
77 85 0.004039407 ubox
77 88 0.021435118 ubox
78 84 0.004432608 ubox
78 86 0.190584071 ubox
78 87 0.009961936 ubox
79 85 0.190575783 ubox
79 100 0.007507180 ubox
80 99 0.007673624 ubox
80 100 0.003499443 ubox
81 88 0.017906906 ubox
81 99 0.003566744 ubox
82 87 0.021984036 ubox
84 93 0.006430335 ubox
85 92 0.007187985 ubox
85 95 0.032465805 ubox
86 94 0.032569868 ubox
87 93 0.031595100 ubox
89 100 0.008963520 ubox
90 99 0.009064112 ubox
90 100 0.005150817 ubox
91 99 0.005210883 ubox
91 100 0.011597725 ubox
92 99 0.012057705 ubox
3 40 0.9500000 lbox
4 39 0.9500000 lbox
6 35 0.9500000 lbox
7 34 0.9500000 lbox
8 33 0.9500000 lbox
9 32 0.9500000 lbox
10 31 0.9500000 lbox
11 30 0.9500000 lbox
12 27 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
45 94 0.9500000 lbox
46 93 0.9500000 lbox
47 92 0.9500000 lbox
48 91 0.9500000 lbox
49 90 0.9500000 lbox
51 88 0.9500000 lbox
52 87 0.9500000 lbox
53 86 0.9500000 lbox
54 85 0.9500000 lbox
56 81 0.9500000 lbox
57 80 0.9500000 lbox
58 79 0.9500000 lbox
59 78 0.9500000 lbox
60 77 0.9500000 lbox
showpage
end
%%EOF
