%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:23:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCUGGCGCCUAGAGAAGCGGCGGGGCGAGCCGGGGGCUCUAGUGAACAGCGGAGCCGGACGGGGAUCGCCGGCGGGCGGCAAGCGGAGGCGGCCCAGGCCCGGCGGUCUCCGAGAUGUCACGAUGGCUGUGGCCAUGGUCAAACUGUGUGAAAGAGCGGGUCUGCCGCUACUUGCUGCACCACUACUUAGGUCACUUCUUCCAAGAGCACCUCA\
) } def
/len { sequence length } bind def

/coor [
[3.82784796 587.80004883]
[-8.57153893 578.47082520]
[-13.08706188 563.62530518]
[-7.98240995 548.97186279]
[4.77957439 540.14514160]
[4.99773264 525.14672852]
[-2.55364490 512.30828857]
[5.38354540 498.62207031]
[5.60170364 483.62365723]
[5.71078587 468.62405396]
[5.71078587 453.62405396]
[-5.15420914 437.62646484]
[5.20208406 420.32882690]
[4.76581335 405.33517456]
[4.32954264 390.34152222]
[3.89327168 375.34786987]
[3.45700097 360.35421753]
[3.02073026 345.36056519]
[-5.08346605 332.86370850]
[2.24918699 318.84432983]
[1.81291616 303.85067749]
[1.37664533 288.85702515]
[-4.43819523 284.12017822]
[-16.06787682 274.64651489]
[-21.88271713 269.90966797]
[-36.65483093 272.51440430]
[-51.42694855 275.11914062]
[-66.19906616 277.72384644]
[-80.97118378 280.32858276]
[-95.81724548 293.96881104]
[-113.68141937 286.56326294]
[-128.37153625 289.59652710]
[-143.06164551 292.62979126]
[-152.40702820 307.41986084]
[-169.22682190 310.80648804]
[-183.01379395 301.17242432]
[-197.65823364 304.41900635]
[-212.30267334 307.66561890]
[-226.94711304 310.91220093]
[-241.59155273 314.15878296]
[-256.23599243 317.40539551]
[-263.93344116 322.31628418]
[-271.11700439 320.59106445]
[-285.80709839 323.62432861]
[-295.78875732 336.18405151]
[-311.83135986 336.06683350]
[-321.62844849 323.36264038]
[-317.66448975 307.81701660]
[-302.98031616 301.35522461]
[-288.84036255 308.93423462]
[-274.15026855 305.90097046]
[-259.48260498 302.76095581]
[-244.83815002 299.51434326]
[-230.19371033 296.26776123]
[-215.54927063 293.02117920]
[-200.90483093 289.77456665]
[-186.26039124 286.52798462]
[-180.92710876 274.80068970]
[-169.64527893 268.18670654]
[-156.41929626 269.29324341]
[-146.09490967 277.93966675]
[-131.40480042 274.90640259]
[-116.71468353 271.87313843]
[-111.89305878 262.86920166]
[-102.71959686 257.89941406]
[-92.10638428 258.81579590]
[-83.57590485 265.55645752]
[-68.80378723 262.95172119]
[-54.03167343 260.34701538]
[-39.25955582 257.74227905]
[-24.48743820 255.13755798]
[-11.89551163 246.98628235]
[-3.47148013 234.57518005]
[-2.72571707 219.69924927]
[11.42638874 212.62617493]
[19.85042000 200.21505737]
[28.18397331 187.74301147]
[36.42660904 175.21069336]
[44.66924286 162.67837524]
[52.91187668 150.14605713]
[61.15451050 137.61373901]
[69.39714813 125.08142853]
[77.63977814 112.54911041]
[85.88241577 100.01679230]
[88.27201843 85.20835876]
[84.38973236 70.71946716]
[80.50744629 56.23057938]
[76.62516022 41.74169159]
[72.74287415 27.25280571]
[68.86058807 12.76391792]
[64.97830200 -1.72496915]
[53.93289948 -13.05235100]
[58.11249924 -27.34851265]
[54.23021317 -41.83739853]
[50.34792709 -56.32628632]
[36.09994507 -62.77059555]
[29.37431526 -76.88795471]
[33.34666824 -92.01258850]
[46.14138412 -101.00309753]
[61.71718597 -99.61444092]
[72.71965790 -88.50230408]
[73.95377350 -72.91349792]
[64.83681488 -60.20857239]
[68.71910095 -45.71968460]
[72.60138702 -31.23079872]
[83.36910248 -20.93975830]
[79.46719360 -5.60725498]
[83.34947968 8.88163280]
[87.23176575 23.37051964]
[91.11405182 37.85940552]
[94.99633789 52.34829330]
[98.87862396 66.83718109]
[102.76091003 81.32607269]
[110.11679840 82.78924561]
[113.04315186 68.07746887]
[111.28011322 53.18143845]
[124.90228271 46.90158463]
[135.08424377 57.91647339]
[127.75492859 71.00382233]
[124.82857513 85.71559906]
[132.18446350 87.17877960]
[141.31588745 75.27848053]
[143.57849121 59.61989594]
[157.46476746 54.23284149]
[166.59619141 42.33254242]
[175.72761536 30.43224144]
[184.85903931 18.53194237]
[193.99046326 6.63164234]
[195.59335327 -9.68898106]
[210.63858032 -16.21379280]
[223.64889526 -6.23062372]
[221.24040222 9.99069595]
[205.89076233 15.76306343]
[196.75933838 27.66336441]
[187.62791443 39.56366348]
[178.49649048 51.46396255]
[169.36506653 63.36426544]
[167.75561523 78.17166138]
[153.21618652 84.40989685]
[144.08476257 96.31020355]
[147.30375671 103.08428192]
[160.85191345 96.64630890]
[174.40007019 90.20834351]
[187.94822693 83.77037811]
[201.49638367 77.33240509]
[215.04454041 70.89443970]
[225.94017029 60.58497238]
[239.11198425 67.76156616]
[236.35693359 82.50637817]
[221.48249817 84.44259644]
[207.93434143 90.88056183]
[194.38618469 97.31853485]
[180.83802795 103.75650024]
[167.28987122 110.19446564]
[153.74171448 116.63243866]
[156.96070862 123.40651703]
[171.95436096 123.84278870]
[186.94801331 124.27906036]
[201.94166565 124.71532440]
[216.93531799 125.15159607]
[229.54437256 115.23236084]
[245.12754822 119.04608917]
[251.73074341 133.66722107]
[244.28857422 147.87966919]
[228.51002502 150.78085327]
[216.49905396 140.14524841]
[201.50538635 139.70898438]
[186.51173401 139.27270508]
[171.51808167 138.83644104]
[156.52442932 138.40016174]
[114.66731262 135.45843506]
[98.41473389 108.25942993]
[90.17209625 120.79174042]
[81.92946625 133.32406616]
[73.68682861 145.85638428]
[65.44419861 158.38870239]
[57.20156097 170.92100525]
[48.95892715 183.45332336]
[40.71628952 195.98564148]
[38.61645508 204.87149048]
[32.26153183 208.63908386]
[23.83749962 221.05020142]
[22.48919487 236.81384277]
[8.93963146 242.99920654]
[0.51560003 255.41030884]
[10.84071541 244.52951050]
[25.63271332 242.04017639]
[38.95047760 248.94213867]
[45.44500732 262.46328735]
[42.50781250 277.17288208]
[31.31859970 287.16296387]
[16.37030029 288.42074585]
[16.80657005 303.41442871]
[17.24284172 318.40808105]
[25.37824249 331.97735596]
[18.01438522 344.92428589]
[18.45065498 359.91793823]
[18.88692665 374.91159058]
[19.32319641 389.90524292]
[19.75946808 404.89889526]
[20.19573784 419.89254761]
[28.52215195 426.88372803]
[31.56579590 437.09237671]
[28.55369186 447.08129883]
[20.71078682 453.62405396]
[20.71078682 468.62405396]
[23.83924675 477.20196533]
[20.60011673 483.84182739]
[20.38195801 498.84024048]
[27.91773224 512.75146484]
[19.99614716 525.36486816]
[19.77798843 540.36328125]
[32.27785110 549.55749512]
[36.95415115 564.35314941]
[32.00876236 579.06103516]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 212]
[6 211]
[8 209]
[9 208]
[10 206]
[11 205]
[13 201]
[14 200]
[15 199]
[16 198]
[17 197]
[18 196]
[20 194]
[21 193]
[22 192]
[25 71]
[26 70]
[27 69]
[28 68]
[29 67]
[31 63]
[32 62]
[33 61]
[36 57]
[37 56]
[38 55]
[39 54]
[40 53]
[41 52]
[43 51]
[44 50]
[72 185]
[73 184]
[75 182]
[76 181]
[77 179]
[78 178]
[79 177]
[80 176]
[81 175]
[82 174]
[83 173]
[84 172]
[85 113]
[86 112]
[87 111]
[88 110]
[89 109]
[90 108]
[91 107]
[93 105]
[94 104]
[95 103]
[121 140]
[122 139]
[124 137]
[125 136]
[126 135]
[127 134]
[128 133]
[156 170]
[157 169]
[158 168]
[159 167]
[160 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
