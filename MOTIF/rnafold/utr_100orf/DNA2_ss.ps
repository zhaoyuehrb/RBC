%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:11:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCGCGCGAGGUGCGCAGGCUCGCGCCUUUUUCCCUUUUCUAAGCUUUCUGUGUUACCCCCGGUUCCGCUGUCUUUUCUGUCUACAGUUUGCGAUCCCCGCGUCCAGGAUGGAGCAGCUGAACGAACUGGAGCUGCUGAUGGAGAAGAGUUUUUGGGAGGAGGCGGAGCUGCCGGCGGAGCUAUUUCAGAAGAAAGUGGUAGCUUCCU\
) } def
/len { sequence length } bind def

/coor [
[110.19573975 115.63610077]
[102.74938202 116.53155518]
[98.32805634 130.86514282]
[93.90673065 145.19874573]
[89.48540497 159.53233337]
[85.06407166 173.86592102]
[80.64274597 188.19952393]
[76.22142029 202.53311157]
[77.33047485 219.45074463]
[61.38100052 225.19972229]
[51.44144440 211.46504211]
[61.88782883 198.11178589]
[66.30915833 183.77818298]
[70.73048401 169.44459534]
[75.15180969 155.11100769]
[79.57313538 140.77742004]
[83.99446869 126.44381714]
[88.41579437 112.11022949]
[88.41579437 97.11022949]
[83.99446869 82.77663422]
[79.57313538 68.44304657]
[75.15180969 54.10945129]
[70.73048401 39.77585983]
[65.21020508 32.49720383]
[66.35195923 25.19468117]
[62.14554596 10.79655266]
[57.93913651 -3.60157585]
[53.73272324 -17.99970436]
[49.52631378 -32.39783478]
[45.31990433 -46.79596329]
[41.11349106 -61.19409180]
[36.90708160 -75.59221649]
[32.70066833 -89.99034882]
[28.49425888 -104.38847351]
[24.28784752 -118.78660583]
[19.54601669 -133.01737976]
[14.27539349 -147.06089783]
[9.00477123 -161.10443115]
[3.73414874 -175.14794922]
[-1.53647363 -189.19146729]
[-6.80709600 -203.23500061]
[-12.07771873 -217.27851868]
[-16.11199951 -220.59330750]
[-18.25642776 -224.71234131]
[-18.52116585 -228.78088379]
[-17.25422859 -232.07214355]
[-21.88948441 -246.33798218]
[-33.51258087 -257.07177734]
[-30.08691406 -271.56707764]
[-34.72217178 -285.83294678]
[-46.34526825 -296.56671143]
[-42.91960144 -311.06204224]
[-47.55485535 -325.32788086]
[-52.29668808 -339.55865479]
[-57.14483261 -353.75357056]
[-61.99297714 -367.94848633]
[-67.72853088 -375.05874634]
[-66.80574799 -382.39215088]
[-71.44100189 -396.65798950]
[-87.64849091 -399.92864990]
[-99.92483521 -410.86367798]
[-104.98254395 -426.40795898]
[-101.53128052 -442.28979492]
[-90.60552216 -454.19479370]
[-95.45366669 -468.38970947]
[-100.30181122 -482.58459473]
[-105.14995575 -496.77951050]
[-116.93231964 -507.33822632]
[-113.72387695 -521.88317871]
[-118.57202148 -536.07806396]
[-123.42016602 -550.27301025]
[-128.26831055 -564.46789551]
[-133.11645508 -578.66278076]
[-136.48747253 -581.40240479]
[-138.59858704 -584.73699951]
[-139.41744995 -588.19726562]
[-139.06756592 -591.35168457]
[-137.80232239 -593.85400391]
[-141.79287720 -608.31341553]
[-145.78341675 -622.77288818]
[-149.77397156 -637.23229980]
[-153.76452637 -651.69177246]
[-157.75508118 -666.15118408]
[-161.74563599 -680.61065674]
[-174.49752808 -682.65777588]
[-185.48796082 -689.35162354]
[-193.10240173 -699.66748047]
[-196.23800659 -712.05169678]
[-194.46316528 -724.65563965]
[-188.07655334 -735.61163330]
[-178.05758667 -743.30969238]
[-181.61380005 -757.88201904]
[-185.16999817 -772.45440674]
[-188.72621155 -787.02673340]
[-201.63455200 -796.55328369]
[-202.09062195 -812.58984375]
[-189.74458313 -822.83459473]
[-174.06724548 -819.42858887]
[-167.08491516 -804.98468018]
[-174.15385437 -790.58294678]
[-170.59765625 -776.01062012]
[-167.04144287 -761.43823242]
[-163.48524475 -746.86590576]
[-146.79484558 -742.64129639]
[-134.47941589 -730.48309326]
[-129.99476624 -713.67626953]
[-134.66339111 -696.82720947]
[-147.28619385 -684.60119629]
[-143.29563904 -670.14178467]
[-139.30508423 -655.68231201]
[-135.31452942 -641.22290039]
[-131.32397461 -626.76342773]
[-127.33342743 -612.30401611]
[-123.34287262 -597.84454346]
[-118.92154694 -583.51092529]
[-114.07340240 -569.31604004]
[-109.22525787 -555.12115479]
[-104.37711334 -540.92620850]
[-99.52896881 -526.73132324]
[-88.09336853 -517.18792725]
[-90.95503998 -501.62765503]
[-86.10689545 -487.43273926]
[-81.25875092 -473.23785400]
[-76.41060638 -459.04293823]
[-62.86570358 -457.29251099]
[-51.34114838 -449.84103394]
[-44.11707687 -438.09481812]
[-42.65191650 -424.31646729]
[-47.28830719 -411.18893433]
[-57.17515564 -401.29324341]
[-52.53990173 -387.02740479]
[-47.79806900 -372.79663086]
[-42.94992447 -358.60171509]
[-38.10177612 -344.40679932]
[-32.96469116 -339.09259033]
[-33.28900909 -329.96313477]
[-28.65375328 -315.69729614]
[-17.36219978 -305.98388672]
[-20.45632172 -290.46820068]
[-15.82106686 -276.20233154]
[-4.52951431 -266.48895264]
[-7.62363625 -250.97323608]
[-2.98838115 -236.70739746]
[1.96580470 -222.54914856]
[7.23642683 -208.50561523]
[12.50704956 -194.46209717]
[17.77767181 -180.41857910]
[23.04829407 -166.37504578]
[28.31891632 -152.33152771]
[33.58953857 -138.28800964]
[42.07871246 -150.65464783]
[57.02848816 -151.88110352]
[67.41967773 -141.06336975]
[65.59312439 -126.17500305]
[52.89516068 -118.18991089]
[38.68597794 -122.99301910]
[42.89238739 -108.59488678]
[47.09879684 -94.19676208]
[51.30521011 -79.79862976]
[55.51161957 -65.40049744]
[59.71803284 -51.00237274]
[63.92444229 -36.60424423]
[68.13085175 -22.20611572]
[72.33726501 -7.80798674]
[76.54367828 6.59014177]
[80.75008392 20.98826981]
[85.06407166 35.35453415]
[89.48540497 49.68812561]
[93.90673065 64.02171326]
[98.32805634 78.35530853]
[102.74938202 92.68890381]
[111.02081299 86.68164062]
[122.84484863 86.05860138]
[135.39396667 92.22077942]
[145.41152954 105.25624084]
[153.10501099 118.13297272]
[160.19352722 123.89536285]
[160.81562805 131.26037598]
[168.31562805 144.25076294]
[175.81562805 157.24113464]
[183.31562805 170.23152161]
[190.81562805 183.22190857]
[198.31562805 196.21228027]
[205.81562805 209.20266724]
[213.31562805 222.19305420]
[220.81562805 235.18342590]
[236.03211975 233.99143982]
[250.25578308 239.52769470]
[260.66250610 250.69296265]
[265.18597412 265.27038574]
[262.92813110 280.36557007]
[254.33718872 292.98138428]
[241.11894226 300.61294556]
[225.89787292 301.74499512]
[211.69612122 296.15277100]
[201.33346558 284.94659424]
[196.86740112 270.35150146]
[199.18470764 255.26531982]
[207.82524109 242.68342590]
[200.32524109 229.69305420]
[192.82524109 216.70266724]
[185.32524109 203.71228027]
[177.82524109 190.72190857]
[170.32524109 177.73152161]
[162.82524109 164.74113464]
[155.32524109 151.75076294]
[147.82524109 138.76037598]
[140.22828674 125.82646179]
[132.53479004 112.94972992]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 18]
[3 17]
[4 16]
[5 15]
[6 14]
[7 13]
[8 12]
[19 171]
[20 170]
[21 169]
[22 168]
[23 167]
[25 166]
[26 165]
[27 164]
[28 163]
[29 162]
[30 161]
[31 160]
[32 159]
[33 158]
[34 157]
[35 156]
[36 150]
[37 149]
[38 148]
[39 147]
[40 146]
[41 145]
[42 144]
[46 143]
[47 142]
[49 140]
[50 139]
[52 137]
[53 136]
[54 134]
[55 133]
[56 132]
[58 131]
[59 130]
[64 124]
[65 123]
[66 122]
[67 121]
[69 119]
[70 118]
[71 117]
[72 116]
[73 115]
[78 114]
[79 113]
[80 112]
[81 111]
[82 110]
[83 109]
[84 108]
[91 103]
[92 102]
[93 101]
[94 100]
[175 209]
[176 208]
[178 207]
[179 206]
[180 205]
[181 204]
[182 203]
[183 202]
[184 201]
[185 200]
[186 199]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
