%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:27:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCCUCUGUGAGGUGGACAUGACAAGGCCUAGCACUGGGAUUCAUUAGGCACCAGAACCCUGAAUUCCGAGAUAGAGGGAUGGUUGAUCUCAUGCUAAUGAAGUUUAGACCAUGUUGAGCCCUACUUUUGUUCUGUGGGAAGUUGGAUAUCCCUUAUACAUCUAUGGCUCCAUCUUCAUCGUUAUUGUAAUUAUCUGGCAAGUGAAAAGGA\
) } def
/len { sequence length } bind def

/coor [
[109.58852386 430.73873901]
[121.51904297 420.81692505]
[120.40864563 405.85809326]
[119.18744659 390.90786743]
[117.85550690 375.96713257]
[114.13079071 369.58435059]
[116.61621094 360.79537964]
[115.50581360 345.83654785]
[114.39541626 330.87768555]
[105.73719788 318.75811768]
[112.43168640 304.42303467]
[111.32128906 289.46417236]
[110.21089935 274.50534058]
[109.10050201 259.54650879]
[107.99010468 244.58764648]
[106.87970734 229.62881470]
[105.54776764 214.68806458]
[103.99458313 199.76869202]
[102.44139099 184.84931946]
[100.77770233 169.94186401]
[99.00360870 155.04714966]
[97.22950745 140.15243530]
[95.45541382 125.25772095]
[74.43547821 113.35268402]
[70.89625549 86.64903259]
[92.00074005 65.72277832]
[79.68518829 57.15963745]
[67.36964417 48.59650040]
[51.62216187 47.07092285]
[45.58964539 33.45262527]
[33.27410126 24.88948822]
[20.95855331 16.32635117]
[8.64300728 7.76321459]
[-3.67253923 -0.79992229]
[-12.50414658 -3.12933826]
[-16.10585594 -9.58231735]
[-28.29315948 -18.32700920]
[-40.48046112 -27.07170296]
[-61.67965317 -21.93302536]
[-79.51480865 -33.99070358]
[-82.56381226 -55.01485062]
[-95.36502075 -62.83336639]
[-108.16622162 -70.65188599]
[-120.96742249 -78.47040558]
[-133.76863098 -86.28891754]
[-146.56982422 -94.10743713]
[-159.37103271 -101.92595673]
[-172.17222595 -109.74446869]
[-181.12632751 -111.54660797]
[-185.10398865 -117.77488708]
[-197.78793335 -125.78223419]
[-213.01782227 -122.51296997]
[-225.76707458 -130.81423950]
[-228.78996277 -145.35377502]
[-241.47390747 -153.36111450]
[-254.15783691 -161.36846924]
[-267.01663208 -169.09191895]
[-280.04388428 -176.52766418]
[-293.07116699 -183.96340942]
[-297.40798950 -183.78758240]
[-301.19458008 -184.88967896]
[-304.09686279 -186.93992615]
[-305.92211914 -189.53395081]
[-306.63104248 -192.24530029]
[-319.19494629 -200.43972778]
[-331.75885010 -208.63415527]
[-344.32272339 -216.82858276]
[-356.88662720 -225.02301025]
[-371.33544922 -219.36520386]
[-386.34185791 -223.31333923]
[-396.13552856 -235.34925842]
[-396.95065308 -250.84490967]
[-388.47375488 -263.84188843]
[-373.96438599 -269.34262085]
[-359.00170898 -265.23193359]
[-349.33914185 -253.09048462]
[-348.69219971 -237.58689880]
[-336.12829590 -229.39247131]
[-323.56442261 -221.19804382]
[-311.00051880 -213.00361633]
[-298.43661499 -204.80918884]
[-285.63543701 -196.99067688]
[-272.60815430 -189.55493164]
[-259.58087158 -182.11920166]
[-256.10226440 -182.69047546]
[-252.17410278 -181.60569763]
[-248.57759094 -178.67196655]
[-246.15049744 -174.05241394]
[-233.46655273 -166.04505920]
[-220.78260803 -158.03770447]
[-206.35632324 -161.56159973]
[-193.37893677 -153.62168884]
[-189.78057861 -138.46617126]
[-177.09663391 -130.45883179]
[-164.35371399 -122.54567719]
[-151.55252075 -114.72715759]
[-138.75131226 -106.90863800]
[-125.95011139 -99.09012604]
[-113.14890289 -91.27160645]
[-100.34770203 -83.45308685]
[-87.54650116 -75.63456726]
[-74.74530029 -67.81605530]
[-67.54580688 -72.54233551]
[-59.15982819 -74.68611145]
[-50.48880768 -73.98783112]
[-42.47431183 -70.49502563]
[-35.99579239 -64.56022644]
[-31.77408409 -56.80552673]
[-30.29126740 -48.05747986]
[-31.73576927 -39.25900650]
[-19.54846573 -30.51431274]
[-7.36116314 -21.76962090]
[4.89059782 -13.11546898]
[17.20614433 -4.55233145]
[29.52169037 4.01080561]
[41.83723831 12.57394218]
[54.15278244 21.13707924]
[69.01937866 22.05016518]
[75.93278503 36.28095627]
[88.24832916 44.84409332]
[100.56387329 53.40723038]
[115.44503784 51.52281952]
[125.23736572 40.16015244]
[135.02969360 28.79748344]
[144.82203674 17.43481445]
[140.33729553 2.67369652]
[144.56692505 -12.16253376]
[156.16128540 -22.33968925]
[171.42063904 -24.61027527]
[185.47578430 -18.24975777]
[193.84179688 -5.28775406]
[193.84907532 10.13960743]
[185.49533081 23.10951233]
[171.44619751 29.48331070]
[156.18470764 27.22714615]
[146.39236450 38.58981323]
[136.60003662 49.95248413]
[126.80770874 61.31515121]
[133.25868225 74.85711670]
[148.25209045 74.41262054]
[163.24551392 73.96811676]
[178.23892212 73.52362061]
[191.80375671 65.38077545]
[204.75471497 72.73752594]
[219.74812317 72.29302216]
[234.74154663 71.84852600]
[249.73495483 71.40402222]
[256.72421265 63.07107544]
[266.93533325 60.02264786]
[276.92840576 63.03375626]
[283.47390747 70.87915039]
[298.47390747 70.87915039]
[304.62948608 56.94972992]
[315.92285156 46.73308945]
[330.39736938 41.99931717]
[345.54522705 43.56857300]
[358.74194336 51.16897202]
[367.70117188 63.48369598]
[370.87060547 78.37915039]
[367.70117188 93.27460480]
[358.74194336 105.58932495]
[345.54522705 113.18972778]
[330.39736938 114.75897980]
[315.92285156 110.02520752]
[304.62948608 99.80857086]
[298.47390747 85.87915039]
[283.47390747 85.87915039]
[267.47955322 96.74581909]
[250.17945862 86.39743805]
[235.18603516 86.84193420]
[220.19262695 87.28643799]
[205.19921875 87.73093414]
[192.70681763 95.84198761]
[178.68342590 88.51702881]
[163.69000244 88.96153259]
[148.69659424 89.40602875]
[133.70318604 89.85053253]
[132.73519897 102.28005219]
[127.64041901 112.72947693]
[119.66838837 119.99478149]
[110.35012817 123.48361969]
[112.12422943 138.37834167]
[113.89832306 153.27305603]
[115.67242432 168.16777039]
[119.79456329 176.31831360]
[117.36076355 183.29612732]
[118.91395569 198.21549988]
[120.46714020 213.13487244]
[124.03172302 218.70164490]
[124.22191620 224.38053894]
[121.83855438 228.51841736]
[122.94895172 243.47724915]
[124.05934906 258.43609619]
[125.16973877 273.39495850]
[126.28013611 288.35379028]
[127.39053345 303.31262207]
[136.12817383 316.50216675]
[129.35426331 329.76730347]
[130.46466064 344.72613525]
[131.57505798 359.68499756]
[132.79624939 374.63519287]
[134.12818909 389.57592773]
[138.00698853 397.84506226]
[135.36749268 404.74768066]
[136.47789001 419.70654297]
[149.74256897 427.75808716]
[155.71026611 442.08172607]
[152.08627319 457.16967773]
[140.26408386 467.22033691]
[124.78958893 468.36901855]
[111.61302948 460.17401123]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 205]
[3 204]
[4 202]
[5 201]
[7 200]
[8 199]
[9 198]
[11 196]
[12 195]
[13 194]
[14 193]
[15 192]
[16 191]
[17 188]
[18 187]
[19 186]
[20 184]
[21 183]
[22 182]
[23 181]
[26 121]
[27 120]
[28 119]
[30 117]
[31 116]
[32 115]
[33 114]
[34 113]
[36 112]
[37 111]
[38 110]
[41 102]
[42 101]
[43 100]
[44 99]
[45 98]
[46 97]
[47 96]
[48 95]
[50 94]
[51 93]
[54 90]
[55 89]
[56 88]
[57 84]
[58 83]
[59 82]
[64 81]
[65 80]
[66 79]
[67 78]
[68 77]
[122 138]
[123 137]
[124 136]
[125 135]
[139 177]
[140 176]
[141 175]
[142 174]
[144 172]
[145 171]
[146 170]
[147 169]
[151 167]
[152 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
