%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:04:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUCUGCCCUUCUUUGCUUUGGUGGCUUCCUUGUGGUUCCUCAGUGGUGCCUGCAACCCCUGGUUCACCUCCUUCCAGGUUCUGGCUCCUUCCAGCCAUGGCUCUCAGAGUCCUUCUGUUAACAGCCUUGACCUUAUGUCAUGGGUUCAACUUGGACACUGAAAACGCAAUGACCUUCCAAGAGAACGCAAGGGGCU\
) } def
/len { sequence length } bind def

/coor [
[124.05633545 313.71051025]
[110.84026337 321.84164429]
[95.37150574 320.61807251]
[83.59811401 310.51031494]
[80.04718781 295.40499878]
[86.08414459 281.11044312]
[99.38764191 273.12316895]
[100.57043457 258.16986084]
[101.75321960 243.21656799]
[102.93601227 228.26327515]
[104.11879730 213.30998230]
[105.30158234 198.35668945]
[98.35562134 195.52763367]
[92.69729614 209.41947937]
[78.80553436 203.76094055]
[84.46368408 189.86952209]
[77.51772308 187.04046631]
[67.91627502 198.56489563]
[58.31483459 210.08930969]
[58.33133316 226.13235474]
[45.70921707 236.03497314]
[30.13109016 232.20071411]
[23.54715919 217.57089233]
[31.00805473 203.36827087]
[46.79041290 200.48786926]
[56.39185715 188.96343994]
[65.99330139 177.43902588]
[62.26040268 170.93399048]
[49.25020981 178.39956665]
[41.78484726 165.38925171]
[54.79460907 157.92391968]
[51.06171036 151.41888428]
[36.26731873 153.89395142]
[21.47292519 156.36901855]
[6.67853260 158.84408569]
[-8.09586239 161.43585205]
[-22.84934044 164.14414978]
[-37.60281754 166.85246277]
[-49.77918625 176.95426941]
[-63.69428635 171.64208984]
[-78.44776154 174.35038757]
[-88.70417786 186.68673706]
[-104.74031067 186.21549988]
[-114.25460815 173.29815674]
[-109.94851685 157.84379578]
[-95.12530518 151.70768738]
[-81.15606689 159.59690857]
[-66.40258789 156.88861084]
[-55.28148651 146.98051453]
[-40.31112289 152.09898376]
[-25.55764389 149.39067078]
[-10.80416775 146.68237305]
[-4.78697157 142.37835693]
[4.20346689 144.04968262]
[18.99785995 141.57463074]
[33.79225159 139.09956360]
[48.58664322 136.62449646]
[44.88858032 114.41243744]
[49.48751450 94.55417633]
[60.20711136 79.75756073]
[48.17002869 70.80721283]
[36.13294601 61.85687256]
[24.09586334 52.90653229]
[12.05878067 43.95618820]
[-1.70785749 50.64485550]
[-17.00562477 50.15811157]
[-30.31920433 42.60780334]
[-38.58923721 29.72893715]
[-39.91532516 14.48098373]
[-33.99274826 0.36781046]
[-22.18246651 -9.36747837]
[-7.19839907 -12.48778534]
[7.51622534 -8.27608681]
[18.58009529 2.29979992]
[23.45081139 16.80961418]
[21.00912285 31.91910553]
[33.04620743 40.86944962]
[45.08329010 49.81978989]
[57.12037277 58.77013397]
[69.15745544 67.72047424]
[72.02019501 65.20976257]
[75.08645630 62.95211792]
[78.33394623 60.96396255]
[81.73903656 59.25975800]
[77.99034119 44.73573303]
[74.24164581 30.21170807]
[70.49295044 15.68768311]
[66.74425507 1.16365850]
[53.00509262 -6.64729166]
[48.89382553 -21.90746880]
[56.84959793 -35.56328201]
[72.15238953 -39.51298141]
[85.72332764 -31.41327477]
[89.51100922 -16.06958008]
[81.26828003 -2.58503604]
[85.01697540 11.93898869]
[88.76567078 26.46301270]
[92.51436615 40.98703766]
[96.26306152 55.51106262]
[104.92367554 55.62672424]
[113.39897919 57.41246796]
[120.24046326 44.06353378]
[127.08194733 30.71460152]
[133.92343140 17.36566544]
[126.74825287 -1.39150417]
[135.53118896 -19.11214256]
[154.21783447 -24.58961868]
[160.41967773 -38.24748230]
[166.62152100 -51.90534592]
[172.82334900 -65.56320953]
[168.55335999 -81.02757263]
[178.09777832 -93.92266846]
[194.13496399 -94.35647583]
[204.36256409 -81.99621582]
[200.93481445 -66.32362366]
[186.48121643 -59.36137009]
[180.27937317 -45.70350647]
[174.07754517 -32.04564285]
[167.87570190 -18.38778114]
[173.94786072 -10.09045219]
[176.03929138 0.05898604]
[173.70596313 10.23848057]
[167.30444336 18.59201241]
[157.93916321 23.56797218]
[147.27236938 24.20715332]
[140.43087769 37.55608749]
[133.58940125 50.90502167]
[126.74790955 64.25395966]
[153.88114929 100.64318848]
[136.60160828 151.42965698]
[150.30799866 145.33581543]
[164.01438904 139.24197388]
[177.72077942 133.14814758]
[184.79689026 118.74994659]
[200.49606323 115.44602203]
[212.77520752 125.77085114]
[212.21482849 141.80412292]
[199.24479675 151.24645996]
[183.81460571 146.85453796]
[170.10821533 152.94836426]
[156.40182495 159.04220581]
[142.69543457 165.13604736]
[141.63072205 180.09820557]
[154.33607483 188.07153320]
[170.13795471 188.85339355]
[176.80546570 202.17231750]
[189.51081848 210.14562988]
[202.21618652 218.11895752]
[214.92153931 226.09226990]
[227.65231323 223.98135376]
[238.07275391 230.89186096]
[240.89364624 242.66122437]
[253.47155762 250.83410645]
[266.04946899 259.00701904]
[278.62738037 267.17990112]
[291.20529175 275.35281372]
[303.78320312 283.52569580]
[316.61285400 291.29745483]
[329.68142700 298.66030884]
[345.50259399 298.69320679]
[352.79318237 311.68151855]
[365.86178589 319.04440308]
[381.01434326 314.55264282]
[394.86489868 322.16430664]
[399.19619751 337.36349487]
[391.43853760 351.13281250]
[376.19439697 355.30316162]
[362.50787354 347.40036011]
[358.49893188 332.11297607]
[345.43032837 324.75012207]
[330.54391479 325.24386597]
[322.31857300 311.72891235]
[309.24996948 304.36605835]
[306.50906372 304.99673462]
[303.35205078 304.57427979]
[300.18078613 302.93432617]
[297.44931030 300.06158447]
[295.61029053 296.10360718]
[283.03237915 287.93069458]
[270.45446777 279.75781250]
[257.87658691 271.58493042]
[245.29866028 263.41201782]
[232.72074890 255.23912048]
[215.17596436 255.26635742]
[206.94822693 238.79763794]
[194.24285889 230.82431030]
[181.53750610 222.85099792]
[168.83213806 214.87767029]
[153.93904114 214.66610718]
[146.36276245 200.77688599]
[133.65739441 192.80357361]
[120.25488281 199.53947449]
[119.07209015 214.49276733]
[117.88930511 229.44606018]
[116.70651245 244.39935303]
[115.52372742 259.35266113]
[114.34094238 274.30593872]
[126.22328949 284.28540039]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 197]
[8 196]
[9 195]
[10 194]
[11 193]
[12 192]
[17 27]
[18 26]
[19 25]
[32 57]
[33 56]
[34 55]
[35 54]
[36 52]
[37 51]
[38 50]
[40 48]
[41 47]
[60 80]
[61 79]
[62 78]
[63 77]
[64 76]
[84 99]
[85 98]
[86 97]
[87 96]
[88 95]
[101 128]
[102 127]
[103 126]
[104 125]
[107 119]
[108 118]
[109 117]
[110 116]
[130 142]
[131 141]
[132 140]
[133 139]
[143 191]
[144 190]
[146 188]
[147 187]
[148 186]
[149 185]
[152 183]
[153 182]
[154 181]
[155 180]
[156 179]
[157 178]
[158 173]
[159 172]
[161 170]
[162 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
