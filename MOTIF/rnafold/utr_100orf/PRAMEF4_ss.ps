%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:07:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCCUGCUUGGUUCUUCCUGAGAUCUGAGCACCUUCUAGACUACAUCCAGAUCUGUUUUCCCUGCAGAUUCAUGAAGAUGAGCAUCUGGACUCCACCCAGACUCCUGGAGCUUGCAGGGCGGAGCCUGCUAAGGGACCAAGCUUUGGCCAUGUCCACCCUGGAGGAGCUGC\
) } def
/len { sequence length } bind def

/coor [
[119.35427856 137.46212769]
[109.91081238 140.41751099]
[100.16691589 141.06311035]
[90.67203522 139.42349243]
[81.94738770 135.65039062]
[72.77978516 147.52282715]
[63.61217880 159.39527893]
[54.44457245 171.26773071]
[45.27696609 183.14018250]
[36.10935974 195.01261902]
[26.94175339 206.88507080]
[24.63149834 222.53669739]
[10.72887802 227.88145447]
[1.56127191 239.75389099]
[-7.60633373 251.62634277]
[-16.77393913 263.49877930]
[-21.66874504 279.73077393]
[-38.62139130 279.52072144]
[-43.11250305 263.17242432]
[-28.64638710 254.33119202]
[-19.47878075 242.45874023]
[-10.31117535 230.58628845]
[-1.14356971 218.71383667]
[0.51095831 203.91142273]
[15.06930733 197.71746826]
[24.23691177 185.84501648]
[33.40451813 173.97256470]
[42.57212448 162.10012817]
[51.73973083 150.22767639]
[60.90733719 138.35522461]
[70.07494354 126.48278046]
[63.39052200 116.01851654]
[60.24090195 104.00760651]
[60.93018723 91.60974121]
[65.39182281 80.02198792]
[54.03928375 70.21791840]
[42.68674469 60.41384125]
[31.33420753 50.60976791]
[19.98166847 40.80569458]
[8.62913036 31.00161934]
[-2.90057659 21.40652466]
[-14.60360622 12.02360821]
[-23.29108238 9.08133698]
[-26.43263817 2.36088538]
[-37.96234512 -7.23421001]
[-49.49205399 -16.82930565]
[-61.02175903 -26.42440033]
[-72.72479248 -35.80731583]
[-84.59723663 -44.97492218]
[-96.63513947 -53.92416000]
[-108.83448792 -62.65204239]
[-121.03383636 -71.37992859]
[-133.23318481 -80.10781097]
[-145.43252563 -88.83569336]
[-157.63186646 -97.56357574]
[-169.83122253 -106.29145813]
[-184.93019104 -102.22266388]
[-199.09017944 -108.85806274]
[-205.62528992 -123.06462097]
[-201.44982910 -138.13444519]
[-188.53532410 -146.95201111]
[-172.97961426 -145.35395813]
[-162.12762451 -134.09480286]
[-161.10333252 -118.49080658]
[-148.90399170 -109.76292419]
[-136.70463562 -101.03504181]
[-124.50529480 -92.30715942]
[-112.30594635 -83.57926941]
[-100.10660553 -74.85138702]
[-87.90725708 -66.12350464]
[-83.09900665 -66.01593781]
[-78.31576538 -62.86186981]
[-75.42963409 -56.84737015]
[-63.55718231 -47.67976379]
[-58.75606918 -47.39665985]
[-54.09121323 -44.07000351]
[-51.42666245 -37.95410919]
[-39.89695740 -28.35901260]
[-28.36725044 -18.76391792]
[-16.83754349 -9.16882229]
[-5.22069025 0.32057935]
[6.48233891 9.70349503]
[11.27748203 10.07423878]
[15.88080311 13.48553944]
[18.43320465 19.64908028]
[29.78574371 29.45315552]
[41.13828278 39.25722885]
[52.49082184 49.06130219]
[63.84335709 58.86537552]
[75.19589996 68.66944885]
[82.09317780 63.57257462]
[90.03691101 60.00115204]
[98.68824768 58.16934204]
[107.66477966 58.21574783]
[116.55742645 60.19464111]
[124.94908142 64.07097626]
[132.43415833 69.71951294]
[140.93777466 57.36279297]
[149.44139099 45.00607681]
[157.94500732 32.64935684]
[158.70153809 16.26766968]
[173.38909912 8.97333622]
[186.89840698 18.27014160]
[185.33224487 34.59432983]
[170.30172729 41.15297699]
[161.79811096 53.50969315]
[153.29449463 65.86640930]
[144.79087830 78.22312927]
[149.24336243 92.54707336]
[163.25360107 97.90554047]
[177.26383972 103.26399994]
[191.27407837 108.62246704]
[205.28433228 113.98092651]
[224.99581909 109.87662506]
[236.57966614 125.33216858]
[250.77626038 130.17538452]
[264.97286987 135.01858521]
[279.16946411 139.86178589]
[293.36605835 144.70500183]
[308.92532349 141.83790588]
[318.47268677 153.27018738]
[332.66928101 158.11338806]
[346.86587524 162.95660400]
[358.44818115 152.96672058]
[373.37713623 150.13424683]
[387.62472534 155.12145996]
[397.39767456 166.49449158]
[400.14721680 181.13366699]
[414.34381104 185.97688293]
[428.54040527 190.82008362]
[442.73703003 195.66328430]
[456.93362427 200.50650024]
[471.13021851 205.34970093]
[485.32681274 210.19290161]
[498.61337280 201.94662476]
[514.08465576 204.22120667]
[524.43554688 215.94265747]
[524.77874756 231.57647705]
[514.95214844 243.74084473]
[499.59558105 246.69212341]
[485.95996094 239.03680420]
[480.48361206 224.38951111]
[466.28701782 219.54629517]
[452.09039307 214.70309448]
[437.89379883 209.85987854]
[423.69720459 205.01667786]
[409.50061035 200.17347717]
[395.30401611 195.33026123]
[384.18066406 205.23666382]
[369.49453735 208.26542664]
[355.16955566 203.50503540]
[345.08447266 192.13894653]
[342.02267456 177.15319824]
[327.82608032 172.30999756]
[313.62948608 167.46678162]
[299.08566284 170.68028259]
[288.52285767 158.90159607]
[274.32626343 154.05838013]
[260.12966919 149.21517944]
[245.93305969 144.37197876]
[231.73646545 139.52876282]
[222.96582031 144.85897827]
[212.49032593 144.45336914]
[203.80061340 138.20426941]
[199.92585754 127.99117279]
[185.91561890 122.63270569]
[171.90538025 117.27424622]
[157.89514160 111.91577911]
[143.88490295 106.55731964]
[140.61743164 116.44606781]
[135.18754578 125.18057251]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 31]
[6 30]
[7 29]
[8 28]
[9 27]
[10 26]
[11 25]
[13 23]
[14 22]
[15 21]
[16 20]
[35 90]
[36 89]
[37 88]
[38 87]
[39 86]
[40 85]
[41 82]
[42 81]
[44 80]
[45 79]
[46 78]
[47 77]
[48 74]
[49 73]
[50 70]
[51 69]
[52 68]
[53 67]
[54 66]
[55 65]
[56 64]
[97 108]
[98 107]
[99 106]
[100 105]
[109 169]
[110 168]
[111 167]
[112 166]
[113 165]
[115 161]
[116 160]
[117 159]
[118 158]
[119 157]
[121 155]
[122 154]
[123 153]
[128 148]
[129 147]
[130 146]
[131 145]
[132 144]
[133 143]
[134 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
