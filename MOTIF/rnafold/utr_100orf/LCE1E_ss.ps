%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:34:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGAAGGACCCUGUGCUGCCUGUGACUUUGCUCCUAAGUACCUACUGCCGAGAUGUCCUGCCAGCAGAGCCAGCAGCAGUGCCAGCCCCCUCCCAAGUGCACUCCCAAGUGCCCUCCCAAGUGUCCCACCCCCAAAUGCCCUCCAAAGUGUC\
) } def
/len { sequence length } bind def

/coor [
[80.52856445 289.18145752]
[81.81815338 274.19555664]
[85.76306152 259.68081665]
[92.23646545 246.10383606]
[101.03027344 233.90101624]
[111.86180878 223.46466064]
[124.38288116 215.13023376]
[118.43128204 201.36148071]
[112.47967529 187.59274292]
[106.52807617 173.82398987]
[94.37603760 165.21136475]
[96.00269318 149.47401428]
[90.05109406 135.70526123]
[81.60958862 101.40591431]
[67.84083557 95.45431519]
[54.07208633 89.50271606]
[40.30334091 83.55110931]
[26.53458977 77.59951019]
[12.76584148 71.64791107]
[-1.00290728 65.69631195]
[-10.18300152 65.15392303]
[-14.98985863 59.48030853]
[-28.63433838 53.24908447]
[-42.27882004 47.01786041]
[-58.52155304 53.43543243]
[-74.08670807 46.28834915]
[-79.58457947 30.42333412]
[-93.35332489 24.47173309]
[-107.12207794 18.52013206]
[-120.89082336 12.56853008]
[-134.65957642 6.61692858]
[-148.42832947 0.66532755]
[-162.19706726 -5.28627348]
[-173.53448486 2.61264896]
[-187.18760681 3.85258198]
[-199.56512451 -1.78482378]
[-207.46456909 -12.72301292]
[-208.90071106 -26.02970695]
[-222.54518127 -32.26093292]
[-238.31245422 -30.95563507]
[-246.67539978 -43.28083038]
[-260.31988525 -49.51205826]
[-272.34921265 -43.37351608]
[-285.52267456 -45.27561569]
[-295.04110718 -54.29812241]
[-297.56829834 -66.96871185]
[-311.08282471 -73.47696686]
[-327.38677979 -71.71255493]
[-336.84704590 -85.10789490]
[-329.73171997 -99.88301849]
[-313.36044312 -100.83853912]
[-304.57455444 -86.99150085]
[-291.06002808 -80.48324585]
[-275.46972656 -86.71760559]
[-259.87530518 -79.63459015]
[-254.08865356 -63.15653610]
[-240.44416809 -56.92531204]
[-225.65284729 -58.67630768]
[-216.31396484 -45.90541458]
[-202.66947937 -39.67418671]
[-188.67172241 -48.19678116]
[-172.18524170 -46.70336914]
[-159.69909668 -35.58367157]
[-156.24546814 -19.05502319]
[-142.47671509 -13.10342121]
[-128.70797729 -7.15182018]
[-114.93922424 -1.20021880]
[-101.17047119 4.75138235]
[-87.40172577 10.70298386]
[-73.63298035 16.65458488]
[-62.40222931 10.26703644]
[-49.35021973 11.55210400]
[-39.28592300 20.26233864]
[-36.04759216 33.37337875]
[-22.40311241 39.60460663]
[-8.75863361 45.83583069]
[4.94869375 51.92755890]
[18.71744347 57.87916183]
[32.48619080 63.83076096]
[46.25494003 69.78236389]
[60.02368927 75.73396301]
[73.79243469 81.68556976]
[87.56118774 87.63716888]
[74.61430359 80.06232452]
[65.69958496 67.99883270]
[62.25948715 53.39863968]
[64.85063171 38.62413788]
[73.05376434 26.06592751]
[85.54156494 17.75600433]
[100.29343414 15.03896141]
[114.92243958 18.35443306]
[127.06150818 27.16595650]
[134.74647522 40.04777527]
[136.73387146 54.91553497]
[132.70211792 69.36354065]
[123.30358124 81.05403137]
[110.05650330 88.09613800]
[124.05654907 82.71109772]
[134.15904236 70.53529358]
[148.81558228 73.18766785]
[162.81562805 67.80262756]
[176.81567383 62.41758728]
[190.81573486 57.03254700]
[204.81578064 51.64750671]
[214.70108032 38.56267548]
[230.94000244 40.84942627]
[236.82734680 56.15534973]
[226.30670166 68.73502350]
[210.20082092 65.64755249]
[196.20077515 71.03259277]
[182.20071411 76.41763306]
[168.20066833 81.80268097]
[154.20062256 87.18772125]
[145.09950256 98.97834778]
[129.44158936 96.71114349]
[115.44154358 102.09618378]
[112.53611755 109.01055145]
[126.36476135 114.82163239]
[120.55345154 128.65017700]
[106.72526550 122.83928680]
[103.81983948 129.75366211]
[109.77143860 143.52239990]
[122.34917450 153.11985779]
[120.29682159 167.87239075]
[126.24842834 181.64114380]
[132.20002747 195.40988159]
[138.15162659 209.17863464]
[152.80120850 205.76841736]
[167.82429504 205.02900696]
[182.73794556 206.98417664]
[197.06275940 211.57104492]
[210.33825684 218.64219666]
[222.13768005 227.97029114]
[232.08171082 239.25550842]
[239.85070801 252.13504028]
[245.19493103 266.19488525]
[247.94258118 280.98306274]
[248.00532532 296.02420044]
[245.38116455 310.83477783]
[240.15443420 324.93872070]
[232.49316406 337.88262939]
[222.64363098 349.25039673]
[210.92243958 358.67663574]
[197.70640564 365.85830688]
[183.42036438 370.56451416]
[168.52354431 372.64404297]
[153.49481201 372.02999878]
[138.81729126 368.74212646]
[124.96279144 362.88613892]
[112.37668610 354.65026855]
[101.46356201 344.29925537]
[92.57423401 332.16583252]
[85.99446106 318.64007568]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 127]
[8 126]
[9 125]
[10 124]
[12 122]
[13 121]
[14 83]
[15 82]
[16 81]
[17 80]
[18 79]
[19 78]
[20 77]
[22 76]
[23 75]
[24 74]
[27 70]
[28 69]
[29 68]
[30 67]
[31 66]
[32 65]
[33 64]
[38 60]
[39 59]
[41 57]
[42 56]
[46 53]
[47 52]
[97 116]
[98 115]
[100 113]
[101 112]
[102 111]
[103 110]
[104 109]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
