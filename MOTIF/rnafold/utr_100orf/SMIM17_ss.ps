%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:22:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCAGUGCGGCGCCAGCUCUGCAGAGCCCAGACAGGGUCCGGUUGGGGAGGUCCUCAGGUUCUGAAUCUUGUGCCUGGAGAACCAGAGAGGACCCUGGAGCAGGAGGAGAAAGAGAAGCUUGUCUCAGAAGCUCCACCUCCUCCUGGGGCAAUGCAGAGUCUCAGGCCUGAGCAGACACGGGGGCUGCUGGAGCCUGAGAGGACCAAGACUCUGCUGCCUCGGGAGAGCCGGGCCUGGGAGAAGCCUCCUC\
) } def
/len { sequence length } bind def

/coor [
[33.81220245 259.96282959]
[26.36432648 259.08013916]
[19.88005257 272.60620117]
[13.39578152 286.13226318]
[13.51908016 292.69906616]
[10.74030590 297.61755371]
[6.57886553 299.91064453]
[-0.23928855 313.27151489]
[-1.34640098 322.31076050]
[-7.22595549 326.75515747]
[-14.20948601 340.03033447]
[-21.19301796 353.30551147]
[-14.19853973 365.16497803]
[-13.97213745 378.82336426]
[-20.46608543 390.71826172]
[-31.89372826 397.79986572]
[-45.21966553 398.31274414]
[-52.36749649 411.50018311]
[-54.59947586 428.30657959]
[-71.36693573 430.81430054]
[-78.41834259 415.39630127]
[-65.55493164 404.35235596]
[-58.40710068 391.16491699]
[-65.95627594 376.57409668]
[-63.28455734 360.19607544]
[-51.25090790 348.52914429]
[-34.46819305 346.32199097]
[-27.48466301 333.04681396]
[-20.50113106 319.77163696]
[-13.60015583 306.45333862]
[-6.78200150 293.09246826]
[-0.13027564 279.64797974]
[6.35399675 266.12191772]
[12.83826923 252.59587097]
[36.10951233 235.65420532]
[56.56243515 240.78349304]
[60.24946976 226.24369812]
[63.93650436 211.70388794]
[67.62353516 197.16409302]
[71.31056976 182.62429810]
[74.99760437 168.08448792]
[78.68463898 153.54469299]
[82.37167358 139.00489807]
[86.05870819 124.46508789]
[89.74574280 109.92529297]
[85.51975250 95.53289795]
[74.55721283 85.29460144]
[63.59467316 75.05630493]
[52.63213348 64.81800842]
[34.81387329 79.36308289]
[19.03685951 66.36196136]
[4.47444868 62.76527023]
[-10.08796215 59.16857910]
[-24.65037346 55.57188797]
[-39.21278381 51.97520065]
[-53.77519608 48.37850952]
[-68.33760834 44.78181839]
[-87.45567322 51.22917938]
[-100.76174164 37.17803955]
[-115.40897369 33.94407654]
[-130.05621338 30.71011162]
[-144.70344543 27.47614670]
[-159.35067749 24.24218178]
[-173.99790955 21.00821686]
[-182.37867737 33.66234970]
[-194.76698303 42.43130112]
[-209.48739624 46.12913895]
[-224.54908752 44.25576782]
[-237.91511536 37.06453705]
[-247.77783203 25.52800941]
[-252.80335999 11.20640182]
[-252.31205750 -3.96340537]
[-246.37037659 -17.92982101]
[-235.78186035 -28.80400085]
[-221.97853088 -35.11530304]
[-206.82716370 -36.01017380]
[-192.37687683 -31.36758995]
[-180.58193970 -21.81542206]
[-173.03752136 -8.64552498]
[-170.76394653 6.36098289]
[-156.11671448 9.59494781]
[-141.46948242 12.82891273]
[-126.82224274 16.06287766]
[-112.17501068 19.29684258]
[-97.52777863 22.53080750]
[-89.47281647 16.29722595]
[-79.09928131 15.49509239]
[-69.79773712 20.62783051]
[-64.74091339 30.21940804]
[-50.17850494 33.81609726]
[-35.61609650 37.41278839]
[-21.05368423 41.00947952]
[-6.49127245 44.60616684]
[8.07113838 48.20285797]
[22.63355064 51.79954910]
[29.93901634 45.45770645]
[40.73226547 44.40244675]
[37.22605896 29.81798744]
[33.71984863 15.23352528]
[30.21364021 0.64906466]
[26.70743179 -13.93539619]
[23.20122528 -28.51985741]
[9.61392403 -31.78134155]
[-1.19470823 -40.53247070]
[-7.15508890 -53.02439499]
[-7.15756750 -66.79932404]
[-1.25857294 -79.17403412]
[9.34145832 -87.76255035]
[6.01661634 -102.38942719]
[2.69177437 -117.01629639]
[-0.63306755 -131.64317322]
[-4.04865837 -146.24911499]
[-7.55486631 -160.83358765]
[-11.06107426 -175.41804504]
[-23.93666077 -184.98876953]
[-24.33773613 -201.02680969]
[-11.95662975 -211.22914124]
[3.70893383 -207.76942444]
[10.64167404 -193.30165100]
[3.52338648 -178.92425537]
[7.02959442 -164.33978271]
[10.53580284 -149.75532532]
[15.14253139 -144.00209045]
[13.99380589 -134.96801758]
[17.31864738 -120.34114075]
[20.64348984 -105.71426392]
[23.96833229 -91.08739471]
[39.52801514 -86.68181610]
[50.80209732 -74.95761871]
[54.63958740 -59.05472565]
[49.89900589 -43.29911804]
[37.78568649 -32.02606583]
[41.29189301 -17.44160461]
[44.79810333 -2.85714340]
[48.30430984 11.72731781]
[51.81051636 26.31177902]
[55.31672668 40.89624023]
[62.87042999 53.85546494]
[73.83296967 64.09376526]
[84.79550934 74.33206177]
[95.75804901 84.57035828]
[113.54873657 88.77672577]
[128.42141724 86.82653046]
[143.29411316 84.87632751]
[158.16679382 82.92613220]
[173.03947449 80.97592926]
[187.91215515 79.02573395]
[202.78485107 77.07553864]
[217.65753174 75.12533569]
[232.53021240 73.17514038]
[247.40289307 71.22494507]
[262.27557373 69.27474213]
[267.71047974 65.58691406]
[273.34838867 65.23043060]
[277.54125977 67.46553040]
[292.45779419 65.88525391]
[307.37429810 64.30497742]
[322.29083252 62.72470093]
[337.20736694 61.14442444]
[352.12387085 59.56415176]
[367.04040527 57.98387527]
[381.95693970 56.40359879]
[396.76193237 53.99271393]
[411.40914917 50.75875092]
[426.05639648 47.52478409]
[440.70361328 44.29082108]
[455.35086060 41.05685425]
[469.99807739 37.82289124]
[484.62496948 34.49805069]
[499.23092651 31.08245850]
[506.84985352 26.09391975]
[514.03942871 27.71633148]
[528.68664551 24.48236656]
[543.33386230 21.24840164]
[557.98114014 18.01443672]
[572.62835693 14.78047180]
[577.87817383 0.27382675]
[590.15136719 -9.07349396]
[605.53155518 -10.27879429]
[619.11102295 -2.95746803]
[626.55657959 10.55427742]
[625.49237061 25.94489288]
[616.25805664 38.30328751]
[601.80010986 43.68594360]
[586.73217773 40.37527466]
[575.86230469 29.42770576]
[561.21508789 32.66167068]
[546.56787109 35.89563370]
[531.92059326 39.12960052]
[517.27337646 42.36356354]
[502.64651489 45.68840790]
[488.04055786 49.10399628]
[482.25881958 53.67491913]
[473.23205566 52.47012711]
[458.58480835 55.70409012]
[443.93759155 58.93805695]
[429.29034424 62.17201996]
[414.64312744 65.40598297]
[399.99588013 68.63995361]
[413.58981323 74.98072052]
[421.67269897 87.61665344]
[421.72991943 102.61653900]
[413.74362183 115.31375122]
[400.19845581 121.75801849]
[385.30847168 119.94445038]
[373.70617676 110.43728638]
[369.00112915 96.19429779]
[372.65713501 81.64667511]
[383.53720093 71.32012177]
[368.62069702 72.90039825]
[353.70416260 74.48067474]
[338.78762817 76.06095123]
[323.87109375 77.64122772]
[308.95458984 79.22150421]
[294.03805542 80.80178070]
[279.12152100 82.38205719]
[264.22576904 84.14743042]
[249.35308838 86.09762573]
[234.48040771 88.04782104]
[219.60772705 89.99802399]
[204.73504639 91.94821930]
[189.86235046 93.89841461]
[174.98966980 95.84861755]
[160.11698914 97.79881287]
[145.24430847 99.74901581]
[130.37162781 101.69921112]
[115.49893951 103.64940643]
[104.28553772 113.61232758]
[100.59850311 128.15213013]
[96.91147614 142.69192505]
[93.22444153 157.23171997]
[89.53740692 171.77153015]
[85.85037231 186.31132507]
[82.16333771 200.85112000]
[78.47630310 215.39093018]
[74.78926849 229.93072510]
[71.10223389 244.47052002]
[70.82286072 259.46792603]
[73.96582794 274.13494873]
[77.10878754 288.80197144]
[80.25175476 303.46902466]
[83.39471436 318.13604736]
[94.78356934 329.93545532]
[89.99993896 345.62139893]
[73.96482086 349.05752563]
[63.17376328 336.70904541]
[68.72768402 321.27902222]
[65.58472443 306.61196899]
[62.44175720 291.94494629]
[59.29879379 277.27792358]
[56.15583038 262.61090088]
[48.70795441 261.72821045]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 34]
[3 33]
[4 32]
[7 31]
[8 30]
[10 29]
[11 28]
[12 27]
[17 23]
[18 22]
[36 237]
[37 236]
[38 235]
[39 234]
[40 233]
[41 232]
[42 231]
[43 230]
[44 229]
[45 228]
[46 141]
[47 140]
[48 139]
[49 138]
[51 95]
[52 94]
[53 93]
[54 92]
[55 91]
[56 90]
[57 89]
[59 85]
[60 84]
[61 83]
[62 82]
[63 81]
[64 80]
[97 137]
[98 136]
[99 135]
[100 134]
[101 133]
[102 132]
[108 127]
[109 126]
[110 125]
[111 124]
[112 122]
[113 121]
[114 120]
[142 227]
[143 226]
[144 225]
[145 224]
[146 223]
[147 222]
[148 221]
[149 220]
[150 219]
[151 218]
[152 217]
[155 216]
[156 215]
[157 214]
[158 213]
[159 212]
[160 211]
[161 210]
[162 209]
[163 199]
[164 198]
[165 197]
[166 196]
[167 195]
[168 194]
[169 192]
[170 191]
[172 190]
[173 189]
[174 188]
[175 187]
[176 186]
[238 251]
[239 250]
[240 249]
[241 248]
[242 247]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
