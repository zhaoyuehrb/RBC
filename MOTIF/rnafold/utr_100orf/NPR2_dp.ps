%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:43:42 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NPR2)
} def

/sequence { (\
AUGGCGCUGCCAUCACUUCUGCUGUUGGUGGCAGCCCUGGCAGGUGGGGUGCGUCCUCCCGGGGCGCGGAACCUGACGCUGGCGGUGGUGCUGCCAGAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 13 0.021571763 ubox
2 12 0.025320821 ubox
2 39 0.086878504 ubox
2 42 0.029852567 ubox
2 78 0.007027055 ubox
2 96 0.066115412 ubox
3 11 0.026425825 ubox
3 36 0.021876698 ubox
3 37 0.973727085 ubox
3 38 0.166370512 ubox
3 41 0.032902475 ubox
3 77 0.006370557 ubox
3 80 0.005482965 ubox
3 92 0.004632051 ubox
3 95 0.073383376 ubox
4 10 0.026427630 ubox
4 35 0.020574900 ubox
4 36 0.975390410 ubox
4 37 0.175758790 ubox
4 41 0.023022232 ubox
4 79 0.007181241 ubox
4 91 0.004810277 ubox
4 94 0.073396577 ubox
5 9 0.026235379 ubox
5 34 0.019303041 ubox
5 39 0.032520149 ubox
5 40 0.023339249 ubox
5 78 0.007818096 ubox
5 90 0.004815777 ubox
5 93 0.073340518 ubox
6 32 0.013019926 ubox
6 35 0.997866829 ubox
6 38 0.004254320 ubox
6 91 0.036648691 ubox
6 92 0.028207362 ubox
7 31 0.013061593 ubox
7 34 0.998649430 ubox
7 90 0.037023627 ubox
8 30 0.013013197 ubox
8 33 0.999178310 ubox
9 29 0.013069299 ubox
9 32 0.999541356 ubox
9 89 0.003605526 ubox
10 28 0.013104215 ubox
10 31 0.999547319 ubox
10 88 0.003692390 ubox
11 27 0.013104677 ubox
11 30 0.999538255 ubox
11 87 0.003692319 ubox
12 26 0.012781030 ubox
12 29 0.999277987 ubox
12 86 0.003671556 ubox
13 28 0.998809702 ubox
13 85 0.003607516 ubox
14 21 0.005668790 ubox
14 24 0.014072022 ubox
14 27 0.998525605 ubox
14 84 0.003589925 ubox
15 20 0.005424202 ubox
15 23 0.013993147 ubox
15 25 0.654407412 ubox
15 26 0.736832059 ubox
15 29 0.003973199 ubox
16 24 0.926877174 ubox
16 28 0.005101808 ubox
17 27 0.005151225 ubox
17 99 0.004629080 ubox
18 98 0.005430520 ubox
19 27 0.004198748 ubox
19 97 0.005479615 ubox
20 96 0.004129398 ubox
24 100 0.004204542 ubox
25 97 0.019686050 ubox
25 99 0.004024290 ubox
26 96 0.025076425 ubox
27 95 0.026174832 ubox
28 94 0.026265376 ubox
29 93 0.026211058 ubox
29 96 0.003417862 ubox
30 92 0.026170669 ubox
30 95 0.003802721 ubox
31 91 0.026275675 ubox
31 94 0.003823795 ubox
32 90 0.026236346 ubox
32 93 0.003824130 ubox
33 89 0.021245334 ubox
33 92 0.004085034 ubox
34 65 0.004536183 ubox
34 89 0.040585534 ubox
34 91 0.004200625 ubox
35 64 0.004692682 ubox
35 88 0.058537132 ubox
35 90 0.004034649 ubox
36 63 0.005078019 ubox
36 85 0.010039952 ubox
36 87 0.068091713 ubox
36 88 0.009476131 ubox
37 43 0.005198765 ubox
37 62 0.005082682 ubox
37 84 0.009958909 ubox
37 85 0.077377862 ubox
37 87 0.008664661 ubox
37 97 0.022971106 ubox
38 42 0.005419030 ubox
38 43 0.007206729 ubox
38 61 0.005080306 ubox
38 78 0.549900650 ubox
38 84 0.078713833 ubox
38 96 0.028235577 ubox
39 60 0.005079411 ubox
39 77 0.728508180 ubox
39 80 0.029006446 ubox
39 83 0.080620684 ubox
39 95 0.029047242 ubox
40 59 0.005063880 ubox
40 79 0.038056798 ubox
40 94 0.029004680 ubox
41 75 0.951277051 ubox
41 78 0.040865840 ubox
41 81 0.081084548 ubox
41 93 0.028928626 ubox
42 57 0.004877315 ubox
42 74 0.968924814 ubox
42 80 0.082136334 ubox
42 92 0.027385294 ubox
43 56 0.004986111 ubox
43 73 0.969400126 ubox
43 79 0.082601233 ubox
43 91 0.026730382 ubox
44 55 0.004984061 ubox
44 72 0.969383217 ubox
44 77 0.244061495 ubox
44 79 0.004400474 ubox
45 53 0.004622728 ubox
45 71 0.964242199 ubox
45 75 0.009197703 ubox
45 76 0.244014036 ubox
45 78 0.004755846 ubox
46 52 0.004786994 ubox
46 58 0.003746200 ubox
46 73 0.013418856 ubox
46 74 0.018648112 ubox
46 77 0.004856380 ubox
47 57 0.003798598 ubox
47 72 0.013620821 ubox
47 73 0.019573306 ubox
47 74 0.243509683 ubox
48 56 0.003819112 ubox
48 72 0.019533278 ubox
48 73 0.244205359 ubox
49 55 0.003814744 ubox
49 67 0.133396129 ubox
49 72 0.244166670 ubox
50 66 0.133053295 ubox
50 68 0.948791156 ubox
50 71 0.214431280 ubox
51 65 0.132942305 ubox
51 67 0.990912813 ubox
52 64 0.132778353 ubox
52 66 0.991043001 ubox
52 68 0.005004213 ubox
53 65 0.991058308 ubox
53 67 0.004952783 ubox
54 62 0.063665340 ubox
54 63 0.107251678 ubox
54 64 0.989456292 ubox
54 66 0.004859786 ubox
55 61 0.063788451 ubox
55 62 0.121857935 ubox
55 63 0.989493369 ubox
55 64 0.041207902 ubox
56 61 0.125262246 ubox
56 62 0.988796145 ubox
56 63 0.041455472 ubox
57 61 0.890792429 ubox
57 62 0.038339936 ubox
58 62 0.005638050 ubox
59 69 0.003762976 ubox
60 68 0.003781219 ubox
61 67 0.003777442 ubox
77 87 0.005390465 ubox
77 90 0.009819959 ubox
78 86 0.008756871 ubox
78 89 0.021894280 ubox
78 91 0.003283015 ubox
79 85 0.008928593 ubox
79 88 0.022443181 ubox
79 90 0.003686676 ubox
79 97 0.990185979 ubox
80 84 0.008045851 ubox
80 87 0.022034291 ubox
80 96 0.994725383 ubox
81 86 0.017414261 ubox
81 92 0.009429363 ubox
81 95 0.996251083 ubox
82 89 0.010598877 ubox
82 91 0.011341936 ubox
82 94 0.996285902 ubox
83 88 0.010958377 ubox
83 90 0.011774716 ubox
83 93 0.996259848 ubox
84 89 0.010508030 ubox
84 92 0.995408395 ubox
84 95 0.009037455 ubox
85 91 0.995677128 ubox
85 94 0.009063319 ubox
86 90 0.931449119 ubox
86 93 0.008909774 ubox
86 96 0.016922463 ubox
87 92 0.005757614 ubox
87 95 0.018794537 ubox
88 94 0.018792904 ubox
89 93 0.017580599 ubox
3 37 0.9500000 lbox
4 36 0.9500000 lbox
6 35 0.9500000 lbox
7 34 0.9500000 lbox
8 33 0.9500000 lbox
9 32 0.9500000 lbox
10 31 0.9500000 lbox
11 30 0.9500000 lbox
12 29 0.9500000 lbox
13 28 0.9500000 lbox
14 27 0.9500000 lbox
15 25 0.9500000 lbox
16 24 0.9500000 lbox
41 75 0.9500000 lbox
42 74 0.9500000 lbox
43 73 0.9500000 lbox
44 72 0.9500000 lbox
45 71 0.9500000 lbox
50 68 0.9500000 lbox
51 67 0.9500000 lbox
52 66 0.9500000 lbox
53 65 0.9500000 lbox
54 64 0.9500000 lbox
55 63 0.9500000 lbox
56 62 0.9500000 lbox
57 61 0.9500000 lbox
79 97 0.9500000 lbox
80 96 0.9500000 lbox
81 95 0.9500000 lbox
82 94 0.9500000 lbox
83 93 0.9500000 lbox
84 92 0.9500000 lbox
85 91 0.9500000 lbox
86 90 0.9500000 lbox
showpage
end
%%EOF
