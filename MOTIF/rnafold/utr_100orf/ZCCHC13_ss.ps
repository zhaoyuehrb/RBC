%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:18:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGCCGCCCAAAGCGGGGUUGCGCCGGGGCCUCCGGGGCCGAGGUGGGCCUGCUCAUUGGAAGAUCGCAUCGCAGCCAUGAGCAGUAAGGAUUUCUUCGCGUGUGGACACUCUGGCCAUUGGGCUCGGGGAUGCCCUAGAGGAGGAGCUGGAGGGCGAAGAGGUGGAGGCCAUGGCA\
) } def
/len { sequence length } bind def

/coor [
[46.97780991 275.47793579]
[44.62582397 277.66381836]
[42.00252151 278.73052979]
[35.59667587 292.29391479]
[36.69948196 308.07662964]
[24.26795959 316.28067017]
[17.86211205 329.84405518]
[11.45626545 343.40744019]
[5.05041933 356.97079468]
[10.61819458 371.76187134]
[4.02033806 386.12304688]
[-10.82876015 391.53414917]
[-25.11939240 384.78482056]
[-30.37318039 369.87933350]
[-23.47314644 355.66085815]
[-8.51295567 350.56497192]
[-2.10710883 337.00158691]
[4.29873753 323.43820190]
[10.70458412 309.87484741]
[9.14358807 295.06225586]
[22.03330040 285.88806152]
[28.43914604 272.32467651]
[34.36233139 258.54370117]
[39.79547501 244.56224060]
[45.22861862 230.58079529]
[50.66176224 216.59933472]
[48.05978775 201.93376160]
[60.27025604 191.87319946]
[65.70339966 177.89173889]
[71.13654327 163.91029358]
[76.56968689 149.92884827]
[82.00283051 135.94738770]
[87.43597412 121.96594238]
[92.86911774 107.98449707]
[85.49412537 115.05452728]
[77.58391571 121.56725311]
[62.59326172 122.09662628]
[47.60260773 122.62599945]
[32.61194992 123.15536499]
[17.62129593 123.68473816]
[7.03205347 135.41690063]
[-8.75561047 136.14161682]
[-20.37515640 125.42892456]
[-20.93291283 109.63447571]
[-10.09797287 98.12884521]
[5.70148516 97.73810577]
[17.09192276 108.69408417]
[32.08258057 108.16471100]
[47.07323456 107.63533783]
[62.06389236 107.10596466]
[77.05455017 106.57659912]
[82.73359680 92.69320679]
[72.41147614 81.80955505]
[62.08935928 70.92590332]
[51.76724243 60.04225159]
[41.44512558 49.15859985]
[31.12300682 38.27494812]
[22.92078018 34.18516922]
[20.71686172 27.10694313]
[10.58843136 16.04281616]
[-8.33286190 15.94979858]
[-20.98418427 2.31113720]
[-19.70219612 -15.92820930]
[-30.21478653 -26.62799644]
[-40.72737503 -37.32778549]
[-56.14103317 -44.38862991]
[-53.62305450 -61.15454865]
[-36.81530380 -63.37624359]
[-30.02758789 -47.84037399]
[-19.51499748 -37.14058685]
[-9.00240803 -26.44079971]
[2.19220138 -28.81788063]
[13.25452614 -25.44784164]
[21.38963890 -17.06074524]
[24.48375130 -5.66908264]
[21.65255737 5.91438675]
[31.78098869 16.97851372]
[42.00666046 27.95283127]
[52.32877731 38.83648300]
[62.65089417 49.72013474]
[72.97301483 60.60378647]
[83.29512787 71.48744202]
[93.61724854 82.37109375]
[87.29859924 68.76687622]
[90.62960815 54.14140701]
[102.21630096 44.61520386]
[117.20983887 44.17483139]
[129.33566284 53.00457764]
[133.51931763 67.40933228]
[128.01000977 81.36094666]
[115.11205292 89.02114868]
[129.77688599 85.86795807]
[144.44172668 82.71475983]
[159.10655212 79.56156921]
[173.77139282 76.40837860]
[188.43623352 73.25518036]
[203.10105896 70.10198975]
[217.76589966 66.94879150]
[232.43072510 63.79559708]
[247.09556580 60.64240646]
[249.29945374 48.77667999]
[255.36923218 38.38560486]
[264.56921387 30.68213272]
[275.79995728 26.55627632]
[287.72961426 26.47233009]
[298.95184326 30.41672897]
[308.15173340 37.90242386]
[314.25967407 48.02888107]
[329.07083130 45.65621948]
[343.86047363 43.15295029]
[358.62744141 40.51926041]
[373.39443970 37.88557434]
[388.16140747 35.25188828]
[396.18081665 25.12467003]
[408.55606079 23.24847221]
[418.55407715 30.09127808]
[433.36523438 27.71861649]
[445.76779175 17.89584732]
[459.55871582 23.52257347]
[474.36987305 21.14991188]
[489.15951538 18.64664078]
[503.92648315 16.01295471]
[518.69348145 13.37926769]
[533.46044922 10.74558067]
[540.11395264 -3.27265668]
[553.75250244 -10.67326546]
[569.13183594 -8.61055946]
[580.33831787 2.12230754]
[583.06280518 17.39833069]
[576.25769043 31.34356499]
[562.53961182 38.59578705]
[547.18353271 36.36636734]
[536.09411621 25.51256180]
[521.32714844 28.14624786]
[506.56018066 30.77993393]
[491.79321289 33.41362000]
[485.74206543 37.69639587]
[476.74252319 35.96107101]
[461.93136597 38.33373260]
[450.58819580 47.98679352]
[435.73788452 42.52977753]
[420.92672729 44.90243912]
[407.94335938 56.69009399]
[390.79510498 50.01886749]
[376.02810669 52.65255737]
[361.26113892 55.28624344]
[346.49417114 57.91992950]
[340.44302368 62.20270538]
[331.44348145 60.46738052]
[316.63232422 62.84004211]
[310.98092651 80.02253723]
[297.34451294 92.03500366]
[279.41995239 95.50640106]
[262.12493896 89.39688873]
[250.24876404 75.30723572]
[235.58392334 78.46043396]
[220.91908264 81.61362457]
[206.25425720 84.76682281]
[191.58941650 87.92001343]
[176.92459106 91.07321167]
[162.25975037 94.22640228]
[147.59492493 97.37960052]
[132.93008423 100.53279114]
[118.26525116 103.68598938]
[106.85057068 113.41764069]
[101.41742706 127.39908600]
[95.98428345 141.38053894]
[90.55113983 155.36198425]
[85.11799622 169.34344482]
[79.68485260 183.32489014]
[74.25170898 197.30633545]
[76.46506500 212.97195435]
[64.64321136 222.03248596]
[59.21006775 236.01393127]
[53.77692413 249.99537659]
[48.34378052 263.97683716]
[49.17604828 268.30831909]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 22]
[4 21]
[6 19]
[7 18]
[8 17]
[9 16]
[23 176]
[24 175]
[25 174]
[26 173]
[28 171]
[29 170]
[30 169]
[31 168]
[32 167]
[33 166]
[34 165]
[36 51]
[37 50]
[38 49]
[39 48]
[40 47]
[52 83]
[53 82]
[54 81]
[55 80]
[56 79]
[57 78]
[59 77]
[60 76]
[63 71]
[64 70]
[65 69]
[91 164]
[92 163]
[93 162]
[94 161]
[95 160]
[96 159]
[97 158]
[98 157]
[99 156]
[100 155]
[108 150]
[109 149]
[110 147]
[111 146]
[112 145]
[113 144]
[116 142]
[117 141]
[119 139]
[120 138]
[121 136]
[122 135]
[123 134]
[124 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
