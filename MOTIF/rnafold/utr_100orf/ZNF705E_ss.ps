%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:11:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUCUUAGUGCCUAAAGUGUCUGCAAGUGGAAAUCCAGAGGAAGACAGAGAGAAACUGAGUUCCUGACAAUGCAUUCACUAAAGAAAGUGACUUUUGAAGAUGUAGCUAUUGACUUCACCCAGGAAGAGUGGGCCAUGAUGGACACAUCCAAGAGAAAGCUGUACAGAG\
) } def
/len { sequence length } bind def

/coor [
[-30.73568916 193.56781006]
[-39.95138931 197.12075806]
[-49.78042984 197.71946716]
[-59.30180359 195.32575989]
[-67.62873840 190.18106079]
[-73.99130249 182.78207397]
[-88.18789673 187.62527466]
[-102.38449860 192.46849060]
[-116.58109283 197.31169128]
[-130.77769470 202.15489197]
[-144.97428894 206.99810791]
[-151.99348450 220.90380859]
[-166.45983887 225.61328125]
[-179.67355347 218.83584595]
[-193.87014771 223.67906189]
[-196.95460510 237.13462830]
[-206.21855164 247.22250366]
[-219.15687561 251.37330627]
[-232.34838867 248.60203552]
[-242.36036682 239.73939514]
[-256.64306641 244.32249451]
[-270.92575073 248.90560913]
[-285.20843506 253.48872375]
[-299.49111938 258.07183838]
[-301.67050171 273.13873291]
[-310.14099121 285.71401978]
[-323.17807007 293.33340454]
[-338.16888428 294.53182983]
[-352.13583374 289.12500000]
[-362.32797241 278.23529053]
[-376.61065674 282.81838989]
[-390.89334106 287.40151978]
[-401.50418091 299.90518188]
[-417.58746338 296.70196533]
[-422.59805298 281.08706665]
[-411.38153076 269.12371826]
[-395.47647095 273.11883545]
[-381.19378662 268.53570557]
[-366.91110229 263.95260620]
[-364.95819092 249.16572571]
[-356.74502563 236.64161682]
[-343.85583496 228.89375305]
[-328.81951904 227.50476074]
[-314.61352539 232.80348206]
[-304.07421875 243.78913879]
[-289.79153442 239.20603943]
[-275.50885010 234.62292480]
[-261.22616577 230.03981018]
[-246.94348145 225.45669556]
[-242.32821655 209.72067261]
[-229.11865234 199.72560120]
[-212.38867188 199.55844116]
[-198.71334839 209.48245239]
[-184.51675415 204.63925171]
[-178.20033264 191.19906616]
[-163.87196350 186.08514404]
[-149.81748962 192.80151367]
[-135.62089539 187.95829773]
[-121.42430115 183.11509705]
[-107.22769928 178.27189636]
[-93.03110504 173.42868042]
[-78.83451080 168.58547974]
[-74.38329315 148.81083679]
[-58.82740402 135.60168457]
[-38.31703186 134.39837646]
[-21.09323120 145.85078430]
[-7.39748812 139.73306274]
[6.29825449 133.61532593]
[19.93755722 127.37277222]
[33.51927948 121.00592041]
[47.10100174 114.63907623]
[49.54805374 110.49868774]
[54.63955688 107.87112427]
[61.29702759 108.29787445]
[75.10221863 102.43130493]
[76.00805664 87.43555450]
[85.80535889 74.54022980]
[102.21939087 68.86299896]
[101.94543457 53.86549759]
[101.67147064 38.86800003]
[101.39751434 23.87050247]
[101.12355042 8.87300396]
[89.57346344 -1.91453445]
[89.11775970 -17.71225166]
[100.02680969 -29.14764404]
[115.82846832 -29.43629456]
[127.14788055 -18.40695190]
[127.26944733 -2.60313106]
[116.12104797 8.59904289]
[116.39501190 23.59654045]
[116.66896820 38.59403992]
[116.94293213 53.59153748]
[117.21688843 68.58903503]
[128.56942749 78.39311218]
[143.44699097 76.48049927]
[158.32455444 74.56788635]
[173.20211792 72.65527344]
[188.07968140 70.74266052]
[202.95724487 68.83004761]
[208.48678589 65.09799957]
[214.20819092 64.79294586]
[218.41189575 67.12955475]
[233.34939575 65.76157379]
[248.28688049 64.39360046]
[263.22436523 63.02562332]
[278.16186523 61.65764618]
[288.25503540 49.79317093]
[303.42324829 48.61863708]
[314.67202759 58.31404114]
[329.60949707 56.94606400]
[344.54699707 55.57808685]
[359.48449707 54.21010971]
[374.42199707 52.84213257]
[378.03994751 41.31686020]
[385.32415771 31.72390938]
[395.39614868 25.18137360]
[407.05429077 22.44179344]
[418.91717529 23.80567360]
[429.58721924 29.08869934]
[437.81546021 37.64624786]
[442.64758301 48.45195770]
[457.63760376 47.90412903]
[472.62759399 47.35629654]
[487.61758423 46.80846786]
[497.08160400 34.35993576]
[512.34460449 30.95761108]
[526.19976807 38.20796967]
[532.10516357 52.68761063]
[527.27246094 67.55969238]
[513.98345947 75.80207825]
[498.51287842 73.52295685]
[488.16540527 61.79846191]
[473.17541504 62.34629059]
[458.18542480 62.89411926]
[443.19543457 63.44195175]
[435.49673462 79.80161285]
[420.50863647 90.06500244]
[402.30316162 91.33985901]
[385.87918091 83.19018555]
[375.78994751 67.77962494]
[360.85247803 69.14759827]
[345.91497803 70.51557922]
[330.97747803 71.88355255]
[316.04000854 73.25153351]
[306.73937988 84.82884979]
[291.61013794 86.42896271]
[279.52984619 76.59513855]
[264.59234619 77.96311188]
[249.65486145 79.33109283]
[234.71736145 80.69906616]
[219.77987671 82.06704712]
[204.86985779 83.70761108]
[189.99229431 85.62022400]
[175.11473083 87.53283691]
[160.23716736 89.44544983]
[145.35960388 91.35806274]
[130.48204041 93.27067566]
[126.76591492 112.79298401]
[112.52740479 125.17100525]
[94.68728638 126.02951813]
[80.96878815 116.23649597]
[67.16359711 122.10306549]
[53.46785355 128.22079468]
[39.88613129 134.58764648]
[26.30440712 140.95449829]
[19.83307838 147.45458984]
[12.41598511 147.31106567]
[-1.27975702 153.42880249]
[-14.97550011 159.54652405]
[-14.71851063 169.53851318]
[-17.48618698 179.11218262]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 62]
[7 61]
[8 60]
[9 59]
[10 58]
[11 57]
[14 54]
[15 53]
[20 49]
[21 48]
[22 47]
[23 46]
[24 45]
[30 39]
[31 38]
[32 37]
[66 169]
[67 168]
[68 167]
[69 165]
[70 164]
[71 163]
[74 162]
[75 161]
[78 93]
[79 92]
[80 91]
[81 90]
[82 89]
[94 157]
[95 156]
[96 155]
[97 154]
[98 153]
[99 152]
[102 151]
[103 150]
[104 149]
[105 148]
[106 147]
[109 144]
[110 143]
[111 142]
[112 141]
[113 140]
[121 135]
[122 134]
[123 133]
[124 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
