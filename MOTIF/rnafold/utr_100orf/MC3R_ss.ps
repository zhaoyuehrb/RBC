%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:34:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAGCAUCCAAAAGACGUAUCUGGAGGGAGAUUUUGUCUUUCCUGUGAGCAGCAGCAGCUUCCUACGGACCCUGCUGGAGCCCCAGCUCGGAUCAGCCCUUCUGACAGCAAUGAAUGCUUCGUGCUGCCUGCCCUCUGUUCAGCCAACACUGCCUAAUGGCUCGGAGCACCUCCAAGCCCCUUUCUUCAGCAACCAGAGCAGCAGCGCCU\
) } def
/len { sequence length } bind def

/coor [
[382.15319824 272.45050049]
[376.03240967 268.34225464]
[371.67434692 262.31259155]
[369.65707397 255.08088684]
[355.27319336 250.82595825]
[340.88934326 246.57102966]
[326.50546265 242.31610107]
[312.12161255 238.06117249]
[297.73773193 233.80624390]
[283.33847046 237.61549377]
[272.29992676 226.28141785]
[257.91607666 222.02650452]
[243.30633545 225.42590332]
[232.27836609 235.59370422]
[221.25039673 245.76148987]
[210.22242737 255.92927551]
[199.19445801 266.09704590]
[188.16648865 276.26483154]
[177.13851929 286.43264771]
[172.06387329 304.13449097]
[154.80445862 307.31292725]
[143.92765808 317.64227295]
[133.05084229 327.97158813]
[122.17404175 338.30093384]
[122.01676178 354.10443115]
[110.67244720 365.10815430]
[94.87149048 364.78381348]
[83.98831177 353.32379150]
[84.47970581 337.52716064]
[96.05413818 326.76574707]
[111.84471130 327.42410278]
[122.72151947 317.09478760]
[133.59832764 306.76547241]
[144.47512817 296.43612671]
[145.10035706 284.35668945]
[154.07614136 275.66217041]
[166.97073364 275.40466309]
[177.99870300 265.23687744]
[189.02667236 255.06909180]
[200.05464172 244.90130615]
[211.08261108 234.73352051]
[222.11058044 224.56573486]
[233.13854980 214.39793396]
[221.82331848 200.58973694]
[223.11949158 184.10754395]
[211.79643250 174.26943970]
[200.47337341 164.43133545]
[189.15031433 154.59323120]
[174.46817017 152.08641052]
[169.12551880 137.19458008]
[157.80245972 127.35648346]
[143.12031555 124.84966278]
[137.77766418 109.95783234]
[126.45459747 100.11972809]
[72.79816437 121.73424530]
[59.01520538 115.81562805]
[45.23224640 109.89701080]
[31.44928741 103.97839355]
[17.66632843 98.05977631]
[3.88336873 92.14115906]
[-10.64517117 97.75892639]
[-24.53873825 91.56026459]
[-29.80488586 77.67490387]
[-43.58784485 71.75628662]
[-57.37080383 65.83766937]
[-74.31054688 65.14371490]
[-78.33309937 48.67388153]
[-63.62046432 40.24922943]
[-51.45218658 52.05471039]
[-37.66922760 57.97332764]
[-23.88626862 63.89194489]
[-10.19132328 58.14876938]
[3.87087083 63.95474243]
[9.80198574 78.35820007]
[23.58494568 84.27681732]
[37.36790466 90.19543457]
[51.15086365 96.11405182]
[64.93382263 102.03266907]
[78.71678162 107.95128632]
[88.13077545 96.27323914]
[79.42173004 84.06044006]
[70.71269226 71.84763336]
[62.00364685 59.63483047]
[46.86557388 53.32842636]
[45.02666855 37.03270721]
[58.37863922 27.51131439]
[73.18611908 34.55904007]
[74.21644592 50.92578888]
[82.92549133 63.13859177]
[91.63453674 75.35139465]
[100.34358215 87.56420135]
[113.75357819 80.84320068]
[109.18149567 66.55697632]
[95.63523865 57.96172333]
[94.05264282 41.99691772]
[105.64775085 30.90939903]
[121.52577972 33.20455933]
[129.50646973 47.12174988]
[123.46771240 61.98489380]
[128.03979492 76.27111053]
[136.29269409 88.79666901]
[147.61576843 98.63477325]
[163.10780334 101.84527588]
[167.64054871 116.03341675]
[178.96362305 125.87152100]
[194.45565796 129.08203125]
[198.98841858 143.27017212]
[210.31147766 153.10827637]
[221.63453674 162.94638062]
[232.95759583 172.78446960]
[247.45091248 169.73593140]
[261.07525635 176.95222473]
[267.15954590 191.77674866]
[262.17098999 207.64263916]
[276.55484009 211.89755249]
[291.98294067 208.39265442]
[301.99267578 219.42237854]
[316.37652588 223.67730713]
[330.76040649 227.93223572]
[345.14425659 232.18716431]
[359.52813721 236.44209290]
[373.91198730 240.69702148]
[395.93438721 233.41322327]
[410.83291626 250.20878601]
[425.49118042 253.39234924]
[440.14947510 256.57592773]
[454.80773926 259.75949097]
[469.46600342 262.94305420]
[484.12426758 266.12661743]
[498.78256226 269.31018066]
[507.83129883 268.07345581]
[513.63281250 272.65029907]
[528.24249268 276.04971313]
[542.85223389 279.44912720]
[549.27618408 277.89611816]
[554.70562744 279.56838989]
[557.83966064 283.17025757]
[572.34277344 286.99908447]
[586.84588623 290.82794189]
[601.34899902 294.65676880]
[600.16711426 282.15301514]
[605.99359131 268.62261963]
[619.04827881 257.33804321]
[633.22985840 252.45103455]
[647.41143799 247.56402588]
[654.10992432 233.24949646]
[668.99664307 227.94276428]
[683.23956299 234.79222107]
[688.38861084 249.73419189]
[681.38891602 263.90390015]
[666.39337158 268.89468384]
[652.29846191 261.74560547]
[638.11688232 266.63259888]
[623.93530273 271.51962280]
[623.93530273 279.01962280]
[638.93530273 279.01962280]
[653.93530273 279.01986694]
[653.93481445 294.01986694]
[638.93530273 294.01962280]
[623.93530273 294.01962280]
[623.93530273 301.51962280]
[638.11688232 306.40661621]
[652.29846191 311.29364014]
[666.48004150 316.18063354]
[682.04803467 313.36160278]
[691.56005859 324.82330322]
[705.74163818 329.71032715]
[719.92321777 334.59732056]
[734.10479736 339.48434448]
[751.04962158 338.92828369]
[756.27478027 355.05697632]
[742.22283936 364.54275513]
[729.21783447 353.66589355]
[715.03625488 348.77890015]
[700.85467529 343.89187622]
[686.67309570 339.00488281]
[672.11938477 342.17346191]
[661.59301758 330.36221313]
[647.41143799 325.47521973]
[633.22985840 320.58819580]
[619.04827881 315.70120239]
[630.07067871 325.87503052]
[636.81823730 339.27169800]
[638.43139648 354.18469238]
[634.70465088 368.71438599]
[626.11279297 381.00988770]
[613.75024414 389.50503540]
[599.19177246 393.11761475]
[584.29187012 391.38748169]
[570.94854736 384.53503418]
[560.86157227 373.43316650]
[555.31573486 359.49600220]
[555.01757812 344.49899292]
[560.00500488 330.35241699]
[569.64276123 318.85833740]
[582.70318604 311.48092651]
[597.52014160 309.15988159]
[583.01702881 305.33102417]
[568.51391602 301.50219727]
[554.01080322 297.67337036]
[539.45281982 294.05883789]
[524.84307861 290.65945435]
[510.23336792 287.26004028]
[495.59899902 283.96844482]
[480.94070435 280.78488159]
[466.28244019 277.60131836]
[451.62417603 274.41775513]
[436.96591187 271.23419189]
[422.30761719 268.05062866]
[407.64935303 264.86706543]
[402.82775879 270.07800293]
[396.43859863 273.32632446]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 122]
[5 121]
[6 120]
[7 119]
[8 118]
[9 117]
[11 115]
[12 114]
[13 43]
[14 42]
[15 41]
[16 40]
[17 39]
[18 38]
[19 37]
[21 34]
[22 33]
[23 32]
[24 31]
[45 110]
[46 109]
[47 108]
[48 107]
[50 105]
[51 104]
[53 102]
[54 101]
[55 79]
[56 78]
[57 77]
[58 76]
[59 75]
[60 74]
[63 71]
[64 70]
[65 69]
[80 91]
[81 90]
[82 89]
[83 88]
[92 100]
[93 99]
[124 210]
[125 209]
[126 208]
[127 207]
[128 206]
[129 205]
[130 204]
[132 203]
[133 202]
[134 201]
[137 200]
[138 199]
[139 198]
[140 197]
[143 154]
[144 153]
[145 152]
[161 181]
[162 180]
[163 179]
[164 178]
[166 176]
[167 175]
[168 174]
[169 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
