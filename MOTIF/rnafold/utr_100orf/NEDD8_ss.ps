%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:43:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUAGAAGUGGCCCUUGCAGGCAAGAGUGCUGGAGGGCGGCAGCGGCGACCGGAGCGGUAGGAGCAGCAAUUUAUCCGUGUGCAGCCCCAAACUGGAAAGAAGAUGCUAAUUAAAGUGAAGACGCUGACCGGAAAGGAGAUUGAGAUUGACAUUGAACCUACAGACAAGGUGGAGCGAAUCAAGGAGCGUGUGGAGGAGAAAG\
) } def
/len { sequence length } bind def

/coor [
[58.07667160 460.13461304]
[48.16256714 448.87802124]
[40.26441574 436.12579346]
[34.60340118 422.23504639]
[31.33805656 407.59478760]
[30.55982971 392.61499023]
[32.29051208 377.71514893]
[36.48193359 363.31179810]
[26.20699120 374.24002075]
[22.39091301 389.59408569]
[8.03579807 393.56649780]
[-2.23914242 404.49468994]
[-12.51408291 415.42291260]
[-22.78902245 426.35110474]
[-33.06396484 437.27929688]
[-43.33890533 448.20748901]
[-42.37610626 459.04885864]
[-47.43742752 468.43563843]
[-56.63752365 473.38037109]
[-66.82124329 472.46157837]
[-77.42784882 483.06817627]
[-88.03444672 493.67477417]
[-98.64105225 504.28137207]
[-102.36050415 520.25317383]
[-118.12867737 524.75836182]
[-129.72462463 513.16241455]
[-125.21942902 497.39422607]
[-109.24765015 493.67477417]
[-98.64105225 483.06817627]
[-88.03444672 472.46157837]
[-77.42784882 461.85498047]
[-73.80936432 442.86367798]
[-54.26710510 437.93255615]
[-43.99216461 427.00436401]
[-33.71722412 416.07617188]
[-23.44228554 405.14794922]
[-13.16734505 394.21975708]
[-2.89240432 383.29156494]
[0.18874089 368.71911621]
[15.27878952 363.96505737]
[25.55373001 353.03686523]
[26.77227783 345.81057739]
[32.52496719 340.05477905]
[35.95922470 325.45321655]
[26.33935547 316.19131470]
[22.52293968 303.28152466]
[25.60983086 290.06692505]
[34.89759064 280.02493286]
[48.03783035 275.85217285]
[51.69653320 261.30520630]
[55.35523987 246.75825500]
[43.32267761 237.91818237]
[35.57032013 225.11013794]
[33.30614471 210.26969910]
[36.90596390 195.65365601]
[45.85145950 183.49668884]
[58.80455399 175.66978455]
[73.80751801 173.39231873]
[77.46621704 158.84535217]
[81.12492371 144.29840088]
[84.78363037 129.75144958]
[88.44233704 115.20449829]
[81.09547424 102.71571350]
[84.62966156 88.66381836]
[97.01071167 81.13679504]
[100.66941071 66.58984375]
[104.32811737 52.04288864]
[106.97074890 37.27750778]
[108.58461761 22.36457825]
[110.19847870 7.45165062]
[111.81234741 -7.46127796]
[113.42621613 -22.37420654]
[115.04007721 -37.28713608]
[105.20140076 -56.32026291]
[118.06276703 -72.45807648]
[118.98617554 -87.42962646]
[119.90959167 -102.40117645]
[120.83300781 -117.37272644]
[118.23676300 -126.13638306]
[121.88766479 -132.56716919]
[123.04152679 -147.52272034]
[120.58054352 -156.32531738]
[124.33003998 -162.69911194]
[125.71406555 -177.63513184]
[127.09809113 -192.57113647]
[128.48211670 -207.50715637]
[114.47166443 -215.77490234]
[105.50028992 -229.27577209]
[103.32117462 -245.27975464]
[108.32015228 -260.57714844]
[119.44856262 -272.12228394]
[134.44274902 -277.63977051]
[135.59660339 -292.59533691]
[136.75045776 -307.55090332]
[122.62224579 -312.89599609]
[110.57305145 -322.00607300]
[101.57963562 -334.14260864]
[96.37107849 -348.32171631]
[95.36959076 -363.39401245]
[98.65637970 -378.13760376]
[105.96498108 -391.35733032]
[116.70293427 -401.98150635]
[129.99975586 -409.14886475]
[144.77752686 -412.27844238]
[159.83828735 -411.11645508]
[173.96112061 -405.75717163]
[186.00115967 -396.63497925]
[194.98237610 -384.48944092]
[200.17669678 -370.30508423]
[201.16304016 -355.23178101]
[197.86143494 -340.49151611]
[190.53956604 -327.27914429]
[179.79093933 -316.66574097]
[166.48692322 -309.51174927]
[151.70602417 -306.39703369]
[150.55215454 -291.44146729]
[149.39830017 -276.48593140]
[161.72796631 -270.11975098]
[170.72756958 -259.50088501]
[175.01264954 -246.21183777]
[173.90458679 -232.24957275]
[167.53779602 -219.72552490]
[156.84445190 -210.54621887]
[143.41813660 -206.12312317]
[142.03410339 -191.18711853]
[140.65008545 -176.25109863]
[139.26605225 -161.31509399]
[137.99707031 -146.36886597]
[136.84321594 -131.41329956]
[135.80455017 -116.44931030]
[134.88114929 -101.47776031]
[133.95773315 -86.50621033]
[133.03431702 -71.53466034]
[139.92636108 -65.92173004]
[143.51440430 -57.63940811]
[142.87620544 -48.49792099]
[138.02883911 -40.55951691]
[129.95300293 -35.67326736]
[128.33914185 -20.76033974]
[126.72527313 -5.84741163]
[125.11141205 9.06551647]
[123.49754333 23.97844505]
[121.88367462 38.89137268]
[132.44694519 28.24162102]
[147.06681824 24.88607407]
[161.21685791 29.86362648]
[170.51617432 41.63320160]
[172.08561707 56.55086899]
[165.43928528 69.99803925]
[152.63493347 77.81138611]
[137.63684082 77.57185364]
[125.08851624 69.35359955]
[118.87507629 55.70159531]
[115.21636963 70.24855042]
[111.55766296 84.79550171]
[118.90452576 97.28428650]
[115.37033844 111.33618164]
[102.98928833 118.86320496]
[99.33058929 133.41015625]
[95.67188263 147.95710754]
[92.01317596 162.50405884]
[88.35446930 177.05102539]
[100.49479675 186.15530396]
[108.20378113 199.17892456]
[110.33348846 214.12141418]
[106.59021759 228.70138550]
[97.57453918 240.70481873]
[84.68520355 248.32128906]
[69.90219116 250.41696167]
[66.24349213 264.96389771]
[62.58478165 279.51086426]
[73.60521698 292.33880615]
[74.79830933 309.04180908]
[65.89154053 323.02554321]
[50.56079483 328.88745117]
[47.12653732 343.48904419]
[56.81743240 332.03973389]
[68.28190613 322.36679077]
[81.19889069 314.74108887]
[95.20667267 309.37619019]
[109.91294861 306.42230225]
[124.90589142 305.96221924]
[139.76562500 308.00875854]
[154.07600403 312.50463867]
[167.43627930 319.32394409]
[179.47230530 328.27572632]
[189.84701538 339.10925293]
[198.26986694 351.52117920]
[204.50497437 365.16387939]
[208.37774658 379.65530396]
[209.77970886 394.58966064]
[208.67161560 409.54867554]
[205.08448792 424.11343384]
[199.11877441 437.87606812]
[190.94155884 450.45117188]
[180.78184509 461.48657227]
[168.92413330 470.67324829]
[155.70050049 477.75387573]
[141.48126221 482.53021240]
[126.66464233 484.86849976]
[111.66555023 484.70324707]
[96.90404510 482.03906250]
[82.79350281 476.95059204]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 41]
[9 40]
[11 38]
[12 37]
[13 36]
[14 35]
[15 34]
[16 33]
[20 31]
[21 30]
[22 29]
[23 28]
[43 176]
[44 175]
[49 171]
[50 170]
[51 169]
[58 162]
[59 161]
[60 160]
[61 159]
[62 158]
[65 155]
[66 154]
[67 153]
[68 143]
[69 142]
[70 141]
[71 140]
[72 139]
[73 138]
[75 133]
[76 132]
[77 131]
[78 130]
[80 129]
[81 128]
[83 127]
[84 126]
[85 125]
[86 124]
[92 117]
[93 116]
[94 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
