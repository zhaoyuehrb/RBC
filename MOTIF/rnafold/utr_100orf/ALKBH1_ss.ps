%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:25:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCGCGAGAUGGGGAAGAUGGCAGCGGCCGUGGGCUCUGUGGCGACUCUGGCGACUGAGCCCGGGGAGGACGCCUUUCGGAAACUUUUCCGCUUCUACCGUCAGAGCC\
) } def
/len { sequence length } bind def

/coor [
[54.26082611 345.48583984]
[54.26082611 330.48583984]
[54.26082611 315.48583984]
[43.35212326 309.78833008]
[35.90445328 299.89947510]
[33.41175842 287.69903564]
[36.41857529 275.54006958]
[44.40257263 265.79510498]
[55.86406708 260.39312744]
[56.72040176 245.41760254]
[57.57673264 230.44206238]
[58.43306351 215.46653748]
[59.28939819 200.49099731]
[59.93179703 185.50476074]
[60.36013794 170.51087952]
[60.78847885 155.51699829]
[61.21681976 140.52311707]
[61.64516068 125.52922821]
[50.59404373 115.38660431]
[35.69181824 117.09647369]
[20.78959274 118.80634308]
[5.88736677 120.51622009]
[-9.01485920 122.22608948]
[-21.86031532 132.42051697]
[-37.01015091 126.14241028]
[-38.87951279 109.85015869]
[-25.54536247 100.30382538]
[-10.72473049 107.32386017]
[4.17749548 105.61399078]
[19.07972145 103.90412140]
[33.98194885 102.19425201]
[48.88417435 100.48437500]
[56.44592285 87.52984619]
[50.60687256 73.71298981]
[44.76781845 59.89613342]
[38.92876816 46.07927704]
[33.08971786 32.26242447]
[27.25066376 18.44556808]
[14.75165939 8.74580383]
[16.92432404 -5.98948717]
[11.08527184 -19.80634308]
[-1.41373312 -29.50610733]
[0.75893074 -44.24139786]
[-5.08012104 -58.05825424]
[-20.07931709 -62.48071289]
[-28.68354416 -75.53833008]
[-26.83015251 -91.06568909]
[-15.39425468 -101.73125458]
[0.22446713 -102.49906921]
[12.65133095 -93.00659180]
[16.01875114 -77.73588562]
[8.73673439 -63.89730453]
[14.57578564 -50.08045197]
[26.65714264 -41.36895752]
[24.90212631 -25.64539337]
[30.74117851 -11.82853889]
[42.82253647 -3.11704755]
[41.06752014 12.60651779]
[46.90657043 26.42337227]
[52.74562073 40.24022675]
[58.58467484 54.05708313]
[64.42372894 67.87393951]
[70.26277924 81.69078827]
[94.21672058 65.86907959]
[121.66145325 73.38854980]
[134.04353333 64.92189789]
[146.42561340 56.45524979]
[158.80769348 47.98860168]
[171.18977356 39.52195358]
[183.57185364 31.05530548]
[193.23379517 17.12392998]
[209.29541016 22.55169296]
[208.52607727 39.48817444]
[192.03849792 43.43738174]
[179.65641785 51.90402985]
[167.27433777 60.37068176]
[154.89225769 68.83732605]
[142.51017761 77.30397797]
[130.12809753 85.77062225]
[133.31658936 100.42782593]
[148.09689331 102.98566437]
[162.87719727 105.54349518]
[177.65750122 108.10132599]
[192.85473633 101.93882751]
[205.62214661 112.23082733]
[202.82572937 128.38978577]
[187.34219360 133.79277039]
[175.09967041 122.88163757]
[160.31936646 120.32379913]
[145.53906250 117.76596832]
[130.75875854 115.20813751]
[106.51767731 133.99832153]
[76.63904572 125.95756531]
[76.21070099 140.95144653]
[75.78236389 155.94532776]
[75.35401917 170.93920898]
[74.92568207 185.93310547]
[77.84200287 194.75100708]
[74.26493073 201.34732056]
[73.40859985 216.32286072]
[72.55226898 231.29840088]
[71.69593811 246.27394104]
[70.83960724 261.24948120]
[85.15548706 272.17138672]
[90.11765289 289.31900024]
[83.95499420 305.90707397]
[69.26082611 315.48583984]
[69.26082611 330.48583984]
[69.26082611 345.48583984]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 109]
[2 108]
[3 107]
[9 103]
[10 102]
[11 101]
[12 100]
[13 99]
[14 97]
[15 96]
[16 95]
[17 94]
[18 93]
[19 32]
[20 31]
[21 30]
[22 29]
[23 28]
[33 63]
[34 62]
[35 61]
[36 60]
[37 59]
[38 58]
[40 56]
[41 55]
[43 53]
[44 52]
[65 79]
[66 78]
[67 77]
[68 76]
[69 75]
[70 74]
[80 91]
[81 90]
[82 89]
[83 88]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
