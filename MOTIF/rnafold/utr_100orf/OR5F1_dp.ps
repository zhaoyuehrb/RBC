%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:17:42 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR5F1)
} def

/sequence { (\
AUGACCAGAAAAAAUUAUACCUCACUGACUGAGUUCGUCCUAUUGGGAUUAGCAGACACGCUGGAGCUACAGAUUAUCCUCUUUUUGUUUUUUCUUGUGA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 98 0.031413137 ubox
2 97 0.031788158 ubox
2 99 0.051790571 ubox
3 96 0.031406981 ubox
3 98 0.046759836 ubox
4 95 0.019529345 ubox
4 98 0.919383772 ubox
5 97 0.942374400 ubox
6 97 0.187571512 ubox
6 99 0.054753642 ubox
7 95 0.970446240 ubox
7 96 0.136514511 ubox
7 98 0.038847668 ubox
8 93 0.004490251 ubox
8 94 0.999683181 ubox
8 95 0.017319197 ubox
9 92 0.008467510 ubox
9 93 0.999451845 ubox
9 96 0.006595726 ubox
10 91 0.010917014 ubox
10 92 0.998352422 ubox
10 93 0.008228979 ubox
10 95 0.005457530 ubox
11 90 0.012880765 ubox
11 91 0.998167266 ubox
11 92 0.010669810 ubox
12 89 0.014474634 ubox
12 90 0.997983419 ubox
12 91 0.012501169 ubox
12 93 0.003801040 ubox
13 88 0.015663634 ubox
13 89 0.997430361 ubox
13 90 0.013951203 ubox
13 92 0.004073715 ubox
14 88 0.995121440 ubox
14 89 0.014948299 ubox
14 91 0.004094475 ubox
15 28 0.007297901 ubox
15 87 0.976613280 ubox
16 27 0.011226403 ubox
16 87 0.079202999 ubox
17 26 0.011553321 ubox
17 86 0.106367897 ubox
17 88 0.011574000 ubox
18 27 0.005294490 ubox
18 76 0.003395393 ubox
18 87 0.013494712 ubox
19 26 0.006002804 ubox
19 34 0.008478505 ubox
19 86 0.015373933 ubox
19 88 0.004474288 ubox
20 33 0.006507179 ubox
20 37 0.003197827 ubox
20 87 0.005015284 ubox
21 33 0.050052854 ubox
21 45 0.003164827 ubox
21 47 0.004035349 ubox
21 66 0.004907411 ubox
22 28 0.017764615 ubox
22 32 0.052121133 ubox
22 46 0.004049179 ubox
22 65 0.004927072 ubox
23 27 0.019055634 ubox
23 31 0.052657387 ubox
23 45 0.004379365 ubox
23 64 0.004855807 ubox
23 87 0.004707869 ubox
24 30 0.048730567 ubox
24 34 0.010340625 ubox
24 44 0.004257431 ubox
24 86 0.004840570 ubox
24 88 0.003363336 ubox
25 33 0.011059239 ubox
25 55 0.013685796 ubox
25 72 0.006563631 ubox
25 87 0.003790830 ubox
26 32 0.011047859 ubox
26 54 0.013832190 ubox
26 58 0.005779931 ubox
26 71 0.006609297 ubox
26 76 0.837972286 ubox
27 36 0.003873749 ubox
27 39 0.006278055 ubox
27 53 0.013855174 ubox
27 57 0.006344128 ubox
27 70 0.006534563 ubox
27 75 0.904460653 ubox
27 78 0.056111499 ubox
27 81 0.017968803 ubox
27 83 0.004211391 ubox
27 84 0.004037267 ubox
27 86 0.003297711 ubox
28 35 0.003557784 ubox
28 38 0.006309841 ubox
28 74 0.905919442 ubox
28 77 0.055836934 ubox
28 80 0.017850722 ubox
28 82 0.004228694 ubox
28 83 0.004048996 ubox
28 85 0.003281148 ubox
29 37 0.006279471 ubox
29 52 0.013855280 ubox
29 55 0.007716402 ubox
29 72 0.996878760 ubox
30 51 0.013820480 ubox
30 54 0.007642098 ubox
30 69 0.003230457 ubox
30 71 0.997794073 ubox
31 50 0.013439085 ubox
31 53 0.006972480 ubox
31 70 0.995732979 ubox
32 49 0.011480784 ubox
32 50 0.003366654 ubox
32 68 0.994481986 ubox
33 49 0.004088221 ubox
33 53 0.014771722 ubox
33 67 0.998314958 ubox
34 47 0.007218635 ubox
34 48 0.005290573 ubox
34 52 0.015558435 ubox
34 65 0.011147284 ubox
34 66 0.997771522 ubox
35 46 0.008932173 ubox
35 47 0.005263545 ubox
35 48 0.003900865 ubox
35 51 0.015930257 ubox
35 64 0.013225985 ubox
35 65 0.997224144 ubox
36 45 0.009295077 ubox
36 46 0.005046044 ubox
36 47 0.004146622 ubox
36 63 0.020282368 ubox
36 64 0.996509420 ubox
37 44 0.008718289 ubox
37 49 0.914554268 ubox
37 57 0.010030789 ubox
37 61 0.004996768 ubox
37 62 0.004217698 ubox
38 46 0.004370287 ubox
38 47 0.190921179 ubox
38 48 0.960486143 ubox
38 56 0.010034496 ubox
38 60 0.004718938 ubox
38 65 0.003745493 ubox
39 45 0.005440068 ubox
39 46 0.247869128 ubox
39 47 0.968087893 ubox
39 55 0.009895271 ubox
39 64 0.003974002 ubox
40 45 0.253125340 ubox
40 46 0.966507285 ubox
40 47 0.018447037 ubox
40 52 0.010929987 ubox
40 63 0.004029511 ubox
41 45 0.870712265 ubox
41 46 0.018628340 ubox
41 51 0.011060086 ubox
42 50 0.010969531 ubox
43 55 0.005698809 ubox
44 54 0.006949355 ubox
44 69 0.004837378 ubox
45 53 0.007034334 ubox
45 68 0.005366356 ubox
45 80 0.003574347 ubox
46 67 0.005442486 ubox
46 79 0.004182654 ubox
47 78 0.004230249 ubox
48 77 0.004225115 ubox
49 64 0.020107229 ubox
49 76 0.003942683 ubox
50 63 0.909713212 ubox
50 64 0.003332887 ubox
50 69 0.013067532 ubox
51 62 0.972651439 ubox
51 68 0.014136430 ubox
51 82 0.008091360 ubox
52 61 0.979353586 ubox
52 67 0.014253212 ubox
52 81 0.008709109 ubox
52 88 0.003968232 ubox
53 60 0.978521046 ubox
53 63 0.195185496 ubox
53 66 0.014053363 ubox
53 87 0.004268266 ubox
54 62 0.195699442 ubox
54 80 0.005625511 ubox
54 82 0.005297456 ubox
54 86 0.004276874 ubox
55 61 0.195264209 ubox
55 78 0.012774577 ubox
55 79 0.005444040 ubox
55 81 0.005646318 ubox
55 85 0.004163062 ubox
56 77 0.012690152 ubox
56 80 0.005527640 ubox
56 84 0.003987972 ubox
56 88 0.003594487 ubox
57 63 0.018519823 ubox
57 87 0.003828885 ubox
57 99 0.004929796 ubox
58 62 0.015035391 ubox
58 86 0.003718799 ubox
58 98 0.004951001 ubox
59 97 0.004951366 ubox
59 99 0.004185746 ubox
60 67 0.006425164 ubox
60 96 0.004661556 ubox
60 98 0.004243598 ubox
61 66 0.006412488 ubox
61 72 0.022631754 ubox
61 97 0.004247946 ubox
62 71 0.022858364 ubox
63 70 0.023501812 ubox
63 79 0.029639279 ubox
63 82 0.016149063 ubox
63 94 0.004915537 ubox
63 95 0.004096782 ubox
64 75 0.003327036 ubox
64 78 0.029999730 ubox
64 81 0.023773356 ubox
64 83 0.005024617 ubox
64 90 0.004123176 ubox
64 93 0.004935225 ubox
64 94 0.004365565 ubox
65 74 0.003470782 ubox
65 77 0.029632421 ubox
65 80 0.023796856 ubox
65 82 0.005292451 ubox
65 89 0.005097727 ubox
65 92 0.004950534 ubox
65 93 0.004298256 ubox
66 79 0.023631690 ubox
66 81 0.005303213 ubox
66 88 0.006369563 ubox
66 91 0.004670816 ubox
66 92 0.003465383 ubox
67 87 0.006605173 ubox
68 76 0.009192901 ubox
69 75 0.009188429 ubox
69 88 0.016460054 ubox
70 87 0.019891213 ubox
71 80 0.009746390 ubox
71 82 0.024789746 ubox
71 86 0.019977465 ubox
72 78 0.009471005 ubox
72 79 0.010430950 ubox
72 81 0.027006240 ubox
72 83 0.003473524 ubox
72 84 0.003578728 ubox
72 85 0.019897770 ubox
73 77 0.008457567 ubox
73 80 0.025727528 ubox
73 82 0.004640913 ubox
73 83 0.004804666 ubox
73 84 0.019824646 ubox
76 86 0.004444731 ubox
4 98 0.9500000 lbox
5 97 0.9500000 lbox
7 95 0.9500000 lbox
8 94 0.9500000 lbox
9 93 0.9500000 lbox
10 92 0.9500000 lbox
11 91 0.9500000 lbox
12 90 0.9500000 lbox
13 89 0.9500000 lbox
14 88 0.9500000 lbox
15 87 0.9500000 lbox
26 76 0.9500000 lbox
27 75 0.9500000 lbox
28 74 0.9500000 lbox
29 72 0.9500000 lbox
30 71 0.9500000 lbox
31 70 0.9500000 lbox
32 68 0.9500000 lbox
33 67 0.9500000 lbox
34 66 0.9500000 lbox
35 65 0.9500000 lbox
36 64 0.9500000 lbox
37 49 0.9500000 lbox
38 48 0.9500000 lbox
39 47 0.9500000 lbox
40 46 0.9500000 lbox
41 45 0.9500000 lbox
50 63 0.9500000 lbox
51 62 0.9500000 lbox
52 61 0.9500000 lbox
53 60 0.9500000 lbox
showpage
end
%%EOF
