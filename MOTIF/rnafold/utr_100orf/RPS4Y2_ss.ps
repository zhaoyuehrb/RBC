%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:34:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGAAAUUCUCACUCAUUUGACUUCCCGCUGUUUAUCACCGCAGAUUACGGUUGCACCGUAAAAGGAGAGGUUCUGUUCCGUCGCGGGAUUUCGCCAUGGCCCGGGGCCCCAAGAAGCACUUGAAGCGUGUUGCAGCGCCGAAGCAUUGGAUGCUGGAUAAACUAACUGGUGUAUUUGCACCUCGUCCAUCGACAG\
) } def
/len { sequence length } bind def

/coor [
[319.47061157 617.53631592]
[313.40411377 602.23583984]
[311.95874023 585.82434082]
[315.26388550 569.66809082]
[323.05313110 555.11480713]
[334.68554688 543.38104248]
[327.35882568 530.29211426]
[320.03210449 517.20324707]
[312.70541382 504.11434937]
[297.16555786 495.97140503]
[297.54879761 477.56655884]
[290.01431274 464.59616089]
[276.93099976 457.47741699]
[276.68957520 441.65805054]
[269.15505981 428.68765259]
[261.62057495 415.71725464]
[250.00581360 412.31146240]
[243.62471008 401.55737305]
[246.37084961 388.94720459]
[239.04414368 375.85830688]
[233.02677917 371.55227661]
[231.70686340 362.50173950]
[224.58979797 349.29766846]
[217.47274780 336.09359741]
[210.35568237 322.88952637]
[194.94766235 314.49981689]
[195.62435913 296.10342407]
[188.29765320 283.01452637]
[180.97093201 269.92562866]
[173.64422607 256.83673096]
[166.31752014 243.74783325]
[158.99081421 230.65892029]
[147.58668518 230.01078796]
[137.81326294 223.87007141]
[132.16455078 213.66694641]
[132.14772034 201.88461304]
[137.88281250 191.45516968]
[130.97721863 178.13928223]
[124.07162476 164.82339478]
[118.19463348 160.32766724]
[117.16399384 151.23965454]
[110.47162628 137.81533813]
[92.97964478 138.60530090]
[76.88562775 131.70774841]
[65.39441681 118.49617767]
[60.79425812 101.60144043]
[45.96606445 99.33765411]
[31.13787460 97.07386017]
[16.30968285 94.81007385]
[1.48149109 92.54628754]
[-13.34670067 90.28249359]
[-28.17489243 88.01870728]
[-44.74511337 91.60536194]
[-52.77869415 76.67559814]
[-40.65630722 64.82299805]
[-25.91110229 73.19051361]
[-11.08291149 75.45430756]
[3.74528003 77.71809387]
[18.57347107 79.98188019]
[33.40166092 82.24567413]
[48.22985458 84.50946045]
[63.05804443 86.77324677]
[65.51509857 81.27979279]
[68.78328705 76.22666168]
[72.78574371 71.73271942]
[64.63957977 59.13748169]
[50.64813614 51.75167465]
[50.23311234 36.86285400]
[42.08694839 24.26761627]
[33.94078064 11.67238045]
[25.79461479 -0.92285573]
[17.64844894 -13.51809216]
[9.50228310 -26.11332893]
[1.35611689 -38.70856476]
[-6.79004908 -51.30380249]
[-14.93621540 -63.89903641]
[-23.08238220 -76.49427032]
[-38.58579254 -79.56345367]
[-47.30857468 -92.74254608]
[-44.07565689 -108.21263885]
[-30.80507278 -116.79560089]
[-15.37002468 -113.39930725]
[-6.92785120 -100.03871918]
[-10.48714542 -84.64044189]
[-2.34097910 -72.04520416]
[5.80518723 -59.44996643]
[13.95135307 -46.85473251]
[22.09751892 -34.25949478]
[30.24368477 -21.66425896]
[38.38985062 -9.06902218]
[46.53601837 3.52621436]
[54.68218231 16.12145042]
[62.82835007 28.71668625]
[76.23712158 35.20159912]
[77.23481750 50.99131393]
[85.38098145 63.58655167]
[89.90681458 62.08189774]
[94.58175659 61.13745117]
[99.33676147 60.76716995]
[101.95456696 45.99736786]
[104.57238007 31.22756386]
[107.19018555 16.45775986]
[104.00089264 -0.19350800]
[119.11853790 -7.86769342]
[130.67779541 4.53472281]
[121.95999146 19.07556915]
[119.34217834 33.84537125]
[116.72437286 48.61517334]
[114.10655975 63.38497925]
[114.65383911 63.60055161]
[115.19783020 63.82430267]
[123.54380798 51.36057281]
[131.88978577 38.89683914]
[140.23576355 26.43310738]
[138.54466248 10.47943401]
[150.06411743 -0.68666941]
[165.95738220 1.50047660]
[174.03251648 15.36308098]
[168.09495544 30.26693916]
[152.69949341 34.77908707]
[144.35351562 47.24282074]
[136.00753784 59.70655060]
[127.66156006 72.17028046]
[138.29025269 91.42614746]
[136.88821411 113.37590027]
[123.89593506 131.12297058]
[130.58830261 144.54728699]
[137.38751221 157.91780090]
[144.29310608 171.23368835]
[151.19868469 184.54957581]
[169.45664978 189.57157898]
[178.10835266 206.05606079]
[172.07971191 223.33221436]
[179.40641785 236.42111206]
[186.73312378 249.51002502]
[194.05984497 262.59890747]
[201.38655090 275.68780518]
[208.71325684 288.77673340]
[220.89836121 293.02890015]
[226.72920227 304.09100342]
[223.55975342 315.77246094]
[230.67681885 328.97653198]
[237.79386902 342.18060303]
[244.91093445 355.38467407]
[252.13304138 368.53158569]
[259.45974731 381.62048340]
[275.49520874 390.66198730]
[274.59097290 408.18273926]
[282.12545776 421.15316772]
[289.65997314 434.12356567]
[303.28219604 442.17001343]
[302.98471069 457.06164551]
[310.51919556 470.03207397]
[322.77056885 474.08938599]
[328.77706909 485.05709839]
[325.79431152 496.78762817]
[333.12100220 509.87652588]
[340.44772339 522.96545410]
[347.77444458 536.05432129]
[362.75360107 532.37762451]
[378.15740967 532.83288574]
[392.86791992 537.37994385]
[405.81948853 545.68188477]
[416.07580566 557.13024902]
[422.89770508 570.88928223]
[425.79635620 585.95709229]
[424.56832886 601.23864746]
[419.30984497 615.62524414]
[410.40924072 628.07507324]
[419.90777588 639.68444824]
[429.40634155 651.29382324]
[438.90487671 662.90319824]
[448.40344238 674.51257324]
[463.92584229 679.80285645]
[466.83966064 695.94104004]
[454.14743042 706.32556152]
[438.90579224 700.27374268]
[436.79406738 684.01110840]
[427.29550171 672.40173340]
[417.79696655 660.79241943]
[408.29840088 649.18304443]
[398.79986572 637.57366943]
[395.82312012 639.28985596]
[392.74804688 640.82287598]
[389.58587646 642.16705322]
[393.13986206 656.73992920]
[396.69384766 671.31286621]
[408.40988159 682.78747559]
[404.06906128 698.60168457]
[388.13687134 702.48718262]
[377.00296021 690.44689941]
[382.12097168 674.86682129]
[378.56698608 660.29394531]
[375.01296997 645.72106934]
[358.62692261 645.15100098]
[343.07119751 639.91967773]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 159]
[7 158]
[8 157]
[9 156]
[11 153]
[12 152]
[14 150]
[15 149]
[16 148]
[19 146]
[20 145]
[22 144]
[23 143]
[24 142]
[25 141]
[27 138]
[28 137]
[29 136]
[30 135]
[31 134]
[32 133]
[37 130]
[38 129]
[39 128]
[41 127]
[42 126]
[46 62]
[47 61]
[48 60]
[49 59]
[50 58]
[51 57]
[52 56]
[65 96]
[66 95]
[68 93]
[69 92]
[70 91]
[71 90]
[72 89]
[73 88]
[74 87]
[75 86]
[76 85]
[77 84]
[99 109]
[100 108]
[101 107]
[102 106]
[111 123]
[112 122]
[113 121]
[114 120]
[169 182]
[170 181]
[171 180]
[172 179]
[173 178]
[185 194]
[186 193]
[187 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
