%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:16:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCGGCGCGCGCGUAGGGGCUGGGAGGCCGGCGCGCAGAUCUGGCGGUGAGCGCUGCCGCCCCGGGGCCCCCAGCCAUGUCGGCCGAGGAGAUGGUGCAGAUCCGCCUGGAGGACCGCUGCUACCCGGUGAGCAAGAGGAAGCUCAUCGAGCAGAGCGACUACUUCCGCGCCCUCU\
) } def
/len { sequence length } bind def

/coor [
[85.20077515 341.69223022]
[75.12393188 330.01058960]
[72.98494720 314.73223877]
[79.46636963 300.73242188]
[92.50000000 292.47845459]
[92.50000000 277.47845459]
[92.50000000 262.47845459]
[92.50000000 247.47845459]
[92.50000000 232.47845459]
[92.50000000 217.47845459]
[80.36157990 208.88793945]
[75.55226898 194.62840271]
[80.11502075 180.10136414]
[92.50000000 170.94065857]
[92.50000000 155.94065857]
[92.50000000 140.94065857]
[92.50000000 125.94066620]
[79.76358795 117.87891388]
[73.33281708 104.24612427]
[58.44715118 102.39764404]
[43.56148148 100.54917145]
[28.67581367 98.70069122]
[13.79014492 96.85221863]
[-1.09552383 95.00373840]
[-15.98119259 93.15526581]
[-24.91387177 95.20711517]
[-31.11239052 91.14056396]
[-45.96311951 89.02966309]
[-60.81384659 86.91876984]
[-75.66457367 84.80786896]
[-90.58055115 83.22238922]
[-105.54318237 82.16430664]
[-120.50582123 81.10622406]
[-135.46846008 80.04813385]
[-144.28002930 82.56986237]
[-150.68507385 78.83705139]
[-165.62670898 77.51506042]
[-180.56832886 76.19307709]
[-195.50996399 74.87108612]
[-207.55993652 84.74205780]
[-222.69404602 83.18852997]
[-232.03024292 71.63989258]
[-246.97187805 70.31790161]
[-257.91159058 81.49182129]
[-273.47933960 82.96816254]
[-286.32446289 74.04984283]
[-290.38192749 58.94782639]
[-283.73590088 44.79281235]
[-269.52444458 38.26837540]
[-254.45776367 42.45515442]
[-245.64988708 55.37627411]
[-230.70825195 56.69826126]
[-219.48939514 46.96827316]
[-204.31761169 48.09610748]
[-194.18797302 59.92945862]
[-179.24635315 61.25144577]
[-164.30471802 62.57343292]
[-149.36308289 63.89542007]
[-134.41036987 65.08550262]
[-119.44773102 66.14358521]
[-104.48509979 67.20166779]
[-89.52246094 68.25975800]
[-87.30760956 66.49508667]
[-84.24991608 65.51509857]
[-80.64977264 65.64916229]
[-76.92244720 67.11007690]
[-73.55368042 69.95713806]
[-58.70294952 72.06803894]
[-43.85222244 74.17893982]
[-29.00149345 76.28983307]
[-14.13271713 78.26959991]
[0.75295210 80.11807251]
[15.63862133 81.96655273]
[30.52429008 83.81502533]
[45.40995789 85.66349792]
[60.29562759 87.51197815]
[75.18129730 89.36045074]
[82.69424438 76.74004364]
[96.49081421 69.21923828]
[113.22104645 69.79839325]
[117.90663147 55.54899597]
[122.59220886 41.29959869]
[115.72050476 27.32042122]
[120.67533875 12.93625450]
[134.04469299 6.47127867]
[138.73027039 -7.77811813]
[143.41586304 -22.02751541]
[138.38348389 -41.52730942]
[153.28379822 -53.82331085]
[157.46357727 -68.22919464]
[161.64335632 -82.63507843]
[154.28259277 -96.36302948]
[158.72669983 -110.91310120]
[171.85957336 -117.84587097]
[176.03935242 -132.25175476]
[174.64610291 -149.14836121]
[190.49668884 -155.16459656]
[200.66569519 -141.59892273]
[190.44523621 -128.07197571]
[186.26544189 -113.66609192]
[193.64822388 -100.78082275]
[189.61454773 -86.11167145]
[176.04924011 -78.45529175]
[171.86946106 -64.04940796]
[167.68968201 -49.64353180]
[173.41716003 -41.13689423]
[173.50247192 -30.66220093]
[167.67488098 -21.69437218]
[157.66525269 -17.34193230]
[152.97967529 -3.09253573]
[148.29408264 11.15686131]
[155.21752930 24.29465103]
[150.66867065 38.81231308]
[136.84161377 45.98517990]
[132.15602112 60.23457718]
[127.47044373 74.48397064]
[135.27403259 87.29428101]
[150.08518982 89.66693878]
[164.89636230 92.03960419]
[179.70751953 94.41226196]
[194.55824280 96.52316284]
[209.44390869 98.37163544]
[224.32957458 100.22011566]
[229.19093323 98.15911102]
[233.88282776 98.18669891]
[237.63179016 99.88311005]
[239.94631958 102.58067322]
[254.71328735 105.21435547]
[269.48028564 107.84804535]
[284.24725342 110.48172760]
[299.01422119 113.11541748]
[313.78121948 115.74909973]
[328.54818726 118.38278961]
[343.31518555 121.01647186]
[354.40457153 110.16267395]
[369.76065063 107.93325043]
[383.47869873 115.18547058]
[390.28384399 129.13070679]
[387.55935669 144.40672302]
[376.35290527 155.13960266]
[360.97351074 157.20230103]
[347.33496094 149.80169678]
[340.68148804 135.78344727]
[325.91452026 133.14976501]
[311.14752197 130.51608276]
[296.38055420 127.88239288]
[281.61355591 125.24871063]
[266.84658813 122.61502075]
[252.07960510 119.98133850]
[237.31262207 117.34764862]
[222.48110962 115.10578156]
[207.59544373 113.25730896]
[192.70976257 111.40882874]
[188.43765259 113.60448456]
[182.73728943 113.11860657]
[177.33485413 109.22342682]
[162.52369690 106.85076141]
[147.71253967 104.47810364]
[132.90136719 102.10543823]
[123.37966919 118.77617645]
[107.50000000 125.94066620]
[107.50000000 140.94065857]
[107.50000000 155.94065857]
[107.50000000 170.94065857]
[119.88497925 180.10136414]
[124.44773102 194.62840271]
[119.63842010 208.88793945]
[107.50000000 217.47845459]
[107.50000000 232.47845459]
[107.50000000 247.47845459]
[107.50000000 262.47845459]
[107.50000000 277.47845459]
[107.50000000 292.47845459]
[120.53363037 300.73242188]
[127.01505280 314.73223877]
[124.87606812 330.01058960]
[114.79922485 341.69223022]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 173]
[6 172]
[7 171]
[8 170]
[9 169]
[10 168]
[14 164]
[15 163]
[16 162]
[17 161]
[19 77]
[20 76]
[21 75]
[22 74]
[23 73]
[24 72]
[25 71]
[27 70]
[28 69]
[29 68]
[30 67]
[31 62]
[32 61]
[33 60]
[34 59]
[36 58]
[37 57]
[38 56]
[39 55]
[42 52]
[43 51]
[80 116]
[81 115]
[82 114]
[85 111]
[86 110]
[87 109]
[89 105]
[90 104]
[91 103]
[94 100]
[95 99]
[117 159]
[118 158]
[119 157]
[120 156]
[121 153]
[122 152]
[123 151]
[127 150]
[128 149]
[129 148]
[130 147]
[131 146]
[132 145]
[133 144]
[134 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
