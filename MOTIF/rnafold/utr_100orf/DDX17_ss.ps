%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:22:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUAAGUUGGAGCCGACUCAGCGGCGGCCGCCAUUUUGUGCAGUCGCUGGGAAGGAAGGAGACGCCUAAACCGCGGCACUGCCCGGUUUGAGCGUAGCCAAACCUGCCCACCGGCUUUGUAGCCCCGAUUCUCUGUGUUUUGCUCCCGUCUCCGACGAGAGAGGCGGCGACGGUGGCGUCUGCGACGGGAGACAGCGCGUCGG\
) } def
/len { sequence length } bind def

/coor [
[82.96546936 135.28240967]
[77.76287842 149.35127258]
[72.56028748 163.42015076]
[75.03084564 179.04727173]
[63.35952377 188.30088806]
[58.15693665 202.36975098]
[52.95434570 216.43861389]
[47.75175476 230.50749207]
[42.54916382 244.57635498]
[45.84574127 260.64074707]
[33.40389633 271.32403564]
[18.02273178 265.63616943]
[15.52507305 249.42832947]
[28.48029518 239.37376404]
[33.68288803 225.30490112]
[38.88547516 211.23603821]
[44.08806610 197.16716003]
[49.29065704 183.09829712]
[46.44797134 168.47747803]
[58.49142075 158.21755981]
[63.69400787 144.14868164]
[68.89659882 130.07981873]
[57.65716171 120.14628601]
[44.33426666 127.03833771]
[31.01137161 133.93040466]
[17.68847656 140.82244873]
[4.36557961 147.71450806]
[-8.95731640 154.60656738]
[-17.65947342 167.81954956]
[-32.51880646 166.79515076]
[-45.84170532 173.68719482]
[-59.11113739 180.68164062]
[-72.32631683 187.77804565]
[-83.42030334 200.59832764]
[-98.81069183 193.48690796]
[-96.23767853 176.72935486]
[-79.42272186 174.56285095]
[-66.20754242 167.46646118]
[-61.79937744 161.52911377]
[-52.73376083 160.36430359]
[-39.41086578 153.47224426]
[-31.66165161 140.75222778]
[-15.84937286 141.28367615]
[-2.52647686 134.39161682]
[10.79641914 127.49955750]
[24.11931419 120.60749817]
[37.44221115 113.71544647]
[50.76510620 106.82338715]
[53.63479996 92.10044861]
[43.87552643 80.70938110]
[34.11624908 69.31830597]
[19.26186180 63.87241364]
[16.85700989 49.17323303]
[7.09773588 37.78215790]
[-2.66153884 26.39108467]
[-20.12226105 25.36676216]
[-31.22346497 12.29047489]
[-29.47045708 -4.43319750]
[-39.40398788 -15.67263412]
[-54.93998337 -16.79987717]
[-64.85388947 -28.33977127]
[-63.68349075 -43.14402008]
[-73.61701965 -54.38345718]
[-83.55055237 -65.62289429]
[-93.48408508 -76.86232758]
[-108.42057800 -82.07882690]
[-111.05149841 -96.73922729]
[-120.98503113 -107.97866821]
[-130.91856384 -119.21810150]
[-140.85209656 -130.45753479]
[-150.78562927 -141.69697571]
[-160.71916199 -152.93641663]
[-170.65269470 -164.17584229]
[-178.68536377 -168.53688049]
[-180.65103149 -175.66569519]
[-190.41030884 -187.05677795]
[-200.16957092 -198.44784546]
[-215.06642151 -206.54229736]
[-211.41217041 -223.09774780]
[-194.49211121 -224.16929626]
[-188.77850342 -208.20712280]
[-179.01922607 -196.81604004]
[-169.25994873 -185.42497253]
[-159.41325378 -174.10937500]
[-149.47972107 -162.86994934]
[-139.54618835 -151.63050842]
[-129.61265564 -140.39106750]
[-119.67913055 -129.15164185]
[-109.74559784 -117.91220093]
[-99.81206512 -106.67276001]
[-85.58609009 -102.26018524]
[-82.24465179 -86.79586029]
[-72.31111908 -75.55642700]
[-62.37758636 -64.31698608]
[-52.44405365 -53.07755280]
[-37.60818481 -52.41980743]
[-27.37406158 -41.16292953]
[-28.16455269 -25.60616684]
[-18.23101997 -14.36672974]
[-5.38244390 -15.38018608]
[5.87094212 -8.70717716]
[11.30461788 3.40783310]
[8.72953510 16.63181114]
[18.48880959 28.02288437]
[28.24808311 39.41395950]
[42.40442276 44.04508209]
[45.50732422 59.55902863]
[55.26659775 70.95010376]
[65.02587128 82.34117889]
[76.38557434 70.57733154]
[91.04611969 64.84758759]
[106.14843750 65.72451782]
[118.96337128 72.54152679]
[126.26244354 59.43718719]
[133.56150818 46.33285141]
[140.86058044 33.22851562]
[140.06715393 16.84857368]
[154.00048828 8.20019817]
[168.32714844 16.18009758]
[168.30909729 32.57923508]
[153.96490479 40.52758408]
[146.66584778 53.63191986]
[139.36677551 66.73625183]
[132.06770325 79.84059143]
[137.37847900 93.86898041]
[151.52578735 98.85430145]
[165.67311096 103.83963013]
[179.82041931 108.82495117]
[193.96774292 113.81027222]
[189.97348022 99.35185242]
[198.65869141 87.12209320]
[213.62582397 86.12950897]
[223.84997559 97.10523987]
[221.80000305 111.96449280]
[208.98617554 119.76184082]
[222.70808411 125.82065582]
[236.42999268 131.87947083]
[250.15190125 137.93829346]
[256.76409912 137.60725403]
[261.79321289 140.26898193]
[264.19857788 144.40078735]
[277.72738647 150.87928772]
[291.30569458 157.25343323]
[304.93267822 163.52284241]
[318.55966187 169.79225159]
[332.18664551 176.06164551]
[345.81359863 182.33105469]
[359.44058228 188.60046387]
[373.06756592 194.86987305]
[386.69454956 201.13926697]
[392.48306274 195.99012756]
[399.41503906 192.59136963]
[406.97760010 191.17842102]
[414.61544800 191.84034729]
[421.77169800 194.51440430]
[427.92846680 198.99165344]
[432.64431763 204.93327332]
[435.58596802 211.89608765]
[436.55172729 219.36567688]
[435.48532104 226.79435730]
[448.35867310 234.49351501]
[461.23202515 242.19265747]
[477.04702759 242.63565063]
[483.99847412 255.80859375]
[496.87182617 263.50775146]
[512.68682861 263.95071411]
[519.63830566 277.12365723]
[532.51165771 284.82281494]
[548.90826416 284.53421021]
[557.12347412 298.72723389]
[548.70611572 312.80136108]
[532.31530762 312.27832031]
[524.81250000 297.69616699]
[511.93914795 289.99700928]
[497.04492188 290.10473633]
[489.17266846 276.38110352]
[476.29934692 268.68194580]
[461.40512085 268.78964233]
[453.53286743 255.06600952]
[440.65951538 247.36685181]
[427.78616333 239.66770935]
[406.66253662 247.50663757]
[386.40402222 237.04620361]
[380.42514038 214.76625061]
[366.79815674 208.49684143]
[353.17117310 202.22744751]
[339.54421997 195.95803833]
[325.91723633 189.68862915]
[312.29025269 183.41921997]
[298.66326904 177.14982605]
[285.03628540 170.88041687]
[277.64166260 170.94067383]
[271.24890137 164.40811157]
[257.72006226 157.92959595]
[244.09309387 151.66020203]
[230.37118530 145.60137939]
[216.64927673 139.54257202]
[202.92736816 133.48374939]
[188.98242188 127.95758820]
[174.83509827 122.97226715]
[160.68778992 117.98694611]
[146.54046631 113.00162506]
[132.39315796 108.01629639]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 22]
[2 21]
[3 20]
[5 18]
[6 17]
[7 16]
[8 15]
[9 14]
[23 48]
[24 47]
[25 46]
[26 45]
[27 44]
[28 43]
[30 41]
[31 40]
[32 38]
[33 37]
[49 109]
[50 108]
[51 107]
[53 105]
[54 104]
[55 103]
[58 99]
[59 98]
[62 95]
[63 94]
[64 93]
[65 92]
[67 90]
[68 89]
[69 88]
[70 87]
[71 86]
[72 85]
[73 84]
[75 83]
[76 82]
[77 81]
[113 124]
[114 123]
[115 122]
[116 121]
[125 203]
[126 202]
[127 201]
[128 200]
[129 199]
[135 198]
[136 197]
[137 196]
[138 195]
[141 194]
[142 193]
[143 191]
[144 190]
[145 189]
[146 188]
[147 187]
[148 186]
[149 185]
[150 184]
[160 181]
[161 180]
[162 179]
[164 177]
[165 176]
[167 174]
[168 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
