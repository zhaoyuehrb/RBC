%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:55:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCCAUGCACAUCACUCCCAGGUGCCCUAGGGGGCACAUUUCCCACAACUCCCAGAGGGCAGGUUUCUAGAAAGUGCCACCAGUGGGGAGGCGCCACAACUUCACUGCCAUUUUGUGAGGUGCCGCCGUCUCUCCUCCAGCAAGGUCAGGACUUCAGGACUGAAACAAUGACCGAUAAAACAGAGAAGGUGGCUGUAGAUCCUGAAACUGUGUUUAAACGUCCCAGGGAAUGUGACAGUCCUUCGUAUCAGAA\
AAGGCAGAGGAUGG\
) } def
/len { sequence length } bind def

/coor [
[2.71481371 189.06057739]
[-10.52939987 196.10264587]
[-23.77361488 203.14471436]
[-37.01782990 210.18679810]
[-50.26204300 217.22886658]
[-63.50625610 224.27093506]
[-76.75047302 231.31301880]
[-89.99468231 238.35508728]
[-103.02848053 245.77938843]
[-115.84082794 253.57962036]
[-128.65316772 261.37988281]
[-141.46551514 269.18011475]
[-136.71669006 283.47186279]
[-135.26811218 298.45486450]
[-137.18923950 313.37734985]
[-142.38053894 327.49130249]
[-150.57862854 340.09002686]
[-161.36965942 350.54336548]
[-174.21018982 358.32943726]
[-188.45458984 363.06045532]
[-203.38742065 364.50219727]
[-218.25947571 362.58557129]
[-232.32528687 357.40988159]
[-244.88053894 349.23773193]
[-255.29730225 338.48165894]
[-268.10964966 346.28189087]
[-280.92199707 354.08215332]
[-293.73434448 361.88238525]
[-306.54669189 369.68261719]
[-319.35903931 377.48287964]
[-327.83627319 393.84811401]
[-345.39746094 393.53109741]
[-358.11819458 401.47985840]
[-370.83892822 409.42864990]
[-383.55963135 417.37744141]
[-396.28036499 425.32623291]
[-393.73696899 440.31289673]
[-397.12719727 455.13095093]
[-405.93408203 467.52075195]
[-418.81460571 475.59298706]
[-433.80456543 478.11663818]
[-448.61816406 474.70690918]
[-460.99636841 465.88375854]
[-469.05163574 452.99264526]
[-471.55560303 437.99935913]
[-468.12637329 423.19027710]
[-459.28695679 410.82366943]
[-446.38525391 402.78536987]
[-431.38867188 400.30114746]
[-416.58410645 403.74981689]
[-404.22915649 412.60552979]
[-391.50842285 404.65673828]
[-378.78771973 396.70794678]
[-366.06698608 388.75915527]
[-353.34625244 380.81036377]
[-350.33212280 369.11837769]
[-339.82995605 362.38638306]
[-327.15927124 364.67053223]
[-314.34692383 356.87026978]
[-301.53457642 349.07003784]
[-288.72222900 341.26980591]
[-275.90988159 333.46954346]
[-263.09753418 325.66931152]
[-267.86965942 311.47674561]
[-269.36447144 296.57092285]
[-267.50372314 281.69903564]
[-262.37762451 267.60739136]
[-254.24018860 255.00381470]
[-243.49684143 244.52212524]
[-230.68415833 236.69033813]
[-216.44302368 231.90394592]
[-201.48666382 230.40608215]
[-186.56484985 232.27505493]
[-172.42636108 237.42031860]
[-159.78135681 245.58683777]
[-149.26576233 256.36776733]
[-136.45341492 248.56752014]
[-123.64106750 240.76727295]
[-110.82872009 232.96704102]
[-124.64600372 227.12899780]
[-128.81152344 212.71897888]
[-120.24030304 200.40905762]
[-105.28018951 199.31596375]
[-95.01064301 210.24923706]
[-97.03675842 225.11087036]
[-83.79254150 218.06880188]
[-70.54833221 211.02671814]
[-57.30411530 203.98464966]
[-44.05990219 196.94258118]
[-30.81568718 189.90049744]
[-17.57147408 182.85842896]
[-4.32726002 175.81636047]
[-5.28212166 158.26203918]
[1.97213602 142.17024231]
[15.86987495 131.17303467]
[33.33800888 127.78553009]
[50.47541428 132.83087158]
[60.51237106 121.68370056]
[70.54933167 110.53652191]
[80.58628845 99.38935089]
[82.06740570 84.46265411]
[74.41676331 71.56041718]
[66.76612854 58.65818024]
[59.11548615 45.75594330]
[51.46484756 32.85370636]
[43.81420898 19.95146942]
[36.16357040 7.04923201]
[20.74282837 6.59729052]
[8.02733803 -2.13883352]
[2.07456732 -16.37147522]
[4.78402281 -31.55904770]
[15.29112816 -42.85525513]
[30.24310303 -46.65551758]
[44.86882782 -41.74718475]
[54.50128555 -29.69648743]
[56.06679535 -14.34875965]
[49.06580734 -0.60140675]
[56.71644592 12.30083084]
[64.36708832 25.20306778]
[72.01772308 38.10530472]
[79.66836548 51.00754166]
[87.31900024 63.90977859]
[94.96964264 76.81201935]
[109.96735382 77.07379913]
[118.06361389 64.44642639]
[126.15987396 51.81905365]
[134.25613403 39.19168091]
[142.35240173 26.56430626]
[150.44865417 13.93693256]
[151.38385010 -1.85660982]
[164.76686096 -8.39453220]
[172.86311340 -21.02190590]
[180.95938110 -33.64928055]
[189.05563354 -46.27665329]
[197.15190125 -58.90402985]
[188.06501770 -69.19372559]
[181.95411682 -81.47203064]
[179.22908020 -94.90054321]
[180.06889343 -108.56423950]
[184.40982056 -121.53382111]
[191.95025635 -132.92887878]
[202.17164612 -141.97769165]
[214.37411499 -148.06947327]
[227.72444153 -150.79563904]
[241.31291199 -149.97712708]
[254.21531677 -145.67622375]
[262.60321045 -158.11178589]
[270.99108887 -170.54734802]
[279.37899780 -182.98291016]
[287.76687622 -195.41847229]
[281.15429688 -209.21052551]
[282.32525635 -224.36062622]
[290.86550903 -236.80775452]
[304.39883423 -243.26570129]
[319.24755859 -242.09046936]
[327.63543701 -254.52603149]
[336.02334595 -266.96160889]
[344.41122437 -279.39715576]
[345.01480103 -295.78518677]
[359.63363647 -303.21633911]
[373.22912598 -294.04605103]
[371.81542969 -277.70794678]
[356.84680176 -271.00927734]
[348.45889282 -258.57369995]
[340.07101440 -246.13813782]
[331.68310547 -233.70257568]
[338.33517456 -220.37533569]
[337.41714478 -205.40826416]
[329.07562256 -192.82711792]
[315.46734619 -186.06608582]
[300.20245361 -187.03057861]
[291.81454468 -174.59501648]
[283.42666626 -162.15945435]
[275.03875732 -149.72389221]
[266.65087891 -137.28833008]
[276.91311646 -124.57971954]
[282.74652100 -109.30213165]
[283.56784058 -92.95067596]
[279.28491211 -77.12937164]
[270.30685425 -63.39384079]
[257.50506592 -53.09831238]
[242.12857056 -47.26212311]
[225.68217468 -46.46880722]
[209.77928162 -50.80776978]
[201.68301392 -38.18039322]
[193.58676147 -25.55302048]
[185.49049377 -12.92564583]
[177.39424133 -0.29827198]
[177.03813171 14.59207630]
[163.07603455 22.03319168]
[154.97976685 34.66056442]
[146.88351440 47.28794098]
[138.78724670 59.91531372]
[130.69099426 72.54268646]
[122.59472656 85.17005920]
[125.11883545 92.23255920]
[138.27786255 85.03255463]
[151.27917480 77.55152130]
[163.27189636 86.56121826]
[159.70690918 101.13142395]
[144.90876770 103.58596802]
[130.16705322 106.35755920]
[132.69116211 113.42005920]
[146.95700073 118.05531311]
[161.22285461 122.69056702]
[175.48869324 127.32582092]
[189.44352722 120.40480804]
[203.84509277 125.30883789]
[210.35722351 138.65528870]
[224.62307739 143.29054260]
[233.71528625 142.96374512]
[239.02738953 148.06361389]
[253.23834229 152.86454773]
[267.28964233 145.63014221]
[282.31521606 150.52990723]
[289.40063477 164.65689087]
[284.34228516 179.62982178]
[270.14117432 186.56552124]
[255.22256470 181.34915161]
[248.43740845 167.07550049]
[234.22645569 162.27456665]
[219.98782349 157.55639648]
[205.72196960 152.92114258]
[192.60870361 159.89091492]
[178.07507324 155.39332581]
[170.85343933 141.59167480]
[156.58760071 136.95642090]
[142.32174683 132.32116699]
[128.05589294 127.68590546]
[113.15425110 129.93382263]
[100.93619537 125.96005249]
[93.54261780 118.14232635]
[91.73346710 109.42631531]
[81.69650269 120.57348633]
[71.65954590 131.72065735]
[61.62258530 142.86782837]
[67.86165619 156.71377563]
[68.13358307 171.82244873]
[62.45388031 185.74395752]
[51.79831696 196.24440002]
[57.41741562 210.15216064]
[63.03651428 224.05990601]
[68.65560913 237.96766663]
[74.27471161 251.87542725]
[79.89380646 265.78317261]
[92.23734283 275.68005371]
[89.83116150 290.37899780]
[95.45026398 304.28677368]
[110.67064667 306.34481812]
[122.81302643 315.75003052]
[128.61117554 329.97244263]
[126.50542450 345.18630981]
[117.06219482 357.29913330]
[102.82167816 363.05267334]
[87.61450195 360.89926147]
[75.53131104 351.41809082]
[69.82244110 337.15963745]
[72.02352905 321.95925903]
[81.54250336 309.90585327]
[75.92340851 295.99810791]
[63.98178864 287.09603882]
[65.98605347 271.40228271]
[60.36695480 257.49453735]
[54.74785233 243.58676147]
[49.12875366 229.67901611]
[43.50965500 215.77125549]
[37.89055634 201.86349487]
[28.12038803 202.33193970]
[18.56784630 200.22846985]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 92]
[2 91]
[3 90]
[4 89]
[5 88]
[6 87]
[7 86]
[8 85]
[9 79]
[10 78]
[11 77]
[12 76]
[25 63]
[26 62]
[27 61]
[28 60]
[29 59]
[30 58]
[32 55]
[33 54]
[34 53]
[35 52]
[36 51]
[97 236]
[98 235]
[99 234]
[100 233]
[101 123]
[102 122]
[103 121]
[104 120]
[105 119]
[106 118]
[107 117]
[124 195]
[125 194]
[126 193]
[127 192]
[128 191]
[129 190]
[131 188]
[132 187]
[133 186]
[134 185]
[135 184]
[146 175]
[147 174]
[148 173]
[149 172]
[150 171]
[155 166]
[156 165]
[157 164]
[158 163]
[203 229]
[204 228]
[205 227]
[206 226]
[209 223]
[210 222]
[212 221]
[213 220]
[240 267]
[241 266]
[242 265]
[243 264]
[244 263]
[245 262]
[247 260]
[248 259]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
