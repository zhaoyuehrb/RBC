%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:26:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGGGCGGUGCGGGGCGGAAGUGGGCGGCUGCGGGACGCGCGCGGAGUCGCGCGGCGGGCGGGACCUGGCCGAGCUGGAGGGCGCCGGGGAGCGGGGCUCGGGCGGUCCCCGAGGCCCGGCGGAGCGGGCUUCUGGGGUGUCUGCGGCGGCGCCGGGGGAACGGG\
) } def
/len { sequence length } bind def

/coor [
[125.88359070 384.47985840]
[123.91403961 369.60971069]
[121.94448853 354.73959351]
[112.60304260 343.13842773]
[118.46134949 328.44180298]
[116.49179840 313.57168579]
[114.52225494 298.70153809]
[112.55270386 283.83142090]
[103.21125793 272.23025513]
[109.06956482 257.53363037]
[107.10001373 242.66349792]
[105.13046265 227.79336548]
[96.45248413 222.29992676]
[92.16193390 212.72673035]
[93.90773773 202.15914917]
[101.34880829 194.15188599]
[99.93998718 179.21820068]
[98.53117371 164.28450012]
[97.12236023 149.35081482]
[95.71354675 134.41711426]
[81.17416382 129.12901306]
[70.38078308 118.04476166]
[56.18630600 122.89418030]
[41.99182892 127.74359131]
[31.43417358 139.52690125]
[16.88895035 136.31976318]
[2.69447374 141.16918945]
[-11.50000286 146.01860046]
[-15.09702396 161.02076721]
[-26.24961472 171.68019104]
[-41.39902496 174.59547424]
[-55.71113205 168.83638000]
[-64.61899567 156.24061584]
[-65.28014374 140.82742310]
[-57.48361588 127.51511383]
[-43.71724701 120.55158997]
[-28.37384033 122.15888214]
[-16.34941864 131.82412720]
[-2.15494251 126.97470856]
[12.03953362 122.12528992]
[21.58190536 110.68884277]
[37.14241409 113.54911804]
[51.33688736 108.69969940]
[65.53136444 103.85028076]
[64.04358673 97.50094604]
[63.75970840 90.74539948]
[64.77600098 83.81748962]
[67.14250183 76.97206879]
[54.54454422 68.83010864]
[41.94658279 60.68815231]
[26.15653419 59.69573975]
[19.66714096 46.28913498]
[7.06918383 38.14717865]
[-5.52877474 30.00522232]
[-21.45280266 31.95584106]
[-32.80496979 20.61971092]
[-30.87686729 4.69294119]
[-17.14756775 -3.60681295]
[-2.14901733 2.08730888]
[2.61318159 17.40726280]
[15.21113968 25.54921913]
[27.80909729 33.69117737]
[42.69805908 34.10122299]
[50.08853912 48.09019470]
[62.68649673 56.23215103]
[75.28445435 64.37410736]
[88.90216827 58.08460236]
[90.87171936 43.21446991]
[92.84127045 28.34433556]
[86.98296356 13.64770889]
[96.32440948 2.04655957]
[98.29396057 -12.82357407]
[100.26350403 -27.69370842]
[102.23305511 -42.56384277]
[104.20260620 -57.43397522]
[106.17215729 -72.30410767]
[108.14170074 -87.17424011]
[99.69000244 -93.80692291]
[94.81180573 -103.28812408]
[94.33610535 -113.85897827]
[98.28213501 -123.58988190]
[105.86811066 -130.73272705]
[115.66513824 -134.03485107]
[118.47031403 -148.77021790]
[107.74616241 -159.98503113]
[105.69540405 -175.36599731]
[113.10661316 -188.99880981]
[127.13001251 -195.64138794]
[142.37333679 -192.73950195]
[152.97520447 -181.40901184]
[154.85897827 -166.00671387]
[147.30032349 -152.45509338]
[133.20568848 -145.96504211]
[130.40051270 -131.22967529]
[142.52401733 -116.02700806]
[139.58000183 -96.49938202]
[123.01184082 -85.20469666]
[121.04228973 -70.33455658]
[119.07273865 -55.46442795]
[117.10318756 -40.59429169]
[115.13364410 -25.72415924]
[113.16409302 -10.85402489]
[111.19454193 4.01610851]
[117.19372559 17.64912415]
[107.71140289 30.31388474]
[105.74185181 45.18401718]
[103.77230072 60.05415344]
[124.09524536 71.39186096]
[133.47235107 90.91633606]
[148.45576477 90.21115112]
[163.43917847 89.50596619]
[178.42259216 88.80077362]
[193.39871216 87.95468903]
[208.36621094 86.96777344]
[223.33370972 85.98085785]
[238.30120850 84.99394989]
[253.26870728 84.00703430]
[268.23620605 83.02011871]
[283.20370483 82.03321075]
[298.17120361 81.04629517]
[308.39721680 68.99623108]
[324.15539551 67.78973389]
[336.09667969 78.14258575]
[337.13650513 93.91262817]
[326.65798950 105.74377441]
[310.87780762 106.61682129]
[299.15811157 96.01379395]
[284.19061279 97.00070953]
[269.22311401 97.98761749]
[254.25563049 98.97453308]
[239.28813171 99.96144867]
[224.32063293 100.94835663]
[209.35313416 101.93527222]
[194.38563538 102.92218781]
[187.89030457 106.51545715]
[179.12779236 103.78418732]
[164.14437866 104.48937988]
[149.16094971 105.19456482]
[134.17753601 105.89974976]
[129.86236572 117.63947296]
[121.66349792 127.08512878]
[110.64723969 133.00830078]
[112.05605316 147.94198608]
[113.46486664 162.87568665]
[114.87368774 177.80938721]
[116.28250122 192.74307251]
[128.70321655 208.58465576]
[120.00059509 225.82382202]
[121.97014618 240.69395447]
[123.93969727 255.56408691]
[133.42201233 268.22885132]
[127.42283630 281.86184692]
[129.39237976 296.73199463]
[131.36193848 311.60214233]
[133.33148193 326.47225952]
[142.81381226 339.13702393]
[136.81462097 352.77005005]
[138.78417969 367.64016724]
[140.75372314 382.51031494]
[154.45983887 389.78503418]
[161.24208069 403.74145508]
[158.49252319 419.01296997]
[147.26841736 429.72741699]
[131.88569641 431.76486206]
[118.25929260 424.34185791]
[111.62886047 410.31271362]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 159]
[2 158]
[3 157]
[5 155]
[6 154]
[7 153]
[8 152]
[10 150]
[11 149]
[12 148]
[16 146]
[17 145]
[18 144]
[19 143]
[20 142]
[22 44]
[23 43]
[24 42]
[26 40]
[27 39]
[28 38]
[48 66]
[49 65]
[50 64]
[52 62]
[53 61]
[54 60]
[67 107]
[68 106]
[69 105]
[71 103]
[72 102]
[73 101]
[74 100]
[75 99]
[76 98]
[77 97]
[83 94]
[84 93]
[109 139]
[110 138]
[111 137]
[112 136]
[113 134]
[114 133]
[115 132]
[116 131]
[117 130]
[118 129]
[119 128]
[120 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
